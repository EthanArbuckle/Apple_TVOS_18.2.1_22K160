uint64_t OUTLINED_FUNCTION_43_24()
{
  uint64_t v0;
  return swift_errorRelease(*(void *)(v0 + 232));
}

uint64_t OUTLINED_FUNCTION_44_26()
{
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v0 + 152) = v1;
  return swift_errorRetain(v1);
}

uint64_t OUTLINED_FUNCTION_48_25@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  return swift_storeEnumTagMultiPayload(v1, v2, 4LL);
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_56_19()
{
}

uint64_t OUTLINED_FUNCTION_58_19()
{
  *(void *)(v1 + 16) = v0;
  *(_BYTE *)(v1 + 56) = 1;
  return swift_errorRetain(v0);
}

uint64_t OUTLINED_FUNCTION_61_19()
{
  return swift_errorRelease(*(void *)(v0 + 152));
}

uint64_t OUTLINED_FUNCTION_62_16@<X0>(uint64_t a1@<X8>)
{
  return swift_release(*(void *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_67_19()
{
  return v0;
}

void OUTLINED_FUNCTION_68_21(unint64_t *a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_69_18(uint64_t a1, uint64_t a2)
{
  return PhoneError.logged()(a2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_77_17()
{
  return swift_getEnumCaseMultiPayload(*(void *)(v0 + 216), *(void *)(v0 + 208));
}

uint64_t OUTLINED_FUNCTION_78_19@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + a1);
  *(void *)(v1 + a1) = v2;
  return swift_release(v3);
}

uint64_t OUTLINED_FUNCTION_80_11(uint64_t a1)
{
  return Future.init(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_82_15()
{
  return type metadata accessor for TaskPriority(0LL);
}

uint64_t OUTLINED_FUNCTION_83_18(uint64_t a1, uint64_t a2)
{
  return _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_86_10()
{
  return swift_task_dealloc(*(void *)(v0 + 192));
}

uint64_t OUTLINED_FUNCTION_87_11()
{
  return swift_task_dealloc(*(void *)(v0 + 216));
}

void OUTLINED_FUNCTION_88_17()
{
}

id OUTLINED_FUNCTION_89_12()
{
  return [v1 *(SEL *)(v0 + 2104)];
}

uint64_t OUTLINED_FUNCTION_91_12(uint64_t a1)
{
  return swift_dynamicCastObjCClass(v1, a1);
}

uint64_t CarPlayRCHFlowProvider.init(app:sharedGlobals:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  return outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a3 + 1));
}

void CarPlayRCHFlowProviding.toAnyRCHFlowProvider()(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a1 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  type metadata accessor for AnyIntentCarPlayRCHFlowProvider(0LL, AssociatedTypeWitness, v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v2, a1);
  AnyIntentCarPlayRCHFlowProvider.__allocating_init<A>(_:)(v3, a1, a2);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for AnyIntentCarPlayRCHFlowProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for AnyIntentCarPlayRCHFlowProvider);
}

uint64_t AnyIntentCarPlayRCHFlowProvider.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(v3, 48LL, 7LL);
  AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(a1, a2, a3);
  return v7;
}

void AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(*v3 + 80LL);
  v3[2] = implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(a1, v7, a2, a3);
  v3[3] = v8;
  uint64_t v9 = implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(a1, v7, a2, a3);
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8LL))(a1, a2);
  v3[4] = v9;
  v3[5] = v11;
  OUTLINED_FUNCTION_16();
}

void (*implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v10 + 40) & ~v10;
  v12 = (char *)swift_allocObject(&unk_410260, v11 + v8, v10 | 7);
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v9, a3);
  return partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
}

void (*implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v10 + 40) & ~v10;
  v12 = (char *)swift_allocObject(&unk_410238, v11 + v8, v10 | 7);
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v9, a3);
  return partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
}

void AnyIntentCarPlayRCHFlowProvider.makeRCHFlow(app:intent:)()
{
}

uint64_t AnyIntentCarPlayRCHFlowProvider.deinit()
{
  return v0;
}

uint64_t AnyIntentCarPlayRCHFlowProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 48LL, 7LL);
}

uint64_t CarPlayRCHFlowProvider.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 8, a1);
}

uint64_t CarPlayRCHFlowProvider.makeRCHFlow(input:)(uint64_t a1)
{
  uint64_t v5 = v1 + 8;
  static PhoneCallRequestSupportPolicy.getSiriKitIntent(input:sharedGlobals:app:intentTypeName:)();
  if (v6)
  {
    uint64_t v7 = v6;
    static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
    if (v8)
    {
      uint64_t v9 = v8;
      swift_retain();
      dispatch thunk of AnyFlow.on(input:)(a1);
      swift_release(v9);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v10 = OUTLINED_FUNCTION_15_1();
      uint64_t v11 = (void *)OUTLINED_FUNCTION_12_1(v10, (uint64_t)static Logger.siriPhone);
      os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
      if (OUTLINED_FUNCTION_10(v13))
      {
        uint64_t v14 = (_WORD *)OUTLINED_FUNCTION_1_0();
        *uint64_t v14 = 0;
        OUTLINED_FUNCTION_2_2(&dword_0, v15, v16, "#CarPlayRCHFlowProvider makeRCHFlow(input): RCHFlow found");
        OUTLINED_FUNCTION_0_2((uint64_t)v14);
      }

      return v9;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v17 = OUTLINED_FUNCTION_15_1();
  v18 = (os_log_s *)OUTLINED_FUNCTION_12_1(v17, (uint64_t)static Logger.siriPhone);
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "#CarPlayRCHFlowProvider makeRCHFlow(input): no RCHFlow found", v20, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v20);
  }

  Input.parse.getter(v21);
  uint64_t v22 = type metadata accessor for Parse(0LL);
  __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v22);
  uint64_t v23 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v23);
  uint64_t v24 = CATWrapperSimple.__allocating_init(options:globals:)(v3, 0LL);
  static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v5, v2);
  uint64_t v26 = v25;
  swift_release(v24);
  uint64_t v27 = outlined destroy of Parse?(v2);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 112LL))(v27);
  swift_release(v26);
  uint64_t v29 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  uint64_t v9 = Flow.eraseToAnyFlow()(v29);
  swift_release(v28);
  return v9;
}

uint64_t outlined destroy of Parse?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void CarPlayRCHFlowProvider.makeRCHFlow(app:intent:)()
{
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = v0 + 8;
  static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
  if (v5)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v6 = OUTLINED_FUNCTION_15_1();
    uint64_t v7 = (void *)OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
    os_log_type_t v9 = static os_log_type_t.debug.getter(v7, v8);
    if (OUTLINED_FUNCTION_10(v9))
    {
      uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_1_0();
      *uint64_t v10 = 0;
      OUTLINED_FUNCTION_2_2(&dword_0, v11, v12, "#CarPlayRCHFlowProvider makeRCHFlow(app, intent): RCHFlow found");
      OUTLINED_FUNCTION_0_2((uint64_t)v10);
    }
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v13 = OUTLINED_FUNCTION_15_1();
    uint64_t v14 = (os_log_s *)OUTLINED_FUNCTION_12_1(v13, (uint64_t)static Logger.siriPhone);
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "#CarPlayRCHFlowProvider: makeRCHFlow(app, intent): no RCHFlow found", v16, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v16);
    }

    uint64_t v17 = type metadata accessor for Parse(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v3, 1LL, 1LL, v17);
    uint64_t v18 = type metadata accessor for StartCallCATsSimple(0LL);
    static CATOption.defaultMode.getter(v18);
    uint64_t v19 = CATWrapperSimple.__allocating_init(options:globals:)(v1, 0LL);
    static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v4, (uint64_t)v3);
    uint64_t v21 = v20;
    swift_release(v19);
    uint64_t v22 = outlined destroy of Parse?((uint64_t)v3);
    uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 112LL))(v22);
    swift_release(v21);
    v25[1] = v23;
    uint64_t v24 = type metadata accessor for SimpleOutputFlowAsync(0LL);
    Flow.eraseToAnyFlow()(v24);
    swift_release(v23);
  }

  OUTLINED_FUNCTION_16();
}

uint64_t type metadata completion function for AnyIntentCarPlayRCHFlowProvider(uint64_t a1)
{
  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 88);
}

uint64_t destroy for CarPlayRCHFlowProvider(void *a1)
{
  uint64_t v1 = a1 + 1;
  swift_release(*a1);
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for CarPlayRCHFlowProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)a1 = *a2;
  uint64_t v4 = a2 + 1;
  __int128 v5 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v5 - 8);
  swift_retain(v3);
  v7(a1 + 8, v4, v6);
  return a1;
}

uint64_t *assignWithCopy for CarPlayRCHFlowProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t *assignWithTake for CarPlayRCHFlowProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  a1[5] = a2[5];
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayRCHFlowProvider(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlayRCHFlowProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

uint64_t type metadata accessor for CarPlayRCHFlowProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CarPlayRCHFlowProvider);
}

void partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)()
{
}

void partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)()
{
}

uint64_t StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)(void *a1, uint64_t a2)
{
  uint64_t v5 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_410288, 56LL);
  outlined init with take of AppSelectionSignalComponent(v8, v5 + 16);
  uint64_t v6 = (*(uint64_t (**)(_BYTE *, uint64_t (*)(), uint64_t, uint64_t))(class metadata base offset for StartCallRCHFlowDelegate
                                                                           + v2
                                                                           + 24))( v9,  partial apply for implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:),  v5,  a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

void specialized BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioSource(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  v62 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (AudioSource?, AudioSource?));
  __chkstk_darwin();
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioSource?);
  __chkstk_darwin();
  uint64_t v63 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v66 = (uint64_t)&v56 - v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v56 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = *(void *)(type metadata accessor for InputOrigin(0LL) - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = (os_log_s *)__chkstk_darwin();
  uint64_t v20 = (char *)&v56 - v19;
  if (a1)
  {
    v67 = v18;
    v64 = v12;
    uint64_t v60 = v5;
    uint64_t v21 = one-time initialization token for siriPhone;
    swift_retain();
    if (v21 != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = swift_retain_n(a1, 4LL);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    int v26 = static os_log_type_t.debug.getter(v24, v25);
    if (os_log_type_enabled(v24, (os_log_type_t)v26))
    {
      int v57 = v26;
      v58 = v8;
      uint64_t v59 = a2;
      uint64_t v27 = swift_slowAlloc(22LL, -1LL);
      uint64_t v28 = swift_slowAlloc(64LL, -1LL);
      uint64_t v56 = v28;
      uint64_t v69 = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v61 = v4;
      uint64_t v29 = CurrentRequest.inputOrigin.getter(v28);
      uint64_t v30 = InputOrigin.rawValue.getter(v29);
      unint64_t v32 = v31;
      (*(void (**)(char *, os_log_s *))(v15 + 8))(v20, v67);
      uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v32, &v69);
      uint64_t v33 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v27 + 4);
      swift_release_n(a1, 2LL);
      uint64_t v34 = swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      CurrentRequest.audioSource.getter(v34);
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1LL, v33) == 1)
      {
        outlined destroy of UUID?((uint64_t)v14, &demangling cache variable for type metadata for AudioSource?);
        unint64_t v35 = 0xE300000000000000LL;
        uint64_t v36 = 6369134LL;
      }

      else
      {
        uint64_t v36 = AudioSource.aceValue.getter();
        unint64_t v35 = v42;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v33);
      }

      uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v35, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v27 + 14);
      swift_release_n(a1, 2LL);
      swift_bridgeObjectRelease();
      _os_log_impl( &dword_0,  v24,  (os_log_type_t)v57,  "#TipKitDiscoverabilitySending InputOrigin: %s, AudioSource: %s",  (uint8_t *)v27,  0x16u);
      uint64_t v43 = v56;
      swift_arrayDestroy(v56, 2LL);
      swift_slowDealloc(v43, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);

      uint64_t v8 = v58;
      uint64_t v4 = v61;
    }

    else
    {

      uint64_t v41 = swift_release_n(a1, 4LL);
    }

    CurrentRequest.inputOrigin.getter(v41);
    char v44 = InputOrigin.isVoiceTrigger.getter();
    uint64_t v45 = (*(uint64_t (**)(char *, os_log_s *))(v15 + 8))(v17, v67);
    uint64_t v46 = (uint64_t)v64;
    if ((v44 & 1) == 0) {
      goto LABEL_24;
    }
    uint64_t v47 = CurrentRequest.audioSource.getter(v45);
    uint64_t v48 = v66;
    static AudioSource.bluetoothDoAPDevice.getter(v47);
    __swift_storeEnumTagSinglePayload(v48, 0LL, 1LL, v4);
    uint64_t v49 = (uint64_t)&v8[*(int *)(v65 + 48)];
    outlined init with copy of Result<TemplatingResult, Error>( v46,  (uint64_t)v8,  &demangling cache variable for type metadata for AudioSource?);
    outlined init with copy of Result<TemplatingResult, Error>( v48,  v49,  &demangling cache variable for type metadata for AudioSource?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v4) == 1)
    {
      outlined destroy of UUID?(v48, &demangling cache variable for type metadata for AudioSource?);
      outlined destroy of UUID?(v46, &demangling cache variable for type metadata for AudioSource?);
      if (__swift_getEnumTagSinglePayload(v49, 1LL, v4) == 1)
      {
        outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for AudioSource?);
LABEL_23:
        BiomeEventSender.donateTipKitEvent(_:)(PhoneCallFlowDelegatePlugin_PhoneDiscoverabilityEvent_callWithAirPods);
        goto LABEL_24;
      }
    }

    else
    {
      uint64_t v50 = v63;
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v8,  v63,  &demangling cache variable for type metadata for AudioSource?);
      if (__swift_getEnumTagSinglePayload(v49, 1LL, v4) != 1)
      {
        uint64_t v51 = v60;
        v52 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v62, v49, v4);
        lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type AudioSource and conformance AudioSource,  (uint64_t (*)(uint64_t))&type metadata accessor for AudioSource,  (uint64_t)&protocol conformance descriptor for AudioSource);
        char v53 = dispatch thunk of static Equatable.== infix(_:_:)(v50, v52, v4);
        uint64_t v54 = v4;
        v55 = *(void (**)(char *, uint64_t))(v51 + 8);
        v55(v52, v54);
        outlined destroy of UUID?(v66, &demangling cache variable for type metadata for AudioSource?);
        outlined destroy of UUID?(v46, &demangling cache variable for type metadata for AudioSource?);
        v55((char *)v50, v54);
        outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for AudioSource?);
        if ((v53 & 1) != 0) {
          goto LABEL_23;
        }
LABEL_24:
        swift_release(a1);
        return;
      }

      outlined destroy of UUID?(v66, &demangling cache variable for type metadata for AudioSource?);
      outlined destroy of UUID?(v46, &demangling cache variable for type metadata for AudioSource?);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v50, v4);
    }

    outlined destroy of UUID?( (uint64_t)v8,  &demangling cache variable for type metadata for (AudioSource?, AudioSource?));
    goto LABEL_24;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v37 = type metadata accessor for Logger(0LL);
  uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
  v67 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v40 = 0;
    _os_log_impl( &dword_0,  v67,  v39,  "#TipKitDiscoverabilitySending Cannot find CurrentRequest, not donating to Biome",  v40,  2u);
    swift_slowDealloc(v40, -1LL, -1LL);
  }
}

uint64_t specialized LazyContainer.init(load:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue,  &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v23 = 0x5F797A614CLL;
  unint64_t v24 = 0xE500000000000000LL;
  uint64_t v22 = type metadata accessor for StartCallCatTemplatingService(0LL);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StartCallCatTemplatingService.Type);
  v14._countAndFlagsBits = String.init<A>(describing:)(&v22, v13);
  String.append(_:)(v14);
  uint64_t v15 = swift_bridgeObjectRelease();
  uint64_t v16 = v23;
  unint64_t v17 = v24;
  uint64_t v18 = static OS_dispatch_queue.Attributes.concurrent.getter(v15);
  static DispatchQoS.unspecified.getter(v18);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v5);
  uint64_t v19 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v16, v17, v10, v12, v8, 0LL);
  *(_BYTE *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0LL;
  *(void *)(v3 + 16) = v19;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = v21;
  return v3;
}

void static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void), uint64_t a8)
{
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v15 = OUTLINED_FUNCTION_51_16();
  specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)( v15,  v16,  v17,  v18,  v19,  a6,  a7,  a8,  v8,  v13,  v14);
}

void StartCallRCHFlowDelegate.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

void StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:templatingService:appResolved:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void StartCallRCHFlowDelegate.init(sharedGlobals:templatingService:appResolved:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a1,  v5 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4102B0, 32LL);
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LazyContainer<StartCallCatTemplatingService>);
  OUTLINED_FUNCTION_8_2(v11, 56LL);
  swift_retain();
  swift_retain();
  *(void *)(v5 + direct field offset for StartCallRCHFlowDelegate.dialogTemplatingContainer) = specialized LazyContainer.init(load:)( (uint64_t)partial apply for implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:templatingService:appResolved:),  v10);
  *(void *)(v5 + direct field offset for StartCallRCHFlowDelegate.appResolved) = a4;
  swift_retain();
  uint64_t v12 = swift_release(v5);
  uint64_t v13 = BaseRCHFlowDelegate.init()(v12);
  swift_retain();
  StartCallRCHFlowDelegate.prewarm()();
  id v14 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v14 addObserver:v13 selector:"reloadSiriLanguage" name:AFLanguageCodeDidChangeNotification object:0];
  swift_release(a3);
  swift_release(a4);

  swift_release(v13);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_16();
}

uint64_t implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:)(uint64_t a1)
{
  uint64_t v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)v13);
  uint64_t v4 = type metadata accessor for StartCallCATs(0LL);
  static CATOption.defaultMode.getter(v4);
  CATWrapper.__allocating_init(options:globals:)(v3, 0LL);
  uint64_t v5 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  static CATOption.defaultMode.getter(v5);
  CATWrapper.__allocating_init(options:globals:)(v3, 0LL);
  uint64_t v6 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v6);
  CATWrapper.__allocating_init(options:globals:)(v3, 0LL);
  uint64_t v7 = type metadata accessor for UnsupportedFlowCATs(0LL);
  static CATOption.defaultMode.getter(v7);
  CATWrapper.__allocating_init(options:globals:)(v3, 0LL);
  uint64_t v8 = type metadata accessor for AppInfoBuilder();
  swift_allocObject(v8, 16LL, 7LL);
  uint64_t v9 = type metadata accessor for TemplatingOperationManager();
  swift_allocObject(v9, 56LL, 7LL);
  TemplatingOperationManager.init()();
  uint64_t v10 = type metadata accessor for StartCallCatTemplatingService(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)();
}

uint64_t sub_22D250()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t partial apply for implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:)()
{
  return implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:appResolved:)(v0 + 16);
}

void StartCallRCHFlowDelegate.prewarm()()
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v18 = *(void *)(v2 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v3 = OUTLINED_FUNCTION_24_41();
  uint64_t v4 = type metadata accessor for DispatchQoS(v3);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  static Signpost.event(_:)();
  OUTLINED_FUNCTION_49( v11,  (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue,  &OBJC_CLASS___OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v1, enum case for DispatchQoS.QoSClass.default(_:), v9);
  uint64_t v12 = (void *)static OS_dispatch_queue.global(qos:)(v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v9);
  v20[4] = closure #1 in StartCallRCHFlowDelegate.prewarm();
  v20[5] = 0LL;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256LL;
  v20[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  v20[3] = &block_descriptor_6;
  uint64_t v13 = _Block_copy(v20);
  static DispatchQoS.unspecified.getter(v13);
  uint64_t v19 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v15 = v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  unint64_t v17 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v16, v17, v2, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8);
  _Block_release(v13);

  OUTLINED_FUNCTION_41_2(v0, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in StartCallRCHFlowDelegate.prewarm()()
{
  uint64_t v1 = v0;
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(AFDefaultLanguageCode);
  static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(INPersonHandleLabelHome, v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Signpost.OpenSignpost.end()();
  return swift_release(v1);
}

uint64_t StartCallRCHFlowDelegate.makeAceViewProvider()()
{
  uint64_t v2 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()(v1);
  outlined init with copy of SharedGlobalsProviding( v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v7);
  uint64_t v3 = type metadata accessor for StartCallAceViewProvider(0LL);
  OUTLINED_FUNCTION_15_2(v3);
  StartCallAceViewProvider.init(templatingService:isDirectInvocation:sharedGlobals:)(v2, 1, v7);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_7_90();
  OUTLINED_FUNCTION_22();
  return v5;
}

uint64_t StartCallRCHFlowDelegate.makeNLContextProvider()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v4, &v3);
  OUTLINED_FUNCTION_7_90();
  OUTLINED_FUNCTION_22();
  return v1;
}

void *StartCallRCHFlowDelegate.makeDialogTemplating()()
{
  (*(void (**)(void **__return_ptr))(**(void **)(v0
                                                              + direct field offset for StartCallRCHFlowDelegate.dialogTemplatingContainer)
                                                + 184LL))(&v8);
  uint64_t v1 = v8;
  uint64_t v2 = *(void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v3 = *(void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals),  v2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 72);
  swift_retain();
  uint64_t v5 = v4(v2, v3);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 128LL))(v5);
  swift_release(v5);
  specialized BidirectionalCollection.last.getter(v6, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (v9[3] == 1LL)
  {
    outlined destroy of UUID?( (uint64_t)&v8,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    memset(v10, 0, sizeof(v10));
    uint64_t v11 = 0LL;
  }

  else
  {
    outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v9,  (uint64_t)v10,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined destroy of TransformationResult((uint64_t)&v8);
  }

  (*(void (**)(_OWORD *))(class metadata base offset for PhoneCallBaseCatTemplatingService + *v1 + 96))(v10);
  swift_release(v1);
  OUTLINED_FUNCTION_7_90();
  OUTLINED_FUNCTION_22();
  return v1;
}

Swift::Void __swiftcall StartCallRCHFlowDelegate.reloadSiriLanguage()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v2, (uint64_t)static Logger.siriPhone);
  os_log_type_t v3 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v4 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v0, v1, "siriLanguage changed", v4);
    OUTLINED_FUNCTION_0_2((uint64_t)v4);
  }

  (*(void (**)(void))(**(void **)((char *)v0
                                  + direct field offset for StartCallRCHFlowDelegate.dialogTemplatingContainer)
                    + 192LL))();
}

uint64_t @objc StartCallRCHFlowDelegate.reloadSiriLanguage()(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t StartCallRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v2, (uint64_t)static Logger.siriPhone);
  os_log_type_t v3 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_93(v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v4 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v0, v1, "#StartCallRCHFlowDelegate makeIntentFromParse", v4);
    OUTLINED_FUNCTION_0_2((uint64_t)v4);
  }

  outlined init with copy of SharedGlobalsProviding( (uint64_t)v0 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v13);
  uint64_t v5 = *(void *)((char *)v0 + direct field offset for StartCallRCHFlowDelegate.appResolved);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFromParseFlowStrategyHelper<INStartCallIntent>);
  uint64_t inited = swift_initStackObject(v6, v12);
  outlined init with take of AppSelectionSignalComponent(v13, inited + 24);
  *(void *)(inited + 16) = v5;
  UsoEntity_common_Person.usoPerson.getter();
  specialized IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)();
  uint64_t v9 = v8;
  uint64_t v10 = swift_setDeallocating(inited);
  specialized IntentFromParseFlowStrategyHelper.__deallocating_deinit(v10);
  return v9;
}

void StartCallRCHFlowDelegate.makeConfirmationStateFromParse(parse:)()
{
  v121 = v0;
  uint64_t v122 = v3;
  v123 = (uint8_t *)v4;
  uint64_t v106 = type metadata accessor for USOParse(0LL);
  uint64_t v109 = *(void *)(v106 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v104 = v5;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v110 = (uint64_t)&v103 - v6;
  uint64_t v7 = type metadata accessor for SiriKitConfirmationState(0LL);
  uint64_t v119 = *(void *)(v7 - 8);
  uint64_t v120 = v7;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v105 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  v112 = v9;
  uint64_t v10 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v114 = *(void *)(v10 - 8);
  uint64_t v115 = v10;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v113 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v107 = (uint64_t)&v103 - v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v108 = (uint64_t)&v103 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v111 = v14;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v118 = (uint64_t)&v103 - v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  v117 = (uint64_t *)((char *)&v103 - v16);
  uint64_t v116 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v17 = *(void *)(v116 - 8);
  __chkstk_darwin();
  uint64_t v18 = OUTLINED_FUNCTION_24_41();
  type metadata accessor for PhoneCallNLv3Intent(v18);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  uint64_t v19 = type metadata accessor for NLIntent(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  unint64_t v24 = (char *)&v103 - v23;
  uint64_t v25 = type metadata accessor for Parse(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v29 = (void *)(v28 - v27);
  (*(void (**)(uint64_t, uint8_t *, uint64_t))(v26 + 16))(v28 - v27, v123, v25);
  int v30 = (*(uint64_t (**)(void *, uint64_t))(v26 + 88))(v29, v25);
  if (v30 != enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v41 = v121;
    if (v30 != enum case for Parse.directInvocation(_:))
    {
      if (v30 == enum case for Parse.NLv4IntentOnly(_:))
      {
        OUTLINED_FUNCTION_6_86();
        uint64_t v50 = *v29;
        uint64_t v51 = v112;
        static ConversionUtils.toUserParse(from:)(*v29);
        if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1LL, v115) == 1)
        {
          outlined destroy of UUID?( (uint64_t)v51,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v52 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v52, (uint64_t)static Logger.siriPhone);
          os_log_type_t v53 = OUTLINED_FUNCTION_6_0();
          if (OUTLINED_FUNCTION_7(v53))
          {
            uint64_t v54 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
            *(_WORD *)uint64_t v54 = 0;
            OUTLINED_FUNCTION_5( &dword_0,  v51,  (os_log_type_t)v1,  "#StartCallRCHFlowDelegate NLv4: Could not convert NLv4 User Dialog Act to User Parse",  v54);
            OUTLINED_FUNCTION_0_2((uint64_t)v54);
          }

          swift_unknownObjectRelease(v50);
          v40 = (unsigned int *)&enum case for SiriKitConfirmationState.unset(_:);
          goto LABEL_20;
        }

        uint64_t v83 = v114;
        uint64_t v84 = v108;
        OUTLINED_FUNCTION_103_0(v108, (uint64_t)v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 32));
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v85 = OUTLINED_FUNCTION_15_1();
        __swift_project_value_buffer(v85, (uint64_t)static Logger.siriPhone);
        uint64_t v86 = v107;
        uint64_t v87 = OUTLINED_FUNCTION_103_0(v107, v84, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 16));
        Logger.logObject.getter(v87);
        os_log_type_t v88 = OUTLINED_FUNCTION_234();
        if (os_log_type_enabled(v41, v88))
        {
          v89 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v90 = OUTLINED_FUNCTION_7_0(32LL);
          *(_DWORD *)v89 = 136315138;
          v123 = v89 + 4;
          v124[0] = v90;
          uint64_t v91 = v105;
          uint64_t v92 = Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v105);
          uint64_t v93 = SiriKitConfirmationState.rawValue.getter(v92);
          unint64_t v95 = v94;
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v91, v120);
          uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v93, v95, v124);
          uint64_t v97 = OUTLINED_FUNCTION_10_4(v96);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, v98, v123);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_50_24(v107);
          OUTLINED_FUNCTION_57_0(&dword_0, v41, v88, "#StartCallRCHFlowDelegate returns %s", v89);
          OUTLINED_FUNCTION_17_0(v90);
          OUTLINED_FUNCTION_0_2(v90);
          uint64_t v99 = (uint64_t)v89;
          uint64_t v84 = v108;
          OUTLINED_FUNCTION_0_2(v99);
        }

        else
        {
          OUTLINED_FUNCTION_50_24(v86);
        }

        Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v122);
        swift_unknownObjectRelease(v50);
        OUTLINED_FUNCTION_50_24(v84);
        goto LABEL_40;
      }

      if (v30 == enum case for Parse.uso(_:))
      {
        OUTLINED_FUNCTION_6_86();
        uint64_t v57 = v109;
        uint64_t v56 = v110;
        OUTLINED_FUNCTION_103_0(v110, (uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 32));
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v58 = OUTLINED_FUNCTION_15_1();
        __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
        uint64_t v59 = v104;
        uint64_t v60 = OUTLINED_FUNCTION_103_0(v104, v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 16));
        uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
        os_log_type_t v63 = static os_log_type_t.debug.getter(v61, v62);
        BOOL v64 = os_log_type_enabled(v61, v63);
        uint64_t v66 = v113;
        uint64_t v65 = v114;
        if (v64)
        {
          v67 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v68 = OUTLINED_FUNCTION_7_0(32LL);
          v123 = (uint8_t *)v68;
          v124[0] = v68;
          *(_DWORD *)v67 = 136315138;
          v121 = (os_log_s *)(v67 + 4);
          USOParse.userParse.getter(v68);
          uint64_t v69 = v105;
          Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v105);
          uint64_t v70 = OUTLINED_FUNCTION_26_5(v113, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
          uint64_t v71 = SiriKitConfirmationState.rawValue.getter(v70);
          unint64_t v73 = v72;
          uint64_t v74 = v69;
          uint64_t v66 = v113;
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v74, v120);
          uint64_t v75 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v73, v124);
          uint64_t v76 = OUTLINED_FUNCTION_10_4(v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v76, v77, v121);
          uint64_t v65 = v114;
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_49_25(v59);
          OUTLINED_FUNCTION_57_0(&dword_0, v61, v63, "#StartCallRCHFlowDelegate returns %s", v67);
          uint64_t v78 = (uint64_t)v123;
          OUTLINED_FUNCTION_17_0((uint64_t)v123);
          OUTLINED_FUNCTION_0_2(v78);
          uint64_t v79 = (uint64_t)v67;
          uint64_t v56 = v110;
          OUTLINED_FUNCTION_0_2(v79);
        }

        else
        {
          OUTLINED_FUNCTION_49_25(v59);
        }

        USOParse.userParse.getter(v102);
        Siri_Nlu_External_UserParse.siriKitConfirmationState.getter(v122);
        OUTLINED_FUNCTION_26_5(v66, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
        OUTLINED_FUNCTION_49_25(v56);
        goto LABEL_40;
      }

      (*(void (**)(void *, uint64_t))(v26 + 8))(v29, v25);
LABEL_37:
      uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BaseRCHFlowDelegate<INStartCallIntent, INStartCallIntentResponse>);
      v101 = (void (*)(uint8_t *))method lookup function for BaseRCHFlowDelegate( v100,  &method descriptor for BaseRCHFlowDelegate.makeConfirmationStateFromParse(parse:));
      v101(v123);
      goto LABEL_40;
    }

    OUTLINED_FUNCTION_6_86();
    unint64_t v42 = v29;
    uint64_t v43 = v116;
    (*(void (**)(uint64_t, void *, uint64_t))(v17 + 32))(v1, v42, v116);
    char v44 = v117;
    static CommonDirectAction.from(_:)(v1, v117);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v43);
    uint64_t v45 = v118;
    outlined init with take of CommonDirectAction?((uint64_t)v44, v118);
    uint64_t v46 = type metadata accessor for CommonDirectAction(0LL);
    if (__swift_getEnumTagSinglePayload(v45, 1LL, v46) != 1)
    {
      uint64_t v47 = v111;
      outlined init with copy of Result<TemplatingResult, Error>( v45,  v111,  &demangling cache variable for type metadata for CommonDirectAction?);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v47, v46);
      if (EnumCaseMultiPayload == 7)
      {
        uint64_t v49 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
        goto LABEL_34;
      }

      if (EnumCaseMultiPayload == 6)
      {
        uint64_t v49 = (unsigned int *)&enum case for SiriKitConfirmationState.confirmed(_:);
LABEL_34:
        (*(void (**)(uint64_t, void, uint64_t))(v119 + 104))(v122, *v49, v120);
        outlined destroy of UUID?(v45, &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_40;
      }

      outlined destroy of MainFlow(v47, type metadata accessor for CommonDirectAction);
    }

    outlined destroy of UUID?(v45, &demangling cache variable for type metadata for CommonDirectAction?);
    goto LABEL_37;
  }

  OUTLINED_FUNCTION_6_86();
  (*(void (**)(char *, void *, uint64_t))(v20 + 32))(v24, v29, v19);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v24, v19);
  PhoneCallNLv3Intent.init(intent:)((uint64_t)v22, v2);
  uint64_t v31 = *(void *)((char *)v121 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v32 = *(void *)((char *)v121 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 32);
  OUTLINED_FUNCTION_49_0((os_log_s *)((char *)v121 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals));
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 80))(v124, v31, v32);
  OUTLINED_FUNCTION_19_1();
  uint64_t v37 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( v33,  v34,  v35,  0LL,  v36);
  uint64_t v38 = outlined destroy of SKTransformer((uint64_t)v124);
  if (!v37)
  {
    OUTLINED_FUNCTION_33_45(v38, type metadata accessor for PhoneCallNLv3Intent);
    OUTLINED_FUNCTION_5_86();
    goto LABEL_37;
  }

  if ((OUTLINED_FUNCTION_43_25(1u) & 1) != 0)
  {

    OUTLINED_FUNCTION_33_45(v39, type metadata accessor for PhoneCallNLv3Intent);
    OUTLINED_FUNCTION_5_86();
    v40 = (unsigned int *)&enum case for SiriKitConfirmationState.rejected(_:);
LABEL_20:
    (*(void (**)(uint64_t, void, uint64_t))(v119 + 104))(v122, *v40, v120);
    goto LABEL_40;
  }

  if ((OUTLINED_FUNCTION_43_25(0) & 1) != 0)
  {

    OUTLINED_FUNCTION_33_45(v55, type metadata accessor for PhoneCallNLv3Intent);
    OUTLINED_FUNCTION_5_86();
    v40 = (unsigned int *)&enum case for SiriKitConfirmationState.confirmed(_:);
    goto LABEL_20;
  }

  char v80 = OUTLINED_FUNCTION_43_25(2u);

  OUTLINED_FUNCTION_33_45(v81, type metadata accessor for PhoneCallNLv3Intent);
  OUTLINED_FUNCTION_5_86();
  if ((v80 & 1) != 0) {
    v82 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
  }
  else {
    v82 = (unsigned int *)&enum case for SiriKitConfirmationState.unset(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v119 + 104))(v122, *v82, v120);
LABEL_40:
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallRCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_52_23();
  uint64_t v7 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()(v6);
  int v8 = OUTLINED_FUNCTION_51_16();
  specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)( v8,  v9,  v10,  v11,  v5,  v7,  v3,  v1);
  return swift_release(v7);
}

uint64_t StartCallRCHFlowDelegate.makeUnsupportedValueBehavior(app:intent:parameterName:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v6._countAndFlagsBits = a3;
  v6._object = a4;
  PhoneCallSlotNames.init(rawValue:)(v6).value;
  type metadata accessor for UnsupportedValueBehavior(0LL);
  uint64_t v7 = OUTLINED_FUNCTION_72_1();
  return v8(v7);
}

uint64_t StartCallRCHFlowDelegate.makeErrorDialogBehavior(app:intent:intentResponse:)(int a1, int a2, id a3)
{
  if (a3) {
    [a3 code];
  }
  type metadata accessor for ErrorDialogBehavior(0LL);
  uint64_t v3 = OUTLINED_FUNCTION_72_1();
  return v4(v3);
}

void StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)()
{
  uint64_t v59 = v1;
  uint64_t v60 = v2;
  uint64_t v4 = v3;
  Swift::String v6 = v5;
  uint64_t v8 = v7;
  uint64_t v61 = v9;
  uint64_t v56 = *v0;
  uint64_t v57 = v0;
  uint64_t v58 = type metadata accessor for LaunchAppBehavior(0LL);
  uint64_t v10 = *(void *)(v58 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for RCHExecutionStep(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for RCHExecutionStep.handle(_:), v17);
  char v21 = static RCHExecutionStep.== infix(_:_:)(v4, v20);
  OUTLINED_FUNCTION_41_2((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  if ((v21 & 1) != 0 && v6 && [v6 code] == (char *)&dword_0 + 2)
  {
    uint64_t v58 = v8;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = v61;
    uint64_t v24 = swift_retain_n(v61, 2LL);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
    if (OUTLINED_FUNCTION_124_2(v25))
    {
      uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v29 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v62 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = dispatch thunk of App.debugDescription.getter(v29);
      uint64_t v32 = OUTLINED_FUNCTION_89(v30, v31);
      uint64_t v33 = OUTLINED_FUNCTION_10_4(v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v33, v34, v28 + 4);
      OUTLINED_FUNCTION_31_1(v61);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0( &dword_0,  v25,  v27,  "#StartCallRCHFlowDelegate Preparing direct launchApp for app: %s",  v28);
      OUTLINED_FUNCTION_17_0(v29);
      OUTLINED_FUNCTION_0_2(v29);
      uint64_t v23 = v61;
      OUTLINED_FUNCTION_0_2((uint64_t)v28);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v23);
    }

    uint64_t v46 = type metadata accessor for TaskPriority(0LL);
    OUTLINED_FUNCTION_29_1(v16, v47, v48, v46);
    uint64_t v49 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4102D8, 88LL);
    v49[2] = 0LL;
    v49[3] = 0LL;
    uint64_t v51 = v57;
    uint64_t v50 = (void *)v58;
    v49[4] = v23;
    v49[5] = v51;
    v49[6] = v50;
    v49[7] = v6;
    uint64_t v52 = v60;
    v49[8] = v59;
    v49[9] = v52;
    v49[10] = v56;
    swift_retain();
    swift_retain();
    id v53 = v50;
    id v54 = v6;
    UsoEntity_common_Person.usoPerson.getter();
    uint64_t v55 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v16,  (uint64_t)&async function pointer to partial apply for closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:),  (uint64_t)v49);
    swift_release(v55);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    uint64_t v36 = v61;
    uint64_t v37 = swift_retain_n(v61, 2LL);
    Logger.logObject.getter(v37);
    os_log_type_t v38 = OUTLINED_FUNCTION_234();
    if (OUTLINED_FUNCTION_54_2((os_log_s *)v6))
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v40 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v62 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v41 = dispatch thunk of App.debugDescription.getter(v40);
      uint64_t v43 = OUTLINED_FUNCTION_89(v41, v42);
      uint64_t v44 = OUTLINED_FUNCTION_10_4(v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v44, v45, v39 + 4);
      OUTLINED_FUNCTION_31_1(v36);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v6,  v38,  "#StartCallRCHFlowDelegate Preparing launchApp button for app: %s",  v39);
      OUTLINED_FUNCTION_17_0(v40);
      OUTLINED_FUNCTION_0_2(v40);
      OUTLINED_FUNCTION_0_2((uint64_t)v39);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v36);
    }

    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))( v13,  enum case for LaunchAppBehavior.withDialogAndButton(_:),  v58);
    v59(v13);
    OUTLINED_FUNCTION_41_2(v13, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[25] = v12;
  v8[26] = v13;
  v8[23] = a7;
  v8[24] = a8;
  v8[21] = a5;
  v8[22] = a6;
  v8[20] = a4;
  uint64_t v9 = type metadata accessor for LaunchAppBehavior(0LL);
  v8[27] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[28] = v10;
  v8[29] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:),  0LL,  0LL);
}

uint64_t closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)()
{
  uint64_t v1 = *(void *)(v0 + 208);
  __int128 v11 = *(_OWORD *)(v0 + 176);
  uint64_t v2 = swift_task_alloc(64LL);
  *(void *)(v0 + 240) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v2 + 32) = v11;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 248) = v3;
  OUTLINED_FUNCTION_49( (uint64_t)v3,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
  *uint64_t v3 = v0;
  v3[1] = closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:);
  OUTLINED_FUNCTION_19_1();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v5, v6, 0xD000000000000063LL, v7, v8, v2, v9);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 248);
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc(v3);
  if (!v0) {
    swift_task_dealloc(*(void *)(v2 + 240));
  }
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  id v10;
  os_log_s *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  os_log_s *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  id v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 184);
  uint64_t v4 = (void *)(*(void *)(v0 + 168) + direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v3, v2);
  uint64_t v8 = v7;
  outlined init with copy of SharedGlobalsProviding(v0 + 16, v0 + 56);
  if ((v8 & 1) != 0) {
    uint64_t v34 = static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(*(void **)(v0 + 176));
  }
  else {
    uint64_t v34 = 1;
  }
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = v1;
  __int128 v11 = (os_log_s *)Logger.logObject.getter(v10);
  uint64_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (OUTLINED_FUNCTION_54_2(v11))
  {
    uint64_t v14 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v33 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v35 = v33;
    *(_DWORD *)uint64_t v14 = 136315394;
    *(void *)(v0 + 112) = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter( v10,  (SEL *)&selRef_aceId);
    *(void *)(v0 + 120) = v15;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v17 = String.init<A>(describing:)(v0 + 112, v16);
    *(void *)(v0 + 144) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v14 + 4);
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 12) = 2080;
    *(void *)(v0 + 96) = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter( v10,  (SEL *)&selRef_refId);
    *(void *)(v0 + 104) = v19;
    uint64_t v20 = String.init<A>(describing:)(v0 + 96, v16);
    *(void *)(v0 + 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v14 + 14);
    swift_bridgeObjectRelease();

    _os_log_impl( &dword_0,  v11,  v13,  "#StartCallRCHFlowDelegate LaunchAppWithIntent aceId: %s, refId: %s",  (uint8_t *)v14,  0x16u);
    swift_arrayDestroy(v33, 2LL);
    OUTLINED_FUNCTION_0_2(v33);
    OUTLINED_FUNCTION_0_2(v14);
  }

  else
  {
  }

  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  uint64_t v25 = static os_log_type_t.debug.getter(v23, v24);
  if (os_log_type_enabled(v23, v25))
  {
    uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v26 = 67109120;
    *(_DWORD *)(v0 + 264) = v34 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 264, v0 + 268, v26 + 4);
    _os_log_impl(&dword_0, v23, v25, "#StartCallRCHFlowDelegate LaunchAppBehavior shouldDialog: %{BOOL}d", v26, 8u);
    OUTLINED_FUNCTION_0_2((uint64_t)v26);
  }

  uint64_t v28 = *(void *)(v0 + 224);
  os_log_type_t v27 = *(void *)(v0 + 232);
  uint64_t v29 = *(void *)(v0 + 216);
  uint64_t v30 = *(void (**)(uint64_t))(v0 + 192);

  INStartCallIntent.setLaunchId(app:)();
  *(void *)os_log_type_t v27 = v10;
  *(_BYTE *)(v27 + 8) = 0;
  *(_BYTE *)(v27 + 9) = v34 & 1;
  (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))( v27,  enum case for LaunchAppBehavior.withAutomaticPunchOut(_:),  v29);
  unint64_t v31 = v10;
  v30(v27);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  swift_task_dealloc(*(void *)(v0 + 232));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_s *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  swift_task_dealloc(*(void *)(v0 + 240));
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  uint64_t v5 = static os_log_type_t.error.getter();
  uint64_t v6 = OUTLINED_FUNCTION_124_2(v4);
  uint64_t v7 = *(void *)(v0 + 256);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v9 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v7);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(void *)(v0 + 136) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v8 + 4);
    *uint64_t v9 = v10;
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_57_0( &dword_0,  v4,  v5,  "#StartCallRCHFlowDelegate Error constructing launchApp, using .withDialogAndButton to continue in app. Error: %@",  v8);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v9);
    OUTLINED_FUNCTION_0_2((uint64_t)v9);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  else
  {
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_9_16();
  }

  __int128 v11 = *(void *)(v0 + 256);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v15 = *(void (**)(uint64_t))(v0 + 192);

  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))( v12,  enum case for LaunchAppBehavior.withDialogAndButton(_:),  v14);
  v15(v12);
  swift_errorRelease(v11);
  OUTLINED_FUNCTION_26_5(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  swift_task_dealloc(*(void *)(v0 + 232));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v18[0] = a4;
  v18[1] = a5;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))( (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v8);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v11 + 16) & ~v11;
  uint64_t v13 = swift_allocObject(&unk_410340, v12 + v10, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))( v13 + v12,  (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v8);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v14 = (void *)static BiomeEventSender.instance;
  type metadata accessor for UnsupportedFlowCATs(0LL);
  id v15 = v14;
  static CATOption.defaultMode.getter(v15);
  uint64_t v16 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)();

  swift_release(v13);
  return swift_release(v16);
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  void v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch( closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:),  0LL,  0LL);
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)()
{
  id v1 = [objc_allocWithZone(SAResultCallback) init];
  *(void *)(v0 + 48) = v1;
  [v1 setCode:SAResultCallbackAnyErrorCodeValue];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 40LL);
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_31FE60;
  uint64_t v4 = (void *)swift_task_alloc(dword_4364B4);
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:);
  return static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)(*(void **)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  os_log_s *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  id v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 48);
  *(void *)(v1 + 16) = 0LL;
  swift_release(v1);

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  uint64_t v4 = (os_log_s *)OUTLINED_FUNCTION_12_1(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = static os_log_type_t.error.getter();
  uint64_t v6 = OUTLINED_FUNCTION_124_2(v4);
  uint64_t v7 = *(void *)(v0 + 80);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v8 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v4,  v5,  "#StartCallRCHFlowDelegate Failure attaching MyriadEmergencyCall ResultCallback, returning LaunchApp as-is",  v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  swift_errorRelease(v7);
  OUTLINED_FUNCTION_53_23();
  OUTLINED_FUNCTION_56_20();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)( uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 72);
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc(v5);
  if (!v1) {
    *(void *)(v4 + 88) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v6, v7, v8);
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t v6 = *(void **)(v4 + 48);
  uint64_t v7 = *(os_log_s **)(v4 + 24);
  *(void *)(*(void *)(v4 + 64) + 32LL) = *(void *)(v4 + 88);
  specialized Array._endMutation()(a1, a2, a3, a4);
  outlined bridged method (mbnn) of @objc SAResultCallback.commands.setter();
  uint64_t v8 = OUTLINED_FUNCTION_8_2(v5, 40LL);
  *(_OWORD *)(v8 + 16) = xmmword_31FE60;
  *(void *)(v8 + 32) = v6;
  specialized Array._endMutation()(v8, v9, v10, v11);
  id v12 = v6;
  outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.callbacks.setter();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v13 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v13, (uint64_t)static Logger.siriPhone);
  os_log_type_t v14 = OUTLINED_FUNCTION_234();
  if (os_log_type_enabled(v7, v14))
  {
    id v15 = *(void **)(v4 + 48);
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v16 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v7,  v14,  "#StartCallRCHFlowDelegate Added MyriadEmergencyCall as ResultCallback for HomePod LaunchApp",  v16);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  else
  {
  }

  OUTLINED_FUNCTION_53_23();
  OUTLINED_FUNCTION_56_20();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

void StartCallRCHFlowDelegate.init()(uint64_t a1, uint64_t a2)
{
}

uint64_t StartCallRCHFlowDelegate.__ivar_destroyer()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                             + direct field offset for StartCallRCHFlowDelegate.sharedGlobals));
}

void StartCallRCHFlowDelegate.deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartCallRCHFlowDelegate.dialogTemplatingContainer));
  swift_release(*(void *)(v0 + direct field offset for StartCallRCHFlowDelegate.appResolved));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartCallRCHFlowDelegate.sharedGlobals));
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallRCHFlowDelegate.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

void protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance StartCallRCHFlowDelegate( uint64_t a1@<X8>)
{
}

void specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)()
{
  uint64_t v45 = v0;
  uint64_t v46 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = v11[3];
  uint64_t v17 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v18);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 112))(v18, v17);
  specialized BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(v19, v5);
  uint64_t v20 = OUTLINED_FUNCTION_22();
  INStartCallIntent.isThirdPartyCallKitCallBack.getter(v20);
  if ((v21 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v22, (uint64_t)static Logger.siriPhone);
    os_log_type_t v23 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v23))
    {
      uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v24 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v9,  (os_log_type_t)v13,  "#StartCallRCHFlowDelegate 1P-extension redial/callback request wants to build LaunchApp for a 3P call.",  v24);
      OUTLINED_FUNCTION_0_2((uint64_t)v24);
    }

    closure #1 in static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(v9, v7, &v47, v48);
    uint64_t v44 = (void *)v48[0];
    v45(v48[0], 0LL);
    outlined consume of Result<SABaseCommand, Error>(v44, 0);
  }

  else
  {
    uint64_t v25 = (os_log_s *)OUTLINED_FUNCTION_49( v21,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    uint64_t v26 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(v13, v9, v7);
    static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v9, v7);
    if ((v27 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v28 = v11[3];
    uint64_t v29 = v11[4];
    OUTLINED_FUNCTION_49_0(v11);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(v48, v28, v29);
    uint64_t v30 = v48[3];
    uint64_t v31 = v48[4];
    uint64_t v25 = (os_log_s *)OUTLINED_FUNCTION_49_0(v48);
    LOBYTE(v30) = dispatch thunk of DeviceState.isHomePod.getter(v30, v31);
    __swift_destroy_boxed_opaque_existential_1(v48);
    if ((v30 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v32 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v32, (uint64_t)static Logger.siriPhone);
      os_log_type_t v33 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_54_2(v25))
      {
        uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v34 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v25,  v33,  "#StartCallRCHFlowDelegate Building custom LaunchApp for HomePod emergency call",  v34);
        OUTLINED_FUNCTION_0_2((uint64_t)v34);
      }

      uint64_t v35 = type metadata accessor for TaskPriority(0LL);
      OUTLINED_FUNCTION_29_1(v16, v36, v37, v35);
      os_log_type_t v38 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_410368, 64LL);
      v38[2] = 0LL;
      v38[3] = 0LL;
      v38[4] = v3;
      v38[5] = v26;
      v38[6] = v45;
      v38[7] = v46;
      swift_retain();
      UsoEntity_common_Person.usoPerson.getter();
      uint64_t v39 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v16,  (uint64_t)&async function pointer to partial apply for closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:),  (uint64_t)v38);
      swift_release(v39);
    }

    else
    {
LABEL_14:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v40 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v40, (uint64_t)static Logger.siriPhone);
      os_log_type_t v41 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_93(v41))
      {
        unint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)unint64_t v42 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v25,  (os_log_type_t)v3,  "#StartCallRCHFlowDelegate Returning default LaunchApp",  v42);
        OUTLINED_FUNCTION_0_2((uint64_t)v42);
      }

      id v43 = v26;
      v45((uint64_t)v26, 0LL);
    }
  }

  OUTLINED_FUNCTION_7_5();
}

void specialized static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)( uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v55 = a6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 112))(v16, v17);
  BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(v18, a10, a11);
  uint64_t v19 = swift_release(v18);
  INStartCallIntent.isThirdPartyCallKitCallBack.getter(v19);
  if ((v20 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = type metadata accessor for Logger(0LL);
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    os_log_type_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v25 = static os_log_type_t.debug.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl( &dword_0,  v23,  v25,  "#StartCallRCHFlowDelegate 1P-extension redial/callback request wants to build LaunchApp for a 3P call.",  v26,  2u);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    closure #1 in static ThirdPartyCallKitLaunchAppBuilder.makeLaunchApp(intent:intentResponse:)(a3, a4, &v58, v59);
    uint64_t v52 = (void *)v59[0];
    v56(v59[0], 0LL);
    outlined consume of Result<SABaseCommand, Error>(v52, 0);
  }

  else
  {
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    char v27 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(a1, a3, a4);
    static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(a3, a4);
    if ((v28 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v29 = a2[3];
    uint64_t v30 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v29);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v30 + 8))(v59, v29, v30);
    uint64_t v31 = v60;
    uint64_t v32 = v61;
    __swift_project_boxed_opaque_existential_1(v59, v60);
    LOBYTE(v31) = dispatch thunk of DeviceState.isHomePod.getter(v31, v32);
    __swift_destroy_boxed_opaque_existential_1(v59);
    if ((v31 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v33 = type metadata accessor for Logger(0LL);
      uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
      uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
      os_log_type_t v37 = static os_log_type_t.debug.getter(v35, v36);
      if (os_log_type_enabled(v35, v37))
      {
        os_log_type_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v38 = 0;
        _os_log_impl( &dword_0,  v35,  v37,  "#StartCallRCHFlowDelegate Building custom LaunchApp for HomePod emergency call",  v38,  2u);
        swift_slowDealloc(v38, -1LL, -1LL);
      }

      uint64_t v39 = type metadata accessor for TaskPriority(0LL);
      uint64_t v40 = v54;
      __swift_storeEnumTagSinglePayload(v54, 1LL, 1LL, v39);
      os_log_type_t v41 = (void *)swift_allocObject(&unk_4103B8, 64LL, 7LL);
      v41[2] = 0LL;
      v41[3] = 0LL;
      unint64_t v42 = v56;
      v41[4] = v55;
      v41[5] = v27;
      uint64_t v43 = v57;
      v41[6] = v42;
      v41[7] = v43;
      swift_retain();
      swift_retain();
      uint64_t v44 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v40,  (uint64_t)&closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)partial apply,  (uint64_t)v41);
      swift_release(v44);
    }

    else
    {
LABEL_14:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v45 = type metadata accessor for Logger(0LL);
      uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)static Logger.siriPhone);
      uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
      os_log_type_t v49 = static os_log_type_t.debug.getter(v47, v48);
      if (os_log_type_enabled(v47, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v50 = 0;
        _os_log_impl(&dword_0, v47, v49, "#StartCallRCHFlowDelegate Returning default LaunchApp", v50, 2u);
        swift_slowDealloc(v50, -1LL, -1LL);
      }

      id v51 = v27;
      v56((uint64_t)v27, 0LL);
    }
  }

uint64_t sub_22FE80()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for implicit closure #1 in StartCallRCHFlowDelegate.init(sharedGlobals:templatingService:appResolved:)@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_2305BC()
{
  swift_release(*(void *)(v0 + 72));
  return swift_deallocObject(v0, 88LL, 7LL);
}

uint64_t partial apply for closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)( uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc(dword_43B13C);
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)( a1,  v12,  v4,  v5,  v6,  v7,  v8,  v9);
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentResponseType : DismissSiriDeclaringIntentResponse in StartCallRCHFlowDelegate()
{
  return &protocol witness table for INStartCallIntentResponse;
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentType : CallingIntent in StartCallRCHFlowDelegate()
{
  return &protocol witness table for INStartCallIntent;
}

void instantiation function for generic protocol witness table for StartCallRCHFlowDelegate(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

{
  uint64_t v2;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  type metadata accessor for StartCallRCHFlowDelegate,  (uint64_t)&protocol conformance descriptor for BaseRCHFlowDelegate<A, B>);
  *(void *)(a1 + 16) = v2;
}

uint64_t type metadata accessor for StartCallRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartCallRCHFlowDelegate;
  if (!type metadata singleton initialization cache for StartCallRCHFlowDelegate) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartCallRCHFlowDelegate);
  }
  return result;
}

uint64_t type metadata completion function for StartCallRCHFlowDelegate(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "\b";
  void v2[2] = &unk_339138;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + class metadata base offset for StartCallRCHFlowDelegate);
}

uint64_t ObjC metadata update function for StartCallRCHFlowDelegate()
{
  return type metadata accessor for StartCallRCHFlowDelegate(0LL);
}

uint64_t partial apply for closure #1 in closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)( uint64_t a1)
{
  return closure #1 in closure #1 in StartCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:_:)( a1,  v1[2],  v1[3],  v1[4],  v1[5]);
}

uint64_t sub_2307F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SAIntentGroupLaunchAppWithIntent, Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43B1C4);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_13_75(v1);
  return OUTLINED_FUNCTION_8_69(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_5(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t objectdestroy_13Tm()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)partial apply()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43B1C4);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_13_75(v1);
  return OUTLINED_FUNCTION_8_69(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t OUTLINED_FUNCTION_6_86()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

void OUTLINED_FUNCTION_7_90()
{
}

uint64_t OUTLINED_FUNCTION_8_69( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return closure #1 in static StartCallRCHFlowDelegate.makeLaunchAppCommandForHandle(app:sharedGlobals:intent:intentResponse:biomeEventSender:unsupportedFlowCats:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7);
}

uint64_t OUTLINED_FUNCTION_13_75(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

  ;
}

uint64_t OUTLINED_FUNCTION_24_41()
{
  return 0LL;
}

void OUTLINED_FUNCTION_33_45(uint64_t a1, uint64_t (*a2)(void))
{
}

void *OUTLINED_FUNCTION_38_30()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_43_25(unsigned __int8 a1)
{
  return specialized PhoneCallNLIntent.hasCallConfirmation(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_49_25(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_50_24(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_53_23()
{
}

uint64_t OUTLINED_FUNCTION_56_20()
{
  return v1(v0, 0LL);
}

uint64_t PhoneSearchCallHistoryIntentProperties.getContactRole.getter@<X0>(uint64_t a1@<X8>)
{
  if ((v2 & 1) != 0)
  {
    uint64_t v3 = 1836020326LL;
LABEL_6:
    unint64_t v5 = 0xE400000000000000LL;
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_9_69((uint64_t)&outlined read-only object #1 of PhoneSearchCallHistoryIntentProperties.getContactRole.getter);
  if ((v4 & 1) == 0)
  {
    uint64_t v3 = 1752459639LL;
    goto LABEL_6;
  }

  uint64_t v3 = 28532LL;
  unint64_t v5 = 0xE200000000000000LL;
LABEL_7:
  SpeakableString.init(print:speak:)(v3, v5, 0LL, 0LL);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v6);
}

void PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = OUTLINED_FUNCTION_26_0();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v35 = a3;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v10 = (void *)(a1 + 32);
    do
    {
      if (*v10++)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType();
        switch((int)BackingType)
        {
          case 2:
            uint64_t v13 = @"OUTGOING";
            goto LABEL_15;
          case 3:
            uint64_t v13 = @"MISSED";
            goto LABEL_15;
          case 4:
            uint64_t v13 = @"RECEIVED";
            goto LABEL_15;
          case 5:
            uint64_t v13 = @"LATEST";
            goto LABEL_15;
          case 7:
            uint64_t v13 = @"VOICEMAIL";
            goto LABEL_15;
          case 8:
            uint64_t v13 = @"RINGING";
            goto LABEL_15;
          case 9:
            uint64_t v13 = @"IN_PROGRESS";
            goto LABEL_15;
          case 10:
            uint64_t v13 = @"ON_HOLD";
LABEL_15:
            uint64_t v15 = v13;
            uint64_t v14 = v13;
            break;
          default:
            uint64_t v14 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
            break;
        }

        uint64_t v16 = v14;
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        uint64_t v4 = v17;
      }

      else
      {
        OUTLINED_FUNCTION_50_4();
      }

      unint64_t v18 = _swiftEmptyArrayStorage[2];
      if (v18 >= _swiftEmptyArrayStorage[3] >> 1) {
        OUTLINED_FUNCTION_8_32();
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[2 * v18];
      v19[4] = v5;
      v19[5] = v4;
      --v9;
    }

    while (v9);
    a3 = v35;
  }

  uint64_t v20 = specialized Set.init<A>(_:)((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v36 = v20;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    unint64_t v23 = v21 + ((*(unsigned __int8 *)(v38 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    uint64_t v24 = *(void *)(v38 + 72);
    os_log_type_t v25 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v38 + 16);
    do
    {
      uint64_t v26 = v25(v3, v23, v37);
      uint64_t v27 = SpeakableString.print.getter(v26);
      uint64_t v29 = v28;
      OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0) {
        OUTLINED_FUNCTION_8_32();
      }
      unint64_t v30 = _swiftEmptyArrayStorage[2];
      if (v30 >= _swiftEmptyArrayStorage[3] >> 1) {
        OUTLINED_FUNCTION_8_32();
      }
      _swiftEmptyArrayStorage[2] = v30 + 1;
      uint64_t v31 = &_swiftEmptyArrayStorage[2 * v30];
      v31[4] = v27;
      v31[5] = v29;
      v23 += v24;
      --v22;
    }

    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v20 = v36;
  }

  else
  {
    OUTLINED_FUNCTION_39();
  }

  uint64_t v32 = specialized Set.init<A>(_:)((uint64_t)_swiftEmptyArrayStorage);
  if (*(void *)(v32 + 16))
  {
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = specialized Set.union<A>(_:)(v33, v32);
    specialized static Set.== infix(_:_:)(v34, v20);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_62();
  }

  else
  {
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39();
  }

  OUTLINED_FUNCTION_7_5();
}

void PhoneSearchCallHistoryIntentProperties.isRequestForLatest.getter(uint64_t a1, uint64_t a2)
{
}

void PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    unint64_t v14 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v29 = *(void *)(v9 + 72);
    unint64_t v30 = v15;
    uint64_t v28 = v12;
    swift_bridgeObjectRetain();
    uint64_t v31 = v9;
    while (1)
    {
      uint64_t v16 = v30(v11, v14, v8);
      uint64_t v17 = SpeakableString.print.getter(v16);
      uint64_t v19 = v18;
      if (a1)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType(a1);
        switch((int)BackingType)
        {
          case 2:
            uint64_t v21 = @"OUTGOING";
            goto LABEL_15;
          case 3:
            uint64_t v21 = @"MISSED";
            goto LABEL_15;
          case 4:
            uint64_t v21 = @"RECEIVED";
            goto LABEL_15;
          case 5:
            uint64_t v21 = @"LATEST";
            goto LABEL_15;
          case 7:
            uint64_t v21 = @"VOICEMAIL";
            goto LABEL_15;
          case 8:
            uint64_t v21 = @"RINGING";
            goto LABEL_15;
          case 9:
            uint64_t v21 = @"IN_PROGRESS";
            goto LABEL_15;
          case 10:
            uint64_t v21 = @"ON_HOLD";
LABEL_15:
            unint64_t v23 = v21;
            uint64_t v22 = v21;
            break;
          default:
            uint64_t v22 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
            break;
        }

        uint64_t v24 = v22;
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        uint64_t v3 = v25;
      }

      else
      {
        OUTLINED_FUNCTION_50_4();
      }

      if (v17 == v4 && v19 == v3) {
        break;
      }
      char v27 = OUTLINED_FUNCTION_49_2(v17, v19, v4, v3);
      OUTLINED_FUNCTION_62();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_102();
      if ((v27 & 1) == 0)
      {
        v14 += v29;
        if (--v13) {
          continue;
        }
      }

      goto LABEL_26;
    }

    OUTLINED_FUNCTION_7_4(v19);
    OUTLINED_FUNCTION_3_102();
LABEL_26:
    OUTLINED_FUNCTION_7_4(v28);
  }

  else
  {
    swift_bridgeObjectRelease();
  }

  OUTLINED_FUNCTION_7_5();
}

void PhoneSearchCallHistoryIntentProperties.isRequestForVoicemail.getter(uint64_t a1, uint64_t a2)
{
}

void PhoneSearchCallHistoryIntentProperties.isRequestForReceived.getter(uint64_t a1, uint64_t a2)
{
}

void PhoneSearchCallHistoryIntentProperties.isRequestForOutgoing.getter(uint64_t a1, uint64_t a2)
{
}

void PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter(uint64_t a1, uint64_t a2)
{
}

uint64_t PhoneSearchCallHistoryIntentProperties.isRequestForFaceTime.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1LL, v5);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v7 = SpeakableString.print.getter(EnumTagSinglePayload);
    uint64_t v8 = v9;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v2, v5);
  }

  uint64_t v10 = INPreferredCallProviderGetBackingType(2LL);
  switch((_DWORD)v10)
  {
    case 4:
      uint64_t v11 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v11 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v11 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v12 = v11;
      goto LABEL_12;
  }

  uint64_t v11 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v10));
LABEL_12:
  uint64_t v13 = v11;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v16 = v15;

  if (v8)
  {
    if (v7 == v14 && v8 == v16) {
      char v18 = 1;
    }
    else {
      char v18 = OUTLINED_FUNCTION_49_2(v7, v8, v14, v16);
    }
    OUTLINED_FUNCTION_39();
  }

  else
  {
    char v18 = 0;
  }

  swift_bridgeObjectRelease();
  return v18 & 1;
}

void PhoneSearchCallHistoryIntentProperties.isRequestForVideo.getter(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)(a1 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = *(void *)(OUTLINED_FUNCTION_13_76() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v1, a1);
  if (v9 != 1)
  {
LABEL_16:
    OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v10 = OUTLINED_FUNCTION_13_76();
  if (*(void *)(v10 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))( v7,  v10 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)),  v4);
    uint64_t v11 = OUTLINED_FUNCTION_62();
    uint64_t v12 = SpeakableString.print.getter(v11);
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t BackingType = INCallCapabilityGetBackingType(2LL);
    if ((_DWORD)BackingType == 2)
    {
      uint64_t v16 = @"VIDEO_CALL";
    }

    else
    {
      if ((_DWORD)BackingType != 1)
      {
        uint64_t v16 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        goto LABEL_10;
      }

      uint64_t v16 = @"AUDIO_CALL";
    }

    uint64_t v17 = v16;
LABEL_10:
    char v18 = v16;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;

    if (v12 != v19 || v14 != v21) {
      OUTLINED_FUNCTION_49_2(v12, v14, v19, v21);
    }
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_50();
    goto LABEL_16;
  }

  __break(1u);
}

uint64_t OUTLINED_FUNCTION_3_102()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 88) + 8LL))(v1, v0);
}

void OUTLINED_FUNCTION_9_69(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_13_76()
{
  return v2(v0, v1);
}

uint64_t specialized Collection<>.isAddOrNewCall.getter(unint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0LL;
  }
  unint64_t v1 = a1;
  Hasher.init(_seed:)(v27, *(void *)(a1 + 40));
  String.hash(into:)(v27, 6579297LL, 0xE300000000000000LL);
  Swift::Int v2 = Hasher._finalize()();
  uint64_t v3 = -1LL << *(_BYTE *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  unint64_t v5 = v1 + 56;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) == 0) {
    return 0LL;
  }
  uint64_t v6 = ~v3;
  while (1)
  {
    int v7 = *(unsigned __int8 *)(*(void *)(v1 + 48) + v4);
    uint64_t v8 = 0x654E646E41646E65LL;
    unint64_t v9 = 0xED00006C6C614377LL;
    if (v7 != 1) {
      break;
    }
LABEL_7:
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, 6579297LL, 0xE300000000000000LL, 0LL);
    swift_bridgeObjectRelease(v9);
    if ((v10 & 1) != 0) {
      goto LABEL_11;
    }
    unint64_t v4 = (v4 + 1) & v6;
    if (((*(void *)(v5 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) == 0) {
      return 0LL;
    }
  }

  if (v7 == 2)
  {
    uint64_t v8 = 0x4E646E41646C6F68LL;
    unint64_t v9 = 0xEE006C6C61437765LL;
    goto LABEL_7;
  }

  swift_bridgeObjectRelease(0xE300000000000000LL);
LABEL_11:
  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain(v1);
    goto LABEL_31;
  }

  Hasher.init(_seed:)(v27, *(void *)(v1 + 40));
  swift_bridgeObjectRetain(v1);
  String.hash(into:)(v27, 0x4E646E41646C6F68LL, 0xEE006C6C61437765LL);
  Swift::Int v12 = Hasher._finalize()();
  uint64_t v13 = -1LL << *(_BYTE *)(v1 + 32);
  unint64_t v14 = v12 & ~v13;
  if (((*(void *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v14) & 1) != 0)
  {
    uint64_t v15 = ~v13;
    do
    {
      if (*(_BYTE *)(*(void *)(v1 + 48) + v14))
      {
        if (*(_BYTE *)(*(void *)(v1 + 48) + v14) != 1)
        {
          swift_bridgeObjectRelease(v1);
          uint64_t v11 = 1LL;
          unint64_t v1 = 0xEE006C6C61437765LL;
          goto LABEL_35;
        }

        uint64_t v16 = 0x654E646E41646E65LL;
        unint64_t v17 = 0xED00006C6C614377LL;
      }

      else
      {
        unint64_t v17 = 0xE300000000000000LL;
        uint64_t v16 = 6579297LL;
      }

      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, 0x4E646E41646C6F68LL, 0xEE006C6C61437765LL, 0LL);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) != 0)
      {
LABEL_34:
        uint64_t v11 = 1LL;
        goto LABEL_35;
      }

      unint64_t v14 = (v14 + 1) & v15;
    }

    while (((*(void *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v14) & 1) != 0);
  }

  if (!*(void *)(v1 + 16))
  {
LABEL_31:
    uint64_t v11 = 0LL;
    goto LABEL_35;
  }

  Hasher.init(_seed:)(v27, *(void *)(v1 + 40));
  swift_bridgeObjectRetain(v1);
  String.hash(into:)(v27, 0x654E646E41646E65LL, 0xED00006C6C614377LL);
  Swift::Int v19 = Hasher._finalize()();
  uint64_t v20 = -1LL << *(_BYTE *)(v1 + 32);
  unint64_t v21 = v19 & ~v20;
  if (((*(void *)(v5 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0)
  {
LABEL_29:
    swift_bridgeObjectRelease(v1);
    goto LABEL_31;
  }

  uint64_t v22 = ~v20;
  while (!*(_BYTE *)(*(void *)(v1 + 48) + v21))
  {
    unint64_t v24 = 0xE300000000000000LL;
    uint64_t v23 = 6579297LL;
LABEL_27:
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, 0x654E646E41646E65LL, 0xED00006C6C614377LL, 0LL);
    swift_bridgeObjectRelease(v24);
    if ((v25 & 1) != 0)
    {
      swift_bridgeObjectRelease(v1);
      goto LABEL_34;
    }

    unint64_t v21 = (v21 + 1) & v22;
    if (((*(void *)(v5 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0) {
      goto LABEL_29;
    }
  }

  if (*(_BYTE *)(*(void *)(v1 + 48) + v21) == 2)
  {
    uint64_t v23 = 0x4E646E41646C6F68LL;
    unint64_t v24 = 0xEE006C6C61437765LL;
    goto LABEL_27;
  }

  swift_bridgeObjectRelease_n(v1, 2LL);
  uint64_t v11 = 1LL;
  unint64_t v1 = 0xED00006C6C614377LL;
LABEL_35:
  swift_bridgeObjectRelease(v1);
  return v11;
}

void specialized Sequence.contains(where:)(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = __CocoaSet.makeIterator()(v4);
    uint64_t v6 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for TUHandle,  &OBJC_CLASS___TUHandle_ptr);
    unint64_t v7 = lazy protocol witness table accessor for type TUHandle and conformance NSObject();
    uint64_t v8 = Set.Iterator.init(_cocoa:)(v28, v5, v6, v7);
    uint64_t v3 = v28[0];
    uint64_t v26 = v28[1];
    uint64_t v9 = v28[2];
    int64_t v10 = v28[3];
    unint64_t v11 = v28[4];
  }

  else
  {
    uint64_t v12 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1LL << v13);
    }
    else {
      uint64_t v14 = -1LL;
    }
    unint64_t v11 = v14 & *(void *)(a1 + 56);
    uint64_t v8 = (void *)swift_bridgeObjectRetain();
    int64_t v10 = 0LL;
  }

  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  while (1)
  {
    int64_t v15 = v10;
    if ((v3 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v18 = __CocoaSet.Iterator.next()(v8);
    uint64_t v19 = v18;
    if (!v18) {
      goto LABEL_35;
    }
    uint64_t v27 = v18;
    type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for TUHandle,  &OBJC_CLASS___TUHandle_ptr);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(&v29, &v27, (char *)&type metadata for Swift.AnyObject + 8);
    id v20 = v29;
    swift_unknownObjectRelease(v19);
    if (!v20) {
      goto LABEL_35;
    }
LABEL_34:
    int v24 = TUHandlesAreCanonicallyEqual(v20, a2);

    if (v24) {
      goto LABEL_35;
    }
  }

  if (v11)
  {
    unint64_t v16 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v17 = v16 | (v10 << 6);
LABEL_33:
    id v20 = *(id *)(*(void *)(v3 + 48) + 8 * v17);
    if (!v20) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }

  int64_t v21 = v10 + 1;
  if (!__OFADD__(v10, 1LL))
  {
    if (v21 >= v25) {
      goto LABEL_35;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v15 + 2;
      if (v15 + 2 >= v25) {
        goto LABEL_35;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v10);
      if (!v22)
      {
        int64_t v10 = v15 + 3;
        if (v15 + 3 >= v25) {
          goto LABEL_35;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v10);
        if (!v22)
        {
          int64_t v10 = v15 + 4;
          if (v15 + 4 >= v25) {
            goto LABEL_35;
          }
          unint64_t v22 = *(void *)(v26 + 8 * v10);
          if (!v22)
          {
            int64_t v10 = v15 + 5;
            if (v15 + 5 >= v25) {
              goto LABEL_35;
            }
            unint64_t v22 = *(void *)(v26 + 8 * v10);
            if (!v22)
            {
              int64_t v23 = v15 + 6;
              while (v23 < v25)
              {
                unint64_t v22 = *(void *)(v26 + 8 * v23++);
                if (v22)
                {
                  int64_t v10 = v23 - 1;
                  goto LABEL_32;
                }
              }

uint64_t OngoingCallConfirmIntentFlow.rchRecord.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  return v1(v0);
}

uint64_t OngoingCallConfirmIntentFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals,  a1);
}

uint64_t OngoingCallConfirmIntentFlow.callStateProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 32);
  OUTLINED_FUNCTION_82((void *)(v0
                                + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
}

uint64_t key path setter for OngoingCallConfirmIntentFlow.state : OngoingCallConfirmIntentFlow( uint64_t a1, void *a2)
{
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  outlined init with copy of OngoingCallConfirmIntentFlow.State(a1, (uint64_t)v5);
  uint64_t v6 = *a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
  swift_beginAccess(v6, v9, 33LL, 0LL);
  outlined assign with take of OngoingCallConfirmIntentFlow.State((uint64_t)v5, v6);
  return swift_endAccess(v9);
}

uint64_t OngoingCallConfirmIntentFlow.state.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_34_1();
  return outlined init with copy of OngoingCallConfirmIntentFlow.State(v1, v2);
}

uint64_t outlined init with copy of OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for OngoingCallConfirmIntentFlow.State,  (uint64_t)&nominal type descriptor for OngoingCallConfirmIntentFlow.State);
}

uint64_t OngoingCallConfirmIntentFlow.Action.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6C61436F54646461LL;
  }
  else {
    return 0x6C6C614377656ELL;
  }
}

PhoneCallFlowDelegatePlugin::OngoingCallConfirmIntentFlow::Action_optional __swiftcall OngoingCallConfirmIntentFlow.Action.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of OngoingCallConfirmIntentFlow.Action.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_OngoingCallConfirmIntentFlow_Action_addToCall;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_OngoingCallConfirmIntentFlow_Action_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallConfirmIntentFlow.Action( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance OngoingCallConfirmIntentFlow.Action()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallConfirmIntentFlow.Action( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallConfirmIntentFlow.Action( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::OngoingCallConfirmIntentFlow::Action_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallConfirmIntentFlow.Action@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallConfirmIntentFlow::Action_optional *a2@<X8>)
{
  result.value = OngoingCallConfirmIntentFlow.Action.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallConfirmIntentFlow.Action@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = OngoingCallConfirmIntentFlow.Action.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance OngoingCallConfirmIntentFlow.Action()
{
  return OngoingCallConfirmIntentFlow.Action.rawValue.getter(*v0);
}

uint64_t OngoingCallConfirmIntentFlow.exitValue.getter()
{
  uint64_t v2 = v1 - v0;
  type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v5 = (_BYTE *)(v3 - v4);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v27 - v6;
  OUTLINED_FUNCTION_23_47();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  uint64_t v9 = OUTLINED_FUNCTION_35_31();
  outlined init with copy of OngoingCallConfirmIntentFlow.State(v9, v10);
  unint64_t v11 = *(uint64_t (***)(uint64_t, uint64_t))(v8 - 8);
  uint64_t v12 = v11[11]((uint64_t)v5, v8);
  if ((_DWORD)v12 != enum case for PromptResult.answered<A>(_:))
  {
    OUTLINED_FUNCTION_91_0(v11[1]);
    goto LABEL_6;
  }

  uint64_t v13 = v12;
  OUTLINED_FUNCTION_91_0(v11[12]);
  if ((*v5 & 1) != 0)
  {
LABEL_6:
    uint64_t v25 = enum case for PromptResult.cancelled<A>(_:);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
    uint64_t v22 = OUTLINED_FUNCTION_39_23();
    uint64_t v24 = v25;
    goto LABEL_7;
  }

  uint64_t v14 = enum case for ConfirmationResponse.confirmed(_:);
  uint64_t v15 = type metadata accessor for ConfirmationResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104LL))(v2, v14, v15);
  OUTLINED_FUNCTION_27_48();
  __swift_storeEnumTagSinglePayload(v16, v17, v18, v15);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v20 = IntentResolutionRecord.intent.getter(v19);
  uint64_t v21 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  ConfirmIntentAnswer.init(confirmationResponse:intent:)(v2, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
  uint64_t v22 = OUTLINED_FUNCTION_39_23();
  uint64_t v24 = v13;
LABEL_7:
  v23(v22, v24);
  return outlined destroy of OngoingCallConfirmIntentFlow.State((uint64_t)v7);
}

uint64_t outlined destroy of OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t OngoingCallConfirmIntentFlow.__allocating_init(rchRecord:sharedGlobals:)(uint64_t a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  __swift_storeEnumTagSinglePayload(v12, 1LL, 1LL, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v16);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, _BYTE *))(v2 + 144))(v12, v9, v16);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v14;
}

void OngoingCallConfirmIntentFlow.__allocating_init(state:rchRecord:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3)
{
}

void OngoingCallConfirmIntentFlow.init(state:rchRecord:sharedGlobals:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_rchRecord;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(v6, a2, v7);
  outlined init with take of AppSelectionSignalComponent( a3,  v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals);
  OUTLINED_FUNCTION_6();
}

uint64_t outlined init with take of OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t OngoingCallConfirmIntentFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow,  type metadata accessor for OngoingCallConfirmIntentFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t type metadata accessor for OngoingCallConfirmIntentFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for OngoingCallConfirmIntentFlow,  (uint64_t)&nominal type descriptor for OngoingCallConfirmIntentFlow);
}

uint64_t OngoingCallConfirmIntentFlow.execute()(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = OUTLINED_FUNCTION_28();
  v2[20] = OUTLINED_FUNCTION_28();
  v2[21] = OUTLINED_FUNCTION_28();
  type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  v2[22] = OUTLINED_FUNCTION_28();
  v2[23] = OUTLINED_FUNCTION_28();
  v2[24] = OUTLINED_FUNCTION_28();
  return swift_task_switch(OngoingCallConfirmIntentFlow.execute(), 0LL, 0LL);
}

uint64_t OngoingCallConfirmIntentFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 136);
  OUTLINED_FUNCTION_23_47();
  if (__swift_getEnumTagSinglePayload(v1, 1LL, v2) == 1)
  {
    (*(void (**)(void))(**(void **)(v0 + 128) + 104LL))();
    uint64_t v3 = *(void *)(v0 + 40);
    OUTLINED_FUNCTION_82((void *)(v0 + 16));
    uint64_t v4 = OUTLINED_FUNCTION_35_31();
    uint64_t v6 = v5(v4);
    if (v6)
    {
      uint64_t v7 = v6;
      __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
      uint64_t v8 = OUTLINED_FUNCTION_35_31();
      uint64_t v10 = OngoingCallConfirmIntentFlow.makeErrorFlow(currentCall:)(v8, v9);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v13 = *(void *)(v0 + 176);
        uint64_t v12 = *(void *)(v0 + 184);
        uint64_t v14 = *(void *)(v0 + 136);
        uint64_t v15 = *(void *)(v0 + 128);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 144) + 104LL))( v12,  enum case for PromptResult.cancelled<A>(_:),  v14);
        OUTLINED_FUNCTION_27_48();
        __swift_storeEnumTagSinglePayload(v16, v17, v18, v14);
        outlined init with take of OngoingCallConfirmIntentFlow.State(v12, v13);
        uint64_t v19 = v15 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
        OUTLINED_FUNCTION_5_9( v15 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state,  v0 + 80);
        outlined assign with take of OngoingCallConfirmIntentFlow.State(v13, v19);
        swift_endAccess(v0 + 80);
        *(void *)(v0 + 112) = v11;
        type metadata accessor for SimpleOutputFlowAsync(0LL);
        static ExecuteResponse.complete<A>(next:)(v0 + 112);
        swift_unknownObjectRelease(v7);
        OUTLINED_FUNCTION_38_1();
      }

      else
      {
        uint64_t v83 = OUTLINED_FUNCTION_35_31();
        OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)(v83, v84, v85);
        swift_unknownObjectRelease(v7);
      }
    }

    else
    {
      __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v58 = OUTLINED_FUNCTION_15_1();
      uint64_t v59 = (os_log_s *)OUTLINED_FUNCTION_12_1(v58, (uint64_t)static Logger.siriPhone);
      os_log_type_t v60 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_7(v60))
      {
        uint64_t v61 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl( &dword_0,  v59,  (os_log_type_t)v3,  "#OngoingCallConfirmIntentFlow: No current call during OngoingCall flows. Proceed with new call.",  v61,  2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v61);
      }

      uint64_t v63 = *(void *)(v0 + 176);
      uint64_t v62 = *(_BYTE **)(v0 + 184);
      uint64_t v64 = *(void *)(v0 + 136);
      uint64_t v65 = *(void *)(v0 + 144);
      uint64_t v66 = *(void *)(v0 + 128);

      _BYTE *v62 = 0;
      (*(void (**)(_BYTE *, void, uint64_t))(v65 + 104))( v62,  enum case for PromptResult.answered<A>(_:),  v64);
      OUTLINED_FUNCTION_27_48();
      __swift_storeEnumTagSinglePayload(v67, v68, v69, v64);
      outlined init with take of OngoingCallConfirmIntentFlow.State((uint64_t)v62, v63);
      uint64_t v70 = v66 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
      uint64_t v71 = OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_5_9(v71, v72);
      outlined assign with take of OngoingCallConfirmIntentFlow.State(v63, v70);
      uint64_t v73 = swift_endAccess(v0 + 56);
      static ExecuteResponse.complete()(v73);
    }
  }

  else
  {
    int v20 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 144) + 88LL))( *(void *)(v0 + 192),  *(void *)(v0 + 136));
    uint64_t v21 = *(void *)(v0 + 192);
    uint64_t v22 = *(os_log_s **)(v0 + 136);
    uint64_t v23 = *(void *)(v0 + 144);
    if (v20 == enum case for PromptResult.answered<A>(_:))
    {
      uint64_t v24 = *(_BYTE **)(v0 + 168);
      (*(void (**)(_BYTE *, uint64_t, void))(v23 + 16))(v24, v21, *(void *)(v0 + 136));
      uint64_t v25 = OUTLINED_FUNCTION_9_0();
      v26(v25);
      if (*v24 == 1)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v27 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v27, (uint64_t)static Logger.siriPhone);
        os_log_type_t v28 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_27_1(v28))
        {
          uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
          OUTLINED_FUNCTION_47(v29);
          OUTLINED_FUNCTION_5_38( &dword_0,  v22,  (os_log_type_t)v24,  "#OngoingCallConfirmIntentFlow User selected add to call, push new RCHFlow");
          OUTLINED_FUNCTION_0_2(v23);
        }

        uint64_t v30 = *(void *)(v0 + 192);
        uint64_t v31 = *(void *)(v0 + 136);
        uint64_t v32 = *(void *)(v0 + 144);

        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
        uint64_t v34 = (void *)IntentResolutionRecord.intent.getter(v33);
        outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v34);
        uint64_t v36 = v35;
        id v37 = objc_allocWithZone(&OBJC_CLASS___INAddCallParticipantIntent);
        id v38 = @nonobjc INAddCallParticipantIntent.init(participants:)(v36);
        IntentResolutionRecord.app.getter(v33);
        static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)();
        uint64_t v40 = v39;
        OUTLINED_FUNCTION_38_1();
        static ExecuteResponse.complete<A>(next:)(v40);
        swift_release(v40);

        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }

      else
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v74 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v74, (uint64_t)static Logger.siriPhone);
        os_log_type_t v75 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_27_1(v75))
        {
          uint64_t v76 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
          OUTLINED_FUNCTION_47(v76);
          OUTLINED_FUNCTION_5_38( &dword_0,  v22,  (os_log_type_t)v24,  "#OngoingCallConfirmIntentFlow User selected new call, proceed to Handle + ContinueInApp");
          OUTLINED_FUNCTION_0_2(v23);
        }

        uint64_t v77 = *(void *)(v0 + 192);
        uint64_t v78 = *(void *)(v0 + 136);
        uint64_t v79 = *(void *)(v0 + 144);

        static ExecuteResponse.complete()(v80);
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
      }
    }

    else
    {
      (*(void (**)(void, uint64_t, void))(v23 + 32))(*(void *)(v0 + 160), v21, *(void *)(v0 + 136));
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v42 = *(void *)(v0 + 152);
      uint64_t v41 = *(void *)(v0 + 160);
      uint64_t v44 = *(void *)(v0 + 136);
      uint64_t v43 = *(void *)(v0 + 144);
      uint64_t v45 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v45, (uint64_t)static Logger.siriPhone);
      uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v41, v44);
      uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
      os_log_type_t v49 = static os_log_type_t.debug.getter(v47, v48);
      BOOL v50 = os_log_type_enabled(v47, v49);
      id v51 = *(void (**)(uint64_t))(v0 + 144);
      uint64_t v52 = *(void *)(v0 + 136);
      if (v50)
      {
        uint64_t v53 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v54 = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v92 = v54;
        *(_DWORD *)uint64_t v53 = 136315138;
        lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PromptResult<OngoingCallConfirmIntentFlow.Action> and conformance PromptResult<A>,  &demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
        uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter(v52, v55);
        *(void *)(v0 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, &v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v53 + 4);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_22_46();
        _os_log_impl( &dword_0,  v47,  v49,  "#OngoingCallConfirmIntentFlow Prompt result: %s, returning .complete for this flow",  v53,  0xCu);
        OUTLINED_FUNCTION_17_0(v54);
        OUTLINED_FUNCTION_0_2(v54);
        OUTLINED_FUNCTION_0_2((uint64_t)v53);
      }

      else
      {
        OUTLINED_FUNCTION_22_46();
      }

      static ExecuteResponse.complete()(v81);
      uint64_t v82 = OUTLINED_FUNCTION_34_1();
      v51(v82);
    }
  }

  uint64_t v86 = *(void *)(v0 + 184);
  uint64_t v88 = *(void *)(v0 + 168);
  uint64_t v87 = *(void *)(v0 + 176);
  uint64_t v90 = *(void *)(v0 + 152);
  uint64_t v89 = *(void *)(v0 + 160);
  swift_task_dealloc(*(void *)(v0 + 192));
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

__int128 *OngoingCallConfirmIntentFlow.makeErrorFlow(currentCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for DialogPhase(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  LOBYTE(v2) = v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_rchRecord;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v10 = (void *)IntentResolutionRecord.intent.getter(v9);
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v10);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0) {
      uint64_t v77 = v12;
    }
    else {
      uint64_t v77 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v77);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8LL));
  }

  swift_bridgeObjectRelease();
  if (v13 != 1) {
    goto LABEL_46;
  }
  uint64_t v14 = (void *)IntentResolutionRecord.intent.getter(v9);
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v14);
  if (!v15) {
    goto LABEL_46;
  }
  uint64_t v2 = v15;
  if (!((unint64_t)v15 >> 62))
  {
LABEL_45:
    OUTLINED_FUNCTION_62();
    goto LABEL_46;
  }

  if (v15 >= 0) {
    v15 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v15)) {
    goto LABEL_45;
  }
LABEL_10:
  uint64_t v9 = v2 & 0xC000000000000001LL;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v2 & 0xC000000000000001LL) == 0, v2);
  if ((v2 & 0xC000000000000001LL) != 0) {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
  }
  else {
    id v16 = *(id *)(v2 + 32);
  }
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_62();
  id v18 = [v17 personHandle];
  if (!v18)
  {

LABEL_46:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v78 = OUTLINED_FUNCTION_15_1();
    uint64_t v79 = (os_log_s *)OUTLINED_FUNCTION_12_1(v78, (uint64_t)static Logger.siriPhone);
    os_log_type_t v80 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_10(v80))
    {
      uint64_t v81 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v81);
      OUTLINED_FUNCTION_5_38( &dword_0,  v79,  (os_log_type_t)v2,  "#OngoingCallConfirmIntentFlow: Skipping validation for group call requests. Continue to offer.");
      OUTLINED_FUNCTION_0_2(v9);
    }

    return 0LL;
  }

  id v19 = v18;
  (*(void (**)(__int128 *__return_ptr))(*(void *)v3 + 104LL))(&v102);
  unint64_t v95 = v19;
  uint64_t v20 = v103[1];
  uint64_t v21 = v103[2];
  OUTLINED_FUNCTION_82(&v102);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(v20, v21);
  uint64_t v24 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 16))(v95, v22, v23);
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_1(&v102);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v38 = OUTLINED_FUNCTION_15_1();
    uint64_t v39 = (os_log_s *)OUTLINED_FUNCTION_12_1(v38, (uint64_t)static Logger.siriPhone);
    os_log_type_t v40 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_10(v40))
    {
      uint64_t v41 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v41);
      OUTLINED_FUNCTION_5_38( &dword_0,  v39,  (os_log_type_t)v22,  "#OngoingCallConfirmIntentFlow: Could not normalize handles for validation. Continue to offer.");
      OUTLINED_FUNCTION_0_2(v20);
    }

    return 0LL;
  }

  unint64_t v94 = (void *)v24;
  __swift_destroy_boxed_opaque_existential_1(&v102);
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v26 = SPHCall.localHandle.getter(ObjectType, a2);
  if (!v26)
  {
LABEL_27:
    uint64_t v93 = v17;
    uint64_t v89 = *(uint64_t (**)(uint64_t))(a2 + 56);
    uint64_t v42 = v89(ObjectType);
    id v43 = v94;
    specialized Sequence.contains(where:)(v42, v43);
    char v45 = v44;
    swift_bridgeObjectRelease();
    if ((v45 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v46 = OUTLINED_FUNCTION_15_1();
      uint64_t v47 = (os_log_s *)__swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
      id v48 = v43;
      uint64_t v49 = a1;
      swift_unknownObjectRetain_n(a1, 2LL);
      id v91 = v48;
      BOOL v50 = v47;
      Logger.logObject.getter(v91);
      os_log_type_t v51 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v51))
      {
        os_log_type_t v86 = v47;
        uint64_t v52 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v85 = (void *)OUTLINED_FUNCTION_7_0(8LL);
        uint64_t v87 = OUTLINED_FUNCTION_7_0(32LL);
        *(void *)&__int128 v102 = v87;
        *(_DWORD *)uint64_t v52 = 136315394;
        uint64_t v84 = v50;
        uint64_t v53 = ((uint64_t (*)(uint64_t, uint64_t))v89)(ObjectType, a2);
        uint64_t v54 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for TUHandle,  &OBJC_CLASS___TUHandle_ptr);
        unint64_t v55 = lazy protocol witness table accessor for type TUHandle and conformance NSObject();
        uint64_t v56 = Set.description.getter(v53, v54, v55);
        unint64_t v58 = v57;
        OUTLINED_FUNCTION_62();
        *(void *)&__int128 v98 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v58, (uint64_t *)&v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v52 + 4);
        swift_unknownObjectRelease_n(a1, 2LL);
        swift_bridgeObjectRelease();
        uint64_t v83 = (uint8_t *)v52;
        *(_WORD *)(v52 + 12) = 2112;
        uint64_t v59 = v52 + 14;
        *(void *)&__int128 v98 = v91;
        id v60 = v91;
        uint64_t v49 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v59);
        *uint64_t v85 = v94;

        _os_log_impl( &dword_0,  v84,  v86,  "#OngoingCallConfirmIntentFlow: Providing error dialog for calling contact we're already calling, %s contains %@",  v83,  0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        OUTLINED_FUNCTION_17_0((uint64_t)v85);
        OUTLINED_FUNCTION_0_2((uint64_t)v85);
        OUTLINED_FUNCTION_17_0(v87);
        OUTLINED_FUNCTION_0_2(v87);
        OUTLINED_FUNCTION_0_2((uint64_t)v83);
      }

      else
      {

        OUTLINED_FUNCTION_33_46();
        swift_unknownObjectRelease_n(a1, 2LL);
      }

      outlined init with copy of SignalProviding( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals,  (uint64_t)v103);
      *(void *)&__int128 v102 = v49;
      *((void *)&v102 + 1) = a2;
      type metadata accessor for AddCallParticipantCATsSimple(0LL);
      uint64_t v61 = swift_unknownObjectRetain(v49);
      static CATOption.defaultMode.getter(v61);
      uint64_t v106 = OUTLINED_FUNCTION_110_0();
      type metadata accessor for PhonePerson(0LL);
      uint64_t v63 = v104;
      uint64_t v62 = v105;
      __swift_project_boxed_opaque_existential_1(v103, v104);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v62 + 8))(&v98, v63, v62);
      uint64_t v65 = *((void *)&v99 + 1);
      uint64_t v64 = v100;
      __swift_project_boxed_opaque_existential_1(&v98, *((uint64_t *)&v99 + 1));
      dispatch thunk of DeviceState.siriLocale.getter(v65, v64);
      static PhonePerson.make(phonePerson:options:locale:)(v93, 0, v8);
      uint64_t v67 = v66;
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
      __swift_destroy_boxed_opaque_existential_1(&v98);
      outlined init with copy of OngoingCallErrorFlowFactory(&v102, (uint64_t)&v98);
      uint64_t v68 = swift_allocObject(&unk_410540, 88LL, 7LL);
      __int128 v69 = v99;
      *(_OWORD *)(v68 + 16) = v98;
      *(_OWORD *)(v68 + 32) = v69;
      __int128 v70 = v101;
      *(_OWORD *)(v68 + 48) = v100;
      *(_OWORD *)(v68 + 64) = v70;
      *(void *)(v68 + 80) = v67;
      swift_retain();
      uint64_t v71 = swift_retain();
      static DialogPhase.error.getter(v71);
      outlined init with copy of SignalProviding((uint64_t)v103, (uint64_t)&v98);
      uint64_t v72 = type metadata accessor for DialogOutputFactory(0LL);
      OUTLINED_FUNCTION_15_2(v72);
      DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
      uint64_t v74 = v73;
      os_log_type_t v75 = v73;
      (*(void (**)(void))(*(void *)v73 + 112LL))();
      OUTLINED_FUNCTION_24_42();

      swift_release(v67);
      swift_release(v68);
      swift_release(v74);
      goto LABEL_37;
    }

    return 0LL;
  }

  uint64_t v27 = (void *)v26;
  if (!TUHandlesAreCanonicallyEqual(v26, v94))
  {

    goto LABEL_27;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v28 = OUTLINED_FUNCTION_15_1();
  uint64_t v29 = (os_log_s *)__swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  id v30 = v94;
  id v31 = v27;
  id v90 = v30;
  id v32 = v31;
  Logger.logObject.getter(v32);
  os_log_type_t v33 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v33))
  {
    uint64_t v34 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v35 = (void *)OUTLINED_FUNCTION_7_0(16LL);
    *(_DWORD *)uint64_t v34 = 138412546;
    uint64_t v92 = v17;
    *(void *)&__int128 v102 = v90;
    os_log_type_t v88 = v30;
    id v36 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, (char *)&v102 + 8, v34 + 4);
    *uint64_t v35 = v94;

    *(_WORD *)(v34 + 12) = 2112;
    *(void *)&__int128 v102 = v32;
    id v37 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, (char *)&v102 + 8, v34 + 14);
    v35[1] = v27;

    uint64_t v17 = v92;
    _os_log_impl( &dword_0,  v29,  v88,  "#OngoingCallConfirmIntentFlow: Providing error dialog for calling self, %@ matches %@",  (uint8_t *)v34,  0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v35, 2LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v35);
    OUTLINED_FUNCTION_0_2(v34);
  }

  else
  {

    OUTLINED_FUNCTION_33_46();
  }

  outlined init with copy of SignalProviding( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals,  (uint64_t)v103);
  *(void *)&__int128 v102 = a1;
  *((void *)&v102 + 1) = a2;
  type metadata accessor for AddCallParticipantCATsSimple(0LL);
  uint64_t v76 = swift_unknownObjectRetain(a1);
  static CATOption.defaultMode.getter(v76);
  uint64_t v106 = OUTLINED_FUNCTION_110_0();
  os_log_type_t v75 = &v102;
  OngoingCallErrorFlowFactory.selfAdd()();
  OUTLINED_FUNCTION_24_42();

LABEL_37:
  outlined destroy of OngoingCallErrorFlowFactory(&v102);
  return v75;
}

uint64_t OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v55)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::Int v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[2];
  uint64_t v101;
  uint64_t v102;
  void v103[5];
  uint64_t v4 = v3;
  type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v92 = v8 - v9;
  __chkstk_darwin();
  id v91 = (char *)&v87 - v10;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v93 = v12 - v11;
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>)
                  - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = *(void (**)(uint64_t))(v13 + 16);
  id v90 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_rchRecord;
  unint64_t v95 = v18;
  v17(v16);
  uint64_t v19 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals;
  uint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 24);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals + 32);
  OUTLINED_FUNCTION_41_32();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v21 + 120))(&v102, v20, v21);
  uint64_t v22 = *(void *)(v19 + 24);
  uint64_t v23 = *(void *)(v19 + 32);
  unint64_t v94 = (void *)v19;
  OUTLINED_FUNCTION_41_32();
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 72))(v22, v23);
  (*(void (**)(__int128 *__return_ptr))(*(void *)v24 + 232LL))(&v96);
  OUTLINED_FUNCTION_38_1();
  if (v98 == 1)
  {
    outlined destroy of UUID?( (uint64_t)&v96,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    memset(v100, 0, sizeof(v100));
    __int128 v101 = 0LL;
  }

  else
  {
    outlined init with copy of SiriPhoneContact?( (uint64_t)&v96 + 8,  (uint64_t)v100,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined destroy of TransformationResult((uint64_t)&v96);
  }

  static OngoingCallOfferOptions.from(rchRecord:callStateProvider:nlIntent:)(v16, &v102, (uint64_t)v100);
  uint64_t v26 = v25;
  outlined destroy of UUID?((uint64_t)v100, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  __swift_destroy_boxed_opaque_existential_1(&v102);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v95);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v27 = OUTLINED_FUNCTION_15_1();
  uint64_t v28 = (os_log_s *)__swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  uint64_t v29 = swift_bridgeObjectRetain_n(v26, 2LL);
  Logger.logObject.getter(v29);
  os_log_type_t v30 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v28, v30))
  {
    id v31 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v32 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v89 = v4;
    uint64_t v33 = v32;
    *(void *)&uint64_t v96 = v32;
    *(_DWORD *)id v31 = 136315138;
    uint64_t v16 = (uint64_t)(v31 + 12);
    os_log_type_t v88 = a2;
    uint64_t v87 = a3;
    uint64_t v34 = a1;
    unint64_t v35 = lazy protocol witness table accessor for type OngoingCallOfferOptions and conformance OngoingCallOfferOptions();
    uint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v37 = Set.description.getter(v36, &type metadata for OngoingCallOfferOptions, v35);
    unint64_t v39 = v38;
    OUTLINED_FUNCTION_4_1();
    uint64_t v40 = v37;
    a1 = v34;
    __int128 v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v39, (uint64_t *)&v96);
    a2 = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v31 + 4);
    OUTLINED_FUNCTION_28_16();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v28, v30, "#OngoingCallConfirmIntentFlow offerType: %s", v31, 0xCu);
    OUTLINED_FUNCTION_17_0(v33);
    uint64_t v41 = v33;
    uint64_t v4 = v89;
    OUTLINED_FUNCTION_0_2(v41);
    OUTLINED_FUNCTION_0_2((uint64_t)v31);
  }

  else
  {

    OUTLINED_FUNCTION_28_16();
  }

  unint64_t v42 = swift_bridgeObjectRetain();
  char v43 = specialized Collection<>.isAddOrNewCall.getter(v42);
  OUTLINED_FUNCTION_4_1();
  if ((v43 & 1) != 0)
  {
    OUTLINED_FUNCTION_4_1();
    char v44 = v94;
    outlined init with copy of SignalProviding((uint64_t)v94, (uint64_t)&v96);
    type metadata accessor for OngoingCallCATs(0LL);
    OUTLINED_FUNCTION_17_53();
    uint64_t v45 = CATWrapper.__allocating_init(options:globals:)(v16, 0LL);
    type metadata accessor for OngoingCallCATsSimple(0LL);
    OUTLINED_FUNCTION_65();
    uint64_t v46 = OUTLINED_FUNCTION_5_45();
    type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
    OUTLINED_FUNCTION_65();
    uint64_t v47 = OUTLINED_FUNCTION_5_45();
    uint64_t v48 = type metadata accessor for ResponseFactory(0LL);
    OUTLINED_FUNCTION_15_2(v48);
    uint64_t v49 = ResponseFactory.init()();
    uint64_t v50 = type metadata accessor for AddOrCallPromptForValueStrategy();
    uint64_t v51 = OUTLINED_FUNCTION_30_37(v50);
    uint64_t v52 = specialized AddOrCallPromptForValueStrategy.init(sharedGlobals:ongoingCallCats:ongoingCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:)( &v96,  v45,  v46,  v47,  v49,  v51);
    uint64_t v53 = v44[3];
    uint64_t v54 = v44[4];
    __swift_project_boxed_opaque_existential_1(v44, v53);
    unint64_t v55 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v54 + 16);
    swift_retain();
    v55(&v96, v53, v54);
    uint64_t v56 = v97;
    unint64_t v57 = v99;
    unint64_t v58 = __swift_project_boxed_opaque_existential_1(&v96, v97);
    v103[2] = v56;
    void v103[3] = v57;
    uint64_t v59 = __swift_allocate_boxed_opaque_existential_1(&v102);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16LL))(v59, v58, v56);
    id v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForValueFlowAsync<OngoingCallConfirmIntentFlow.Action>);
    OUTLINED_FUNCTION_15_2(v60);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AddOrCallPromptForValueStrategy and conformance AddOrCallPromptForValueStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for AddOrCallPromptForValueStrategy);
    uint64_t v62 = PromptForValueFlowAsync.init<A>(strategy:outputPublisher:)(v52, &v102, v50, v61);
    __swift_destroy_boxed_opaque_existential_1(&v96);
    *(void *)&uint64_t v96 = v62;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PromptForValueFlowAsync<OngoingCallConfirmIntentFlow.Action> and conformance PromptForValueFlowAsync<A>,  &demangling cache variable for type metadata for PromptForValueFlowAsync<OngoingCallConfirmIntentFlow.Action>);
    swift_retain();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)( &v96,  partial apply for implicit closure #3 in implicit closure #2 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:),  v4,  v60);
    OUTLINED_FUNCTION_38_1();
    swift_release(v4);
    uint64_t v63 = v52;
    return swift_release(v63);
  }

  if (!*(void *)(v26 + 16)
    || (Hasher.init(_seed:)(&v96, *(void *)(v26 + 40)),
        String.hash(into:)(&v96, 0x654E646E41646E65LL, 0xED00006C6C614377LL),
        uint64_t v65 = Hasher._finalize()(),
        uint64_t v66 = -1LL << *(_BYTE *)(v26 + 32),
        uint64_t v67 = v65 & ~v66,
        ((*(void *)(v26 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v67) & 1) == 0))
  {
LABEL_21:
    OUTLINED_FUNCTION_4_1();
    uint64_t v72 = (uint64_t)v91;
    *id v91 = 0;
    uint64_t v73 = enum case for PromptResult.answered<A>(_:);
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 104LL))(v72, v73, v74);
    OUTLINED_FUNCTION_27_48();
    __swift_storeEnumTagSinglePayload(v75, v76, v77, v74);
    outlined init with take of OngoingCallConfirmIntentFlow.State(v72, v92);
    OUTLINED_FUNCTION_5_9( v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state,  (uint64_t)&v96);
    uint64_t v78 = OUTLINED_FUNCTION_34_1();
    outlined assign with take of OngoingCallConfirmIntentFlow.State(v78, v79);
    swift_endAccess(&v96);
    return static ExecuteResponse.ongoing(requireInput:)(0LL);
  }

  uint64_t v68 = ~v66;
  while (!*(_BYTE *)(*(void *)(v26 + 48) + v67))
  {
    __int128 v69 = 0xE300000000000000LL;
    __int128 v70 = 6579297LL;
LABEL_19:
    uint64_t v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, v69, 0x654E646E41646E65LL, 0xED00006C6C614377LL, 0LL);
    OUTLINED_FUNCTION_62();
    if ((v71 & 1) != 0) {
      goto LABEL_23;
    }
    uint64_t v67 = (v67 + 1) & v68;
    if (((*(void *)(v26 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v67) & 1) == 0) {
      goto LABEL_21;
    }
  }

  if (*(_BYTE *)(*(void *)(v26 + 48) + v67) == 2)
  {
    __int128 v69 = 0xEE006C6C61437765LL;
    __int128 v70 = 0x4E646E41646C6F68LL;
    goto LABEL_19;
  }

  OUTLINED_FUNCTION_4_1();
LABEL_23:
  OUTLINED_FUNCTION_4_1();
  swift_unknownObjectRetain(a1);
  os_log_type_t v80 = IntentResolutionRecord.intent.getter(v95);
  outlined init with copy of SignalProviding((uint64_t)v94, (uint64_t)&v96);
  type metadata accessor for OngoingCallCATsSimple(0LL);
  OUTLINED_FUNCTION_17_53();
  uint64_t v81 = OUTLINED_FUNCTION_5_45();
  uint64_t v82 = type metadata accessor for NewCallConfirmationFlowProducer();
  uint64_t v83 = (void *)OUTLINED_FUNCTION_30_37(v82);
  uint64_t v84 = specialized NewCallConfirmationFlowProducer.init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)( a1,  a2,  v80,  &v96,  0LL,  0LL,  0LL,  0LL,  v81,  v83);
  uint64_t v85 = (*(uint64_t (**)(void *))(*v84 + 128LL))(v84);
  OUTLINED_FUNCTION_38_1();
  *(void *)&uint64_t v96 = v85;
  swift_retain();
  os_log_type_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>,  &demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  static ExecuteResponse.ongoing<A>(next:childCompletion:)( &v96,  partial apply for closure #1 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:),  v4,  v86);
  swift_release(v85);
  uint64_t v63 = v4;
  return swift_release(v63);
}

uint64_t closure #1 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v41 = a1;
  uint64_t v40 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v2 = *(void *)(v40 - 8);
  __chkstk_darwin();
  uint64_t v37 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v39 = (char *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
  __chkstk_darwin();
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v34 - v7;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<SimpleConfirmationResponseProvider>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  uint64_t v42 = *(void *)(v17 - 8);
  uint64_t v43 = v17;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20(v16, v41, v11);
  unsigned int v21 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v16, v11);
  if (v21 != enum case for PromptResult.answered<A>(_:)) {
    goto LABEL_10;
  }
  unsigned int v36 = v21;
  v20(v14, (uint64_t)v16, v11);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 96))(v14, v11);
  SimpleConfirmationResponseProvider.confirmationResponse.getter(v22);
  uint64_t v23 = type metadata accessor for SimpleConfirmationResponseProvider(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8LL))(v14, v23);
  uint64_t v41 = v2;
  uint64_t v24 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  uint64_t v25 = v40;
  v24(v8, enum case for ConfirmationResponse.confirmed(_:), v40);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v25);
  uint64_t v26 = (uint64_t)&v5[*((int *)v39 + 12)];
  outlined init with copy of SiriPhoneContact?( (uint64_t)v10,  (uint64_t)v5,  &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined init with copy of SiriPhoneContact?( (uint64_t)v8,  v26,  &demangling cache variable for type metadata for ConfirmationResponse?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1LL, v25) != 1)
  {
    unint64_t v39 = v10;
    uint64_t v28 = v38;
    outlined init with copy of SiriPhoneContact?( (uint64_t)v5,  v38,  &demangling cache variable for type metadata for ConfirmationResponse?);
    if (__swift_getEnumTagSinglePayload(v26, 1LL, v25) != 1)
    {
      uint64_t v29 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v37, v26, v25);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
      int v35 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v29, v25);
      os_log_type_t v30 = *(void (**)(char *, uint64_t))(v41 + 8);
      v30(v29, v25);
      outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for ConfirmationResponse?);
      outlined destroy of UUID?((uint64_t)v39, &demangling cache variable for type metadata for ConfirmationResponse?);
      v30((char *)v28, v25);
      outlined destroy of UUID?((uint64_t)v5, &demangling cache variable for type metadata for ConfirmationResponse?);
      uint64_t v27 = v36;
      if ((v35 & 1) != 0) {
        goto LABEL_9;
      }
LABEL_10:
      uint64_t v27 = enum case for PromptResult.cancelled<A>(_:);
      goto LABEL_11;
    }

    outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for ConfirmationResponse?);
    outlined destroy of UUID?((uint64_t)v39, &demangling cache variable for type metadata for ConfirmationResponse?);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v28, v25);
LABEL_7:
    outlined destroy of UUID?( (uint64_t)v5,  &demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
    goto LABEL_10;
  }

  outlined destroy of UUID?((uint64_t)v8, &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined destroy of UUID?((uint64_t)v10, &demangling cache variable for type metadata for ConfirmationResponse?);
  outlined destroy of UUID?((uint64_t)v5, &demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v27 = v36;
LABEL_9:
  *uint64_t v19 = 0;
LABEL_11:
  uint64_t v32 = v42;
  uint64_t v31 = v43;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v42 + 104))(v19, v27, v43);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  OngoingCallConfirmIntentFlow.onPromptComplete(_:)((uint64_t)v19);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v32 + 8))(v19, v31);
}

uint64_t OngoingCallConfirmIntentFlow.onPromptComplete(_:)(uint64_t a1)
{
  uint64_t v5 = v3 - v4;
  __chkstk_darwin();
  uint64_t v7 = &v15[-v6 - 8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(v7, a1, v8);
  OUTLINED_FUNCTION_27_48();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v8);
  outlined init with take of OngoingCallConfirmIntentFlow.State((uint64_t)v7, v5);
  uint64_t v12 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state;
  OUTLINED_FUNCTION_5_9( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state,  (uint64_t)v15);
  outlined assign with take of OngoingCallConfirmIntentFlow.State(v5, v12);
  return swift_endAccess(v15);
}

void OngoingCallConfirmIntentFlow.deinit()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_2_0(v1);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_sharedGlobals));
  outlined destroy of OngoingCallConfirmIntentFlow.State(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28OngoingCallConfirmIntentFlow_state);
  OUTLINED_FUNCTION_2();
}

uint64_t OngoingCallConfirmIntentFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

id @nonobjc INAddCallParticipantIntent.init(participants:)(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    v2.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }

  else
  {
    v2.super.isa = 0LL;
  }

  id v3 = [v1 initWithParticipants:v2.super.isa];

  return v3;
}

uint64_t outlined assign with take of OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action;
  if (!lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallConfirmIntentFlow.Action,  &type metadata for OngoingCallConfirmIntentFlow.Action);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow.Action and conformance OngoingCallConfirmIntentFlow.Action);
  }

  return result;
}

void base witness table accessor for Flow in OngoingCallConfirmIntentFlow()
{
}

uint64_t sub_2343C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 112LL))();
}

uint64_t ObjC metadata update function for OngoingCallConfirmIntentFlow()
{
  return type metadata accessor for OngoingCallConfirmIntentFlow(0LL);
}

void type metadata completion function for OngoingCallConfirmIntentFlow(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = "(";
    uint64_t v4 = type metadata accessor for OngoingCallConfirmIntentFlow.State(319LL);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 3LL, v6, a1 + 80);
    }
  }

void type metadata accessor for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>( uint64_t a1)
{
  if (!lazy cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>)
  {
    uint64_t v2 = type metadata accessor for CNContactStore( 255LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
    uint64_t v3 = type metadata accessor for CNContactStore( 255LL,  &lazy cache variable for type metadata for INStartCallIntentResponse,  &OBJC_CLASS___INStartCallIntentResponse_ptr);
    unint64_t v4 = type metadata accessor for IntentResolutionRecord(a1, v2, v3);
    if (!v5) {
      atomic_store( v4,  (unint64_t *)&lazy cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
    }
  }

uint64_t *initializeBufferWithCopyOfBuffer for OngoingCallConfirmIntentFlow.State( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain();
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v7);
    }
  }

  return a1;
}

uint64_t destroy for OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 1LL, v2);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  }
  return result;
}

void *initializeWithCopy for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  return a1;
}

void *assignWithCopy for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  return a1;
}

void *initializeWithTake for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  return a1;
}

void *assignWithTake for OngoingCallConfirmIntentFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_234934);
}

uint64_t sub_234934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2) {
    return EnumTagSinglePayload - 1;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for OngoingCallConfirmIntentFlow.State( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_234988);
}

uint64_t sub_234988(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t getEnumTag for OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  return __swift_getEnumTagSinglePayload(a1, 1LL, v2);
}

uint64_t destructiveInjectEnumTag for OngoingCallConfirmIntentFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, v4);
}

void type metadata completion function for OngoingCallConfirmIntentFlow.State(uint64_t a1)
{
  if (v3 <= 0x3F) {
    swift_initEnumMetadataSinglePayload(a1, 256LL, *(void *)(v2 - 8) + 64LL, 1LL);
  }
}

void type metadata accessor for PromptResult<OngoingCallConfirmIntentFlow.Action>()
{
  if (!lazy cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>)
  {
    unint64_t v0 = type metadata accessor for PromptResult(0LL, &type metadata for OngoingCallConfirmIntentFlow.Action);
    if (!v1) {
      atomic_store( v0,  (unint64_t *)&lazy cache variable for type metadata for PromptResult<OngoingCallConfirmIntentFlow.Action>);
    }
  }

uint64_t storeEnumTagSinglePayload for OngoingCallConfirmIntentFlow.Action( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_234B2C + 4 * byte_339165[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_234B60 + 4 * byte_339160[v4]))();
}

uint64_t sub_234B60(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_234B68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x234B70LL);
  }
  return result;
}

uint64_t sub_234B7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x234B84LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_234B88(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_234B90(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OngoingCallConfirmIntentFlow.Action()
{
  return &type metadata for OngoingCallConfirmIntentFlow.Action;
}

uint64_t specialized AddOrCallPromptForValueStrategy.init(sharedGlobals:ongoingCallCats:ongoingCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:)( __int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 112) = type metadata accessor for ResponseFactory(0LL);
  *(void *)(a6 + 120) = &protocol witness table for ResponseFactory;
  *(void *)(a6 + 88) = a5;
  *(_BYTE *)(a6 + 16) = 2;
  outlined init with take of AppSelectionSignalComponent(a1, a6 + 24);
  *(void *)(a6 + 64) = a2;
  *(void *)(a6 + 72) = a3;
  *(void *)(a6 + 80) = a4;
  return a6;
}

void *specialized NewCallConfirmationFlowProducer.init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  a10[13] = &type metadata for LabelTemplatesProvider;
  a10[14] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v18 = (void *)swift_allocObject(&unk_410518, 48LL, 7LL);
  a10[10] = v18;
  void v18[2] = a5;
  v18[3] = a6;
  v18[4] = a7;
  v18[5] = a8;
  a10[2] = a1;
  a10[3] = a2;
  a10[4] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a10 + 5));
  a10[15] = a9;
  return a10;
}

uint64_t partial apply for closure #1 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)( uint64_t a1)
{
  return closure #1 in OngoingCallConfirmIntentFlow.makeOfferResponse(currentCall:)(a1, v1);
}

uint64_t sub_234CDC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_234D08()
{
  return swift_deallocObject(v0, 88LL, 7LL);
}

void *outlined destroy of OngoingCallErrorFlowFactory(void *a1)
{
  return a1;
}

unint64_t lazy protocol witness table accessor for type TUHandle and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type TUHandle and conformance NSObject;
  if (!lazy protocol witness table cache variable for type TUHandle and conformance NSObject)
  {
    uint64_t v1 = type metadata accessor for CNContactStore( 255LL,  &lazy cache variable for type metadata for TUHandle,  &OBJC_CLASS___TUHandle_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_17_53()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_22_46()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_23_47()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112LL))();
}

void OUTLINED_FUNCTION_24_42()
{
}

uint64_t OUTLINED_FUNCTION_30_37(uint64_t a1)
{
  return swift_allocObject(a1, 128LL, 7LL);
}

void OUTLINED_FUNCTION_33_46()
{
}

uint64_t OUTLINED_FUNCTION_35_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_23()
{
  return v0;
}

void *OUTLINED_FUNCTION_41_32()
{
  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

void PhoneCallFeatureManager.__allocating_init(featureFlags:)(void *a1)
{
}

uint64_t key path setter for PhoneCallFeatureManager.featureFlags : PhoneCallFeatureManager( uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)(*a2 + 16LL);
  swift_beginAccess(v3, v5, 33LL, 0LL);
  __swift_destroy_boxed_opaque_existential_1(v3);
  outlined init with take of AppSelectionSignalComponent(v6, (uint64_t)v3);
  return swift_endAccess(v5);
}

void PhoneCallFeatureManager.init(featureFlags:)(void *a1)
{
}

uint64_t PhoneCallFeatureManager.forceCallsToHandle.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14, v15, v16);
  uint64_t v10 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_11_6(v10);
  return v10;
}

void PhoneCallFeatureManager.shouldEnableSiriPhoneInCall.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableSiriLaguna.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableFaceTimeUninstall.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableAnswerCallNotificationOnLockedScreen.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableQuickStopCallBell.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 80));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableCancelCallBell.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableSRRRefactor.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 112));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.useEntitySpansForBusinessCall.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 120));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableCompositionFlowForAllLocales.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 128));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableSmartUI.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 136));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureManager.shouldEnableProtectedApps.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 144));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

uint64_t specialized PhoneCallFeatureManager.init(featureFlags:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  uint64_t v7 = __swift_allocate_boxed_opaque_existential_1(&v9);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32LL))(v7, a1, a3);
  outlined init with take of AppSelectionSignalComponent(&v9, a2 + 16);
  return a2;
}

uint64_t sub_235294(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 88LL))();
}

void *OUTLINED_FUNCTION_0_88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return __swift_project_boxed_opaque_existential_1(&a10, a13);
}

void *OUTLINED_FUNCTION_1_85(uint64_t a1, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr))(*(void *)v1 + 88LL))((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_4_87(void *a1)
{
  return v1 & 1;
}

uint64_t OUTLINED_FUNCTION_6_87()
{
  return specialized PhoneCallFeatureManager.init(featureFlags:)(v3, v0, v1, v2);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional __swiftcall AddCallParticipantCATPatternsIdentifiers.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATPatternsIdentifiers.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional)v3;
  }
}

uint64_t AddCallParticipantCATPatternsIdentifiers.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23538C + 4 * byte_339340[a1]))( 0xD000000000000028LL,  0x8000000000343810LL);
}

unint64_t sub_23538C()
{
  return 0xD000000000000027LL;
}

uint64_t sub_2353A8()
{
  return v0 + 3;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATPatternsIdentifiers( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATPatternsIdentifiers()
{
}

void protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATPatternsIdentifiers( uint64_t a1)
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATPatternsIdentifiers( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATPatternsIdentifiers@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATPatternsIdentifiers_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATPatternsIdentifiers.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATPatternsIdentifiers( uint64_t *a1@<X8>)
{
  *a1 = AddCallParticipantCATPatternsIdentifiers.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

void UserDialogActParse.task.setter(uint64_t a1)
{
  *uint64_t v1 = a1;
  OUTLINED_FUNCTION_2();
}

void AddCallParticipantIntentHandledResponseParameters.device.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantIntentHandledResponseParameters.isFaceTimeFirstDevice.getter( uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

void AddCallParticipantIntentHandledResponseParameters.asKeyValuePairs()( unint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  OUTLINED_FUNCTION_32_27(v7, (__n128)xmmword_320080);
  if (a1)
  {
    uint64_t v8 = type metadata accessor for PhoneCallInvite(0LL);
    unint64_t v9 = a1;
  }

  else
  {
    unint64_t v9 = 0LL;
    uint64_t v8 = 0LL;
    v7[3].n128_u64[1] = 0LL;
    v7[4].n128_u64[0] = 0LL;
  }

  v7[3].n128_u64[0] = v9;
  v7[4].n128_u64[1] = v8;
  v7[5].n128_u64[0] = 0x656369766564LL;
  v7[5].n128_u64[1] = 0xE600000000000000LL;
  if (a2)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState(0LL);
    unint64_t v11 = a2;
  }

  else
  {
    unint64_t v11 = 0LL;
    uint64_t v10 = 0LL;
    v7[6].n128_u64[1] = 0LL;
    v7[7].n128_u64[0] = 0LL;
  }

  v7[6].n128_u64[0] = v11;
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = 0xD000000000000015LL;
  v7[8].n128_u64[1] = 0x800000000034BAE0LL;
  v7[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[9].n128_u8[0] = a3 & 1;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_6();
}

double AddCallParticipantPromptForParticipantParameters.asKeyValuePairs()(char a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 80LL);
  *(void *)&double result = 1LL;
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  *(void *)(v3 + 32) = 0xD000000000000015LL;
  *(void *)(v3 + 40) = 0x800000000034BB00LL;
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(_BYTE *)(v3 + 48) = a1;
  return result;
}

uint64_t AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:)( char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 48) = a3;
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 40) = a2;
  *(_BYTE *)(v4 + 33) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:));
}

uint64_t AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:)()
{
  *(void *)(v0 + 16) = 0LL;
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 40);
  char v2 = *(_BYTE *)(v0 + 33);
  *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v0 + 32) = v2;
  v1(v0 + 16);
  unint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  unsigned __int8 v5 = *(_BYTE *)(v0 + 32);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  *(void *)(v0 + 72) = v7;
  OUTLINED_FUNCTION_32_27(v7, (__n128)xmmword_320080);
  if (v3)
  {
    uint64_t v8 = type metadata accessor for PhoneCallInvite(0LL);
    unint64_t v9 = v3;
  }

  else
  {
    unint64_t v9 = 0LL;
    uint64_t v8 = 0LL;
    v7[3].n128_u64[1] = 0LL;
    v7[4].n128_u64[0] = 0LL;
  }

  v7[3].n128_u64[0] = v9;
  v7[4].n128_u64[1] = v8;
  v7[5].n128_u64[0] = 0x656369766564LL;
  v7[5].n128_u64[1] = 0xE600000000000000LL;
  uint64_t v10 = 0LL;
  if (v4)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState(0LL);
  }

  else
  {
    v7[6].n128_u64[1] = 0LL;
    v7[7].n128_u64[0] = 0LL;
  }

  *(void *)(v0 + 80) = v4;
  v7[6].n128_u64[0] = v4;
  v7[8].n128_u64[1] = 0x800000000034BAE0LL;
  v7[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[9].n128_u8[0] = v5;
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = 0xD000000000000015LL;
  swift_retain();
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc(v11);
  *(void *)(v0 + 88) = v12;
  void *v12 = v0;
  v12[1] = AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:);
  uint64_t v13 = OUTLINED_FUNCTION_21_19(0xD000000000000028LL);
  return v15(v13);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_7_91();
  swift_release(v0);
  return (*(uint64_t (**)(void))(v1 + 8))(*(void *)(v1 + 104));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_7_91();
  swift_release(v0);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:)(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 88);
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v6 = AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:);
  }

  else
  {
    *(void *)(v4 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
    uint64_t v6 = AddCallParticipantCATPatternsExecutor.intentHandledResponse(isFaceTimeFirstDevice:_:);
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:)()
{
  char v1 = *(_BYTE *)(v0 + 48);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 80LL);
  *(void *)(v3 + 32) = 0xD000000000000015LL;
  *(void *)(v3 + 40) = 0x800000000034BB00LL;
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(_BYTE *)(v3 + 48) = v1;
  *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  uint64_t v5 = (void *)swift_task_alloc(v4);
  *(void *)(v0 + 32) = v5;
  *uint64_t v5 = v0;
  v5[1] = AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:);
  uint64_t v6 = OUTLINED_FUNCTION_21_19(0xD000000000000027LL);
  return v8(v6);
}

uint64_t AddCallParticipantCATPatternsExecutor.promptForParticipant(isUnsupportedFollowup:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 32);
  uint64_t v5 = *v2;
  *(void *)(v5 + 40) = v1;
  swift_task_dealloc(v4);
  if (v1) {
    return swift_task_switch(AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:), 0LL, 0LL);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t AddCallParticipantCATPatternsExecutor.unsupportedNoActiveCall()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  return OUTLINED_FUNCTION_4_2(0xD00000000000002ALL, 0x80000000003462E0LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

uint64_t AddCallParticipantCATPatternsExecutor.unsupportedParticipantsMultipleContactsUnsupported()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return OUTLINED_FUNCTION_4_2(0xD000000000000045LL, 0x8000000000343870LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

void AddCallParticipantCATPatternsExecutor.__allocating_init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATPatternsIdentifiers,  &type metadata for AddCallParticipantCATPatternsIdentifiers);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATPatternsIdentifiers and conformance AddCallParticipantCATPatternsIdentifiers);
  }

  return result;
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.intentHandledResponse(isFaceTimeFirstDevice:_:) in conformance AddCallParticipantCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**v3 + class metadata base offset for AddCallParticipantCATPatternsExecutor);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  unint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v11(a1, a2, a3);
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.promptForParticipant(isUnsupportedFollowup:) in conformance AddCallParticipantCATPatternsExecutor( uint64_t a1)
{
  uint64_t v4 = *(int **)(class metadata base offset for AddCallParticipantCATPatternsExecutor + **v1 + 8);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v7(a1);
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.unsupportedNoActiveCall() in conformance AddCallParticipantCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(class metadata base offset for AddCallParticipantCATPatternsExecutor + **v0 + 16);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t protocol witness for AddCallParticipantCATPatternsExecuting.unsupportedParticipantsMultipleContactsUnsupported() in conformance AddCallParticipantCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(class metadata base offset for AddCallParticipantCATPatternsExecutor + **v0 + 24);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t storeEnumTagSinglePayload for AddCallParticipantCATPatternsIdentifiers( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_235D28 + 4 * byte_339349[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_235D5C + 4 * byte_339344[v4]))();
}

uint64_t sub_235D5C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_235D64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x235D6CLL);
  }
  return result;
}

uint64_t sub_235D78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x235D80LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_235D84(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_235D8C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AddCallParticipantCATPatternsIdentifiers()
{
}

uint64_t initializeBufferWithCopyOfBuffer for AddCallParticipantIntentHandledResponseParameters( uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for AddCallParticipantIntentHandledResponseParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  uint64_t v6 = a1[1];
  uint64_t v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t assignWithTake for AddCallParticipantIntentHandledResponseParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddCallParticipantIntentHandledResponseParameters( uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      uint64_t v3 = *a1;
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddCallParticipantIntentHandledResponseParameters( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }

  return result;
}

void type metadata accessor for AddCallParticipantIntentHandledResponseParameters()
{
}

uint64_t getEnumTagSinglePayload for AddCallParticipantPromptForParticipantParameters( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for AddCallParticipantPromptForParticipantParameters( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_236024 + 4 * byte_339353[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_236058 + 4 * byte_33934E[v4]))();
}

uint64_t sub_236058(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236060(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x236068LL);
  }
  return result;
}

uint64_t sub_236074(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x23607CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_236080(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236088(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AddCallParticipantPromptForParticipantParameters()
{
}

uint64_t type metadata accessor for AddCallParticipantCATPatternsExecutor(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantCATPatternsExecutor;
  if (!type metadata singleton initialization cache for AddCallParticipantCATPatternsExecutor) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddCallParticipantCATPatternsExecutor);
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantCATPatternsExecutor(uint64_t a1)
{
  return swift_initClassMetadata2( a1,  0LL,  0LL,  v2,  a1 + class metadata base offset for AddCallParticipantCATPatternsExecutor);
}

uint64_t ObjC metadata update function for AddCallParticipantCATPatternsExecutor()
{
  return type metadata accessor for AddCallParticipantCATPatternsExecutor(0LL);
}

uint64_t OUTLINED_FUNCTION_7_91()
{
  return swift_release(*(void *)(v0 + 80));
}

void AnnounceVoicemailPromptForValueFlowStrategy.__allocating_init(sharedGlobals:)(__int128 *a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v1, 56LL);
  outlined init with take of AppSelectionSignalComponent(a1, v3 + 16);
  OUTLINED_FUNCTION_2();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.actionForInput(_:)()
{
  uint64_t v0 = AnnounceVoicemailPromptForValueFlowStrategy.parseInput(input:)();
  else {
    return static ActionForInput.handle()(v0);
  }
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.parseValueResponse(input:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceVoicemailPromptForValueFlowStrategy.parseValueResponse(input:));
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.parseValueResponse(input:)()
{
  uint64_t v1 = AnnounceVoicemailPromptForValueFlowStrategy.parseInput(input:)();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.parseInput(input:)()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Parse(0LL);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  int v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 72))(v6, v7);
  Input.parse.getter(v8);
  BOOL v9 = v8;
  (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v8 + 192LL))(&v41, v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v3);
  if (!v42)
  {
    OUTLINED_FUNCTION_22();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v41,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    return 2LL;
  }

  outlined init with take of AppSelectionSignalComponent(&v41, (uint64_t)v43);
  OUTLINED_FUNCTION_20_54();
  unsigned __int8 v10 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104));
  if (v10 != 17)
  {
    uint64_t v16 = PhoneCallVerb.rawValue.getter(v10);
    if (v16 == 0x636162206C6C6163LL && v17 == 0xE90000000000006BLL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      BOOL v9 = v17;
      _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, 0x636162206C6C6163LL, 0xE90000000000006BLL, 0LL);
      OUTLINED_FUNCTION_4_58();
    }

    OUTLINED_FUNCTION_64_4();
    __swift_destroy_boxed_opaque_existential_1(&v41);
    goto LABEL_20;
  }

  OUTLINED_FUNCTION_64_4();
  __swift_project_boxed_opaque_existential_1(&v41, v42);
  BOOL v9 = PhoneCallNLIntent.isAnyCallToReference()();
  __swift_destroy_boxed_opaque_existential_1(&v41);
  if (v9)
  {
LABEL_20:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = OUTLINED_FUNCTION_31_11();
    Logger.logObject.getter(v20);
    os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_93(v21))
    {
      uint64_t v22 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v23 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v40 = v2;
      *(void *)&__int128 v41 = v23;
      OUTLINED_FUNCTION_28_48(4.8149e-34);
      OUTLINED_FUNCTION_42_22();
      uint64_t v24 = OUTLINED_FUNCTION_27_49();
      uint64_t v26 = OUTLINED_FUNCTION_37_35(v24, v25);
      OUTLINED_FUNCTION_13_77(v26);
      OUTLINED_FUNCTION_17_30();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_62(&dword_0, v27, v28, "#%s User asked to call back");
      OUTLINED_FUNCTION_29_19();
      OUTLINED_FUNCTION_0_2(v23);
      OUTLINED_FUNCTION_0_2(v22);

      OUTLINED_FUNCTION_22();
    }

    else
    {

      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_17_30();
    }

    OUTLINED_FUNCTION_57_4();
    return 0LL;
  }

  OUTLINED_FUNCTION_20_54();
  unsigned __int8 v11 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 112));
  if (v11 == 6)
  {
LABEL_10:
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_57_4();
    return 2LL;
  }

  uint64_t v12 = VoiceMail.VoiceMailVerb.rawValue.getter(v11);
  if (v12 != 2036427888 || v13 != 0xE400000000000000LL)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, 2036427888LL, 0xE400000000000000LL, 0LL);
    OUTLINED_FUNCTION_4_58();
    goto LABEL_10;
  }

  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v29 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
  uint64_t v30 = OUTLINED_FUNCTION_31_11();
  Logger.logObject.getter(v30);
  os_log_type_t v31 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_93(v31))
  {
    uint64_t v32 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v33 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v40 = v2;
    *(void *)&__int128 v41 = v33;
    OUTLINED_FUNCTION_28_48(4.8149e-34);
    OUTLINED_FUNCTION_42_22();
    uint64_t v34 = OUTLINED_FUNCTION_27_49();
    uint64_t v36 = OUTLINED_FUNCTION_37_35(v34, v35);
    OUTLINED_FUNCTION_13_77(v36);
    OUTLINED_FUNCTION_17_30();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_62(&dword_0, v37, v38, "#%s User asked to play the voicemail");
    OUTLINED_FUNCTION_29_19();
    OUTLINED_FUNCTION_0_2(v33);
    OUTLINED_FUNCTION_0_2(v32);
  }

  else
  {

    OUTLINED_FUNCTION_17_30();
  }

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_57_4();
  return 1LL;
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makePromptForValue()(uint64_t a1)
{
  v2[27] = a1;
  v2[28] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v2[29] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for NLContextUpdate(0LL);
  v2[30] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[31] = v5;
  v2[32] = OUTLINED_FUNCTION_23(v5);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makePromptForValue()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  uint64_t v2 = (os_log_s *)__swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v2);
  os_log_type_t v3 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#AnnounceVoicemail Sending output for silent prompt", v4, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v4);
  }

  NLContextUpdate.init()(v5);
  PhoneCallNLConstants.canonicalName.getter(1u);
  NLContextUpdate.weightedPromptTargetDomain.setter();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 64LL);
  *(_OWORD *)(v7 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_125_0();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  PhoneCallNLConstants.canonicalName.getter(0xEu);
  *(void *)(v7 + 48) = v10;
  *(void *)(v7 + 56) = v11;
  NLContextUpdate.weightedPromptResponseTargets.setter(v7);
  uint64_t v12 = OUTLINED_FUNCTION_8_2(v6, 80LL);
  *(_OWORD *)(v12 + 16) = xmmword_320080;
  *(Swift::String *)(v0 + 136) = String.uppercased()();
  *(void *)(v0 + 56) = 32LL;
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0xE100000000000000LL;
  *(void *)(v0 + 72) = 95LL;
  *(void *)(v0 + 80) = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_4_88();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v13, v14, v15, v16, v17, v18, v19, v20);
  swift_bridgeObjectRelease();
  PhoneCallNLConstants.canonicalName.getter(0xEu);
  OUTLINED_FUNCTION_1_86(v21, v22);
  Swift::String v58 = String.uppercased()();
  OUTLINED_FUNCTION_15_27(v58);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = v56;
  *(void *)(v12 + 40) = v57;
  *(Swift::String *)(v0 + 88) = String.uppercased()();
  *(void *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 32LL;
  *(void *)(v0 + 112) = 0xE100000000000000LL;
  *(void *)(v0 + 120) = 95LL;
  *(void *)(v0 + 128) = 0xE100000000000000LL;
  OUTLINED_FUNCTION_4_88();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v23, v24, v25, v26, v27, v28, v29, v30);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_125_0();
  OUTLINED_FUNCTION_1_86(v31, v32);
  Swift::String v59 = String.uppercased()();
  OUTLINED_FUNCTION_15_27(v59);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 48) = v56;
  *(void *)(v12 + 56) = v57;
  *(Swift::String *)(v0 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = String.uppercased()();
  *(void *)(v0 + 152) = 32LL;
  *(void *)(v0 + 160) = 0xE100000000000000LL;
  *(void *)(v0 + 168) = 95LL;
  *(void *)(v0 + 176) = 0xE100000000000000LL;
  OUTLINED_FUNCTION_4_88();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v33, v34, v35, v36, v37, v38, v39, v40);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_125_0();
  OUTLINED_FUNCTION_1_86(v41, v42);
  Swift::String v60 = String.uppercased()();
  OUTLINED_FUNCTION_15_27(v60);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v56;
  *(void *)(v12 + 72) = v57;
  NLContextUpdate.weightedPromptResponseOptions.setter(v12);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  uint64_t v44 = *(void *)(type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL) - 8);
  uint64_t v45 = *(void *)(v44 + 72);
  uint64_t v46 = *(unsigned __int8 *)(v44 + 80);
  uint64_t v47 = (v46 + 32) & ~v46;
  uint64_t v48 = swift_allocObject(v43, v47 + v45, v46 | 7);
  *(_OWORD *)(v48 + 16) = xmmword_31D870;
  AnnounceVoicemailPromptForValueFlowStrategy.getSystemDialogAct()(v48 + v47);
  uint64_t v50 = *(void *)(v0 + 248);
  uint64_t v49 = *(void *)(v0 + 256);
  uint64_t v51 = *(void *)(v0 + 232);
  uint64_t v52 = *(void *)(v0 + 240);
  uint64_t v53 = *(void **)(v0 + 216);
  NLContextUpdate.nluSystemDialogActs.setter(v48);
  NLContextUpdate.submitAsSpokenNotificationContext.setter(1LL);
  NLContextUpdate.weightedPromptStrict.setter(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v51, v49, v52);
  __swift_storeEnumTagSinglePayload(v51, 0LL, 1LL, v52);
  uint64_t v54 = type metadata accessor for AceOutput(0LL);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0LL;
  *(_OWORD *)(v0 + 16) = 0u;
  v53[3] = v54;
  v53[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v53);
  static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)( _swiftEmptyArrayStorage,  v51,  _swiftEmptyArrayStorage,  v0 + 16);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0 + 16,  &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v51,  &demangling cache variable for type metadata for NLContextUpdate?);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v52);
  OUTLINED_FUNCTION_23_3();
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makeFlowCancelledResponse()()
{
  uint64_t v1 = type metadata accessor for PhoneError(0LL);
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_23(*(void *)(v1 - 8));
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  *uint64_t v2 = 0LL;
  v2[1] = 0LL;
  swift_storeEnumTagMultiPayload(v2, v1, 0LL);
  os_log_type_t v3 = lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
  swift_allocError(v1, v3, 0LL, 0LL);
  PhoneError.logged()(v4);
  uint64_t v5 = outlined destroy of PhoneError((uint64_t)v2);
  swift_willThrow(v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_22_43(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makeErrorResponse(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceVoicemailPromptForValueFlowStrategy.makeErrorResponse(_:));
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.makeErrorResponse(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(v8 + 16);
  swift_willThrow(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_errorRetain(v9);
  return OUTLINED_FUNCTION_22_43(*(uint64_t (**)(void))(v8 + 8));
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.getSystemDialogAct()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_SystemGaveOptions(0LL);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin();
  uint64_t v7 = (char *)&v34 - v6;
  Siri_Nlu_External_SystemGaveOptions.init()(v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_UserDialogAct>);
  uint64_t v9 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v10 = swift_allocObject( v8,  ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v9 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v10 + 16) = xmmword_320080;
  uint64_t v11 = v40;
  AnnounceVoicemailPromptForValueFlowStrategy.playVoicemailDialogAct()();
  if (v11)
  {
    *(void *)(v10 + 16) = 0LL;
    swift_release(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v2);
  }

  else
  {
    uint64_t v37 = v2;
    uint64_t v38 = v4;
    uint64_t v40 = v1;
    AnnounceVoicemailPromptForValueFlowStrategy.callBackDialogAct()();
    AnnounceVoicemailPromptForValueFlowStrategy.callReferenceDialogAct()();
    Siri_Nlu_External_SystemGaveOptions.choices.setter(v10);
    uint64_t v13 = v7;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v18 = static os_log_type_t.debug.getter(v16, v17);
    int v19 = v18;
    if (os_log_type_enabled(v16, v18))
    {
      int v36 = v19;
      uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v43 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v35 = v20 + 4;
      uint64_t v22 = swift_beginAccess(v7, &v41, 32LL, 0LL);
      uint64_t v23 = Siri_Nlu_External_SystemGaveOptions.choices.getter(v22);
      swift_endAccess(&v41);
      uint64_t v24 = Array.description.getter(v23, v9);
      uint64_t v25 = v13;
      uint64_t v26 = v24;
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v29 = v26;
      uint64_t v13 = v25;
      uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v35);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v16, (os_log_type_t)v36, "Returning NLUSystemGaveOptions: %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1LL);
      OUTLINED_FUNCTION_0_2(v21);
      OUTLINED_FUNCTION_0_2((uint64_t)v20);
    }

    uint64_t v30 = v40;
    uint64_t v31 = v37;
    uint64_t v32 = v38;
    Siri_Nlu_External_SystemDialogAct.init()(v33);
    swift_beginAccess(v13, &v41, 0LL, 0LL);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v32, v13, v31);
    Siri_Nlu_External_SystemDialogAct.gaveOptions.setter(v32);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v31);
  }

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.playVoicemailDialogAct()()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_48();
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  uint64_t v1 = OUTLINED_FUNCTION_9_70();
  OUTLINED_FUNCTION_15_2(v1);
  uint64_t v2 = UsoEntityBuilder_common_ReferenceType.init()();
  OUTLINED_FUNCTION_22_47( v2,  enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:));
  OUTLINED_FUNCTION_30_38();
  OUTLINED_FUNCTION_21_46();
  uint64_t v3 = type metadata accessor for UsoEntityBuilder_common_Voicemail(0LL);
  OUTLINED_FUNCTION_15_2(v3);
  UsoEntityBuilder_common_Voicemail.init()();
  uint64_t v4 = OUTLINED_FUNCTION_43_26();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoReferenceType(value:)( v4,  &protocol witness table for UsoEntityBuilder_common_ReferenceType);
  OUTLINED_FUNCTION_76();
  uint64_t v5 = type metadata accessor for UsoTaskBuilder_play_common_Voicemail(0LL);
  OUTLINED_FUNCTION_15_2(v5);
  uint64_t v6 = UsoTaskBuilder_play_common_Voicemail.init()();
  dispatch thunk of Uso_VerbTemplateBuilder_Reference.setReference(value:)(v0);
  OUTLINED_FUNCTION_45_24();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_77_0();
  return swift_release(v6);
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.callBackDialogAct()()
{
  uint64_t v0 = type metadata accessor for UsoEntityBuilder_common_PhoneCall(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = OUTLINED_FUNCTION_39_24();
  uint64_t v2 = type metadata accessor for UsoTaskBuilder_callback_common_PhoneCall(0LL);
  OUTLINED_FUNCTION_15_2(v2);
  uint64_t v3 = UsoTaskBuilder_callback_common_PhoneCall.init()();
  dispatch thunk of Uso_VerbTemplateBuilder_ReferenceTarget.setTarget(value:)(v1);
  OUTLINED_FUNCTION_45_24();
  OUTLINED_FUNCTION_76();
  return swift_release(v3);
}

uint64_t AnnounceVoicemailPromptForValueFlowStrategy.callReferenceDialogAct()()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_70();
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = UsoEntityBuilder_common_ReferenceType.init()();
  OUTLINED_FUNCTION_22_47( v1,  enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:));
  OUTLINED_FUNCTION_30_38();
  OUTLINED_FUNCTION_21_46();
  uint64_t v2 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
  OUTLINED_FUNCTION_15_2(v2);
  UsoEntityBuilder_common_Person.init()();
  uint64_t v3 = OUTLINED_FUNCTION_43_26();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoReferenceType(value:)( v3,  &protocol witness table for UsoEntityBuilder_common_ReferenceType);
  OUTLINED_FUNCTION_76();
  uint64_t v4 = type metadata accessor for UsoEntityBuilder_common_PhoneCall(0LL);
  OUTLINED_FUNCTION_15_2(v4);
  uint64_t v5 = OUTLINED_FUNCTION_39_24();
  uint64_t v6 = swift_retain();
  dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)( v6,  &protocol witness table for UsoEntityBuilder_common_Person);
  OUTLINED_FUNCTION_77_0();
  uint64_t v7 = type metadata accessor for UsoTaskBuilder_call_common_PhoneCall(0LL);
  uint64_t v8 = OUTLINED_FUNCTION_15_2(v7);
  uint64_t v9 = UsoTaskBuilder_call_common_PhoneCall.init()(v8);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t v10 = OUTLINED_FUNCTION_39_24();
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v10);
  swift_release(v10);
  OUTLINED_FUNCTION_45_24();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_77_0();
  swift_release(v5);
  return swift_release(v9);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.actionForInput(_:) in conformance AnnounceVoicemailPromptForValueFlowStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96LL))();
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.parseValueResponse(input:) in conformance AnnounceVoicemailPromptForValueFlowStrategy( uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = *(int **)(*(void *)v2 + 104LL);
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc(v5[1]);
  *(void *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for PromptForValueFlowStrategyAsync.parseValueResponse(input:) in conformance AnnounceVoicemailPromptForValueFlowStrategy;
  return v8(a2);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.parseValueResponse(input:) in conformance AnnounceVoicemailPromptForValueFlowStrategy( char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 24);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1) {
    **(_BYTE **)(v4 + 16) = a1;
  }
  return OUTLINED_FUNCTION_22_43(*(uint64_t (**)(void))(v6 + 8));
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makePromptForValue() in conformance AnnounceVoicemailPromptForValueFlowStrategy( uint64_t a1)
{
  uint64_t v4 = *(int **)(*(void *)v1 + 120LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return v7(a1);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse() in conformance AnnounceVoicemailPromptForValueFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()(a1, a2, a3);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence() in conformance AnnounceVoicemailPromptForValueFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()(a1, a2, a3);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeFlowCancelledResponse() in conformance AnnounceVoicemailPromptForValueFlowStrategy( uint64_t a1)
{
  uint64_t v4 = *(int **)(*(void *)v1 + 128LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return v7(a1);
}

uint64_t protocol witness for PromptForValueFlowStrategyAsync.makeErrorResponse(_:) in conformance AnnounceVoicemailPromptForValueFlowStrategy( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(*(void *)v2 + 136LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return v9(a1, a2);
}

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse,  &type metadata for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse and conformance AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin43AnnounceVoicemailPromptForValueFlowStrategy);
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_23764C + 4 * byte_339525[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237680 + 4 * asc_339520[v4]))();
}

uint64_t sub_237680(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x237690LL);
  }
  return result;
}

uint64_t sub_23769C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2376A4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2376A8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2376B0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse()
{
  return &type metadata for AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse;
}

void OUTLINED_FUNCTION_1_86(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = a2;
  v3._countAndFlagsBits = 0x2E65756C61562ELL;
  v3._object = (void *)0xE700000000000000LL;
  String.append(_:)(v3);
}

  ;
}

uint64_t OUTLINED_FUNCTION_9_70()
{
  return type metadata accessor for UsoEntityBuilder_common_ReferenceType(0LL);
}

uint64_t OUTLINED_FUNCTION_13_77(uint64_t a1)
{
  *(void *)(v4 - 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 - 168, v3 + 8, v2, v1);
}

void *OUTLINED_FUNCTION_20_54()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), *(void *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_22_47(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_26_48()
{
  return type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues(0LL);
}

uint64_t OUTLINED_FUNCTION_28_48(float a1)
{
  *uint64_t v1 = a1;
  return type metadata accessor for AnnounceVoicemailPromptForValueFlowStrategy();
}

uint64_t OUTLINED_FUNCTION_30_38()
{
  return dispatch thunk of UsoEntityBuilder_common_ReferenceType.setDefinedValue(value:)(v0);
}

uint64_t OUTLINED_FUNCTION_37_35(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 160));
}

uint64_t OUTLINED_FUNCTION_39_24()
{
  return UsoEntityBuilder_common_PhoneCall.init()();
}

uint64_t OUTLINED_FUNCTION_42_22()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_43_26()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_45_24()
{
  return UsoTaskBuilder.toUserStatedTaskDialogAct()();
}

void specialized static PhoneCallNLContextProvider.makeTCCConfirmationContext(app:)()
{
  id v0 = [objc_allocWithZone(SAAceConfirmationContext) init];
  [v0 setReason:SAAceConfirmationReasonAUTHORIZE_SIRIKIT_APPValue];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject(v1, 40LL, 7LL);
  *(_OWORD *)(v2 + 16) = xmmword_31FE60;
  *(void *)(v2 + 32) = v0;
  uint64_t v17 = v2;
  specialized Array._endMutation()(v2, v3, v4, v5);
  id v16 = v0;
  NLContextUpdate.conversationStateAttachments.setter(v17);
  uint64_t v6 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  uint64_t v7 = MachineUtteranceBuilder.init()();
  uint64_t v8 = App.appIdentifier.getter();
  uint64_t v10 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x656D614E707061LL,  0xE700000000000000LL,  v8,  v9);
  swift_release(v7);
  uint64_t v11 = swift_bridgeObjectRelease();
  uint64_t v12 = dispatch thunk of MachineUtteranceBuilder.build()(v11);
  uint64_t v14 = v13;
  swift_release(v10);
  NLContextUpdate.nlInput.setter(v12, v14);
  uint64_t v15 = specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter(v15);
}

uint64_t PhoneTCCFlowStrategy.__allocating_init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  return PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( a1,  a2,  a3,  a4,  a5,  a6);
}

uint64_t SimpleConfirmationResponseProvider.init(phoneCallConfirmation:)(unsigned __int8 a1)
{
  if (a1 - 1 >= 2)
  {
    if (a1)
    {
      uint64_t v8 = type metadata accessor for ConfirmationResponse(0LL);
      uint64_t v6 = v1;
      uint64_t v7 = 1LL;
      goto LABEL_7;
    }

    uint64_t v3 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
  }

  else
  {
    uint64_t v3 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
  }

  uint64_t v4 = *v3;
  uint64_t v5 = type metadata accessor for ConfirmationResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104LL))(v1, v4, v5);
  uint64_t v6 = v1;
  uint64_t v7 = 0LL;
  uint64_t v8 = v5;
LABEL_7:
  __swift_storeEnumTagSinglePayload(v6, v7, 1LL, v8);
  return SimpleConfirmationResponseProvider.init(_:)(v1);
}

uint64_t PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v22, v23);
  v21[3] = v13;
  v21[4] = *(void *)(v14 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16LL))( boxed_opaque_existential_1,  v15,  v13);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a6, (uint64_t)v20);
  OUTLINED_FUNCTION_23_48();
  OUTLINED_FUNCTION_85();
  uint64_t v17 = PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:)( a2,  v25,  v21,  v20,  v19);
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(v22);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v17;
}

uint64_t PhoneTCCFlowStrategy.makePromptForTCCAcceptance(app:intent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_43B714);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return PhoneTCCFlowStrategy.makeTCCPrompt(app:)(a1, a2);
}

uint64_t PhoneTCCFlowStrategy.actionForInput(input:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_4_3();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  Input.parse.getter(v5);
  unint64_t v6 = PhoneTCCFlowStrategy.parseForConfirmation(parse:)(v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  if ((_DWORD)v6 == 5)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v7 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v8 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v9 = 0;
      OUTLINED_FUNCTION_3_2( &dword_0,  v10,  v11,  "#PhoneTCCAcceptanceFlowStrategy Did not receive a confirmation, ignoring Input");
      OUTLINED_FUNCTION_0_2((uint64_t)v9);
    }

    return static ActionForInput.ignore()(v12);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v15 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v15))
    {
      id v16 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *id v16 = 0;
      OUTLINED_FUNCTION_3_2(&dword_0, v17, v18, "#PhoneTCCAcceptanceFlowStrategy Received a confirmation");
      OUTLINED_FUNCTION_0_2((uint64_t)v16);
    }

    return static ActionForInput.handle()(v19);
  }

uint64_t PhoneTCCFlowStrategy.parseTCCConfirmationResponse(input:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = OUTLINED_FUNCTION_4_3();
  v3[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[7] = v5;
  v3[8] = OUTLINED_FUNCTION_23(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneTCCFlowStrategy.parseTCCConfirmationResponse(input:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v21;
  a20 = v22;
  a18 = v20;
  uint64_t v24 = *(void *)(v20 + 56);
  uint64_t v23 = *(void *)(v20 + 64);
  uint64_t v25 = *(os_log_s **)(v20 + 40);
  Input.parse.getter(v22);
  uint64_t v26 = v25;
  unsigned __int8 v27 = PhoneTCCFlowStrategy.parseForConfirmation(parse:)(v23);
  OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v28 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v29 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v26, v29))
  {
    uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v31 = OUTLINED_FUNCTION_7_0(32LL);
    a9 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    *(_BYTE *)(v20 + 72) = v27;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v33 = String.init<A>(describing:)(v20 + 72, v32);
    *(void *)(v20 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &a9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v20 + 16, v20 + 24, v30 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v26, v29, "#PhoneTCCAcceptanceFlowStrategy User responded: %s", v30, 0xCu);
    swift_arrayDestroy(v31, 1LL);
    OUTLINED_FUNCTION_0_2(v31);
    OUTLINED_FUNCTION_0_2((uint64_t)v30);
  }

  SimpleConfirmationResponseProvider.init(phoneCallConfirmation:)(v27);
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v20 + 8));
}

uint64_t PhoneTCCFlowStrategy.makeTCCConfirmationRejectedResponse(app:intent:)(uint64_t a1)
{
  v2[7] = a1;
  _BYTE v2[8] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[9] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  v2[10] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneTCCFlowStrategy.makeTCCConfirmationRejectedResponse(app:intent:)()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8] + 272LL;
  uint64_t v3 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v3);
  uint64_t v4 = CATWrapperSimple.__allocating_init(options:globals:)(v1, 0LL);
  uint64_t v5 = swift_retain();
  static DialogPhase.canceled.getter(v5);
  outlined init with copy of SharedGlobalsProviding(v2, (uint64_t)(v0 + 2));
  uint64_t v6 = type metadata accessor for DialogOutputFactory(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v8 = v7;
  v0[11] = v7;
  swift_release(v4);
  uint64_t v9 = OUTLINED_FUNCTION_108_5(*(void *)(*(void *)v8 + 136LL));
  uint64_t v13 = v10;
  uint64_t v11 = (void *)swift_task_alloc(v9);
  v0[12] = v11;
  *uint64_t v11 = v0;
  v11[1] = PhoneTCCFlowStrategy.makeTCCConfirmationRejectedResponse(app:intent:);
  return v13(v0[7]);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *(void *)(*v1 + 96);
  uint64_t v3 = *v1;
  *(void *)(v3 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    swift_release(*(void *)(v3 + 88));
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v3 + 8));
  }

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 88));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PhoneTCCFlowStrategy.makeTCCCancelledResponse(app:intent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = OUTLINED_FUNCTION_108_5(*(void *)(*(void *)v3 + 248LL));
  uint64_t v12 = v9;
  uint64_t v10 = (void *)swift_task_alloc(v8);
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v12(a1, a2, a3);
}

uint64_t PhoneTCCFlowStrategy.parseForConfirmation(parse:)(uint64_t a1)
{
  uint64_t v63 = type metadata accessor for CommonDirectAction(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v56 = v4 - v3;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CommonDirectAction?, CommonDirectAction?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v58 = v5;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v62 = &v53[-v6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v55 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v61 = &v53[-v8];
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v57 = &v53[-v9];
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v11 = &v53[-v10];
  __chkstk_darwin();
  uint64_t v13 = (uint64_t *)&v53[-v12];
  uint64_t v14 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  uint64_t v16 = OUTLINED_FUNCTION_4_3();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v20 = v19 - v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19 - v18, a1, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v20, v16) == enum case for Parse.directInvocation(_:))
  {
    OUTLINED_FUNCTION_46_28(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v1, v20, v14);
    static CommonDirectAction.from(_:)(v1, v13);
    uint64_t v21 = v63;
    swift_storeEnumTagMultiPayload(v11, v63, 6LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0LL, 1LL, v21);
    uint64_t v22 = v60;
    uint64_t v23 = v62;
    uint64_t v24 = (uint64_t)&v62[*(int *)(v60 + 48)];
    outlined init with copy of CommonDirectAction?((uint64_t)v13, (uint64_t)v62);
    outlined init with copy of CommonDirectAction?((uint64_t)v11, v24);
    uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v23, 1LL, v21);
    Swift::String v59 = (void *)v14;
    uint64_t v26 = v15;
    uint64_t v27 = (uint64_t)v13;
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_190(EnumTagSinglePayload, &demangling cache variable for type metadata for CommonDirectAction?);
      uint64_t v28 = v63;
      OUTLINED_FUNCTION_14_64(v24, 1LL);
      uint64_t v29 = (uint64_t)v61;
      if (!v43) {
        goto LABEL_11;
      }
      outlined destroy of UUID?((uint64_t)v23, &demangling cache variable for type metadata for CommonDirectAction?);
    }

    else
    {
      int v36 = v57;
      outlined init with copy of CommonDirectAction?((uint64_t)v23, (uint64_t)v57);
      uint64_t v28 = v63;
      uint64_t v37 = OUTLINED_FUNCTION_14_64(v24, 1LL);
      uint64_t v29 = (uint64_t)v61;
      if (v43)
      {
        OUTLINED_FUNCTION_190(v37, &demangling cache variable for type metadata for CommonDirectAction?);
        outlined destroy of MainFlow((uint64_t)v36, type metadata accessor for CommonDirectAction);
LABEL_11:
        outlined destroy of UUID?( (uint64_t)v23,  &demangling cache variable for type metadata for (CommonDirectAction?, CommonDirectAction?));
        goto LABEL_12;
      }

      uint64_t v44 = v24;
      uint64_t v45 = v26;
      uint64_t v46 = v56;
      outlined init with take of CommonDirectAction(v44, v56);
      static CommonDirectAction.__derived_enum_equals(_:_:)((uint64_t)v36, v46);
      int v54 = v47;
      uint64_t v48 = v46;
      uint64_t v26 = v45;
      OUTLINED_FUNCTION_38_31(v48);
      OUTLINED_FUNCTION_40_0((uint64_t)v11);
      outlined destroy of MainFlow((uint64_t)v36, type metadata accessor for CommonDirectAction);
      OUTLINED_FUNCTION_40_0((uint64_t)v62);
      if ((v54 & 1) == 0)
      {
LABEL_12:
        OUTLINED_FUNCTION_44_27(v29, v28);
        __swift_storeEnumTagSinglePayload(v29, 0LL, 1LL, v28);
        uint64_t v38 = v58;
        uint64_t v39 = v58 + *(int *)(v22 + 48);
        outlined init with copy of CommonDirectAction?(v27, v58);
        outlined init with copy of CommonDirectAction?(v29, v39);
        OUTLINED_FUNCTION_14_64(v38, 1LL);
        if (v43)
        {
          outlined destroy of UUID?(v29, &demangling cache variable for type metadata for CommonDirectAction?);
          outlined destroy of UUID?(v27, &demangling cache variable for type metadata for CommonDirectAction?);
          OUTLINED_FUNCTION_31_39(v1, *(uint64_t (**)(uint64_t, void))(v26 + 8));
          uint64_t v40 = OUTLINED_FUNCTION_14_64(v39, 1LL);
          if (v43)
          {
            OUTLINED_FUNCTION_190(v40, &demangling cache variable for type metadata for CommonDirectAction?);
            return 1LL;
          }
        }

        else
        {
          uint64_t v41 = v26;
          uint64_t v42 = v55;
          outlined init with copy of CommonDirectAction?(v38, v55);
          OUTLINED_FUNCTION_14_64(v39, 1LL);
          if (!v43)
          {
            uint64_t v49 = v56;
            outlined init with take of CommonDirectAction(v39, v56);
            static CommonDirectAction.__derived_enum_equals(_:_:)(v42, v49);
            char v51 = v50;
            OUTLINED_FUNCTION_38_31(v49);
            OUTLINED_FUNCTION_39_25(v29);
            OUTLINED_FUNCTION_39_25(v27);
            OUTLINED_FUNCTION_31_39(v1, *(uint64_t (**)(uint64_t, void))(v41 + 8));
            OUTLINED_FUNCTION_38_31(v42);
            OUTLINED_FUNCTION_39_25(v38);
            if ((v51 & 1) != 0) {
              return 1LL;
            }
            return 5LL;
          }

          OUTLINED_FUNCTION_40_0(v29);
          OUTLINED_FUNCTION_40_0(v27);
          OUTLINED_FUNCTION_31_39(v1, *(uint64_t (**)(uint64_t, void))(v41 + 8));
          outlined destroy of MainFlow(v42, type metadata accessor for CommonDirectAction);
        }

        OUTLINED_FUNCTION_190( v40,  &demangling cache variable for type metadata for (CommonDirectAction?, CommonDirectAction?));
        return 5LL;
      }
    }

    outlined destroy of UUID?(v27, &demangling cache variable for type metadata for CommonDirectAction?);
    OUTLINED_FUNCTION_31_39(v1, *(uint64_t (**)(uint64_t, void))(v26 + 8));
    return 0LL;
  }

  else
  {
    uint64_t v30 = v59[37];
    uint64_t v31 = v59[38];
    __swift_project_boxed_opaque_existential_1(v59 + 34, v30);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 72))(v30, v31);
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v32 + 192LL))(v64, a1);
    swift_release(v32);
    uint64_t v33 = v65;
    if (v65)
    {
      uint64_t v34 = v66;
      __swift_project_boxed_opaque_existential_1(v64, v65);
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 64))(v33, v34);
      __swift_destroy_boxed_opaque_existential_1(v64);
    }

    else
    {
      outlined destroy of UUID?((uint64_t)v64, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      uint64_t v35 = 5LL;
    }

    OUTLINED_FUNCTION_46_28(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  }

  return v35;
}

uint64_t PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1, uint64_t a2)
{
  v3[242] = v2;
  v3[241] = a2;
  v3[235] = a1;
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v3[243] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[244] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[245] = v6;
  v3[246] = OUTLINED_FUNCTION_23(v6);
  uint64_t v7 = type metadata accessor for CommonDirectAction(0LL);
  v3[247] = v7;
  v3[248] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = type metadata accessor for YesNoConfirmationModel(0LL);
  v3[249] = v8;
  v3[250] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  v3[251] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[252] = v10;
  v3[253] = OUTLINED_FUNCTION_23(v10);
  uint64_t v11 = type metadata accessor for Locale(0LL);
  v3[254] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v3[255] = v12;
  v3[256] = OUTLINED_FUNCTION_23(v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDisplayInfo?);
  v3[257] = OUTLINED_FUNCTION_23(*(void *)(v13 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneTCCFlowStrategy.makeTCCPrompt(app:)()
{
  uint64_t v1 = v0[256];
  uint64_t v25 = v0[255];
  uint64_t v26 = v0[254];
  uint64_t v2 = (void *)v0[242];
  uint64_t v3 = v0[241];
  uint64_t v4 = v2[37];
  uint64_t v5 = v2[38];
  OUTLINED_FUNCTION_17_25(v2 + 34);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v6 = v2[21];
  uint64_t v7 = v2[22];
  OUTLINED_FUNCTION_17_25(v2 + 18);
  uint64_t v8 = v0[180];
  uint64_t v9 = v0[181];
  __swift_project_boxed_opaque_existential_1(v0 + 177, v8);
  dispatch thunk of DeviceState.siriLocale.getter(v8, v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, v1, v6, v7);
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v26);
  if (v12)
  {
    Swift::Bool v13 = App.isFirstParty()();
    AppDisplayInfo.init(displayName:isFirstParty:)(v10, v12, v13);
    uint64_t v14 = 0LL;
  }

  else
  {
    uint64_t v14 = 1LL;
  }

  uint64_t v15 = v0[257];
  uint64_t v16 = (void *)v0[242];
  uint64_t v17 = type metadata accessor for AppDisplayInfo(0LL);
  __swift_storeEnumTagSinglePayload(v15, v14, 1LL, v17);
  uint64_t v18 = v16 + 29;
  uint64_t v19 = v16[32];
  uint64_t v20 = v16[33];
  __swift_project_boxed_opaque_existential_1(v18, v19);
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v0 + 177), (uint64_t)(v0 + 167));
  uint64_t v21 = OUTLINED_FUNCTION_108_5(*(void *)(v20 + 8));
  uint64_t v27 = v22;
  uint64_t v23 = (void *)swift_task_alloc(v21);
  v0[258] = v23;
  *uint64_t v23 = v0;
  v23[1] = PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  return v27(v0[257], v0 + 167, v19, v20);
}

{
  uint64_t v0;
  specialized static PhoneCallNLContextProvider.makeTCCConfirmationContext(app:)();
  swift_asyncLet_begin( v0 + 656,  0LL,  &type metadata for String,  &async function pointer to implicit closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:),  0LL);
  swift_asyncLet_begin( v0 + 16,  0LL,  &type metadata for String,  &async function pointer to implicit closure #2 in PhoneTCCFlowStrategy.makeTCCPrompt(app:),  0LL);
  return swift_asyncLet_get_throwing(v0 + 656, v0 + 1848, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 1456);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 2088) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = v0[248];
  uint64_t v2 = v0[247];
  uint64_t v3 = (void *)v0[242];
  uint64_t v4 = v3 + 34;
  v0[262] = v0[231];
  v0[263] = v0[232];
  swift_storeEnumTagMultiPayload(v1, v2, 6LL);
  uint64_t v5 = v3[37];
  uint64_t v6 = v3[38];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  v7(v5, v6);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(v0 + 187);
  v0[264] = v8;
  __swift_destroy_boxed_opaque_existential_1(v0 + 187);
  outlined destroy of MainFlow(v1, type metadata accessor for CommonDirectAction);
  return swift_asyncLet_get_throwing(v0 + 2, v0 + 233, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 162);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 2120) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = (void *)(*(void *)v0 + 1656LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 2136LL));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v1 = v0[250];
  (*(void (**)(void, void))(v0[245] + 8LL))(v0[246], v0[244]);
  outlined destroy of MainFlow(v1, type metadata accessor for YesNoConfirmationModel);
  __swift_destroy_boxed_opaque_existential_1(v0 + 217);
  return swift_asyncLet_finish(v0 + 2, v0 + 233, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 212);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 656, v0 + 1848, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 1376);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = *(void *)(v0 + 2024);
  uint64_t v2 = *(void *)(v0 + 2016);
  uint64_t v3 = *(void *)(v0 + 2008);
  uint64_t v6 = *(void *)(v0 + 1944);

  OUTLINED_FUNCTION_93_1(v4, &demangling cache variable for type metadata for AppDisplayInfo?);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 1416));
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  swift_task_dealloc(v6);
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_21_0();
  outlined destroy of UUID?(*(void *)(v0 + 2056), &demangling cache variable for type metadata for AppDisplayInfo?);
  uint64_t v1 = *(void *)(v0 + 2024);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 1416));
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc(v1);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 16, v0 + 1864, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 1536);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 656, v0 + 1848, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 1616);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_10_65();
  OUTLINED_FUNCTION_93_1(v2, &demangling cache variable for type metadata for AppDisplayInfo?);
  OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_8_70();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_asyncLet_finish(v0 + 16, v0 + 1864, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 1776);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 656, v0 + 1848, PhoneTCCFlowStrategy.makeTCCPrompt(app:), v0 + 1888);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneTCCFlowStrategy.makeTCCPrompt(app:));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_10_65();
  OUTLINED_FUNCTION_93_1(v2, &demangling cache variable for type metadata for AppDisplayInfo?);
  OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_8_70();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 2064);
  *(void *)(v3 + 2072) = a1;
  *(void *)(v3 + 2080) = v1;
  uint64_t v5 = swift_task_dealloc(v4);
  OUTLINED_FUNCTION_93_1(v5, &demangling cache variable for type metadata for DeviceState?);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t PhoneTCCFlowStrategy.makeTCCPrompt(app:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v60 = (void *)v22[264];
  uint64_t v57 = v22[263];
  uint64_t v56 = v22[262];
  uint64_t v64 = (void *)v22[259];
  uint64_t v23 = v22[250];
  uint64_t v24 = v22[249];
  uint64_t v25 = v22[248];
  uint64_t v63 = v22[253];
  uint64_t v26 = (void *)v22[242];
  uint64_t v61 = v22[243];
  uint64_t v62 = v26 + 34;
  uint64_t v59 = v22[233];
  uint64_t v27 = v22[234];
  OUTLINED_FUNCTION_44_27(v25, v22[247]);
  uint64_t v58 = v26;
  uint64_t v29 = v26[37];
  uint64_t v28 = v26[38];
  __swift_project_boxed_opaque_existential_1(v26 + 34, v29);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  swift_bridgeObjectRetain();
  v30(v29, v28);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(v22 + 197);
  uint64_t v32 = v31;
  __swift_destroy_boxed_opaque_existential_1(v22 + 197);
  outlined destroy of MainFlow(v25, type metadata accessor for CommonDirectAction);
  uint64_t v33 = (void *)(v23 + *(int *)(v24 + 32));
  *uint64_t v33 = 0xD000000000000011LL;
  v33[1] = 0x8000000000346B80LL;
  v22[229] = v56;
  v22[230] = v57;
  Loggable.init(wrappedValue:)(v22 + 229, &type metadata for String);
  unint64_t v34 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v35 = v60;
  CodableAceObject.init(wrappedValue:)(v35, v34);
  v22[227] = v59;
  v22[228] = v27;
  Loggable.init(wrappedValue:)(v22 + 227, &type metadata for String);
  CodableAceObject.init(wrappedValue:)(v32, v34);

  static DialogPhase.confirmation.getter(v36);
  uint64_t v37 = (void *)swift_task_alloc(48LL);
  v37[2] = v22 + 177;
  v37[3] = v23;
  v37[4] = v63;
  OutputGenerationManifest.init(dialogPhase:_:)( v61,  partial apply for closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:),  v37);
  OUTLINED_FUNCTION_23_3();
  uint64_t v38 = v58[37];
  uint64_t v39 = v58[38];
  __swift_project_boxed_opaque_existential_1(v62, v38);
  (*(void (**)(uint64_t, uint64_t))(v39 + 136))(v38, v39);
  uint64_t v40 = v22[220];
  uint64_t v41 = v22[221];
  OUTLINED_FUNCTION_17_25(v22 + 217);
  uint64_t v42 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v22[210] = v42;
  v22[211] = lazy protocol witness table accessor for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22 + 207);
  outlined init with copy of YesNoConfirmationModel(v23, (uint64_t)boxed_opaque_existential_1);
  OUTLINED_FUNCTION_44_27((uint64_t)boxed_opaque_existential_1, v42);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v45 = swift_allocObject(v44, 40LL, 7LL);
  *(_OWORD *)(v45 + 16) = xmmword_31FE60;
  *(void *)(v45 + 32) = v64;
  uint64_t v65 = v45;
  specialized Array._endMutation()(v45, v46, v47, v48);
  v22[266] = v65;
  uint64_t v49 = *(void *)(v41 + 8);
  uint64_t v50 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
  id v51 = v64;
  uint64_t v52 = (void *)swift_task_alloc(v50);
  v22[267] = v52;
  void *v52 = v22;
  v52[1] = PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v22[235],  v22 + 207,  v65,  v22[246],  v40,  v49,  v53,  v54,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t implicit closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to static LabelTemplates.yes()[1]);
  *(void *)(v1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  return static LabelTemplates.yes()();
}

uint64_t implicit closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)()
{
  if (v1) {
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t implicit closure #2 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to static LabelTemplates.no()[1]);
  *(void *)(v1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #2 in PhoneTCCFlowStrategy.makeTCCPrompt(app:);
  return static LabelTemplates.no()();
}

uint64_t implicit closure #2 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)()
{
  if (v1) {
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(1LL);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  char v11 = dispatch thunk of DeviceState.isCarPlay.getter(v9, v10);
  OutputGenerationManifest.listenAfterSpeaking.setter((v11 & 1) == 0);
  uint64_t v12 = (uint64_t *)(a3 + *(int *)(type metadata accessor for YesNoConfirmationModel(0LL) + 32));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  swift_bridgeObjectRetain();
  OutputGenerationManifest.responseViewId.setter(v13, v14);
  uint64_t v15 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16LL))(v8, a4, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v15);
  return OutputGenerationManifest.nlContextUpdate.setter(v8);
}

void PhoneTCCFlowStrategy.__allocating_init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:)()
{
}

void PhoneTCCFlowStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:)()
{
}

uint64_t PhoneTCCFlowStrategy.__ivar_destroyer()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 + 34);
}

void PhoneTCCFlowStrategy.deinit()
{
  uint64_t v0 = PhoneCallStrategy.deinit();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 29);
  __swift_destroy_boxed_opaque_existential_1(v0 + 34);
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneTCCFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 312LL, 7LL);
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.actionForInput(input:) in conformance PhoneTCCFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232LL))();
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.parseTCCConfirmationResponse(input:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 240LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return v9(a1, a2);
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeTCCConfirmationRejectedResponse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 248LL);
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return v11(a1, a2, a3);
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeTCCCancelledResponse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 256LL);
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return v11(a1, a2, a3);
}

uint64_t protocol witness for ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeErrorResponse(error:app:intent:)[1]);
  *(void *)(v6 + 16) = v13;
  uint64_t v15 = type metadata accessor for PhoneTCCFlowStrategy(0LL, *(void *)(a5 + 176), *(void *)(a5 + 184), v14);
  *uint64_t v13 = v6;
  v13[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ClientHandledRequestTCCAcceptanceFlowStrategyAsync.makeErrorResponse(error:app:intent:)( a1,  a2,  a3,  a4,  v15,  a6);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makePromptForTCCAcceptance(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 224LL);
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return v11(a1, a2, a3);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnEmptyParse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v11 = (void *)swift_task_alloc(async function pointer to RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnEmptyParse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for PhoneTCCFlowStrategy(0LL, *(void *)(a4 + 176), *(void *)(a4 + 184), v12);
  *char v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnEmptyParse(app:intent:)(a1, a2, a3, v13, a5);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnLowConfidence(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v11 = (void *)swift_task_alloc(async function pointer to RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnLowConfidence(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for PhoneTCCFlowStrategy(0LL, *(void *)(a4 + 176), *(void *)(a4 + 184), v12);
  *char v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return RequestTCCAcceptanceFlowStrategyAsync.makeRepromptOnLowConfidence(app:intent:)(a1, a2, a3, v13, a5);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makePromptForDeviceUnlock(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v11 = (void *)swift_task_alloc(async function pointer to RequestTCCAcceptanceFlowStrategyAsync.makePromptForDeviceUnlock(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for PhoneTCCFlowStrategy(0LL, *(void *)(a4 + 176), *(void *)(a4 + 184), v12);
  *char v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return RequestTCCAcceptanceFlowStrategyAsync.makePromptForDeviceUnlock(app:intent:)(a1, a2, a3, v13, a5);
}

uint64_t protocol witness for RequestTCCAcceptanceFlowStrategyAsync.makeHandoffForAuthenticationResponse(app:intent:) in conformance PhoneTCCFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v11 = (void *)swift_task_alloc(async function pointer to RequestTCCAcceptanceFlowStrategyAsync.makeHandoffForAuthenticationResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for PhoneTCCFlowStrategy(0LL, *(void *)(a4 + 176), *(void *)(a4 + 184), v12);
  *char v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return RequestTCCAcceptanceFlowStrategyAsync.makeHandoffForAuthenticationResponse(app:intent:)(a1, a2, a3, v13, a5);
}

uint64_t base witness table accessor for RequestTCCAcceptanceFlowStrategyAsync in PhoneTCCFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for PhoneTCCFlowStrategy<A, B>, a1);
}

uint64_t type metadata completion function for PhoneTCCFlowStrategy(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = "(";
  void v2[2] = "(";
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + 192);
}

uint64_t type metadata accessor for PhoneTCCFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PhoneTCCFlowStrategy);
}

uint64_t partial apply for closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)(uint64_t a1)
{
  return closure #1 in PhoneTCCFlowStrategy.makeTCCPrompt(app:)( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_8_70()
{
  uint64_t v2 = *(void *)(v0 + 2056);
  __swift_destroy_boxed_opaque_existential_1(v1);
  return swift_task_dealloc(v2);
}

void OUTLINED_FUNCTION_10_65()
{
}

uint64_t OUTLINED_FUNCTION_14_64(uint64_t a1, uint64_t a2)
{
  return __swift_getEnumTagSinglePayload(a1, a2, v2);
}

void *OUTLINED_FUNCTION_23_48()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_31_39@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 160));
}

void OUTLINED_FUNCTION_38_31(uint64_t a1)
{
}

void OUTLINED_FUNCTION_39_25(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_44_27(uint64_t a1, uint64_t a2)
{
  return swift_storeEnumTagMultiPayload(a1, a2, 7LL);
}

uint64_t OUTLINED_FUNCTION_46_28@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

PhoneCallFlowDelegatePlugin::PhoneCallSlotNames specialized static PhoneCallNLContextProvider.makeNeedsValueContextFor(parameter:)( uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 48LL);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  Swift::String v29 = String.uppercased()();
  v28[0] = 32LL;
  v28[1] = 0xE100000000000000LL;
  v27[0] = 95LL;
  v27[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_32_7((uint64_t)v28, (uint64_t)v27, v6, v7, v8, v9, (uint64_t)&type metadata for String);
  OUTLINED_FUNCTION_23_5();
  PhoneCallNLConstants.canonicalName.getter(6u);
  v29._countAndFlagsBits = v10;
  v29._object = v11;
  v12._countAndFlagsBits = 0x2E65756C61562ELL;
  v12._object = (void *)0xE700000000000000LL;
  String.append(_:)(v12);
  Swift::String v13 = String.uppercased()();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_5();
  object = v29._object;
  *(void *)(v5 + 32) = v29._countAndFlagsBits;
  *(void *)(v5 + 40) = object;
  PhoneCallFlowDelegatePlugin::PhoneCallSlotNames result = NLContextUpdate.weightedPromptResponseOptions.setter(v5);
  if (a2)
  {
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = a1;
    v16._object = a2;
    PhoneCallFlowDelegatePlugin::PhoneCallSlotNames result = PhoneCallSlotNames.init(rawValue:)(v16).value;
    if (result - 4 < 2
      || result == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_participants)
    {
      uint64_t v18 = OUTLINED_FUNCTION_8_2(v4, 64LL);
      *(_OWORD *)(v18 + 16) = xmmword_31D880;
      PhoneCallNLConstants.canonicalName.getter(3u);
      *(void *)(v18 + 32) = v19;
      *(void *)(v18 + 40) = v20;
      PhoneCallNLConstants.canonicalName.getter(5u);
      *(void *)(v18 + 48) = v21;
      *(void *)(v18 + 56) = v22;
      OUTLINED_FUNCTION_52_5();
      NLContextUpdate.weightedPromptStrict.setter(1LL);
      uint64_t v23 = specialized static PhoneCallNLContextProvider.makeSDAForNeedsValueForContact()();
      return NLContextUpdate.nluSystemDialogActs.setter(v23);
    }

    else if (result == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_dateCreated)
    {
      uint64_t v24 = OUTLINED_FUNCTION_8_2(v4, 48LL);
      *(_OWORD *)(v24 + 16) = xmmword_31D870;
      PhoneCallNLConstants.canonicalName.getter(7u);
      *(void *)(v24 + 32) = v25;
      *(void *)(v24 + 40) = v26;
      OUTLINED_FUNCTION_52_5();
      return NLContextUpdate.weightedPromptStrict.setter(1LL);
    }
  }

  return result;
}

char specialized static PhoneCallNLContextProvider.makeGenericConfirmationContextFor(parameter:)( uint64_t a1, void *a2)
{
  char result = specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
  if (a2)
  {
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = a1;
    v5._object = a2;
    char result = PhoneCallSlotNames.init(rawValue:)(v5).value;
    if ((result & 0xFE) == 4)
    {
      uint64_t v6 = specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
      return NLContextUpdate.nluSystemDialogActs.setter(v6);
    }
  }

  return result;
}

uint64_t specialized static PhoneCallNLContextProvider.needsConfirmationContext(parameter:resolutionResult:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_42_4();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = OUTLINED_FUNCTION_15_1();
  uint64_t v9 = (os_log_s *)OUTLINED_FUNCTION_12_1(v8, (uint64_t)static Logger.siriPhone);
  os_log_type_t v11 = static os_log_type_t.debug.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    Swift::String v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)Swift::String v12 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v9, v11, "#PhoneCallNLContextProvider needsConfirmationContext", v12);
    OUTLINED_FUNCTION_0_2((uint64_t)v12);
  }

  specialized static PhoneCallNLContextProvider.makeGenericConfirmationContextFor(parameter:)(v3, v1);
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v3;
  v13._object = v1;
  LOBYTE(v1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = PhoneCallSlotNames.init(rawValue:)(v13);
  if ((v14 & 0xFE) == 4)
  {
    uint64_t v39 = v7;
    uint64_t v15 = NLContextUpdate.weightedPromptResponseTargets.getter(v14);
    if (v15) {
      Swift::String v16 = (void *)v15;
    }
    else {
      Swift::String v16 = _swiftEmptyArrayStorage;
    }
    PhoneCallNLConstants.canonicalName.getter(3u);
    unint64_t v18 = v17;
    uint64_t v20 = v19;
    PhoneCallNLConstants.canonicalName.getter(0xDu);
    uint64_t v23 = v16[2];
    uint64_t v24 = v23 + 2;
    if (__OFADD__(v23, 2LL))
    {
      __break(1u);
    }

    else
    {
      uint64_t v3 = v22;
      unint64_t v36 = v18;
      uint64_t v37 = v21;
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (uint64_t v27 = v16, v24 > v16[3] >> 1))
      {
        if (v23 <= v24) {
          uint64_t v28 = v23 + 2;
        }
        else {
          uint64_t v28 = v23;
        }
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( isUniquelyReferenced_nonNull_native,  v28,  1LL,  (uint64_t)v16);
        uint64_t v27 = v29;
      }

      uint64_t v38 = v6;
      uint64_t v23 = v27[2];
      unint64_t v18 = v27[3];
      uint64_t v24 = v23 + 1;
      swift_bridgeObjectRetain();
      uint64_t v6 = v5;
      if (v23 < v18 >> 1) {
        goto LABEL_17;
      }
    }

    OUTLINED_FUNCTION_85_11(v18 > 1, v24);
    uint64_t v27 = v34;
LABEL_17:
    void v27[2] = v24;
    uint64_t v30 = &v27[2 * v23];
    v30[4] = v36;
    v30[5] = v20;
    unint64_t v31 = v27[3];
    swift_bridgeObjectRetain();
    if (v24 >= v31 >> 1)
    {
      OUTLINED_FUNCTION_85_11(v31 > 1, v23 + 2);
      uint64_t v27 = v35;
    }

    uint64_t v5 = v6;
    void v27[2] = v23 + 2;
    uint64_t v32 = &v27[2 * v24];
    v32[4] = v37;
    v32[5] = v3;
    OUTLINED_FUNCTION_4_1();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NLContextUpdate.weightedPromptResponseTargets.setter(v27);
    uint64_t v6 = v38;
    uint64_t v7 = v39;
  }

  OUTLINED_FUNCTION_61_20(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  return __swift_storeEnumTagSinglePayload(v5, 0LL, 1LL, v6);
}

uint64_t specialized static PhoneCallNLContextProvider.makeSDAForNeedsValueForContact()()
{
  uint64_t v53 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v0 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v2 = (char *)v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for PhoneError(0LL);
  __chkstk_darwin();
  uint64_t v47 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v46[2] = (char *)v46 - v4;
  uint64_t v49 = type metadata accessor for Logger(0LL);
  v46[1] = *(void *)(v49 - 8);
  __chkstk_darwin();
  v46[0] = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = type metadata accessor for Siri_Nlu_External_SystemPrompted(0LL);
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  os_log_type_t v11 = (char *)v46 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  __chkstk_darwin();
  Swift::String v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for UsoTaskBuilder_call_common_PhoneCall(0LL);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  uint64_t v15 = UsoTaskBuilder_call_common_PhoneCall.init()();
  uint64_t v16 = type metadata accessor for UsoEntityBuilder_common_PhoneCall(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v17 = UsoEntityBuilder_common_PhoneCall.init()();
  uint64_t v18 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v19 = UsoEntityBuilder_common_Person.init()();
  dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)( v19,  &protocol witness table for UsoEntityBuilder_common_Person);
  swift_release(v19);
  uint64_t v50 = v17;
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v17);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v21 = swift_allocObject(v20, 40LL, 7LL);
  *(_OWORD *)(v21 + 16) = xmmword_31FE60;
  *(void *)(v21 + 32) = v15;
  v57[0] = v21;
  specialized Array._endMutation()(v21, v22, v23, v24);
  uint64_t v25 = v57[0];
  uint64_t v26 = type metadata accessor for UsoBuilderOptions(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1LL, 1LL, v26);
  uint64_t v51 = v15;
  swift_retain();
  uint64_t v27 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v25, v13);
  swift_bridgeObjectRelease();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v13,  &demangling cache variable for type metadata for UsoBuilderOptions?);
  Siri_Nlu_External_SystemPrompted.init()();
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v27, 0LL);
  Siri_Nlu_External_SystemPrompted.target.setter(v7);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v28 = __swift_project_value_buffer(v49, (uint64_t)static Logger.siriPhone);
  Swift::String v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
  if (os_log_type_enabled(v29, v31))
  {
    uint64_t v32 = swift_slowAlloc(12LL, -1LL);
    uint64_t v49 = v27;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    v57[0] = v48;
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v47 = (char *)(v33 + 4);
    swift_beginAccess(v11, v56, 0LL, 0LL);
    uint64_t v34 = v52;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v9, v11, v54);
    uint64_t v35 = specialized String.init(describing:)((uint64_t)v9);
    uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v47);
    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v29,  v31,  "#PhoneCallNLContextProvider Returning NLUSystemPrompted for prompt for start call: %s",  v33,  0xCu);
    uint64_t v37 = v48;
    swift_arrayDestroy(v48, 1LL);
    swift_slowDealloc(v37, -1LL, -1LL);
    uint64_t v38 = v33;
    uint64_t v27 = v49;
    swift_slowDealloc(v38, -1LL, -1LL);
  }

  else
  {

    uint64_t v34 = v52;
  }

  Siri_Nlu_External_SystemDialogAct.init()();
  swift_beginAccess(v11, v57, 0LL, 0LL);
  uint64_t v39 = v54;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v9, v11, v54);
  Siri_Nlu_External_SystemDialogAct.prompted.setter(v9);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  uint64_t v41 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v42 = (v41 + 32) & ~v41;
  uint64_t v43 = v34;
  uint64_t v44 = swift_allocObject(v40, v42 + *(void *)(v0 + 72), v41 | 7);
  *(_OWORD *)(v44 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v0 + 32))(v44 + v42, v2, v53);
  swift_release(v51);
  swift_release(v50);
  swift_release(v27);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v39);
  return v44;
}

void ParticipantOutputProvider.__allocating_init(sharedGlobals:app:cats:startCallCats:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_79_14(v10, (uint64_t)v32);
  OUTLINED_FUNCTION_79_14(v11, (uint64_t)v30);
  type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  OUTLINED_FUNCTION_100_5();
  uint64_t v12 = OUTLINED_FUNCTION_22_48();
  type metadata accessor for PhoneCallCommonCATs(0LL);
  OUTLINED_FUNCTION_100_5();
  uint64_t v13 = OUTLINED_FUNCTION_22_48();
  uint64_t v14 = OUTLINED_FUNCTION_69_1();
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 16LL);
  type metadata accessor for StartCallCATs(0LL);
  OUTLINED_FUNCTION_100_5();
  uint64_t v16 = (void *)OUTLINED_FUNCTION_22_48();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v18 = OUTLINED_FUNCTION_15_2(v17);
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000010LL,  0x8000000000342230LL,  (uint64_t)v30,  v12,  v13,  v15,  0LL,  0LL,  0LL,  0LL,  (uint64_t)v16,  v18,  v22,  v23[0],  v23[1],  v23[2],  v24,  (uint64_t)v25,  v26[0],  v26[1],  v26[2],  (uint64_t)v27,  (uint64_t)v28,  v29[0]);
  uint64_t v20 = v19;
  uint64_t v31 = 0LL;
  memset(v30, 0, sizeof(v30));
  type metadata accessor for StartCallCATPatternsExecutor(0LL);
  OUTLINED_FUNCTION_100_5();
  v29[3] = v16;
  v29[4] = &protocol witness table for StartCallCATPatternsExecutor;
  v29[0] = (void *)OUTLINED_FUNCTION_22_48();
  type metadata accessor for AddCallParticipantCATPatternsExecutor(0LL);
  OUTLINED_FUNCTION_100_5();
  uint64_t v27 = v16;
  uint64_t v28 = &protocol witness table for AddCallParticipantCATPatternsExecutor;
  v26[0] = OUTLINED_FUNCTION_22_48();
  uint64_t v21 = type metadata accessor for ResponseFactory(0LL);
  OUTLINED_FUNCTION_15_2(v21);
  uint64_t v25 = &protocol witness table for ResponseFactory;
  uint64_t v24 = v21;
  v23[0] = ResponseFactory.init()();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, void **, uint64_t *, uint64_t *, _BYTE *))(v1 + 168))( v32,  v7,  v20,  v5,  v3,  v29,  v26,  v23,  v30);
  __swift_destroy_boxed_opaque_existential_1(v9);
  OUTLINED_FUNCTION_7_5();
}

void ParticipantOutputProvider.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

void ParticipantOutputProvider.crrOutputGenerator.getter(uint64_t a1@<X8>)
{
}

uint64_t ParticipantOutputProvider.templatingService.getter()
{
  return swift_retain(*(void *)(v0 + 248));
}

uint64_t ParticipantOutputProvider.nlContextProvider.getter()
{
  return swift_retain(*(void *)(v0 + 256));
}

void ParticipantOutputProvider.contactsSlotTemplating.getter(uint64_t a1@<X8>)
{
}

uint64_t ParticipantOutputProvider.__allocating_init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v18 = OUTLINED_FUNCTION_8_2(v9, 368LL);
  ParticipantOutputProvider.init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v29,  v30,  vars0);
  return v18;
}

void ParticipantOutputProvider.init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v21;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v73 = v37;
  uint64_t v39 = v38;
  uint64_t v72 = a21;
  uint64_t v71 = type metadata accessor for Locale(0LL);
  uint64_t v70 = *(void *)(v71 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v69 = v41 - v40;
  v24[2] = 0x73746361746E6F63LL;
  v24[3] = 0xE800000000000000LL;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v39, (uint64_t)(v24 + 4));
  v24[9] = v34;
  v24[10] = v32;
  outlined init with copy of SharedGlobalsProviding(v30, (uint64_t)(v24 + 11));
  outlined init with copy of SharedGlobalsProviding(v28, (uint64_t)(v24 + 21));
  outlined init with copy of SharedGlobalsProviding(v26, (uint64_t)(v24 + 26));
  OUTLINED_FUNCTION_71_16(v39);
  uint64_t v42 = v36;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_49_26();
  uint64_t v43 = v39[3];
  uint64_t v44 = v39[4];
  __swift_project_boxed_opaque_existential_1(v39, v43);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v44 + 184))(&v78, v43, v44);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  OUTLINED_FUNCTION_15_2(v45);
  uint64_t v46 = specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v77, &v78);
  v24[31] = v36;
  v24[32] = v46;
  OUTLINED_FUNCTION_71_16(v24 + 4);
  swift_retain();
  OUTLINED_FUNCTION_49_26();
  OUTLINED_FUNCTION_71_16(v24 + 4);
  swift_retain();
  OUTLINED_FUNCTION_49_26();
  uint64_t v47 = v76[3];
  uint64_t v48 = v76[4];
  OUTLINED_FUNCTION_17_25(v76);
  uint64_t v49 = dispatch thunk of DeviceState.siriLocale.getter(v47, v48);
  *(void *)uint64_t v77 = Locale.identifier.getter(v49);
  *(void *)&v77[8] = v50;
  v75[0] = 45LL;
  v75[1] = 0xE100000000000000LL;
  v74[0] = 95LL;
  v74[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v55 = OUTLINED_FUNCTION_32_7((uint64_t)v75, (uint64_t)v74, v51, v52, v53, v54, (uint64_t)&type metadata for String);
  uint64_t v57 = v56;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
  uint64_t v58 = OUTLINED_FUNCTION_69_1();
  uint64_t v59 = OUTLINED_FUNCTION_8_2(v58, 16LL);
  *(void *)&v77[88] = v58;
  *(void *)&v77[96] = &protocol witness table for AppInfoBuilder;
  *(void *)&v77[64] = v59;
  outlined init with take of AppSelectionSignalComponent(&v78, (uint64_t)v77);
  *(void *)&v77[40] = v32;
  *(void *)&v77[48] = v55;
  *(void *)&v77[56] = v57;
  __swift_destroy_boxed_opaque_existential_1(v76);
  memcpy(v24 + 33, v77, 0x68uLL);
  outlined init with copy of Result<TemplatingResult, Error>( v72,  (uint64_t)&v78,  &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
  if (v79)
  {
    OUTLINED_FUNCTION_45_14((uint64_t)&v80);
    swift_release(v36);
    OUTLINED_FUNCTION_45_14((uint64_t)&a9);
    swift_release(v32);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v72,  &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
    uint64_t v60 = (__int128 *)OUTLINED_FUNCTION_36_33();
    outlined init with take of AppSelectionSignalComponent(v60, (uint64_t)v77);
  }

  else
  {
    uint64_t v61 = App.appIdentifier.getter();
    if (v62) {
      uint64_t v63 = v61;
    }
    else {
      uint64_t v63 = 0LL;
    }
    if (v62) {
      unint64_t v64 = v62;
    }
    else {
      unint64_t v64 = 0xE000000000000000LL;
    }
    type metadata accessor for CATGlobals(0LL);
    uint64_t v65 = CATGlobals.__allocating_init()();
    uint64_t v66 = type metadata accessor for ContactResolutionSnippetGenerator(0LL);
    OUTLINED_FUNCTION_15_2(v66);
    uint64_t v67 = ContactResolutionSnippetGenerator.init(appBundleId:globals:)(v63, v64, v65);
    *(void *)&v77[24] = v66;
    *(void *)&v77[32] = &protocol witness table for ContactResolutionSnippetGenerator;
    swift_release(v73);
    swift_release(v42);
    OUTLINED_FUNCTION_45_14((uint64_t)&a9);
    swift_release(v32);
    *(void *)uint64_t v77 = v67;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v72,  &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
    uint64_t v68 = OUTLINED_FUNCTION_36_33();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v68,  &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
  }

  outlined init with take of AppSelectionSignalComponent((__int128 *)v77, (uint64_t)(v24 + 16));
  __swift_destroy_boxed_opaque_existential_1(v39);
  OUTLINED_FUNCTION_7_5();
}

uint64_t ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[3] = a4;
  v5[4] = v4;
  v5[2] = a1;
  uint64_t v6 = OUTLINED_FUNCTION_12_47();
  v5[5] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = OUTLINED_FUNCTION_94();
  v5[6] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[7] = v8;
  v5[8] = OUTLINED_FUNCTION_23(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)()
{
  uint64_t v1 = *(void **)(v0 + 32);
  BOOL v2 = [*(id *)(v0 + 24) resolutionResultCode] == (char *)&dword_0 + 1;
  uint64_t v3 = v1 + 21;
  uint64_t v4 = v1[24];
  uint64_t v5 = v1[25];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(v5 + 16));
  *(void *)(v0 + 72) = v6;
  *uint64_t v6 = v0;
  v6[1] = ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:);
  return v8(v2, v4, v5);
}

{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_49_3();
  uint64_t v3 = v0[9];
  uint64_t v4 = *v2;
  v0[10] = v5;
  OUTLINED_FUNCTION_28_17(v3);
  if (v1)
  {
    swift_task_dealloc(v0[8]);
    OUTLINED_FUNCTION_7_8();
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v4 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 96) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v1 = *(void *)(v0 + 56);

  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_10_0();
  BOOL v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 56);

  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc(*(void *)(v0 + 64));
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v2 = v1[5];
  static DialogPhase.clarification.getter(a1);
  OutputGenerationManifest.init(dialogPhase:_:)( v2,  partial apply for closure #1 in ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:),  v3);
  OUTLINED_FUNCTION_73_22((void *)(v3 + 208));
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  v1[11] = v4;
  *uint64_t v4 = v1;
  v4[1] = ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:);
  OUTLINED_FUNCTION_64_19();
  return OUTLINED_FUNCTION_33_2();
}

uint64_t closure #1 in ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  specialized static PhoneCallNLContextProvider.makeNeedsValueContextFor(parameter:)( *(void *)(a2 + 16),  *(void **)(a2 + 24));
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v5);
  return OutputGenerationManifest.nlContextUpdate.setter(v4);
}

uint64_t ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[14] = a5;
  v6[15] = v5;
  v6[12] = a1;
  v6[13] = a4;
  uint64_t v7 = type metadata accessor for ContactResolutionVerb(0LL);
  v6[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[17] = v8;
  v6[18] = OUTLINED_FUNCTION_8_30(v8);
  v6[19] = OUTLINED_FUNCTION_28();
  uint64_t v9 = OUTLINED_FUNCTION_12_47();
  v6[20] = OUTLINED_FUNCTION_23(*(void *)(v9 - 8));
  uint64_t v10 = OUTLINED_FUNCTION_94();
  v6[21] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v6[22] = v11;
  v6[23] = OUTLINED_FUNCTION_23(v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v6[24] = OUTLINED_FUNCTION_23(*(void *)(v12 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[20];
  uint64_t v3 = (void *)v0[15];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v3[7]);
  uint64_t v4 = OUTLINED_FUNCTION_120_0();
  v5(v4);
  uint64_t v6 = static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(2LL, v0 + 2);
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INIntent, INIntentResponse>);
  uint64_t v9 = specialized static PhoneCallNLContextProvider.needsConfirmationContext(parameter:resolutionResult:)();
  static DialogPhase.confirmation.getter(v9);
  uint64_t v10 = swift_task_alloc(32LL);
  *(void *)(v10 + 16) = v1;
  OutputGenerationManifest.init(dialogPhase:_:)( v2,  partial apply for closure #1 in ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:),  v10);
  OUTLINED_FUNCTION_23_3();
  uint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  OUTLINED_FUNCTION_17_25(v3 + 4);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12);
  os_log_type_t v14 = (*(unsigned __int8 (**)(uint64_t))(*(void *)v13 + 248LL))(v13);
  OUTLINED_FUNCTION_38_1();
  if ((v14 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = OUTLINED_FUNCTION_15_1();
    uint64_t v16 = (os_log_s *)OUTLINED_FUNCTION_12_1(v15, (uint64_t)static Logger.siriPhone);
    os_log_type_t v18 = static os_log_type_t.debug.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      uint64_t v19 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v19 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v16,  v18,  "#ParticipantOutputProvider generateYesNoClarificationContactName by using SMART UI",  v19);
      OUTLINED_FUNCTION_0_2((uint64_t)v19);
    }

    uint64_t v20 = v0[19];
    uint64_t v21 = v0[16];
    uint64_t v22 = v0[17];
    uint64_t v23 = v0[15];

    OutputGenerationManifest.responseViewId.setter(0xD000000000000011LL, 0x8000000000346B80LL);
    __swift_project_boxed_opaque_existential_1((void *)(v23 + 128), *(void *)(v23 + 152));
    (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))( v20,  enum case for ContactResolutionVerb.phoneCallOrFacetimeAudio(_:),  v21);
    uint64_t v24 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ContactResolutionSnippetGenerating.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:dialogOverride:outputGenerationManifest:)[1]);
    v0[25] = v24;
    *uint64_t v24 = v0;
    v24[1] = ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:);
    OUTLINED_FUNCTION_89_13();
    return dispatch thunk of ContactResolutionSnippetGenerating.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:dialogOverride:outputGenerationManifest:)(v0 + 7);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v26 = OUTLINED_FUNCTION_15_1();
    uint64_t v27 = (os_log_s *)OUTLINED_FUNCTION_12_1(v26, (uint64_t)static Logger.siriPhone);
    os_log_type_t v29 = static os_log_type_t.debug.getter(v27, v28);
    if (OUTLINED_FUNCTION_93(v29))
    {
      uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v30 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v27,  v14,  "#ParticipantOutputProvider generateYesNoClarificationContactName by using crrPatternGenerator",  v30);
      OUTLINED_FUNCTION_0_2((uint64_t)v30);
    }

    uint64_t v32 = v0[17];
    uint64_t v31 = v0[18];
    uint64_t v33 = v0[16];

    type metadata accessor for CATGlobals(0LL);
    uint64_t v34 = CATGlobals.__allocating_init()();
    uint64_t v35 = type metadata accessor for ContactResolutionPatternGenerator(0LL);
    OUTLINED_FUNCTION_15_2(v35);
    v0[27] = ContactResolutionPatternGenerator.init(appBundleId:globals:)(v6, v8, v34);
    (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))( v31,  enum case for ContactResolutionVerb.facetime(_:),  v33);
    uint64_t v36 = (void *)swift_task_alloc(async function pointer to ContactResolutionPatternGenerator.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:)[1]);
    v0[28] = v36;
    *uint64_t v36 = v0;
    v36[1] = ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:);
    return ContactResolutionPatternGenerator.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:)( v0[14],  v0[18],  0xD000000000000029LL,  0x800000000034FAF0LL,  0xD000000000000028LL,  0x800000000034FB20LL);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 208) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_18_43();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = OUTLINED_FUNCTION_54_9(*(void *)(v0 + 176));
  OUTLINED_FUNCTION_40_3(v2, &demangling cache variable for type metadata for NLContextUpdate?);
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 56), v1);
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  uint64_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v3);
}

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_73_22((void *)(*(void *)(v0 + 120) + 208LL));
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  *(void *)(v0 + 248) = v1;
  *uint64_t v1 = v0;
  v1[1] = ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:);
  OUTLINED_FUNCTION_64_19();
  return OUTLINED_FUNCTION_33_2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 256) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_47_24();
  OUTLINED_FUNCTION_38_1();
  uint64_t v1 = OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_40_3(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_12_4(v2);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void *)(v0 + 192);
  OUTLINED_FUNCTION_54_9(*(void *)(v0 + 176));
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_38_32();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release(*(void *)(v0 + 216));
  OUTLINED_FUNCTION_18_43();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_38_32();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_47_24();
  OUTLINED_FUNCTION_38_1();
  uint64_t v2 = OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_40_3(v2, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_38_32();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)( uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 224);
  *(void *)(v3 + 232) = a1;
  *(void *)(v3 + 240) = v1;
  OUTLINED_FUNCTION_28_17(v4);
  OUTLINED_FUNCTION_18_43();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t closure #1 in ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  outlined init with copy of Result<TemplatingResult, Error>( a2,  (uint64_t)v4,  &demangling cache variable for type metadata for NLContextUpdate?);
  return OutputGenerationManifest.nlContextUpdate.setter(v4);
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedOutput(app:intent:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v6 = type metadata accessor for PhoneError(0LL);
  v5[9] = v6;
  v5[10] = OUTLINED_FUNCTION_8_30(*(void *)(v6 - 8));
  v5[11] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedOutput(app:intent:intentResolutionResult:)()
{
  if ([*(id *)(v0 + 56) resolutionResultCode] == (char *)&dword_0 + 1
    && (uint64_t v1 = *(void *)(v0 + 56),
        uint64_t v2 = objc_opt_self(&OBJC_CLASS___INAddCallParticipantParticipantResolutionResult),
        uint64_t v3 = swift_dynamicCastObjCClass(v1, v2),
        (*(void *)(v0 + 96) = v3) != 0LL))
  {
    id v4 = *(id *)(v0 + 56);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_28();
    *(void *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v5;
    *uint64_t v5 = v0;
    v5[1] = ParticipantOutputProvider.makeContactUnsupportedOutput(app:intent:intentResolutionResult:);
    return ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:)( *(void *)(v0 + 32),  v6,  v7,  *(void *)(v0 + 56));
  }

  else
  {
    uint64_t v9 = *(_BYTE **)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 72);
    *uint64_t v9 = 1;
    swift_storeEnumTagMultiPayload(v9, v10, 1LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    OUTLINED_FUNCTION_4_4(v10, v11);
    PhoneError.logged()(v12);
    uint64_t v13 = outlined destroy of PhoneError((uint64_t)v9);
    swift_willThrow(v13, v14, v15, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_90_11();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
  }

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_93_10();
  OUTLINED_FUNCTION_90_11();
  OUTLINED_FUNCTION_23_3();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v1 = *(void *)(v0 + 112);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = *(void *)(v0 + 80);
  swift_errorRetain(v1);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  id v4 = *(void *)(v0 + 80);
  if (swift_getEnumCaseMultiPayload(v4, *(void *)(v0 + 72)) != 4)
  {
    outlined destroy of PhoneError(v4);
LABEL_9:
    uint64_t v15 = *(void **)(v0 + 56);
    uint64_t v16 = OUTLINED_FUNCTION_170_0();
    swift_willThrow(v16, v17, v18, v19, v20, v21, v22, v23);

    swift_task_dealloc();
    OUTLINED_FUNCTION_7_8();
    return OUTLINED_FUNCTION_39_26(*(uint64_t (**)(void))(v0 + 8));
  }

  swift_errorRelease(*(void *)(v0 + 112));
  uint64_t v5 = *(void **)(v4 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_7(v7))
  {
    uint64_t v8 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v9 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v24 = v9;
    *uint64_t v8 = 136315138;
    uint64_t v10 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000040LL, 0x800000000034FB50LL, &v24);
    *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v10;
    OUTLINED_FUNCTION_62_17(v10, v0 + 32);
    OUTLINED_FUNCTION_51_17( &dword_0,  v11,  v12,  "#ParticipantOutputProvider %s Unmigrated dialog, falling back to legacy output");
    OUTLINED_FUNCTION_29_19();
    OUTLINED_FUNCTION_0_2(v9);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  uint64_t v13 = (void *)swift_task_alloc(dword_43B84C);
  *(void *)(v0 + 120) = v13;
  *uint64_t v13 = v0;
  v13[1] = ParticipantOutputProvider.makeContactUnsupportedOutput(app:intent:intentResolutionResult:);
  return ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)( *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 96));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 128) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_93_10();
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_90_11();
  OUTLINED_FUNCTION_23_3();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_93_10();
  OUTLINED_FUNCTION_170_0();
  swift_task_dealloc(*(void *)(v0 + 88));
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[21] = a4;
  v5[22] = v4;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v5[23] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = OUTLINED_FUNCTION_15_1();
  _BYTE v5[24] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[25] = v8;
  v5[26] = OUTLINED_FUNCTION_23(v8);
  uint64_t v9 = OUTLINED_FUNCTION_19_15();
  v5[27] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[28] = v10;
  v5[29] = OUTLINED_FUNCTION_8_30(v10);
  v5[30] = OUTLINED_FUNCTION_28();
  v5[31] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)()
{
  uint64_t v1 = (char *)[*(id *)(v0 + 168) unsupportedReason];
  if ((unint64_t)(v1 - 5) >= 2)
  {
    if (v1 == (_BYTE *)&dword_0 + 2)
    {
      uint64_t v13 = (void *)swift_task_alloc(*(unsigned int *)(*(void *)(class metadata base offset for AddCallParticipantCATs
                                                                   + **(void **)(*(void *)(v0 + 176) + 72LL)
                                                                   + 328)
                                                       + 4LL));
      *(void *)(v0 + 256) = v13;
      *uint64_t v13 = v0;
      v13[1] = ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:);
      OUTLINED_FUNCTION_72_23();
      __asm { BR              X1 }
    }

    uint64_t v15 = *(void *)(v0 + 176);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = (int8x16_t *)swift_task_alloc(48LL);
    *(void *)(v0 + 272) = v17;
    int8x16_t v18 = *(int8x16_t *)(v0 + 160);
    v17[1].i64[0] = v15;
    v17[1].i64[1] = v16;
    v17[2] = vextq_s8(v18, v18, 8uLL);
    uint64_t v19 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(void *)(v0 + 280) = v19;
    *uint64_t v19 = v0;
    v19[1] = ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:);
    OUTLINED_FUNCTION_89_13();
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_72_23();
    withCheckedThrowingContinuation<A>(isolation:function:_:)(v20, v21, v22, v23, v24, v25, v26, v27);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v2 = *(void **)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
    uint64_t v6 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
    Logger.logObject.getter(v6);
    os_log_type_t v7 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_7(v7))
    {
      uint64_t v8 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v9 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v28 = v9;
      *uint64_t v8 = 136315138;
      uint64_t v10 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000064LL, 0x800000000034FD30LL, &v28);
      *(void *)(v0 + 136) = v10;
      OUTLINED_FUNCTION_62_17(v10, v0 + 144);
      OUTLINED_FUNCTION_51_17(&dword_0, v11, v12, "%s");
      OUTLINED_FUNCTION_29_19();
      OUTLINED_FUNCTION_0_2(v9);
      OUTLINED_FUNCTION_0_2((uint64_t)v8);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000064LL, 0x800000000034FD30LL);
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000064LL,  0x800000000034FD30LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    OUTLINED_FUNCTION_72_23();
  }

uint64_t ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)()
{
  *(void *)(v1 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  OUTLINED_FUNCTION_17_54();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 32), *(void *)(v1 + 56));
  OUTLINED_FUNCTION_29_38();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 32), *(void *)(v1 + 56));
  OUTLINED_FUNCTION_29_38();
  uint64_t v2 = OUTLINED_FUNCTION_42_23();
  uint64_t v3 = OUTLINED_FUNCTION_42_4();
  OUTLINED_FUNCTION_48_26(v3);
  OUTLINED_FUNCTION_69_19();
  uint64_t v5 = OUTLINED_FUNCTION_81(v4, (uint64_t)&protocol witness table for AceOutput);
  OUTLINED_FUNCTION_23_49((uint64_t)v5, v6, v2 & 1, (uint64_t)_swiftEmptyArrayStorage, v7, v8, v9, v10, v1 + 32, v23);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1 + 32,  &demangling cache variable for type metadata for FlowActivity?);
  OUTLINED_FUNCTION_40_3(v11, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_57_21(v12, v13, v14, v15, v16, v17, v18, v19, v22, v24, v25, v26);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  OUTLINED_FUNCTION_9_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_8();
  uint64_t v20 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_14_2(v20);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  OUTLINED_FUNCTION_49_3();
  *uint64_t v3 = *v2;
  *(void *)(v0 + 288) = v1;
  swift_task_dealloc();
  if (!v1) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  OUTLINED_FUNCTION_17_54();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 32), *(void *)(v1 + 56));
  OUTLINED_FUNCTION_59_17();
  uint64_t v2 = *(void *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 32), v2);
  OUTLINED_FUNCTION_59_17();
  uint64_t v3 = OUTLINED_FUNCTION_42_23();
  uint64_t v4 = OUTLINED_FUNCTION_42_4();
  OUTLINED_FUNCTION_48_26(v4);
  OUTLINED_FUNCTION_69_19();
  uint64_t v6 = OUTLINED_FUNCTION_81(v5, (uint64_t)&protocol witness table for AceOutput);
  OUTLINED_FUNCTION_23_49((uint64_t)v6, v7, v3 & 1, (uint64_t)_swiftEmptyArrayStorage, v8, v9, v10, v11, v2, v24);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v2,  &demangling cache variable for type metadata for FlowActivity?);
  OUTLINED_FUNCTION_40_3(v12, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_57_21(v13, v14, v15, v16, v17, v18, v19, v20, v23, v25, v26, v27);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  OUTLINED_FUNCTION_9_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_8();
  uint64_t v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_14_2(v21);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_45_25();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_50_11();
  swift_task_dealloc();
  OUTLINED_FUNCTION_45_25();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v18 = a3;
  uint64_t v19 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  id v13 = ParticipantOutputProvider.mapToStartCallResolutionResult(_:)(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))( (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v8);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = swift_allocObject(&unk_410B78, v15 + v10, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))( v16 + v15,  (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v8);
  specialized ContactsSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( v18,  v12,  v11,  (uint64_t)v13,  v19,  0LL,  1LL,  (uint64_t)partial apply for closure #1 in closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v28);
  swift_release(v16);
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[6] = a1;
  uint64_t v6 = type metadata accessor for PhoneError(0LL);
  v5[9] = v6;
  v5[10] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v5[11] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = OUTLINED_FUNCTION_12_47();
  v5[12] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = OUTLINED_FUNCTION_94();
  v5[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[14] = v10;
  v5[15] = OUTLINED_FUNCTION_23(v10);
  uint64_t v11 = OUTLINED_FUNCTION_42_4();
  v5[16] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v5[17] = v12;
  v5[18] = OUTLINED_FUNCTION_23(v12);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:)()
{
  uint64_t v3 = (char *)[*(id *)(v1 + 56) unsupportedReason];
  if (v3 == (_BYTE *)&dword_0 + 2)
  {
    uint64_t v4 = *(void *)(v1 + 64);
    uint64_t v5 = *(void *)(v4 + 200);
    OUTLINED_FUNCTION_73_22((void *)(v4 + 168));
    uint64_t v6 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(v5 + 32));
    *(void *)(v1 + 152) = v6;
    *uint64_t v6 = v1;
    v6[1] = ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:);
    uint64_t v7 = OUTLINED_FUNCTION_120_0();
    return v36(v7);
  }

  else
  {
    id v9 = v3;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v10 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v10, (uint64_t)static Logger.siriPhone);
    os_log_type_t v11 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_93(v11))
    {
      uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v13 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v37 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v1 + 16) = v9;
      *(_BYTE *)(v1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantParticipantUnsupportedReason?);
      uint64_t v15 = String.init<A>(describing:)(v1 + 16, v14);
      *(void *)(v1 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v12 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl( &dword_0,  v0,  v2,  "#ParticipantOutputProvider makeContactUnsupportedOutput: the dialog for %s hasn't been migrated to Response Framework.",  v12,  0xCu);
      OUTLINED_FUNCTION_29_19();
      OUTLINED_FUNCTION_0_2(v13);
      OUTLINED_FUNCTION_0_2((uint64_t)v12);
    }

    uint64_t v18 = *(void *)(v1 + 72);
    uint64_t v17 = *(void **)(v1 + 80);
    uint64_t v19 = *(void **)(v1 + 56);
    uint64_t v37 = 0LL;
    unint64_t v38 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(79LL);
    v20._countAndFlagsBits = 0xD00000000000003ALL;
    v20._object = (void *)0x800000000034FDA0LL;
    String.append(_:)(v20);
    *(void *)(v1 + 32) = [v19 unsupportedReason];
    v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    String.append(_:)(v21);
    OUTLINED_FUNCTION_4_1();
    v22._object = (void *)0x800000000034FDE0LL;
    v22._countAndFlagsBits = 0xD000000000000013LL;
    String.append(_:)(v22);
    unint64_t v23 = v38;
    *uint64_t v17 = v37;
    v17[1] = v23;
    v17[2] = 0xD00000000000003BLL;
    v17[3] = 0x800000000034FE00LL;
    v17[4] = 0xD000000000000042LL;
    v17[5] = 0x800000000034FE40LL;
    v17[6] = 198LL;
    uint64_t v24 = OUTLINED_FUNCTION_120_0();
    swift_storeEnumTagMultiPayload(v24, v25, 4LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    OUTLINED_FUNCTION_4_4(v18, v26);
    PhoneError.logged()(v27);
    uint64_t v28 = outlined destroy of PhoneError((uint64_t)v17);
    swift_willThrow(v28, v29, v30, v31, v32, v33, v34, v35);
    swift_task_dealloc();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_92_0();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_50_11();
  os_log_type_t v2 = *(void *)(*v1 + 152);
  uint64_t v3 = *v1;
  *(void *)(v3 + 160) = v4;
  OUTLINED_FUNCTION_28_17(v2);
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v3 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_19_1();
    return swift_task_switch(v6, v7, v8);
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v6 = v0[8];
  uint64_t v7 = specialized static PhoneCallNLContextProvider.makeNeedsValueContextFor(parameter:)( 0x73746361746E6F63LL,  (void *)0xE800000000000000LL);
  static DialogPhase.clarification.getter(v7);
  OutputGenerationManifest.init(dialogPhase:_:)( v4,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v1, v3);
  __swift_storeEnumTagSinglePayload(v5, 0LL, 1LL, v3);
  OutputGenerationManifest.nlContextUpdate.setter(v5);
  OUTLINED_FUNCTION_73_22((void *)(v6 + 208));
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  v0[21] = v8;
  *uint64_t v8 = v0;
  v8[1] = ParticipantOutputProvider.makeContactUnsupportedRFOutput(app:intent:intentResolutionResult:);
  OUTLINED_FUNCTION_64_19();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)( v9,  v10,  v11,  v12,  v13);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v1 = *(void *)(v0 + 136);
  os_log_type_t v2 = *(void *)(v0 + 112);

  OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_39_26(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v1 = *(void *)(v0 + 136);
  os_log_type_t v2 = *(void *)(v0 + 112);

  OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

id ParticipantOutputProvider.mapToStartCallResolutionResult(_:)(void *a1)
{
  os_log_type_t v2 = (int *)[a1 unsupportedReason];
  if (v2 == &dword_4) {
    uint64_t v3 = 4LL;
  }
  else {
    uint64_t v3 = 1LL;
  }
  else {
    uint64_t v4 = v3;
  }
  type metadata accessor for INStartCallContactResolutionResult();
  id v5 = [a1 alternatives];
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for Any[1]);

  return @nonobjc INStartCallContactResolutionResult.__allocating_init(unsupportedWithReason:alternativeItems:)(v4, v6);
}

id @nonobjc INStartCallContactResolutionResult.__allocating_init(unsupportedWithReason:alternativeItems:)( uint64_t a1, uint64_t a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a2);
  id v5 =  [(id)swift_getObjCClassFromMetadata() resolutionResultUnsupportedWithReason:a1 alternativeItems:isa];

  return v5;
}

uint64_t ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[22] = a5;
  v6[23] = v5;
  v6[20] = a3;
  v6[21] = a4;
  v6[18] = a1;
  v6[19] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v6[24] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = OUTLINED_FUNCTION_42_4();
  v6[25] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[26] = v9;
  v6[27] = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = OUTLINED_FUNCTION_19_15();
  v6[28] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v6[29] = v11;
  v6[30] = OUTLINED_FUNCTION_23(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = swift_task_alloc(64LL);
  *(void *)(v0 + 248) = v4;
  __int128 v5 = *(_OWORD *)(v0 + 168);
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 48) = v2;
  uint64_t v6 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 256) = v6;
  *uint64_t v6 = v0;
  v6[1] = ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:);
  OUTLINED_FUNCTION_89_13();
  OUTLINED_FUNCTION_50_25();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, v8, v9, v10, v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  OUTLINED_FUNCTION_49_3();
  *uint64_t v3 = *v2;
  *(void *)(v0 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc();
  if (!v1) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  int8x16_t *v0;
  int8x16_t *v1;
  int8x16_t **v2;
  uint64_t v1 = (int8x16_t *)swift_task_alloc(32LL);
  v0[17].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[11], v0[11], 8uLL);
  uint64_t v2 = (int8x16_t **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[17].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = (int8x16_t *)ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:);
  OUTLINED_FUNCTION_89_13();
  OUTLINED_FUNCTION_50_25();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 280));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  int8x16_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v1 = swift_task_alloc(48LL);
  *(void *)(v0 + 288) = v1;
  uint64_t v2 = vextq_s8(*(int8x16_t *)(v0 + 176), *(int8x16_t *)(v0 + 176), 8uLL);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 152);
  *(int8x16_t *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 296) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v3 = v0;
  v3[1] = ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 136,  0LL,  0LL,  0xD000000000000056LL,  0x800000000034FBA0LL,  partial apply for closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v1,  v4);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 30__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v14 = *(void *)(v0 + 240);
  uint64_t v15 = *(void *)(v0 + 232);
  unint64_t v16 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v11 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void **)(v0 + 144);
  uint64_t v13 = *(void *)(v0 + 136);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 32), *(void *)(v3 + 56));
  OUTLINED_FUNCTION_7_3();
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 32), *(void *)(v3 + 56));
  OUTLINED_FUNCTION_7_3();
  __int128 v5 = *(void *)(v0 + 80);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v5);
  uint64_t v6 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v2, v12, v1);
  __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v1);
  uint64_t v7 = type metadata accessor for AceOutput(0LL);
  *(_OWORD *)(v0 + 112) = 0u;
  *(void *)(v0 + 128) = 0LL;
  *(_OWORD *)(v0 + 96) = 0u;
  v4[3] = v7;
  v4[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v4);
  static AceOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v14,  v0 + 16,  v6 & 1,  v13,  1LL,  0LL,  v2);
  OUTLINED_FUNCTION_23_5();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0 + 96,  &demangling cache variable for type metadata for FlowActivity?);
  OUTLINED_FUNCTION_40_3(v8, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v1);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_8();
  uint64_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v9();
}

{
  uint64_t v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_68_22();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 232);
  OUTLINED_FUNCTION_54_9(*(void *)(v0 + 208));
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_68_22();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a4;
  uint64_t v31 = a6;
  uint64_t v29 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  uint64_t v27 = a2[2];
  uint64_t v28 = a2 + 33;
  uint64_t v26 = a2[3];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  __swift_project_boxed_opaque_existential_1(a2 + 4, v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v32, v12, v13);
  uint64_t v14 = v33;
  uint64_t v15 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  LOBYTE(v15) = DeviceState.isAuthenticatedForPhone.getter(v14, v15);
  unint64_t v16 = (void *)a2[31];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v9);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  uint64_t v19 = swift_allocObject(&unk_410B50, v18 + v11, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))( v19 + v18,  (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v9);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                              + *v16
                                                                              + 216))( a5,  partial apply for closure #1 in closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v19);
  uint64_t v22 = v21;
  swift_release(v19);
  specialized ContactsSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( v29,  v27,  v26,  v30,  a5,  v15 & 1,  v31,  v20,  v22,  v24,  v25,  v26,  v27,  (uint64_t)v28,  v29,  v30,  v31,  v32[0],  v32[1],  v32[2],  v33);
  swift_release(v22);
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

uint64_t closure #1 in closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)( uint64_t a1)
{
  uint64_t v3 = *(void *)(OUTLINED_FUNCTION_19_15() - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  outlined init with copy of Result<TemplatingResult, Error>( a1,  (uint64_t)v1,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v1, v7) == 1)
  {
    uint64_t v11 = *v1;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(throwing:)(&v11, v8);
  }

  else
  {
    OUTLINED_FUNCTION_61_20(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(returning:)(v6, v10);
  }

uint64_t closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate, Never>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin();
  uint64_t v8 = (void *)a2[32];
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v13 = SiriKitDisambiguationList.rawItems.getter(v7, v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))( (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = swift_allocObject(&unk_410B28, v15 + v6, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))( v16 + v15,  (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t))(class metadata base offset for PhoneCallNLContextProvider
                                                                            + *v8
                                                                            + 40))( v10,  v9,  v13,  partial apply for closure #1 in closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v16);
  swift_release(v16);
  return swift_bridgeObjectRelease();
}

void closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v36 = a3;
  uint64_t v37 = a5;
  uint64_t v35 = a2;
  uint64_t v38 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = a4[3];
  uint64_t v34 = a4[2];
  uint64_t v12 = (uint64_t)(a4 + 4);
  uint64_t v13 = a4[7];
  uint64_t v14 = a4[8];
  __swift_project_boxed_opaque_existential_1(a4 + 4, v13);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v39, v13, v14);
  uint64_t v15 = v40;
  uint64_t v16 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  int v33 = DeviceState.isAuthenticatedForPhone.getter(v15, v16);
  uint64_t v17 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  static CATOption.defaultMode.getter(v17);
  uint64_t v18 = CATWrapper.__allocating_init(options:globals:)(v10, 0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
  if (os_log_type_enabled(v21, v23))
  {
    uint64_t v24 = v6;
    uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_0, v21, v23, "#StartCallViewBuilders Providing DefaultDisambiguationBuilder", v25, 2u);
    uint64_t v26 = v25;
    uint64_t v6 = v24;
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  outlined init with copy of SharedGlobalsProviding(v12, (uint64_t)v44);
  uint64_t v27 = v36;
  v42[0] = v35;
  v42[1] = v36;
  v42[2] = v34;
  v42[3] = v11;
  v42[4] = v37;
  char v43 = v33 & 1;
  v44[5] = v18;
  swift_retain();
  id v28 = v27;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(v39);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(&v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)], v38, v6);
  uint64_t v29 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v30 = (v29 + 16) & ~v29;
  uint64_t v31 = swift_allocObject(&unk_410B00, v30 + v8, v29 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))( v31 + v30,  &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)],  v6);
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( (uint64_t)_swiftEmptyArrayStorage,  (void (*)(void, void))partial apply for closure #1 in closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v31);
  swift_release(v31);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v42,  &demangling cache variable for type metadata for DefaultDisambiguationBuilder<INAddCallParticipantIntent>);
}

void *ParticipantOutputProvider.deinit()
{
  return v0;
}

uint64_t ParticipantOutputProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 368LL, 7LL);
}

uint64_t protocol witness for ResolveContactOutputProviding.makePromptForContactOutput(app:intent:intentResolutionResult:) in conformance ParticipantOutputProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(**(void **)v4 + 176LL);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for UnsupportedUnsetRelationshipFlowStrategyAsync.parseRequestedRelationship(resolveRecord:) in conformance ContactUnsetRelationshipFlowStrategy<A>;
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveContactOutputProviding.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:) in conformance ParticipantOutputProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(int **)(**(void **)v5 + 184LL);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc(v12[1]);
  *(void *)(v6 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = ContactUnsetRelationshipFlowStrategy.makeUnsupportedPlatformResponse(requestedRelationship:resolveRecord:);
  return v15(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for ResolveContactOutputProviding.makeContactUnsupportedOutput(app:intent:intentResolutionResult:) in conformance ParticipantOutputProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(**(void **)v4 + 192LL);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for UnsupportedUnsetRelationshipFlowStrategyAsync.parseRequestedRelationship(resolveRecord:) in conformance ContactUnsetRelationshipFlowStrategy<A>;
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveContactOutputProviding.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:) in conformance ParticipantOutputProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(int **)(**(void **)v5 + 224LL);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc(v12[1]);
  *(void *)(v6 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = protocol witness for UnsupportedUnsetRelationshipFlowStrategyAsync.parseRequestedRelationship(resolveRecord:) in conformance ContactUnsetRelationshipFlowStrategy<A>;
  return v15(a1, a2, a3, a4, a5);
}

void specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void *a24)
{
  void (*v58)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void v84[5];
  void v85[2];
  __int128 v86[2];
  void v87[5];
  void v88[6];
  OUTLINED_FUNCTION_29_2();
  a19 = v24;
  a20 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v82 = v32;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v81 = v37;
  uint64_t v80 = v38;
  uint64_t v83 = a23;
  uint64_t v39 = a24;
  uint64_t v41 = a21;
  uint64_t v40 = a22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v44 = v43 - v42;
  uint64_t v79 = type metadata accessor for Locale(0LL);
  __int128 v78 = *(void *)(v79 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v47 = v46 - v45;
  v88[3] = OUTLINED_FUNCTION_69_1();
  v88[4] = &protocol witness table for AppInfoBuilder;
  v88[0] = v31;
  v87[3] = &type metadata for LabelTemplatesProvider;
  v87[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v48 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_410BA0, 48LL);
  v87[0] = v48;
  v48[2] = v29;
  v48[3] = v27;
  v48[4] = v41;
  uint64_t v48[5] = v40;
  uint64_t v49 = (void *)((char *)v39
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v39 + 16));
  *uint64_t v49 = 0x3D65737561705C1BLL;
  v49[1] = 0xEC0000005C303532LL;
  OUTLINED_FUNCTION_17_32();
  uint64_t v51 = (char *)v39 + *(void *)(v50 + 56);
  *(_OWORD *)uint64_t v51 = 0u;
  *((_OWORD *)v51 + 1) = 0u;
  *((void *)v51 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  OUTLINED_FUNCTION_17_32();
  OUTLINED_FUNCTION_79_14(v53, (uint64_t)v39 + *(void *)(v52 + 72));
  uint64_t v54 = v36[3];
  uint64_t v55 = v36[4];
  uint64_t v56 = (void *)OUTLINED_FUNCTION_120_0();
  __swift_project_boxed_opaque_existential_1(v56, v57);
  uint64_t v58 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v55 + 8);
  swift_retain();
  v58(v86, v54, v55);
  OUTLINED_FUNCTION_17_32();
  uint64_t v60 = (void *)((char *)v39 + *(void *)(v59 + 40));
  outlined init with take of AppSelectionSignalComponent(v86, (uint64_t)v60);
  OUTLINED_FUNCTION_17_32();
  *(void *)((char *)v39 + *(void *)(v61 + swift_bridgeObjectRelease(*(void *)(v0 + 24)) = v34;
  OUTLINED_FUNCTION_17_32();
  *(void *)((char *)v39 + *(void *)(v62 + swift_release(*(void *)(v0 + 32)) = v82;
  OUTLINED_FUNCTION_17_32();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v88, (uint64_t)v39 + *(void *)(v63 + 48));
  OUTLINED_FUNCTION_17_32();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v87, (uint64_t)v39 + *(void *)(v64 + 64));
  OUTLINED_FUNCTION_17_32();
  *(void *)((char *)v39 + *(void *)(v65 + 80)) = v83;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(v39);
  uint64_t v66 = v60[3];
  uint64_t v67 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v66);
  uint64_t v68 = dispatch thunk of DeviceState.siriLocale.getter(v66, v67);
  *(void *)&v86[0] = Locale.identifier.getter(v68);
  *((void *)&v86[0] + 1) = v69;
  v84[0] = 45LL;
  v84[1] = 0xE100000000000000LL;
  v85[0] = 95LL;
  v85[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v70 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v84,  v85,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  uint64_t v72 = v71;
  OUTLINED_FUNCTION_4_1();
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v47, v79);
  type metadata accessor for INIntentSlotValueType(0LL);
  uint64_t v74 = v73;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&protocol conformance descriptor for INIntentSlotValueType);
  uint64_t v76 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v74, &type metadata for String, v75);
  OUTLINED_FUNCTION_17_25(v36);
  OUTLINED_FUNCTION_29_38();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v60, (uint64_t)v84);
  uint64_t v77 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __swift_storeEnumTagSinglePayload(v44, 1LL, 1LL, v77);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( v80,  v81,  v70,  v72,  v76,  v86,  v84,  v44);
  OUTLINED_FUNCTION_45_14((uint64_t)&a11);
  OUTLINED_FUNCTION_45_14((uint64_t)&a16);
  OUTLINED_FUNCTION_45_14((uint64_t)&a17);
  __swift_destroy_boxed_opaque_existential_1(v87);
  __swift_destroy_boxed_opaque_existential_1(v88);
  __swift_destroy_boxed_opaque_existential_1(v36);
  OUTLINED_FUNCTION_7_5();
}

uint64_t partial apply for closure #1 in ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)( uint64_t a1)
{
  return closure #1 in ParticipantOutputProvider.makePromptForContactOutput(app:intent:intentResolutionResult:)(a1, v1);
}

uint64_t partial apply for closure #1 in ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)( uint64_t a1)
{
  return closure #1 in ParticipantOutputProvider.makeConfirmContactOutput(app:intent:intentResolutionResult:contactToConfirm:)( a1,  *(void *)(v1 + 16));
}

uint64_t partial apply for closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1)
{
  return closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t partial apply for closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1)
{
  return closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( a1,  *(void **)(v1 + 16));
}

void partial apply for closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1)
{
}

_UNKNOWN **associated type witness table accessor for ResolveContactOutputProviding.IntentType : NCRResolvableIntent in ParticipantOutputProvider()
{
  return &protocol witness table for INAddCallParticipantIntent;
}

uint64_t type metadata accessor for ParticipantOutputProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin25ParticipantOutputProvider);
}

unint64_t type metadata accessor for INStartCallContactResolutionResult()
{
  unint64_t result = lazy cache variable for type metadata for INStartCallContactResolutionResult;
  if (!lazy cache variable for type metadata for INStartCallContactResolutionResult)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INStartCallContactResolutionResult);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store( result,  (unint64_t *)&lazy cache variable for type metadata for INStartCallContactResolutionResult);
  }

  return result;
}

uint64_t sub_23E400()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
}

uint64_t partial apply for closure #1 in closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)( uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  return closure #1 in closure #1 in ContactUnsetRelationshipFlowStrategy.makeMeCardNotFoundResponse(requestedRelationship:resolveRecord:)( a1,  v3);
}

uint64_t sub_23E45C()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate, Never>);
}

uint64_t partial apply for closure #1 in closure #2 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_46_29();
  return closure #1 in closure #1 in ContactUnsetRelationshipFlowStrategy.contactNeedsDisambiguationContext(persons:)(v0);
}

uint64_t sub_23E494()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

void partial apply for closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)( uint64_t a1)
{
}

uint64_t sub_23E4B0()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

uint64_t partial apply for closure #1 in closure #1 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_46_29();
  return closure #1 in closure #1 in ParticipantOutputProvider.makeContactUnsupportedTemplatingResultOutput(app:intent:intentResolutionResult:)(v0);
}

uint64_t sub_23E4EC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_17_54()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 32))(v1);
}

uint64_t OUTLINED_FUNCTION_22_48()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_23_49( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v11,  a10,  a3,  a4,  0LL,  0LL,  v10,  a4);
}

uint64_t OUTLINED_FUNCTION_29_38()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_36_33()
{
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_38_32()
{
  return swift_task_dealloc(*(void *)(v0 + 192));
}

uint64_t OUTLINED_FUNCTION_39_26(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_42_23()
{
  uint64_t v2 = *(void *)(v0 + 80);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v2);
}

uint64_t OUTLINED_FUNCTION_45_25()
{
  return swift_task_dealloc(*(void *)(v0 + 248));
}

uint64_t OUTLINED_FUNCTION_46_29()
{
  return v0;
}

void OUTLINED_FUNCTION_47_24()
{
}

uint64_t OUTLINED_FUNCTION_48_26(uint64_t a1)
{
  return type metadata accessor for AceOutput(0LL);
}

uint64_t OUTLINED_FUNCTION_49_26()
{
  return v0(v1, v2);
}

  ;
}

void OUTLINED_FUNCTION_51_17(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_59_17()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_60_23()
{
  return swift_task_dealloc(*(void *)(v0 + 192));
}

uint64_t OUTLINED_FUNCTION_61_20@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_62_17(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, a2, v4, v3);
}

uint64_t OUTLINED_FUNCTION_68_22()
{
  return swift_task_dealloc(*(void *)(v0 + 240));
}

double OUTLINED_FUNCTION_69_19()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(void *)(v0 + 128) = 0LL;
  *(_OWORD *)(v0 + 96) = 0u;
  return result;
}

void *OUTLINED_FUNCTION_71_16(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

  ;
}

void *OUTLINED_FUNCTION_73_22(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

void OUTLINED_FUNCTION_85_11(uint64_t a1, uint64_t a2)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_90_11()
{
  return swift_task_dealloc(*(void *)(v0 + 88));
}

void OUTLINED_FUNCTION_93_10()
{
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.init(sharedGlobals:cats:)(__int128 *a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a2;
  return v2;
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:)(uint64_t a1)
{
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v2, v3, v4);
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  type metadata accessor for EmptyOutput(0LL);
  static EmptyOutput.instance.getter(v1);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)( uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v3[21] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[22] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[23] = v6;
  v3[24] = OUTLINED_FUNCTION_23(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[25] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = type metadata accessor for Locale(0LL);
  v3[26] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[27] = v9;
  v3[28] = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  v3[29] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[30] = v11;
  v3[31] = OUTLINED_FUNCTION_23(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[19];
  uint64_t v5 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v9 = static os_log_type_t.debug.getter(v7, v8);
  BOOL v10 = os_log_type_enabled(v7, v9);
  uint64_t v11 = v0[29];
  if (v10)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    unint64_t v62 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    uint64_t v13 = IntentResolutionRecord.intentResponse.getter(v11);
    v0[17] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 17, v0 + 18, v12 + 4);
    uint64_t *v62 = v13;
    OUTLINED_FUNCTION_25_48();
    _os_log_impl(&dword_0, v7, v9, "#AddCallParticipantHandleIntentFlowStrategy Received failure = %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v62, 1LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v62);
    OUTLINED_FUNCTION_0_2((uint64_t)v12);
  }

  else
  {
    OUTLINED_FUNCTION_25_48();
  }

  uint64_t v14 = (void *)v0[20];
  uint64_t v15 = v14[5];
  uint64_t v16 = v14[6];
  __swift_project_boxed_opaque_existential_1(v14 + 2, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 120))(v15, v16);
  uint64_t v17 = v0[5];
  uint64_t v18 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v17);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  if (v19)
  {
    uint64_t v20 = v19;
    swift_getObjectType(v19);
    uint64_t v21 = SPHCall.toPhoneCallRecord()();
    swift_unknownObjectRelease(v20);
  }

  else
  {
    uint64_t v21 = 0LL;
  }

  v0[32] = v21;
  uint64_t v22 = v0[29];
  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  os_log_type_t v23 = (void *)IntentResolutionRecord.intent.getter(v22);
  uint64_t v24 = outlined bridged method (ob) of @objc INAddCallParticipantIntent.participants.getter(v23);
  unint64_t v64 = v14 + 2;
  if (v24)
  {
    uint64_t v25 = v24;
    if ((unint64_t)v24 >> 62)
    {
      if (v24 >= 0) {
        v24 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v24)) {
        goto LABEL_12;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_12:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v25 & 0xC000000000000001LL) == 0, v25);
      if ((v25 & 0xC000000000000001LL) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v25);
      }
      else {
        id v26 = *(id *)(v25 + 32);
      }
      uint64_t v27 = v26;
      uint64_t v28 = v0 + 7;
      OUTLINED_FUNCTION_62();
LABEL_21:
      uint64_t v29 = v0[28];
      uint64_t v30 = v0[26];
      uint64_t v31 = v0[27];
      uint64_t v63 = v0[29];
      type metadata accessor for PhonePerson(0LL);
      uint64_t v33 = v14[5];
      uint64_t v32 = v14[6];
      __swift_project_boxed_opaque_existential_1(v64, v33);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v32);
      uint64_t v34 = v0[10];
      uint64_t v35 = v0[11];
      __swift_project_boxed_opaque_existential_1(v28, v34);
      dispatch thunk of DeviceState.siriLocale.getter(v34, v35);
      static PhonePerson.make(phonePerson:options:locale:)(v27, 0, v29);
      v0[33] = v36;

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      __swift_destroy_boxed_opaque_existential_1(v28);
      uint64_t v37 = (void *)IntentResolutionRecord.intentResponse.getter(v63);
      id v38 = [v37 code];

      switch((unint64_t)v38)
      {
        case 6uLL:
        case 0xDuLL:
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v40 = (__n128 *)OUTLINED_FUNCTION_5_32(v39);
          v0[34] = v40;
          OUTLINED_FUNCTION_23_50(v40, (__n128)xmmword_31FE60);
          uint64_t v42 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                            + v41
                                                            + 96));
          v0[35] = v42;
          OUTLINED_FUNCTION_34_32( v42,  (uint64_t)AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:));
          OUTLINED_FUNCTION_41_14();
          __asm { BR              X2 }

          return;
        case 8uLL:
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v53 = (__n128 *)OUTLINED_FUNCTION_5_32(v52);
          v0[38] = v53;
          OUTLINED_FUNCTION_23_50(v53, (__n128)xmmword_31FE60);
          uint64_t v55 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                            + v54
                                                            + 112));
          v0[39] = v55;
          *uint64_t v55 = v0;
          v55[1] = AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
          OUTLINED_FUNCTION_41_14();
          __asm { BR              X1 }

          return;
        case 9uLL:
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v58 = (__n128 *)OUTLINED_FUNCTION_5_32(v57);
          v0[42] = v58;
          OUTLINED_FUNCTION_23_50(v58, (__n128)xmmword_31FE60);
          uint64_t v60 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                            + v59
                                                            + 64));
          v0[43] = v60;
          OUTLINED_FUNCTION_34_32( v60,  (uint64_t)AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:));
          OUTLINED_FUNCTION_41_14();
          __asm { BR              X3 }

          return;
        default:
          uint64_t v44 = v0[25];
          uint64_t v45 = v0[20];
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v47 = OUTLINED_FUNCTION_5_32(v46);
          v0[46] = v47;
          *(_OWORD *)(v47 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
          uint64_t v48 = *(void **)(v45 + 56);
          uint64_t v49 = type metadata accessor for SpeakableString(0LL);
          __swift_storeEnumTagSinglePayload(v44, 1LL, 1LL, v49);
          uint64_t v50 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                            + *v48
                                                            + 16));
          v0[47] = v50;
          *uint64_t v50 = v0;
          v50[1] = AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:);
          OUTLINED_FUNCTION_41_14();
          __asm { BR              X2 }

          return;
      }
    }

    uint64_t v28 = v0 + 7;
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v28 = v0 + 7;
  }

  uint64_t v27 = 0LL;
  goto LABEL_21;
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  *(void *)(v2 + 288) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 296) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  swift_release(*(void *)(v0 + 264));
  OUTLINED_FUNCTION_22();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 96));
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_29_17();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_48_22();
  OUTLINED_FUNCTION_7_92(*(void *)(v0 + 304));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  return OUTLINED_FUNCTION_2_72(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_48_22();
  OUTLINED_FUNCTION_7_92(*(void *)(v0 + 336));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  return OUTLINED_FUNCTION_2_72(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_48_22();
  OUTLINED_FUNCTION_7_92(*(void *)(v0 + 368));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  return OUTLINED_FUNCTION_2_72(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_48_22();
  OUTLINED_FUNCTION_7_92(*(void *)(v0 + 272));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  return OUTLINED_FUNCTION_2_72(*(uint64_t (**)(void))(v0 + 8));
}

#error "23EE90: call analysis failed (funcsize=24)"
uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 320) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 328) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

#error "23EF4C: call analysis failed (funcsize=24)"
uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 352) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 360) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

#error "23F008: call analysis failed (funcsize=24)"
uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[48] = v1;
  swift_task_dealloc();
  uint64_t v4 = v2[25];
  if (!v1) {
    v2[49] = v0;
  }
  outlined destroy of SpeakableString?(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

#error "23F0D0: call analysis failed (funcsize=24)"
uint64_t AddCallParticipantHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(rchRecord:)()
{
  swift_task_dealloc();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AddCallParticipantHandleIntentFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 104LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v9(a1, a2);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = UnsupportedFlowCATs.deleteVoicemail();
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 112LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v9(a1, a2);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance AddCallParticipantHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  uint64_t v9 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t outlined bridged method (ob) of @objc INAddCallParticipantIntent.participants.getter(void *a1)
{
  id v2 = [a1 participants];

  if (!v2) {
    return 0LL;
  }
  unint64_t v3 = type metadata accessor for INPerson();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t type metadata accessor for AddCallParticipantHandleIntentFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFlowStrategy);
}

uint64_t OUTLINED_FUNCTION_0_89()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_4_89( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 400) = a10;
  return static DialogPhase.completion.getter();
}

uint64_t OUTLINED_FUNCTION_7_92(uint64_t a1)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
  return swift_release(a1);
}

void *OUTLINED_FUNCTION_9_71()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 120));
}

uint64_t OUTLINED_FUNCTION_10_66(uint64_t a1, uint64_t a2)
{
  return OutputGenerationManifest.init(dialogPhase:_:)(v2, a2, 0LL);
}

uint64_t OUTLINED_FUNCTION_11_72@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)(v5 + 32) = a5;
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

__n128 *OUTLINED_FUNCTION_23_50(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_32@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySSG_SSs5NeverOTg5242_s27PhoneCallFlowDelegatePlugin0a21AppResolutionOnDeviceC8StrategyC012executeSmartF12SelectAction014_2180D48ACD6B0Q17EE181017F885BCBA5LL05phoneB8NLIntent14recommendation07SiriKitC00fgN0CSgAA0abV0_p_0X9Inference0F14ResolverResultOtYaFS2SXEfU1_0fghI6Plugin0fklmnhP0CTf1cn_n( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a2 + 296) + 248LL);
      swift_bridgeObjectRetain();
      uint64_t v9 = v8(v6, v7);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      if (v12 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v5 += 2;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v9;
      v13[5] = v11;
      --v3;
    }

    while (v3);
    swift_release(a2);
  }

  else
  {
    swift_release(a2);
  }

  return _swiftEmptyArrayStorage;
}

uint64_t specialized Sequence.first(where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_124();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    uint64_t v8 = 4LL;
    while (1)
    {
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v9 = OUTLINED_FUNCTION_274_2();
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v10);
      }

      else
      {
        uint64_t v11 = *(void *)(a1 + 8 * v8);
        swift_retain();
      }

      uint64_t v12 = v8 - 3;
      if (__OFADD__(v8 - 4, 1LL)) {
        break;
      }
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(**(void **)(a2 + 296) + 264LL))(v11, a3, a4) & 1) != 0)
      {
        OUTLINED_FUNCTION_77_0();
        OUTLINED_FUNCTION_4_1();
        goto LABEL_18;
      }

      swift_release(v11);
      ++v8;
      if (v12 == v7) {
        goto LABEL_17;
      }
    }

    __break(1u);
LABEL_13:
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_124();
  }

uint64_t specialized Sequence.first(where:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a1);
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    unint64_t v6 = a1 & 0xC000000000000001LL;
    for (uint64_t i = 4LL; ; ++i)
    {
      if (v6)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
        uint64_t v9 = v8;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 8 * i);
        uint64_t v8 = swift_retain(v9);
      }

      uint64_t v10 = i - 3;
      if (__OFADD__(i - 4, 1LL)) {
        break;
      }
      uint64_t v11 = App.appIdentifier.getter(v8);
      if (v12)
      {
        uint64_t v13 = v12;
        if (a3)
        {
          if (v11 == a2 && v12 == a3)
          {
            swift_bridgeObjectRelease(a3);
            swift_bridgeObjectRelease(a1);
            uint64_t v18 = v13;
LABEL_25:
            swift_bridgeObjectRelease(v18);
            return v9;
          }

          unint64_t v15 = v6;
          uint64_t v16 = v5;
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0LL);
          swift_bridgeObjectRelease(v13);
          if ((v17 & 1) != 0)
          {
            uint64_t v19 = a3;
LABEL_24:
            swift_bridgeObjectRelease(v19);
            uint64_t v18 = a1;
            goto LABEL_25;
          }

          swift_release(v9);
          uint64_t v5 = v16;
          unint64_t v6 = v15;
        }

        else
        {
          swift_release(v9);
          swift_bridgeObjectRelease(v13);
        }
      }

      else
      {
        if (!a3)
        {
          uint64_t v19 = 0LL;
          goto LABEL_24;
        }

        swift_release(v9);
      }

      if (v10 == v5)
      {
        swift_bridgeObjectRelease(a3);
        swift_bridgeObjectRelease(a1);
        return 0LL;
      }
    }

    __break(1u);
LABEL_27:
    if (a1 < 0) {
      uint64_t v20 = a1;
    }
    else {
      uint64_t v20 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
  }

  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a3);
  return 0LL;
}

uint64_t specialized static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>( unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = type metadata accessor for Siri_Nlu_External_SystemGaveOptions(0LL);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  unint64_t v62 = (char *)&v54 - v13;
  uint64_t v14 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for AppInfoBuilder();
  swift_initStackObject(v17, v71);
  unint64_t v65 = a1;
  uint64_t v66 = a2;
  specialized static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)();
  uint64_t v19 = v18;
  NLContextUpdate.init()(v18);
  PhoneCallNLConstants.canonicalName.getter(1u);
  NLContextUpdate.weightedPromptTargetDomain.setter();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v21 = swift_allocObject(v20, 80LL, 7LL);
  *(_OWORD *)(v21 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_320080;
  if (one-time initialization token for appName != -1) {
    swift_once(&one-time initialization token for appName, one-time initialization function for appName);
  }
  *(void *)(v21 + 32) = TerminalOntologyNode.name.getter();
  *(void *)(v21 + 40) = v22;
  if (one-time initialization token for reference != -1) {
    swift_once(&one-time initialization token for reference, one-time initialization function for reference);
  }
  uint64_t v60 = v6;
  *(void *)(v21 + 48) = TerminalOntologyNode.name.getter();
  *(void *)(v21 + 56) = v23;
  if (one-time initialization token for confirmation != -1) {
    swift_once(&one-time initialization token for confirmation, one-time initialization function for confirmation);
  }
  *(void *)(v21 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = TerminalOntologyNode.name.getter();
  *(void *)(v21 + 72) = v24;
  NLContextUpdate.weightedPromptResponseTargets.setter(v21);
  uint64_t v25 = swift_allocObject(v20, 48LL, 7LL);
  __int128 v56 = xmmword_31D870;
  *(_OWORD *)(v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  Swift::String v68 = String.uppercased()();
  v67[0] = 32LL;
  v67[1] = 0xE100000000000000LL;
  uint64_t v69 = 95LL;
  unint64_t v70 = 0xE100000000000000LL;
  v53[0] = &type metadata for String;
  v53[1] = lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v67,  &v69,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  swift_bridgeObjectRelease();
  PhoneCallNLConstants.canonicalName.getter(6u);
  v68._countAndFlagsBits = v26;
  v68._object = v27;
  v28._countAndFlagsBits = 0x2E65756C61562ELL;
  v28._object = (void *)0xE700000000000000LL;
  String.append(_:)(v28);
  Swift::String v29 = String.uppercased()();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  object = v68._object;
  *(void *)(v25 + 32) = v68._countAndFlagsBits;
  *(void *)(v25 + 40) = object;
  NLContextUpdate.weightedPromptResponseOptions.setter(v25);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  NLContextUpdate.displayHints.setter(v19);
  __chkstk_darwin();
  v53[2] = v66;
  v53[3] = v57;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay17SiriAppResolution0E0CG_0D8NLUTypes0D27_Nlu_External_UserDialogActVs5NeverOTg5( (void (*)(uint64_t *))partial apply for specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:),  (uint64_t)v53,  v65);
  uint64_t v32 = v31;
  uint64_t v33 = v62;
  Siri_Nlu_External_SystemGaveOptions.init()(v31);
  uint64_t v34 = Siri_Nlu_External_SystemGaveOptions.choices.setter(v32);
  Siri_Nlu_External_SystemDialogAct.init()(v34);
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v12, v33, v64);
  Siri_Nlu_External_SystemDialogAct.gaveOptions.setter(v12);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v35 = type metadata accessor for Logger(0LL);
  uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v39 = static os_log_type_t.debug.getter(v37, v38);
  if (os_log_type_enabled(v37, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    v68._countAndFlagsBits = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v57 = v40 + 4;
    swift_beginAccess(v9, v67, 0LL, 0LL);
    uint64_t v42 = v9;
    uint64_t v43 = v60;
    uint64_t v44 = (uint64_t)v55;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v55, v42, v5);
    uint64_t v45 = specialized String.init(describing:)(v44);
    uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, &v68._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v57);
    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v37,  v39,  "#PhoneCallNLContextProvider makeNLContextUpdateForDisambiguation: sending disambiguation system dialog acts: %s",  v40,  0xCu);
    swift_arrayDestroy(v41, 1LL);
    swift_slowDealloc(v41, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  else
  {

    uint64_t v42 = v9;
    uint64_t v43 = v60;
  }

  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  uint64_t v48 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v49 = (v48 + 32) & ~v48;
  uint64_t v50 = swift_allocObject(v47, v49 + *(void *)(v43 + 72), v48 | 7);
  *(_OWORD *)(v50 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v56;
  swift_beginAccess(v42, &v68, 0LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v50 + v49, v42, v5);
  NLContextUpdate.nluSystemDialogActs.setter(v50);
  static PhoneReferenceResolution.appsToRrEntities(apps:device:)(v65, v66);
  NLContextUpdate.rrEntities.setter(v51);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v61, v16, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v42, v5);
}

uint64_t specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v59 = a3;
  uint64_t v54 = type metadata accessor for PhoneError(0LL);
  __chkstk_darwin();
  uint64_t v53 = (uint64_t *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin();
  uint64_t v52 = (char *)&v49 - v5;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  __chkstk_darwin();
  uint64_t v49 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Locale(0LL);
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Siri_Nlu_External_UserStatedTask(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin();
  uint64_t v19 = (char *)&v49 - v18;
  Siri_Nlu_External_UserStatedTask.init()(v17);
  uint64_t v21 = a2[3];
  uint64_t v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v21);
  dispatch thunk of DeviceState.siriLocale.getter(v21, v20);
  uint64_t v22 = v58;
  static PhoneCallNLContextProvider.createUsoGraph(for:locale:)(v57, (uint64_t)v10);
  if (v22)
  {
    uint64_t v26 = v50;
    uint64_t v25 = v51;
    uint64_t v27 = (uint64_t)v52;
    Swift::String v28 = v53;
    Swift::String v29 = v49;
    uint64_t v30 = v54;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v56);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v31 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, v31, v25);
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIRINLUUserWantedToProceed.Type);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIRINLUUserWantedToProceed.Type.Type);
    uint64_t v33 = String.init<A>(describing:)(&v63, v32);
    uint64_t v35 = v34;
    swift_getErrorValue(v22, v62, v61);
    uint64_t v36 = Error.localizedDescription.getter(v61[1], v61[2]);
    *Swift::String v28 = v33;
    v28[1] = v35;
    void v28[2] = v36;
    v28[3] = v37;
    uint64_t v38 = v30;
    swift_storeEnumTagMultiPayload(v28, v30, 5LL);
    uint64_t v39 = v27;
    PhoneError.logged()(v27);
    outlined destroy of CommonDirectAction((uint64_t)v28, type metadata accessor for PhoneError);
    lazy protocol witness table accessor for type PlayVoiceMailAction and conformance PlayVoiceMailAction( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  255LL,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v41 = Error.localizedDescription.getter(v38, v40);
    unint64_t v43 = v42;
    outlined destroy of CommonDirectAction(v39, type metadata accessor for PhoneError);
    uint64_t v44 = swift_bridgeObjectRetain_n(v43, 2LL);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v48 = swift_slowAlloc(32LL, -1LL);
      uint64_t v63 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v43, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v47 + 4);
      swift_bridgeObjectRelease_n(v43, 3LL);
      _os_log_impl(&dword_0, v45, v46, "%s", v47, 0xCu);
      swift_arrayDestroy(v48, 1LL);
      swift_slowDealloc(v48, -1LL, -1LL);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v43, 2LL);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(v41, v43);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v41,  v43,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    __break(1u);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v56);
    uint64_t v23 = Siri_Nlu_External_UserStatedTask.task.setter(v12);
    Siri_Nlu_External_UserDialogAct.init()(v23);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    Siri_Nlu_External_UserDialogAct.userStatedTask.setter(v16);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }

  return result;
}

LABEL_39:
      __break(1u);
LABEL_40:
      if (v3 < 0) {
        uint64_t v27 = v3;
      }
      else {
        uint64_t v27 = v3 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v27);
      if (!v4) {
        goto LABEL_44;
      }
    }

    swift_release(v8);
    swift_bridgeObjectRelease(v13);
    goto LABEL_24;
  }

  if (!(_DWORD)v119)
  {
LABEL_21:
    if ((_DWORD)v120) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }

    OUTLINED_FUNCTION_7_4(v19);
    goto LABEL_40;
  }

  a3 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t v7 = PhoneCallNLIntent.isEmergencyServicesCall()();
  uint64_t v8 = __swift_destroy_boxed_opaque_existential_1(v49);
  if ((v7 & 1) == 0) {
    goto LABEL_16;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = OUTLINED_FUNCTION_41();
  if (!OUTLINED_FUNCTION_10(v10)) {
    goto LABEL_13;
  }
  uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
  OUTLINED_FUNCTION_47(v11);
  uint64_t v12 = "Current request is not considered as a personal request since it's an emergency services call";
LABEL_12:
  OUTLINED_FUNCTION_5(&dword_0, a1, v7, v12, a3);
  OUTLINED_FUNCTION_0_2((uint64_t)a3);
LABEL_13:

LABEL_14:
  uint64_t v16 = 0;
LABEL_41:
  __swift_destroy_boxed_opaque_existential_1(v52);
  return v16 & 1;
}

void *specialized Sequence.compactMap<A>(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = a2;
  uint64_t v5 = type metadata accessor for Locale(0LL);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin();
  uint64_t v41 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v40 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SpeakableString(0LL);
  uint64_t v39 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v38 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v32 = (char *)&v31 - v10;
  uint64_t v11 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v29))
  {
    uint64_t v31 = v3;
    unint64_t v37 = a1 & 0xC000000000000001LL;
    uint64_t v34 = v47 + 9;
    uint64_t v35 = v47 + 25;
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v13 = 4LL;
    uint64_t v33 = a1;
    uint64_t v36 = v11;
    while (1)
    {
      if (v37)
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a1);
      }

      else
      {
        uint64_t v14 = *(void *)(a1 + 8 * v13);
        swift_retain();
      }

      uint64_t v15 = v13 - 3;
      if (__OFADD__(v13 - 4, 1LL)) {
        break;
      }
      uint64_t v17 = v47[28];
      uint64_t v16 = v47[29];
      __swift_project_boxed_opaque_existential_1(v35, v17);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 8))(v44, v17, v16);
      uint64_t v3 = v45;
      uint64_t v18 = v46;
      __swift_project_boxed_opaque_existential_1(v44, (uint64_t)v45);
      uint64_t v19 = v8;
      uint64_t v20 = (uint64_t)v41;
      dispatch thunk of DeviceState.siriLocale.getter(v3, v18);
      uint64_t v21 = v40;
      App.toSpeakableStringAppName(forLocale:appInfoBuilder:)(v20, v34, v40);
      uint64_t v22 = v20;
      uint64_t v8 = v19;
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v22, v43);
      __swift_destroy_boxed_opaque_existential_1(v44);
      swift_release(v14);
      if (__swift_getEnumTagSinglePayload(v21, 1LL, v19) == 1)
      {
        outlined destroy of PhoneCallNLIntent?(v21, &demangling cache variable for type metadata for SpeakableString?);
        a1 = v33;
        uint64_t v23 = v36;
      }

      else
      {
        uint64_t v3 = *(void (**)(void, void, void))(v39 + 32);
        uint64_t v24 = v32;
        v3(v32, v21, v19);
        v3(v38, v24, v19);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
        uint64_t v23 = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v12 = v27;
        }

        a1 = v33;
        unint64_t v26 = v12[2];
        if (v26 >= v12[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v12 = v28;
        }

        v12[2] = v26 + 1;
        v3( (char *)v12 + ((*(unsigned __int8 *)(v39 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))
        + *(void *)(v39 + 72) * v26,
          v38,
          v8);
      }

      ++v13;
      if (v15 == v23)
      {
        swift_release(v47);
        swift_bridgeObjectRelease();
        return v12;
      }
    }

    __break(1u);
LABEL_18:
    if (a1 < 0) {
      uint64_t v29 = a1;
    }
    else {
      uint64_t v29 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  swift_release(v47);
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void v36[5];
  void *v37;
  uint64_t v3 = v2;
  unint64_t v37 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppDescription?);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = type metadata accessor for AppDescription(0LL);
  uint64_t v29 = *(void *)(v35 - 8);
  __chkstk_darwin();
  uint64_t v34 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  Swift::String v28 = (uint64_t)&v27 - v8;
  uint64_t v9 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v25))
  {
    uint64_t v27 = v3;
    uint64_t v33 = a1 & 0xC000000000000001LL;
    uint64_t v30 = v37 + 9;
    uint64_t v31 = v37 + 25;
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v11 = 4LL;
    uint64_t v32 = v9;
    while (1)
    {
      uint64_t v3 = v11 - 4;
      if (v33)
      {
        uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, a1);
      }

      else
      {
        uint64_t v12 = *(void *)(a1 + 8 * v11);
        swift_retain();
      }

      uint64_t v13 = v11 - 3;
      if (__OFADD__(v3, 1LL)) {
        break;
      }
      uint64_t v14 = a1;
      uint64_t v15 = (uint64_t)v6;
      uint64_t v16 = v37[28];
      uint64_t v17 = v37[29];
      __swift_project_boxed_opaque_existential_1(v31, v16);
      uint64_t v18 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8);
      uint64_t v19 = v17;
      uint64_t v6 = (char *)v15;
      v18(v36, v16, v19);
      App.toAppDescription(deviceState:appInfoBuilder:)(v36, v30, v15);
      __swift_destroy_boxed_opaque_existential_1(v36);
      swift_release(v12);
      if (__swift_getEnumTagSinglePayload(v15, 1LL, v35) == 1)
      {
        outlined destroy of PhoneCallNLIntent?(v15, &demangling cache variable for type metadata for AppDescription?);
        a1 = v14;
        uint64_t v20 = v32;
      }

      else
      {
        uint64_t v21 = v28;
        outlined init with take of AppDescription(v15, v28);
        outlined init with take of AppDescription(v21, v34);
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v10 = v23;
        }

        a1 = v14;
        uint64_t v22 = v10[2];
        uint64_t v20 = v32;
        if (v22 >= v10[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v10 = v24;
        }

        _OWORD v10[2] = v22 + 1;
        outlined init with take of AppDescription( v34,  (uint64_t)v10 + ((*(unsigned __int8 *)(v29 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
        + *(void *)(v29 + 72) * v22);
      }

      ++v11;
      if (v13 == v20)
      {
        swift_release(v37);
        swift_bridgeObjectRelease();
        return v10;
      }
    }

    __break(1u);
LABEL_18:
    if (a1 < 0) {
      uint64_t v25 = a1;
    }
    else {
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  swift_release(v37);
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v22 = a2 + 2;
    uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = a2[5];
      uint64_t v10 = a2[6];
      __swift_project_boxed_opaque_existential_1(v22, v9);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
      swift_bridgeObjectRetain();
      uint64_t v12 = v11(v7, v8, v9, v10);
      if (v3)
      {
        swift_errorRelease(v3);
        swift_bridgeObjectRelease();
        uint64_t v3 = 0LL;
      }

      else
      {
        uint64_t v13 = v12;
        uint64_t v14 = swift_bridgeObjectRelease();
        if (v13)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
          uint64_t v16 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
          uint64_t v15 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
          if (v16 >= v15 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1LL);
          }
          uint64_t v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
          specialized Array._endMutation()(v17, v18, v19, v20);
        }
      }

      v6 += 2;
      --v5;
    }

    while (v5);
    swift_bridgeObjectRelease();
  }

  swift_release(a2);
  return _swiftEmptyArrayStorage;
}

void PhoneAppResolutionOnDeviceFlowStrategy.__allocating_init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)()
{
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  uint64_t v40 = v12;
  uint64_t v41 = v13;
  uint64_t v39 = v14;
  OUTLINED_FUNCTION_8_2(v3, 448LL);
  uint64_t v15 = *(void *)(v9 + 24);
  uint64_t v38 = *(void *)(v9 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v9, v15);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_85_12(v16, v17, v35);
  uint64_t v18 = *(void *)(v7 + 24);
  uint64_t v36 = *(void *)(v7 + 32);
  uint64_t v19 = OUTLINED_FUNCTION_274_2();
  __swift_mutable_project_boxed_opaque_existential_1(v19, v20);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v23 = v22 - v21;
  OUTLINED_FUNCTION_71_4(v22 - v21, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  uint64_t v26 = v5[3];
  uint64_t v27 = v5[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v26);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  uint64_t v29 = OUTLINED_FUNCTION_19_33(v28, v36);
  v30(v29);
  OUTLINED_FUNCTION_210_0();
  specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)( v39,  v40,  v41,  v42,  v43,  v1,  v23,  v2,  v31,  v32,  v33,  v34,  v26,  v18,  v15,  v27,  v37,  v38);
  __swift_destroy_boxed_opaque_existential_1(v5);
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_7_5();
}

void PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)()
{
  uint64_t v38 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v39 = v7;
  uint64_t v36 = v8;
  uint64_t v37 = v9;
  uint64_t v35 = v10;
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v34 = *(void *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v12);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_85_12(v13, v14, v31);
  uint64_t v15 = v6[3];
  uint64_t v33 = v6[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v15);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v18 = v17 - v16;
  OUTLINED_FUNCTION_71_4(v17 - v16, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
  uint64_t v21 = *(void *)(v4 + 24);
  uint64_t v22 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v21);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  uint64_t v24 = OUTLINED_FUNCTION_19_33(v23, v32);
  v25(v24);
  OUTLINED_FUNCTION_210_0();
  specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)( v35,  v36,  v37,  v38,  v39,  v0,  v18,  v1,  v27,  v28,  v29,  v30,  v21,  v15,  v12,  v22,  v33,  v34);
  uint64_t v26 = (void *)OUTLINED_FUNCTION_80_12();
  __swift_destroy_boxed_opaque_existential_1(v26);
  __swift_destroy_boxed_opaque_existential_1(v6);
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_7_5();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.resolveAppByQuery(phoneCallIntent:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v122 = v1 + 25;
  uint64_t v4 = PhoneAppResolutionOnDeviceFlowStrategy.tryAppQueryFromCallNotifications(phoneCallNLIntent:sharedGlobals:)( a1,  v1 + 25);
  if (!v6)
  {
    OUTLINED_FUNCTION_11_52(a1);
    Swift::Bool v7 = PhoneCallNLIntent.isAnswerCall()();
    outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)&v134);
    if (v7)
    {
      uint64_t v8 = __swift_destroy_boxed_opaque_existential_1(&v134);
      OUTLINED_FUNCTION_253_1( v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v113,  v117,  v119,  (uint64_t)v122,  v126,  v127,  v128,  v129);
LABEL_5:
      OUTLINED_FUNCTION_251_1(v16, v17, v18, v19, v20, v21, v22, v23, v114, v118, v120, v123, v126, v127, v128, v129);
LABEL_6:
      uint64_t v4 = PhoneAppResolutionOnDeviceFlowStrategy.makeAppQueryForIncomingCall(phoneCallNLIntent:sharedGlobals:)( (uint64_t)a1,  v122);
      goto LABEL_7;
    }

    OUTLINED_FUNCTION_11_52(&v134);
    Swift::Bool v24 = PhoneCallNLIntent.isHangUpCall()();
    uint64_t v25 = __swift_destroy_boxed_opaque_existential_1(&v134);
    OUTLINED_FUNCTION_253_1( v25,  v26,  v27,  v28,  v29,  v30,  v31,  v32,  v113,  v117,  v119,  (uint64_t)v122,  v126,  v127,  v128,  v129);
    if (v24) {
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_11_52(v133);
    BOOL v98 = PhoneCallNLIntent.isIncomingCallSearch()();
    BOOL v99 = v98;
    OUTLINED_FUNCTION_251_1( v98,  v100,  v101,  v102,  v103,  v104,  v105,  v106,  v114,  v118,  v120,  v123,  v126,  v127,  v128,  v129);
    if (v99) {
      goto LABEL_6;
    }
    PhoneAppResolutionOnDeviceFlowStrategy.makeAppQuery(phoneCallNLIntent:sharedGlobals:)( (uint64_t)a1,  (uint64_t)v122,  v107,  v108,  v109,  v110,  v111,  v112,  v116,  v117,  v119,  (uint64_t)v122,  v126,  v127,  v128,  v129,  v130,  v131,  v132[0],  v132[1],  v132[2],  v132[3],  v132[4],  v132[5],  *(uint64_t *)&v133[0],  *((uint64_t *)&v133[0] + 1));
  }

void PhoneAppResolutionOnDeviceFlowStrategy.parseConfirmationResponse(input:)()
{
  uint64_t v2 = (void *)v0;
  v195 = (os_log_s *)v3;
  uint64_t v4 = OUTLINED_FUNCTION_231_2();
  uint64_t v187 = *(void *)(v4 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  v186 = v5;
  uint64_t v6 = (uint8_t *)type metadata accessor for Parse(0LL);
  v193 = (uint8_t *)*((void *)v6 - 1);
  v194 = v6;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v191 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v9 = (uint8_t **)((char *)&v184 - v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v192 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v12 = (uint8_t *)&v184 - v11;
  __chkstk_darwin();
  uint64_t v14 = (uint8_t *)&v184 - v13;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = OUTLINED_FUNCTION_15_1();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_11_18(v0);
  OUTLINED_FUNCTION_62_18();
  os_log_type_t v17 = OUTLINED_FUNCTION_234();
  BOOL v18 = os_log_type_enabled(v1, v17);
  v188 = (os_log_s *)v4;
  if (v18)
  {
    uint64_t v19 = OUTLINED_FUNCTION_7_0(12LL);
    v189 = v14;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = OUTLINED_FUNCTION_7_0(32LL);
    v190 = v12;
    uint64_t v22 = v21;
    *(void *)&__int128 v197 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    v184 = v20 + 4;
    v185 = v9;
    uint64_t v23 = v16;
    uint64_t v25 = *(void *)(v0 + 352);
    uint64_t v24 = *(void *)(v0 + 360);
    *(void *)&v199[0] = 0LL;
    *((void *)&v199[0] + 1) = 0xE000000000000000LL;
    OUTLINED_FUNCTION_8_1();
    uint64_t v26 = v25;
    uint64_t v16 = v23;
    OUTLINED_FUNCTION_175_3(v26, v24, 33LL, (void *)0x800000000034FEE0LL);
    OUTLINED_FUNCTION_39();
    uint64_t v27 = OUTLINED_FUNCTION_218_1();
    uint64_t v28 = OUTLINED_FUNCTION_60_24(v27);
    OUTLINED_FUNCTION_93_11(v28, v29, (uint64_t)v184);
    OUTLINED_FUNCTION_31_1(v0);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_57_0(&dword_0, v1, v17, "%s", v20);
    uint64_t v9 = v185;
    OUTLINED_FUNCTION_17_0(v22);
    uint64_t v30 = v22;
    uint64_t v12 = v190;
    OUTLINED_FUNCTION_0_2(v30);
    uint64_t v31 = (uint64_t)v20;
    uint64_t v14 = v189;
    OUTLINED_FUNCTION_0_2(v31);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v0);
  }

  uint64_t v32 = (void *)(v0 + 200);
  outlined init with copy of SharedGlobalsProviding(v0 + 200, (uint64_t)v199);
  uint64_t v33 = type metadata accessor for YesNoConfirmationParser();
  uint64_t v34 = OUTLINED_FUNCTION_8_2(v33, 64LL);
  *(_BYTE *)(v34 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(v199, v34 + 24);
  uint64_t v35 = v195;
  YesNoConfirmationParser.parseConfirmationResponse(input:)((uint64_t)v14);
  OUTLINED_FUNCTION_38_1();
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)v14,  (uint64_t)v12,  &demangling cache variable for type metadata for ConfirmationResponse?);
  type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v36 = OUTLINED_FUNCTION_80_12();
  uint64_t v37 = v192;
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)v12,  v192,  &demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v38 = *(void *)(v34 - 8);
  int v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88))(v37, v34);
  if (v39 != enum case for ConfirmationResponse.confirmed(_:))
  {
    if (v39 == enum case for ConfirmationResponse.rejected(_:))
    {
      OUTLINED_FUNCTION_205_4((uint64_t)v2);
      OUTLINED_FUNCTION_62_18();
      os_log_type_t v60 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_39_7((os_log_s *)v38))
      {
        uint64_t v61 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v62 = OUTLINED_FUNCTION_7_0(64LL);
        OUTLINED_FUNCTION_225_1(v62);
        *(_DWORD *)uint64_t v61 = 136315394;
        v189 = v14;
        v190 = v12;
        uint64_t v63 = v2[44];
        *(void *)&v199[0] = 0LL;
        *((void *)&v199[0] + 1) = 0xE000000000000000LL;
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_202_3(v63);
        OUTLINED_FUNCTION_129();
        OUTLINED_FUNCTION_70_2();
        *(void *)&v199[0] = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v199[0], v64, (uint64_t *)&v197);
        OUTLINED_FUNCTION_161_4((uint64_t)v199, (uint64_t)v199 + 8, v65, (uint64_t)(v61 + 12));
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_195_2();
        uint64_t v66 = OUTLINED_FUNCTION_46_5();
        uint64_t v67 = OUTLINED_FUNCTION_48_0();
        uint64_t v68 = Array.description.getter(v67, v66);
        swift_bridgeObjectRelease();
        uint64_t v69 = v68;
        uint64_t v14 = v189;
        *(void *)&v199[0] = OUTLINED_FUNCTION_242(v69, v70, (uint64_t *)&v197);
        OUTLINED_FUNCTION_14_0((uint64_t)v199, (uint64_t)v199 + 8, v71, (uint64_t)(v61 + 22));
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_33_6( &dword_0,  (os_log_s *)v38,  v60,  "%s parseConfirmationResponse: no -> disambiguate app list '%s'",  v61);
        uint64_t v72 = (uint64_t)v195;
        OUTLINED_FUNCTION_42_2((uint64_t)v195);
        OUTLINED_FUNCTION_0_2(v72);
        OUTLINED_FUNCTION_0_2((uint64_t)v61);
      }

      else
      {

        OUTLINED_FUNCTION_204_2((uint64_t)v2);
      }

      OUTLINED_FUNCTION_102_7();
      uint64_t v129 = OUTLINED_FUNCTION_8_1();
      static AppConfirmationResponse.disambiguate(apps:)(v129);
      OUTLINED_FUNCTION_39();
      goto LABEL_46;
    }

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v192, v34);
    uint64_t v35 = v195;
LABEL_15:
    outlined destroy of PhoneCallNLIntent?( (uint64_t)v12,  &demangling cache variable for type metadata for ConfirmationResponse?);
    Input.parse.getter(v73);
    uint64_t v74 = v193;
    uint64_t v75 = OUTLINED_FUNCTION_272_2();
    int v77 = v76(v75);
    if (v77 != enum case for Parse.NLv3IntentOnly(_:))
    {
      if (v77 == enum case for Parse.NLv4IntentOnly(_:))
      {
        OUTLINED_FUNCTION_180_3(*((uint64_t (**)(uint64_t, uint64_t))v74 + 12));
        swift_unknownObjectRelease(*v9);
        goto LABEL_19;
      }

      if (v77 != enum case for Parse.uso(_:))
      {
        OUTLINED_FUNCTION_11_18((uint64_t)v2);
        OUTLINED_FUNCTION_62_18();
        os_log_type_t v104 = OUTLINED_FUNCTION_59_8();
        if (OUTLINED_FUNCTION_10(v104))
        {
          LODWORD(v192) = (_DWORD)v35;
          uint64_t v105 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v191 = OUTLINED_FUNCTION_7_0(32LL);
          *(void *)&__int128 v197 = v191;
          v190 = v105;
          *(_DWORD *)uint64_t v105 = 136315138;
          v189 = v105 + 4;
          v195 = (os_log_s *)v16;
          uint64_t v106 = v14;
          uint64_t v108 = v2[44];
          uint64_t v107 = v2[45];
          uint64_t v109 = v2[46];
          *(void *)&v199[0] = 0LL;
          *((void *)&v199[0] + 1) = 0xE000000000000000LL;
          OUTLINED_FUNCTION_128();
          OUTLINED_FUNCTION_6_1();
          uint64_t v110 = v108;
          uint64_t v14 = v106;
          OUTLINED_FUNCTION_26_49(v110, v107, v109);
          OUTLINED_FUNCTION_23_5();
          swift_bridgeObjectRelease();
          uint64_t v112 = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v199[0], v111, (uint64_t *)&v197);
          uint64_t v113 = OUTLINED_FUNCTION_60_24(v112);
          uint64_t v74 = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v113, v114, v189);
          OUTLINED_FUNCTION_31_1((uint64_t)v2);
          OUTLINED_FUNCTION_62();
          uint64_t v115 = v190;
          OUTLINED_FUNCTION_57_0( &dword_0,  v35,  (os_log_type_t)v192,  "%s parseConfirmationResponse: unsupported parse",  v190);
          uint64_t v116 = v191;
          OUTLINED_FUNCTION_17_0(v191);
          OUTLINED_FUNCTION_0_2(v116);
          OUTLINED_FUNCTION_0_2((uint64_t)v115);
        }

        else
        {

          OUTLINED_FUNCTION_31_1((uint64_t)v2);
        }

        OUTLINED_FUNCTION_180_3(*((uint64_t (**)(uint64_t, uint64_t))v74 + 1));
        goto LABEL_52;
      }
    }

    OUTLINED_FUNCTION_180_3(*((uint64_t (**)(uint64_t, uint64_t))v74 + 1));
LABEL_19:
    uint64_t v78 = v2[29];
    OUTLINED_FUNCTION_49_0(v2 + 25);
    uint64_t v35 = (os_log_s *)OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v78 + 72));
    Input.parse.getter(v35);
    OUTLINED_FUNCTION_134_5();
    OUTLINED_FUNCTION_22();
    uint64_t v79 = OUTLINED_FUNCTION_98_0();
    v80(v79);
    if (!v198)
    {
      outlined destroy of PhoneCallNLIntent?( (uint64_t)&v197,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      OUTLINED_FUNCTION_11_18((uint64_t)v2);
      OUTLINED_FUNCTION_62_18();
      os_log_type_t v92 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_50_12(v35))
      {
        uint64_t v93 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v94 = OUTLINED_FUNCTION_7_0(32LL);
        OUTLINED_FUNCTION_225_1(v94);
        v194 = v93;
        *(_DWORD *)uint64_t v93 = 136315138;
        v193 = v93 + 4;
        uint64_t v95 = v14;
        uint64_t v96 = (uint64_t)v2;
        uint64_t v97 = v2[44];
        uint64_t v98 = v2[45];
        uint64_t v99 = *(void *)(v96 + 368);
        *(void *)&v199[0] = 0LL;
        *((void *)&v199[0] + 1) = 0xE000000000000000LL;
        OUTLINED_FUNCTION_128();
        OUTLINED_FUNCTION_76_4();
        uint64_t v100 = v97;
        uint64_t v14 = v95;
        OUTLINED_FUNCTION_26_49(v100, v98, v99);
        OUTLINED_FUNCTION_23_5();
        OUTLINED_FUNCTION_87_0();
        uint64_t v102 = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v199[0], v101, (uint64_t *)&v197);
        OUTLINED_FUNCTION_115_7(v102);
        OUTLINED_FUNCTION_31_1(v96);
        OUTLINED_FUNCTION_62();
        uint64_t v103 = "%s parseConfirmationResponse: could not transform input to NLIntent, ignoring input";
LABEL_54:
        v142 = v194;
        OUTLINED_FUNCTION_57_0(&dword_0, v35, v92, v103, v194);
        uint64_t v143 = (uint64_t)v195;
        OUTLINED_FUNCTION_17_0((uint64_t)v195);
        OUTLINED_FUNCTION_0_2(v143);
        OUTLINED_FUNCTION_0_2((uint64_t)v142);

LABEL_56:
        OUTLINED_FUNCTION_102_7();
        static AppConfirmationResponse.ignore()();
        uint64_t v131 = &demangling cache variable for type metadata for ConfirmationResponse?;
        uint64_t v130 = (uint64_t)v14;
        goto LABEL_57;
      }

LABEL_71:
            PhoneAppResolutionOnDeviceFlowStrategy.selectAppConfirmation(by:)(v87);
            uint64_t v183 = OUTLINED_FUNCTION_80_12();
            goto LABEL_72;
          }

          OUTLINED_FUNCTION_16_3();
        }

        else
        {
          if (!v84) {
            goto LABEL_71;
          }
          OUTLINED_FUNCTION_16_3();
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_61;
    }

    OUTLINED_FUNCTION_18();
LABEL_52:
    OUTLINED_FUNCTION_11_18((uint64_t)v2);
    OUTLINED_FUNCTION_62_18();
    os_log_type_t v92 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_50_12(v35))
    {
      v132 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v133 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_225_1(v133);
      v194 = v132;
      *(_DWORD *)v132 = 136315138;
      v193 = v132 + 4;
      __int128 v134 = v14;
      uint64_t v135 = (uint64_t)v2;
      uint64_t v136 = v2[44];
      uint64_t v137 = v2[45];
      uint64_t v138 = *(void *)(v135 + 368);
      *(void *)&v199[0] = 0LL;
      *((void *)&v199[0] + 1) = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_76_4();
      uint64_t v139 = v136;
      uint64_t v14 = v134;
      OUTLINED_FUNCTION_26_49(v139, v137, v138);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_87_0();
      uint64_t v141 = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v199[0], v140, (uint64_t *)&v197);
      OUTLINED_FUNCTION_115_7(v141);
      OUTLINED_FUNCTION_31_1(v135);
      OUTLINED_FUNCTION_62();
      uint64_t v103 = "%s parseConfirmationResponse: unable to confirm. Ignoring..";
      goto LABEL_54;
    }

    goto LABEL_55;
  }

  uint64_t v40 = v2[3];
  if (v40)
  {
    swift_retain_n(v2[3], 3LL);
    OUTLINED_FUNCTION_11_18((uint64_t)v2);
    OUTLINED_FUNCTION_62_18();
    os_log_type_t v41 = OUTLINED_FUNCTION_234();
    if (OUTLINED_FUNCTION_12_59(v41))
    {
      uint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v43 = OUTLINED_FUNCTION_7_0(64LL);
      OUTLINED_FUNCTION_225_1(v43);
      OUTLINED_FUNCTION_243_1(4.8151e-34);
      v194 = v44;
      v189 = v14;
      v190 = v12;
      uint64_t v45 = v2[45];
      uint64_t v47 = v2[46];
      uint64_t v46 = (void *)v2[47];
      *(void *)&v199[0] = 0LL;
      *((void *)&v199[0] + 1) = 0xE000000000000000LL;
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_48_0();
      uint64_t v48 = OUTLINED_FUNCTION_119();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v48, v49, v47, v46);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_34_0();
      uint64_t v51 = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v199[0], v50, (uint64_t *)&v197);
      uint64_t v52 = OUTLINED_FUNCTION_60_24(v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v52, v53, v194);
      OUTLINED_FUNCTION_31_1((uint64_t)v2);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_196_5();
      *(void *)&v199[0] = v40;
      uint64_t v54 = OUTLINED_FUNCTION_46_5();
      OUTLINED_FUNCTION_163_5( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  v55,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter(v54, v56);
      *(void *)&v199[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v58, (uint64_t *)&v197);
      uint64_t v14 = v189;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v199, (char *)v199 + 8, v45);
      OUTLINED_FUNCTION_31_1(v40);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_33_6( &dword_0,  (os_log_s *)(v2 + 25),  (os_log_type_t)v37,  "%s parseConfirmationResponse: yes -> select app: %s",  v42);
      uint64_t v59 = (uint64_t)v195;
      OUTLINED_FUNCTION_42_2((uint64_t)v195);
      OUTLINED_FUNCTION_0_2(v59);
      OUTLINED_FUNCTION_0_2((uint64_t)v42);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v40);
      OUTLINED_FUNCTION_31_1((uint64_t)v2);
    }

    PhoneAppResolutionOnDeviceFlowStrategy.selectAppConfirmation(by:)(v40);
    OUTLINED_FUNCTION_22();
  }

  else
  {
    OUTLINED_FUNCTION_11_18((uint64_t)v2);
    OUTLINED_FUNCTION_62_18();
    os_log_type_t v117 = OUTLINED_FUNCTION_59_8();
    if (OUTLINED_FUNCTION_39_7(0LL))
    {
      uint64_t v118 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v119 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_225_1(v119);
      v190 = v12;
      *(_DWORD *)uint64_t v118 = 136315138;
      v193 = v118 + 4;
      v194 = v118;
      uint64_t v120 = v14;
      uint64_t v121 = (uint64_t)v2;
      uint64_t v122 = v2[44];
      uint64_t v123 = v2[45];
      uint64_t v124 = *(void *)(v121 + 368);
      *(void *)&v199[0] = 0LL;
      *((void *)&v199[0] + 1) = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_76_4();
      uint64_t v125 = v122;
      uint64_t v14 = v120;
      OUTLINED_FUNCTION_26_49(v125, v123, v124);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_87_0();
      *(void *)&v199[0] = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v199[0], v126, (uint64_t *)&v197);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v199, (char *)v199 + 8, v193);
      OUTLINED_FUNCTION_31_1(v121);
      OUTLINED_FUNCTION_62();
      uint64_t v127 = v194;
      OUTLINED_FUNCTION_57_0(&dword_0, 0LL, v117, "%s parseConfirmationResponse: yes -> found no app to confirm", v194);
      uint64_t v128 = (uint64_t)v195;
      OUTLINED_FUNCTION_17_0((uint64_t)v195);
      OUTLINED_FUNCTION_0_2(v128);
      OUTLINED_FUNCTION_0_2((uint64_t)v127);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v2);
    }

    OUTLINED_FUNCTION_102_7();
    static AppConfirmationResponse.select()();
  }

LABEL_46:
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v14,  &demangling cache variable for type metadata for ConfirmationResponse?);
  uint64_t v130 = OUTLINED_FUNCTION_99_2();
LABEL_57:
  outlined destroy of PhoneCallNLIntent?(v130, v131);
LABEL_58:
  OUTLINED_FUNCTION_7_5();
}

  return 0LL;
}

void PhoneAppResolutionOnDeviceFlowStrategy.parseDisambiguationResponse(input:)()
{
  uint64_t v2 = v0;
  uint64_t v244 = v3;
  uint64_t v234 = OUTLINED_FUNCTION_231_2();
  uint64_t v233 = *(void *)(v234 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  v232 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  v236 = (uint64_t *)v5;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v229 - v6;
  __chkstk_darwin();
  v238 = (uint64_t *)((char *)&v229 - v8);
  uint64_t v9 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v10 = *(os_log_s **)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = OUTLINED_FUNCTION_24_41();
  uint64_t v12 = (uint8_t *)type metadata accessor for Parse(v11);
  v241 = (uint8_t *)*((void *)v12 - 1);
  v242 = v12;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  v239 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  v243 = (uint8_t *)&v229 - v14;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = OUTLINED_FUNCTION_15_1();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v17 = OUTLINED_FUNCTION_11_18((uint64_t)v2);
  v240 = (uint8_t *)v16;
  BOOL v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v21 = OUTLINED_FUNCTION_7_0(12LL);
    v235 = v7;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v231 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)&__int128 v247 = v231;
    *(_DWORD *)uint64_t v22 = 136315138;
    v230 = v22 + 4;
    uint64_t v23 = v1;
    v237 = v10;
    uint64_t v24 = v9;
    uint64_t v25 = v2[44];
    uint64_t v26 = v2[45];
    uint64_t v250 = 0LL;
    v251[0] = 0xE000000000000000LL;
    OUTLINED_FUNCTION_6_1();
    uint64_t v27 = v25;
    uint64_t v1 = v23;
    OUTLINED_FUNCTION_175_3(v27, v26, 35LL, (void *)0x800000000034FF10LL);
    uint64_t v9 = v24;
    uint64_t v10 = v237;
    swift_bridgeObjectRelease();
    uint64_t v29 = OUTLINED_FUNCTION_10_3(v250, v28, (uint64_t *)&v247);
    uint64_t v30 = OUTLINED_FUNCTION_60_24(v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v30, v31, v230);
    OUTLINED_FUNCTION_31_1((uint64_t)v2);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_57_0(&dword_0, v18, v20, "%s", v22);
    uint64_t v32 = v231;
    OUTLINED_FUNCTION_17_0(v231);
    OUTLINED_FUNCTION_0_2(v32);
    uint64_t v33 = (uint64_t)v22;
    uint64_t v7 = v235;
    OUTLINED_FUNCTION_0_2(v33);
  }

  else
  {

    uint64_t v34 = OUTLINED_FUNCTION_31_1((uint64_t)v2);
  }

  uint64_t v35 = v243;
  Input.parse.getter(v34);
  uint64_t v36 = (uint64_t)v241;
  int v37 = (*((uint64_t (**)(uint8_t *, uint8_t *))v241 + 11))(v35, v242);
  if (v37 == enum case for Parse.NLv3IntentOnly(_:))
  {
LABEL_7:
    OUTLINED_FUNCTION_114_7((uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    goto LABEL_8;
  }

  if (v37 == enum case for Parse.directInvocation(_:))
  {
    OUTLINED_FUNCTION_114_7((uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 96));
    uint64_t v44 = OUTLINED_FUNCTION_99_2();
    v45(v44);
    uint64_t v46 = v238;
    static CommonDirectAction.from(_:)((uint64_t)v1, v238);
    outlined init with copy of PhoneCallNLIntent?( (uint64_t)v46,  (uint64_t)v7,  &demangling cache variable for type metadata for CommonDirectAction?);
    uint64_t v47 = type metadata accessor for CommonDirectAction(0LL);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v47);
    v229 = v1;
    if (EnumTagSinglePayload != 1)
    {
      uint64_t v49 = v236;
      outlined init with copy of PhoneCallNLIntent?( (uint64_t)v7,  (uint64_t)v236,  &demangling cache variable for type metadata for CommonDirectAction?);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49, v47);
      if (EnumCaseMultiPayload == 3)
      {
        v237 = v10;
        uint64_t v244 = v9;
        uint64_t v121 = *v49;
        unint64_t v120 = v49[1];
        OUTLINED_FUNCTION_11_18((uint64_t)v2);
        OUTLINED_FUNCTION_11(v120);
        OUTLINED_FUNCTION_23_51();
        int v122 = OUTLINED_FUNCTION_234();
        if (OUTLINED_FUNCTION_6_9(v10))
        {
          uint64_t v123 = OUTLINED_FUNCTION_7_0(22LL);
          v235 = v7;
          uint64_t v124 = v123;
          v243 = (uint8_t *)OUTLINED_FUNCTION_7_0(64LL);
          *(void *)&__int128 v247 = v243;
          OUTLINED_FUNCTION_243_1(4.8151e-34);
          v241 = (uint8_t *)v125;
          uint64_t v127 = v2[44];
          uint64_t v126 = v2[45];
          LODWORD(v242) = v122;
          uint64_t v128 = v2[46];
          uint64_t v250 = 0LL;
          v251[0] = 0xE000000000000000LL;
          OUTLINED_FUNCTION_8_1();
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_189_2(v127, v126, v128);
          OUTLINED_FUNCTION_39();
          OUTLINED_FUNCTION_70_2();
          uint64_t v250 = OUTLINED_FUNCTION_218_1();
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v251, v241);
          OUTLINED_FUNCTION_31_1((uint64_t)v2);
          OUTLINED_FUNCTION_39();
          *(_WORD *)(v124 + 12) = 2080;
          OUTLINED_FUNCTION_6_1();
          uint64_t v250 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v121, v120, (uint64_t *)&v247);
          OUTLINED_FUNCTION_87_1((uint64_t)&v250, (uint64_t)v251, v129, v124 + 22);
          OUTLINED_FUNCTION_32_10(v120);
          OUTLINED_FUNCTION_33_6( &dword_0,  v10,  (os_log_type_t)v242,  "%s parseDisambiguationResponse: item selected by button tap: %s",  (uint8_t *)v124);
          uint64_t v130 = (uint64_t)v243;
          OUTLINED_FUNCTION_42_2((uint64_t)v243);
          OUTLINED_FUNCTION_0_2(v130);
          uint64_t v131 = v124;
          uint64_t v7 = v235;
          OUTLINED_FUNCTION_0_2(v131);
        }

        else
        {

          OUTLINED_FUNCTION_7_4(v120);
          OUTLINED_FUNCTION_31_1((uint64_t)v2);
        }

        OUTLINED_FUNCTION_46_5();
        App.__allocating_init(appIdentifier:)(v121, v120);
        PhoneAppResolutionOnDeviceFlowStrategy.selectAppDisambiguation(by:)();
        OUTLINED_FUNCTION_16_3();
        OUTLINED_FUNCTION_216_1();
        (*((void (**)(os_log_s *, uint64_t))v237 + 1))(v229, v244);
        goto LABEL_52;
      }

      if (EnumCaseMultiPayload == 7)
      {
        OUTLINED_FUNCTION_11_18((uint64_t)v2);
        OUTLINED_FUNCTION_23_51();
        int v51 = OUTLINED_FUNCTION_15_16();
        if (OUTLINED_FUNCTION_6_9(v1))
        {
          uint64_t v52 = OUTLINED_FUNCTION_7_0(12LL);
          LODWORD(v24__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v51;
          uint64_t v53 = (uint8_t *)v52;
          v243 = (uint8_t *)OUTLINED_FUNCTION_7_0(32LL);
          *(void *)&__int128 v247 = v243;
          v242 = v53;
          *(_DWORD *)uint64_t v53 = 136315138;
          v241 = v53 + 4;
          uint64_t v54 = v2[44];
          uint64_t v55 = v2[45];
          v237 = v10;
          uint64_t v56 = v9;
          uint64_t v57 = v7;
          uint64_t v58 = v2[46];
          uint64_t v250 = 0LL;
          v251[0] = 0xE000000000000000LL;
          OUTLINED_FUNCTION_128();
          OUTLINED_FUNCTION_76_4();
          uint64_t v59 = v58;
          uint64_t v7 = v57;
          uint64_t v9 = v56;
          uint64_t v10 = v237;
          OUTLINED_FUNCTION_26_49(v54, v55, v59);
          OUTLINED_FUNCTION_23_5();
          OUTLINED_FUNCTION_87_0();
          uint64_t v250 = OUTLINED_FUNCTION_10_3(v250, v60, (uint64_t *)&v247);
          OUTLINED_FUNCTION_79_15((uint64_t)&v250, (uint64_t)v251, (uint64_t)v241);
          OUTLINED_FUNCTION_31_1((uint64_t)v2);
          OUTLINED_FUNCTION_62();
          uint64_t v61 = v242;
          OUTLINED_FUNCTION_57_0( &dword_0,  v1,  (os_log_type_t)v244,  "%s parseDisambiguationResponse: directInvocation .no -> cancel",  v242);
          uint64_t v62 = (uint64_t)v243;
          OUTLINED_FUNCTION_17_0((uint64_t)v243);
          OUTLINED_FUNCTION_0_2(v62);
          OUTLINED_FUNCTION_0_2((uint64_t)v61);
        }

        else
        {

          OUTLINED_FUNCTION_31_1((uint64_t)v2);
        }

        OUTLINED_FUNCTION_68_23();
        static AppDisambiguationResponse.cancel()();
LABEL_51:
        OUTLINED_FUNCTION_216_1();
        (*((void (**)(os_log_s *, uint64_t))v10 + 1))(v229, v9);
LABEL_52:
        outlined destroy of PhoneCallNLIntent?( (uint64_t)v7,  &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_53;
      }

      outlined destroy of CommonDirectAction((uint64_t)v49, type metadata accessor for CommonDirectAction);
    }

    OUTLINED_FUNCTION_11_18((uint64_t)v2);
    OUTLINED_FUNCTION_23_51();
    int v132 = OUTLINED_FUNCTION_73_23();
    if (OUTLINED_FUNCTION_6_9(v1))
    {
      uint64_t v133 = OUTLINED_FUNCTION_7_0(12LL);
      LODWORD(v24__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v132;
      __int128 v134 = (uint8_t *)v133;
      v243 = (uint8_t *)OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&__int128 v247 = v243;
      v242 = v134;
      *(_DWORD *)__int128 v134 = 136315138;
      v241 = v134 + 4;
      uint64_t v135 = v2[44];
      uint64_t v136 = v2[45];
      v237 = v10;
      uint64_t v137 = v9;
      uint64_t v138 = v7;
      uint64_t v139 = v2[46];
      uint64_t v250 = 0LL;
      v251[0] = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_76_4();
      uint64_t v140 = v139;
      uint64_t v7 = v138;
      uint64_t v9 = v137;
      uint64_t v10 = v237;
      OUTLINED_FUNCTION_26_49(v135, v136, v140);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_87_0();
      uint64_t v250 = OUTLINED_FUNCTION_10_3(v250, v141, (uint64_t *)&v247);
      OUTLINED_FUNCTION_79_15((uint64_t)&v250, (uint64_t)v251, (uint64_t)v241);
      OUTLINED_FUNCTION_31_1((uint64_t)v2);
      OUTLINED_FUNCTION_62();
      v142 = v242;
      OUTLINED_FUNCTION_57_0( &dword_0,  v1,  (os_log_type_t)v244,  "%s parseDisambiguationResponse: unsupported direct invocation, ignoring",  v242);
      uint64_t v143 = (uint64_t)v243;
      OUTLINED_FUNCTION_17_0((uint64_t)v243);
      OUTLINED_FUNCTION_0_2(v143);
      OUTLINED_FUNCTION_0_2((uint64_t)v142);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v2);
    }

    OUTLINED_FUNCTION_68_23();
    OUTLINED_FUNCTION_200_4();
    goto LABEL_51;
  }

  if (v37 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v37 != enum case for Parse.uso(_:))
    {
      OUTLINED_FUNCTION_11_18((uint64_t)v2);
      OUTLINED_FUNCTION_23_51();
      os_log_type_t v82 = OUTLINED_FUNCTION_15_16();
      if (OUTLINED_FUNCTION_33_47(v82))
      {
        uint64_t v83 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v244 = OUTLINED_FUNCTION_7_0(32LL);
        *(void *)&__int128 v247 = v244;
        *(_DWORD *)uint64_t v83 = 136315138;
        v240 = v83 + 4;
        uint64_t v84 = v2[44];
        uint64_t v85 = v2[45];
        uint64_t v87 = v2[46];
        uint64_t v86 = (void *)v2[47];
        uint64_t v250 = 0LL;
        v251[0] = 0xE000000000000000LL;
        OUTLINED_FUNCTION_6_1();
        OUTLINED_FUNCTION_76_4();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v84, v85, v87, v86);
        OUTLINED_FUNCTION_50();
        uint64_t v36 = (uint64_t)v241;
        swift_bridgeObjectRelease();
        uint64_t v89 = OUTLINED_FUNCTION_10_3(v250, v88, (uint64_t *)&v247);
        uint64_t v90 = OUTLINED_FUNCTION_60_24(v89);
        OUTLINED_FUNCTION_79_15(v90, v91, (uint64_t)v240);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_57_0( &dword_0,  v1,  (os_log_type_t)v7,  "%s parseDisambiguationResponse: unrecognized parse type, ignoring input",  v83);
        uint64_t v92 = v244;
        OUTLINED_FUNCTION_17_0(v244);
        OUTLINED_FUNCTION_0_2(v92);
        OUTLINED_FUNCTION_0_2((uint64_t)v83);
      }

      else
      {

        OUTLINED_FUNCTION_31_1((uint64_t)v2);
      }

      OUTLINED_FUNCTION_68_23();
      OUTLINED_FUNCTION_200_4();
      OUTLINED_FUNCTION_114_7((uint64_t)v243, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
      goto LABEL_53;
    }

    goto LABEL_7;
  }

  OUTLINED_FUNCTION_114_7((uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 96));
  swift_unknownObjectRelease(*(void *)v35);
LABEL_8:
  uint64_t v38 = (os_log_s *)v2[29];
  OUTLINED_FUNCTION_49_0(v2 + 25);
  uint64_t v39 = OUTLINED_FUNCTION_67();
  uint64_t v41 = v40(v39, v38);
  uint64_t v42 = v239;
  Input.parse.getter(v41);
  OUTLINED_FUNCTION_134_5();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_114_7((uint64_t)v42, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
  if (v248)
  {
    outlined init with take of AppSelectionSignalComponent(&v247, (uint64_t)&v250);
    __swift_project_boxed_opaque_existential_1(&v250, v252);
    BOOL v43 = OUTLINED_FUNCTION_187_2(PhoneCallFlowDelegatePlugin_PhoneCallConfirmation_no);
    OUTLINED_FUNCTION_152_0();
    if (v43)
    {
      OUTLINED_FUNCTION_78_18();
LABEL_22:
      OUTLINED_FUNCTION_152_0();
      OUTLINED_FUNCTION_11_18((uint64_t)v2);
      OUTLINED_FUNCTION_23_51();
      os_log_type_t v71 = OUTLINED_FUNCTION_15_16();
      if (os_log_type_enabled(v42, v71))
      {
        uint64_t v72 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v244 = OUTLINED_FUNCTION_7_0(64LL);
        v245[0] = v244;
        *(_DWORD *)uint64_t v72 = 136315394;
        uint64_t v73 = v2[44];
        v246[0] = 0LL;
        v246[1] = 0xE000000000000000LL;
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_202_3(v73);
        OUTLINED_FUNCTION_129();
        OUTLINED_FUNCTION_70_2();
        v246[0] = OUTLINED_FUNCTION_10_3(v246[0], v74, v245);
        OUTLINED_FUNCTION_209_1(v246[0], v75, v76, v72 + 12);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v72 + 12) = 2080;
        uint64_t v77 = v248;
        uint64_t v78 = v249;
        OUTLINED_FUNCTION_42(&v247);
        unsigned __int8 v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 64))(v77, v78);
        if (v79 == 5) {
          uint64_t v81 = 7104878LL;
        }
        else {
          uint64_t v81 = PhoneCallConfirmation.rawValue.getter(v79);
        }
        v246[0] = OUTLINED_FUNCTION_10_3(v81, v80, v245);
        OUTLINED_FUNCTION_209_1(v246[0], v117, v118, v72 + 22);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_78_18();
        OUTLINED_FUNCTION_33_6(&dword_0, v42, v71, "%s Received %s -> cancel", (uint8_t *)v72);
        uint64_t v119 = v244;
        OUTLINED_FUNCTION_42_2(v244);
        OUTLINED_FUNCTION_0_2(v119);
        OUTLINED_FUNCTION_0_2(v72);
      }

      else
      {
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_78_18();
      }

      OUTLINED_FUNCTION_68_23();
      static AppDisambiguationResponse.cancel()();
      goto LABEL_43;
    }

    __swift_project_boxed_opaque_existential_1(&v247, v248);
    BOOL v70 = OUTLINED_FUNCTION_187_2(PhoneCallFlowDelegatePlugin_PhoneCallConfirmation_cancel);
    OUTLINED_FUNCTION_78_18();
    if (v70) {
      goto LABEL_22;
    }
    uint64_t v93 = v252;
    uint64_t v94 = v253;
    OUTLINED_FUNCTION_49_0(&v250);
    uint64_t v95 = (*((uint64_t (**)(uint64_t, os_log_s *))v94 + 12))(v93, v94);
    if (v95 != 35)
    {
      uint64_t v96 = v95;
      if (v95 == 25)
      {
        unint64_t v97 = v2[2];
        if (v97 >> 62)
        {
          OUTLINED_FUNCTION_8_1();
          uint64_t v98 = OUTLINED_FUNCTION_61_1();
          if (v98)
          {
LABEL_35:
            BOOL v99 = __OFSUB__(v98, 1LL);
            uint64_t v100 = v98 - 1;
            if (v99)
            {
              __break(1u);
            }

            else
            {
              OUTLINED_FUNCTION_160_2();
              if (!v96)
              {
                uint64_t v101 = *(void *)(v97 + 8 * v100 + 32);
                OUTLINED_FUNCTION_25_1();
                goto LABEL_38;
              }
            }

            uint64_t v101 = OUTLINED_FUNCTION_5_49(v100);
LABEL_38:
            OUTLINED_FUNCTION_39();
            OUTLINED_FUNCTION_11_18((uint64_t)v2);
            OUTLINED_FUNCTION_11_18(v101);
            OUTLINED_FUNCTION_23_51();
            os_log_type_t v102 = OUTLINED_FUNCTION_64_1();
            if (OUTLINED_FUNCTION_39_7(v38))
            {
              uint64_t v103 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
              uint64_t v104 = OUTLINED_FUNCTION_7_0(64LL);
              OUTLINED_FUNCTION_228_1(v104);
              *(_DWORD *)uint64_t v103 = 136315394;
              v243 = v103 + 4;
              uint64_t v105 = v2[44];
              uint64_t v106 = v2[45];
              uint64_t v107 = v2[46];
              uint64_t v108 = v2[47];
              *(void *)&__int128 v247 = 0LL;
              *((void *)&v247 + 1) = 0xE000000000000000LL;
              OUTLINED_FUNCTION_128();
              OUTLINED_FUNCTION_76_4();
              OUTLINED_FUNCTION_26_49(v105, v106, v107);
              OUTLINED_FUNCTION_23_5();
              OUTLINED_FUNCTION_87_0();
              uint64_t v110 = OUTLINED_FUNCTION_10_3(v247, v109, v246);
              OUTLINED_FUNCTION_52_24(v110);
              OUTLINED_FUNCTION_31_1((uint64_t)v2);
              OUTLINED_FUNCTION_62();
              *(void *)&__int128 v247 = OUTLINED_FUNCTION_157_3();
              *((void *)&v247 + 1) = v111;
              uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
              uint64_t v113 = OUTLINED_FUNCTION_214_2(v112);
              *(void *)&__int128 v247 = OUTLINED_FUNCTION_117_8(v113, v114);
              OUTLINED_FUNCTION_87_1((uint64_t)&v247, v108 + 8, v115, (uint64_t)(v103 + 22));
              OUTLINED_FUNCTION_31_1(v101);
              OUTLINED_FUNCTION_62();
              uint64_t v116 = "%s parseDisambiguationResponse: selected app using last ordinal reference '%s'";
LABEL_88:
              OUTLINED_FUNCTION_33_6(&dword_0, v38, v102, v116, v103);
              uint64_t v204 = v244;
              OUTLINED_FUNCTION_42_2(v244);
              OUTLINED_FUNCTION_0_2(v204);
              OUTLINED_FUNCTION_0_2((uint64_t)v103);

              goto LABEL_90;
            }

            goto LABEL_89;
          }
        }

        else
        {
          uint64_t v98 = *(void *)((char *)&dword_10 + (v97 & 0xFFFFFFFFFFFFF8LL));
          OUTLINED_FUNCTION_8_1();
          if (v98) {
            goto LABEL_35;
          }
        }

        OUTLINED_FUNCTION_39();
      }

      uint64_t v188 = PhoneCallReference.ordinalIndex.getter(v96);
      if ((v189 & 1) == 0)
      {
        uint64_t v190 = v188;
        if ((v188 & 0x8000000000000000LL) == 0)
        {
          uint64_t v191 = v2[2];
          if ((unint64_t)v191 >> 62)
          {
            if (v191 < 0) {
              uint64_t v228 = v2[2];
            }
            else {
              uint64_t v228 = v191 & 0xFFFFFFFFFFFFFF8LL;
            }
            OUTLINED_FUNCTION_8_1();
            uint64_t v38 = (os_log_s *)_CocoaArrayWrapper.endIndex.getter(v228);
          }

          else
          {
            uint64_t v38 = *(os_log_s **)((char *)&dword_10 + (v191 & 0xFFFFFFFFFFFFF8LL));
            OUTLINED_FUNCTION_8_1();
          }

          if (v190 < (uint64_t)v38)
          {
            OUTLINED_FUNCTION_160_2();
            if (v96)
            {
              uint64_t v101 = OUTLINED_FUNCTION_5_49(v190);
            }

            else
            {
              uint64_t v101 = *(void *)(v191 + 8 * v190 + 32);
              OUTLINED_FUNCTION_25_1();
            }

            OUTLINED_FUNCTION_39();
            OUTLINED_FUNCTION_11_18((uint64_t)v2);
            OUTLINED_FUNCTION_11_18(v101);
            OUTLINED_FUNCTION_23_51();
            os_log_type_t v102 = OUTLINED_FUNCTION_64_1();
            if (OUTLINED_FUNCTION_39_7(v38))
            {
              uint64_t v103 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
              uint64_t v192 = OUTLINED_FUNCTION_7_0(64LL);
              OUTLINED_FUNCTION_228_1(v192);
              *(_DWORD *)uint64_t v103 = 136315394;
              v243 = v103 + 4;
              uint64_t v193 = v2[44];
              uint64_t v194 = v2[45];
              uint64_t v195 = v2[46];
              uint64_t v196 = v2[47];
              *(void *)&__int128 v247 = 0LL;
              *((void *)&v247 + 1) = 0xE000000000000000LL;
              OUTLINED_FUNCTION_128();
              OUTLINED_FUNCTION_76_4();
              OUTLINED_FUNCTION_26_49(v193, v194, v195);
              OUTLINED_FUNCTION_23_5();
              OUTLINED_FUNCTION_87_0();
              uint64_t v198 = OUTLINED_FUNCTION_10_3(v247, v197, v246);
              OUTLINED_FUNCTION_52_24(v198);
              OUTLINED_FUNCTION_31_1((uint64_t)v2);
              OUTLINED_FUNCTION_62();
              *(void *)&__int128 v247 = OUTLINED_FUNCTION_157_3();
              *((void *)&v247 + 1) = v199;
              uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
              uint64_t v201 = OUTLINED_FUNCTION_214_2(v200);
              *(void *)&__int128 v247 = OUTLINED_FUNCTION_117_8(v201, v202);
              OUTLINED_FUNCTION_87_1((uint64_t)&v247, v196 + 8, v203, (uint64_t)(v103 + 22));
              OUTLINED_FUNCTION_31_1(v101);
              OUTLINED_FUNCTION_62();
              uint64_t v116 = "%s parseDisambiguationResponse: selected app using ordinal reference '%s'";
              goto LABEL_88;
            }

LABEL_89:
            OUTLINED_FUNCTION_31_1(v101);
            OUTLINED_FUNCTION_31_1((uint64_t)v2);
            goto LABEL_90;
          }

          OUTLINED_FUNCTION_39();
        }
      }

      OUTLINED_FUNCTION_205_4((uint64_t)v2);
      OUTLINED_FUNCTION_23_51();
      int v205 = OUTLINED_FUNCTION_64_1();
      if (OUTLINED_FUNCTION_6_9(v38))
      {
        uint64_t v206 = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v207 = OUTLINED_FUNCTION_7_0(96LL);
        OUTLINED_FUNCTION_228_1(v207);
        *(_DWORD *)uint64_t v206 = 136315650;
        LODWORD(v243) = v205;
        uint64_t v208 = v2[44];
        uint64_t v209 = v2[45];
        uint64_t v210 = v2[46];
        *(void *)&__int128 v247 = 0LL;
        *((void *)&v247 + 1) = 0xE000000000000000LL;
        OUTLINED_FUNCTION_128();
        OUTLINED_FUNCTION_76_4();
        OUTLINED_FUNCTION_26_49(v208, v209, v210);
        OUTLINED_FUNCTION_23_5();
        OUTLINED_FUNCTION_87_0();
        uint64_t v212 = OUTLINED_FUNCTION_10_3(v247, v211, v246);
        uint64_t v213 = OUTLINED_FUNCTION_69_6(v212);
        OUTLINED_FUNCTION_87_1(v213, v214, v215, v216);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v206 + 12) = 2080;
        LOBYTE(v247) = v96;
        uint64_t v217 = String.init<A>(describing:)(&v247, &type metadata for PhoneCallReference);
        *(void *)&__int128 v247 = OUTLINED_FUNCTION_117_8(v217, v218);
        OUTLINED_FUNCTION_87_1((uint64_t)&v247, (uint64_t)&v247 + 8, v219, v206 + 22);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v206 + 22) = 2080;
        uint64_t v220 = OUTLINED_FUNCTION_46_5();
        uint64_t v221 = OUTLINED_FUNCTION_6_3();
        uint64_t v222 = Array.description.getter(v221, v220);
        unint64_t v224 = v223;
        OUTLINED_FUNCTION_62();
        *(void *)&__int128 v247 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v222, v224, v246);
        OUTLINED_FUNCTION_87_1((uint64_t)&v247, (uint64_t)&v247 + 8, v225, v206 + 32);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_70_2();
        _os_log_impl( &dword_0,  v38,  (os_log_type_t)v243,  "%s parseDisambiguationResponse: unable to resolve reference value '%s' in app list: '%s'",  (uint8_t *)v206,  0x20u);
        uint64_t v226 = v244;
        swift_arrayDestroy(v244, 3LL);
        OUTLINED_FUNCTION_0_2(v226);
        OUTLINED_FUNCTION_0_2(v206);
      }

      else
      {

        OUTLINED_FUNCTION_204_2((uint64_t)v2);
      }

      OUTLINED_FUNCTION_68_23();
      uint64_t v227 = OUTLINED_FUNCTION_48_0();
      static AppDisambiguationResponse.disambiguate(apps:)(v227);
      OUTLINED_FUNCTION_34_0();
      goto LABEL_43;
    }

    if (OUTLINED_FUNCTION_110_10())
    {
      OUTLINED_FUNCTION_109_10();
      uint64_t v145 = v144;
      uint64_t v147 = v146;
      outlined init with copy of SharedGlobalsProviding((uint64_t)&v250, (uint64_t)v246);
      if (!v147)
      {
        OUTLINED_FUNCTION_155_4(v246);
        uint64_t v145 = v148;
        uint64_t v147 = v149;
      }

      __swift_destroy_boxed_opaque_existential_1(v246);
      uint64_t v150 = (os_log_s *)v2[2];
      OUTLINED_FUNCTION_8_1();
      uint64_t v151 = OUTLINED_FUNCTION_6_1();
      uint64_t v152 = specialized Sequence.first(where:)(v151, v145, v147);
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_50();
      if (!v152)
      {
        uint64_t v153 = PhoneAppResolutionOnDeviceFlowStrategy.resolveAppByQuery(phoneCallIntent:)(&v250);
        uint64_t v154 = v232;
        AppResolutionAction.result.getter(v153);
        OUTLINED_FUNCTION_38_1();
        uint64_t v155 = v233;
        if ((*(unsigned int (**)(os_log_s *, uint64_t))(v233 + 88))(v154, v234) != enum case for AppResolutionResult.selected(_:))
        {
          OUTLINED_FUNCTION_41_2((uint64_t)v154, *(uint64_t (**)(uint64_t, uint64_t))(v155 + 8));
          OUTLINED_FUNCTION_11_18((uint64_t)v2);
          OUTLINED_FUNCTION_23_51();
          os_log_type_t v179 = OUTLINED_FUNCTION_15_16();
          if (OUTLINED_FUNCTION_33_10(v179))
          {
            v180 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
            uint64_t v181 = OUTLINED_FUNCTION_7_0(32LL);
            OUTLINED_FUNCTION_228_1(v181);
            *(_DWORD *)v180 = 136315138;
            v243 = v180 + 4;
            uint64_t v182 = v2[44];
            uint64_t v183 = v2[45];
            uint64_t v184 = v2[46];
            *(void *)&__int128 v247 = 0LL;
            *((void *)&v247 + 1) = 0xE000000000000000LL;
            OUTLINED_FUNCTION_128();
            OUTLINED_FUNCTION_76_4();
            OUTLINED_FUNCTION_26_49(v182, v183, v184);
            OUTLINED_FUNCTION_23_5();
            OUTLINED_FUNCTION_87_0();
            *(void *)&__int128 v247 = OUTLINED_FUNCTION_10_3(v247, v185, v246);
            OUTLINED_FUNCTION_79_15((uint64_t)&v247, (uint64_t)&v247 + 8, (uint64_t)v243);
            OUTLINED_FUNCTION_31_1((uint64_t)v2);
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_57_0( &dword_0,  v154,  (os_log_type_t)v10,  "%s parseDisambiguationResponse: User changed to an invalid app, re-run Flow to present error dialog",  v180);
            uint64_t v186 = v244;
            OUTLINED_FUNCTION_17_0(v244);
            OUTLINED_FUNCTION_0_2(v186);
            OUTLINED_FUNCTION_0_2((uint64_t)v180);
          }

          else
          {

            OUTLINED_FUNCTION_31_1((uint64_t)v2);
          }

          OUTLINED_FUNCTION_68_23();
          OUTLINED_FUNCTION_200_4();
          goto LABEL_43;
        }

        OUTLINED_FUNCTION_41_2((uint64_t)v154, *(uint64_t (**)(uint64_t, uint64_t))(v155 + 96));
        uint64_t v156 = *(void *)v154;
        OUTLINED_FUNCTION_11_18((uint64_t)v2);
        OUTLINED_FUNCTION_11_18(v156);
        OUTLINED_FUNCTION_23_51();
        os_log_type_t v157 = OUTLINED_FUNCTION_64_1();
        if (OUTLINED_FUNCTION_39_7(v150))
        {
          uint64_t v158 = OUTLINED_FUNCTION_7_0(22LL);
          uint64_t v159 = OUTLINED_FUNCTION_7_0(64LL);
          OUTLINED_FUNCTION_228_1(v159);
          *(_DWORD *)uint64_t v158 = 136315394;
          v243 = (uint8_t *)(v158 + 4);
          uint64_t v160 = v2[44];
          uint64_t v161 = v2[45];
          uint64_t v162 = v2[46];
          *(void *)&__int128 v247 = 0LL;
          *((void *)&v247 + 1) = 0xE000000000000000LL;
          OUTLINED_FUNCTION_128();
          OUTLINED_FUNCTION_76_4();
          OUTLINED_FUNCTION_26_49(v160, v161, v162);
          OUTLINED_FUNCTION_23_5();
          OUTLINED_FUNCTION_87_0();
          uint64_t v164 = OUTLINED_FUNCTION_10_3(v247, v163, v246);
          OUTLINED_FUNCTION_52_24(v164);
          OUTLINED_FUNCTION_31_1((uint64_t)v2);
          OUTLINED_FUNCTION_62();
          *(_WORD *)(v158 + 12) = 2080;
          *(void *)&__int128 v247 = v156;
          OUTLINED_FUNCTION_46_5();
          OUTLINED_FUNCTION_163_5( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  v165,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
          uint64_t v167 = OUTLINED_FUNCTION_170_3(v166);
          *(void *)&__int128 v247 = OUTLINED_FUNCTION_117_8(v167, v168);
          OUTLINED_FUNCTION_87_1((uint64_t)&v247, v160 + 8, v169, v158 + 22);
          OUTLINED_FUNCTION_31_1(v156);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_33_6( &dword_0,  v150,  v157,  "%s parseDisambiguationResponse: User changed  to %s",  (uint8_t *)v158);
          uint64_t v170 = v244;
          OUTLINED_FUNCTION_42_2(v244);
          OUTLINED_FUNCTION_0_2(v170);
          OUTLINED_FUNCTION_0_2(v158);
        }

        else
        {

          OUTLINED_FUNCTION_31_1(v156);
          OUTLINED_FUNCTION_31_1((uint64_t)v2);
        }

        OUTLINED_FUNCTION_68_23();
        uint64_t v187 = OUTLINED_FUNCTION_80_12();
        static AppDisambiguationResponse.select(app:)(v187);
        goto LABEL_91;
      }

LABEL_90:
      PhoneAppResolutionOnDeviceFlowStrategy.selectAppDisambiguation(by:)();
LABEL_91:
      OUTLINED_FUNCTION_16_3();
LABEL_43:
      OUTLINED_FUNCTION_18();
      goto LABEL_53;
    }

    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_11_18((uint64_t)v2);
    OUTLINED_FUNCTION_23_51();
    os_log_type_t v171 = OUTLINED_FUNCTION_15_16();
    if (OUTLINED_FUNCTION_33_10(v171))
    {
      uint64_t v172 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v244 = OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&__int128 v247 = v244;
      *(_DWORD *)uint64_t v172 = 136315138;
      v243 = v172 + 4;
      uint64_t v173 = v2[44];
      uint64_t v174 = v2[45];
      uint64_t v175 = v2[46];
      uint64_t v250 = 0LL;
      v251[0] = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_26_49(v173, v174, v175);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_87_0();
      uint64_t v250 = OUTLINED_FUNCTION_10_3(v250, v176, (uint64_t *)&v247);
      OUTLINED_FUNCTION_79_15((uint64_t)&v250, (uint64_t)v251, (uint64_t)v243);
      OUTLINED_FUNCTION_31_1((uint64_t)v2);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0( &dword_0,  v94,  (os_log_type_t)v10,  "%s parseDisambiguationResponse: unable to disambiguate",  v172);
      uint64_t v177 = v244;
      OUTLINED_FUNCTION_17_0(v244);
      OUTLINED_FUNCTION_0_2(v177);
      OUTLINED_FUNCTION_0_2((uint64_t)v172);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v2);
    }

    OUTLINED_FUNCTION_68_23();
    uint64_t v178 = OUTLINED_FUNCTION_48_0();
    static AppDisambiguationResponse.disambiguate(apps:)(v178);
    OUTLINED_FUNCTION_34_0();
  }

  else
  {
    outlined destroy of PhoneCallNLIntent?( (uint64_t)&v247,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    OUTLINED_FUNCTION_11_18((uint64_t)v2);
    OUTLINED_FUNCTION_23_51();
    os_log_type_t v63 = OUTLINED_FUNCTION_15_16();
    if (OUTLINED_FUNCTION_33_10(v63))
    {
      uint64_t v64 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v244 = OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&__int128 v247 = v244;
      *(_DWORD *)uint64_t v64 = 136315138;
      v243 = v64 + 4;
      uint64_t v65 = v2[44];
      uint64_t v66 = v2[45];
      uint64_t v67 = v2[46];
      uint64_t v250 = 0LL;
      v251[0] = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_26_49(v65, v66, v67);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_87_0();
      uint64_t v250 = OUTLINED_FUNCTION_10_3(v250, v68, (uint64_t *)&v247);
      OUTLINED_FUNCTION_79_15((uint64_t)&v250, (uint64_t)v251, (uint64_t)v243);
      OUTLINED_FUNCTION_31_1((uint64_t)v2);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0( &dword_0,  v42,  (os_log_type_t)v10,  "%s could not transform input to NLIntent, ignoring input",  v64);
      uint64_t v69 = v244;
      OUTLINED_FUNCTION_17_0(v244);
      OUTLINED_FUNCTION_0_2(v69);
      OUTLINED_FUNCTION_0_2((uint64_t)v64);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v2);
    }

    OUTLINED_FUNCTION_68_23();
    OUTLINED_FUNCTION_200_4();
  }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:)(uint64_t a1, uint64_t a2)
{
  v3[36] = a2;
  v3[37] = v2;
  v3[35] = a1;
  uint64_t v4 = type metadata accessor for PhoneError(0LL);
  v3[38] = v4;
  v3[39] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for DialogPhase(0LL);
  v3[40] = OUTLINED_FUNCTION_23(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[41] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[42] = v7;
  v3[43] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v3[44] = v8;
  v3[45] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for CommonDirectAction(0LL);
  v3[46] = v9;
  v3[47] = OUTLINED_FUNCTION_23(*(void *)(v9 - 8));
  uint64_t v10 = type metadata accessor for YesNoConfirmationModel(0LL);
  v3[48] = v10;
  v3[49] = OUTLINED_FUNCTION_23(*(void *)(v10 - 8));
  uint64_t v11 = type metadata accessor for Locale(0LL);
  v3[50] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v3[51] = v12;
  v3[52] = OUTLINED_FUNCTION_23(v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[53] = OUTLINED_FUNCTION_23(*(void *)(v13 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:)()
{
  uint64_t v52 = v3;
  uint64_t v53 = v4;
  int v51 = v0;
  uint64_t v5 = v0 + 2;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = v0[37];
  uint64_t v7 = OUTLINED_FUNCTION_15_1();
  uint64_t v8 = (os_log_s *)__swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  v0[54] = v8;
  OUTLINED_FUNCTION_11_18(v6);
  OUTLINED_FUNCTION_91_13();
  os_log_type_t v9 = OUTLINED_FUNCTION_15_16();
  BOOL v10 = OUTLINED_FUNCTION_33_47(v9);
  uint64_t v11 = v0[37];
  if (v10)
  {
    uint64_t v12 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v48 = OUTLINED_FUNCTION_7_0(32LL);
    v50[0] = v48;
    OUTLINED_FUNCTION_145_7(4.8149e-34);
    uint64_t v46 = v13;
    uint64_t v47 = (uint8_t *)v12;
    uint64_t v15 = *(void *)(v11 + 352);
    uint64_t v14 = *(void *)(v11 + 360);
    OUTLINED_FUNCTION_265_0();
    v50[1] = 0LL;
    v50[2] = v16;
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_57_22(v15, v14, v2);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_4_1();
    v0[34] = OUTLINED_FUNCTION_10_3(0LL, v17, v50);
    uint64_t v5 = v0 + 2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 34, v0 + 35, v46);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1(v11);
    OUTLINED_FUNCTION_57_0(&dword_0, v8, v1, "%s makeConfirmationPrompt: confirm app..", v47);
    OUTLINED_FUNCTION_17_0(v48);
    OUTLINED_FUNCTION_0_2(v48);
    OUTLINED_FUNCTION_0_2((uint64_t)v47);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(v0[37]);
  }

  uint64_t v19 = v0[51];
  uint64_t v18 = v0[52];
  uint64_t v20 = v0[36];
  uint64_t v21 = (void *)v0[37];
  OUTLINED_FUNCTION_17_25(v21 + 25);
  OUTLINED_FUNCTION_12_29();
  uint64_t v22 = v0[5];
  uint64_t v23 = v0[6];
  OUTLINED_FUNCTION_17_25(v5);
  dispatch thunk of DeviceState.siriLocale.getter(v22, v23);
  uint64_t v24 = v21[12];
  uint64_t v25 = v21[13];
  OUTLINED_FUNCTION_230_2(v21 + 9);
  v26(v20, v18, v24, v25);
  uint64_t v28 = v27;
  OUTLINED_FUNCTION_41_2(v18, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  __swift_destroy_boxed_opaque_existential_1(v5);
  uint64_t v29 = v0[53];
  if (v28)
  {
    OUTLINED_FUNCTION_6_3();
    uint64_t v30 = OUTLINED_FUNCTION_280_0();
    SpeakableString.init(print:speak:)(v30, v31, 0LL, 0LL);
    uint64_t v32 = type metadata accessor for SpeakableString(0LL);
    OUTLINED_FUNCTION_18_53(v29, v33, v34, v32);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v35 = type metadata accessor for SpeakableString(0LL);
    OUTLINED_FUNCTION_29_1(v29, v36, v37, v35);
  }

  uint64_t v38 = *(void **)(v0[37] + 240LL);
  uint64_t v39 = App.appIdentifier.getter();
  static PhoneCallAppNameConstants.isPhone(appId:)(v39, v40);
  OUTLINED_FUNCTION_62();
  uint64_t v41 = OUTLINED_FUNCTION_108_5(*(void *)(*v38 + class metadata base offset for StartCallCATsSimple));
  uint64_t v49 = v42;
  BOOL v43 = (void *)swift_task_alloc(v41);
  v0[55] = v43;
  uint64_t v44 = OUTLINED_FUNCTION_153_7(v43, (uint64_t)PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:));
  return v49(v44);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v2 + 448) = v1;
  *(void *)(v2 + 456) = v0;
  OUTLINED_FUNCTION_28_17(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);
  os_log_type_t v1 = *(void **)(v0[37] + 248LL);
  v0[58] = v1;
  uint64_t v2 = App.appIdentifier.getter();
  static PhoneCallAppNameConstants.isPhone(appId:)(v2, v3);
  OUTLINED_FUNCTION_62();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + *v1
                                                  + 336));
  v0[59] = v4;
  uint64_t v5 = OUTLINED_FUNCTION_153_7(v4, (uint64_t)PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:));
  return v7(v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v2 + 50__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  *(void *)(v2 + 512) = v0;
  OUTLINED_FUNCTION_28_17(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 528));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v1 = *(void **)(v0 + 480);
  uint64_t v2 = *(void **)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 328);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  outlined destroy of CommonDirectAction(v5, type metadata accessor for PhoneSnippetDataModels);
  outlined destroy of CommonDirectAction(v4, type metadata accessor for YesNoConfirmationModel);
  outlined destroy of PhoneCallNLIntent?(v3, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_10_0();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_71_17();
  OUTLINED_FUNCTION_119_1(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_21_0();

  OUTLINED_FUNCTION_71_17();
  OUTLINED_FUNCTION_119_1(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  OUTLINED_FUNCTION_21_0();
  os_log_type_t v1 = *(void **)(v0 + 448);

  OUTLINED_FUNCTION_71_17();
  OUTLINED_FUNCTION_119_1(v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  return OUTLINED_FUNCTION_2_38(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v2 + 472);
  uint64_t v4 = *v2;
  *(void *)(v4 + 480) = a1;
  *(void *)(v4 + 488) = v1;
  OUTLINED_FUNCTION_28_17(v3);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_33_37(v5, v6, v7);
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                           + **(void **)(v4 + 464)
                                           + 80));
    uint64_t v12 = v10;
    uint64_t v11 = (void *)swift_task_alloc(v9);
    *(void *)(v4 + 496) = v11;
    *uint64_t v11 = v4;
    v11[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:);
    return v12();
  }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v27 = OUTLINED_FUNCTION_11_18(*(void *)(v24 + 296));
  Logger.logObject.getter(v27);
  os_log_type_t v28 = OUTLINED_FUNCTION_41();
  uint64_t v29 = &unk_31F000;
  if (OUTLINED_FUNCTION_50_12(v22))
  {
    uint64_t v30 = *(void **)(v24 + 296);
    uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v145 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v147 = v145;
    uint64_t v148 = 0LL;
    OUTLINED_FUNCTION_208_0(4.8149e-34);
    uint64_t v139 = v32;
    uint64_t v33 = v30[44];
    uint64_t v34 = v30[45];
    uint64_t v25 = v30[46];
    unint64_t v149 = 0xE000000000000000LL;
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_235_1(v33, v34, v25);
    uint64_t v29 = (void *)&unk_31F000;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_0();
    *(void *)(v24 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_10_3(0LL, v35, &v147);
    uint64_t v26 = type metadata for Any;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v24 + 264, v24 + 272, v139);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1((uint64_t)v30);
    uint64_t v36 = (uint64_t)v31;
    OUTLINED_FUNCTION_57_0(&dword_0, v22, v28, "%s makeConfirmationPrompt: build yes no template..", v31);
    uint64_t v23 = v145;
    OUTLINED_FUNCTION_17_0(v145);
    OUTLINED_FUNCTION_0_2(v145);
    OUTLINED_FUNCTION_0_2(v36);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(*(void *)(v24 + 296));
  }

  uint64_t v37 = v24 + 256;
  p_base_props = &CameraControlFlow.base_props;
  uint64_t v39 = OUTLINED_FUNCTION_49( (uint64_t)[*(id *)(v24 + 480) dialog],  (unint64_t *)&lazy cache variable for type metadata for DialogElement,  DialogElement_ptr);
  uint64_t v40 = OUTLINED_FUNCTION_280_0();
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);
  OUTLINED_FUNCTION_212_1();
  if (!((unint64_t)v23 >> 62))
  {
    uint64_t v42 = *(void **)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8LL));
    if (v42) {
      goto LABEL_6;
    }
LABEL_17:
    uint64_t v98 = *(void **)(v24 + 432);
    p_base_props = *(__objc2_prop_list ***)(v24 + 296);
    OUTLINED_FUNCTION_34_0();
    uint64_t v99 = OUTLINED_FUNCTION_11_18((uint64_t)p_base_props);
    Logger.logObject.getter(v99);
    os_log_type_t v100 = OUTLINED_FUNCTION_73_23();
    BOOL v101 = OUTLINED_FUNCTION_33_47(v100);
    os_log_type_t v102 = *(void **)(v24 + 296);
    if (v101)
    {
      uint64_t v103 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v143 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v147 = v143;
      uint64_t v148 = 0LL;
      *(_DWORD *)uint64_t v103 = v29[237];
      uint64_t v104 = v102[44];
      uint64_t v26 = (void *)v102[45];
      uint64_t v37 = v102[46];
      uint64_t v42 = (void *)v102[47];
      unint64_t v149 = 0xE000000000000000LL;
      OUTLINED_FUNCTION_124();
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_48_27(v104);
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_4_1();
      *(void *)(v24 + 256) = OUTLINED_FUNCTION_10_3(v148, v105, &v147);
      OUTLINED_FUNCTION_79_15(v24 + 256, v24 + 264, (uint64_t)(v103 + 4));
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1((uint64_t)v102);
      uint64_t v98 = v103;
      p_base_props = (__objc2_prop_list **)v143;
      OUTLINED_FUNCTION_17_0(v143);
      OUTLINED_FUNCTION_0_2(v143);
      OUTLINED_FUNCTION_0_2((uint64_t)v98);
    }

    else
    {
      OUTLINED_FUNCTION_31_1(*(void *)(v24 + 296));
    }

    OUTLINED_FUNCTION_264_1();
    id v107 = OUTLINED_FUNCTION_68_12(v106, "catId");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v107);
    OUTLINED_FUNCTION_249_1();
    *uint64_t v98 = v37;
    v98[1] = v102;
    v98[2] = 0xD000000000000048LL;
    v98[3] = 0x800000000034FF40LL;
    v98[4] = 0xD00000000000001CLL;
    v98[5] = 0x800000000034FF90LL;
    uint64_t v108 = 225LL;
    goto LABEL_27;
  }

  if (v23 < 0) {
    uint64_t v97 = v23;
  }
  else {
    uint64_t v97 = v23 & 0xFFFFFFFFFFFFFF8LL;
  }
  OUTLINED_FUNCTION_48_0();
  uint64_t v42 = (void *)_CocoaArrayWrapper.endIndex.getter(v97);
  OUTLINED_FUNCTION_34_0();
  if (!v42) {
    goto LABEL_17;
  }
LABEL_6:
  OUTLINED_FUNCTION_203_3();
  if ((v23 & 0xC000000000000001LL) != 0) {
    OUTLINED_FUNCTION_224_2(0LL);
  }
  else {
    id v43 = *(id *)(v23 + 32);
  }
  uint64_t v44 = *(void **)(v24 + 504);
  uint64_t v45 = OUTLINED_FUNCTION_34_0();
  id v46 = OUTLINED_FUNCTION_68_12(v45, "fullPrint");
  OUTLINED_FUNCTION_212_1();
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  uint64_t v42 = v48;

  id v49 = [v44 dialog];
  unint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v39);

  if (v50 >> 62)
  {
    OUTLINED_FUNCTION_20_14();
    uint64_t v109 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_13_1();
    if (v109) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }

  if (!*(void *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_23:
    uint64_t v98 = *(void **)(v24 + 432);
    uint64_t v23 = *(void *)(v24 + 296);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_4_1();
    uint64_t v110 = OUTLINED_FUNCTION_11_18(v23);
    Logger.logObject.getter(v110);
    os_log_type_t v111 = OUTLINED_FUNCTION_73_23();
    BOOL v112 = OUTLINED_FUNCTION_33_47(v111);
    uint64_t v113 = *(void *)(v24 + 296);
    if (v112)
    {
      uint64_t v114 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v144 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v147 = v144;
      uint64_t v148 = 0LL;
      v142 = (uint8_t *)v114;
      OUTLINED_FUNCTION_145_7(COERCE_FLOAT(v29[237]));
      uint64_t v115 = *(void *)(v113 + 352);
      uint64_t v26 = *(void **)(v113 + 360);
      OUTLINED_FUNCTION_265_0();
      unint64_t v149 = v116;
      OUTLINED_FUNCTION_124();
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_57_22(v115, (uint64_t)v26, v47);
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_4_1();
      uint64_t v118 = OUTLINED_FUNCTION_10_3(v148, v117, &v147);
      uint64_t v119 = OUTLINED_FUNCTION_148_7(v118, (void *)(v24 + 248));
      OUTLINED_FUNCTION_33_35((uint64_t)v119, v24 + 256, v120);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1(v113);
      uint64_t v98 = v142;
      p_base_props = (__objc2_prop_list **)v144;
      OUTLINED_FUNCTION_17_0(v144);
      OUTLINED_FUNCTION_0_2(v144);
      OUTLINED_FUNCTION_0_2((uint64_t)v142);
    }

    else
    {
      OUTLINED_FUNCTION_31_1(*(void *)(v24 + 296));
    }

    OUTLINED_FUNCTION_264_1();
    static String._unconditionallyBridgeFromObjectiveC(_:)([p_base_props catId]);
    OUTLINED_FUNCTION_249_1();
    *uint64_t v98 = v113;
    v98[1] = v47;
    v98[2] = 0xD000000000000048LL;
    v98[3] = 0x800000000034FF40LL;
    v98[4] = 0xD00000000000001CLL;
    v98[5] = 0x800000000034FF90LL;
    uint64_t v108 = 230LL;
LABEL_27:
    v98[6] = v108;
    uint64_t v121 = OUTLINED_FUNCTION_146_1();
    swift_storeEnumTagMultiPayload(v121, v122, 3LL);
    lazy protocol witness table accessor for type PlayVoiceMailAction and conformance PlayVoiceMailAction( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  255LL,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    swift_allocError(v23, v123, 0LL, 0LL);
    PhoneError.logged()(v124);
    outlined destroy of CommonDirectAction((uint64_t)v98, type metadata accessor for PhoneError);
    swift_willThrow(v125, v126, v127, v128, v129, v130, v131, v132);

    outlined destroy of PhoneCallNLIntent?( *(void *)(v24 + 424),  &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_29_17();
    OUTLINED_FUNCTION_25();
    return (*(uint64_t (**)(void))(v24 + 8))();
  }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)(uint64_t a1)
{
  _BYTE v2[8] = a1;
  v2[9] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[10] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[12] = v5;
  v2[13] = OUTLINED_FUNCTION_23(v5);
  uint64_t v6 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v2[14] = v6;
  v2[15] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for ResponseMode(0LL);
  v2[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[17] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[18] = swift_task_alloc(v9);
  v2[19] = swift_task_alloc(v9);
  uint64_t v10 = type metadata accessor for NLContextUpdate(0LL);
  v2[20] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v2[21] = v11;
  v2[22] = OUTLINED_FUNCTION_23(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 200);
  *(void *)(v3 + 208) = a1;
  *(void *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  OUTLINED_FUNCTION_28_17(v4);
  if (v1) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)()
{
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INIntent, INIntentResponse>);
  unint64_t v4 = OUTLINED_FUNCTION_48_0();
  specialized static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)( v4,  (void *)(v3 + 152),  v2);
  OUTLINED_FUNCTION_34_0();
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 >> 62)
  {
LABEL_30:
    OUTLINED_FUNCTION_11(v5);
    uint64_t v6 = OUTLINED_FUNCTION_61_1();
    if (v6) {
      goto LABEL_3;
    }
  }

  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_11(*(void *)(v3 + 16));
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 0LL;
      uint64_t v52 = "n19PhoneCallCommonCATs";
      uint64_t v48 = v3;
      id v49 = "com.apple.InCallService";
      uint64_t v50 = 0x8000000000348BB0LL;
      id v46 = "com.apple.Carousel";
      uint64_t v47 = 0x8000000000348BD0LL;
      uint64_t v44 = "com.apple.NanoPhone";
      uint64_t v45 = 0x8000000000348BF0LL;
      while (1)
      {
        if ((v5 & 0xC000000000000001LL) != 0) {
          OUTLINED_FUNCTION_224_2(v7);
        }
        else {
          UsoEntity_common_Person.usoPerson.getter();
        }
        uint64_t v1 = v7 + 1;
        if (__OFADD__(v7, 1LL))
        {
          __break(1u);
          goto LABEL_30;
        }

        if (App.isFaceTime()()) {
          goto LABEL_22;
        }
        uint64_t v8 = App.appIdentifier.getter();
        if (!v9)
        {
          OUTLINED_FUNCTION_38_1();
LABEL_28:
          uint64_t v17 = 0LL;
          goto LABEL_32;
        }

        uint64_t v10 = v8;
        uint64_t v3 = v9;
        OUTLINED_FUNCTION_237_0();
        if (v12 == v11 + 5 && v3 == 0x8000000000348B90LL) {
          break;
        }
        OUTLINED_FUNCTION_237_0();
        if (v10 == v13 && v3 == 0x8000000000348BB0LL) {
          break;
        }
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v10, v3, 0xD000000000000012LL, 0x8000000000348BB0LL, 0LL) & 1) != 0) {
          break;
        }
        OUTLINED_FUNCTION_237_0();
        if (v10 == v14 + 1 && v3 == 0x8000000000348BD0LL) {
          break;
        }
        OUTLINED_FUNCTION_237_0();
        if (v10 == v15 + 3 && v3 == 0x8000000000348BF0LL) {
          break;
        }
        char v16 = OUTLINED_FUNCTION_88_18(v15 + 3, (uint64_t)"com.apple.NanoPhone");
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_38_1();
        if ((v16 & 1) == 0) {
          goto LABEL_28;
        }
LABEL_23:
        ++v7;
        if (v1 == v6)
        {
          uint64_t v17 = 1LL;
          goto LABEL_32;
        }
      }

      OUTLINED_FUNCTION_13_1();
LABEL_22:
      OUTLINED_FUNCTION_38_1();
      goto LABEL_23;
    }
  }

  uint64_t v17 = 1LL;
LABEL_32:
  OUTLINED_FUNCTION_7_4(v5);
  uint64_t v18 = OUTLINED_FUNCTION_48_0();
  PhoneAppResolutionOnDeviceFlowStrategy.getAppSpeakableString(apps:)( v18,  v19,  v20,  v21,  v22,  v23,  v24,  v25,  (uint64_t)v44,  v45,  (uint64_t)v46,  v47,  v48,  (uint64_t)v49,  v50,  (uint64_t)v52,  v54,  v55,  v56,  v57,  v58,  v59,  v60,  v61,  v62,  v63);
  v0[23] = v26;
  OUTLINED_FUNCTION_34_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v27 = v0[9];
  uint64_t v28 = OUTLINED_FUNCTION_15_1();
  uint64_t v29 = (os_log_s *)__swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_11_18(v27);
  OUTLINED_FUNCTION_91_13();
  os_log_type_t v30 = OUTLINED_FUNCTION_15_16();
  BOOL v31 = OUTLINED_FUNCTION_95_11(v29);
  uint64_t v32 = v0[9];
  if (v31)
  {
    uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v51 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v54 = v51;
    uint64_t v55 = 0LL;
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v34 = v17;
    uint64_t v36 = *(void *)(v32 + 352);
    uint64_t v35 = *(void *)(v32 + 360);
    OUTLINED_FUNCTION_265_0();
    uint64_t v56 = v37;
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_57_22(v36, v35, v1);
    uint64_t v17 = v34;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_1();
    v0[7] = OUTLINED_FUNCTION_10_3(v55, v38, &v54);
    OUTLINED_FUNCTION_33_35((uint64_t)(v0 + 7), (uint64_t)(v0 + 8), (uint64_t)(v33 + 4));
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1(v32);
    OUTLINED_FUNCTION_57_0(&dword_0, v29, v30, "%s makeDisambiguationPrompt: disambiguating apps with RF2.0", v33);
    OUTLINED_FUNCTION_17_0(v51);
    OUTLINED_FUNCTION_0_2(v51);
    OUTLINED_FUNCTION_0_2((uint64_t)v33);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(v0[9]);
  }

  uint64_t v39 = *(void **)(v0[9] + 240LL);
  v0[24] = v39;
  uint64_t v40 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for StartCallCATsSimple + *v39 + 80));
  uint64_t v53 = v41;
  uint64_t v42 = (void *)swift_task_alloc(v40);
  v0[25] = v42;
  *uint64_t v42 = v0;
  v42[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:);
  return v53(v17);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  void *v8;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *boxed_opaque_existential_1;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t (*v50)(void);
  void *v51;
  uint64_t v52;
  OUTLINED_FUNCTION_193_2();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v1 + 232);
  OUTLINED_FUNCTION_49_0((void *)(v1 + 200));
  if (OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112)))
  {
    unint64_t v4 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 152);
    unint64_t v5 = *(void *)(v0 + 136);
    CurrentRequest.responseMode.getter();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_71_4(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    if (ResponseMode.isVoiceMode()())
    {
      uint64_t v6 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for StartCallCATsSimple
                                             + **(void **)(v0 + 192)
                                             + 96));
      uint64_t v50 = v7;
      uint64_t v8 = (void *)swift_task_alloc(v6);
      *(void *)(v0 + 22__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v8;
      *uint64_t v8 = v0;
      v8[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:);
      return OUTLINED_FUNCTION_3_84(*(void *)(v0 + 184), v50);
    }

    OUTLINED_FUNCTION_221_0();
  }

  uint64_t v10 = *(void **)(v0 + 208);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)(v0 + 208);
  uint64_t v11 = *(void *)(v0 + 216);
  *(void *)(v0 + 248) = v12;
  uint64_t v13 = *(void **)(v0 + 72);
  uint64_t v14 = v10;
  UsoEntity_common_Person.usoPerson.getter();
  uint64_t v15 = OUTLINED_FUNCTION_124();
  id v49 = specialized Sequence.compactMap<A>(_:)(v15, v13);
  OUTLINED_FUNCTION_4_1();
  uint64_t v51 = v12;
  char v16 = [v12 dialog];
  uint64_t v17 = OUTLINED_FUNCTION_49( (uint64_t)v16,  (unint64_t *)&lazy cache variable for type metadata for DialogElement,  &OBJC_CLASS___DialogElement_ptr);
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);
  OUTLINED_FUNCTION_212_1();
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0) {
      uint64_t v24 = v11;
    }
    else {
      uint64_t v24 = v11 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_48_0();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    OUTLINED_FUNCTION_34_0();
    if (v25) {
      goto LABEL_7;
    }
  }

  else if (*(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_7:
    OUTLINED_FUNCTION_203_3();
    if ((v11 & 0xC000000000000001LL) != 0) {
      OUTLINED_FUNCTION_224_2(0LL);
    }
    else {
      uint64_t v18 = *(id *)(v11 + 32);
    }
    uint64_t v19 = OUTLINED_FUNCTION_34_0();
    uint64_t v20 = OUTLINED_FUNCTION_68_12(v19, "fullPrint");
    OUTLINED_FUNCTION_212_1();
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    uint64_t v23 = v22;

    goto LABEL_15;
  }

  OUTLINED_FUNCTION_34_0();
  uint64_t v21 = 0LL;
  uint64_t v23 = 0LL;
LABEL_15:
  uint64_t v26 = *(void *)(v0 + 176);
  uint64_t v28 = *(void *)(v0 + 112);
  uint64_t v27 = *(void **)(v0 + 120);
  uint64_t v29 = *(void *)(v0 + 72);
  os_log_type_t v30 = *(void *)(v0 + 80);
  *uint64_t v27 = v49;
  v27[1] = v21;
  void v27[2] = v23;
  swift_storeEnumTagMultiPayload(v27, v28, 1LL);
  OUTLINED_FUNCTION_20_14();
  BOOL v31 = OUTLINED_FUNCTION_36();
  static DialogPhase.clarification.getter(v31);
  uint64_t v32 = (void *)swift_task_alloc(48LL);
  v32[2] = v26;
  uint64_t v32[3] = v49;
  _BYTE v32[4] = v21;
  v32[5] = v23;
  OutputGenerationManifest.init(dialogPhase:_:)( v30,  partial apply for closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:),  v32);
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_7_8();
  __swift_project_boxed_opaque_existential_1((void *)(v29 + 256), *(void *)(v29 + 280));
  *(void *)(v0 + 40) = v28;
  OUTLINED_FUNCTION_118_6( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  v33,  v34,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  *(void *)(v0 + 48) = v35;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_158_5((uint64_t)v27, (uint64_t)boxed_opaque_existential_1);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v38 = OUTLINED_FUNCTION_8_2(v37, 40LL);
  *(_OWORD *)(v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  *(void *)(v38 + 32) = v51;
  uint64_t v52 = v38;
  specialized Array._endMutation()(v38, v39, v40, v41);
  *(void *)(v0 + 256) = v52;
  uint64_t v42 = v51;
  id v43 = (void *)OUTLINED_FUNCTION_259_2();
  *(void *)(v0 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v43;
  OUTLINED_FUNCTION_273_2(v43);
  OUTLINED_FUNCTION_110_4();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)( v44,  v45,  v46,  v47,  v48);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  *unint64_t v4 = *v3;
  *(void *)(v2 + 232) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1) {
    *(void *)(v2 + 240) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v5, v6, v7);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *boxed_opaque_existential_1;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v38;
  uint64_t v39;
  OUTLINED_FUNCTION_221_0();
  uint64_t v38 = (void *)v0[30];
  v0[31] = v38;
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = (void *)v0[9];
  UsoEntity_common_Person.usoPerson.getter();
  uint64_t v3 = OUTLINED_FUNCTION_124();
  unint64_t v4 = specialized Sequence.compactMap<A>(_:)(v3, v2);
  OUTLINED_FUNCTION_4_1();
  unint64_t v5 = [v1 dialog];
  uint64_t v6 = OUTLINED_FUNCTION_49( (uint64_t)v5,  (unint64_t *)&lazy cache variable for type metadata for DialogElement,  &OBJC_CLASS___DialogElement_ptr);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (v7 >> 62)
  {
    OUTLINED_FUNCTION_8_1();
    uint64_t v14 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
    if (v14) {
      goto LABEL_3;
    }
LABEL_7:
    OUTLINED_FUNCTION_39();
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
    goto LABEL_8;
  }

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 264));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  unint64_t v4 = *(void *)(v0 + 120);
  unint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);

  OUTLINED_FUNCTION_114_7(v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  outlined destroy of CommonDirectAction(v4, type metadata accessor for PhoneSnippetDataModels);
  OUTLINED_FUNCTION_41_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_10_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_83_19();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  return OUTLINED_FUNCTION_5_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);

  OUTLINED_FUNCTION_41_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_83_19();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  return OUTLINED_FUNCTION_5_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ResponseType(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16LL))(v8, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v9);
  OutputGenerationManifest.nlContextUpdate.setter(v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ResponseType.disambiguation(_:), v3);
  OutputGenerationManifest.responseType.setter(v6);
  return OutputGenerationManifest.responseViewId.setter(0xD000000000000011LL, 0x8000000000350190LL);
}

PhoneCallFlowDelegatePlugin::AppResolutionSource __swiftcall PhoneAppResolutionOnDeviceFlowStrategy.getAppResolutionSource()()
{
  return *(_BYTE *)(v0 + 344);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.selectAppConfirmation(by:)(uint64_t a1)
{
  uint64_t v5 = v1;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = OUTLINED_FUNCTION_15_1();
  uint64_t v8 = (os_log_s *)__swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_11_18((uint64_t)v1);
  OUTLINED_FUNCTION_11_18(a1);
  OUTLINED_FUNCTION_91_13();
  os_log_type_t v9 = OUTLINED_FUNCTION_234();
  if (OUTLINED_FUNCTION_12_59(v9))
  {
    uint64_t v3 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v59 = OUTLINED_FUNCTION_7_0(64LL);
    v65[0] = v59;
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v61 = (uint64_t)v8;
    uint64_t v11 = *((void *)v1 + 44);
    uint64_t v10 = *((void *)v1 + 45);
    uint64_t v67 = 0LL;
    v68[0] = 0xE000000000000000LL;
    OUTLINED_FUNCTION_76_4();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_238_1(v11, v10);
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_10_3(0LL, v12, v65);
    OUTLINED_FUNCTION_191_2();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v13, v14, v15);
    OUTLINED_FUNCTION_31_1((uint64_t)v1);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_196_5();
    uint64_t v67 = App.appIdentifier.getter();
    v68[0] = v16;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v18 = String.init<A>(describing:)(&v67, v17);
    uint64_t v67 = OUTLINED_FUNCTION_162_6(v18, v19, v20, v21, v22, v23, v24, v25, v56, (uint64_t)(v3 + 4), v59, v61);
    uint64_t v26 = v10;
    uint64_t v8 = (os_log_s *)v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v26);
    OUTLINED_FUNCTION_31_1(a1);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_33_6(&dword_0, v2, v4, "%s selectAppConfirmation: user confirmed app: '%s'", v3);
    OUTLINED_FUNCTION_42_2(v58);
    OUTLINED_FUNCTION_0_2(v58);
    OUTLINED_FUNCTION_0_2((uint64_t)v3);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(a1);
    OUTLINED_FUNCTION_31_1((uint64_t)v1);
  }

  PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)(a1, (uint64_t)v64);
  OUTLINED_FUNCTION_240_1(v27, v28, &demangling cache variable for type metadata for AnnotatedApp?, v29, v30, v31, v32);
  if (v65[0])
  {
    OUTLINED_FUNCTION_239_2( v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v56,  v57,  v58,  v60,  v64[0],  v64[1],  v64[2],  v64[3],  v64[4],  v64[5],  v65[0],  v65[1],  v65[2],  v65[3],  v66);
    OUTLINED_FUNCTION_102_7();
    static AppConfirmationResponse.select(app:)(v67);
    OUTLINED_FUNCTION_154_6();
    v68[6] = v68[0];
    uint64_t v41 = OUTLINED_FUNCTION_106_8();
    OUTLINED_FUNCTION_234_1((uint64_t)v41, v42, &demangling cache variable for type metadata for String?);
    OUTLINED_FUNCTION_13_11();
    v69[2] = v68[4];
    OUTLINED_FUNCTION_44_28();
  }

  else
  {
    uint64_t v43 = *((void *)v1 + 3);
    if (v43)
    {
      OUTLINED_FUNCTION_11_18((uint64_t)v1);
      OUTLINED_FUNCTION_29_3();
      OUTLINED_FUNCTION_91_13();
      os_log_type_t v44 = OUTLINED_FUNCTION_15_16();
      if (OUTLINED_FUNCTION_33_47(v44))
      {
        uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v62 = OUTLINED_FUNCTION_7_0(32LL);
        v69[0] = v62;
        *(_DWORD *)uint64_t v45 = 136315138;
        uint64_t v46 = *((void *)v1 + 44);
        uint64_t v67 = 0LL;
        v68[0] = 0xE000000000000000LL;
        OUTLINED_FUNCTION_124();
        OUTLINED_FUNCTION_76_4();
        OUTLINED_FUNCTION_48_27(v46);
        OUTLINED_FUNCTION_4_1();
        OUTLINED_FUNCTION_87_0();
        OUTLINED_FUNCTION_10_3(v67, v47, v69);
        OUTLINED_FUNCTION_191_2();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, v49, v50);
        OUTLINED_FUNCTION_31_1((uint64_t)v1);
        OUTLINED_FUNCTION_62();
        uint64_t v5 = v45;
        OUTLINED_FUNCTION_57_0(&dword_0, v8, (os_log_type_t)v3, "%s selectAppConfirmation: reprompt", v45);
        OUTLINED_FUNCTION_17_0(v62);
        OUTLINED_FUNCTION_0_2(v62);
        OUTLINED_FUNCTION_0_2((uint64_t)v45);
      }

      else
      {

        OUTLINED_FUNCTION_31_1((uint64_t)v1);
      }

      OUTLINED_FUNCTION_102_7();
      static AppConfirmationResponse.confirm(app:)(v43);
      OUTLINED_FUNCTION_154_6();
    }

    else
    {
      OUTLINED_FUNCTION_11_18((uint64_t)v1);
      OUTLINED_FUNCTION_91_13();
      os_log_type_t v51 = OUTLINED_FUNCTION_73_23();
      if (OUTLINED_FUNCTION_33_10(v51))
      {
        uint64_t v52 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v63 = OUTLINED_FUNCTION_7_0(32LL);
        v69[0] = v63;
        OUTLINED_FUNCTION_241_1(4.8149e-34);
        OUTLINED_FUNCTION_129_9();
        uint64_t v67 = 0LL;
        v68[0] = v53;
        OUTLINED_FUNCTION_20_14();
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_17_55();
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_129();
        uint64_t v67 = OUTLINED_FUNCTION_10_3(v67, v54, v69);
        OUTLINED_FUNCTION_93_11((uint64_t)&v67, (uint64_t)v68, v58);
        OUTLINED_FUNCTION_31_1((uint64_t)v1);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_57_0( &dword_0,  v8,  (os_log_type_t)v2,  "%s selectAppConfirmation: no app to reprompt with, cancelling",  v52);
        OUTLINED_FUNCTION_17_0(v63);
        OUTLINED_FUNCTION_0_2(v63);
        OUTLINED_FUNCTION_0_2((uint64_t)v52);
      }

      else
      {

        OUTLINED_FUNCTION_31_1((uint64_t)v1);
      }

      OUTLINED_FUNCTION_102_7();
      return static AppConfirmationResponse.cancel()();
    }
  }

  return (uint64_t)v5;
}

void PhoneAppResolutionOnDeviceFlowStrategy.selectAppDisambiguation(by:)()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = (os_log_s *)(v5 - v4);
  uint64_t v7 = v0[29];
  __swift_project_boxed_opaque_existential_1(v0 + 25, v0[28]);
  uint64_t v8 = OUTLINED_FUNCTION_109_9(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 208));
  (*(void (**)(uint64_t))(*(void *)v8 + 88LL))(v8);
  OUTLINED_FUNCTION_38_1();
  uint64_t v9 = OUTLINED_FUNCTION_1_35();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1LL, v9);
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v6,  &demangling cache variable for type metadata for AppResolverResult?);
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v6 = *(os_log_s **)(v1 + 336);
    OUTLINED_FUNCTION_5_0((void *)(v1 + 304));
    uint64_t v11 = OUTLINED_FUNCTION_98_0();
    uint64_t v13 = v12(v11);
    swift_release(v13);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v14 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_11_18(v1);
  OUTLINED_FUNCTION_11_18((uint64_t)v3);
  OUTLINED_FUNCTION_62_18();
  os_log_type_t v15 = OUTLINED_FUNCTION_234();
  if (OUTLINED_FUNCTION_12_59(v15))
  {
    uint64_t v16 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v40 = OUTLINED_FUNCTION_7_0(64LL);
    *(void *)&v44[0] = v40;
    OUTLINED_FUNCTION_243_1(4.8151e-34);
    uint64_t v39 = v17;
    *(void *)&v45[0] = 0LL;
    *((void *)&v45[0] + 1) = 0xE000000000000000LL;
    OUTLINED_FUNCTION_76_4();
    OUTLINED_FUNCTION_6_1();
    uint64_t v18 = OUTLINED_FUNCTION_272_2();
    OUTLINED_FUNCTION_238_1(v18, v19);
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_50();
    uint64_t v21 = OUTLINED_FUNCTION_10_3(0LL, v20, (uint64_t *)v44);
    uint64_t v22 = OUTLINED_FUNCTION_22_31(v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, v23, v39);
    OUTLINED_FUNCTION_31_1(v1);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v16 + 12) = 2080;
    *(void *)&v45[0] = App.appIdentifier.getter();
    *((void *)&v45[0] + 1) = v24;
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    uint64_t v26 = String.init<A>(describing:)(v45, v25);
    *(void *)&v45[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, (uint64_t *)v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, (char *)v45 + 8, v16 + 14);
    OUTLINED_FUNCTION_31_1((uint64_t)v3);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_33_6( &dword_0,  v6,  (os_log_type_t)v7,  "%s selectAppDisambiguation: user selected app: '%s'",  (uint8_t *)v16);
    OUTLINED_FUNCTION_42_2(v40);
    OUTLINED_FUNCTION_0_2(v40);
    OUTLINED_FUNCTION_0_2(v16);
  }

  else
  {

    OUTLINED_FUNCTION_31_1((uint64_t)v3);
    OUTLINED_FUNCTION_31_1(v1);
  }

  PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)((uint64_t)v3, (uint64_t)v43);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v43,  (uint64_t)v44,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v44[0])
  {
    v45[0] = v44[0];
    v45[1] = v44[1];
    __int128 v46 = v44[2];
    OUTLINED_FUNCTION_68_23();
    static AppDisambiguationResponse.select(app:)(*(void *)&v45[0]);
    OUTLINED_FUNCTION_154_6();
    uint64_t v47 = *((void *)&v45[0] + 1);
    uint64_t v28 = OUTLINED_FUNCTION_106_8();
    OUTLINED_FUNCTION_234_1((uint64_t)v28, v29, &demangling cache variable for type metadata for String?);
    OUTLINED_FUNCTION_13_11();
    v48[2] = *((void *)&v46 + 1);
    OUTLINED_FUNCTION_44_28();
  }

  else
  {
    OUTLINED_FUNCTION_11_18(v1);
    OUTLINED_FUNCTION_62_18();
    os_log_type_t v30 = OUTLINED_FUNCTION_15_16();
    if (OUTLINED_FUNCTION_33_10(v30))
    {
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v42 = OUTLINED_FUNCTION_7_0(32LL);
      v48[0] = v42;
      OUTLINED_FUNCTION_190_1(4.8149e-34);
      uint64_t v41 = v32;
      OUTLINED_FUNCTION_129_9();
      *(void *)&v45[0] = 0LL;
      *((void *)&v45[0] + 1) = v33;
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_17_55();
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_129();
      uint64_t v35 = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v45[0], v34, v48);
      uint64_t v36 = OUTLINED_FUNCTION_22_31(v35);
      OUTLINED_FUNCTION_93_11(v36, v37, v41);
      OUTLINED_FUNCTION_31_1(v1);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v3, (os_log_type_t)v6, "%s selectAppDisambiguation: reprompt", v31);
      OUTLINED_FUNCTION_17_0(v42);
      OUTLINED_FUNCTION_0_2(v42);
      OUTLINED_FUNCTION_0_2((uint64_t)v31);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v1);
    }

    OUTLINED_FUNCTION_68_23();
    uint64_t v38 = OUTLINED_FUNCTION_48_0();
    static AppDisambiguationResponse.disambiguate(apps:)(v38);
    OUTLINED_FUNCTION_34_0();
  }

  OUTLINED_FUNCTION_7_5();
}

void PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v7 = *(void *)(v2 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), v6);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 200), *(void *)(v2 + 224));
  OUTLINED_FUNCTION_85();
  (*(void (**)(void *__return_ptr, uint64_t, __int128 *, void, uint64_t, uint64_t))(v7 + 16))( v94,  a1,  &v98,  *(unsigned __int8 *)(v2 + 344),  v6,  v7);
  __swift_destroy_boxed_opaque_existential_1(&v98);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v94,  (uint64_t)&v95,  &demangling cache variable for type metadata for AnnotatedApp?);
  uint64_t v8 = v95;
  if ((void)v95)
  {
    uint64_t v86 = (void *)(v2 + 200);
    __int128 v87 = v96;
    __int128 v98 = v95;
    __int128 v99 = v96;
    __int128 v100 = v97;
    uint64_t v9 = *((void *)&v95 + 1);
    uint64_t v10 = v97;
    uint64_t v11 = *((void *)&v97 + 1);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v12 = OUTLINED_FUNCTION_15_1();
    uint64_t v13 = (void *)__swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    uint64_t v101 = *((void *)&v98 + 1);
    OUTLINED_FUNCTION_186_3((uint64_t)&v99, v14, &demangling cache variable for type metadata for String?);
    uint64_t v102 = *((void *)&v100 + 1);
    OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_236_2();
    OUTLINED_FUNCTION_130_3();
    OUTLINED_FUNCTION_128_8();
    OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_236_2();
    OUTLINED_FUNCTION_130_3();
    os_log_type_t v15 = OUTLINED_FUNCTION_128_8();
    Logger.logObject.getter(v15);
    os_log_type_t v16 = OUTLINED_FUNCTION_6_0();
    int v17 = v16;
    if (os_log_type_enabled((os_log_t)v13, v16))
    {
      uint64_t v85 = v8;
      uint64_t v18 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v81 = OUTLINED_FUNCTION_7_0(96LL);
      uint64_t v89 = v81;
      uint64_t v90 = 0LL;
      *(_DWORD *)uint64_t v18 = 136315650;
      HIDWORD(v79) = v17;
      uint64_t v84 = v10;
      uint64_t v83 = v9;
      uint64_t v19 = *(void *)(v3 + 352);
      uint64_t v20 = *(void *)(v3 + 360);
      OUTLINED_FUNCTION_182_2();
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_175_3(v19, v20, 36LL, (void *)0x8000000000350160LL);
      OUTLINED_FUNCTION_87_0();
      uint64_t v90 = OUTLINED_FUNCTION_10_3(v90, v21, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v18 + 4, v18 + 12);
      OUTLINED_FUNCTION_31_1(v3);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v90 = a1;
      uint64_t v22 = OUTLINED_FUNCTION_46_5();
      OUTLINED_FUNCTION_163_5( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  v23,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v25 = v24;
      uint64_t v26 = v22;
      uint64_t v9 = v83;
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter(v26, v25);
      uint64_t v90 = OUTLINED_FUNCTION_162_6(v27, v28, v29, v30, v31, v32, v33, v34, (uint64_t)v13, v79, v81, v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v18 + 14, v18 + 22);
      OUTLINED_FUNCTION_31_1(a1);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v18 + 22) = 2080;
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_236_2();
      OUTLINED_FUNCTION_130_3();
      OUTLINED_FUNCTION_128_8();
      uint64_t v35 = AnnotatedApp.description.getter();
      OUTLINED_FUNCTION_77_0();
      OUTLINED_FUNCTION_106_8();
      OUTLINED_FUNCTION_13_11();
      OUTLINED_FUNCTION_44_28();
      uint64_t v36 = OUTLINED_FUNCTION_274_2();
      uint64_t v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v38);
      OUTLINED_FUNCTION_171_5((uint64_t)&v90, v39, v40, v18 + 32);
      OUTLINED_FUNCTION_77_0();
      uint64_t v10 = v84;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_106_8();
      OUTLINED_FUNCTION_13_11();
      OUTLINED_FUNCTION_44_28();
      OUTLINED_FUNCTION_77_0();
      OUTLINED_FUNCTION_106_8();
      OUTLINED_FUNCTION_13_11();
      OUTLINED_FUNCTION_44_28();
      uint64_t v41 = log;
      _os_log_impl(&dword_0, log, BYTE4(_8a), "%s for %s: %s", (uint8_t *)v18, 0x20u);
      uint64_t v50 = OUTLINED_FUNCTION_222_2(v42, v43, v44, v45, v46, v47, v48, v49, (uint64_t)log, _8a, v82);
      swift_arrayDestroy(v50, 3LL);
      OUTLINED_FUNCTION_0_2(v35);
      uint64_t v51 = v18;
      uint64_t v8 = v85;
      OUTLINED_FUNCTION_0_2(v51);
    }

    else
    {
      OUTLINED_FUNCTION_77_0();
      OUTLINED_FUNCTION_31_1(a1);
      OUTLINED_FUNCTION_31_1(v3);
      OUTLINED_FUNCTION_106_8();
      OUTLINED_FUNCTION_13_11();
      OUTLINED_FUNCTION_44_28();
      OUTLINED_FUNCTION_77_0();
      OUTLINED_FUNCTION_106_8();
      OUTLINED_FUNCTION_13_11();
      OUTLINED_FUNCTION_44_28();
    }

    OUTLINED_FUNCTION_5_0(v86);
    uint64_t v73 = OUTLINED_FUNCTION_119();
    v74(v73);
    uint64_t v75 = v92;
    uint64_t v76 = v93;
    __swift_project_boxed_opaque_existential_1(&v90, v92);
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v76 + 8))(&v98, v75, v76);
    __swift_destroy_boxed_opaque_existential_1(&v90);
    __int128 v77 = v87;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v52 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
    uint64_t v53 = OUTLINED_FUNCTION_80_12();
    OUTLINED_FUNCTION_11_18(v53);
    uint64_t v54 = OUTLINED_FUNCTION_11_18(a1);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_12_59(v56))
    {
      uint64_t v57 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v88 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v90 = v88;
      *(_DWORD *)uint64_t v57 = 136315394;
      uint64_t v59 = *(void *)(v2 + 352);
      uint64_t v58 = *(void *)(v2 + 360);
      *(void *)&__int128 v98 = 0LL;
      *((void *)&v98 + 1) = 0xE000000000000000LL;
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_175_3(v59, v58, 36LL, (void *)0x8000000000350160LL);
      OUTLINED_FUNCTION_70_2();
      uint64_t v61 = OUTLINED_FUNCTION_10_3(v98, v60, &v90);
      uint64_t v62 = OUTLINED_FUNCTION_22_31(v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v62, v63, v57 + 4, v64);
      OUTLINED_FUNCTION_31_1(v2);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_196_5();
      *(void *)&__int128 v98 = a1;
      uint64_t v65 = OUTLINED_FUNCTION_46_5();
      OUTLINED_FUNCTION_163_5( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  v66,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v68 = v67;
      uint64_t v69 = v65;
      uint64_t v8 = 0LL;
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter(v69, v68);
      *(void *)&__int128 v98 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, &v90);
      OUTLINED_FUNCTION_161_4((uint64_t)&v98, (uint64_t)&v98 + 8, v72, (uint64_t)(v57 + 22));
      OUTLINED_FUNCTION_31_1(a1);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_33_6( &dword_0,  v55,  (os_log_type_t)v7,  "%s AnnotatedAppFinder didn't find on-device record for %s",  v57);
      OUTLINED_FUNCTION_42_2(v88);
      OUTLINED_FUNCTION_0_2(v88);
      OUTLINED_FUNCTION_0_2((uint64_t)v57);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(a1);
      OUTLINED_FUNCTION_31_1(v2);
    }

    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    uint64_t v11 = 0LL;
    __int128 v77 = 0uLL;
  }

  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v9;
  *(_OWORD *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v77;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v11;
}

#error "2474C8: call analysis failed (funcsize=110)"
uint64_t PhoneAppResolutionOnDeviceFlowStrategy.shouldSmartAppSelectOrForceAppDisambiguate(phoneCallNLIntent:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v1 + 208) = v0;
  OUTLINED_FUNCTION_28_17(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.shouldSmartAppSelectOrForceAppDisambiguate(phoneCallNLIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28)
{
  a27 = v30;
  a28 = v31;
  a26 = v29;
  uint64_t v32 = OUTLINED_FUNCTION_11_18(v29[6]);
  Logger.logObject.getter(v32);
  os_log_type_t v33 = OUTLINED_FUNCTION_73_23();
  if (os_log_type_enabled(v28, v33))
  {
    uint64_t v47 = v29[17];
    uint64_t v48 = v29[21];
    uint64_t v34 = (void *)v29[6];
    uint64_t v35 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
    a15 = v46;
    a16 = 0LL;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v45 = v28;
    uint64_t v37 = v34[44];
    uint64_t v36 = v34[45];
    uint64_t v38 = v34[46];
    a17 = 0xE000000000000000LL;
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_189_2(v37, v36, v38);
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_39();
    v29[2] = OUTLINED_FUNCTION_10_3(a16, v39, &a15);
    OUTLINED_FUNCTION_33_35((uint64_t)(v29 + 2), (uint64_t)(v29 + 3), (uint64_t)(v35 + 4));
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1((uint64_t)v34);
    OUTLINED_FUNCTION_57_0( &dword_0,  v45,  v33,  "%s shouldSmartAppSelectOrForceAppDisambiguate: Couldn't get intent to find eligible apps. Skipping Smart App Selection ..",  v35);
    OUTLINED_FUNCTION_17_0(v46);
    OUTLINED_FUNCTION_0_2(v46);
    OUTLINED_FUNCTION_0_2((uint64_t)v35);
    swift_release(v47);
    swift_errorRelease(v48);
  }

  else
  {
    uint64_t v40 = v29[21];
    uint64_t v41 = v29[6];
    swift_release(v29[17]);
    OUTLINED_FUNCTION_31_1(v41);
    swift_errorRelease(v40);
  }

  OUTLINED_FUNCTION_113_9();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  uint64_t v42 = OUTLINED_FUNCTION_263_1();
  return OUTLINED_FUNCTION_8_35(v42, v43);
}

void PhoneAppResolutionOnDeviceFlowStrategy.buildUpInputIntent(phoneCallNLIntent:sharedGlobals:app:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  a25 = v29;
  a26 = v30;
  uint64_t v31 = v26;
  static PhoneCallRequestSupportPolicy.getSiriKitIntent(phoneCallNLIntent:sharedGlobals:app:intentTypeName:)( v32,  (void *)(v26 + 200),  v33,  PhoneCallFlowDelegatePlugin_PhoneCallIntentClassNames_unknownDefault);
  if (!v34) {
    goto LABEL_10;
  }
  uint64_t v35 = v34;
  uint64_t ObjectType = swift_getObjectType(v34);
  uint64_t v37 = dynamic_cast_existential_1_conditional( (uint64_t)v35,  ObjectType,  (uint64_t)&protocol descriptor for CallingIntent);
  if (!v37)
  {

LABEL_10:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v55 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v55, (uint64_t)static Logger.siriPhone);
    uint64_t v56 = OUTLINED_FUNCTION_11_18(v31);
    Logger.logObject.getter(v56);
    os_log_type_t v57 = OUTLINED_FUNCTION_15_16();
    if (OUTLINED_FUNCTION_33_10(v57))
    {
      uint64_t v58 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v64 = OUTLINED_FUNCTION_7_0(32LL);
      a12 = 0LL;
      OUTLINED_FUNCTION_190_1(4.8149e-34);
      uint64_t v63 = v59;
      OUTLINED_FUNCTION_129_9();
      a13 = v61;
      a14 = v60;
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_17_55();
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_129();
      a12 = OUTLINED_FUNCTION_10_3(a12, v62, &a14);
      OUTLINED_FUNCTION_93_11((uint64_t)&a12, (uint64_t)&a13, v63);
      OUTLINED_FUNCTION_31_1(v31);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v27, v28, "%s buildUpInputIntent, get nil INIntent", v58);
      OUTLINED_FUNCTION_17_0(v64);
      OUTLINED_FUNCTION_0_2(v64);
      OUTLINED_FUNCTION_0_2((uint64_t)v58);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v31);
    }

    goto LABEL_19;
  }

  uint64_t v39 = v38;
  uint64_t v40 = swift_getObjectType(v37);
  uint64_t v41 = *(void *)(*(void *)(v39 + 8) + 8LL);
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41);
  if (v42)
  {
    uint64_t v43 = v42;
    if ((unint64_t)v42 >> 62)
    {
      if (v42 >= 0) {
        v42 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (!_CocoaArrayWrapper.endIndex.getter(v42)) {
        goto LABEL_18;
      }
    }

    else if (!*(void *)((char *)&dword_10 + (v42 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }

    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v43 & 0xC000000000000001LL) == 0, v43);
    if ((v43 & 0xC000000000000001LL) != 0) {
      id v44 = (id)OUTLINED_FUNCTION_38_3();
    }
    else {
      id v44 = *(id *)(v43 + 32);
    }
    uint64_t v45 = v44;
    OUTLINED_FUNCTION_62();
    Swift::String v46 = INPerson.asBase64()();
    outlined bridged method (mbnn) of @objc INPerson.contactIdentifier.setter( v46._countAndFlagsBits,  (uint64_t)v46._object,  v45);
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v48 = OUTLINED_FUNCTION_8_2(v47, 40LL);
    *(_OWORD *)(v48 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
    *(void *)(v48 + 32) = v45;
    OUTLINED_FUNCTION_5_64(v48, v49, v50, v51);
    uint64_t v52 = a12;
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
    id v54 = v45;
    v53(v52, v40, v41);

    goto LABEL_18;
  }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:));
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:)()
{
  unint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = (os_log_s *)(v1 >> 62);
  if (v1 >> 62) {
    goto LABEL_50;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    if (v3 < 2)
    {
      if (v3 != 1)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v51 = *(void *)(v0 + 112);
        uint64_t v52 = OUTLINED_FUNCTION_15_1();
        uint64_t v53 = (os_log_s *)__swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
        OUTLINED_FUNCTION_11_18(v51);
        OUTLINED_FUNCTION_165_2();
        os_log_type_t v54 = OUTLINED_FUNCTION_59_8();
        BOOL v55 = OUTLINED_FUNCTION_10(v54);
        uint64_t v56 = *(void **)(v0 + 112);
        if (v55)
        {
          os_log_type_t v57 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v134 = OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v140 = v134;
          uint64_t v141 = 0LL;
          *(_DWORD *)os_log_type_t v57 = 136315138;
          uint64_t v127 = v57 + 4;
          uint64_t v131 = v57;
          uint64_t v59 = v56[44];
          uint64_t v58 = v56[45];
          uint64_t v60 = v56[46];
          OUTLINED_FUNCTION_182_2();
          OUTLINED_FUNCTION_124();
          OUTLINED_FUNCTION_76_4();
          OUTLINED_FUNCTION_57_22(v59, v58, v60);
          OUTLINED_FUNCTION_87_0();
          OUTLINED_FUNCTION_4_1();
          uint64_t v62 = OUTLINED_FUNCTION_10_3(v141, v61, &v140);
          uint64_t v63 = OUTLINED_FUNCTION_206_2(v62);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v63, v64, v127);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_31_1((uint64_t)v56);
          OUTLINED_FUNCTION_57_0( &dword_0,  v53,  (os_log_type_t)v51,  "%s executeSmartAppSelect: Couldn't find an app. Skipping Smart enough App Selection ..",  v131);
          OUTLINED_FUNCTION_17_0(v134);
          OUTLINED_FUNCTION_0_2(v134);
          OUTLINED_FUNCTION_0_2((uint64_t)v131);
        }

        else
        {
          OUTLINED_FUNCTION_31_1(*(void *)(v0 + 112));
        }

        goto LABEL_48;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v23 = *(void *)(v0 + 104);
      uint64_t v24 = *(os_log_s **)(v0 + 112);
      uint64_t v25 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_11(v23);
      OUTLINED_FUNCTION_11_18((uint64_t)v24);
      OUTLINED_FUNCTION_91_13();
      os_log_type_t v26 = OUTLINED_FUNCTION_6_0();
      BOOL v27 = OUTLINED_FUNCTION_35_12(v26);
      uint64_t v28 = *(void *)(v0 + 104);
      uint64_t v29 = *(void **)(v0 + 112);
      if (v27)
      {
        os_log_type_t v130 = v26;
        uint64_t v30 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v126 = OUTLINED_FUNCTION_7_0(64LL);
        uint64_t v140 = v126;
        uint64_t v141 = 0LL;
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v32 = v29[44];
        uint64_t v31 = v29[45];
        uint64_t v33 = v29[46];
        uint64_t v34 = (void *)v29[47];
        OUTLINED_FUNCTION_182_2();
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_20_14();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v32, v31, v33, v34);
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_129();
        *(void *)(v0 + 32) = OUTLINED_FUNCTION_10_3(v141, v35, &v140);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v30 + 4);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_31_1((uint64_t)v29);
        *(_WORD *)(v30 + 12) = 2080;
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v1 & 0xC000000000000001LL) == 0, v28);
        uint64_t v36 = *(void *)(v0 + 104);
        if ((v1 & 0xC000000000000001LL) != 0)
        {
          OUTLINED_FUNCTION_5_49(0LL);
          uint64_t v36 = *(void *)(v0 + 104);
        }

        else
        {
          UsoEntity_common_Person.usoPerson.getter();
        }

        uint64_t v37 = App.appIdentifier.getter();
        uint64_t v39 = v38;
        OUTLINED_FUNCTION_38_1();
        *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v37;
        *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v39;
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
        uint64_t v41 = String.init<A>(describing:)(v0 + 16, v40);
        *(void *)(v0 + 48) = OUTLINED_FUNCTION_162_6( v41,  v42,  v43,  v44,  v45,  v46,  v47,  v48,  v119,  v0 + 40,  v30 + 4,  v0 + 32);
        OUTLINED_FUNCTION_161_4(v0 + 48, v0 + 56, v49, v30 + 22);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_7_4(v36);
        OUTLINED_FUNCTION_33_6( &dword_0,  v24,  v130,  "%s executeSmartAppSelect: Found a single app '%s'. Skipping Smart enough App Selection ..",  (uint8_t *)v30);
        OUTLINED_FUNCTION_42_2(v126);
        OUTLINED_FUNCTION_0_2(v126);
        OUTLINED_FUNCTION_0_2(v30);
      }

      else
      {
        OUTLINED_FUNCTION_31_1(*(void *)(v0 + 112));
        OUTLINED_FUNCTION_7_4(v28);
      }

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 144));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v1 = *(void **)(v0 + 128);
  swift_release(*(void *)(v0 + 120));

  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_18_53(v2, v4, v5, v3);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelectAction(phoneCallNLIntent:recommendation:)( uint64_t a1, uint64_t a2)
{
  v3[29] = a2;
  v3[30] = v2;
  uint64_t v4 = OUTLINED_FUNCTION_1_35();
  v3[31] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[32] = v5;
  v3[33] = OUTLINED_FUNCTION_23(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelectAction(phoneCallNLIntent:recommendation:)()
{
  unint64_t v1 = v0;
  uint64_t v3 = (os_log_s *)(v0 + 29);
  uint64_t v2 = v0[29];
  uint64_t v4 = v0 + 25;
  uint64_t v6 = v0[32];
  uint64_t v5 = (uint64_t *)*((void *)v3 + 4);
  (*(void (**)(uint64_t *, uint64_t, void))(v6 + 16))(v5, v2, *((void *)v3 + 2));
  uint64_t v7 = OUTLINED_FUNCTION_146_1();
  int v9 = v8(v7);
  if (v9 != enum case for AppResolverResult.resolved(_:))
  {
    if (v9 != enum case for AppResolverResult.needsConfirmation(_:))
    {
      uint64_t v68 = (os_log_s *)((char *)v3 - 104);
      if (v9 == enum case for AppResolverResult.needsDisambiguation(_:))
      {
        uint64_t v210 = (void *)((char *)v3 - 72);
        OUTLINED_FUNCTION_152_7();
        uint64_t v69 = *v5;
        OUTLINED_FUNCTION_29_3();
        uint64_t v70 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySSG_SSs5NeverOTg5242_s27PhoneCallFlowDelegatePlugin0a21AppResolutionOnDeviceC8StrategyC012executeSmartF12SelectAction014_2180D48ACD6B0Q17EE181017F885BCBA5LL05phoneB8NLIntent14recommendation07SiriKitC00fgN0CSgAA0abV0_p_0X9Inference0F14ResolverResultOtYaFS2SXEfU1_0fghI6Plugin0fklmnhP0CTf1cn_n( v69,  v6);
        OUTLINED_FUNCTION_62();
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v200 = (void *)((char *)v3 - 88);
        uint64_t v71 = v1[30];
        uint64_t v72 = OUTLINED_FUNCTION_15_1();
        __swift_project_value_buffer(v72, (uint64_t)static Logger.siriPhone);
        OUTLINED_FUNCTION_11_18(v71);
        OUTLINED_FUNCTION_11((uint64_t)v70);
        OUTLINED_FUNCTION_138_6();
        os_log_type_t v73 = OUTLINED_FUNCTION_64_1();
        int v74 = v73;
        BOOL v75 = os_log_type_enabled((os_log_t)v6, v73);
        uint64_t v76 = v1[30];
        if (v75)
        {
          uint64_t v189 = (uint64_t)v3 - 64;
          uint64_t v77 = OUTLINED_FUNCTION_7_0(22LL);
          uint64_t v192 = OUTLINED_FUNCTION_7_0(64LL);
          uint64_t v216 = v192;
          uint64_t v217 = 0LL;
          *(_DWORD *)uint64_t v77 = 136315394;
          uint64_t v188 = v77 + 4;
          uint64_t v193 = 0LL;
          uint64_t v191 = (void *)v6;
          uint64_t v78 = v1;
          LODWORD(v190) = v74;
          uint64_t v79 = *(void *)(v76 + 368);
          unint64_t v218 = 0xE000000000000000LL;
          OUTLINED_FUNCTION_124();
          OUTLINED_FUNCTION_6_1();
          uint64_t v80 = OUTLINED_FUNCTION_98_0();
          uint64_t v81 = v79;
          unint64_t v1 = v78;
          OUTLINED_FUNCTION_57_22(v80, v82, v81);
          OUTLINED_FUNCTION_50();
          swift_bridgeObjectRelease();
          uint64_t v84 = OUTLINED_FUNCTION_10_3(v217, v83, &v216);
          uint64_t v85 = OUTLINED_FUNCTION_148_7(v84, v210);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v85, (char *)v3 - 64, v77 + 4);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_31_1(v76);
          *(_WORD *)(v77 + 12) = 2080;
          uint64_t v86 = OUTLINED_FUNCTION_36_1();
          Array.description.getter(v86, &type metadata for String);
          OUTLINED_FUNCTION_129();
          uint64_t v87 = OUTLINED_FUNCTION_119();
          uint64_t v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v87, v88, v89);
          uint64_t v91 = OUTLINED_FUNCTION_206_2(v90);
          OUTLINED_FUNCTION_14_0((uint64_t)v91, v92, v93, v94);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_7_4((uint64_t)v70);
          OUTLINED_FUNCTION_33_6( &dword_0,  (os_log_s *)v6,  (os_log_type_t)v74,  "%s executeSmartAppSelect: AppSelection recommends to disambiguate apps: '%s'.",  (uint8_t *)v77);
          OUTLINED_FUNCTION_42_2(v192);
          OUTLINED_FUNCTION_0_2(v192);
          OUTLINED_FUNCTION_0_2(v77);
        }

        else
        {
          OUTLINED_FUNCTION_31_1(v1[30]);
          OUTLINED_FUNCTION_7_4((uint64_t)v70);
        }

        uint64_t v137 = v1[30];
        uint64_t v138 = *(os_log_s **)(v137 + 16);
        OUTLINED_FUNCTION_124();
        unint64_t v139 = OUTLINED_FUNCTION_6_3();
        unint64_t v140 = (unint64_t)specialized _ArrayProtocol.filter(_:)(v139, v70);
        OUTLINED_FUNCTION_11_18(v137);
        OUTLINED_FUNCTION_11(v140);
        OUTLINED_FUNCTION_138_6();
        os_log_type_t v141 = OUTLINED_FUNCTION_6_0();
        BOOL v142 = OUTLINED_FUNCTION_29_4(v141);
        uint64_t v215 = v1;
        uint64_t v143 = (void *)v1[30];
        if (v142)
        {
          uint64_t v190 = (void *)((char *)v3 - 80);
          int v205 = v70;
          uint64_t v144 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
          uint64_t v193 = OUTLINED_FUNCTION_7_0(64LL);
          uint64_t v216 = v193;
          uint64_t v217 = 0LL;
          OUTLINED_FUNCTION_246_0(4.8151e-34);
          uint64_t v145 = v143[44];
          uint64_t v146 = v143[45];
          uint64_t v147 = v143[46];
          unint64_t v218 = 0xE000000000000000LL;
          OUTLINED_FUNCTION_128();
          OUTLINED_FUNCTION_36();
          uint64_t v191 = v138;
          OUTLINED_FUNCTION_26_49(v145, v146, v147);
          OUTLINED_FUNCTION_70_2();
          swift_bridgeObjectRelease();
          uint64_t v149 = OUTLINED_FUNCTION_10_3(v217, v148, &v216);
          uint64_t v150 = OUTLINED_FUNCTION_148_7(v149, v200);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v150, (char *)v3 - 80, v189);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_31_1((uint64_t)v143);
          OUTLINED_FUNCTION_195_2();
          uint64_t v151 = OUTLINED_FUNCTION_46_5();
          uint64_t v152 = OUTLINED_FUNCTION_48_0();
          uint64_t v153 = Array.description.getter(v152, v151);
          unint64_t v155 = v154;
          OUTLINED_FUNCTION_34_0();
          *((void *)v3 - 10) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v153, v155, &v216);
          OUTLINED_FUNCTION_14_0((uint64_t)v3 - 80, (uint64_t)v210, v156, (uint64_t)(v144 + 22));
          OUTLINED_FUNCTION_13_1();
          OUTLINED_FUNCTION_7_4(v140);
          OUTLINED_FUNCTION_33_6( &dword_0,  v138,  (os_log_type_t)v192,  "%s executeSmartAppSelect: disambiguateApps after filter out: %s",  v144);
          OUTLINED_FUNCTION_42_2(v193);
          OUTLINED_FUNCTION_0_2(v193);
          uint64_t v157 = (uint64_t)v144;
          uint64_t v70 = v205;
          OUTLINED_FUNCTION_0_2(v157);
        }

        else
        {
          OUTLINED_FUNCTION_31_1((uint64_t)v143);
          OUTLINED_FUNCTION_7_4(v140);
        }

        unint64_t v1 = v215;
        if (v140 >> 62)
        {
          OUTLINED_FUNCTION_48_0();
          uint64_t v174 = OUTLINED_FUNCTION_61_1();
          OUTLINED_FUNCTION_34_0();
        }

        else
        {
          uint64_t v174 = *(void *)((char *)&dword_10 + (v140 & 0xFFFFFFFFFFFFF8LL));
        }

        uint64_t v175 = v70[2];
        OUTLINED_FUNCTION_4_1();
        uint64_t v176 = v215[30];
        if (v174 == v175)
        {
          *(void *)(v137 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = (*(uint64_t (**)(unint64_t))(**(void **)(v176 + 296) + 272LL))(v140);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_103_8();
          uint64_t v177 = OUTLINED_FUNCTION_80_12();
          uint64_t v63 = static AppResolutionAction.disambiguateAfterAuthorizationChecks(apps:)(v177);
          OUTLINED_FUNCTION_34_0();
          goto LABEL_63;
        }

        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_11_18(v176);
        OUTLINED_FUNCTION_138_6();
        os_log_type_t v178 = OUTLINED_FUNCTION_73_23();
        BOOL v179 = OUTLINED_FUNCTION_33_10(v178);
        uint64_t v180 = v215[30];
        if (v179)
        {
          uint64_t v207 = (void *)((char *)v3 - 96);
          uint64_t v181 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v214 = OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v216 = v214;
          uint64_t v217 = 0LL;
          *(_DWORD *)uint64_t v181 = 136315138;
          unint64_t v218 = 0xE000000000000000LL;
          OUTLINED_FUNCTION_128();
          OUTLINED_FUNCTION_76_4();
          uint64_t v182 = OUTLINED_FUNCTION_283_1();
          OUTLINED_FUNCTION_26_49(v182, v183, v184);
          OUTLINED_FUNCTION_87_0();
          OUTLINED_FUNCTION_23_5();
          uint64_t v186 = OUTLINED_FUNCTION_10_3(v217, v185, &v216);
          OUTLINED_FUNCTION_89_14( v186,  (uint64_t)v200,  v207,  v188,  v189,  (uint64_t)v190,  (uint64_t)v191,  v192,  v193,  (uint64_t)(v181 + 4));
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_31_1(v180);
          OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v140,  (os_log_type_t)v176,  "%s executeSmartAppSelect: Could not find all apps to disambiguate",  v181);
          OUTLINED_FUNCTION_17_0(v214);
          OUTLINED_FUNCTION_0_2(v214);
          OUTLINED_FUNCTION_0_2((uint64_t)v181);
        }

        else
        {
          OUTLINED_FUNCTION_31_1(v180);
        }

LABEL_62:
        uint64_t v63 = 0LL;
        unint64_t v1 = v215;
        goto LABEL_63;
      }

      uint64_t v106 = (void *)((char *)v3 - 112);
      if (v9 != enum case for AppResolverResult.noMatchFound(_:))
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v158 = v1[30];
        uint64_t v159 = OUTLINED_FUNCTION_15_1();
        __swift_project_value_buffer(v159, (uint64_t)static Logger.siriPhone);
        uint64_t v160 = OUTLINED_FUNCTION_11_18(v158);
        Logger.logObject.getter(v160);
        uint64_t v161 = v1;
        os_log_type_t v162 = OUTLINED_FUNCTION_234();
        BOOL v163 = OUTLINED_FUNCTION_39_7((os_log_s *)((char *)v3 - 104));
        uint64_t v164 = (void *)v161[30];
        if (v163)
        {
          uint64_t v206 = (void *)((char *)v3 - 120);
          uint64_t v165 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v213 = OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v216 = v213;
          uint64_t v217 = 0LL;
          *(_DWORD *)uint64_t v165 = 136315138;
          uint64_t v197 = (uint64_t)v106;
          uint64_t v167 = v164[44];
          uint64_t v166 = v164[45];
          uint64_t v169 = v164[46];
          unint64_t v168 = (void *)v164[47];
          unint64_t v218 = 0xE000000000000000LL;
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_48_0();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v167, v166, v169, v168);
          OUTLINED_FUNCTION_34_0();
          OUTLINED_FUNCTION_70_2();
          uint64_t v171 = OUTLINED_FUNCTION_10_3(v217, v170, &v216);
          uint64_t v172 = OUTLINED_FUNCTION_148_7(v171, v206);
          OUTLINED_FUNCTION_135_6((uint64_t)v172, v197, v173);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_31_1((uint64_t)v164);
          OUTLINED_FUNCTION_57_0( &dword_0,  v68,  v162,  "%s executeSmartAppSelect: AppSelection returned an unknown value, defaulting",  v165);
          OUTLINED_FUNCTION_17_0(v213);
          OUTLINED_FUNCTION_0_2(v213);
          OUTLINED_FUNCTION_0_2((uint64_t)v165);
        }

        else
        {
          OUTLINED_FUNCTION_31_1(v161[30]);
        }

        unint64_t v1 = v161;
        (*(void (**)(uint64_t, uint64_t))(v161[32] + 8))(v161[33], v161[31]);
        goto LABEL_40;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v107 = v1[30];
      uint64_t v108 = OUTLINED_FUNCTION_15_1();
      os_log_type_t v109 = __swift_project_value_buffer(v108, (uint64_t)static Logger.siriPhone);
      uint64_t v110 = OUTLINED_FUNCTION_11_18(v107);
      Logger.logObject.getter(v110);
      os_log_type_t v111 = OUTLINED_FUNCTION_41();
      BOOL v112 = OUTLINED_FUNCTION_10(v111);
      uint64_t v113 = (void *)v1[30];
      if (v112)
      {
        OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v204 = OUTLINED_FUNCTION_7_0(32LL);
        OUTLINED_FUNCTION_282_0(4.8149e-34);
        uint64_t v195 = v114;
        uint64_t v115 = v113[44];
        uint64_t v116 = v113[45];
        uint64_t v216 = v117;
        unint64_t v1 = (uint64_t *)v113[47];
        uint64_t v217 = 0LL;
        unint64_t v218 = 0xE000000000000000LL;
        OUTLINED_FUNCTION_20_14();
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_39_27(v115, v116);
        OUTLINED_FUNCTION_129();
        OUTLINED_FUNCTION_123_4();
        *((void *)v3 - 1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_10_3(0LL, v118, &v216);
        OUTLINED_FUNCTION_135_6((uint64_t)v3 - 112, (uint64_t)v3 - 104, v195);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_31_1((uint64_t)v113);
        OUTLINED_FUNCTION_57_0(&dword_0, v3, v109, "%s executeSmartAppSelect: AppSelection returned no app.", v198);
        OUTLINED_FUNCTION_17_0(v204);
        OUTLINED_FUNCTION_0_2(v204);
        uint64_t v119 = (uint64_t)v198;
LABEL_36:
        OUTLINED_FUNCTION_0_2(v119);
LABEL_39:

LABEL_40:
        uint64_t v63 = 0LL;
        goto LABEL_63;
      }

      uint64_t v136 = v1[30];
LABEL_38:
      OUTLINED_FUNCTION_31_1(v136);
      goto LABEL_39;
    }

    uint64_t v199 = (void *)((char *)v3 - 48);
    uint64_t v33 = (void *)v1[33];
    uint64_t v34 = v1[30];
    (*(void (**)(void *, uint64_t))(v1[32] + 96))(v33, v1[31]);
    uint64_t v35 = v33[1];
    uint64_t v36 = (*(uint64_t (**)(void, uint64_t))(**(void **)(v34 + 296) + 248LL))(*v33, v35);
    unint64_t v38 = v37;
    OUTLINED_FUNCTION_50();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v39 = v1[30];
    uint64_t v40 = OUTLINED_FUNCTION_15_1();
    uint64_t v41 = (os_log_s *)__swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_11_18(v39);
    uint64_t v42 = OUTLINED_FUNCTION_11(v38);
    uint64_t v43 = v41;
    Logger.logObject.getter(v42);
    os_log_type_t v44 = OUTLINED_FUNCTION_6_0();
    BOOL v45 = OUTLINED_FUNCTION_29_4(v44);
    uint64_t v46 = (void *)v1[30];
    uint64_t v203 = (void *)((char *)v3 - 56);
    if (v45)
    {
      uint64_t v190 = (void *)((char *)v3 - 40);
      uint64_t v47 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v193 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v216 = v193;
      uint64_t v217 = 0LL;
      *(_DWORD *)uint64_t v47 = 136315394;
      uint64_t v189 = v47 + 4;
      uint64_t v194 = (uint64_t)v41;
      uint64_t v48 = v36;
      LODWORD(v192) = v35;
      uint64_t v49 = v46[44];
      uint64_t v50 = v46[45];
      uint64_t v209 = (uint64_t)v4;
      uint64_t v51 = v1;
      uint64_t v52 = v46[46];
      unint64_t v218 = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_6_1();
      uint64_t v191 = v43;
      uint64_t v53 = v49;
      uint64_t v36 = v48;
      uint64_t v54 = v52;
      unint64_t v1 = v51;
      OUTLINED_FUNCTION_26_49(v53, v50, v54);
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_23_5();
      uint64_t v56 = OUTLINED_FUNCTION_10_3(v217, v55, &v216);
      os_log_type_t v57 = OUTLINED_FUNCTION_148_7(v56, v199);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v57, v190, v47 + 4);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1((uint64_t)v46);
      *(_WORD *)(v47 + 12) = 2080;
      OUTLINED_FUNCTION_36();
      void *v190 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v38, &v216);
      OUTLINED_FUNCTION_14_0((uint64_t)v190, v209, v58, v47 + 22);
      OUTLINED_FUNCTION_32_10(v38);
      OUTLINED_FUNCTION_33_6( &dword_0,  v43,  (os_log_type_t)v192,  "%s executeSmartAppSelect: AppSelection recommends to confirm app: '%s'.",  (uint8_t *)v47);
      OUTLINED_FUNCTION_42_2(v193);
      OUTLINED_FUNCTION_0_2(v193);
      OUTLINED_FUNCTION_0_2(v47);
    }

    else
    {
      OUTLINED_FUNCTION_31_1((uint64_t)v46);
      OUTLINED_FUNCTION_7_4(v38);
    }

    uint64_t v102 = v1[30];
    UsoEntity_common_Person.usoPerson.getter();
    OUTLINED_FUNCTION_36();
    uint64_t v103 = OUTLINED_FUNCTION_6_1();
    uint64_t v3 = (os_log_s *)specialized Sequence.first(where:)(v103, v102, v36, v38);
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_50();
    uint64_t v104 = v1[30];
    if (v3)
    {
      uint64_t v63 = *(void *)(v104 + 24);
      *(void *)(v104 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_103_8();
      uint64_t v105 = OUTLINED_FUNCTION_67();
      static AppResolutionAction.confirmAfterAuthorizationChecks(app:)(v105);
      uint64_t v67 = OUTLINED_FUNCTION_67();
      goto LABEL_25;
    }

    uint64_t v130 = OUTLINED_FUNCTION_11_18(v104);
    Logger.logObject.getter(v130);
    os_log_type_t v131 = OUTLINED_FUNCTION_59_8();
    BOOL v132 = OUTLINED_FUNCTION_50_12(0LL);
    uint64_t v97 = v1[30];
    if (v132)
    {
      uint64_t v98 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v212 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_219_2(4.8149e-34);
      uint64_t v216 = v133;
      unint64_t v1 = *(uint64_t **)(v97 + 376);
      uint64_t v217 = 0LL;
      unint64_t v218 = 0xE000000000000000LL;
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_17_55();
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_123_4();
      uint64_t v135 = OUTLINED_FUNCTION_10_3(v217, v134, &v216);
      OUTLINED_FUNCTION_89_14(v135, (uint64_t)v199, v203, v188, v189, (uint64_t)v190, (uint64_t)v191, v192, v193, v194);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1(v97);
      OUTLINED_FUNCTION_57_0(&dword_0, 0LL, v131, "%s executeSmartAppSelect: Could not find the app to confirm", v98);
      uint64_t v101 = v212;
      goto LABEL_35;
    }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeForceAppDisambiguate(phoneCallNLIntent:)(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  uint64_t v3 = type metadata accessor for Date(0LL);
  v2[20] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[21] = v4;
  v2[22] = OUTLINED_FUNCTION_23(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeForceAppDisambiguate(phoneCallNLIntent:)()
{
  uint64_t v1 = *(void *)(v0[19] + 296LL);
  v0[23] = v1;
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(*(void *)v1 + 168LL));
  v0[24] = v2;
  *uint64_t v2 = v0;
  v2[1] = PhoneAppResolutionOnDeviceFlowStrategy.executeForceAppDisambiguate(phoneCallNLIntent:);
  return v4(v0[18]);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  uint64_t v4 = v2[24];
  *uint64_t v5 = *v3;
  v2[25] = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    v2[26] = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v6, v7, v8);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_s *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_s *v20;
  uint64_t v21;
  os_log_type_t v22;
  BOOL v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_s *v45;
  int v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  BOOL v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  double v87;
  void (*v88)(uint64_t, void *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint8_t *v97;
  os_log_s *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v3 = v0[19];
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v0[26];
  swift_bridgeObjectRelease();
  uint64_t v4 = *(os_log_s **)(v3 + 16);
  if ((unint64_t)v4 >> 62)
  {
    OUTLINED_FUNCTION_48_0();
    uint64_t v5 = OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_34_0();
    uint64_t v4 = *(os_log_s **)(v3 + 16);
  }

  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + ((unint64_t)v4 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v5 < 2)
  {
    if ((unint64_t)v4 >> 62)
    {
      OUTLINED_FUNCTION_48_0();
      uint64_t v19 = OUTLINED_FUNCTION_61_1();
      OUTLINED_FUNCTION_34_0();
    }

    else
    {
      uint64_t v19 = *(void *)((char *)&dword_10 + ((unint64_t)v4 & 0xFFFFFFFFFFFFF8LL));
    }

    if (v19 != 1)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      os_log_type_t v57 = v0[19];
      uint64_t v58 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_11_18(v57);
      OUTLINED_FUNCTION_165_2();
      uint64_t v59 = OUTLINED_FUNCTION_73_23();
      uint64_t v60 = OUTLINED_FUNCTION_33_47(v59);
      uint64_t v13 = v0[19];
      if (v60)
      {
        uint64_t v61 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v102 = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v103 = v102;
        OUTLINED_FUNCTION_256_2(4.8149e-34);
        uint64_t v104 = 0LL;
        uint64_t v105 = 0xE000000000000000LL;
        OUTLINED_FUNCTION_124();
        OUTLINED_FUNCTION_76_4();
        OUTLINED_FUNCTION_48_27(v2);
        OUTLINED_FUNCTION_87_0();
        OUTLINED_FUNCTION_4_1();
        v0[14] = OUTLINED_FUNCTION_10_3(0LL, v62, &v103);
        OUTLINED_FUNCTION_79_15((uint64_t)(v0 + 14), (uint64_t)(v0 + 15), (uint64_t)v98);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_31_1(v13);
        os_log_type_t v17 = (uint64_t)v61;
        OUTLINED_FUNCTION_57_0( &dword_0,  v4,  (os_log_type_t)v3,  "%s executeForceAppDisambiguate: Couldn't find an app. Skipping Forced App disambiguation ..",  v61);
        BOOL v18 = v102;
        goto LABEL_26;
      }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.executeForceAppDisambiguate(phoneCallNLIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28)
{
  a27 = v29;
  a28 = v30;
  a26 = v28;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v31 = v28[19];
  uint64_t v32 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_11_18(v31);
  uint64_t v33 = (os_log_s *)OUTLINED_FUNCTION_165_2();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  BOOL v35 = OUTLINED_FUNCTION_50_12(v33);
  uint64_t v36 = v28[25];
  unint64_t v37 = (void *)v28[19];
  if (v35)
  {
    unint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
    *(_DWORD *)unint64_t v38 = 136315138;
    uint64_t v39 = v37[44];
    uint64_t v40 = v37[45];
    a15 = v46;
    uint64_t v41 = v37[46];
    a16 = 0LL;
    a17 = 0xE000000000000000LL;
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_76_4();
    OUTLINED_FUNCTION_189_2(v39, v40, v41);
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_39();
    v28[15] = OUTLINED_FUNCTION_10_3(a16, v42, &a15);
    OUTLINED_FUNCTION_33_35((uint64_t)(v28 + 15), (uint64_t)(v28 + 16), (uint64_t)(v38 + 4));
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1((uint64_t)v37);
    OUTLINED_FUNCTION_57_0( &dword_0,  v33,  v34,  "%s executeForceAppDisambiguate: Couldn't get intent to find eligible apps. Skipping Forced App disambiguation ..",  v38);
    OUTLINED_FUNCTION_17_0(v46);
    OUTLINED_FUNCTION_0_2(v46);
    OUTLINED_FUNCTION_0_2((uint64_t)v38);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(v28[19]);
  }

  swift_errorRelease(v36);

  swift_task_dealloc(v28[22]);
  uint64_t v43 = OUTLINED_FUNCTION_263_1();
  return OUTLINED_FUNCTION_8_35(v43, v44);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.tryAppQueryFromCallNotifications(phoneCallNLIntent:sharedGlobals:)( void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = a1[3];
  OUTLINED_FUNCTION_159_1(a1);
  OUTLINED_FUNCTION_34(v7, v8);
  if (!v6)
  {
    uint64_t v9 = a1[3];
    uint64_t v10 = OUTLINED_FUNCTION_11_52(a1);
    PhoneCallNLIntent.appName.getter(v10, v11, v12);
    OUTLINED_FUNCTION_34(v13, v14);
    if (!v9)
    {
      uint64_t v15 = a2[4];
      OUTLINED_FUNCTION_5_0(a2);
      uint64_t v16 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56));
      char v17 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 160LL))(v16);
      OUTLINED_FUNCTION_38_1();
      if ((v17 & 1) != 0)
      {
        uint64_t v18 = a2[4];
        OUTLINED_FUNCTION_5_0(a2);
        if (OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 112)))
        {
          uint64_t v19 = CurrentRequest.refId.getter();
          uint64_t v21 = v20;
          OUTLINED_FUNCTION_38_1();
          if (v21)
          {
            __swift_project_boxed_opaque_existential_1(a2, a2[3]);
            OUTLINED_FUNCTION_12_29();
            uint64_t v22 = v70;
            uint64_t v23 = v71;
            OUTLINED_FUNCTION_230_2(&v68);
            uint64_t v25 = v24(v19, v21, v22, v23);
            char v26 = v25;
            OUTLINED_FUNCTION_277_1(v25, v27, v28, v29, v30, v31, v32);
            if ((v26 & 1) == 0) {
              goto LABEL_8;
            }
            OUTLINED_FUNCTION_17_25(a2);
            OUTLINED_FUNCTION_12_29();
            OUTLINED_FUNCTION_17_25(&v68);
            OUTLINED_FUNCTION_12_29();
            uint64_t v33 = v67[4];
            OUTLINED_FUNCTION_17_25(v67);
            uint64_t v34 = OUTLINED_FUNCTION_109_9(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
            uint64_t v35 = __swift_destroy_boxed_opaque_existential_1(v67);
            OUTLINED_FUNCTION_277_1(v35, v36, v37, v38, v39, v40, v41);
            if (!v34)
            {
              uint64_t v43 = a2[4];
              __swift_project_boxed_opaque_existential_1(a2, a2[3]);
              OUTLINED_FUNCTION_12_29();
              uint64_t v44 = v70;
              uint64_t v45 = v71;
              __swift_project_boxed_opaque_existential_1(&v68, v70);
              (*(void (**)(uint64_t, os_log_s *, uint64_t, uint64_t))(v45 + 24))(v19, v21, v44, v45);
              uint64_t v47 = v46;
              uint64_t v48 = OUTLINED_FUNCTION_4_1();
              OUTLINED_FUNCTION_277_1(v48, v49, v50, v51, v52, v53, v54);
              if (one-time initialization token for siriPhone != -1) {
                swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
              }
              uint64_t v55 = OUTLINED_FUNCTION_15_1();
              __swift_project_value_buffer(v55, (uint64_t)static Logger.siriPhone);
              OUTLINED_FUNCTION_11_18(v3);
              uint64_t v56 = OUTLINED_FUNCTION_11(v47);
              Logger.logObject.getter(v56);
              os_log_type_t v57 = OUTLINED_FUNCTION_234();
              if (OUTLINED_FUNCTION_12_59(v57))
              {
                uint64_t v58 = OUTLINED_FUNCTION_7_0(22LL);
                uint64_t v66 = OUTLINED_FUNCTION_7_0(64LL);
                v67[0] = v66;
                *(_DWORD *)uint64_t v58 = 136315394;
                uint64_t v60 = *(void *)(v3 + 352);
                uint64_t v59 = *(void *)(v3 + 360);
                uint64_t v68 = 0LL;
                v69[0] = 0xE000000000000000LL;
                OUTLINED_FUNCTION_36();
                OUTLINED_FUNCTION_175_3(v60, v59, 66LL, (void *)0x8000000000350110LL);
                OUTLINED_FUNCTION_70_2();
                uint64_t v68 = OUTLINED_FUNCTION_10_3(v68, v61, v67);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v58 + 4, v58 + 12);
                OUTLINED_FUNCTION_31_1(v3);
                OUTLINED_FUNCTION_62();
                *(_WORD *)(v58 + 12) = 2080;
                OUTLINED_FUNCTION_6_1();
                uint64_t v62 = OUTLINED_FUNCTION_98_0();
                uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, v64);
                OUTLINED_FUNCTION_87_1((uint64_t)&v68, (uint64_t)v69, v65, v58 + 22);
                OUTLINED_FUNCTION_32_10(v47);
                OUTLINED_FUNCTION_33_6( &dword_0,  v21,  (os_log_type_t)v43,  "%s Resolving app %s from call notification",  (uint8_t *)v58);
                OUTLINED_FUNCTION_42_2(v66);
                OUTLINED_FUNCTION_0_2(v66);
                OUTLINED_FUNCTION_0_2(v58);
              }

              else
              {

                OUTLINED_FUNCTION_7_4(v47);
                OUTLINED_FUNCTION_31_1(v3);
              }
            }

            else
            {
LABEL_8:
              OUTLINED_FUNCTION_4_1();
            }
          }
        }
      }
    }
  }

  return OUTLINED_FUNCTION_98_0();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.makeAppQueryForIncomingCall(phoneCallNLIntent:sharedGlobals:)( uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  type metadata accessor for AppQuery.Builder();
  outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)v109);
  uint64_t v6 = AppQuery.Builder.__allocating_init(intent:)(v109);
  (*(void (**)(uint64_t))(*(void *)v6 + 160LL))(v6);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_38_1();
  if (!v8
    || (OUTLINED_FUNCTION_46_5(),
        OUTLINED_FUNCTION_8_1(),
        uint64_t v11 = OUTLINED_FUNCTION_140_8(),
        App.__allocating_init(appIdentifier:)(v11, v12),
        Swift::Bool v13 = App.isFirstParty()(),
        OUTLINED_FUNCTION_38_1(),
        v13))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    uint64_t v15 = (os_log_s *)__swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    Logger.logObject.getter(v15);
    os_log_type_t v16 = OUTLINED_FUNCTION_6_0();
    if (!OUTLINED_FUNCTION_39_7(v15)) {
      goto LABEL_20;
    }
    char v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v18 = OUTLINED_FUNCTION_7_0(32LL);
    v109[0] = v18;
    *(_DWORD *)char v17 = 136315138;
    uint64_t v106 = OUTLINED_FUNCTION_122_7(v18, 0x80000000003500D0LL, v109);
    OUTLINED_FUNCTION_93_11((uint64_t)&v106, (uint64_t)v107, (uint64_t)(v17 + 4));
    uint64_t v19 = "#PhoneAppResolutionOnDeviceFlowStrategy %s Not a 3P-specific incoming call request, use existing query";
    goto LABEL_19;
  }

  uint64_t v92 = v10;
  uint64_t v20 = one-time initialization token for siriPhone;
  OUTLINED_FUNCTION_8_1();
  if (v20 != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v21 = OUTLINED_FUNCTION_15_1();
  uint64_t v22 = (os_log_s *)__swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  uint64_t v23 = OUTLINED_FUNCTION_8_1();
  uint64_t v89 = (uint64_t)v22;
  Logger.logObject.getter(v23);
  os_log_type_t v24 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v22, v24))
  {
    uint64_t v25 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v26 = OUTLINED_FUNCTION_7_0(64LL);
    v109[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v106 = OUTLINED_FUNCTION_122_7(v26, 0x80000000003500D0LL, v109);
    OUTLINED_FUNCTION_207_3(v106, v27, v28, v25 + 12, v29, v30, v31, v32, (uint64_t)v22, v92, v96, v99, v100, v101);
    *(_WORD *)(v25 + 12) = 2080;
    OUTLINED_FUNCTION_8_1();
    uint64_t v33 = OUTLINED_FUNCTION_140_8();
    uint64_t v106 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v35);
    OUTLINED_FUNCTION_207_3(v106, v36, v37, v25 + 22, v38, v39, v40, v41, v90, v93, v97, v99, v100, v101);
    OUTLINED_FUNCTION_32_10((uint64_t)v8);
    OUTLINED_FUNCTION_33_6( &dword_0,  v22,  v24,  "#PhoneAppResolutionOnDeviceFlowStrategy %s Requested 3P app %s",  (uint8_t *)v25);
    OUTLINED_FUNCTION_42_2(v26);
    OUTLINED_FUNCTION_0_2(v26);
    OUTLINED_FUNCTION_0_2(v25);
  }

  else
  {

    OUTLINED_FUNCTION_7_4((uint64_t)v8);
  }

  OUTLINED_FUNCTION_82((void *)(v3 + 32));
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  OUTLINED_FUNCTION_85();
  uint64_t v42 = OUTLINED_FUNCTION_140_8();
  uint64_t v44 = v43(v42);
  uint64_t v52 = OUTLINED_FUNCTION_251_1(v44, v45, v46, v47, v48, v49, v50, v51, v89, v92, v96, v99, v100, v101, v102, v103);
  OUTLINED_FUNCTION_240_1(v52, v53, &demangling cache variable for type metadata for AnnotatedApp?, v54, v55, v56, v57);
  if (!v106)
  {
LABEL_17:
    uint64_t v15 = v91;
    Logger.logObject.getter(v58);
    os_log_type_t v16 = OUTLINED_FUNCTION_6_0();
    if (!OUTLINED_FUNCTION_39_7(v91))
    {
LABEL_20:

      return OUTLINED_FUNCTION_140_8();
    }

    char v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v18 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v99 = v18;
    *(_DWORD *)char v17 = 136315138;
    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_122_7(v83, v84, &v99);
    OUTLINED_FUNCTION_233_1();
    OUTLINED_FUNCTION_93_11(v85, v86, (uint64_t)(v17 + 4));
    uint64_t v19 = "#PhoneAppResolutionOnDeviceFlowStrategy %s 3P app has support, so use their SiriKit implementation";
LABEL_19:
    OUTLINED_FUNCTION_57_0(&dword_0, v15, v16, v19, v17);
    OUTLINED_FUNCTION_17_0(v18);
    OUTLINED_FUNCTION_0_2(v18);
    OUTLINED_FUNCTION_0_2((uint64_t)v17);
    goto LABEL_20;
  }

  OUTLINED_FUNCTION_239_2( (uint64_t)v58,  v59,  v60,  v61,  v62,  v63,  v64,  v65,  (uint64_t)v91,  v94,  v98,  v99,  v100,  v101,  v102,  v103,  v104,  v105,  v106,  v107[0],  v107[1],  v107[2],  v108);
  uint64_t v66 = v109[1];
  uint64_t v67 = OUTLINED_FUNCTION_36();
  char v68 = specialized Set._isDisjoint<A>(with:)(v67, v66);
  OUTLINED_FUNCTION_70_2();
  if ((v68 & 1) == 0)
  {
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_186_3((uint64_t)v110, v82, &demangling cache variable for type metadata for String?);
    OUTLINED_FUNCTION_13_11();
    uint64_t v113 = v111;
    uint64_t v58 = OUTLINED_FUNCTION_44_28();
    goto LABEL_17;
  }

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_39();
  uint64_t v69 = OUTLINED_FUNCTION_11_18(v3);
  Logger.logObject.getter(v69);
  os_log_type_t v70 = OUTLINED_FUNCTION_41();
  if (os_log_type_enabled(v8, v70))
  {
    uint64_t v71 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v95 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v112 = v95;
    *(_DWORD *)uint64_t v71 = 136315394;
    OUTLINED_FUNCTION_38_2();
    uint64_t v113 = OUTLINED_FUNCTION_122_7(v72, v73, &v112);
    OUTLINED_FUNCTION_185_2(v113, v74, v75, v71 + 12);
    *(_WORD *)(v71 + 12) = 2080;
    uint64_t v76 = OUTLINED_FUNCTION_36();
    Array.description.getter(v76, &type metadata for String);
    OUTLINED_FUNCTION_70_2();
    uint64_t v77 = OUTLINED_FUNCTION_272_2();
    uint64_t v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, v79);
    OUTLINED_FUNCTION_185_2(v113, v80, v81, v71 + 22);
    OUTLINED_FUNCTION_31_1(v3);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_33_6( &dword_0,  v8,  v70,  "#PhoneAppResolutionOnDeviceFlowStrategy %s 3P app does not declare support for %s, so fallback to system extension",  (uint8_t *)v71);
    OUTLINED_FUNCTION_42_2(v95);
    OUTLINED_FUNCTION_0_2(v95);
    OUTLINED_FUNCTION_0_2(v71);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v3);
  }

  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_186_3((uint64_t)v110, v88, &demangling cache variable for type metadata for String?);
  OUTLINED_FUNCTION_13_11();
  uint64_t v113 = v111;
  OUTLINED_FUNCTION_44_28();
  return OUTLINED_FUNCTION_140_8();
}

void PhoneAppResolutionOnDeviceFlowStrategy.makeAppQuery(phoneCallNLIntent:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  a25 = v27;
  a26 = v28;
  uint64_t v29 = v26;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = type metadata accessor for AppQuery.Builder();
  OUTLINED_FUNCTION_254_2(v34);
  uint64_t v35 = AppQuery.Builder.__allocating_init(intent:)(&a10);
  uint64_t v36 = v31[4];
  OUTLINED_FUNCTION_17_25(v31);
  uint64_t v37 = OUTLINED_FUNCTION_109_9(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 56));
  LOBYTE(v31) = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 256LL))(v37);
  uint64_t v38 = OUTLINED_FUNCTION_38_1();
  if ((v31 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v39 = OUTLINED_FUNCTION_15_1();
    uint64_t v40 = (os_log_s *)__swift_project_value_buffer(v39, (uint64_t)static Logger.siriPhone);
    Logger.logObject.getter(v40);
    os_log_type_t v41 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_39_7(v40))
    {
      uint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v43 = OUTLINED_FUNCTION_7_0(32LL);
      a10 = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      OUTLINED_FUNCTION_38_2();
      a9 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002ELL, v44, &a10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&a9, &a10, v42 + 4, v42 + 12);
      OUTLINED_FUNCTION_57_0( &dword_0,  v40,  v41,  "#PhoneAppResolutionOnDeviceFlowStrategy %s Request requires a userFacingAppId override",  v42);
      OUTLINED_FUNCTION_17_0(v43);
      OUTLINED_FUNCTION_0_2(v43);
      OUTLINED_FUNCTION_0_2((uint64_t)v42);
    }

    OUTLINED_FUNCTION_11_52(v33);
    BOOL v45 = PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial()();
    BOOL v46 = v45;
    OUTLINED_FUNCTION_254_2(v45);
    if (v46)
    {
      __swift_project_boxed_opaque_existential_1(&a10, a13);
      Swift::Bool v47 = PhoneCallNLIntent.isFaceTimeCall()();
      __swift_destroy_boxed_opaque_existential_1(&a10);
      if (v47)
      {
        uint64_t v48 = 2LL;
LABEL_11:
        uint64_t v49 = static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)( v48,  (void *)(v29 + 152));
        uint64_t v51 = v50;
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AppQuery.Override>);
        uint64_t v53 = OUTLINED_FUNCTION_8_2(v52, 48LL);
        *(_OWORD *)(v53 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
        *(void *)(v53 + 32) = v49;
        *(void *)(v53 + 40) = v51;
        uint64_t v54 = (*(uint64_t (**)(void))(*(void *)v35 + 152LL))();
        swift_release(v54);
        uint64_t v38 = OUTLINED_FUNCTION_50();
        goto LABEL_12;
      }
    }

    else
    {
      __swift_destroy_boxed_opaque_existential_1(&a10);
    }

    uint64_t v48 = 1LL;
    goto LABEL_11;
  }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.logAppSelectionActionToSelf(action:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(OUTLINED_FUNCTION_231_2() - 8);
  __chkstk_darwin();
  uint64_t v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (a1)
  {
    uint64_t v7 = UsoEntity_common_Person.usoPerson.getter();
    AppResolutionAction.result.getter(v7);
    OUTLINED_FUNCTION_38_1();
    uint64_t v8 = OUTLINED_FUNCTION_119();
    int v10 = v9(v8);
    if (v10 == enum case for AppResolutionResult.needsConfirmation(_:))
    {
      OUTLINED_FUNCTION_116_8();
      swift_release(*v6);
      uint64_t v11 = 1LL;
    }

    else if (v10 == enum case for AppResolutionResult.needsDisambiguation(_:))
    {
      OUTLINED_FUNCTION_116_8();
      swift_bridgeObjectRelease();
      uint64_t v11 = 2LL;
    }

    else if (v10 == enum case for AppResolutionResult.selected(_:))
    {
      OUTLINED_FUNCTION_116_8();
      swift_release(*v6);
      uint64_t v11 = 0LL;
    }

    else
    {
      OUTLINED_FUNCTION_81_3((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      uint64_t v11 = 6LL;
    }
  }

  else
  {
    uint64_t v11 = 5LL;
  }

  uint64_t v12 = v2 + 38;
  uint64_t v14 = v2[41];
  uint64_t v13 = v2[42];
  OUTLINED_FUNCTION_82(v12);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, v14, v13);
  return swift_release(v15);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_24_41();
  uint64_t v5 = type metadata accessor for TaskPriority(v4);
  OUTLINED_FUNCTION_29_1(v2, v6, v7, v5);
  outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)v11);
  uint64_t v8 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_410C40, 80LL);
  __int128 v8[2] = 0LL;
  v8[3] = 0LL;
  v8[4] = v1;
  outlined init with take of AppSelectionSignalComponent(v11, (uint64_t)(v8 + 5));
  UsoEntity_common_Person.usoPerson.getter();
  uint64_t v9 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v2,  (uint64_t)&async function pointer to partial apply for closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:),  (uint64_t)v8);
  return swift_release(v9);
}

uint64_t closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  v5[6] = v6;
  unint64_t v7 = (*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[7] = swift_task_alloc(v7);
  v5[8] = swift_task_alloc(v7);
  v5[9] = swift_task_alloc(v7);
  return swift_task_switch( closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:),  0LL,  0LL);
}

uint64_t closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)()
{
  uint64_t v1 = *(void *)(v0[4] + 16LL);
  v0[10] = v1;
  OUTLINED_FUNCTION_48_0();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_259_2();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:);
  return OUTLINED_FUNCTION_120_8(v0[9], v0[5], v1);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 88));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  os_log_s *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(os_log_s **)(v0 + 72);
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)v2,  v3,  &demangling cache variable for type metadata for AppResolverResult?);
  OUTLINED_FUNCTION_11_18(v1);
  OUTLINED_FUNCTION_62_18();
  uint64_t v5 = OUTLINED_FUNCTION_41();
  uint64_t v6 = OUTLINED_FUNCTION_10(v5);
  unint64_t v7 = *(void *)(v0 + 64);
  if (v6)
  {
    uint64_t v26 = *(void *)(v0 + 56);
    uint64_t v27 = *(void *)(v0 + 48);
    uint64_t v8 = *(void **)(v0 + 32);
    uint64_t v9 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v28 = OUTLINED_FUNCTION_7_0(64LL);
    v29[0] = v28;
    OUTLINED_FUNCTION_243_1(4.8151e-34);
    os_log_type_t v24 = v10;
    uint64_t v25 = v7;
    uint64_t v11 = v8[44];
    uint64_t v12 = v8[45];
    uint64_t v13 = v8[46];
    v29[1] = 0LL;
    v29[2] = 0xE000000000000000LL;
    OUTLINED_FUNCTION_128();
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_26_49(v11, v12, v13);
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_23_5();
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = OUTLINED_FUNCTION_10_3(0LL, v14, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v24);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1((uint64_t)v8);
    *(_WORD *)(v9 + 12) = 2080;
    outlined init with copy of PhoneCallNLIntent?( v25,  v26,  &demangling cache variable for type metadata for AppResolverResult?);
    uint64_t v15 = String.init<A>(describing:)(v26, v27);
    *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v29);
    OUTLINED_FUNCTION_14_0(v0 + 24, v0 + 32, v17, v9 + 22);
    OUTLINED_FUNCTION_23_5();
    outlined destroy of PhoneCallNLIntent?(v25, &demangling cache variable for type metadata for AppResolverResult?);
    OUTLINED_FUNCTION_33_6( &dword_0,  v2,  (os_log_type_t)v1,  "%s shadowPredictAndStore: predicting app in background for shadow-logging force disambig response: %s",  (uint8_t *)v9);
    OUTLINED_FUNCTION_42_2(v28);
    OUTLINED_FUNCTION_0_2(v28);
    OUTLINED_FUNCTION_0_2(v9);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(*(void *)(v0 + 32));
    outlined destroy of PhoneCallNLIntent?(v7, &demangling cache variable for type metadata for AppResolverResult?);
  }

  uint64_t v18 = *(void *)(v0 + 72);
  uint64_t v19 = *(void *)(v0 + 56);
  uint64_t v20 = *(void **)(v0 + 32);
  uint64_t v21 = v20[29];
  __swift_project_boxed_opaque_existential_1(v20 + 25, v20[28]);
  uint64_t v22 = OUTLINED_FUNCTION_109_9(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 208));
  outlined init with copy of PhoneCallNLIntent?( v18,  v19,  &demangling cache variable for type metadata for AppResolverResult?);
  (*(void (**)(uint64_t))(*(void *)v22 + 96LL))(v19);
  OUTLINED_FUNCTION_38_1();
  outlined destroy of PhoneCallNLIntent?(v18, &demangling cache variable for type metadata for AppResolverResult?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void PhoneAppResolutionOnDeviceFlowStrategy.getAppSpeakableString(apps:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  a25 = v28;
  a26 = v29;
  uint64_t v30 = (uint64_t)v26;
  unint64_t v32 = v31;
  UsoEntity_common_Person.usoPerson.getter();
  uint64_t v33 = specialized Sequence.compactMap<A>(_:)(v32, v26);
  if (v32 >> 62)
  {
    OUTLINED_FUNCTION_6_1();
    uint64_t v34 = (os_log_s *)OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    uint64_t v34 = *(os_log_s **)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v34 != (os_log_s *)v33[2])
  {
    OUTLINED_FUNCTION_62();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    uint64_t v36 = OUTLINED_FUNCTION_11_18(v30);
    Logger.logObject.getter(v36);
    os_log_type_t v37 = OUTLINED_FUNCTION_73_23();
    if (OUTLINED_FUNCTION_33_10(v37))
    {
      uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v45 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_190_1(4.8149e-34);
      uint64_t v44 = v39;
      OUTLINED_FUNCTION_129_9();
      a13 = v40;
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_17_55();
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_10_3(0LL, v41, &a13);
      OUTLINED_FUNCTION_233_1();
      OUTLINED_FUNCTION_93_11(v42, v43, v44);
      OUTLINED_FUNCTION_31_1(v30);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0( &dword_0,  v34,  v27,  "%s error on finding all app names, set app names as an empty array",  v38);
      OUTLINED_FUNCTION_17_0(v45);
      OUTLINED_FUNCTION_0_2(v45);
      OUTLINED_FUNCTION_0_2((uint64_t)v38);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v30);
    }
  }

  OUTLINED_FUNCTION_23_13();
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.getSeASPredictableAppsList(apps:)(uint64_t a1)
{
  uint64_t v3 = App.__allocating_init(appIdentifier:)(0xD000000000000012LL, v2);
  uint64_t v14 = a1;
  OUTLINED_FUNCTION_11_18(v3);
  uint64_t v4 = OUTLINED_FUNCTION_48_0();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  unint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v5 = *(void *)((char *)&dword_18 + (v14 & 0xFFFFFFFFFFFFFF8LL));
  if (v6 >= v5 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1LL);
  }
  uint64_t v7 = OUTLINED_FUNCTION_99_2();
  uint64_t v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v8);
  specialized Array._endMutation()(v9, v10, v11, v12);
  OUTLINED_FUNCTION_31_1(v3);
  return v14;
}

uint64_t protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeErrorResponse(error:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppResolutionOnDeviceFlowStrategyAsync.makeErrorResponse(error:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppResolutionOnDeviceFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.parseConfirmationResponse(input:) in conformance PhoneAppResolutionOnDeviceFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 312LL))();
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationPrompt(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2)
{
  unint64_t v6 = *(int **)(**(void **)v2 + 328LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return v9(a1, a2);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeRepromptOnEmptyParse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy()
{
  return v0[1]();
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeRepromptOnLowConfidence(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppConfirmationStrategyAsync.makeRepromptOnLowConfidence(app:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppConfirmationStrategyAsync.makeRepromptOnLowConfidence(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationRejectedResponse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppConfirmationStrategyAsync.makeConfirmationRejectedResponse(app:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppConfirmationStrategyAsync.makeConfirmationRejectedResponse(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationCancelledResponse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppConfirmationStrategyAsync.makeConfirmationCancelledResponse(app:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppConfirmationStrategyAsync.makeConfirmationCancelledResponse(app:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppConfirmationStrategyAsync.makeConfirmationErrorResponse(error:app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to AppConfirmationStrategyAsync.makeConfirmationErrorResponse(error:app:)[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppConfirmationStrategyAsync.makeConfirmationErrorResponse(error:app:)(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.parseDisambiguationResponse(input:) in conformance PhoneAppResolutionOnDeviceFlowStrategy()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 320LL))();
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeDisambiguationPrompt(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2)
{
  unint64_t v6 = *(int **)(**(void **)v2 + 336LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return v9(a1, a2);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeRepromptOnEmptyParse(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppDisambiguationStrategyAsync.makeRepromptOnEmptyParse(apps:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppDisambiguationStrategyAsync.makeRepromptOnEmptyParse(apps:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeRepromptOnLowConfidence(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppDisambiguationStrategyAsync.makeRepromptOnLowConfidence(apps:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppDisambiguationStrategyAsync.makeRepromptOnLowConfidence(apps:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeDisambiguationCancelResponse(apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppDisambiguationStrategyAsync.makeDisambiguationCancelResponse(apps:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppDisambiguationStrategyAsync.makeDisambiguationCancelResponse(apps:)(a1, a2, a3, a4);
}

uint64_t protocol witness for AppDisambiguationStrategyAsync.makeDisambiguationErrorResponse(error:apps:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to AppDisambiguationStrategyAsync.makeDisambiguationErrorResponse(error:apps:)[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppDisambiguationStrategyAsync.makeDisambiguationErrorResponse(error:apps:)(a1, a2, a3, a4, a5);
}

uint64_t specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v56 = a8;
  uint64_t v55 = a7;
  uint64_t v61 = a2;
  uint64_t v60 = a1;
  uint64_t v58 = a11;
  uint64_t v57 = a10;
  uint64_t v59 = a9;
  uint64_t v54 = a16;
  type metadata accessor for AppResolver(0LL);
  __chkstk_darwin();
  uint64_t v52 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v72[3] = a15;
  v72[4] = a18;
  uint64_t v23 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v72);
  uint64_t v25 = a3;
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32LL))( boxed_opaque_existential_1,  a6,  a15);
  v71[3] = a14;
  v71[4] = a17;
  uint64_t v53 = a17;
  uint64_t v26 = __swift_allocate_boxed_opaque_existential_1(v71);
  os_log_type_t v27 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32LL);
  uint64_t v28 = v55;
  uint64_t v55 = a14;
  v27(v26, v28, a14);
  v70[3] = a13;
  v70[4] = v54;
  uint64_t v29 = __swift_allocate_boxed_opaque_existential_1(v70);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32LL))(v29, v56, a13);
  *(void *)(a12 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a12 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(a12 + 34__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  uint64_t v30 = type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy();
  *(void *)(a12 + 352) = v30;
  *(void *)(a12 + 360) = &outlined read-only object #0 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a12 + 368) = 0LL;
  *(void *)(a12 + 376) = 0LL;
  *(void *)(a12 + 38__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v30;
  *(void *)(a12 + 392) = &outlined read-only object #1 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a12 + 400) = 0LL;
  *(void *)(a12 + 408) = 0LL;
  *(void *)(a12 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 16) = v30;
  *(void *)(a12 + 42__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &outlined read-only object #2 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a12 + 432) = 0LL;
  *(void *)(a12 + 440) = 0LL;
  *(void *)(a12 + 192) = v60;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v61, a12 + 32);
  uint64_t v31 = a3[3];
  uint64_t v32 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v31);
  uint64_t v33 = v57;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v67, v31, v32);
  outlined init with take of AppSelectionSignalComponent(&v67, a12 + 152);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, a12 + 200);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v71, a12 + 112);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v70, a12 + 72);
  uint64_t v60 = a4;
  *(void *)(a12 + 240) = a4;
  *(void *)(a12 + 248) = a5;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v72, a12 + 256);
  if (v33)
  {
    swift_retain();
    swift_retain();
    uint64_t v34 = v33;
    uint64_t v35 = v59;
  }

  else
  {
    outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)&v67);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v71, (uint64_t)&v65);
    uint64_t v36 = type metadata accessor for AppUsageProvider();
    __int128 v62 = 0u;
    __int128 v63 = 0u;
    uint64_t v64 = 0LL;
    uint64_t v56 = swift_allocObject(v36, 16LL, 7LL);
    uint64_t v35 = v59;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v37 = (uint64_t)v52;
    AppResolver.init(appResolutionRules:)(_swiftEmptyArrayStorage);
    uint64_t v38 = type metadata accessor for PhoneAppResolutionHelper(0LL);
    uint64_t v39 = swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v65, v66);
    __chkstk_darwin();
    uint64_t v41 = (char *)&v52 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v42 + 16))(v41);
    uint64_t v34 = specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)( &v67,  (uint64_t)v41,  v35,  (uint64_t)&v62,  v56,  v37,  v39,  v55,  v53);
    __swift_destroy_boxed_opaque_existential_1(&v65);
  }

  *(void *)(a12 + 296) = v34;
  uint64_t v43 = v58;
  outlined init with copy of PhoneCallNLIntent?( v58,  (uint64_t)&v65,  &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
  if (v66)
  {
    swift_release(v23);
    swift_release(v60);
    swift_release(v35);
    outlined destroy of PhoneCallNLIntent?( v43,  &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    __swift_destroy_boxed_opaque_existential_1(v70);
    __swift_destroy_boxed_opaque_existential_1(v71);
    __swift_destroy_boxed_opaque_existential_1(v72);
    __swift_destroy_boxed_opaque_existential_1(v61);
    outlined init with take of AppSelectionSignalComponent(&v65, (uint64_t)&v67);
  }

  else
  {
    uint64_t v44 = v23;
    swift_retain();
    outlined destroy of PhoneCallNLIntent?( (uint64_t)&v65,  &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v25, (uint64_t)&v65);
    id v45 = [(id)objc_opt_self(AssistantSiriAnalytics) sharedAnalytics];
    id v46 = [v45 defaultMessageStream];

    if (one-time initialization token for instance != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    uint64_t v47 = static EligibleAppFinder.instance;
    uint64_t v48 = type metadata accessor for EligibleAppFinder();
    uint64_t v64 = &protocol witness table for EligibleAppFinder;
    *((void *)&v63 + 1) = v48;
    *(void *)&__int128 v62 = v47;
    char v68 = &type metadata for PhoneAppResolutionLogger;
    uint64_t v69 = &protocol witness table for PhoneAppResolutionLogger;
    uint64_t v49 = swift_allocObject(&unk_410C68, 160LL, 7LL);
    uint64_t v50 = (void *)(v49 + 16);
    *(void *)&__int128 v67 = v49;
    swift_retain();
    PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)(&v65, (uint64_t)v46, &v62, v50);
    swift_release(v33);
    swift_release(v44);
    swift_release(v60);
    swift_release(v59);
    outlined destroy of PhoneCallNLIntent?( v43,  &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    __swift_destroy_boxed_opaque_existential_1(v70);
    __swift_destroy_boxed_opaque_existential_1(v71);
    __swift_destroy_boxed_opaque_existential_1(v72);
    __swift_destroy_boxed_opaque_existential_1(v61);
  }

  outlined init with take of AppSelectionSignalComponent(&v67, a12 + 304);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return a12;
}

uint64_t partial apply for closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)( uint64_t a1)
{
  return closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:)(a1, *(void *)(v1 + 16));
}

void base witness table accessor for AppConfirmationStrategyAsync in PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2)
{
}

void base witness table accessor for AppDisambiguationStrategyAsync in PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2)
{
}

uint64_t sub_24C244()
{
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t partial apply for closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)( uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_43BDEC);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return closure #1 in PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)( a1,  v4,  v5,  v6,  (uint64_t)(v1 + 5));
}

void _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = OUTLINED_FUNCTION_25_13(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(v3, v4, v5);
  OUTLINED_FUNCTION_2();
}

uint64_t specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)( *a1,  a2,  a3);
}

uint64_t partial apply for specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return specialized closure #1 in static PhoneCallNLContextProvider.makeNLContextUpdateForDisambiguation(apps:device:)( a1,  *(void **)(v2 + 16),  a2);
}

void outlined init with copy of PhoneCallNLIntent?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = OUTLINED_FUNCTION_25_13(a1, a2, a3);
  OUTLINED_FUNCTION_57(v3);
  OUTLINED_FUNCTION_2();
}

uint64_t sub_24C394()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

void OUTLINED_FUNCTION_17_55()
{
}

uint64_t OUTLINED_FUNCTION_23_51()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_26_49(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

BOOL OUTLINED_FUNCTION_33_47(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_39_27(uint64_t a1, uint64_t a2)
{
}

void *OUTLINED_FUNCTION_44_28()
{
  return outlined release of Set<String>((void *)(v0 - 96));
}

void OUTLINED_FUNCTION_48_27(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_52_24(uint64_t a1)
{
  *(void *)(v2 - 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 168, v2 - 160, *(void *)(v2 - 240), v1 + 12);
}

void OUTLINED_FUNCTION_53_24(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_60_24(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t OUTLINED_FUNCTION_62_18()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_68_23()
{
  return type metadata accessor for AppDisambiguationResponse(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_73_23()
{
  return static os_log_type_t.error.getter();
}

uint64_t OUTLINED_FUNCTION_80_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_81_18()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = v1[41];
  uint64_t v3 = v1[42];
  __swift_project_boxed_opaque_existential_1(v1 + 38, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(5LL, v2, v3);
}

uint64_t OUTLINED_FUNCTION_83_19()
{
  return (*(uint64_t (**)(void, void))(v0[21] + 8LL))(v0[22], v0[20]);
}

uint64_t OUTLINED_FUNCTION_85_12@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t OUTLINED_FUNCTION_88_18@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2 | 0x8000000000000000LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_89_14@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *a3 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a3, a2, a10, v10);
}

uint64_t OUTLINED_FUNCTION_90_12(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_91_13()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_93_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_102_7()
{
  return type metadata accessor for AppConfirmationResponse(0LL);
}

uint64_t OUTLINED_FUNCTION_103_8()
{
  return type metadata accessor for AppResolutionAction(0LL);
}

void *OUTLINED_FUNCTION_106_8()
{
  return outlined release of Set<String>((void *)(v0 - 120));
}

BOOL OUTLINED_FUNCTION_110_10()
{
  return PhoneCallNLIntent.hasApplicationNameOrId()();
}

uint64_t OUTLINED_FUNCTION_113_9()
{
  return swift_task_dealloc(*(void *)(v0 + 104));
}

uint64_t OUTLINED_FUNCTION_114_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_115_7(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 128, v2 - 120, *(void *)(v2 - 200), v1);
}

uint64_t OUTLINED_FUNCTION_116_8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_117_8(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 208));
}

void OUTLINED_FUNCTION_118_6(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t OUTLINED_FUNCTION_120_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PhoneAppResolutionOnDeviceFlowStrategy.executeSmartAppSelect(phoneCallNLIntent:inputApps:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_122_7(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000003DLL, a2, a3);
}

uint64_t OUTLINED_FUNCTION_123_4()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_130_3()
{
  return outlined retain of String?(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_134_5()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)v0 + 192LL))(v1);
}

uint64_t OUTLINED_FUNCTION_135_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_138_6()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_140_8()
{
  return v0;
}

void OUTLINED_FUNCTION_145_7(float a1)
{
  *uint64_t v1 = a1;
}

void *OUTLINED_FUNCTION_148_7@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return a2;
}

uint64_t OUTLINED_FUNCTION_152_7()
{
  return (*(uint64_t (**)(void, void))(v0[32] + 96LL))(v0[33], v0[31]);
}

uint64_t OUTLINED_FUNCTION_153_7@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v2;
  a1[1] = a2;
  return *(void *)(v2 + 424);
}

uint64_t OUTLINED_FUNCTION_154_6()
{
  return swift_release(v0);
}

void OUTLINED_FUNCTION_155_4(void *a1)
{
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, v1);
  PhoneCallNLIntent.appName.getter(v1, v2, (uint64_t)v3);
}

uint64_t OUTLINED_FUNCTION_165_2()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_170_3(uint64_t a1)
{
  return dispatch thunk of CustomStringConvertible.description.getter(v1, a1);
}

uint64_t OUTLINED_FUNCTION_171_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, v5, v4, a4);
}

void OUTLINED_FUNCTION_175_3(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
}

uint64_t OUTLINED_FUNCTION_176_3()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_185_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 96, v5, v4, a4);
}

void OUTLINED_FUNCTION_186_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

BOOL OUTLINED_FUNCTION_187_2(PhoneCallFlowDelegatePlugin::PhoneCallConfirmation a1)
{
  return PhoneCallNLIntent.hasCallConfirmation(_:)(a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_200_4()
{
  return static AppDisambiguationResponse.ignore()();
}

void OUTLINED_FUNCTION_202_3(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_203_3()
{
  if (v0) {
    uint64_t v2 = 1LL;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, v2, v1);
}

uint64_t OUTLINED_FUNCTION_205_4(uint64_t a1)
{
  return swift_retain_n(a1, 4LL);
}

void *OUTLINED_FUNCTION_206_2(uint64_t a1)
{
  *uint64_t v1 = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_207_3( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v14, v15, a4);
}

void OUTLINED_FUNCTION_208_0(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_209_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 208, v4, v5, a4);
}

void OUTLINED_FUNCTION_212_1()
{
}

uint64_t OUTLINED_FUNCTION_214_2(uint64_t a1)
{
  return String.init<A>(describing:)(v1 - 168, a1);
}

void OUTLINED_FUNCTION_216_1()
{
}

uint64_t OUTLINED_FUNCTION_218_1()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( *(void *)(v0 - 128),  *(void *)(v0 - 120),  (uint64_t *)(v0 - 168));
}

void OUTLINED_FUNCTION_219_2(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_221_0()
{
  return (*(uint64_t (**)(void, void))(v0[17] + 8LL))(v0[19], v0[16]);
}

uint64_t OUTLINED_FUNCTION_222_2( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t OUTLINED_FUNCTION_224_2(uint64_t a1)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_225_1(uint64_t result)
{
  *(void *)(v1 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = result;
  *(void *)(v1 - 168) = result;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_228_1(uint64_t result)
{
  *(void *)(v1 - 232) = result;
  *(void *)(v1 - 208) = result;
  return result;
}

void *OUTLINED_FUNCTION_230_2(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_231_2()
{
  return type metadata accessor for AppResolutionResult(0LL);
}

  ;
}

void OUTLINED_FUNCTION_234_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

void OUTLINED_FUNCTION_235_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *OUTLINED_FUNCTION_236_2()
{
  return outlined retain of Set<String>((void *)(v0 - 120));
}

  ;
}

void OUTLINED_FUNCTION_238_1(uint64_t a1, uint64_t a2)
{
}

__n128 OUTLINED_FUNCTION_239_2( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, __int128 a23)
{
  return (__n128)a23;
}

void OUTLINED_FUNCTION_240_1(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)va, (uint64_t)va1, a3);
}

void OUTLINED_FUNCTION_241_1(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_242(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

void OUTLINED_FUNCTION_243_1(float a1)
{
  *uint64_t v1 = a1;
}

void OUTLINED_FUNCTION_246_0(float a1)
{
  *uint64_t v1 = a1;
}

void OUTLINED_FUNCTION_249_1()
{
}

uint64_t OUTLINED_FUNCTION_251_1( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

void OUTLINED_FUNCTION_253_1( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
}

void OUTLINED_FUNCTION_254_2(uint64_t a1, ...)
{
}

void OUTLINED_FUNCTION_256_2(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_259_2()
{
  return swift_task_alloc(v0);
}

uint64_t OUTLINED_FUNCTION_263_1()
{
  return 0LL;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_272_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_273_2(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 64);
}

uint64_t OUTLINED_FUNCTION_274_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_277_1( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

void OUTLINED_FUNCTION_278_1()
{
}

uint64_t OUTLINED_FUNCTION_280_0()
{
  return v0;
}

void OUTLINED_FUNCTION_282_0(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_283_1()
{
  return v0;
}

uint64_t *AppResolutionProvider.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  return &static AppResolutionProvider.instance;
}

uint64_t static AppResolutionProvider.instance.getter()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  return swift_retain();
}

uint64_t key path setter for AppResolutionProvider.annotatedApps : AppResolutionProvider( uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess(*a2 + 16, v6, 1LL, 0LL);
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t AppResolutionProvider.().init()()
{
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  &type metadata for AnnotatedApp,  &protocol witness table for String);
  *(_OWORD *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return v0;
}

uint64_t key path getter for AppResolutionProvider.lastSetApp : AppResolutionProvider@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 128LL))(v4);
  return outlined init with take of AnnotatedApp?( (uint64_t)v4,  a2,  &demangling cache variable for type metadata for AnnotatedApp?);
}

uint64_t key path setter for AppResolutionProvider.lastSetApp : AppResolutionProvider( uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = (void *)*a2;
  swift_beginAccess(*a2 + 24LL, v16, 1LL, 0LL);
  uint64_t v9 = v8[4];
  uint64_t v10 = v8[5];
  uint64_t v11 = v8[6];
  uint64_t v14 = v8[7];
  uint64_t v15 = v8[3];
  uint64_t v13 = v8[8];
  v8[3] = v2;
  v8[4] = v3;
  v8[5] = v4;
  v8[6] = v5;
  v8[7] = v6;
  v8[8] = v7;
  outlined copy of AnnotatedApp?(v2, v3, v4, v5, v6, v7);
  return outlined consume of AnnotatedApp?(v15, v9, v10, v11, v14, v13);
}

uint64_t AppResolutionProvider.lastSetApp.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t result = outlined copy of AnnotatedApp?(v3, v4, v5, v6, v8, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v8;
  a1[5] = v7;
  return result;
}

uint64_t *AppResolutionProvider.deinit()
{
  return v0;
}

uint64_t AppResolutionProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t protocol witness for AppResolutionProviding.lastSetApp.getter in conformance AppResolutionProvider@<X0>( uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)v1 + 128LL))(v4);
  return outlined init with take of AnnotatedApp?( (uint64_t)v4,  a1,  &demangling cache variable for type metadata for AnnotatedApp?);
}

uint64_t sub_24CDDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96LL))();
  *a2 = result;
  return result;
}

void *OUTLINED_FUNCTION_2_77( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  return outlined release of Set<String>((uint64_t *)va);
}

void *OUTLINED_FUNCTION_3_103( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  return outlined retain of Set<String>((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_6_88(uint64_t a1, uint64_t a2, ...)
{
  return outlined release of String?((uint64_t)va);
}

void *OUTLINED_FUNCTION_7_93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  return outlined release of Set<String>((uint64_t *)va);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay27PhoneCallFlowDelegatePlugin16UsoVocIdentifier_pG_SSs5NeverOTg504_s27defg17Plugin0B21Controli42IdentifiersV03usoH0ACSay12SiriOntology0G10k14VG_tcfcSSAA0g3J61L0_pcfu0_33_708b1cfa6b73d3a2bcd73f98c7ddf494AaI_pSSTf3nnnpk_nTf1cn_n( uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = (void *)(a1 + 32);
    do
    {
      uint64_t v4 = v3[3];
      uint64_t v5 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v4);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
      uint64_t v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      if (v9 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v6;
      v10[5] = v8;
      v3 += 5;
      --v1;
    }

    while (v1);
  }

  return _swiftEmptyArrayStorage;
}

void CallControlUsoIdentifiers.hasMicrophoneIdentifiers.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier>);
  uint64_t v2 = OUTLINED_FUNCTION_30_39(v0, v1);
  *(_OWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  *(void *)(v2 + 56) = &type metadata for CallControlUsoIdentifiers.BoolSettingName;
  *(void *)(v2 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &protocol witness table for CallControlUsoIdentifiers.BoolSettingName;
  OUTLINED_FUNCTION_0_90();
  OUTLINED_FUNCTION_13_78();
  OUTLINED_FUNCTION_27_50();
  OUTLINED_FUNCTION_20_55();
  if (v4 && (unint64_t v5 = OUTLINED_FUNCTION_7_94(v3), (v6 & 1) != 0))
  {
    OUTLINED_FUNCTION_2_78(v5);
    OUTLINED_FUNCTION_4_1();
    uint64_t v7 = OUTLINED_FUNCTION_8_71();
    OUTLINED_FUNCTION_5_88(v7, v8);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
  }

  else
  {
    OUTLINED_FUNCTION_39();
  }

  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_31_40();
  OUTLINED_FUNCTION_17_56();
  OUTLINED_FUNCTION_0_48();
}

void CallControlUsoIdentifiers.hasSpeakerphoneIdentifier.getter(uint64_t a1)
{
}

void CallControlUsoIdentifiers.hasCameraSettingIdentifier.getter(uint64_t a1)
{
}

void CallControlUsoIdentifiers.hasHoldCallIdentifier.getter(uint64_t a1)
{
}

void CallControlUsoIdentifiers.hasSpeakerphoneIdentifier.getter(uint64_t a1, char a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier>);
  uint64_t v5 = OUTLINED_FUNCTION_30_39(v3, v4);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  *(_BYTE *)(v5 + 32) = a2;
  *(void *)(v5 + 56) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  OUTLINED_FUNCTION_0_90();
  OUTLINED_FUNCTION_13_78();
  OUTLINED_FUNCTION_27_50();
  OUTLINED_FUNCTION_20_55();
  if (v7 && (unint64_t v8 = OUTLINED_FUNCTION_7_94(v6), (v9 & 1) != 0))
  {
    OUTLINED_FUNCTION_2_78(v8);
    OUTLINED_FUNCTION_4_1();
    uint64_t v10 = OUTLINED_FUNCTION_8_71();
    OUTLINED_FUNCTION_5_88(v10, v11);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
  }

  else
  {
    OUTLINED_FUNCTION_39();
  }

  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_31_40();
  OUTLINED_FUNCTION_17_56();
  OUTLINED_FUNCTION_0_48();
}

const char *CallControlUsoIdentifiers.PhoneSetting.namespace.unsafeMutableAddressor()
{
  return "phoneSetting";
}

void protocol witness for static Equatable.== infix(_:_:) in conformance CallControlUsoIdentifiers.PhoneSetting()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance CallControlUsoIdentifiers.PhoneSetting()
{
}

void protocol witness for Hashable.hash(into:) in conformance CallControlUsoIdentifiers.PhoneSetting()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance CallControlUsoIdentifiers.PhoneSetting( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::PhoneSetting_optional protocol witness for RawRepresentable.init(rawValue:) in conformance CallControlUsoIdentifiers.PhoneSetting@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::PhoneSetting_optional *a2@<X8>)
{
  result.value = CallControlUsoIdentifiers.PhoneSetting.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance CallControlUsoIdentifiers.PhoneSetting@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = CallControlUsoIdentifiers.PhoneSetting.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *CallControlUsoIdentifiers.FloatSettingName.namespace.unsafeMutableAddressor()
{
  return &static CallControlUsoIdentifiers.FloatSettingName.namespace;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance CallControlUsoIdentifiers.FloatSettingName( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance CallControlUsoIdentifiers.FloatSettingName()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CallControlUsoIdentifiers.FloatSettingName( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance CallControlUsoIdentifiers.FloatSettingName( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::FloatSettingName_optional protocol witness for RawRepresentable.init(rawValue:) in conformance CallControlUsoIdentifiers.FloatSettingName@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::FloatSettingName_optional *a2@<X8>)
{
  result.value = CallControlUsoIdentifiers.FloatSettingName.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance CallControlUsoIdentifiers.FloatSettingName@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = CallControlUsoIdentifiers.FloatSettingName.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *CallControlUsoIdentifiers.BoolSettingName.namespace.unsafeMutableAddressor()
{
  return &static CallControlUsoIdentifiers.BoolSettingName.namespace;
}

uint64_t static CallControlUsoIdentifiers.BoolSettingName.namespace.getter()
{
  return 0x747465536C6F6F62LL;
}

void CallControlUsoIdentifiers.BoolSettingName.init(rawValue:)(uint64_t a1)
{
  v2._rawValue = &outlined read-only object #0 of CallControlUsoIdentifiers.BoolSettingName.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, a1);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
}

uint64_t CallControlUsoIdentifiers.BoolSettingName.rawValue.getter()
{
  return 0x6F68706F7263696DLL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance CallControlUsoIdentifiers.BoolSettingName( uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance CallControlUsoIdentifiers.BoolSettingName( void *a1@<X8>)
{
  *a1 = 0x6F68706F7263696DLL;
  a1[1] = 0xEA0000000000656ELL;
}

void protocol witness for UsoVocIdentifier.init(rawValue:) in conformance CallControlUsoIdentifiers.BoolSettingName( uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

double one-time initialization function for identifierTypeRegistry()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier.Type>);
  uint64_t v1 = swift_allocObject(v0, 80LL, 7LL);
  *(void *)&double result = 3LL;
  *(_OWORD *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_320080;
  *(void *)(v1 + 32) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(v1 + 40) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(v1 + 48) = &type metadata for CallControlUsoIdentifiers.FloatSettingName;
  *(void *)(v1 + 56) = &protocol witness table for CallControlUsoIdentifiers.FloatSettingName;
  *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for CallControlUsoIdentifiers.BoolSettingName;
  *(void *)(v1 + 72) = &protocol witness table for CallControlUsoIdentifiers.BoolSettingName;
  static CallControlUsoIdentifiers.identifierTypeRegistry = (int *)v1;
  return result;
}

unint64_t lazy protocol witness table accessor for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting()
{
  unint64_t result = lazy protocol witness table cache variable for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting;
  if (!lazy protocol witness table cache variable for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for CallControlUsoIdentifiers.PhoneSetting,  &type metadata for CallControlUsoIdentifiers.PhoneSetting);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type CallControlUsoIdentifiers.PhoneSetting and conformance CallControlUsoIdentifiers.PhoneSetting);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName()
{
  unint64_t result = lazy protocol witness table cache variable for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName;
  if (!lazy protocol witness table cache variable for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for CallControlUsoIdentifiers.FloatSettingName,  &type metadata for CallControlUsoIdentifiers.FloatSettingName);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type CallControlUsoIdentifiers.FloatSettingName and conformance CallControlUsoIdentifiers.FloatSettingName);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName()
{
  unint64_t result = lazy protocol witness table cache variable for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName;
  if (!lazy protocol witness table cache variable for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for CallControlUsoIdentifiers.BoolSettingName,  &type metadata for CallControlUsoIdentifiers.BoolSettingName);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type CallControlUsoIdentifiers.BoolSettingName and conformance CallControlUsoIdentifiers.BoolSettingName);
  }

  return result;
}

void type metadata accessor for CallControlUsoIdentifiers()
{
}

void type metadata accessor for CallControlUsoIdentifiers.PhoneSetting()
{
}

void type metadata accessor for CallControlUsoIdentifiers.FloatSettingName()
{
}

uint64_t storeEnumTagSinglePayload for CallControlUsoIdentifiers.BoolSettingName(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_24D490 + 4 * byte_339AFD[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_24D4B0 + 4 * byte_339B02[v4]))();
  }
}

_BYTE *sub_24D490(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_24D4B0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_24D4B8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_24D4C0(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_24D4C8(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_24D4D0(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void type metadata accessor for CallControlUsoIdentifiers.BoolSettingName()
{
}

uint64_t OUTLINED_FUNCTION_0_90()
{
  Swift::OpaquePointer v2 = __swift_project_boxed_opaque_existential_1(v1, v0);
  return swift_getDynamicType(v2, v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_2_78(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)(v1 + 56) + 8 * a1));
}

uint64_t OUTLINED_FUNCTION_6_89()
{
  return v1(v2, *(void *)(v3 - 88), v0);
}

unint64_t OUTLINED_FUNCTION_7_94(uint64_t a1)
{
  return specialized __RawDictionaryStorage.find<A>(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_8_71()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_10_67()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_11_73(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_13_78()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_14_65(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_16_51(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_17_56()
{
  return specialized _ContiguousArrayStorage.__deallocating_deinit();
}

void OUTLINED_FUNCTION_18_57()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_26_50()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 312));
}

uint64_t OUTLINED_FUNCTION_29_39(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t OUTLINED_FUNCTION_30_39(uint64_t a1, uint64_t a2, ...)
{
  return swift_initStackObject(a1, va);
}

uint64_t OUTLINED_FUNCTION_31_40()
{
  return swift_setDeallocating(v0);
}

uint64_t PhoneCallRecordProperties<>.callerWithAliases.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
  if (!v1) {
    return 0LL;
  }
  v8[0] = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
  swift_retain();
  closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(v8, &v9);
  swift_release(v1);
  uint64_t v2 = v9;
  uint64_t v3 = type metadata accessor for PhonePersonWithAliasesList.Builder();
  uint64_t v4 = swift_allocObject(v3, 24LL, 7LL);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess(v4 + 16, v8, 1LL, 0LL);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for PhonePersonWithAliasesList();
  swift_allocObject(v5, 32LL, 7LL);
  uint64_t v6 = PhonePersonList.init(builder:)(v4);
  OUTLINED_FUNCTION_39();
  return v6;
}

void closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject(v4, 40LL, 7LL);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  *(void *)(v5 + 32) = v3;
  uint64_t v9 = v5;
  specialized Array._endMutation()(v5, v6, v7, v8);
  swift_retain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  *a2 = v9;
}

void PhoneCallRecordProperties<>.isVideo.getter()
{
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  uint64_t v5 = OUTLINED_FUNCTION_4_90(v4);
  if (v10)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v6 = 0LL;
    uint64_t v0 = 0LL;
  }

  else
  {
    uint64_t v6 = v2;
    SpeakableString.print.getter(v5);
    OUTLINED_FUNCTION_0_91();
  }

  uint64_t BackingType = INCallCapabilityGetBackingType(2LL);
  if ((_DWORD)BackingType == 2)
  {
    uint64_t v8 = @"VIDEO_CALL";
    goto LABEL_8;
  }

  if ((_DWORD)BackingType == 1)
  {
    uint64_t v8 = @"AUDIO_CALL";
LABEL_8:
    uint64_t v9 = v8;
    goto LABEL_10;
  }

  uint64_t v8 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
LABEL_10:
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  OUTLINED_FUNCTION_1_1();
  if (v0)
  {
    BOOL v10 = v6 == v3 && v0 == v8;
    if (!v10) {
      OUTLINED_FUNCTION_0_15();
    }
    OUTLINED_FUNCTION_39();
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecordProperties<>.isFaceTimeVideo.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  if (v1)
  {
    swift_retain();
    char v2 = specialized PhoneCallProviderProperties.isFaceTime.getter();
    swift_release(v1);
    if ((v2 & 1) != 0) {
      PhoneCallRecordProperties<>.isVideo.getter();
    }
  }

void PhoneCallRecordProperties<>.isFaceTimeAudio.getter()
{
  char v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v3 = *(uint64_t *)((char *)&v0->isa + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  if (!v3) {
    goto LABEL_22;
  }
  swift_retain();
  uint64_t v4 = specialized PhoneCallProviderProperties.isFaceTime.getter();
  swift_release(v3);
  if ((v4 & 1) == 0) {
    goto LABEL_22;
  }
  outlined init with copy of SpeakableString?( (uint64_t)v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability,  v1);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  uint64_t v6 = OUTLINED_FUNCTION_4_90(v5);
  if (v11)
  {
    outlined destroy of SpeakableString?(v1);
    uint64_t v7 = 0LL;
    char v2 = 0LL;
  }

  else
  {
    uint64_t v7 = v1;
    SpeakableString.print.getter(v6);
    OUTLINED_FUNCTION_0_91();
  }

  uint64_t BackingType = INCallCapabilityGetBackingType(1LL);
  if ((_DWORD)BackingType == 2)
  {
    uint64_t v9 = @"VIDEO_CALL";
  }

  else
  {
    if ((_DWORD)BackingType != 1)
    {
      uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
      goto LABEL_13;
    }

    uint64_t v9 = @"AUDIO_CALL";
  }

  BOOL v10 = v9;
LABEL_13:
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  OUTLINED_FUNCTION_1_1();
  if (v2)
  {
    BOOL v11 = v7 == v4 && v2 == v9;
    if (!v11) {
      OUTLINED_FUNCTION_0_15();
    }
    OUTLINED_FUNCTION_39();
  }

  swift_bridgeObjectRelease();
LABEL_22:
  OUTLINED_FUNCTION_16();
}

uint64_t protocol witness for PhoneCallRecordProperties.callerWithAliases.getter in conformance PhoneCallRecord()
{
  return PhoneCallRecordProperties<>.callerWithAliases.getter();
}

uint64_t protocol witness for PhoneCallRecordProperties.isFaceTimeVideo.getter in conformance PhoneCallRecord()
{
  return v0 & 1;
}

uint64_t protocol witness for PhoneCallRecordProperties.isFaceTimeAudio.getter in conformance PhoneCallRecord()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_0_91()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8LL))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_90(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

void static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)()
{
}

{
  static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  __int128 v11[2];
  OUTLINED_FUNCTION_84_14();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  outlined init with copy of SignalProviding(v7, (uint64_t)v11);
  uint64_t v8 = (void *)swift_allocObject(v0, 80LL, 7LL);
  __int128 v8[2] = v6;
  v8[3] = v4;
  outlined init with take of AppSelectionSignalComponent(v11, (uint64_t)(v8 + 4));
  v8[9] = v2;
  uint64_t v9 = v2;
  swift_retain();
  BOOL v10 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_24_43();
  OUTLINED_FUNCTION_35_32();
  OUTLINED_FUNCTION_21_47();
}

{
  static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)();
}

{
  static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  OUTLINED_FUNCTION_84_14();
  OUTLINED_FUNCTION_60_25(v2, v3);
  uint64_t v4 = OUTLINED_FUNCTION_74_17();
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  outlined init with take of AppSelectionSignalComponent(&v6, v4 + 32);
  uint64_t v5 = v0;
  OUTLINED_FUNCTION_95();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_24_43();
  OUTLINED_FUNCTION_35_32();
  OUTLINED_FUNCTION_21_47();
}

void static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t a1, uint64_t a2)
{
}

{
  static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, a2);
}

{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v6;
  OUTLINED_FUNCTION_60_25(a1, a2);
  uint64_t v4 = OUTLINED_FUNCTION_74_17();
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  outlined init with take of AppSelectionSignalComponent(&v6, v4 + 32);
  uint64_t v5 = v2;
  OUTLINED_FUNCTION_95();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_24_43();
  OUTLINED_FUNCTION_35_32();
  OUTLINED_FUNCTION_21_47();
}

{
  static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, a2);
}

{
  static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(a1, a2);
}

uint64_t static Transformer<>.transformer(app:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_32_43();
  return OUTLINED_FUNCTION_26_51(v0, v1, v2);
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)()
{
  uint64_t v29 = v0;
  uint64_t v25 = v5;
  uint64_t v26 = v4;
  OUTLINED_FUNCTION_88_19();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_48_28(v8, v24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_41_33(v10, v24);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v30 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>)
                  - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_135();
  [objc_allocWithZone(INAnswerCallIntent) init];
  OUTLINED_FUNCTION_46_30();
  OUTLINED_FUNCTION_28_33();
  uint64_t v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4111B0, 64LL);
  OUTLINED_FUNCTION_69_20(v15);
  id v16 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_73_24();
  OUTLINED_FUNCTION_28_49((uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So08INAnswereS0C_TGm5TA_0);
  uint64_t v32 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INAnswerCallIntentExport);
  OUTLINED_FUNCTION_40_27( (uint64_t)partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  (uint64_t)&v31);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))OUTLINED_FUNCTION_86_11();
  OUTLINED_FUNCTION_34_33(v17);
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();

    OUTLINED_FUNCTION_72_24();
    OUTLINED_FUNCTION_15_68();
  }

  else
  {
    uint64_t v29 = v3;
    OUTLINED_FUNCTION_38_1();
    uint64_t v18 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4111D8, 24LL);
    uint64_t v19 = v26;
    *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v26;
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    OUTLINED_FUNCTION_28_49((uint64_t)partial apply for closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:));
    OUTLINED_FUNCTION_17_57();
    __chkstk_darwin(v21);
    OUTLINED_FUNCTION_98_11();
    OUTLINED_FUNCTION_40_27( (uint64_t)partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v22);
    uint64_t v23 = (uint64_t (*)(void, uint64_t))OUTLINED_FUNCTION_58_20();
    OUTLINED_FUNCTION_39_28(v23);
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_16_52();
    OUTLINED_FUNCTION_130((uint64_t)v13);

    OUTLINED_FUNCTION_23_52();
    OUTLINED_FUNCTION_15_68();
    *uint64_t v25 = v16;
  }

  OUTLINED_FUNCTION_7_1();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, __int128 *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 v46[2];
  OUTLINED_FUNCTION_17_1();
  id v45 = v1;
  uint64_t v3 = v2;
  uint64_t v40 = v5;
  uint64_t v41 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = v4;
  uint64_t v39 = v9;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INHangUpCallIntentExport>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_11_0();
  uint64_t v42 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  id v16 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = [objc_allocWithZone(INHangUpCallIntent) init];
  id v20 = v8;
  uint64_t v21 = v40;
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v20, v7);
  uint64_t v22 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411368, 24LL);
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  uint64_t v23 = v3;
  uint64_t v24 = v19;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Transformer.init(transform:)( closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:)partial apply,  v22,  v25);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v44 = v18;
  v26(v16, v18, v12);
  outlined init with copy of SignalProviding(v21, (uint64_t)v46);
  uint64_t v27 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v28 = (v27 + 16) & ~v27;
  uint64_t v29 = (v14 + v28 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v30 = (v29 + 47) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v31 = swift_allocObject(&unk_411390, v30 + 8, v27 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v31 + v28, v16, v12);
  uint64_t v32 = v31 + v29;
  uint64_t v33 = v43;
  outlined init with take of AppSelectionSignalComponent(v46, v32);
  *(void *)(v31 + v30) = v41;
  swift_retain();
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INHangUpCallIntentExport);
  Reducer.init(apply:)( partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v31,  v25,  v34);
  uint64_t v35 = (void (*)(uint64_t, __int128 *))Reducer.reduce.getter(v33);
  uint64_t v37 = v36;
  *(void *)&v46[0] = v24;
  v35(v45, v46);
  if (v0)
  {

    swift_release(v37);
    OUTLINED_FUNCTION_55_23();
    OUTLINED_FUNCTION_75_20();
  }

  else
  {
    swift_release(v37);
    OUTLINED_FUNCTION_55_23();
    OUTLINED_FUNCTION_75_20();

    *uint64_t v39 = v24;
  }

  OUTLINED_FUNCTION_7_1();
}

uint64_t closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallAudioRoute(0LL);
  uint64_t v15 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v14);
  swift_release(KeyPath);
  uint64_t v16 = swift_getKeyPath(&unk_339EE0);
  --> infix<A, B, C, D>(_:_:)(v15, v5, v16);
  swift_release(v15);
  swift_release(v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INAnswerCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v10, v17, v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>>);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = swift_allocObject(v20, v22 + *(void *)(v7 + 72), v21 | 7);
  *(_OWORD *)(v23 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v23 + v22, v12, v6);
  static ReducerBuilder.buildBlock(_:)(v23, v17, v18);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallGroupConversationFilter?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INJoinCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallGroupConversationFilter?);
  uint64_t v15 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v14);
  swift_release(KeyPath);
  uint64_t v16 = swift_getKeyPath(&unk_339E68);
  --> infix<A, B, C, D>(_:_:)(v15, v5, v16);
  swift_release(v15);
  swift_release(v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INJoinCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v10, v17, v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INJoinCallIntentExport>>);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = swift_allocObject(v20, v22 + *(void *)(v7 + 72), v21 | 7);
  *(_OWORD *)(v23 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v23 + v22, v12, v6);
  static ReducerBuilder.buildBlock(_:)(v23, v17, v18);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAddCallParticipantIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339DC8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_339E00);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INAddCallParticipantIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

uint64_t closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  uint64_t v15 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v14);
  swift_release(KeyPath);
  uint64_t v16 = swift_getKeyPath(&unk_339EA8);
  --> infix<A, B, C, D>(_:_:)(v15, v5, v16);
  swift_release(v15);
  swift_release(v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for INAnswerCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v10, v17, v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INAnswerCallIntentExport>>);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = swift_allocObject(v20, v22 + *(void *)(v7 + 72), v21 | 7);
  *(_OWORD *)(v23 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v23 + v22, v12, v6);
  static ReducerBuilder.buildBlock(_:)(v23, v17, v18);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v6);
}

void key path getter for INAnswerCallIntentExport.callIdentifier : INAnswerCallIntentExport( id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 callIdentifier];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    uint64_t v7 = v6;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v7 = 0LL;
  }

  *a2 = v5;
  a2[1] = v7;
}

void key path setter for INAnswerCallIntentExport.callIdentifier : INAnswerCallIntentExport( uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    NSString v3 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v3 = 0LL;
  }
  id v4 = v3;
  objc_msgSend(v2, "setCallIdentifier:");
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v46)(void *__return_ptr, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  void v65[2];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void v73[13];
  uint64_t v74;
  void v75[6];
  uint64_t v76;
  OUTLINED_FUNCTION_17_1();
  a19 = v22;
  a20 = v23;
  uint64_t v72 = v21;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v71 = v30;
  v65[0] = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INJoinCallIntentExport>);
  OUTLINED_FUNCTION_16_2(v32, (uint64_t)&a12);
  uint64_t v76 = v33;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v34);
  OUTLINED_FUNCTION_31();
  __int128 v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  uint64_t v35 = *(void *)(v67 - 8);
  uint64_t v36 = *(void *)(v35 + 64);
  __chkstk_darwin(v67);
  OUTLINED_FUNCTION_26((uint64_t)v65 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v37);
  OUTLINED_FUNCTION_26((uint64_t)v65 - v38);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallGroupConversationFilter?>);
  OUTLINED_FUNCTION_16_2(v39, (uint64_t)&a14);
  OUTLINED_FUNCTION_15_40(v40);
  __chkstk_darwin(v41);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v42);
  id v43 = [objc_allocWithZone(INJoinCallIntent) init];
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v29, v27);
  uint64_t v44 = v25[3];
  uint64_t v45 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v44);
  id v46 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v45 + 8);
  uint64_t v47 = v43;
  uint64_t v48 = v45;
  uint64_t v49 = v20;
  v46(v75, v44, v48);
  uint64_t v50 = v47;
  uint64_t v51 = type metadata accessor for ContactGroupResolver(0LL);
  OUTLINED_FUNCTION_94_13(v51, (uint64_t)&protocol witness table for ContactGroupResolver);
  ContactGroupResolver.init()();
  OUTLINED_FUNCTION_91_14();
  OUTLINED_FUNCTION_92_12();
  uint64_t v52 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411160, 96LL);
  OUTLINED_FUNCTION_52_25(v52);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  uint64_t v53 = v65[1];
  OUTLINED_FUNCTION_28_49((uint64_t)partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:));
  __swift_destroy_boxed_opaque_existential_1(&v74);
  __swift_destroy_boxed_opaque_existential_1(v75);
  uint64_t v54 = v66;
  uint64_t v55 = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v66, v53, v67);
  uint64_t v56 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v57 = (v56 + 16) & ~v56;
  uint64_t v58 = swift_allocObject(&unk_411188, v57 + v36, v56 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v58 + v57, v54, v55);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallGroupConversationFilter?);
  uint64_t v60 = v68;
  OUTLINED_FUNCTION_28_49((uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo29INCallGroupConversationFilterCSgRs_rlE11transformer04callkC0ACyAdE_pAHGACySayAD03SmsK0_pGSaySo0jK0CGSgG_tFZAhdE_pKcfU_TA_0);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v53, v55);
  v73[2] = v60;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INJoinCallIntentExport);
  __int128 v62 = v59;
  __int128 v63 = v69;
  Reducer.init(builder:)( partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v73,  v62,  v61);
  Reducer.reduce.getter(v63);
  OUTLINED_FUNCTION_57_23();
  v75[0] = v50;
  OUTLINED_FUNCTION_71_18(v64);
  swift_release(v49);
  if (v21)
  {

    OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));
    OUTLINED_FUNCTION_11_48(v60, *(uint64_t (**)(uint64_t, void))(v70 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));

    OUTLINED_FUNCTION_11_48(v60, *(uint64_t (**)(uint64_t, void))(v70 + 8));
    *(void *)v65[0] = v50;
  }

  OUTLINED_FUNCTION_7_1();
}

{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t *);
  uint64_t v43;
  uint64_t v44;
  id v45;
  os_log_s *v46;
  uint64_t v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  int v59;
  void *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  OUTLINED_FUNCTION_17_1();
  a19 = v22;
  a20 = v23;
  __int128 v65 = v24;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v64 = v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INAddCallParticipantIntentExport>);
  __int128 v67 = *(void *)(v30 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v32 = (char *)&v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v35 = [objc_allocWithZone(INAddCallParticipantIntent) init];
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v28, v26);
  uint64_t v36 = v35;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  Transformer.init(transform:)(closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:), 0LL, v37);
  uint64_t v69 = v21;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantIntentExport);
  uint64_t v40 = v38;
  uint64_t v41 = v30;
  Reducer.init(builder:)( partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  &v68,  v40,  v39);
  OUTLINED_FUNCTION_58_20();
  OUTLINED_FUNCTION_57_23();
  a10 = (uint64_t)v36;
  v42(v65, &a10);
  if (v20)
  {
    OUTLINED_FUNCTION_38_1();

    (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v30);
    OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  }

  else
  {
    __int128 v62 = v32;
    __int128 v63 = v33;
    __int128 v65 = v34;
    uint64_t v66 = v21;
    id v43 = v67;
    OUTLINED_FUNCTION_38_1();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v44 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
    uint64_t v45 = v36;
    id v46 = (os_log_s *)Logger.logObject.getter(v45);
    uint64_t v48 = static os_log_type_t.debug.getter(v46, v47);
    uint64_t v49 = v48;
    if (os_log_type_enabled(v46, v48))
    {
      uint64_t v50 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v60 = (void *)OUTLINED_FUNCTION_7_0(8LL);
      uint64_t v51 = OUTLINED_FUNCTION_7_0(32LL);
      a10 = v51;
      *(_DWORD *)uint64_t v50 = 136315394;
      uint64_t v59 = v49;
      os_log_type_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAddCallParticipantIntent>);
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAddCallParticipantIntent>.Type);
      uint64_t v61 = v41;
      uint64_t v53 = String.init<A>(describing:)(&v70, v52);
      os_log_type_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &a10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &a9, v50 + 4, v50 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2112;
      os_log_type_t v70 = (uint64_t)v45;
      uint64_t v55 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &a9, v50 + 14, v50 + 22);
      uint64_t v56 = (uint64_t)v60;
      *uint64_t v60 = v45;

      _os_log_impl(&dword_0, v46, (os_log_type_t)v59, "%s --> %@", (uint8_t *)v50, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy(v56, 1LL);
      OUTLINED_FUNCTION_0_2(v56);
      swift_arrayDestroy(v51, 1LL);
      OUTLINED_FUNCTION_0_2(v51);
      OUTLINED_FUNCTION_0_2(v50);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v61);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v43 + 8))(v62, v30);
    }

    uint64_t v57 = v64;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v63);
    *uint64_t v57 = v45;
  }

  OUTLINED_FUNCTION_7_1();
}

id key path getter for INJoinCallIntentExport.groupConversationFilter : INJoinCallIntentExport@<X0>( id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 groupConversationFilter];
  *a2 = result;
  return result;
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v145)(__int128 *__return_ptr, void *);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t, void);
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  void v181[2];
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _BYTE v186[24];
  uint64_t v187;
  _BYTE v188[24];
  uint64_t v189;
  void v190[3];
  uint64_t v191;
  __int128 v192;
  uint64_t v193;
  _BYTE v194[16];
  uint64_t v195;
  OUTLINED_FUNCTION_17_1();
  a19 = v22;
  a20 = v23;
  uint64_t v182 = v20;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v156 = v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartCallIntent>);
  OUTLINED_FUNCTION_16_2(v33, (uint64_t)v181);
  OUTLINED_FUNCTION_15_40(v34);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v35);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_16_2(v36, (uint64_t)&v182);
  OUTLINED_FUNCTION_15_40(v37);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v38);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordFilter?>);
  OUTLINED_FUNCTION_16_2(v39, (uint64_t)&v185);
  OUTLINED_FUNCTION_15_40(v40);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v41);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallCapability>);
  OUTLINED_FUNCTION_16_2(v42, (uint64_t)&v187);
  OUTLINED_FUNCTION_15_40(v43);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v44);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAudioCallTTYType>);
  OUTLINED_FUNCTION_16_2(v45, (uint64_t)&v189);
  OUTLINED_FUNCTION_15_40(v46);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v47);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_16_2(v48, (uint64_t)&v191);
  OUTLINED_FUNCTION_15_40(v49);
  __chkstk_darwin();
  OUTLINED_FUNCTION_26((uint64_t)&v150 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_16_2(v51, (uint64_t)&v193);
  OUTLINED_FUNCTION_15_40(v52);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v53);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  OUTLINED_FUNCTION_16_2(v54, (uint64_t)&a11);
  OUTLINED_FUNCTION_15_40(v55);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v56);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v195 = *(void *)(v57 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v59 = (char *)&v150 - v58;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_16_2(v60, (uint64_t)&a15);
  OUTLINED_FUNCTION_15_40(v61);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  id v62 = [objc_allocWithZone(INStartCallIntent) init];
  uint64_t v171 = v29;
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v29, v27);
  uint64_t v169 = v25;
  outlined init with copy of SignalProviding((uint64_t)v25, (uint64_t)&v192);
  uint64_t v63 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411278, 64LL);
  OUTLINED_FUNCTION_62_4(v63);
  *(void *)(v63 + 56) = v27;
  id v64 = v27;
  __int128 v65 = v62;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_73_24();
  Transformer.init(transform:)( _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So07INStarteS0C_TGm5TA_0,  v63,  v66);
  uint64_t v184 = v21;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  OUTLINED_FUNCTION_22_49( (uint64_t)partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  (uint64_t)&v183,  v66);
  Reducer.reduce.getter(v57);
  OUTLINED_FUNCTION_33_48();
  *(void *)(v68 - 256) = v31;
  OUTLINED_FUNCTION_71_18(v69);
  if (!v20)
  {
    unint64_t v155 = v59;
    uint64_t v182 = v21;
    OUTLINED_FUNCTION_38_1();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
    OUTLINED_FUNCTION_82_16();
    OUTLINED_FUNCTION_50_26(v72);
    OUTLINED_FUNCTION_17_57();
    __chkstk_darwin();
    OUTLINED_FUNCTION_96_7();
    uint64_t v73 = v179;
    OUTLINED_FUNCTION_22_49( (uint64_t)partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v74,  v66);
    Reducer.reduce.getter(v57);
    OUTLINED_FUNCTION_33_48();
    OUTLINED_FUNCTION_56_21(v75);
    uint64_t v21 = (uint64_t)v65;
    swift_release(v73);
    type metadata accessor for INCallDestinationType(0LL);
    OUTLINED_FUNCTION_64_20();
    Transformer.init(transform:)(v77, v78, v66);
    OUTLINED_FUNCTION_17_57();
    __chkstk_darwin();
    OUTLINED_FUNCTION_12_75();
    uint64_t v153 = v67;
    OUTLINED_FUNCTION_76_18( (uint64_t)partial apply for closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v79,  v66);
    unint64_t v154 = v57;
    OUTLINED_FUNCTION_95_12();
    OUTLINED_FUNCTION_57_23();
    *(void *)&uint64_t v192 = v65;
    OUTLINED_FUNCTION_56_21(v80);
    OUTLINED_FUNCTION_38_1();
    uint64_t v81 = v66;
    uint64_t v82 = v169;
    outlined init with copy of SignalProviding((uint64_t)v169, (uint64_t)&v192);
    uint64_t v83 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4112A0, 64LL);
    outlined init with take of AppSelectionSignalComponent(&v192, v83 + 16);
    *(void *)(v83 + 56) = v171;
    type metadata accessor for INPreferredCallProvider(0LL);
    uint64_t v85 = v84;
    swift_retain();
    OUTLINED_FUNCTION_78_20();
    OUTLINED_FUNCTION_89_15(v86, v87, v88);
    OUTLINED_FUNCTION_17_57();
    __chkstk_darwin();
    OUTLINED_FUNCTION_12_75();
    uint64_t v89 = v172;
    uint64_t v151 = v81;
    OUTLINED_FUNCTION_76_18( (uint64_t)partial apply for closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v90,  v81);
    uint64_t v91 = OUTLINED_FUNCTION_70_17();
    uint64_t v92 = (uint64_t (*)(void))Reducer.reduce.getter(v91);
    uint64_t v94 = v93;
    uint64_t v152 = v65;
    *(void *)&uint64_t v192 = v65;
    OUTLINED_FUNCTION_56_21(v92);
    uint64_t v95 = v174;
    uint64_t v96 = v175;
    if (v85)
    {
      OUTLINED_FUNCTION_59_18();
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_85_13();
      OUTLINED_FUNCTION_5_89(v89);
      OUTLINED_FUNCTION_0_92((uint64_t)v194);
      OUTLINED_FUNCTION_0_92((uint64_t)&a12);
      OUTLINED_FUNCTION_0_92((uint64_t)&v177);

      uint64_t v97 = OUTLINED_FUNCTION_30_40();
      OUTLINED_FUNCTION_11_48(v97, v98);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v176, v95);
    }

    else
    {
      uint64_t v101 = v82;
      OUTLINED_FUNCTION_38_1();
      type metadata accessor for INAudioCallTTYType(0LL);
      OUTLINED_FUNCTION_64_20();
      uint64_t v102 = v151;
      Transformer.init(transform:)(v103, v104, v151);
      OUTLINED_FUNCTION_17_57();
      __chkstk_darwin();
      OUTLINED_FUNCTION_12_75();
      OUTLINED_FUNCTION_76_18( (uint64_t)partial apply for closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v105,  v102);
      OUTLINED_FUNCTION_70_17();
      uint64_t v106 = (uint64_t (*)(void, uint64_t))OUTLINED_FUNCTION_95_12();
      OUTLINED_FUNCTION_25_49(v106);
      uint64_t v107 = v170;
      __int128 v108 = v180;
      OUTLINED_FUNCTION_38_1();
      outlined init with copy of SignalProviding((uint64_t)v101, (uint64_t)&v192);
      uint64_t v109 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4112C8, 64LL);
      OUTLINED_FUNCTION_83_20(v109);
      *(void *)(v94 + 56) = v21;
      type metadata accessor for INCallCapability(0LL);
      uint64_t v111 = v110;
      swift_retain();
      uint64_t v21 = v165;
      OUTLINED_FUNCTION_89_15( (uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallCapabilityVRs_rlE11transformer13sharedGlobals14previousIntent3appACyAdE_pAGGAD06SharedN9Providing_p_So8INIntentCSg0A13AppResolution0U0CSgtFZAgdE_pcfU_TA_0,  v94,  v102);
      OUTLINED_FUNCTION_17_57();
      __chkstk_darwin();
      OUTLINED_FUNCTION_12_75();
      OUTLINED_FUNCTION_82_16();
      OUTLINED_FUNCTION_76_18(v112, v113, v102);
      uint64_t v114 = OUTLINED_FUNCTION_70_17();
      uint64_t v115 = (uint64_t (*)(void, uint64_t))Reducer.reduce.getter(v114);
      OUTLINED_FUNCTION_25_49(v115);
      uint64_t v150 = v111;
      if (v111)
      {
        OUTLINED_FUNCTION_59_18();
        OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_85_13();
        OUTLINED_FUNCTION_5_89(v107);
        OUTLINED_FUNCTION_0_92((uint64_t)v190);
        OUTLINED_FUNCTION_0_92((uint64_t)&v192);
        OUTLINED_FUNCTION_0_92((uint64_t)v194);
        OUTLINED_FUNCTION_0_92((uint64_t)&a12);
        OUTLINED_FUNCTION_0_92((uint64_t)&v177);

        uint64_t v116 = OUTLINED_FUNCTION_30_40();
        OUTLINED_FUNCTION_11_48(v116, v117);
        OUTLINED_FUNCTION_11_48(v167, *(uint64_t (**)(uint64_t, void))(v166 + 8));
        OUTLINED_FUNCTION_11_48(v173, *(uint64_t (**)(uint64_t, void))(v168 + 8));
        OUTLINED_FUNCTION_11_48(v176, *(uint64_t (**)(uint64_t, void))(v175 + 8));
        uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v177 + 8);
        uint64_t v99 = (uint64_t)v108;
        uint64_t v76 = v178;
        goto LABEL_4;
      }

      uint64_t v118 = v102;
      OUTLINED_FUNCTION_38_1();
      uint64_t v119 = v152;
      [v152 setCallRecordToCallBack:0];
      __swift_project_boxed_opaque_existential_1(v101, v101[3]);
      OUTLINED_FUNCTION_45_26();
      id v120 = [v119 callCapability];
      id v121 = [v119 contacts];
      if (v121)
      {
        BOOL v122 = v121;
        uint64_t v123 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
        uint64_t v124 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v122, v123);
      }

      else
      {
        uint64_t v124 = 0LL;
      }

      uint64_t v125 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4112F0, 32LL);
      *(void *)(v125 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v120;
      *(void *)(v125 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v124;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
      Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(device:callCapability:participants:),  v125,  v118);
      __swift_destroy_boxed_opaque_existential_1(&v192);
      OUTLINED_FUNCTION_17_57();
      __chkstk_darwin();
      OUTLINED_FUNCTION_97_13();
      OUTLINED_FUNCTION_22_49( (uint64_t)partial apply for closure #7 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v126,  v118);
      uint64_t v127 = v154;
      Reducer.reduce.getter(v154);
      OUTLINED_FUNCTION_33_48();
      uint64_t v129 = *(void **)(v128 - 256);
      OUTLINED_FUNCTION_71_18(v130);
      uint64_t v131 = v178;
      uint64_t v150 = 0LL;
      OUTLINED_FUNCTION_38_1();
      __swift_project_boxed_opaque_existential_1(v169, v169[3]);
      OUTLINED_FUNCTION_45_26();
      uint64_t v132 = type metadata accessor for ContactGroupResolver(0LL);
      OUTLINED_FUNCTION_94_13(v132, (uint64_t)&protocol witness table for ContactGroupResolver);
      ContactGroupResolver.init()();
      OUTLINED_FUNCTION_91_14();
      OUTLINED_FUNCTION_92_12();
      uint64_t v133 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411318, 96LL);
      OUTLINED_FUNCTION_52_25(v133);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
      OUTLINED_FUNCTION_78_20();
      Transformer.init(transform:)(v134, v135, v136);
      __swift_destroy_boxed_opaque_existential_1(v190);
      __swift_destroy_boxed_opaque_existential_1(&v192);
      OUTLINED_FUNCTION_17_57();
      __chkstk_darwin();
      OUTLINED_FUNCTION_12_75();
      OUTLINED_FUNCTION_93_12();
      OUTLINED_FUNCTION_22_49(v137, v138, v118);
      Reducer.reduce.getter(v127);
      OUTLINED_FUNCTION_57_23();
      *(void *)&uint64_t v192 = v119;
      OUTLINED_FUNCTION_71_18(v139);
      uint64_t v150 = 0LL;
      OUTLINED_FUNCTION_38_1();
      uint64_t v140 = v129[3];
      __swift_project_boxed_opaque_existential_1(v129, v140);
      Swift::Bool v141 = PhoneCallNLIntent.isGroupFaceTimeCall()();
      INStartCallIntent.updateIsGroupCall(isGroupCall:)(v141);
      outlined init with copy of SignalProviding((uint64_t)v169, (uint64_t)&v192);
      uint64_t v142 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411340, 72LL);
      OUTLINED_FUNCTION_83_20(v142);
      v119[7] = v119;
      v119[8] = v140;
      type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
      uint64_t v143 = v119;
      swift_retain();
      OUTLINED_FUNCTION_93_12();
      Transformer.init(transform:)(v144, v119, v118);
      uint64_t v21 = v158;
      uint64_t v145 = (void (*)(__int128 *__return_ptr, void *))Transformer.transform.getter(v158);
      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v131, v21);
      uint64_t v146 = v150;
      v145(&v192, v129);
      if (!v146)
      {

        OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_5_89(v160);
        OUTLINED_FUNCTION_0_92((uint64_t)v186);
        OUTLINED_FUNCTION_0_92((uint64_t)v188);
        OUTLINED_FUNCTION_0_92((uint64_t)v190);
        OUTLINED_FUNCTION_0_92((uint64_t)&v192);
        OUTLINED_FUNCTION_0_92((uint64_t)v194);
        OUTLINED_FUNCTION_0_92((uint64_t)&a12);
        OUTLINED_FUNCTION_0_92((uint64_t)&v177);
        uint64_t v147 = v192;
        OUTLINED_FUNCTION_11_48(v161, *(uint64_t (**)(uint64_t, void))(v159 + 8));
        OUTLINED_FUNCTION_11_48(v163, *(uint64_t (**)(uint64_t, void))(v162 + 8));
        OUTLINED_FUNCTION_11_48(v165, *(uint64_t (**)(uint64_t, void))(v164 + 8));
        OUTLINED_FUNCTION_11_48(v167, *(uint64_t (**)(uint64_t, void))(v166 + 8));
        OUTLINED_FUNCTION_11_48(v173, *(uint64_t (**)(uint64_t, void))(v168 + 8));
        OUTLINED_FUNCTION_11_48(v176, *(uint64_t (**)(uint64_t, void))(v175 + 8));
        uint64_t v148 = OUTLINED_FUNCTION_19_54();
        OUTLINED_FUNCTION_11_48(v148, v149);
        OUTLINED_FUNCTION_11_48(v182, *(uint64_t (**)(uint64_t, void))(v181[0] + 8LL));
        *uint64_t v156 = v147;
        goto LABEL_6;
      }

      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_5_89(v160);
      OUTLINED_FUNCTION_0_92((uint64_t)v186);
      OUTLINED_FUNCTION_0_92((uint64_t)v188);
      OUTLINED_FUNCTION_0_92((uint64_t)v190);
      OUTLINED_FUNCTION_0_92((uint64_t)&v192);
      OUTLINED_FUNCTION_0_92((uint64_t)v194);
      OUTLINED_FUNCTION_0_92((uint64_t)&a12);
      OUTLINED_FUNCTION_0_92((uint64_t)&v177);
      OUTLINED_FUNCTION_11_48(v161, *(uint64_t (**)(uint64_t, void))(v159 + 8));
      OUTLINED_FUNCTION_11_48(v163, *(uint64_t (**)(uint64_t, void))(v162 + 8));
      OUTLINED_FUNCTION_11_48(v165, *(uint64_t (**)(uint64_t, void))(v164 + 8));
      OUTLINED_FUNCTION_11_48(v167, *(uint64_t (**)(uint64_t, void))(v166 + 8));
      OUTLINED_FUNCTION_11_48(v173, *(uint64_t (**)(uint64_t, void))(v168 + 8));
      (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v176, v174);
    }

    uint64_t v99 = OUTLINED_FUNCTION_19_54();
    uint64_t v76 = v178;
LABEL_4:
    v100(v99, v76);
    OUTLINED_FUNCTION_51_18();
    goto LABEL_5;
  }

  OUTLINED_FUNCTION_38_1();

  (*(void (**)(char *, uint64_t))(v195 + 8))(v59, v57);
  uint64_t v70 = v181[1];
  uint64_t v71 = v181[0];
LABEL_5:
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v21, v70);
LABEL_6:
  OUTLINED_FUNCTION_7_1();
}

{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, void *);
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void (*v66)(uint64_t, void *);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(void, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void, uint64_t);
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void v118[3];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  OUTLINED_FUNCTION_17_1();
  a19 = v22;
  a20 = v23;
  uint64_t v113 = (char *)v21;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  id v121 = v30;
  uint64_t v94 = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAudioCallTTYType>);
  OUTLINED_FUNCTION_16_2(v32, (uint64_t)&v119);
  OUTLINED_FUNCTION_15_40(v33);
  __chkstk_darwin();
  OUTLINED_FUNCTION_26((uint64_t)&v91 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordType>);
  OUTLINED_FUNCTION_16_2(v35, (uint64_t)&v120);
  OUTLINED_FUNCTION_15_40(v36);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v37);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_16_2(v38, (uint64_t)&a12);
  OUTLINED_FUNCTION_15_40(v39);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v40);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_16_2(v41, (uint64_t)&a18);
  OUTLINED_FUNCTION_15_40(v42);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v106 = v43;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  uint64_t v104 = *(void *)(v44 - 8);
  uint64_t v105 = v44;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v107 = v45;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v49 = (char *)&v91 - v48;
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  __int128 v108 = v50;
  __chkstk_darwin();
  uint64_t v52 = (char *)&v91 - v51;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v111 = *(void *)(v53 - 8);
  uint64_t v112 = v53;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_31();
  uint64_t v54 = [objc_allocWithZone(INStartAudioCallIntent) init];
  uint64_t v101 = v29;
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v29, v27);
  uint64_t v100 = v25;
  outlined init with copy of SignalProviding(v25, (uint64_t)v118);
  uint64_t v55 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411228, 64LL);
  OUTLINED_FUNCTION_62_4(v55);
  *(void *)(v55 + 56) = v27;
  uint64_t v56 = v27;
  uint64_t v57 = v54;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_73_24();
  Transformer.init(transform:)( partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:),  v55,  v58);
  uint64_t v110 = v20;
  uint64_t v117 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  uint64_t v109 = v58;
  OUTLINED_FUNCTION_22_49( (uint64_t)partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  (uint64_t)&v116,  v58);
  uint64_t v115 = v46;
  OUTLINED_FUNCTION_53_25();
  OUTLINED_FUNCTION_57_23();
  uint64_t v114 = v57;
  v118[0] = v57;
  uint64_t v59 = (uint64_t)v113;
  v60(v121, v118);
  if (v59)
  {
    OUTLINED_FUNCTION_38_1();
    uint64_t v61 = v114;

    (*(void (**)(char *, uint64_t))(v47 + 8))(v52, v115);
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v112);
    goto LABEL_7;
  }

  uint64_t v93 = v47;
  uint64_t v92 = v49;
  uint64_t v113 = v52;
  id v62 = v106;
  OUTLINED_FUNCTION_38_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  OUTLINED_FUNCTION_50_26((uint64_t)closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:));
  OUTLINED_FUNCTION_17_57();
  __chkstk_darwin();
  OUTLINED_FUNCTION_97_13();
  OUTLINED_FUNCTION_22_49( (uint64_t)partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v63,  v109);
  id v64 = v115;
  Reducer.reduce.getter(v115);
  OUTLINED_FUNCTION_57_23();
  __int128 v65 = v114;
  v118[0] = v114;
  v66(v121, v118);
  OUTLINED_FUNCTION_38_1();
  type metadata accessor for INCallDestinationType(0LL);
  uint64_t v67 = v109;
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:),  0LL,  v109);
  OUTLINED_FUNCTION_17_57();
  __chkstk_darwin();
  OUTLINED_FUNCTION_96_7();
  OUTLINED_FUNCTION_82_16();
  OUTLINED_FUNCTION_22_49(v68, v69, v67);
  uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t))OUTLINED_FUNCTION_53_25();
  OUTLINED_FUNCTION_37_36(v70);
  OUTLINED_FUNCTION_38_1();
  outlined init with copy of SignalProviding(v100, (uint64_t)v118);
  uint64_t v71 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411250, 64LL);
  OUTLINED_FUNCTION_62_4(v71);
  *(void *)(v71 + 56) = v101;
  type metadata accessor for INPreferredCallProvider(0LL);
  uint64_t v73 = v72;
  OUTLINED_FUNCTION_95();
  uint64_t v74 = v102;
  uint64_t v75 = v109;
  OUTLINED_FUNCTION_89_15( (uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo011INPreferredE8ProviderVRs_rlE11transformer13sharedGlobals3app14previousIntentACyAdE_pAGGAD06SharedN9Providing_p_0A13AppResolution0T0CSgSo8INIntentCSgtFZAgdE_pcfU_TA_0,  v71,  v109);
  OUTLINED_FUNCTION_17_57();
  __chkstk_darwin();
  *(&v91 - 2) = v74;
  OUTLINED_FUNCTION_82_16();
  OUTLINED_FUNCTION_22_49(v76, v77, v75);
  uint64_t v78 = (uint64_t (*)(uint64_t, uint64_t))OUTLINED_FUNCTION_53_25();
  OUTLINED_FUNCTION_37_36(v78);
  if (v73)
  {

    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_27_51(v62);
    OUTLINED_FUNCTION_27_51((uint64_t)v92);
    OUTLINED_FUNCTION_27_51(v108);
    OUTLINED_FUNCTION_27_51((uint64_t)v113);

    OUTLINED_FUNCTION_11_48(v74, *(uint64_t (**)(uint64_t, void))(v99 + 8));
    OUTLINED_FUNCTION_11_48(v106, *(uint64_t (**)(uint64_t, void))(v103 + 8));
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v107, v105);
    goto LABEL_6;
  }

  OUTLINED_FUNCTION_38_1();
  type metadata accessor for INCallRecordType(0LL);
  OUTLINED_FUNCTION_93_12();
  uint64_t v79 = v109;
  Transformer.init(transform:)(v80, 0LL, v109);
  OUTLINED_FUNCTION_17_57();
  __chkstk_darwin();
  *(&v91 - 2) = v64;
  OUTLINED_FUNCTION_22_49( (uint64_t)partial apply for closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  (uint64_t)(&v91 - 4),  v79);
  uint64_t v81 = (uint64_t (*)(void, uint64_t))OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_38_33(v81);
  OUTLINED_FUNCTION_38_1();
  type metadata accessor for INAudioCallTTYType(0LL);
  OUTLINED_FUNCTION_64_20();
  uint64_t v82 = v109;
  Transformer.init(transform:)(v83, v84, v109);
  OUTLINED_FUNCTION_17_57();
  __chkstk_darwin();
  OUTLINED_FUNCTION_12_75();
  OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_22_49(v85, v86, v82);
  uint64_t v87 = (uint64_t (*)(void, uint64_t))Reducer.reduce.getter(v115);
  OUTLINED_FUNCTION_38_33(v87);
  uint64_t v88 = v105;
  uint64_t v89 = v107;
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_10_68(v64);
  OUTLINED_FUNCTION_10_68(v97);
  OUTLINED_FUNCTION_10_68(v62);
  OUTLINED_FUNCTION_10_68((uint64_t)v92);
  OUTLINED_FUNCTION_10_68(v108);
  OUTLINED_FUNCTION_10_68((uint64_t)v113);
  uint64_t v90 = v114;

  OUTLINED_FUNCTION_11_48(v79, *(uint64_t (**)(uint64_t, void))(v95 + 8));
  OUTLINED_FUNCTION_11_48(v98, *(uint64_t (**)(uint64_t, void))(v96 + 8));
  OUTLINED_FUNCTION_36_34();
  OUTLINED_FUNCTION_11_48(v106, *(uint64_t (**)(uint64_t, void))(v103 + 8));
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v89, v88);
  (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v112);
  *uint64_t v94 = v90;
LABEL_7:
  OUTLINED_FUNCTION_7_1();
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  uint64_t v21 = v0;
  OUTLINED_FUNCTION_88_19();
  v20[0] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  v20[3] = *(void *)(v5 - 8);
  v20[4] = v5;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_48_28(v7, v20[0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartVideoCallIntentExport>);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_41_33(v9, v20[0]);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v22 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>)
                  - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_135();
  [objc_allocWithZone(INStartVideoCallIntent) init];
  OUTLINED_FUNCTION_46_30();
  OUTLINED_FUNCTION_28_33();
  uint64_t v14 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_411200, 64LL);
  OUTLINED_FUNCTION_69_20(v14);
  id v15 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_73_24();
  OUTLINED_FUNCTION_28_49((uint64_t)partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:));
  uint64_t v24 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntentExport);
  OUTLINED_FUNCTION_40_27( (uint64_t)partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  (uint64_t)&v23);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))OUTLINED_FUNCTION_86_11();
  OUTLINED_FUNCTION_34_33(v16);
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();

    OUTLINED_FUNCTION_72_24();
    OUTLINED_FUNCTION_15_68();
  }

  else
  {
    uint64_t v21 = v3;
    OUTLINED_FUNCTION_38_1();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
    OUTLINED_FUNCTION_50_26((uint64_t)closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:));
    OUTLINED_FUNCTION_17_57();
    __chkstk_darwin(v17);
    OUTLINED_FUNCTION_98_11();
    OUTLINED_FUNCTION_40_27( (uint64_t)partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v18);
    uint64_t v19 = (uint64_t (*)(void, uint64_t))OUTLINED_FUNCTION_58_20();
    OUTLINED_FUNCTION_39_28(v19);
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_16_52();
    OUTLINED_FUNCTION_130((uint64_t)v12);

    OUTLINED_FUNCTION_23_52();
    OUTLINED_FUNCTION_15_68();
    *(void *)v20[0] = v15;
  }

  OUTLINED_FUNCTION_7_1();
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  id v6 = [objc_allocWithZone(INIdentifyIncomingCallerIntent) init];
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(a1, a2);
  *a3 = v6;
}

void closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)( uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v11)(void *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  void v17[5];
  uint64_t v9 = *a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  uint64_t v11 = (void (*)(void *__return_ptr, uint64_t))Transformer.transform.getter(v10);
  uint64_t v13 = v12;
  v11(v17, a1);
  if (v5)
  {
    swift_release(v13);
    return;
  }

  swift_release(v13);
  uint64_t v14 = v17[1];
  outlined init with copy of SignalProviding(a4, (uint64_t)v17);
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1(v17);
  }

  else
  {
    static Transformer<>.getCallIdentifierFromCallNotifications(sharedGlobals:app:)(v17, a5);
    uint64_t v14 = v15;
    __swift_destroy_boxed_opaque_existential_1(v17);
    if (!v14)
    {
      uint64_t v16 = 0LL;
      goto LABEL_7;
    }
  }

  uint64_t v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
LABEL_7:
  [v9 setCallIdentifier:v16];
}

uint64_t static Transformer<>.getCallIdentifierFromCallNotifications(sharedGlobals:app:)( void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 160LL))(v6);
  swift_release(v6);
  uint64_t v7 = 0LL;
  if ((v4 & 1) != 0 && a2)
  {
    swift_retain();
    if (!App.isFirstParty()())
    {
      uint64_t v8 = a1[3];
      uint64_t v9 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v8);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(v8, v9);
      if (!v7)
      {
        swift_release(a2);
        return v7;
      }

      uint64_t v10 = CurrentRequest.refId.getter();
      uint64_t v12 = v11;
      swift_release(v7);
      if (v12)
      {
        uint64_t v13 = a1[3];
        uint64_t v14 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v13);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 160))(v23, v13, v14);
        uint64_t v15 = v24;
        uint64_t v16 = v25;
        __swift_project_boxed_opaque_existential_1(v23, v24);
        char v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16))(v10, v12, v15, v16);
        __swift_destroy_boxed_opaque_existential_1(v23);
        if ((v17 & 1) != 0)
        {
          uint64_t v18 = a1[3];
          uint64_t v19 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v18);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 160))(v23, v18, v19);
          uint64_t v20 = v24;
          uint64_t v21 = v25;
          __swift_project_boxed_opaque_existential_1(v23, v24);
          uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 32))(v10, v12, v20, v21);
          swift_bridgeObjectRelease(v12);
          swift_release(a2);
          __swift_destroy_boxed_opaque_existential_1(v23);
          return v7;
        }

        swift_bridgeObjectRelease(v12);
      }
    }

    swift_release(a2);
    return 0LL;
  }

  return v7;
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:)@<X0>( uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v36 = a2;
    uint64_t v37 = v2;
    uint64_t v45 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    uint64_t v12 = v9 + 32;
    do
    {
      outlined init with copy of SignalProviding(v12, (uint64_t)v42);
      static Signpost.begin(_:)();
      uint64_t v14 = v13;
      uint64_t v40 = v16;
      uint64_t v41 = v15;
      int v39 = v17;
      id v18 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
      id v38 = @nonobjc INPersonHandle.init(value:type:)(0LL, 0LL, 0LL);
      uint64_t v19 = type metadata accessor for PersonNameComponents(0LL);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 1LL, 1LL, v19);
      uint64_t v21 = v43;
      uint64_t v20 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 408))(v21, v20);
      uint64_t v24 = v23;
      uint64_t v26 = v43;
      uint64_t v25 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v26, v25);
      uint64_t v29 = v28;
      id v30 = objc_allocWithZone(&OBJC_CLASS___INPerson);
      id v31 = @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:)( v38,  (uint64_t)v8,  v22,  v24,  0LL,  v27,  v29,  0LL,  0LL,  0LL);
      Signpost.OpenSignpost.end()();
      swift_release(v14);
      uint64_t v32 = __swift_destroy_boxed_opaque_existential_1(v42);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v32);
      uint64_t v33 = v45[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
      uint64_t v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
      uint64_t result = specialized ContiguousArray._endMutation()(v34);
      v12 += 40LL;
      --v10;
    }

    while (v10);
    uint64_t v11 = v45;
    a2 = v36;
  }

  *a2 = v11;
  return result;
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v2;
  *a1 = 0LL;
  Signpost.OpenSignpost.end()();
  return swift_release(v3);
}

void closure #1 in static Transformer<>.transformer(app:)()
{
  uint64_t v2 = v1;
  v17[1] = v3;
  uint64_t v4 = type metadata accessor for Parse(0LL);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  v17[0] = v11;
  uint64_t ObjectType = swift_getObjectType(v7);
  unsigned __int8 v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(ObjectType, v8);
  uint64_t v14 = FollowUpOfferType.rawValue.getter(v13);
  if (v14 == 0xD000000000000011LL && v15 == 0x8000000000343650LL)
  {
    swift_bridgeObjectRelease();
  }

  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0xD000000000000011LL, 0x8000000000343650LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      static PhoneCallNLv3Intent.placeCall()((uint64_t)v6);
      goto LABEL_7;
    }
  }

  static PhoneCallNLv3Intent.placeCallBack()((uint64_t)v6);
LABEL_7:
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v6, enum case for Parse.NLv3IntentOnly(_:), v4);
  Input.init(parse:)(v6);
  Signpost.OpenSignpost.end()();
  swift_release(v10);
  OUTLINED_FUNCTION_7_1();
}

uint64_t partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)()
{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(*(void *)(v0 + 16));
}

const char *keypath_get_selector_participants()
{
  return "participants";
}

void sub_251884(uint64_t a1)
{
}

void sub_2518B0(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_2518E0()
{
  uint64_t v3 = v1 + v2;
  uint64_t v5 = v4 | 7;
  OUTLINED_FUNCTION_147_2(v6);
  return swift_deallocObject(v0, v3, v5);
}

void _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo29INCallGroupConversationFilterCSgRs_rlE11transformer04callkC0ACyAdE_pAHGACySayAD03SmsK0_pGSaySo0jK0CGSgG_tFZAhdE_pKcfU_TA_0( void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>)
                                      - 8)
                          + 80LL);
  closure #1 in static Transformer<>.transformer(callGroupTransformer:)(a1, v2 + ((v5 + 16) & ~v5), a2);
  OUTLINED_FUNCTION_77_18();
}

const char *keypath_get_selector_groupConversationFilter()
{
  return "groupConversationFilter";
}

id sub_251994(void *a1, id *a2)
{
  return [*a2 setGroupConversationFilter:*a1];
}

void _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So08INAnswereS0C_TGm5TA_0()
{
}

uint64_t partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)()
{
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)(*(void *)(v0 + 16));
}

const char *keypath_get_selector_callIdentifier()
{
  return "callIdentifier";
}

const char *keypath_get_selector_audioRoute()
{
  return "audioRoute";
}

void partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)()
{
}

uint64_t partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

uint64_t partial apply for closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

const char *keypath_get_selector_contacts()
{
  return "contacts";
}

void sub_251A54(uint64_t a1)
{
}

void sub_251A80(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t partial apply for closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

uint64_t _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo011INPreferredE8ProviderVRs_rlE11transformer13sharedGlobals3app14previousIntentACyAdE_pAGGAD06SharedN9Providing_p_0A13AppResolution0T0CSgSo8INIntentCSgtFZAgdE_pcfU_TA_0()
{
  return closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(v0, v1, v2, v3);
}

uint64_t partial apply for closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

uint64_t partial apply for closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

uint64_t partial apply for closure #6 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #6 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  return closure #6 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

const char *keypath_get_selector_ttyType()
{
  return "ttyType";
}

const char *keypath_get_selector_recordTypeForRedialing()
{
  return "recordTypeForRedialing";
}

void sub_251B14(uint64_t a1)
{
  *uint64_t v1 = [(id)OUTLINED_FUNCTION_43_27(a1) recordTypeForRedialing];
  OUTLINED_FUNCTION_2();
}

id sub_251B3C(void *a1, id *a2)
{
  return [*a2 setRecordTypeForRedialing:*a1];
}

const char *keypath_get_selector_preferredCallProvider()
{
  return "preferredCallProvider";
}

const char *keypath_get_selector_destinationType()
{
  return "destinationType";
}

void sub_251B68(uint64_t a1)
{
}

void sub_251B94(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So07INStarteS0C_TGm5TA_0()
{
}

uint64_t _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallCapabilityVRs_rlE11transformer13sharedGlobals14previousIntent3appACyAdE_pAGGAD06SharedN9Providing_p_So8INIntentCSg0A13AppResolution0U0CSgtFZAgdE_pcfU_TA_0()
{
  return closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:app:)(v0, v1, v2, v3);
}

uint64_t sub_251C2C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_251C54()
{
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

const char *keypath_get_selector_callGroups()
{
  return "callGroups";
}

void sub_251C98(uint64_t a1)
{
}

void sub_251CC4(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

const char *keypath_get_selector_callRecordFilter()
{
  return "callRecordFilter";
}

id sub_251D00(void *a1, id *a2)
{
  return [*a2 setCallRecordFilter:*a1];
}

const char *keypath_get_selector_callCapability()
{
  return "callCapability";
}

void sub_251D20(uint64_t a1)
{
  *uint64_t v1 = [(id)OUTLINED_FUNCTION_43_27(a1) callCapability];
  OUTLINED_FUNCTION_2();
}

id sub_251D48(void *a1, id *a2)
{
  return [*a2 setCallCapability:*a1];
}

void sub_251D5C(uint64_t a1)
{
  *uint64_t v1 = [(id)OUTLINED_FUNCTION_43_27(a1) ttyType];
  OUTLINED_FUNCTION_2();
}

id sub_251D84(void *a1, id *a2)
{
  return [*a2 setTTYType:*a1];
}

void sub_251D98(uint64_t a1)
{
  *uint64_t v1 = [(id)OUTLINED_FUNCTION_43_27(a1) preferredCallProvider];
  OUTLINED_FUNCTION_2();
}

id sub_251DC0(void *a1, id *a2)
{
  return [*a2 setPreferredCallProvider:*a1];
}

void sub_251DD4(uint64_t a1)
{
  *uint64_t v1 = [(id)OUTLINED_FUNCTION_43_27(a1) destinationType];
  OUTLINED_FUNCTION_2();
}

id sub_251DFC(void *a1, id *a2)
{
  return [*a2 setDestinationType:*a1];
}

void sub_251E10(uint64_t a1)
{
}

void sub_251E3C(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_251E68(uint64_t a1)
{
  *uint64_t v1 = [(id)OUTLINED_FUNCTION_43_27(a1) audioRoute];
  OUTLINED_FUNCTION_2();
}

id sub_251E90(void *a1, id *a2)
{
  return [*a2 setAudioRoute:*a1];
}

uint64_t sub_251EA4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_251EC8()
{
  uint64_t v2 = v1 | 7;
  unint64_t v5 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8LL;
  OUTLINED_FUNCTION_147_2(v7);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + v5));
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v2);
}

void partial apply for closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)( uint64_t a1, void **a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>)
                 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)( a1,  a2,  v2 + v6,  v2 + v7,  *(void *)(v2 + ((v7 + 47) & 0xFFFFFFFFFFFFF8LL)));
  OUTLINED_FUNCTION_77_18();
}

void closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:)partial apply( uint64_t *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_0_92@<X0>(uint64_t a1@<X8>)
{
  return v1(*(void *)(a1 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_7_95@<X0>(uint64_t a1@<X8>)
{
  return v1(*(void *)(a1 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_10_68(uint64_t a1)
{
  return v1(a1, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_15_68()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 152) + 8LL))(v0, *(void *)(v1 - 72));
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 160) + 8LL))(v1, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_19_54()
{
  return *(void *)(v0 - 304);
}

uint64_t OUTLINED_FUNCTION_22_49(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Reducer.init(builder:)(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_23_52()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 184) + 8LL))( *(void *)(v0 - 168),  *(void *)(v0 - 176));
}

uint64_t OUTLINED_FUNCTION_24_43()
{
  return type metadata accessor for CNContactStore(0LL, v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_51(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Transformer.init(transform:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_28_49(uint64_t a1)
{
  return Transformer.init(transform:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_30_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_43()
{
  return v0;
}

void OUTLINED_FUNCTION_33_48()
{
  *(void *)(v1 - 128) = v0;
}

uint64_t OUTLINED_FUNCTION_34_33(uint64_t (*a1)(uint64_t, uint64_t))
{
  *(void *)(v3 - 120) = v1;
  *(void *)(v3 - 192) = v2;
  return a1(v2, v3 - 120);
}

uint64_t OUTLINED_FUNCTION_35_32()
{
  return Transformer.init(transform:)(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_36_34()
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(v1 - 320) + 8LL))(*(void *)(v1 - 280), v0);
}

uint64_t OUTLINED_FUNCTION_37_36(uint64_t (*a1)(uint64_t, uint64_t))
{
  *(void *)(v3 - 128) = v1;
  return a1(v2, v3 - 128);
}

uint64_t OUTLINED_FUNCTION_38_33(uint64_t (*a1)(void, uint64_t))
{
  *(void *)(v2 - 128) = v1;
  return a1(*(void *)(v2 - 72), v2 - 128);
}

uint64_t OUTLINED_FUNCTION_39_28(uint64_t (*a1)(void, uint64_t))
{
  *(void *)(v2 - 120) = v1;
  return a1(*(void *)(v2 - 192), v2 - 120);
}

void OUTLINED_FUNCTION_41_33(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_43_27(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_44_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45_26()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_46_30()
{
}

void OUTLINED_FUNCTION_48_28(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_50_26(uint64_t a1)
{
  return Transformer.init(transform:)(a1, 0LL, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_52_25(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 248), a1 + 56);
}

uint64_t OUTLINED_FUNCTION_53_25()
{
  return Reducer.reduce.getter(v0);
}

uint64_t OUTLINED_FUNCTION_55_23()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 72) + 8LL))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_56_21@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_58_20()
{
  return Reducer.reduce.getter(v0);
}

void OUTLINED_FUNCTION_59_18()
{
}

uint64_t OUTLINED_FUNCTION_60_25(uint64_t a1, uint64_t a2, ...)
{
  return outlined init with copy of SignalProviding(a1, (uint64_t)va);
}

  ;
}

id OUTLINED_FUNCTION_69_20(uint64_t a1)
{
  *(void *)(a1 + 56) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_70_17()
{
  return *(void *)(v0 - 592);
}

uint64_t OUTLINED_FUNCTION_71_18@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_72_24()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void OUTLINED_FUNCTION_73_24()
{
}

uint64_t OUTLINED_FUNCTION_74_17()
{
  return swift_allocObject(v0, 72LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_75_20()
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 8))(*(void *)(v2 - 144), v0);
}

uint64_t OUTLINED_FUNCTION_76_18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Reducer.init(builder:)(a1, a2, a3, v3);
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_83_20(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 128), a1 + 16);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_86_11()
{
  return Reducer.reduce.getter(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_89_15(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Transformer.init(transform:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_91_14()
{
  return outlined init with copy of SignalProviding(v0 - 128, v0 - 208);
}

uint64_t OUTLINED_FUNCTION_92_12()
{
  return outlined init with copy of SignalProviding(v0 - 168, v0 - 248);
}

  ;
}

void *OUTLINED_FUNCTION_94_13@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(v2 - 136) = a2;
  return __swift_allocate_boxed_opaque_existential_1((void *)(v2 - 168));
}

  ;
}

  ;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.__allocating_init(faceTimeLink:recipients:app:sharedGlobals:startCallCATs:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v15 = (void *)(v14 - v13);
  *uint64_t v15 = a1;
  v15[1] = a2;
  v15[2] = a3;
  swift_storeEnumTagMultiPayload(v14 - v13, v16, 0LL);
  outlined init with copy of SignalProviding((uint64_t)a5, (uint64_t)v19);
  uint64_t v17 = (*(uint64_t (**)(void *, uint64_t, _BYTE *, uint64_t))(v6 + 136))(v15, a4, v19, a6);
  __swift_destroy_boxed_opaque_existential_1(a5);
  return v17;
}

uint64_t type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for MessagesFaceTimeLinkCompletionFlow.State,  (uint64_t)&nominal type descriptor for MessagesFaceTimeLinkCompletionFlow.State);
}

uint64_t specialized static DICodable.adaptUserDataAfterEncoder(_:)(uint64_t result)
{
  uint64_t v1 = result;
  if (one-time initialization token for codableOverrides != -1) {
    uint64_t result = swift_once( &one-time initialization token for codableOverrides,  one-time initialization function for codableOverrides);
  }
  uint64_t v2 = static MessageFlowDirectInvocation.codableOverrides;
  uint64_t v3 = *(void *)(static MessageFlowDirectInvocation.codableOverrides + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(v2 + 56);
    do
    {
      uint64_t v6 = (void (*)(uint64_t))*(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v7 = *v4;
      v4 += 4;
      swift_retain();
      swift_retain();
      v6(v1);
      swift_release(v7);
      swift_release(v5);
      --v3;
    }

    while (v3);
    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t specialized DICodable.toDirectInvocation()()
{
  uint64_t v2 = v0;
  v31[0] = (id)0xD000000000000028LL;
  v31[1] = (id)0x800000000034C980LL;
  v3._countAndFlagsBits = 46LL;
  v3._object = (void *)0xE100000000000000LL;
  String.append(_:)(v3);
  v4._object = (void *)0x800000000034C9B0LL;
  v4._countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v4);
  uint64_t v5 = type metadata accessor for PropertyListEncoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListEncoder.init()();
  uint64_t v7 = type metadata accessor for MessageFlowDirectInvocation(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type MessageFlowDirectInvocation and conformance MessageFlowDirectInvocation,  type metadata accessor for MessageFlowDirectInvocation,  (uint64_t)&protocol conformance descriptor for MessageFlowDirectInvocation);
  uint64_t v9 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v2, v7, v8);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return swift_release(v6);
  }

  else
  {
    uint64_t v12 = v9;
    unint64_t v13 = v10;
    swift_release(v6);
    uint64_t v14 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    v31[0] = 0LL;
    id v16 = [v14 propertyListWithData:isa options:0 format:0 error:v31];

    id v17 = v31[0];
    if (v16)
    {
      id v18 = v31[0];
      _bridgeAnyObjectToAny(_:)(v31, v16);
      swift_unknownObjectRelease(v16);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
      if ((swift_dynamicCast(&v29, v31, &type metadata for Any[1]) & 1) != 0) {
        uint64_t v19 = v29;
      }
      else {
        uint64_t v19 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  &type metadata for Any[1],  &protocol witness table for String);
      }
      uint64_t v30 = v19;
      specialized static DICodable.adaptUserDataAfterEncoder(_:)((uint64_t)&v30);
      outlined consume of Data._Representation(v12, v13);
      return Parse.DirectInvocation.init(identifier:userData:)(0xD000000000000028LL, 0x800000000034C980LL, v30);
    }

    else
    {
      id v20 = v31[0];
      _convertNSErrorToError(_:)(v17);

      swift_willThrow(v21, v22, v23, v24, v25, v26, v27, v28);
      outlined consume of Data._Representation(v12, v13);
      return swift_bridgeObjectRelease();
    }
  }

uint64_t key path setter for MessagesFaceTimeLinkCompletionFlow.state : MessagesFaceTimeLinkCompletionFlow( uint64_t a1, void *a2)
{
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  outlined init with copy of MessagesFaceTimeLinkCompletionFlow.State(a1, (uint64_t)v5);
  uint64_t v6 = *a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
  swift_beginAccess(v6, v9, 33LL, 0LL);
  outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State((uint64_t)v5, v6);
  return swift_endAccess(v9);
}

uint64_t MessagesFaceTimeLinkCompletionFlow.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return outlined init with copy of MessagesFaceTimeLinkCompletionFlow.State(v3, a1);
}

uint64_t outlined init with copy of MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.__allocating_init(state:app:sharedGlobals:startCallCATs:)( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  MessagesFaceTimeLinkCompletionFlow.init(state:app:sharedGlobals:startCallCATs:)(a1, a2, a3, a4);
  return v9;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.init(state:app:sharedGlobals:startCallCATs:)( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a2;
  outlined init with take of AppSelectionSignalComponent(a3, v4 + 24);
  *(void *)(v4 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  return v4;
}

uint64_t outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PhoneError(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = OUTLINED_FUNCTION_19_55();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  (*(void (**)(void))(*(void *)v1 + 112LL))();
  if (swift_getEnumCaseMultiPayload(v10, v7) == 1)
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(a1, v10, v11);
  }

  else
  {
    unint64_t v13 = *(os_log_s **)(v10 + 16);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_62();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v14, (uint64_t)static Logger.siriPhone);
    os_log_type_t v15 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_93(v15))
    {
      id v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)id v16 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v13,  (os_log_type_t)v10,  "#MessagesFaceTimeLinkCompletionFlow Encountered invalid exitValue",  v16);
      OUTLINED_FUNCTION_0_2((uint64_t)v16);
    }

    OUTLINED_FUNCTION_35_33(v6, v3);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v18 = OUTLINED_FUNCTION_4_4(v3, v17);
    PhoneError.logged()(v19);
    outlined destroy of MainFlow(v6, type metadata accessor for PhoneError);
    *(void *)a1 = v18;
    *(_BYTE *)(a1 + 8) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    OUTLINED_FUNCTION_52_8();
    return OUTLINED_FUNCTION_100_0(a1, v20);
  }

uint64_t MessagesFaceTimeLinkCompletionFlow.execute()(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[18] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = OUTLINED_FUNCTION_19_55();
  v2[19] = v4;
  v2[20] = OUTLINED_FUNCTION_18_0(v4);
  v2[21] = OUTLINED_FUNCTION_28();
  v2[22] = OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t MessagesFaceTimeLinkCompletionFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 152);
  (*(void (**)(void))(**(void **)(v0 + 136) + 112LL))();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    static ExecuteResponse.complete()(EnumCaseMultiPayload);
    outlined destroy of MainFlow(v4, type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State);
LABEL_9:
    OUTLINED_FUNCTION_23_53();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    return OUTLINED_FUNCTION_14_2(*(uint64_t (**)(void))(v0 + 8));
  }

  uint64_t v5 = *(uint64_t **)(v0 + 176);
  uint64_t v6 = *(void **)(v0 + 136);
  uint64_t v7 = *v5;
  uint64_t v8 = v5[1];
  *(void *)(v0 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v8;
  uint64_t v9 = v5[2];
  *(void *)(v0 + 192) = v9;
  uint64_t v10 = (uint64_t)(v6 + 3);
  uint64_t v11 = v6[6];
  uint64_t v12 = v6[7];
  __swift_project_boxed_opaque_existential_1(v6 + 3, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  DeviceState.isSendingFaceTimeLinkDeviceUnsupported(app:)();
  uint64_t v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  if ((v14 & 1) != 0)
  {
    uint64_t v36 = v0 + 96;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v15, (uint64_t)static Logger.siriPhone);
    os_log_type_t v16 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v16))
    {
      uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v17 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v14,  (os_log_type_t)v7,  "#MessagesFaceTimeLinkCompletionFlow sending FaceTime Link is unsupported for idiom",  v17);
      OUTLINED_FUNCTION_0_2((uint64_t)v17);
    }

    uint64_t v18 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 168);
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v35 = *(void *)(v0 + 136);

    outlined init with copy of SignalProviding(v10, v0 + 56);
    type metadata accessor for StartCallCATs(0LL);
    OUTLINED_FUNCTION_4_64();
    uint64_t v21 = OUTLINED_FUNCTION_29_40();
    type metadata accessor for StartCallCATsSimple(0LL);
    OUTLINED_FUNCTION_4_64();
    uint64_t v22 = OUTLINED_FUNCTION_6_61();
    type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
    OUTLINED_FUNCTION_4_64();
    uint64_t v23 = OUTLINED_FUNCTION_6_61();
    type metadata accessor for UnsupportedFlowCATs(0LL);
    OUTLINED_FUNCTION_4_64();
    uint64_t v24 = OUTLINED_FUNCTION_29_40();
    uint64_t v25 = type metadata accessor for UnsupportedFaceTimeOutputProvider();
    uint64_t v26 = swift_allocObject(v25, 136LL, 7LL);
    uint64_t v27 = specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( 8,  (__int128 *)(v0 + 56),  v21,  v22,  v23,  v24,  0LL,  0LL,  0LL,  0LL,  v26);
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v27 + 144LL))(v27);
    uint64_t v29 = enum case for RCHFlowResult.cancelled<A, B>(_:);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    OUTLINED_FUNCTION_52_8();
    v30(v19, v29);
    OUTLINED_FUNCTION_21(v19, v20);
    outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v19, v18);
    uint64_t v31 = v35 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
    OUTLINED_FUNCTION_5_9( v35 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state,  v36);
    outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(v18, v31);
    swift_endAccess(v36);
    *(void *)(v0 + 120) = v28;
    type metadata accessor for SimpleOutputFlowAsync(0LL);
    static ExecuteResponse.complete<A>(next:)(v0 + 120);
    swift_release(v28);
    swift_release(v27);
    goto LABEL_9;
  }

  uint64_t v33 = *(int **)(**(void **)(v0 + 136) + 176LL);
  uint64_t v37 = (int *)((char *)v33 + *v33);
  uint64_t v34 = (void *)swift_task_alloc(v33[1]);
  *(void *)(v0 + 200) = v34;
  *uint64_t v34 = v0;
  v34[1] = MessagesFaceTimeLinkCompletionFlow.execute();
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t))v37)(*(void *)(v0 + 128), v7, v8, v9);
}

{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_62();
  return swift_task_switch(MessagesFaceTimeLinkCompletionFlow.execute(), 0LL, 0LL);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_23_53();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MessagesFaceTimeLinkCompletionFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type MessagesFaceTimeLinkCompletionFlow and conformance MessagesFaceTimeLinkCompletionFlow,  type metadata accessor for MessagesFaceTimeLinkCompletionFlow,  (uint64_t)&protocol conformance descriptor for MessagesFaceTimeLinkCompletionFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  uint64_t v6 = type metadata accessor for PhoneError(0LL);
  v5[20] = v6;
  v5[21] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = OUTLINED_FUNCTION_19_55();
  v5[22] = v7;
  v5[23] = OUTLINED_FUNCTION_18_0(v7);
  _BYTE v5[24] = OUTLINED_FUNCTION_28();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse.DirectInvocation?);
  v5[25] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for Parse.DirectInvocation(0LL);
  v5[26] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[27] = v10;
  v5[28] = OUTLINED_FUNCTION_23(v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  v5[29] = OUTLINED_FUNCTION_23(*(void *)(v11 - 8));
  uint64_t v12 = type metadata accessor for URL(0LL);
  v5[30] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[31] = v13;
  v5[32] = OUTLINED_FUNCTION_23(v13);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = *(os_log_s **)(v1 + 136);
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n(v3, 2LL);
  OUTLINED_FUNCTION_88_11();
  os_log_type_t v5 = OUTLINED_FUNCTION_6_0();
  BOOL v6 = OUTLINED_FUNCTION_93(v5);
  unint64_t v7 = *(void *)(v1 + 136);
  if (v6)
  {
    uint64_t v8 = *(void *)(v1 + 128);
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v10 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v71 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    LOBYTE(INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v1, v0) = (_BYTE)v9 + 4;
    swift_bridgeObjectRetain();
    *(void *)(v1 + 112) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v7, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 112, v1 + 120, v9 + 4);
    swift_bridgeObjectRelease_n(v7, 3LL);
    OUTLINED_FUNCTION_57_0(&dword_0, v3, v2, "#MessagesFaceTimeLinkCompletionFlow URL : %s", v9);
    OUTLINED_FUNCTION_17_0(v10);
    OUTLINED_FUNCTION_0_2(v10);
    OUTLINED_FUNCTION_0_2((uint64_t)v9);
  }

  else
  {

    swift_bridgeObjectRelease_n(v7, 2LL);
  }

  uint64_t v11 = *(void *)(v1 + 128);
  unint64_t v12 = *(void *)(v1 + 136);
  uint64_t v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000LL) == 0) {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13) {
    goto LABEL_14;
  }
  uint64_t v0 = *(void *)(v1 + 232);
  uint64_t v3 = *(os_log_s **)(v1 + 240);
  URL.init(string:)(v11, v12);
  if (__swift_getEnumTagSinglePayload(v0, 1LL, (uint64_t)v3) == 1)
  {
    uint64_t v14 = *(void *)(v1 + 232);
    uint64_t v15 = (uint64_t *)&demangling cache variable for type metadata for URL?;
LABEL_13:
    outlined destroy of UUID?(v14, v15);
LABEL_14:
    OUTLINED_FUNCTION_88_11();
    os_log_type_t v19 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v19))
    {
      uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v20 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v3,  (os_log_type_t)v0,  "#MessagesFaceTimeLinkCompletionFlow Error generating direct invocation. Exiting",  v20);
      OUTLINED_FUNCTION_0_2((uint64_t)v20);
    }

    uint64_t v21 = *(void *)(v1 + 184);
    uint64_t v22 = *(void *)(v1 + 192);
    uint64_t v24 = *(void *)(v1 + 168);
    uint64_t v23 = *(void *)(v1 + 176);
    uint64_t v25 = *(void *)(v1 + 152);
    uint64_t v26 = *(void *)(v1 + 160);

    OUTLINED_FUNCTION_35_33(v24, v26);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v28 = OUTLINED_FUNCTION_4_4(v26, v27);
    PhoneError.logged()(v29);
    outlined destroy of MainFlow(v24, type metadata accessor for PhoneError);
    *(void *)uint64_t v22 = v28;
    *(_BYTE *)(v22 + 8) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_100_0(v22, v30);
    OUTLINED_FUNCTION_21(v22, v23);
    outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v22, v21);
    uint64_t v31 = v25 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
    OUTLINED_FUNCTION_5_9( v25 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state,  v1 + 56);
    outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(v21, v31);
    uint64_t v32 = swift_endAccess(v1 + 56);
    static ExecuteResponse.complete()(v32);
    goto LABEL_17;
  }

  uint64_t v16 = *(void *)(v1 + 256);
  uint64_t v17 = *(void *)(v1 + 200);
  uint64_t v0 = *(void *)(v1 + 208);
  uint64_t v18 = *(void *)(v1 + 144);
  (*(void (**)(uint64_t, void, void))(*(void *)(v1 + 248) + 32LL))( v16,  *(void *)(v1 + 232),  *(void *)(v1 + 240));
  MessagesFaceTimeLinkCompletionFlow.constructDirectInvocation(url:recipients:)(v16, v18, v17);
  if (__swift_getEnumTagSinglePayload(v17, 1LL, v0) == 1)
  {
    uint64_t v3 = *(os_log_s **)(v1 + 200);
    (*(void (**)(void, void))(*(void *)(v1 + 248) + 8LL))(*(void *)(v1 + 256), *(void *)(v1 + 240));
    uint64_t v15 = (uint64_t *)&demangling cache variable for type metadata for Parse.DirectInvocation?;
    uint64_t v14 = (uint64_t)v3;
    goto LABEL_13;
  }

  uint64_t v34 = *(void *)(v1 + 224);
  uint64_t v35 = *(void **)(v1 + 152);
  (*(void (**)(uint64_t, void, void))(*(void *)(v1 + 216) + 32LL))( v34,  *(void *)(v1 + 200),  *(void *)(v1 + 208));
  uint64_t v36 = v35[6];
  uint64_t v37 = v35[7];
  __swift_project_boxed_opaque_existential_1(v35 + 3, v36);
  (*(void (**)(uint64_t, uint64_t))(v37 + 48))(v36, v37);
  uint64_t v38 = *(void *)(v1 + 40);
  uint64_t v39 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v38);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 8))(v34, v38, v39);
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = *(void *)(v1 + 248);
    uint64_t v67 = *(void *)(v1 + 240);
    uint64_t v69 = *(void *)(v1 + 256);
    uint64_t v43 = *(void *)(v1 + 216);
    uint64_t v44 = *(void *)(v1 + 224);
    uint64_t v45 = *(void *)(v1 + 208);
    uint64_t v46 = *(void *)(v1 + 152);
    __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 16));
    *(void *)(v1 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v41;
    uint64_t v47 = type metadata accessor for AnyFlow(0LL);
    swift_retain();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)( v1 + 104,  partial apply for implicit closure #3 in implicit closure #2 in MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:),  v46,  v47);
    swift_release(v46);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v69, v67);
    swift_release(v41);
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 16));
    uint64_t v48 = (os_log_s *)OUTLINED_FUNCTION_88_11();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v50 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v48,  v49,  "#MessagesFaceTimeLinkCompletionFlow Phone flow not found for direct invocation",  v50);
      OUTLINED_FUNCTION_0_2((uint64_t)v50);
    }

    uint64_t v68 = *(void *)(v1 + 240);
    uint64_t v70 = *(void *)(v1 + 256);
    uint64_t v65 = *(void *)(v1 + 224);
    uint64_t v66 = *(void *)(v1 + 248);
    uint64_t v63 = *(void *)(v1 + 216);
    uint64_t v64 = *(void *)(v1 + 208);
    uint64_t v51 = *(void *)(v1 + 184);
    uint64_t v52 = *(void *)(v1 + 192);
    uint64_t v54 = *(void *)(v1 + 168);
    uint64_t v53 = *(void *)(v1 + 176);
    uint64_t v56 = *(void *)(v1 + 152);
    uint64_t v55 = *(void *)(v1 + 160);

    OUTLINED_FUNCTION_35_33(v54, v55);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v58 = OUTLINED_FUNCTION_4_4(v55, v57);
    PhoneError.logged()(v59);
    outlined destroy of MainFlow(v54, type metadata accessor for PhoneError);
    *(void *)uint64_t v52 = v58;
    *(_BYTE *)(v52 + 8) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_100_0(v52, v60);
    OUTLINED_FUNCTION_21(v52, v53);
    outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v52, v51);
    uint64_t v61 = v56 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
    OUTLINED_FUNCTION_5_9( v56 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state,  v1 + 80);
    outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(v51, v61);
    uint64_t v62 = swift_endAccess(v1 + 80);
    static ExecuteResponse.complete()(v62);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v64);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v70, v68);
  }

void MessagesFaceTimeLinkCompletionFlow.flowOnCompletion(exitValue:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v39 = OUTLINED_FUNCTION_19_55();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v34 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = (os_log_s *)(v9 - v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v34 - v15;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v34 - v17;
  outlined init with copy of Any(a1, (uint64_t)v42);
  if (swift_dynamicCast(v10, v42, &type metadata for Any[1]))
  {
    uint64_t v38 = v3;
    OUTLINED_FUNCTION_34_13((uint64_t)v10, 0LL);
    uint64_t v37 = *(void (**)(char *, os_log_s *, uint64_t))(v12 + 32);
    v37(v18, v10, v11);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = OUTLINED_FUNCTION_15_1();
    uint64_t v10 = (os_log_s *)__swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = *(uint64_t (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v21 = v20(v16, v18, v11);
    Logger.logObject.getter(v21);
    os_log_type_t v22 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v22))
    {
      uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v36 = OUTLINED_FUNCTION_7_0(32LL);
      v42[0] = v36;
      uint64_t v35 = v23;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v34 = v23 + 4;
      v20(v14, v16, v11);
      uint64_t v24 = String.init<A>(describing:)(v14, v11);
      uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v34);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27_52();
      uint64_t v26 = v35;
      OUTLINED_FUNCTION_57_0(&dword_0, v10, v2, "#MessagesFaceTimeLinkCompletionFlow received exitValue: %s", v35);
      uint64_t v27 = v36;
      OUTLINED_FUNCTION_17_0(v36);
      OUTLINED_FUNCTION_0_2(v27);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }

    else
    {
      OUTLINED_FUNCTION_27_52();
    }

    v37(v7, (os_log_s *)v18, v11);
    OUTLINED_FUNCTION_21((uint64_t)v7, v39);
    OUTLINED_FUNCTION_24_44();
    uint64_t v33 = v38 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
  }

  else
  {
    OUTLINED_FUNCTION_34_13((uint64_t)v10, 1LL);
    outlined destroy of UUID?( (uint64_t)v10,  &demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v28 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v28, (uint64_t)static Logger.siriPhone);
    os_log_type_t v29 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_7(v29))
    {
      uint64_t v30 = v3;
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v31 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v10, v2, "#MessagesFaceTimeLinkCompletionFlow Invalid user exitValue", v31);
      uint64_t v32 = (uint64_t)v31;
      uint64_t v3 = v30;
      OUTLINED_FUNCTION_0_2(v32);
    }

    (*(void (**)(char *, void, uint64_t))(v12 + 104))( v7,  enum case for RCHFlowResult.cancelled<A, B>(_:),  v11);
    OUTLINED_FUNCTION_21((uint64_t)v7, v39);
    OUTLINED_FUNCTION_24_44();
    uint64_t v33 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin34MessagesFaceTimeLinkCompletionFlow_state;
  }

  OUTLINED_FUNCTION_5_9(v33, (uint64_t)v42);
  outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State((uint64_t)v10, v33);
  swift_endAccess(v42);
  OUTLINED_FUNCTION_7_5();
}

void MessagesFaceTimeLinkCompletionFlow.constructDirectInvocation(url:recipients:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for MessageFlowDirectInvocation(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = (void *)(v9 - v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  (*(void (**)(void))(class metadata base offset for StartCallCATs + **(void **)(v3 + 64) + 1272))();
  uint64_t v15 = (os_log_s *)Result<>.firstPrint.getter(v11);
  uint64_t v17 = v16;
  outlined destroy of UUID?(v14, &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (v17)
  {
    uint64_t v18 = (char *)v10 + *(int *)(v7 + 24);
    uint64_t v19 = type metadata accessor for URL(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16LL))(v18, a1, v19);
    *uint64_t v10 = a2;
    v10[1] = v15;
    _OWORD v10[2] = v17;
    swift_bridgeObjectRetain();
    specialized DICodable.toDirectInvocation()();
    outlined destroy of MainFlow((uint64_t)v10, type metadata accessor for MessageFlowDirectInvocation);
    uint64_t v23 = 0LL;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v20 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v20, (uint64_t)static Logger.siriPhone);
    os_log_type_t v21 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_7(v21))
    {
      os_log_type_t v22 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)os_log_type_t v22 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v15,  (os_log_type_t)a2,  "#MessagesFaceTimeLinkCompletionFlow failed to generate join my facetime message",  v22);
      OUTLINED_FUNCTION_0_2((uint64_t)v22);
    }

    uint64_t v23 = 1LL;
  }

  uint64_t v24 = type metadata accessor for Parse.DirectInvocation(0LL);
  __swift_storeEnumTagSinglePayload(a3, v23, 1LL, v24);
  OUTLINED_FUNCTION_7_5();
}

void *MessagesFaceTimeLinkCompletionFlow.deinit()
{
  return v0;
}

uint64_t MessagesFaceTimeLinkCompletionFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t outlined assign with take of MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MessagesFaceTimeLinkCompletionFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for MessagesFaceTimeLinkCompletionFlow,  (uint64_t)&nominal type descriptor for MessagesFaceTimeLinkCompletionFlow);
}

uint64_t partial apply for implicit closure #3 in implicit closure #2 in MessagesFaceTimeLinkCompletionFlow.handleMessageIntentFlow(faceTimeLink:recipients:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184LL))();
}

uint64_t sub_254060(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 112LL))();
}

uint64_t ObjC metadata update function for MessagesFaceTimeLinkCompletionFlow()
{
  return type metadata accessor for MessagesFaceTimeLinkCompletionFlow(0LL);
}

uint64_t type metadata completion function for MessagesFaceTimeLinkCompletionFlow(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "(";
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(319LL);
  if (v3 <= 0x3F)
  {
    v4[3] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessagesFaceTimeLinkCompletionFlow.State( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 1LL;
    }

    else
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }

  return a1;
}

uint64_t destroy for MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

void *initializeWithCopy for MessagesFaceTimeLinkCompletionFlow.State(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    uint64_t v7 = a1;
    uint64_t v8 = a3;
    uint64_t v9 = 1LL;
  }

  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = a1;
    uint64_t v8 = a3;
    uint64_t v9 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void *assignWithCopy for MessagesFaceTimeLinkCompletionFlow.State(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of MainFlow((uint64_t)a1, type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 1LL;
    }

    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }

  return a1;
}

void *initializeWithTake for MessagesFaceTimeLinkCompletionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1LL);
  }

  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

void *assignWithTake for MessagesFaceTimeLinkCompletionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of MainFlow((uint64_t)a1, type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1LL);
    }

    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }
  }

  return a1;
}

void type metadata completion function for MessagesFaceTimeLinkCompletionFlow.State(uint64_t a1)
{
  v4[0] = &unk_33A338;
  type metadata accessor for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 2LL, v4);
  }

void type metadata accessor for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>)
  {
    uint64_t v2 = type metadata accessor for CNContactStore( 255LL,  &lazy cache variable for type metadata for INSendMessageIntent,  &OBJC_CLASS___INSendMessageIntent_ptr);
    uint64_t v3 = type metadata accessor for CNContactStore( 255LL,  &lazy cache variable for type metadata for INSendMessageIntentResponse,  &OBJC_CLASS___INSendMessageIntentResponse_ptr);
    unint64_t v4 = type metadata accessor for RCHFlowResult(a1, v2, v3);
    if (!v5) {
      atomic_store( v4,  (unint64_t *)&lazy cache variable for type metadata for RCHFlowResult<INSendMessageIntent, INSendMessageIntentResponse>);
    }
  }

uint64_t OUTLINED_FUNCTION_19_55()
{
  return type metadata accessor for MessagesFaceTimeLinkCompletionFlow.State(0LL);
}

uint64_t OUTLINED_FUNCTION_23_53()
{
  return swift_task_dealloc(*(void *)(v0 + 176));
}

uint64_t OUTLINED_FUNCTION_24_44()
{
  return outlined init with take of MessagesFaceTimeLinkCompletionFlow.State(v0, *(void *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_29_40()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_35_33(uint64_t a1, uint64_t a2)
{
  return swift_storeEnumTagMultiPayload(a1, a2, 15LL);
}

void *CommonDirectAction.contactPickerId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.contactPickerId;
}

void *CommonDirectAction.disambiguationSelectionIndexId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.disambiguationSelectionIndexId;
}

void CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(void *a1)
{
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = (void *)DeviceState.asInvocationContext.getter(v3, v4);
  OUTLINED_FUNCTION_49( (uint64_t)v5,  (unint64_t *)&lazy cache variable for type metadata for SKIDirectInvocationPayload,  &OBJC_CLASS___SKIDirectInvocationPayload_ptr);
  CommonDirectAction.identifier.getter();
  SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v7 = v6;
  CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v8);
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_62();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v10, v7);
  id v11 = [v2 runSiriKitExecutorCommandWithContext:v5 payload:v7];

  OUTLINED_FUNCTION_16();
}

void static CommonDirectAction.from(_:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_7_6();
  uint64_t v7 = Parse.DirectInvocation.identifier.getter();
  unint64_t v9 = v8;
  uint64_t v10 = 0xD000000000000029LL;
  if (v7 == 0xD000000000000029LL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12)
    {
      unint64_t v13 = v11;
LABEL_7:
      swift_bridgeObjectRelease(v13);
      OUTLINED_FUNCTION_5_90();
      uint64_t v14 = OUTLINED_FUNCTION_6_90();
      uint64_t v16 = 6LL;
LABEL_8:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      OUTLINED_FUNCTION_7_5();
      __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
      return;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v10) & 1) != 0)
  {
    unint64_t v13 = v9;
    goto LABEL_7;
  }

  uint64_t v21 = 0xD000000000000028LL;
  if (v7 == 0xD000000000000028LL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12)
    {
      unint64_t v23 = v22;
LABEL_15:
      swift_bridgeObjectRelease(v23);
      OUTLINED_FUNCTION_5_90();
      uint64_t v14 = OUTLINED_FUNCTION_6_90();
      uint64_t v16 = 7LL;
      goto LABEL_8;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v21) & 1) != 0)
  {
    unint64_t v23 = v9;
    goto LABEL_15;
  }

  uint64_t v24 = 0xD000000000000033LL;
  if (v7 == 0xD000000000000033LL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12)
    {
      unint64_t v26 = v25;
LABEL_22:
      uint64_t v27 = swift_bridgeObjectRelease(v26);
      uint64_t v28 = Parse.DirectInvocation.userData.getter(v27);
      static CommonDirectAction.parseContactPicker(userData:)(v28, a2);
LABEL_30:
      OUTLINED_FUNCTION_7_5();
      swift_bridgeObjectRelease(v34);
      return;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v24) & 1) != 0)
  {
    unint64_t v26 = v9;
    goto LABEL_22;
  }

  uint64_t v29 = 0xD000000000000043LL;
  if (v7 == 0xD000000000000043LL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12) {
      goto LABEL_26;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v29) & 1) != 0)
  {
LABEL_28:
    unint64_t v31 = v9;
    goto LABEL_29;
  }

  uint64_t v35 = 0xD000000000000042LL;
  if (v7 == 0xD000000000000042LL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12) {
      goto LABEL_26;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v35) & 1) != 0) {
    goto LABEL_28;
  }
  uint64_t v36 = 0xD000000000000040LL;
  if (v7 == 0xD000000000000040LL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12)
    {
LABEL_26:
      unint64_t v31 = v30;
LABEL_29:
      uint64_t v32 = swift_bridgeObjectRelease(v31);
      uint64_t v33 = Parse.DirectInvocation.userData.getter(v32);
      static CommonDirectAction.parseDisambiguationSelection(userData:)(v33, a2);
      goto LABEL_30;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v36) & 1) != 0) {
    goto LABEL_28;
  }
  uint64_t v37 = 0xD000000000000039LL;
  if (v7 == 0xD000000000000039LL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12)
    {
      unint64_t v39 = v38;
LABEL_43:
      uint64_t v40 = swift_bridgeObjectRelease(v39);
      uint64_t v41 = Parse.DirectInvocation.userData.getter(v40);
      static CommonDirectAction.parseUserDialogAct(userData:)(v41, (uint64_t)a2);
      goto LABEL_30;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v37) & 1) != 0)
  {
    unint64_t v39 = v9;
    goto LABEL_43;
  }

  uint64_t v42 = 0xD00000000000002CLL;
  if (v7 == 0xD00000000000002CLL)
  {
    OUTLINED_FUNCTION_3_104();
    if (v12)
    {
      unint64_t v44 = v43;
LABEL_50:
      swift_bridgeObjectRelease(v44);
      OUTLINED_FUNCTION_5_90();
      uint64_t v14 = OUTLINED_FUNCTION_6_90();
      uint64_t v16 = 8LL;
      goto LABEL_8;
    }
  }

  if ((OUTLINED_FUNCTION_0_93(v42) & 1) != 0)
  {
    unint64_t v44 = v9;
    goto LABEL_50;
  }

  if (v7 == 0xD00000000000002ALL)
  {
    unint64_t v45 = 0x8000000000350390LL;
    if (v9 == 0x8000000000350390LL)
    {
LABEL_55:
      swift_bridgeObjectRelease(v45);
      OUTLINED_FUNCTION_5_90();
      uint64_t v14 = OUTLINED_FUNCTION_6_90();
      uint64_t v16 = 9LL;
      goto LABEL_8;
    }
  }

  if ((OUTLINED_FUNCTION_1_5(0xD00000000000002ALL, 0x8000000000350390LL) & 1) != 0)
  {
    unint64_t v45 = v9;
    goto LABEL_55;
  }

  if (v7 == 0xD00000000000002ALL && v9 == 0x80000000003503C0LL)
  {
    swift_bridgeObjectRelease(0x80000000003503C0LL);
LABEL_60:
    OUTLINED_FUNCTION_5_90();
    uint64_t v14 = OUTLINED_FUNCTION_6_90();
    uint64_t v16 = 10LL;
    goto LABEL_8;
  }

  char v46 = OUTLINED_FUNCTION_1_5(0xD00000000000002ALL, 0x80000000003503C0LL);
  swift_bridgeObjectRelease(v9);
  if ((v46 & 1) != 0) {
    goto LABEL_60;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v47 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a1, v5);
  os_log_type_t v49 = (os_log_s *)Logger.logObject.getter(v48);
  os_log_type_t v50 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v52 = swift_slowAlloc(32LL, -1LL);
    uint64_t v57 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    uint64_t v53 = Parse.DirectInvocation.identifier.getter();
    uint64_t v56 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v51 + 4, v51 + 12);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_17_58();
    _os_log_impl(&dword_0, v49, v50, "unsupported direct invocation identifier: %s", v51, 0xCu);
    swift_arrayDestroy(v52, 1LL);
    OUTLINED_FUNCTION_0_2(v52);
    OUTLINED_FUNCTION_0_2((uint64_t)v51);
  }

  else
  {
    OUTLINED_FUNCTION_17_58();
  }

  uint64_t v55 = OUTLINED_FUNCTION_5_90();
  __swift_storeEnumTagSinglePayload((uint64_t)a2, 1LL, 1LL, v55);
  OUTLINED_FUNCTION_7_5();
}

void CommonDirectAction.toStartLocalRequest(deviceState:)(void *a1)
{
  uint64_t v3 = v2;
  CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v4);
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_39();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v6, v3);
  SKIDirectInvocationPayload.toStartLocalRequest(deviceState:)(a1);

  OUTLINED_FUNCTION_6();
}

void SKIDirectInvocationPayload.__allocating_init(identifier:)()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_39();
  [v0 initWithIdentifier:v1];

  OUTLINED_FUNCTION_6();
}

void CommonDirectAction.toDirectInvocationPayload()(uint64_t a1)
{
  uint64_t v2 = v1;
  CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v3);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_39();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v5, v2);
  OUTLINED_FUNCTION_6();
}

void *CommonDirectAction.yesConfirmationId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.yesConfirmationId;
}

void *CommonDirectAction.noConfirmationId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.noConfirmationId;
}

unint64_t static CommonDirectAction.yesConfirmationId.getter()
{
  return OUTLINED_FUNCTION_13_9(41LL);
}

unint64_t static CommonDirectAction.noConfirmationId.getter()
{
  return OUTLINED_FUNCTION_13_9(40LL);
}

unint64_t static CommonDirectAction.contactPickerId.getter()
{
  return OUTLINED_FUNCTION_13_9(51LL);
}

void *CommonDirectAction.disambiguationSelectionPersonId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.disambiguationSelectionPersonId;
}

unint64_t static CommonDirectAction.disambiguationSelectionPersonId.getter()
{
  return OUTLINED_FUNCTION_13_9(67LL);
}

unint64_t static CommonDirectAction.disambiguationSelectionIndexId.getter()
{
  return OUTLINED_FUNCTION_13_9(66LL);
}

void *CommonDirectAction.disambiguationSelectionAppId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.disambiguationSelectionAppId;
}

unint64_t static CommonDirectAction.disambiguationSelectionAppId.getter()
{
  return OUTLINED_FUNCTION_13_9(64LL);
}

void *CommonDirectAction.selectUserDialogAct.unsafeMutableAddressor()
{
  return &static CommonDirectAction.selectUserDialogAct;
}

unint64_t static CommonDirectAction.selectUserDialogAct.getter()
{
  return OUTLINED_FUNCTION_13_9(57LL);
}

void *CommonDirectAction.readAgainId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.readAgainId;
}

unint64_t static CommonDirectAction.readAgainId.getter()
{
  return OUTLINED_FUNCTION_13_9(44LL);
}

void *CommonDirectAction.nextId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.nextId;
}

unint64_t static CommonDirectAction.nextId.getter()
{
  return OUTLINED_FUNCTION_13_9(42LL);
}

void *CommonDirectAction.callId.unsafeMutableAddressor()
{
  return &static CommonDirectAction.callId;
}

unint64_t static CommonDirectAction.callId.getter()
{
  return OUTLINED_FUNCTION_13_9(42LL);
}

const char *CommonDirectAction.disambiguationSelectionPersonDataKey.unsafeMutableAddressor()
{
  return "personData";
}

uint64_t static CommonDirectAction.disambiguationSelectionPersonDataKey.getter()
{
  return 0x61446E6F73726570LL;
}

const char *CommonDirectAction.disambiguationSelectionIndexKey.unsafeMutableAddressor()
{
  return "index";
}

uint64_t static CommonDirectAction.disambiguationSelectionIndexKey.getter()
{
  return 0x7865646E69LL;
}

const char *CommonDirectAction.disambiguationSelectionAppIdKey.unsafeMutableAddressor()
{
  return "appId";
}

uint64_t static CommonDirectAction.disambiguationSelectionAppIdKey.getter()
{
  return 0x6449707061LL;
}

const char *CommonDirectAction.contactPickerContactIdKey.unsafeMutableAddressor()
{
  return "contactId";
}

uint64_t static CommonDirectAction.contactPickerContactIdKey.getter()
{
  return 0x49746361746E6F63LL;
}

const char *CommonDirectAction.userDialogActKey.unsafeMutableAddressor()
{
  return "userDialogAct";
}

uint64_t static CommonDirectAction.userDialogActKey.getter()
{
  return 0x6C61694472657375LL;
}

void *CommonDirectAction.getContact.unsafeMutableAddressor()
{
  return &static CommonDirectAction.getContact;
}

unint64_t static CommonDirectAction.getContact.getter()
{
  return OUTLINED_FUNCTION_13_9(34LL);
}

uint64_t static CommonDirectAction.parseContactPicker(userData:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ContactResolutionResponseHandler.DirectInvocationValue(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = type metadata accessor for ContactResolutionResponseHandler(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = swift_bridgeObjectRetain(a1);
  uint64_t v13 = ContactResolutionResponseHandler.init(userData:)(v12);
  ContactResolutionResponseHandler.directInvocationValue.getter(v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4) == enum case for ContactResolutionResponseHandler.DirectInvocationValue.contactId(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v14 = *v7;
    uint64_t v15 = v7[1];
    swift_bridgeObjectRelease(v7[2]);
    *a2 = v14;
    a2[1] = v15;
    uint64_t v16 = type metadata accessor for CommonDirectAction(0LL);
    swift_storeEnumTagMultiPayload(a2, v16, 0LL);
    uint64_t v17 = (uint64_t)a2;
    uint64_t v18 = 0LL;
    uint64_t v19 = v16;
  }

  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
    uint64_t v21 = swift_bridgeObjectRetain_n(a1, 2LL);
    unint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v25 = swift_slowAlloc(32LL, -1LL);
      uint64_t v31 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      if (a1)
      {
        uint64_t v26 = Dictionary.description.getter( a1,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
        unint64_t v28 = v27;
      }

      else
      {
        unint64_t v28 = 0xE300000000000000LL;
        uint64_t v26 = 7104878LL;
      }

      uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease_n(a1, 2LL);
      swift_bridgeObjectRelease(v28);
      _os_log_impl(&dword_0, v22, v23, "#CommonDirectAction invalid user data for contactPicker: %s", v24, 0xCu);
      swift_arrayDestroy(v25, 1LL);
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
    }

    uint64_t v19 = type metadata accessor for CommonDirectAction(0LL);
    uint64_t v17 = (uint64_t)a2;
    uint64_t v18 = 1LL;
  }

  return __swift_storeEnumTagSinglePayload(v17, v18, 1LL, v19);
}

uint64_t static CommonDirectAction.parseUserDialogAct(userData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BinaryDecodingOptions(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin(v7);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  if (!a1)
  {
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    goto LABEL_6;
  }

  specialized Dictionary.subscript.getter(0x6C61694472657375LL, 0xED0000746341676FLL, a1, &v30);
  if (!*((void *)&v31 + 1))
  {
LABEL_6:
    outlined destroy of PhoneRRTarget?((uint64_t)&v30, &demangling cache variable for type metadata for Any?);
    goto LABEL_7;
  }

  if ((swift_dynamicCast(&v33, &v30, (char *)&type metadata for Any + 8, &type metadata for Data, 6LL) & 1) != 0)
  {
    uint64_t v14 = v33;
    uint64_t v15 = v34;
    uint64_t v32 = 0LL;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    BinaryDecodingOptions.init()();
    unint64_t v16 = lazy protocol witness table accessor for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct();
    Message.init(serializedData:extensions:partial:options:)(v14, v15, &v30, 0LL, v6, v10, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v10);
    uint64_t v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32);
    v24(v13, v9, v10);
    v24((_BYTE *)a2, v13, v10);
    uint64_t v25 = type metadata accessor for CommonDirectAction(0LL);
    swift_storeEnumTagMultiPayload(a2, v25, 4LL);
    uint64_t v26 = a2;
    uint64_t v27 = 0LL;
    uint64_t v28 = v25;
    return __swift_storeEnumTagSinglePayload(v26, v27, 1LL, v28);
  }

uint64_t static CommonDirectAction.parseDisambiguationSelection(userData:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    swift_bridgeObjectRetain(a1);
    specialized Dictionary.subscript.getter(0x61446E6F73726570LL, 0xEA00000000006174LL, a1, v45);
    if (v46)
    {
      if ((swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for Data, 6LL) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        uint64_t v4 = v43;
        unint64_t v5 = v44;
        static CommonDirectAction.parseDisambiguationSelectionPerson(personData:)(v43, v44, a2);
        return outlined consume of Data._Representation(v4, v5);
      }
    }

    else
    {
      outlined destroy of PhoneRRTarget?((uint64_t)v45, &demangling cache variable for type metadata for Any?);
    }

    specialized Dictionary.subscript.getter(0x7865646E69LL, 0xE500000000000000LL, a1, v45);
    if (v46)
    {
      if ((swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for Int, 6LL) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        uint64_t v13 = v43;
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v14 = type metadata accessor for Logger(0LL);
        uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
        unint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
        os_log_type_t v17 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl(&dword_0, v16, v17, "#CommonDirectAction parsed index", v18, 2u);
          swift_slowDealloc(v18, -1LL, -1LL);
        }

        *a2 = v13;
        uint64_t v19 = type metadata accessor for CommonDirectAction(0LL);
        os_log_type_t v20 = a2;
        uint64_t v21 = v19;
        uint64_t v22 = 2LL;
LABEL_26:
        swift_storeEnumTagMultiPayload(v20, v21, v22);
        uint64_t v30 = (uint64_t)a2;
        uint64_t v31 = 0LL;
        uint64_t v32 = v19;
        return __swift_storeEnumTagSinglePayload(v30, v31, 1LL, v32);
      }
    }

    else
    {
      outlined destroy of PhoneRRTarget?((uint64_t)v45, &demangling cache variable for type metadata for Any?);
    }

    specialized Dictionary.subscript.getter(0x6449707061LL, 0xE500000000000000LL, a1, v45);
    if (v46)
    {
      if ((swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        uint64_t v23 = v43;
        unint64_t v24 = v44;
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v25 = type metadata accessor for Logger(0LL);
        uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
        uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
        os_log_type_t v28 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v29 = 0;
          _os_log_impl(&dword_0, v27, v28, "#CommonDirectAction parsed appId", v29, 2u);
          swift_slowDealloc(v29, -1LL, -1LL);
        }

        *a2 = v23;
        a2[1] = v24;
        uint64_t v19 = type metadata accessor for CommonDirectAction(0LL);
        os_log_type_t v20 = a2;
        uint64_t v21 = v19;
        uint64_t v22 = 3LL;
        goto LABEL_26;
      }
    }

    else
    {
      outlined destroy of PhoneRRTarget?((uint64_t)v45, &demangling cache variable for type metadata for Any?);
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v33 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    uint64_t v34 = swift_bridgeObjectRetain(a1);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      v45[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v39 = swift_bridgeObjectRetain(a1);
      uint64_t v40 = Dictionary.description.getter( v39,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      unint64_t v42 = v41;
      swift_bridgeObjectRelease(a1);
      uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease_n(a1, 2LL);
      swift_bridgeObjectRelease(v42);
      _os_log_impl(&dword_0, v35, v36, "Invalid user data for disambiguationSelection: %s", v37, 0xCu);
      swift_arrayDestroy(v38, 1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
    }

    uint64_t v32 = type metadata accessor for CommonDirectAction(0LL);
    uint64_t v30 = (uint64_t)a2;
    uint64_t v31 = 1LL;
    return __swift_storeEnumTagSinglePayload(v30, v31, 1LL, v32);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "Nil user data for disambiguationSelection", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  uint64_t v12 = type metadata accessor for CommonDirectAction(0LL);
  return __swift_storeEnumTagSinglePayload((uint64_t)a2, 1LL, 1LL, v12);
}

void CommonDirectAction.identifier.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_5_90();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  outlined init with copy of CommonDirectAction(v0, v3 - v2);
  unint64_t v5 = (char *)sub_255C3C + 4 * byte_33A350[swift_getEnumCaseMultiPayload(v4, v1)];
  __asm { BR              X10 }

uint64_t sub_255C3C()
{
  return v0 + 9;
}

void CommonDirectAction.userData.getter()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_20_56();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v2 = OUTLINED_FUNCTION_5_90();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = v4 - v3;
  outlined init with copy of CommonDirectAction(v1, v4 - v3);
  uint64_t v6 = (char *)&loc_255DA0 + *((int *)qword_2560A8 + swift_getEnumCaseMultiPayload(v5, v2));
  __asm { BR              X10 }

void sub_255DB0()
{
}

uint64_t CommonDirectAction.toDireactInvocation()()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  CommonDirectAction.userData.getter();
  return Parse.DirectInvocation.init(identifier:userData:)(v1, v3, v4);
}

uint64_t static CommonDirectAction.parseDisambiguationSelectionPerson(personData:)@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = (id)INIntentSlotValueTransformFromContact();
    if (v8)
    {
      id v9 = v8;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v10 = type metadata accessor for Logger(0LL);
      uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
      uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_0, v12, v13, "#CommonDirectAction parsed personData", v14, 2u);
        swift_slowDealloc(v14, -1LL, -1LL);
        uint64_t v15 = v7;
      }

      else
      {
        uint64_t v15 = v12;
        uint64_t v12 = v7;
      }

      *a3 = v9;
      uint64_t v24 = type metadata accessor for CommonDirectAction(0LL);
      swift_storeEnumTagMultiPayload(a3, v24, 1LL);
      uint64_t v22 = (uint64_t)a3;
      uint64_t v23 = 0LL;
      uint64_t v21 = v24;
      return __swift_storeEnumTagSinglePayload(v22, v23, 1LL, v21);
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "Couldn't deserialized INPerson from data.", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v21 = type metadata accessor for CommonDirectAction(0LL);
  uint64_t v22 = (uint64_t)a3;
  uint64_t v23 = 1LL;
  return __swift_storeEnumTagSinglePayload(v22, v23, 1LL, v21);
}

void static CommonDirectAction.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_5_90();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CommonDirectAction, CommonDirectAction));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  uint64_t v8 = v5 - v4 + *(int *)(v7 + 48);
  outlined init with copy of CommonDirectAction(a1, v5 - v4);
  outlined init with copy of CommonDirectAction(a2, v8);
  id v9 = (char *)sub_2564D0 + 4 * byte_33A35B[swift_getEnumCaseMultiPayload(v6, v3)];
  __asm { BR              X10 }

void sub_2564D0()
{
  uint64_t v4 = *v0;
  uint64_t v3 = v0[1];
  if (OUTLINED_FUNCTION_2_79())
  {
    OUTLINED_FUNCTION_39();
    outlined destroy of PhoneRRTarget?( v2,  &demangling cache variable for type metadata for (CommonDirectAction, CommonDirectAction));
  }

  else
  {
    if (v4 == *v1 && v3 == v1[1])
    {
      swift_bridgeObjectRelease_n(v3, 2LL);
    }

    else
    {
      OUTLINED_FUNCTION_14_66(v4, v5, *v1);
      OUTLINED_FUNCTION_62();
      swift_bridgeObjectRelease();
    }

    OUTLINED_FUNCTION_21_48();
  }

  OUTLINED_FUNCTION_7_5();
}

void outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter( uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_62();
  [a2 setUserData:isa];
}

uint64_t type metadata accessor for CommonDirectAction(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for CommonDirectAction;
  if (!type metadata singleton initialization cache for CommonDirectAction) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CommonDirectAction);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct()
{
  unint64_t result = lazy protocol witness table cache variable for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct;
  if (!lazy protocol witness table cache variable for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct)
  {
    uint64_t v1 = type metadata accessor for Siri_Nlu_External_UserDialogAct(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type Siri_Nlu_External_UserDialogAct and conformance Siri_Nlu_External_UserDialogAct);
  }

  return result;
}

char *initializeBufferWithCopyOfBuffer for CommonDirectAction(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = &v12[(v6 + 16LL) & ~(unint64_t)v6];
    swift_retain(v12);
  }

  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v8 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v8;
        swift_bridgeObjectRetain(v8);
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 0LL;
        goto LABEL_10;
      case 1u:
        os_log_type_t v13 = *a2;
        *(void *)a1 = *a2;
        uint64_t v14 = v13;
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 1LL;
        goto LABEL_10;
      case 3u:
        uint64_t v15 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v15;
        swift_bridgeObjectRetain(v15);
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 3LL;
        goto LABEL_10;
      case 4u:
        uint64_t v16 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v16 - 8) + 16LL))(a1, a2, v16);
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 4LL;
        goto LABEL_10;
      case 5u:
        uint64_t v17 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v17;
        swift_bridgeObjectRetain(v17);
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 5LL;
LABEL_10:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }

  return a1;
}

void destroy for CommonDirectAction(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
    case 3u:
    case 5u:
      swift_bridgeObjectRelease(*(void *)(a1 + 8));
      break;
    case 1u:

      break;
    case 4u:
      uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
      break;
    default:
      return;
  }

void *initializeWithCopy for CommonDirectAction(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain(v6);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 0LL;
      goto LABEL_8;
    case 1u:
      uint64_t v10 = (void *)*a2;
      *a1 = *a2;
      id v11 = v10;
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 1LL;
      goto LABEL_8;
    case 3u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 3LL;
      goto LABEL_8;
    case 4u:
      uint64_t v13 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 4LL;
      goto LABEL_8;
    case 5u:
      uint64_t v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      swift_bridgeObjectRetain(v14);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 5LL;
LABEL_8:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

void *assignWithCopy for CommonDirectAction(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of CommonDirectAction((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v6 = a1;
        uint64_t v7 = a3;
        uint64_t v8 = 0LL;
        goto LABEL_9;
      case 1u:
        uint64_t v9 = (void *)*a2;
        *a1 = *a2;
        id v10 = v9;
        uint64_t v6 = a1;
        uint64_t v7 = a3;
        uint64_t v8 = 1LL;
        goto LABEL_9;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v6 = a1;
        uint64_t v7 = a3;
        uint64_t v8 = 3LL;
        goto LABEL_9;
      case 4u:
        uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(a1, a2, v11);
        uint64_t v6 = a1;
        uint64_t v7 = a3;
        uint64_t v8 = 4LL;
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v6 = a1;
        uint64_t v7 = a3;
        uint64_t v8 = 5LL;
LABEL_9:
        swift_storeEnumTagMultiPayload(v6, v7, v8);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        break;
    }
  }

  return a1;
}

void *initializeWithTake for CommonDirectAction(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 4)
  {
    uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 4LL);
  }

  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

void *assignWithTake for CommonDirectAction(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of CommonDirectAction((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 4)
    {
      uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 4LL);
    }

    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }
  }

  return a1;
}

uint64_t type metadata completion function for CommonDirectAction(uint64_t a1)
{
  v4[0] = &unk_33A418;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = &unk_33A418;
  uint64_t result = type metadata accessor for Siri_Nlu_External_UserDialogAct(319LL);
  if (v3 <= 0x3F)
  {
    void v4[4] = *(void *)(result - 8) + 64LL;
    v4[5] = &unk_33A430;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 6LL, v4);
    return 0LL;
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_0_93(uint64_t a1)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, (v1 - 32) | 0x8000000000000000LL, v3, v2, 0LL);
}

uint64_t OUTLINED_FUNCTION_2_79()
{
  return swift_getEnumCaseMultiPayload(v1, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_6_90()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_66(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, a3, v4, 0LL);
}

uint64_t OUTLINED_FUNCTION_15_69()
{
  return v0 - 88;
}

uint64_t OUTLINED_FUNCTION_17_58()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_20_56()
{
  return type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
}

uint64_t OUTLINED_FUNCTION_22_50()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_23_54()
{
  return v0 - 88;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySnySS5IndexVGG_Sss5NeverOTg5095_s27PhoneCallFlowDelegatePlugin21UsoContactConvertiblePAAE23isNameLikelyNonBusinessSbyFSsSnySS5D8VGXEfU0_SSTf1cn_n( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v6 = (void *)(a1 + 40);
    uint64_t v17 = a3;
    do
    {
      uint64_t v7 = String.subscript.getter(*(v6 - 1), *v6, a2, a3);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      uint64_t v13 = v12;
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      if (v14 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v6 += 2;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[4 * v14];
      v15[4] = v7;
      v15[5] = v9;
      v15[6] = v11;
      v15[7] = v13;
      --v4;
      a3 = v17;
    }

    while (v4);
  }

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

BOOL specialized Sequence.allSatisfy(_:)(uint64_t a1, uint64_t a2)
{
  do
  {
    Swift::String_optional v2 = String.Iterator.next()();
    if (!v2.value._object) {
      break;
    }
    char v3 = Character.isWhitespace.getter(v2.value._countAndFlagsBits, v2.value._object);
    swift_bridgeObjectRelease(v2.value._object);
  }

  while ((v3 & 1) != 0);
  swift_bridgeObjectRelease(a2);
  return v2.value._object == 0LL;
}

uint64_t UsoContactConvertible.emergencyType.getter()
{
  uint64_t v135 = v1;
  uint64_t v136 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v112 = type metadata accessor for IdentifierValue(0LL);
  uint64_t v111 = *(void *)(v112 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_24_45(v7, v107[0]);
  uint64_t v8 = type metadata accessor for IdentifierNamespace(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v114 = v10;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v121 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v13 = (char *)v107 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdentifierNamespace?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v113 = (uint64_t)v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v115 = (char *)v107 - v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v116 = v16;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  *(void *)&__int128 v117 = v17;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  os_log_type_t v19 = (char *)v107 - v18;
  __chkstk_darwin();
  uint64_t v21 = (char *)v107 - v20;
  uint64_t v126 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v22 = *(void *)(v126 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v127 = v23;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  BOOL v122 = v24;
  uint64_t v133 = _swiftEmptyArrayStorage;
  uint64_t v25 = v6;
  UsoContactConvertible.nameIdentifiers.getter(v6, v4);
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v128 = v9;
  uint64_t v124 = v22;
  uint64_t v109 = v4;
  uint64_t v108 = v0;
  v107[2] = v25;
  if (v27)
  {
    uint64_t v123 = (uint64_t)v21;
    uint64_t v28 = OUTLINED_FUNCTION_64_21(v26);
    uint64_t v4 = v28 + v29;
    uint64_t v120 = *(void *)(v22 + 72);
    uint64_t v119 = *(uint64_t (**)(void, uint64_t, uint64_t))(v22 + 16);
    unsigned int v118 = enum case for IdentifierNamespace.nsEmergencyOrganization(_:);
    uint64_t v31 = v125;
    uint64_t v30 = v126;
    uint64_t v32 = v117;
    uint64_t v33 = v122;
    while (1)
    {
      uint64_t v34 = v119(v33, v4, v30);
      uint64_t v35 = v123;
      UsoIdentifier.namespaceSemantic.getter(v34);
      (*(void (**)(char *, void, uint64_t))(v128 + 104))(v19, v118, v8);
      OUTLINED_FUNCTION_39_29((uint64_t)v19);
      uint64_t v36 = (uint64_t)&v13[*(int *)(v31 + 48)];
      OUTLINED_FUNCTION_19_56(v35, (uint64_t)v13);
      OUTLINED_FUNCTION_19_56((uint64_t)v19, v36);
      OUTLINED_FUNCTION_35((uint64_t)v13, 1LL, v8);
      if (v38) {
        break;
      }
      OUTLINED_FUNCTION_19_56((uint64_t)v13, v32);
      OUTLINED_FUNCTION_35(v36, 1LL, v8);
      if (v38)
      {
        OUTLINED_FUNCTION_11_74((uint64_t)v19);
        OUTLINED_FUNCTION_11_74(v123);
        (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v32, v8);
LABEL_11:
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v13,  &demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
        goto LABEL_18;
      }

      uint64_t v39 = v128;
      uint64_t v40 = v114;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32))(v114, v36, v8);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type IdentifierNamespace and conformance IdentifierNamespace,  (uint64_t (*)(uint64_t))&type metadata accessor for IdentifierNamespace,  (uint64_t)&protocol conformance descriptor for IdentifierNamespace);
      char v41 = OUTLINED_FUNCTION_33_49(v32);
      unint64_t v42 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      uint64_t v31 = v125;
      v42(v40, v8);
      OUTLINED_FUNCTION_13_5((uint64_t)v19);
      OUTLINED_FUNCTION_13_5(v123);
      v42(v117, v8);
      uint64_t v32 = v117;
      OUTLINED_FUNCTION_13_5((uint64_t)v13);
      if ((v41 & 1) != 0) {
        goto LABEL_13;
      }
LABEL_18:
      uint64_t v33 = v122;
      uint64_t v30 = v126;
      (*(void (**)(uint64_t (*)(void, void, void), uint64_t))(v124 + 8))(v122, v126);
      v4 += v120;
      if (!--v27)
      {
        OUTLINED_FUNCTION_18_36((uint64_t)v134);
        OUTLINED_FUNCTION_30_41();
        goto LABEL_21;
      }
    }

    OUTLINED_FUNCTION_11_74((uint64_t)v19);
    OUTLINED_FUNCTION_11_74(v35);
    OUTLINED_FUNCTION_35(v36, 1LL, v8);
    if (v38)
    {
      OUTLINED_FUNCTION_11_74((uint64_t)v13);
LABEL_13:
      uint64_t v43 = UsoIdentifier.value.getter(v37);
      uint64_t v45 = v44;
      uint64_t v46 = v133;
      if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0)
      {
        OUTLINED_FUNCTION_63_21();
        uint64_t v46 = v49;
      }

      unint64_t v47 = v46[2];
      if (v47 >= v46[3] >> 1)
      {
        OUTLINED_FUNCTION_63_21();
        uint64_t v46 = v50;
      }

      v46[2] = v47 + 1;
      uint64_t v48 = &v46[2 * v47];
      uint64_t v48[4] = v43;
      uint64_t v48[5] = v45;
      uint64_t v133 = v46;
      uint64_t v31 = v125;
      uint64_t v32 = v117;
      goto LABEL_18;
    }

    goto LABEL_11;
  }

  swift_bridgeObjectRelease();
  uint64_t v32 = v25;
LABEL_21:
  UsoContactConvertible.nameIdentifiers.getter(v32, v4);
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = v116;
  uint64_t v54 = v124;
  if (v52)
  {
    uint64_t v55 = OUTLINED_FUNCTION_64_21(v51);
    uint64_t v57 = v55 + v56;
    uint64_t v58 = *(void *)(v54 + 72);
    BOOL v122 = *(uint64_t (**)(void, void, void))(v54 + 16);
    uint64_t v123 = v58;
    LODWORD(v120) = enum case for IdentifierNamespace.nsPhoneCallContactName(_:);
    LODWORD(v119) = enum case for IdentifierValue.vEmergencyServices(_:);
    unsigned int v118 = enum case for IdentifierValue.vEmergencyContact(_:);
    __int128 v117 = xmmword_31D8B0;
    uint64_t v4 = (uint64_t)v115;
    uint64_t v32 = v126;
    while (1)
    {
      uint64_t v59 = v122(v127, v57, v32);
      UsoIdentifier.namespaceSemantic.getter(v59);
      (*(void (**)(uint64_t, void, uint64_t))(v128 + 104))(v4, v120, v8);
      OUTLINED_FUNCTION_39_29(v4);
      uint64_t v60 = v121;
      uint64_t v61 = v121 + *(int *)(v125 + 48);
      OUTLINED_FUNCTION_59_19(v53, v121);
      OUTLINED_FUNCTION_59_19(v4, v61);
      OUTLINED_FUNCTION_35(v60, 1LL, v8);
      if (v38)
      {
        OUTLINED_FUNCTION_29_41();
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v53,  &demangling cache variable for type metadata for IdentifierNamespace?);
        OUTLINED_FUNCTION_35(v61, 1LL, v8);
        if (!v38) {
          goto LABEL_31;
        }
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v60,  &demangling cache variable for type metadata for IdentifierNamespace?);
      }

      else
      {
        uint64_t v63 = v113;
        OUTLINED_FUNCTION_59_19(v60, v113);
        OUTLINED_FUNCTION_35(v61, 1LL, v8);
        if (v64)
        {
          uint64_t v4 = (uint64_t)v115;
          OUTLINED_FUNCTION_29_41();
          uint64_t v65 = v116;
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v116,  &demangling cache variable for type metadata for IdentifierNamespace?);
          uint64_t v66 = v63;
          uint64_t v53 = v65;
          (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v66, v8);
          uint64_t v54 = v124;
LABEL_31:
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v60,  &demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
          goto LABEL_46;
        }

        uint64_t v67 = v128;
        uint64_t v68 = v114;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32))(v114, v61, v8);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type IdentifierNamespace and conformance IdentifierNamespace,  (uint64_t (*)(uint64_t))&type metadata accessor for IdentifierNamespace,  (uint64_t)&protocol conformance descriptor for IdentifierNamespace);
        char v69 = OUTLINED_FUNCTION_33_49(v63);
        uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
        v70(v68, v8);
        uint64_t v4 = (uint64_t)v115;
        OUTLINED_FUNCTION_29_41();
        uint64_t v71 = v116;
        OUTLINED_FUNCTION_13_5(v116);
        uint64_t v72 = v63;
        uint64_t v53 = v71;
        v70(v72, v8);
        OUTLINED_FUNCTION_13_5(v121);
        uint64_t v54 = v124;
        if ((v69 & 1) == 0) {
          goto LABEL_46;
        }
      }

      uint64_t v73 = v110;
      UsoIdentifier.valueSemantic.getter(v62);
      int v74 = (*(uint64_t (**)(void *, uint64_t))(v111 + 88))(v73, v112);
      if (v74 == (_DWORD)v119)
      {
        if ((OUTLINED_FUNCTION_55_24() & 1) == 0)
        {
          OUTLINED_FUNCTION_17_59();
          uint64_t v73 = v81;
        }

        unint64_t v75 = v73[2];
        if (v75 >= v73[3] >> 1)
        {
          OUTLINED_FUNCTION_17_59();
          uint64_t v73 = v82;
        }

        v73[2] = v75 + 1;
        *(_OWORD *)&v73[2 * v75 + 4] = v117;
      }

      else
      {
        if (v74 != v118)
        {
          uint64_t v32 = v126;
          (*(void (**)(void *, uint64_t))(v54 + 8))(v127, v126);
          OUTLINED_FUNCTION_27_53();
          uint64_t v79 = v110;
          uint64_t v80 = v112;
          goto LABEL_47;
        }

        if ((OUTLINED_FUNCTION_55_24() & 1) == 0)
        {
          OUTLINED_FUNCTION_17_59();
          uint64_t v73 = v83;
        }

        unint64_t v76 = v73[2];
        if (v76 >= v73[3] >> 1)
        {
          OUTLINED_FUNCTION_17_59();
          uint64_t v73 = v84;
        }

        v73[2] = v76 + 1;
        uint64_t v77 = &v73[2 * v76];
        v77[4] = 0LL;
        v77[5] = 0LL;
      }

      uint64_t v133 = v73;
LABEL_46:
      uint64_t v78 = *(void (**)(void *, uint64_t))(v54 + 8);
      uint64_t v32 = v126;
      uint64_t v79 = v127;
      uint64_t v80 = v126;
LABEL_47:
      v78(v79, v80);
      v57 += v123;
      if (!--v52)
      {
        OUTLINED_FUNCTION_18_36((uint64_t)v134);
        OUTLINED_FUNCTION_30_41();
        goto LABEL_51;
      }
    }
  }

  swift_bridgeObjectRelease();
LABEL_51:
  uint64_t v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v32, v4);
  if (v85)
  {
    uint64_t v86 = CodeGenBase.entity.getter(v85);
    OUTLINED_FUNCTION_38_1();
  }

  else
  {
    uint64_t v86 = 0LL;
  }

  uint64_t v87 = type metadata accessor for UsoEntity_common_PhoneNumber(0LL);
  OUTLINED_FUNCTION_48_29(v86, v87, &v131);
  OUTLINED_FUNCTION_22();
  if (v131)
  {
    swift_retain();
    UsoEntity_common_PhoneNumber.tags.getter();
    uint64_t v89 = v88;
    OUTLINED_FUNCTION_22();
  }

  else
  {
    uint64_t v89 = _swiftEmptyArrayStorage;
  }

  BOOL v90 = specialized Sequence<>.contains(_:)((uint64_t)v89);
  OUTLINED_FUNCTION_62();
  if (v90)
  {
    uint64_t v91 = v133;
    if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0)
    {
      OUTLINED_FUNCTION_61_21();
      uint64_t v91 = v105;
    }

    unint64_t v92 = v91[2];
    if (v92 >= v91[3] >> 1)
    {
      OUTLINED_FUNCTION_61_21();
      uint64_t v91 = v106;
    }

    void v91[2] = v92 + 1;
    *(_OWORD *)&v91[2 * v92 + 4] = xmmword_3201A0;
    uint64_t v133 = v91;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v93 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v93, (uint64_t)static Logger.siriPhone);
  uint64_t v94 = (os_log_s *)OUTLINED_FUNCTION_9();
  os_log_type_t v96 = static os_log_type_t.debug.getter(v94, v95);
  if (os_log_type_enabled(v94, v96))
  {
    uint64_t v97 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v98 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v130 = v98;
    uint64_t v131 = 0LL;
    *(_DWORD *)uint64_t v97 = 136315394;
    v132[0] = 0xE000000000000000LL;
    OUTLINED_FUNCTION_91_2( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of UsoContactConvertible.emergencyType.getter);
    uint64_t v131 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v131, v132[0], &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v97 + 4);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v97 + 12) = 2080;
    OUTLINED_FUNCTION_22_0((uint64_t)&v133, (uint64_t)&v129);
    uint64_t v99 = swift_bridgeObjectRetain();
    uint64_t v100 = Array.description.getter(v99, &type metadata for PhoneCallEmergencyType);
    unint64_t v102 = v101;
    swift_bridgeObjectRelease();
    uint64_t v131 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v100, v102, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v97 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v94, v96, "%s Parsed emergencyTypes: %s, returning first entry", (uint8_t *)v97, 0x16u);
    swift_arrayDestroy(v98, 2LL);
    OUTLINED_FUNCTION_0_2(v98);
    OUTLINED_FUNCTION_0_2(v97);
  }

  OUTLINED_FUNCTION_22_0((uint64_t)&v133, (uint64_t)&v131);
  if (v133[2])
  {
    uint64_t v103 = v133[4];
    outlined copy of PhoneCallEmergencyType(v103, v133[5]);
  }

  else
  {
    uint64_t v103 = 0LL;
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22();
  return v103;
}

void UsoContactConvertible.nameSpans.getter(uint64_t a1, uint64_t a2)
{
}

uint64_t UsoEntity_common_Person.getRedactCommonPerson()(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter(a1);
  if (!v3) {
    goto LABEL_12;
  }
  uint64_t v4 = v3;
  uint64_t v5 = dispatch thunk of UsoEntity_common_Person.name.getter(v3);
  char v7 = specialized Optional<A>.isNilOrEmpty.getter(v5, v6);
  uint64_t v8 = OUTLINED_FUNCTION_62();
  if ((v7 & 1) != 0
    || (uint64_t v9 = CodeGenBase.entity.getter(v8),
        uint64_t v10 = type metadata accessor for UsoEntity_common_PhoneNumber(0LL),
        OUTLINED_FUNCTION_48_29(v9, v10, &v46),
        OUTLINED_FUNCTION_38_1(),
        uint64_t v11 = v46,
        OUTLINED_FUNCTION_38_1(),
        !v11))
  {
    uint64_t v35 = v4;
LABEL_11:
    swift_release(v35);
LABEL_12:
    swift_retain();
    return v2;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = (os_log_s *)OUTLINED_FUNCTION_9();
  os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v17 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v46 = 0LL;
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    unint64_t v47 = 0xE000000000000000LL;
    uint64_t v48 = v17;
    OUTLINED_FUNCTION_91_2( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of UsoEntity_common_Person.getRedactCommonPerson());
    uint64_t v46 = OUTLINED_FUNCTION_9_25(v19, v20, v21, v22, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v16 + 4);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_57_0( &dword_0,  v13,  v15,  "%s needs to clean uso person that has both request name and request handle",  v16);
    OUTLINED_FUNCTION_17_0(v18);
    OUTLINED_FUNCTION_0_2(v18);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  uint64_t v24 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
  OUTLINED_FUNCTION_15_2(v24);
  uint64_t v25 = UsoEntityBuilder_common_Person.init()();
  uint64_t v26 = type metadata accessor for UsoEntityBuilder_common_ContactAddress(0LL);
  OUTLINED_FUNCTION_15_2(v26);
  uint64_t v27 = UsoEntityBuilder_common_ContactAddress.init()();
  uint64_t v28 = swift_retain();
  uint64_t v29 = CodeGenBase.entity.getter(v28);
  OUTLINED_FUNCTION_16_3();
  static UsoBuilderConversionUtils.copyEntityDataToEntityBuilder(entityBuilder:entity:copyValueType:copyIdentifiers:copyUtteranceAlignments:)( v27,  v29,  1LL,  1LL,  1LL);
  OUTLINED_FUNCTION_38_1();
  uint64_t v30 = swift_retain();
  dispatch thunk of UsoEntityBuilder_common_Person.setSpecifyingContactAddress(value:)( v30,  &protocol witness table for UsoEntityBuilder_common_ContactAddress);
  OUTLINED_FUNCTION_77_0();
  uint64_t v31 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v25);
  uint64_t v32 = type metadata accessor for UsoEntity_common_Person(0LL);
  uint64_t v33 = OUTLINED_FUNCTION_48_29(v31, v32, &v46);
  uint64_t v34 = v46;
  if (!v46)
  {
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v45 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v46 = 0LL;
      *(_DWORD *)uint64_t v39 = 136315138;
      unint64_t v47 = 0xE000000000000000LL;
      uint64_t v48 = v45;
      OUTLINED_FUNCTION_91_2( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of UsoEntity_common_Person.getRedactCommonPerson());
      uint64_t v46 = OUTLINED_FUNCTION_9_25(v40, v41, v42, v43, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v39 + 4);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v37, v38, "%s can't create a new entity, returns the current one", v39);
      OUTLINED_FUNCTION_17_0(v45);
      OUTLINED_FUNCTION_0_2(v45);
      OUTLINED_FUNCTION_0_2((uint64_t)v39);
      OUTLINED_FUNCTION_16_3();
      OUTLINED_FUNCTION_77_0();
      OUTLINED_FUNCTION_76();
    }

    else
    {

      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_77_0();
      OUTLINED_FUNCTION_16_3();
    }

    uint64_t v35 = v31;
    goto LABEL_11;
  }

  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_16_3();
  swift_release(v31);
  return v34;
}

uint64_t protocol witness for UsoContactConvertible.name.getter in conformance UsoEntity_common_Person()
{
  return dispatch thunk of UsoEntity_common_Person.name.getter();
}

uint64_t protocol witness for UsoContactConvertible.identifyingRelationship.getter in conformance UsoEntity_common_Person()
{
  return dispatch thunk of UsoEntity_common_Person.identifyingRelationship.getter();
}

uint64_t protocol witness for UsoContactConvertible.specifyingContactAddress.getter in conformance UsoEntity_common_Person()
{
  return dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter();
}

void protocol witness for UsoContactConvertible.usoPerson.getter in conformance UsoEntity_common_Person()
{
}

void *UsoContactConvertible.vocabularyAppsBundleSet.getter()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for UsoIdentifier(0LL);
  OUTLINED_FUNCTION_44_8();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  UsoContactConvertible.nameIdentifiers.getter(v6, v4);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = v7 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v10 = *(void *)(v2 + 72);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    do
    {
      uint64_t v12 = v11(v1, v9, v0);
      uint64_t v13 = UsoIdentifier.namespace.getter(v12);
      if (v14)
      {
        if (v13 == 0x64695F6D657469LL && v14 == 0xE700000000000000LL)
        {
          uint64_t v17 = OUTLINED_FUNCTION_62();
        }

        else
        {
          char v16 = OUTLINED_FUNCTION_49_2(v13, v14, 0x64695F6D657469LL, 0xE700000000000000LL);
          uint64_t v17 = OUTLINED_FUNCTION_62();
          if ((v16 & 1) == 0) {
            goto LABEL_12;
          }
        }

        UsoIdentifier.appBundleId.getter(v17);
        specialized Set._Variant.insert(_:)();
        swift_bridgeObjectRelease();
      }

uint64_t protocol witness for UsoContactConvertible.name.getter in conformance UsoEntity_common_Agent()
{
  return dispatch thunk of UsoEntity_common_Agent.name.getter();
}

void protocol witness for UsoContactConvertible.identifyingRelationship.getter in conformance UsoEntity_common_Agent()
{
}

void protocol witness for UsoContactConvertible.usoReferenceType.getter in conformance UsoEntity_common_Agent( uint64_t a1)
{
}

void protocol witness for UsoContactConvertible.specifyingContactAddress.getter in conformance UsoEntity_common_Agent( uint64_t a1)
{
}

void protocol witness for UsoContactConvertible.usoSearchQualifier.getter in conformance UsoEntity_common_Agent()
{
}

void protocol witness for UsoContactConvertible.usoPerson.getter in conformance UsoEntity_common_Agent()
{
}

void UsoContactConvertible.nameIdentifiers.getter(uint64_t a1, uint64_t a2)
{
}

void UsoContactConvertible.utteranceAlignment.getter(uint64_t a1, uint64_t a2)
{
}

void UsoContactConvertible.nameSpans.getter( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  if (!(*(uint64_t (**)(void))(a2 + 48))()
    || (uint64_t v4 = a3(1701667182LL, 0xE400000000000000LL), OUTLINED_FUNCTION_38_1(), !v4))
  {
    swift_bridgeObjectRelease();
  }

  OUTLINED_FUNCTION_2();
}

void UsoContactConvertible.hasFullBusinessNameProperty.getter()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for UsoEntitySpan(0LL);
  OUTLINED_FUNCTION_44_8();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  UsoContactConvertible.nameSpans.getter(v6, v4);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = v7 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v10 = *(void *)(v2 + 72);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v11(v1, v9, v0);
      char v12 = closure #1 in UsoContactConvertible.hasFullBusinessNameProperty.getter(v1);
      OUTLINED_FUNCTION_36_35();
      if ((v12 & 1) != 0) {
        break;
      }
      v9 += v10;
      --v8;
    }

    while (v8);
    OUTLINED_FUNCTION_98_1();
  }

  else
  {
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in UsoContactConvertible.hasFullBusinessNameProperty.getter(uint64_t a1)
{
  uint64_t v40 = v2;
  uint64_t v3 = OUTLINED_FUNCTION_65_1();
  uint64_t v45 = type metadata accessor for UsoEntitySpan(v3);
  uint64_t v44 = *(void *)(v45 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v43 = v4;
  uint64_t v5 = OUTLINED_FUNCTION_65_1();
  uint64_t v6 = type metadata accessor for PayloadAttachmentInfo.AttachmentType(v5);
  uint64_t v41 = *(void *)(v6 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v39 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  char v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = __chkstk_darwin();
  uint64_t v21 = (char *)&v38 - v20;
  uint64_t v42 = a1;
  UsoEntitySpan.payloadAttachmentInfo.getter(v19);
  uint64_t v22 = type metadata accessor for PayloadAttachmentInfo(0LL);
  if (__swift_getEnumTagSinglePayload(v14, 1LL, v22) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v14,  &demangling cache variable for type metadata for PayloadAttachmentInfo?);
    OUTLINED_FUNCTION_1_38((uint64_t)v21, 1LL);
  }

  else
  {
    PayloadAttachmentInfo.attachmentType.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8LL))(v14, v22);
  }

  uint64_t v23 = v41;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))( v18,  enum case for PayloadAttachmentInfo.AttachmentType.full(_:),  v6);
  OUTLINED_FUNCTION_1_38((uint64_t)v18, 0LL);
  uint64_t v24 = v11 + *(int *)(v8 + 48);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v21,  v11,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v18,  v24,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  OUTLINED_FUNCTION_28_40(v11);
  if (v26)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v18,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v21,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    OUTLINED_FUNCTION_28_40(v24);
    if (v26)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v11,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      uint64_t v25 = OUTLINED_FUNCTION_7_96();
      goto LABEL_14;
    }

Swift::Bool __swiftcall UsoContactConvertible.isNameLikelyNonBusiness()()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v182 = type metadata accessor for IndexSet.RangeView(0LL);
  uint64_t v181 = *(void *)(v182 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v185 = type metadata accessor for PayloadAttachmentInfo.AttachmentType(0LL);
  uint64_t v199 = *(void *)(v185 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_24_45(v10, v167);
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v194 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v191 = v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v188 = v16;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  uint64_t v198 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpanProperty?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v187 = (char *)&v167 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v189 = (char *)&v167 - v19;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  uint64_t v196 = v20;
  uint64_t v21 = OUTLINED_FUNCTION_65_1();
  uint64_t v204 = type metadata accessor for UsoEntitySpan(v21);
  uint64_t v197 = *(void *)(v204 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v195 = v22;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v200 = (char *)v23;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v193 = v24;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  uint64_t v205 = v25;
  uint64_t v26 = OUTLINED_FUNCTION_65_1();
  uint64_t v27 = type metadata accessor for IndexSet(v26);
  uint64_t v183 = *(void *)(v27 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v186 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v30 = (char *)&v167 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  char v32 = (char *)&v167 - v31;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceAlignment?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v201 = type metadata accessor for UtteranceAlignment(0LL);
  uint64_t v190 = *(void *)(v201 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v202 = v6;
  uint64_t v203 = v0;
  uint64_t v34 = v33(v6, v4);
  if (!v35) {
    goto LABEL_10;
  }
  uint64_t v36 = v35;
  uint64_t v37 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000LL) == 0) {
    uint64_t v37 = v34 & 0xFFFFFFFFFFFFLL;
  }
  if (!v37)
  {
    OUTLINED_FUNCTION_39();
LABEL_10:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v41 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
    uint64_t v42 = (os_log_s *)OUTLINED_FUNCTION_9();
    os_log_type_t v44 = static os_log_type_t.debug.getter(v42, v43);
    if (os_log_type_enabled(v42, v44))
    {
      uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v206 = 0LL;
      unint64_t v207 = 0xE000000000000000LL;
      uint64_t v208 = v46;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of UsoContactConvertible.isNameLikelyNonBusiness(),  0xD000000000000019LL,  (void *)0x8000000000350420LL);
      uint64_t v206 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v206, v207, &v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, &v207, v45 + 4);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v42, v44, "%s -  Name is nil or empty, returning false", v45);
      OUTLINED_FUNCTION_17_0(v46);
      OUTLINED_FUNCTION_0_2(v46);
      OUTLINED_FUNCTION_0_2((uint64_t)v45);
    }

    goto LABEL_15;
  }

  uint64_t v176 = v34;
  uint64_t v177 = v27;
  uint64_t v179 = v9;
  uint64_t v38 = v202;
  UsoContactConvertible.nameSpans.getter(v202, v4);
  uint64_t v40 = *(void *)(v39 + 16);
  swift_bridgeObjectRelease();
  if (v40)
  {
    UsoContactConvertible.utteranceAlignment.getter(v38, v4);
    specialized Collection.first.getter();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_35(v2, 1LL, v201);
    if (!v86)
    {
      uint64_t v178 = v13;
      uint64_t v48 = v190;
      uint64_t v49 = OUTLINED_FUNCTION_98_0();
      v50(v49);
      uint64_t v171 = v4;
      UsoContactConvertible.hasFullBusinessNameProperty.getter();
      if ((v51 & 1) != 0)
      {
        OUTLINED_FUNCTION_39();
        uint64_t v52 = OUTLINED_FUNCTION_98_0();
LABEL_24:
        v54(v52, v53);
        goto LABEL_15;
      }

      UtteranceAlignment.spans.getter(v51);
      specialized Collection.first.getter();
      OUTLINED_FUNCTION_62();
      uint64_t v55 = type metadata accessor for UtteranceSpan(0LL);
      uint64_t v56 = OUTLINED_FUNCTION_35((uint64_t)v32, 1LL, v55);
      if (!v86)
      {
        unsigned int v57 = UtteranceSpan.startIndex.getter(v56);
        uint64_t v58 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v55 - 8) + 8LL);
        uint64_t v59 = v58(v32, v55);
        UtteranceAlignment.spans.getter(v59);
        specialized Collection.first.getter();
        OUTLINED_FUNCTION_62();
        uint64_t v60 = OUTLINED_FUNCTION_35((uint64_t)v30, 1LL, v55);
        if (!v86)
        {
          uint64_t v169 = v1;
          unsigned int v61 = UtteranceSpan.endIndex.getter(v60);
          LOBYTE(v47) = v58(v30, v55);
          if (v61 < v57)
          {
LABEL_104:
            __break(1u);
            return v47;
          }

          unsigned int v168 = v57;
          IndexSet.init(integersIn:)(v57, v61);
          UsoContactConvertible.nameSpans.getter(v202, v171);
          uint64_t v63 = *(void *)(v62 + 16);
          uint64_t v64 = v179;
          uint64_t v65 = v185;
          uint64_t v67 = v193;
          uint64_t v66 = v194;
          uint64_t v68 = v188;
          if (!v63)
          {
            uint64_t v146 = swift_bridgeObjectRelease();
LABEL_101:
            uint64_t v147 = v186;
            IndexSet.rangeView.getter(v146);
            __chkstk_darwin();
            uint64_t v148 = v171;
            *(&v167 - 12) = v202;
            *(&v167 - __swift_destroy_boxed_opaque_existential_1(v0 + 11) = v148;
            uint64_t v149 = v176;
            *(&v167 - __swift_destroy_boxed_opaque_existential_1(v0 + 10) = v176;
            *(&v167 - 9) = v36;
            *((_DWORD *)&v167 - __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v168;
            *(&v167 - 7) = (uint64_t)&type metadata for String;
            *(&v167 - 6) = (uint64_t)&outlined read-only object #0 of UsoContactConvertible.isNameLikelyNonBusiness();
            *(&v167 - __swift_destroy_boxed_opaque_existential_1(v0 + 5) = 0LL;
            *(&v167 - __swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
            uint64_t v150 = v169;
            uint64_t v151 = v203;
            *(&v167 - __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v169;
            *(&v167 - 2) = v151;
            uint64_t v152 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF10Foundation8IndexSetV9RangeViewV_SnySS0E0VGs5NeverOTg5((void (*)(__int128 *__return_ptr, __int128 *))partial apply for closure #1 in UsoContactConvertible.isNameLikelyNonBusiness());
            OUTLINED_FUNCTION_27_53();
            OUTLINED_FUNCTION_11_48(v64, v153);
            swift_bridgeObjectRetain();
            unint64_t v154 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySnySS5IndexVGG_Sss5NeverOTg5095_s27PhoneCallFlowDelegatePlugin21UsoContactConvertiblePAAE23isNameLikelyNonBusinessSbyFSsSnySS5D8VGXEfU0_SSTf1cn_n( (uint64_t)v152,  v149,  v36);
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_39();
            uint64_t v206 = v154;
            uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Substring]);
            unint64_t v156 = lazy protocol witness table accessor for type [Substring] and conformance [A]();
            unint64_t v157 = lazy protocol witness table accessor for type Substring and conformance Substring();
            uint64_t v158 = Sequence<>.joined(separator:)(0LL, 0xE000000000000000LL, v155, v156, v157);
            uint64_t v160 = v159;
            swift_bridgeObjectRelease();
            specialized Sequence.allSatisfy(_:)(v158, v160);
            OUTLINED_FUNCTION_27_53();
            OUTLINED_FUNCTION_11_48(v147, v161);
            OUTLINED_FUNCTION_27_53();
            v162(v150, v201);
            OUTLINED_FUNCTION_62();
            goto LABEL_15;
          }

          unint64_t v69 = (*(unsigned __int8 *)(v197 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80);
          uint64_t v167 = v62;
          unint64_t v70 = v62 + v69;
          unsigned int v172 = enum case for PayloadAttachmentInfo.AttachmentType.full(_:);
          uint64_t v173 = *(void *)(v197 + 72);
          uint64_t v180 = *(void *)(v197 + 16);
          while (1)
          {
            uint64_t v175 = v63;
            unint64_t v174 = v70;
            uint64_t v71 = OUTLINED_FUNCTION_3_105();
            uint64_t v72 = UsoEntitySpan.properties.getter(v71);
            uint64_t v73 = *(void *)(v72 + 16);
            uint64_t v74 = type metadata accessor for SpanProperty(0LL);
            if (v73)
            {
              OUTLINED_FUNCTION_10_69();
              uint64_t v75 = v196;
              OUTLINED_FUNCTION_28_50(v76, v77);
              uint64_t v78 = 0LL;
            }

            else
            {
              uint64_t v78 = 1LL;
              uint64_t v75 = v196;
            }

            __swift_storeEnumTagSinglePayload(v75, v78, 1LL, v74);
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_35(v75, 1LL, v74);
            if (v86)
            {
              outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v75,  &demangling cache variable for type metadata for SpanProperty?);
              uint64_t v79 = OUTLINED_FUNCTION_3_105();
            }

            else
            {
              OUTLINED_FUNCTION_57_24();
              OUTLINED_FUNCTION_15_70();
              OUTLINED_FUNCTION_22_51();
              BOOL v86 = v75 == (v85 & 0xFFFFFFFFFFFFLL | 0x614E000000000000LL) && v72 == 0xEA0000000000656DLL;
              if (v86)
              {
                swift_bridgeObjectRelease();
                uint64_t v91 = v204;
                OUTLINED_FUNCTION_3_105();
LABEL_43:
                uint64_t v58 = *(uint64_t (**)(char *, uint64_t))(v197 + 8);
                v58(v67, v91);
                goto LABEL_56;
              }

              OUTLINED_FUNCTION_12_76();
              char v90 = OUTLINED_FUNCTION_49_2( v88,  v89,  v87 & 0xFFFFFFFFFFFFLL | 0x614E000000000000LL,  0xEA0000000000656DLL);
              OUTLINED_FUNCTION_62();
              uint64_t v91 = v204;
              uint64_t v79 = OUTLINED_FUNCTION_3_105();
              if ((v90 & 1) != 0) {
                goto LABEL_43;
              }
            }

            uint64_t v80 = UsoEntitySpan.properties.getter(v79);
            if (*(void *)(v80 + 16))
            {
              OUTLINED_FUNCTION_10_69();
              uint64_t v81 = (uint64_t)v189;
              OUTLINED_FUNCTION_28_50(v82, v83);
              uint64_t v84 = 0LL;
            }

            else
            {
              uint64_t v84 = 1LL;
              uint64_t v81 = (uint64_t)v189;
            }

            __swift_storeEnumTagSinglePayload(v81, v84, 1LL, v74);
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_35(v81, 1LL, v74);
            if (v86)
            {
              outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v81,  &demangling cache variable for type metadata for SpanProperty?);
              uint64_t v58 = *(uint64_t (**)(char *, uint64_t))(v197 + 8);
              v58(v67, v204);
              uint64_t v92 = OUTLINED_FUNCTION_3_105();
            }

            else
            {
              OUTLINED_FUNCTION_57_24();
              OUTLINED_FUNCTION_15_70();
              OUTLINED_FUNCTION_22_51();
              if (v81 == (v93 & 0xFFFFFFFFFFFFLL | 0x7250000000000000LL) && v80 == 0xEC00000078696665LL)
              {
                OUTLINED_FUNCTION_18_58();
                swift_bridgeObjectRelease();
LABEL_56:
                uint64_t v99 = (uint64_t)v200;
                OUTLINED_FUNCTION_3_105();
LABEL_57:
                OUTLINED_FUNCTION_37_23(v99);
LABEL_58:
                uint64_t v104 = v198;
                uint64_t v105 = v195;
                OUTLINED_FUNCTION_3_105();
LABEL_59:
                uint64_t v106 = OUTLINED_FUNCTION_37_23(v105);
                goto LABEL_60;
              }

              OUTLINED_FUNCTION_12_76();
              char v98 = OUTLINED_FUNCTION_49_2( v96,  v97,  v95 & 0xFFFFFFFFFFFFLL | 0x7250000000000000LL,  0xEC00000078696665LL);
              OUTLINED_FUNCTION_18_58();
              OUTLINED_FUNCTION_62();
              uint64_t v99 = (uint64_t)v200;
              uint64_t v92 = OUTLINED_FUNCTION_3_105();
              if ((v98 & 1) != 0) {
                goto LABEL_57;
              }
            }

            if (*(void *)(UsoEntitySpan.properties.getter(v92) + 16))
            {
              OUTLINED_FUNCTION_10_69();
              uint64_t v100 = (uint64_t)v187;
              OUTLINED_FUNCTION_28_50(v101, v102);
              uint64_t v103 = 0LL;
            }

            else
            {
              uint64_t v103 = 1LL;
              uint64_t v100 = (uint64_t)v187;
            }

            __swift_storeEnumTagSinglePayload(v100, v103, 1LL, v74);
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_35(v100, 1LL, v74);
            if (v86)
            {
              outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v100,  &demangling cache variable for type metadata for SpanProperty?);
              v58(v200, v204);
              uint64_t v105 = v195;
              uint64_t v126 = OUTLINED_FUNCTION_3_105();
              uint64_t v104 = v198;
            }

            else
            {
              uint64_t v138 = OUTLINED_FUNCTION_57_24();
              uint64_t v140 = v139;
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8LL))(v100, v74);
              OUTLINED_FUNCTION_22_51();
              if (v138 == (v141 & 0xFFFFFFFFFFFFLL | 0x7553000000000000LL) && v140 == 0xEC00000078696666LL)
              {
                OUTLINED_FUNCTION_37_23((uint64_t)v200);
                swift_bridgeObjectRelease();
                uint64_t v65 = v185;
                goto LABEL_58;
              }

              OUTLINED_FUNCTION_12_76();
              int v170 = OUTLINED_FUNCTION_49_2( v144,  v145,  v143 & 0xFFFFFFFFFFFFLL | 0x7553000000000000LL,  0xEC00000078696666LL);
              OUTLINED_FUNCTION_37_23((uint64_t)v200);
              OUTLINED_FUNCTION_62();
              uint64_t v105 = v195;
              uint64_t v126 = OUTLINED_FUNCTION_3_105();
              uint64_t v65 = v185;
              uint64_t v104 = v198;
              if ((v170 & 1) != 0) {
                goto LABEL_59;
              }
            }

            UsoEntitySpan.label.getter(v126);
            if (!v127)
            {
              OUTLINED_FUNCTION_41_34(v105);
              goto LABEL_78;
            }

            OUTLINED_FUNCTION_22_51();
            if (v130 == (v129 & 0xFFFFFFFFFFFFLL | 0x7546000000000000LL) && v128 == 0xEE00656D614E6C6CLL)
            {
              OUTLINED_FUNCTION_41_34(v105);
              uint64_t v106 = OUTLINED_FUNCTION_62();
            }

            else
            {
              OUTLINED_FUNCTION_12_76();
              char v135 = OUTLINED_FUNCTION_49_2( v133,  v134,  v132 & 0xFFFFFFFFFFFFLL | 0x7546000000000000LL,  0xEE00656D614E6C6CLL);
              uint64_t v136 = v105;
              char v137 = v135;
              OUTLINED_FUNCTION_41_34(v136);
              uint64_t v106 = OUTLINED_FUNCTION_62();
              if ((v137 & 1) == 0) {
                goto LABEL_78;
              }
            }

unint64_t closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>( char *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, unint64_t *a8@<X8>, unint64_t a9, char *a10, uint64_t a11)
{
  uint64_t v78 = a7;
  uint64_t v79 = a6;
  uint64_t v73 = a5;
  uint64_t v81 = a8;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  __chkstk_darwin();
  uint64_t v74 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = *(void *)(a11 - 8);
  uint64_t v83 = a11;
  __chkstk_darwin();
  uint64_t v76 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v19 = type metadata accessor for UtteranceAlignment(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = *(void *)a1 - a4;
  if (__OFSUB__(*(void *)a1, a4))
  {
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v72 = *(void *)a1;
  uint64_t v80 = *((void *)a1 + 1);
  uint64_t v24 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000LL) == 0) {
    uint64_t v24 = a2;
  }
  uint64_t v25 = 7LL;
  if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v25 = 11LL;
  }
  uint64_t v26 = v25 | (v24 << 16);
  unint64_t result = String.index(_:offsetBy:limitedBy:)(15LL, v23, v26, a2, a3);
  if ((v28 & 1) != 0)
  {
LABEL_11:
    a3 = a9;
    a1 = (char *)a10;
    if (one-time initialization token for siriPhone == -1)
    {
LABEL_12:
      uint64_t v31 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
      uint64_t v77 = v20;
      char v32 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
      uint64_t v33 = v22;
      uint64_t v34 = v19;
      v32(v22, a3, v19);
      uint64_t v35 = v82;
      uint64_t v36 = v18;
      uint64_t v37 = a1;
      uint64_t v38 = v83;
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
      v71(v18, v37, v83);
      uint64_t v39 = v78;
      swift_bridgeObjectRetain_n(v78, 2LL);
      uint64_t v40 = v79;
      uint64_t v41 = swift_bridgeObjectRetain_n(v79, 2LL);
      uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
      os_log_type_t v43 = static os_log_type_t.fault.getter();
      int v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v45 = swift_slowAlloc(42LL, -1LL);
        uint64_t v67 = v36;
        uint64_t v46 = v45;
        uint64_t v70 = swift_slowAlloc(128LL, -1LL);
        uint64_t v86 = v70;
        *(_DWORD *)uint64_t v46 = 136315906;
        uint64_t v84 = 0LL;
        v85[0] = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        int v69 = v44;
        os_log_t v68 = v42;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( v73,  v40,  0xD000000000000019LL,  (void *)0x8000000000350420LL);
        swift_bridgeObjectRelease();
        uint64_t v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85[0], &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85, v46 + 4);
        swift_bridgeObjectRelease_n(v39, 2LL);
        swift_bridgeObjectRelease_n(v40, 2LL);
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        uint64_t v53 = specialized Range.description.getter(v72, v80, v47, v48, v49, v50, v51, v52);
        uint64_t v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85, v46 + 14);
        uint64_t v55 = swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 22) = 2080;
        UtteranceAlignment.spans.getter(v55);
        uint64_t v56 = v74;
        specialized Collection.first.getter();
        swift_bridgeObjectRelease();
        uint64_t v57 = String.init<A>(describing:)(v56, v75);
        uint64_t v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v58, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85, v46 + 24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v77 + 8))(v33, v34);
        *(_WORD *)(v46 + 32) = 2080;
        uint64_t v59 = v76;
        uint64_t v60 = v67;
        uint64_t v61 = v83;
        v71(v76, v67, v83);
        uint64_t v62 = String.init<A>(describing:)(v59, v61);
        uint64_t v84 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85, v46 + 34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v60, v61);
        uint64_t v42 = v68;
        _os_log_impl( &dword_0,  v68,  (os_log_type_t)v69,  "%s- Unexpected: UtteranceAlignment range is greater than name - Current Range: %s -- Alignment Span: %s -- Self: %s",  (uint8_t *)v46,  0x2Au);
        uint64_t v64 = v70;
        swift_arrayDestroy(v70, 4LL);
        swift_slowDealloc(v64, -1LL, -1LL);
        swift_slowDealloc(v46, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(v39, 2LL);
        swift_bridgeObjectRelease_n(v40, 2LL);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v33, v34);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v38);
      }

      unint64_t v29 = 15LL;
      unint64_t result = 15LL;
      goto LABEL_16;
    }

unint64_t partial apply for closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>( char *a1@<X0>, unint64_t *a2@<X8>)
{
  return closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()( a1,  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(_DWORD *)(v2 + 48),  *(void *)(v2 + 56),  *(void *)(v2 + 64),  *(void *)(v2 + 80),  a2,  *(void *)(v2 + 88),  *(char **)(v2 + 96),  *(void *)(v2 + 16));
}

uint64_t OUTLINED_FUNCTION_3_105()
{
  return (*(uint64_t (**)(void))(v0 - 344))();
}

uint64_t OUTLINED_FUNCTION_7_96()
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(v0 - 88) + 16LL))( *(void *)(v0 - 96),  *(void *)(v0 - 104),  *(void *)(v0 - 72));
}

  ;
}

void OUTLINED_FUNCTION_11_74(uint64_t a1)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_15_70()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8LL))(v0, v1);
}

void OUTLINED_FUNCTION_17_59()
{
}

uint64_t OUTLINED_FUNCTION_18_58()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 208) + 8LL))(v0, *(void *)(v1 - 152));
}

void OUTLINED_FUNCTION_19_56(uint64_t a1, uint64_t a2)
{
}

  ;
}

void OUTLINED_FUNCTION_24_45(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 312) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_28_50@<X0>( uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(v2, a1, v3);
}

void OUTLINED_FUNCTION_29_41()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_33_49(uint64_t a1)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_36_35()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_39_29(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_41_34(uint64_t a1)
{
  return v1(a1, *(void *)(v2 - 152));
}

void *OUTLINED_FUNCTION_48_29@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(a3, a1, a2, a2);
}

uint64_t OUTLINED_FUNCTION_55_24()
{
  return swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 - 96));
}

void OUTLINED_FUNCTION_59_19(uint64_t a1, uint64_t a2)
{
}

void OUTLINED_FUNCTION_61_21()
{
}

void OUTLINED_FUNCTION_63_21()
{
}

void AppResolutionStateProvider.init(requestedBundleId:)(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone(SAIntentGroupSiriKitAppSelectionState) init];
  id v6 = [objc_allocWithZone(SASyncAppIdentifyingInfo) init];
  outlined bridged method (mbnn) of @objc SASyncAppIdentifyingInfo.bundleId.setter(a1, a2, v6);
  [v4 setRequestedApp:v6];
  id v5 = v4;
  AppResolutionStateProvider.init(appSelectionState:)(v4);
}

void outlined bridged method (mbnn) of @objc SASyncAppIdentifyingInfo.bundleId.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setBundleId:v5];
}

Swift::Bool __swiftcall AnnotatedApp.isAppInferred()()
{
  return *(_BYTE *)(v0 + 32) == 3;
}

void AnnotatedApp.init(app:supportedIntents:actionsRestrictedWhileLocked:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = App.appIdentifier.getter();
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  *(void *)(a4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v9;
  *(_BYTE *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = a3;
  OUTLINED_FUNCTION_6();
}

uint64_t AnnotatedAppFinder.init(firstPartyAnnotatedAppStore:thirdPartyAnnotatedAppStore:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  return outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a5 + 3));
}

uint64_t AnnotatedApp.init(app:supportedIntents:launchId:source:actionsRestrictedWhileLocked:)@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a3;
  *(void *)(a7 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  *(_BYTE *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

Swift::Bool __swiftcall AnnotatedApp.supports(intentTypeName:)(Swift::String intentTypeName)
{
  return result;
}

void AnnotatedApp.init(app:supportedIntents:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = App.appIdentifier.getter();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v6;
  *(void *)(a3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v7;
  *(_BYTE *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = &_swiftEmptySetSingleton;
  OUTLINED_FUNCTION_6();
}

uint64_t AnnotatedApp.withAppIdentifier(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = v3;
  uint64_t v10 = *v3;
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    uint64_t v20 = App.systemExtensionBundleId.getter();
    uint64_t v7 = v11;
    uint64_t v12 = App.systemUIExtensionBundleId.getter();
    uint64_t v14 = v13;
    uint64_t v6 = App.pluginIdentifier.getter();
    uint64_t v16 = v15;
    uint64_t v17 = OUTLINED_FUNCTION_46_5();
    swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
    OUTLINED_FUNCTION_6_1();
    uint64_t v10 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)( v5,  v4,  v20,  v7,  v12,  v14,  v6,  v16);
    OUTLINED_FUNCTION_3_106();
    swift_bridgeObjectRetain();
  }

  else
  {
    OUTLINED_FUNCTION_3_106();
    swift_bridgeObjectRetain();
    swift_retain();
  }

  uint64_t result = OUTLINED_FUNCTION_6_1();
  char v19 = *((_BYTE *)v8 + 32);
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *(void *)(a3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v5;
  *(_BYTE *)(a3 + 32) = v19;
  *(void *)(a3 + 40) = v6;
  return result;
}

void specialized static Set.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v3 = 0LL;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v36 = a1 + 56;
  uint64_t v5 = 1LL << *(_BYTE *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1LL << v5);
  }
  else {
    uint64_t v6 = -1LL;
  }
  unint64_t v7 = v6 & v4;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v38 = v3;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v19 = a1;
    uint64_t v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    Hasher.init(_seed:)(v39, *(void *)(a2 + 40));
    OUTLINED_FUNCTION_6_1();
    String.hash(into:)(v39, v22, v21);
    Swift::Int v23 = Hasher._finalize()();
    uint64_t v24 = -1LL << *(_BYTE *)(a2 + 32);
    unint64_t v25 = v23 & ~v24;
    if (((*(void *)(v8 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v25) & 1) == 0) {
      goto LABEL_45;
    }
    uint64_t v26 = *(void *)(a2 + 48);
    uint64_t v27 = (uint64_t *)(v26 + 16 * v25);
    uint64_t v28 = v27[1];
    BOOL v29 = *v27 == v22 && v28 == v21;
    if (!v29 && (OUTLINED_FUNCTION_7_22(*v27, v28) & 1) == 0)
    {
      uint64_t v30 = ~v24;
      for (unint64_t j = v25 + 1; ; unint64_t j = v32 + 1)
      {
        uint64_t v32 = j & v30;
        uint64_t v33 = (uint64_t *)(v26 + 16 * v32);
        uint64_t v34 = v33[1];
        BOOL v35 = *v33 == v22 && v34 == v21;
        if (v35 || (OUTLINED_FUNCTION_7_22(*v33, v34) & 1) != 0) {
          goto LABEL_34;
        }
      }

uint64_t AnnotatedAppFinder.firstPartyAnnotatedAppStore.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  swift_retain(v2);
  swift_retain(v3);
  return v1;
}

void AnnotatedAppFinder.find(appQuery:device:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v6 = v5;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v13 = swift_bridgeObjectRetain_n(a3, 2LL);
  char v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v16 = static os_log_type_t.debug.getter(v14, v15);
  if (os_log_type_enabled(v14, v16))
  {
    int v44 = a5;
    uint64_t v17 = OUTLINED_FUNCTION_7_0(22LL);
    os_log_type_t v43 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v46 = v43;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016LL, 0x8000000000350440LL, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v17 + 4);
    *(_WORD *)(v17 + 12) = 2080;
    OUTLINED_FUNCTION_48_0();
    swift_bridgeObjectRetain();
    unint64_t v18 = AppQuery.description.getter(a1, a2, a3);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v17 + 14);
    OUTLINED_FUNCTION_7_4(a3);
    OUTLINED_FUNCTION_7_4(a2);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, v16, "#AnnotatedAppFinder %s appQuery=%s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v43, 2LL);
    OUTLINED_FUNCTION_0_2(v43);
    uint64_t v21 = v17;
    a5 = v44;
    OUTLINED_FUNCTION_0_2(v21);
  }

  else
  {

    OUTLINED_FUNCTION_7_4(a3);
    OUTLINED_FUNCTION_7_4(a2);
  }

  AppQuery.isFirstParty.getter(a1, a2);
  if ((v22 & 1) != 0)
  {
    if (a2)
    {
      Swift::Int v23 = (void *)a2;
    }

    else
    {
      uint64_t v35 = AppQuery.defaultAppId.getter(a1, 0LL, a3);
      if (!v36)
      {
        FirstPartyAnnotatedAppStore.getDefaultApp(for:)(a4, (uint64_t)&v46);
        uint64_t v34 = v51;
        uint64_t v31 = v48;
        uint64_t v32 = v49;
        uint64_t v33 = 1LL;
        uint64_t v29 = v46;
        uint64_t v30 = v47;
        goto LABEL_22;
      }

      a1 = v35;
      Swift::Int v23 = v36;
    }

    int64_t v37 = *(uint64_t (**)(uint64_t, uint64_t))v6;
    uint64_t v38 = *(void *)(v6 + 16);
    OUTLINED_FUNCTION_48_0();
    FirstPartyAnnotatedAppStore.getApp(for:device:)(a1, v23, a4, v37, v38, &v46);
    uint64_t v29 = v46;
    uint64_t v30 = v47;
    uint64_t v31 = v48;
    uint64_t v32 = v49;
    uint64_t v39 = v50;
    uint64_t v34 = v51;
    goto LABEL_18;
  }

  if (a2)
  {
    OUTLINED_FUNCTION_46_5();
    OUTLINED_FUNCTION_48_0();
    uint64_t v24 = App.__allocating_init(appIdentifier:)(a1, a2);
    Swift::Bool v25 = App.isFirstParty()();
    uint64_t v22 = swift_release(v24);
    if (!v25)
    {
      uint64_t v40 = *(void *)(v6 + 48);
      uint64_t v41 = *(void *)(v6 + 56);
      __swift_project_boxed_opaque_existential_1((void *)(v6 + 24), v40);
      uint64_t v42 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8);
      OUTLINED_FUNCTION_48_0();
      v42(&v46, a1, a2, v40, v41);
      uint64_t v29 = v46;
      uint64_t v30 = v47;
      uint64_t v31 = v48;
      uint64_t v32 = v49;
      uint64_t v39 = v50;
      uint64_t v34 = v51;
LABEL_18:
      swift_bridgeObjectRelease();
      uint64_t v33 = 1LL;
      if (a2) {
        uint64_t v33 = 2LL;
      }
      if (!v29) {
        uint64_t v33 = v39;
      }
      goto LABEL_22;
    }
  }

  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v26, v27, "#AnnotatedAppFinder Malformed query! Returning nil", v28, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v28);
  }

  uint64_t v29 = 0LL;
  uint64_t v30 = 0LL;
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v33 = 0LL;
  uint64_t v34 = 0LL;
LABEL_22:
  *a5 = v29;
  a5[1] = v30;
  a5[2] = v31;
  a5[3] = v32;
  a5[4] = v33;
  a5[5] = v34;
}

uint64_t AnnotatedApp.withSource(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[5];
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  *(void *)(a2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v6;
  *(_BYTE *)(a2 + 32) = a1;
  *(void *)(a2 + 40) = v7;
  swift_retain();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_48_0();
  return swift_bridgeObjectRetain();
}

void AnnotatedAppFinder.findForAppSelection(app:device:appResolutionSource:)( uint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = App.appIdentifier.getter();
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AppQuery.Builder();
  swift_allocObject(v11, 40LL, 7LL);
  AppQuery.Builder.init(requestedAppId:overrides:)(v8, v10, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v13 = v12;
  uint64_t v14 = swift_release(a1);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 160LL))(v14);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_release(v13);
  AnnotatedAppFinder.find(appQuery:device:)(v15, v17, v19, a2, v43);
  uint64_t v21 = v43[0];
  uint64_t v20 = v43[1];
  uint64_t v23 = v43[2];
  uint64_t v22 = v43[3];
  uint64_t v24 = v43[4];
  uint64_t v41 = v43[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined init with take of AnnotatedApp?( (uint64_t)v43,  (uint64_t)v44,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (v44[0])
  {
    uint64_t v24 = a3;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v25 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = swift_retain_n(a1, 2LL);
    os_log_type_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v40 = v23;
      uint64_t v29 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v39 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v42 = v39;
      *(_DWORD *)uint64_t v29 = 136315394;
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034LL, 0x8000000000350460LL, &v42);
      OUTLINED_FUNCTION_4_59();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v30, v31, v29 + 4);
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v32 = OUTLINED_FUNCTION_46_5();
      unint64_t v33 = lazy protocol witness table accessor for type App and conformance App();
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v32, v33);
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v42);
      OUTLINED_FUNCTION_4_59();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v36, v37, v29 + 14);
      OUTLINED_FUNCTION_17_30();
      swift_bridgeObjectRelease();
      _os_log_impl( &dword_0,  v27,  v28,  "#AnnotatedAppFinder %s Could not find AnnotatedApp for %s",  (uint8_t *)v29,  0x16u);
      swift_arrayDestroy(v39, 2LL);
      OUTLINED_FUNCTION_0_2(v39);
      uint64_t v38 = v29;
      uint64_t v23 = v40;
      OUTLINED_FUNCTION_0_2(v38);
    }

    else
    {

      OUTLINED_FUNCTION_17_30();
    }
  }

  *a4 = v21;
  a4[1] = v20;
  a4[2] = v23;
  a4[3] = v22;
  a4[4] = v24;
  a4[5] = v41;
}

Swift::Bool __swiftcall AnnotatedAppFinder.isInstalledOnDevice(appBundleId:)(Swift::String appBundleId)
{
  object = appBundleId._object;
  uint64_t countAndFlagsBits = appBundleId._countAndFlagsBits;
  objc_allocWithZone(&OBJC_CLASS___LSApplicationRecord);
  OUTLINED_FUNCTION_8_1();
  id v3 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(countAndFlagsBits, (uint64_t)object, 0);
  if (v3)
  {

    LOBYTE(specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)( v0,  v1,  v2, v3) = 1;
  }

  return (char)v3;
}

uint64_t protocol witness for AnnotatedAppFinding.find(appQuery:device:) in conformance AnnotatedAppFinder@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  return outlined init with take of AnnotatedApp?( (uint64_t)v7,  a5,  &demangling cache variable for type metadata for AnnotatedApp?);
}

uint64_t protocol witness for AnnotatedAppFinding.findForAppSelection(app:device:appResolutionSource:) in conformance AnnotatedAppFinder@<X0>( uint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  return outlined init with take of AnnotatedApp?( (uint64_t)v6,  a4,  &demangling cache variable for type metadata for AnnotatedApp?);
}

BOOL protocol witness for AnnotatedAppFinding.isInstalledOnDevice(appBundleId:) in conformance AnnotatedAppFinder( uint64_t a1, uint64_t a2)
{
  return AnnotatedAppFinder.isInstalledOnDevice(appBundleId:)(*(Swift::String *)&a1);
}

uint64_t AnnotatedApp.source.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AnnotatedApp.actionsRestrictedWhileLocked.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 40));
}

uint64_t AnnotatedApp.init(app:supportedIntents:launchId:)@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a3;
  *(void *)(a5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  *(_BYTE *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = &_swiftEmptySetSingleton;
  return result;
}

uint64_t AnnotatedApp.description.getter()
{
  v13[0] = 0LL;
  v13[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(102LL);
  uint64_t v11 = 0LL;
  unint64_t v12 = 0xE000000000000000LL;
  v1._object = (void *)0x80000000003504A0LL;
  v1._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v1);
  v13[0] = *(void *)v0;
  uint64_t v2 = OUTLINED_FUNCTION_46_5();
  unint64_t v3 = lazy protocol witness table accessor for type App and conformance App();
  swift_retain();
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v3);
  OUTLINED_FUNCTION_1_87(v14);
  swift_release(v13[0]);
  OUTLINED_FUNCTION_50();
  v15._uint64_t countAndFlagsBits = 0xD000000000000014LL;
  v15._object = (void *)0x80000000003504C0LL;
  OUTLINED_FUNCTION_1_87(v15);
  uint64_t v4 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_8_72(v4);
  OUTLINED_FUNCTION_1_87(v16);
  OUTLINED_FUNCTION_4_1();
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x68636E75616C202CLL;
  v5._object = (void *)0xEC000000203A6449LL;
  String.append(_:)(v5);
  outlined init with take of AnnotatedApp?( v0 + 16,  (uint64_t)v13,  &demangling cache variable for type metadata for String?);
  outlined init with take of AnnotatedApp?( (uint64_t)v13,  (uint64_t)v10,  &demangling cache variable for type metadata for String?);
  outlined retain of String?((uint64_t)v13);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  v17._uint64_t countAndFlagsBits = String.init<A>(describing:)(v10, v6);
  OUTLINED_FUNCTION_1_87(v17);
  OUTLINED_FUNCTION_4_1();
  v7._uint64_t countAndFlagsBits = 0x656372756F73202CLL;
  v7._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v7);
  v18._uint64_t countAndFlagsBits = AppResolutionSource.description.getter(*(_BYTE *)(v0 + 32));
  OUTLINED_FUNCTION_1_87(v18);
  OUTLINED_FUNCTION_4_1();
  v19._uint64_t countAndFlagsBits = 0xD000000000000020LL;
  v19._object = (void *)0x80000000003504E0LL;
  OUTLINED_FUNCTION_1_87(v19);
  uint64_t v8 = OUTLINED_FUNCTION_8_1();
  v20._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_8_72(v8);
  OUTLINED_FUNCTION_1_87(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void static AnnotatedApp.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((static App.== infix(_:_:)(*(void *)a1, *(void *)a2) & 1) == 0) {
    return;
  }
  specialized static Set.== infix(_:_:)(*(void *)(a1 + 8), *(void *)(a2 + 8));
  if ((v4 & 1) == 0) {
    return;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (v6) {
      return;
    }
    goto LABEL_12;
  }

  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a2 + 16);
    BOOL v9 = v7 == v8 && v5 == v6;
    if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v5, v8, v6, 0LL) & 1) != 0)
    {
LABEL_12:
    }
  }

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnnotatedApp()
{
  return AnnotatedApp.description.getter();
}

uint64_t AppResolutionSource.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_25AF84 + 4 * byte_33A4A0[a1]))( 0x6E776F6E6B6E752ELL,  0xE800000000000000LL);
}

unint64_t sub_25AF84()
{
  return 0xD000000000000010LL;
}

uint64_t sub_25AFA0()
{
  return 0x716552726573752ELL;
}

uint64_t sub_25AFC4()
{
  return 0x736165732ELL;
}

unint64_t sub_25AFD8()
{
  return 0xD000000000000017LL;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppResolutionSource()
{
  return AppResolutionSource.description.getter(*v0);
}

id @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, char a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v20[0] = 0LL;
  id v7 = [v3 initWithBundleIdentifier:v6 allowPlaceholder:a3 & 1 error:v20];

  id v8 = v20[0];
  if (v7)
  {
    id v9 = v20[0];
  }

  else
  {
    id v10 = v20[0];
    _convertNSErrorToError(_:)(v8);

    swift_willThrow(v11, v12, v13, v14, v15, v16, v17, v18, v20[0], v20[1], v20[2], v20[3], v20[4], v20[5]);
  }

  return v7;
}

unint64_t lazy protocol witness table accessor for type AppResolutionSource and conformance AppResolutionSource()
{
  unint64_t result = lazy protocol witness table cache variable for type AppResolutionSource and conformance AppResolutionSource;
  if (!lazy protocol witness table cache variable for type AppResolutionSource and conformance AppResolutionSource)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AppResolutionSource,  &type metadata for AppResolutionSource);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppResolutionSource and conformance AppResolutionSource);
  }

  return result;
}

void *assignWithCopy for AnnotatedAppFinder(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release(v5);
  uint64_t v6 = a1[2];
  a1[2] = a2[2];
  swift_retain();
  swift_release(v6);
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  return a1;
}

uint64_t assignWithTake for AnnotatedAppFinder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = *(void *)(a2 + 16);
  swift_release(v5);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 24));
  *(_OWORD *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void type metadata accessor for AnnotatedAppFinder()
{
}

uint64_t destroy for AnnotatedApp(void *a1)
{
  return swift_bridgeObjectRelease(a1[5]);
}

uint64_t initializeWithCopy for AnnotatedApp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a2[2];
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v5;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  uint64_t v6 = a2[5];
  *(void *)(a1 + 40) = v6;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *assignWithCopy for AnnotatedApp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  uint64_t v10 = a2[5];
  uint64_t v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t assignWithTake for AnnotatedApp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v5;
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease(v7);
  return a1;
}

void type metadata accessor for AnnotatedApp()
{
}

uint64_t storeEnumTagSinglePayload for AppResolutionSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_25B3E4 + 4 * byte_33A4AA[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_25B418 + 4 * byte_33A4A5[v4]))();
}

uint64_t sub_25B418(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_25B420(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x25B428LL);
  }
  return result;
}

uint64_t sub_25B434(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x25B43CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_25B440(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_25B448(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AppResolutionSource()
{
}

void OUTLINED_FUNCTION_1_87(Swift::String a1)
{
}

uint64_t OUTLINED_FUNCTION_3_106()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_8_72(uint64_t a1)
{
  return Set.description.getter(a1, v1, v2);
}

  ;
}

  ;
}

void *ResponseViewIdConstants.contactConfirmationViewId.unsafeMutableAddressor()
{
  return &static ResponseViewIdConstants.contactConfirmationViewId;
}

unint64_t static ResponseViewIdConstants.contactConfirmationViewId.getter()
{
  return 0xD000000000000011LL;
}

void *ResponseViewIdConstants.contactDisambiguationViewId.unsafeMutableAddressor()
{
  return &static ResponseViewIdConstants.contactDisambiguationViewId;
}

unint64_t static ResponseViewIdConstants.contactDisambiguationViewId.getter()
{
  return 0xD000000000000015LL;
}

ValueMetadata *type metadata accessor for ResponseViewIdConstants()
{
  return &type metadata for ResponseViewIdConstants;
}

uint64_t one-time initialization function for messageStore()
{
  uint64_t result = static MessageStoreController.shared.getter();
  static SiriPhoneMessageStoreController.messageStore = result;
  return result;
}

uint64_t SiriPhoneMessageStoreController.getMessages(recordUUIDs:)(uint64_t a1)
{
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  return swift_task_switch(SiriPhoneMessageStoreController.getMessages(recordUUIDs:), 0LL, 0LL);
}

uint64_t SiriPhoneMessageStoreController.getMessages(recordUUIDs:)()
{
  if (one-time initialization token for messageStore != -1) {
    swift_once(&one-time initialization token for messageStore, one-time initialization function for messageStore);
  }
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to MessageStoreController.getMessages(recordUUIDs:)[1]);
  *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  *uint64_t v1 = v0;
  v1[1] = SiriPhoneMessageStoreController.getMessages(recordUUIDs:);
  return MessageStoreController.getMessages(recordUUIDs:)(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_6_83();
  uint64_t v4 = OUTLINED_FUNCTION_14_1(*(void *)(v3 + 24));
  if (!v1) {
    uint64_t v4 = v0;
  }
  return OUTLINED_FUNCTION_116_1(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t protocol witness for SiriPhoneMessageStoreProtocol.getMessages(recordUUIDs:) in conformance SiriPhoneMessageStoreController( uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 80LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for SiriPhoneMessageStoreProtocol.getMessages(recordUUIDs:) in conformance SiriPhoneMessageStoreController;
  return v7(a1);
}

uint64_t protocol witness for SiriPhoneMessageStoreProtocol.getMessages(recordUUIDs:) in conformance SiriPhoneMessageStoreController()
{
  uint64_t v4 = OUTLINED_FUNCTION_14_1(*(void *)(v3 + 16));
  if (!v1) {
    uint64_t v4 = v0;
  }
  return OUTLINED_FUNCTION_116_1(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t type metadata accessor for SiriPhoneMessageStoreController()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin31SiriPhoneMessageStoreController);
}

void HangUpCallIntentRCHFlowStrategy.__allocating_init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)()
{
}

uint64_t HangUpCallIntentRCHFlowStrategy.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 24, a1);
}

uint64_t HangUpCallIntentRCHFlowStrategy.responseGenerator.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 72, a1);
}

void HangUpCallIntentRCHFlowStrategy.init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)()
{
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return swift_task_switch(HangUpCallIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:), 0LL, 0LL);
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)()
{
  uint64_t v2 = (__int128 *)(v0 + 56);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = swift_retain_n(v3, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
  uint64_t v9 = v8;
  BOOL v10 = os_log_type_enabled(v6, v8);
  uint64_t v11 = *(void *)(v0 + 112);
  if (v10)
  {
    uint64_t v12 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v34 = OUTLINED_FUNCTION_7_0(64LL);
    v35[0] = v34;
    *(_DWORD *)uint64_t v12 = 136315394;
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
    uint64_t v13 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
    swift_retain();
    uint64_t v14 = String.init<A>(describing:)(v0 + 16, v13);
    uint64_t v1 = v0 + 56;
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4);
    uint64_t v2 = (__int128 *)(v0 + 56);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_7();
    *(_WORD *)(v12 + 12) = 2080;
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000029LL,  0x800000000034C040LL,  v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 14);
    _os_log_impl(&dword_0, v6, (os_log_type_t)v9, "#%s %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v34, 2LL);
    OUTLINED_FUNCTION_0_2(v34);
    OUTLINED_FUNCTION_0_2(v12);
  }

  else
  {
    OUTLINED_FUNCTION_12_7();
  }

  uint64_t v16 = *(void *)(v0 + 96);
  OUTLINED_FUNCTION_18_59();
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 72))(v9, v1);
  (*(void (**)(uint64_t))(*(void *)v17 + 192LL))(v16);
  swift_release(v17);
  if (*(void *)(v0 + 80))
  {
    uint64_t v18 = *(void **)(v0 + 104);
    uint64_t v19 = *(void *)(v0 + 112);
    outlined init with take of AppSelectionSignalComponent(v2, v0 + 16);
    OUTLINED_FUNCTION_18_59();
    (*(void (**)(uint64_t, uint64_t))(v1 + 80))(v9, v1);
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v22 = *(void *)(v0 + 48);
    uint64_t v23 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v21);
    swift_retain();
    id v24 = v18;
    specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( (uint64_t)v23,  v20,  (uint64_t)v18,  0LL,  (uint64_t)v2,  v21,  v22);
    uint64_t v26 = v25;
    swift_release(v20);

    outlined destroy of SKTransformer((uint64_t)v2);
    if (v26)
    {
      __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
    }

    unint64_t v31 = lazy protocol witness table accessor for type ParseError and conformance ParseError();
    uint64_t v32 = OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ParseError, v31);
    OUTLINED_FUNCTION_7_63((__n128)xmmword_3201A0, v32, v33);
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  }

  else
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)v2);
    unint64_t v28 = lazy protocol witness table accessor for type ParseError and conformance ParseError();
    uint64_t v29 = OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ParseError, v28);
    OUTLINED_FUNCTION_7_63((__n128)xmmword_3201A0, v29, v30);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[14] = a1;
  uint64_t v6 = type metadata accessor for DialogPhase(0LL);
  v5[17] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for OutputGenerationManifest(0LL);
  v5[18] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[19] = v8;
  v5[20] = OUTLINED_FUNCTION_23(v8);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
  if (os_log_type_enabled(v3, v5))
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v7 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v15 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    *(void *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000003FLL,  0x80000000003505C0LL,  &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v6 + 4);
    _os_log_impl(&dword_0, v3, v5, "#HangUpIntentRCHFlowStrategy %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL);
    OUTLINED_FUNCTION_0_2(v7);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);
  }

  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = (char *)[*(id *)(v0 + 120) code];
  uint64_t v10 = **(void **)(v8 + 64);
  if (v9 == (_BYTE *)&dword_4 + 2)
  {
    uint64_t v11 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for HangUpCallCATsSimple + v10 + 16));
    *(void *)(v0 + 168) = v11;
    uint64_t v12 = HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  }

  else
  {
    uint64_t v11 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(v10 + class metadata base offset for HangUpCallCATsSimple));
    *(void *)(v0 + 176) = v11;
    uint64_t v12 = HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  }

  *uint64_t v11 = v0;
  v11[1] = v12;
  return v14();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v12;
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = OUTLINED_FUNCTION_14_67();
  OUTLINED_FUNCTION_16_48(v2, (uint64_t)closure #1 in closure #1 in CommunalDeviceEmergencyFlow.execute());
  OUTLINED_FUNCTION_4_91();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 40LL);
  OUTLINED_FUNCTION_14_31(v4, v5, v6, v7, (__n128)xmmword_31FE60);
  v0[24] = v12;
  uint64_t v8 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  uint64_t v9 = v1;
  uint64_t v10 = (void *)swift_task_alloc(v8);
  v0[25] = v10;
  OUTLINED_FUNCTION_6_91(v10);
  return OUTLINED_FUNCTION_3_54();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v12;
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = OUTLINED_FUNCTION_14_67();
  OUTLINED_FUNCTION_16_48(v2, (uint64_t)closure #1 in closure #1 in CommunalDeviceEmergencyFlow.execute());
  OUTLINED_FUNCTION_4_91();
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 40LL);
  OUTLINED_FUNCTION_14_31(v4, v5, v6, v7, (__n128)xmmword_31FE60);
  v0[24] = v12;
  uint64_t v8 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  uint64_t v9 = v1;
  uint64_t v10 = (void *)swift_task_alloc(v8);
  v0[25] = v10;
  OUTLINED_FUNCTION_6_91(v10);
  return OUTLINED_FUNCTION_3_54();
}

{
  uint64_t *v0;
  uint64_t v2;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_22_9(*(void *)(v2 + 200), &v2);
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HangUpCallIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v6 = v3;
  v3[7] = v2;
  v3[8] = a1;
  v3[9] = v1;
  uint64_t v4 = (void *)*v2;
  OUTLINED_FUNCTION_22_9(v3[21], &v6);
  if (!v1) {
    return OUTLINED_FUNCTION_17_3();
  }
  OUTLINED_FUNCTION_21_49();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_16_1((uint64_t (*)(void))v4[1]);
}

{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v6;
  uint64_t v3 = (void *)*v2;
  uint64_t v6 = v3;
  v3[10] = v2;
  v3[11] = a1;
  v3[12] = v1;
  uint64_t v4 = (void *)*v2;
  OUTLINED_FUNCTION_22_9(v3[22], &v6);
  if (!v1) {
    return OUTLINED_FUNCTION_17_3();
  }
  OUTLINED_FUNCTION_21_49();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_16_1((uint64_t (*)(void))v4[1]);
}

void *HangUpCallIntentRCHFlowStrategy.deinit()
{
  return v0;
}

uint64_t HangUpCallIntentRCHFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 112LL, 7LL);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeParameterMetadata(intent:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeErrorResponse(error:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to RCHFlowStrategyAsync.makeErrorResponse(error:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v10;
  uint64_t v11 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v10;
  uint64_t v11 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v10;
  uint64_t v11 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)[1]);
  *(void *)(v6 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v12;
  uint64_t v13 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  void *v12 = v6;
  v12[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t protocol witness for RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(**(void **)v4 + 136LL);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance HangUpCallIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  uint64_t v9 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

void *specialized HangUpCallIntentRCHFlowStrategy.init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)( uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  a5[12] = a6;
  a5[13] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a5 + 9);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32LL))(boxed_opaque_existential_1, a4, a6);
  a5[2] = a1;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a5 + 3));
  a5[8] = a3;
  return a5;
}

uint64_t type metadata accessor for HangUpCallIntentRCHFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin31HangUpCallIntentRCHFlowStrategy);
}

uint64_t base witness table accessor for ResolveConfirmFlowStrategyAsync in HangUpCallIntentRCHFlowStrategy()
{
  return lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy( &lazy protocol witness table cache variable for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy,  (uint64_t)&protocol conformance descriptor for HangUpCallIntentRCHFlowStrategy);
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in HangUpCallIntentRCHFlowStrategy()
{
  return lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy( &lazy protocol witness table cache variable for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy,  (uint64_t)&protocol conformance descriptor for HangUpCallIntentRCHFlowStrategy);
}

uint64_t base witness table accessor for RouteConfirmIntentResponseFlowStrategyAsync in HangUpCallIntentRCHFlowStrategy()
{
  return lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy( &lazy protocol witness table cache variable for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy,  (uint64_t)&protocol conformance descriptor for HangUpCallIntentRCHFlowStrategy);
}

uint64_t lazy protocol witness table accessor for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy( unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

void *OUTLINED_FUNCTION_3_107()
{
  return specialized HangUpCallIntentRCHFlowStrategy.init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)( v3,  v2,  v1,  v6,  v0,  v4,  v5);
}

uint64_t OUTLINED_FUNCTION_4_91()
{
  uint64_t v1 = v0 + 3;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_6_91(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 112);
}

uint64_t OUTLINED_FUNCTION_14_67()
{
  *(void *)(v0 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return static DialogPhase.completion.getter();
}

void *OUTLINED_FUNCTION_18_59()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 48));
}

uint64_t SearchCallHistorySharedGlobals.searchCallHistoryCATsSimple.getter()
{
  return swift_retain(*(void *)(v0 + 184));
}

uint64_t SearchCallHistorySharedGlobals.phoneCallDisplayTextCATsSimple.getter()
{
  return swift_retain(*(void *)(v0 + 192));
}

uint64_t SearchCallHistorySharedGlobals.init(appInfoBuilder:searchCallCatPatterns:responseGenerator:phoneCommonCats:phoneCallCommonCatPatterns:callHistoryPromptDialogProvider:searchCallHistoryCATs:searchCallHistoryCATsSimple:phoneCallDisplayTextCATsSimple:)@<X0>( __int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  a9[15] = a4;
  uint64_t result = outlined init with take of AppSelectionSignalComponent(a5, (uint64_t)(a9 + 16));
  a9[21] = a6;
  a9[22] = a7;
  a9[23] = a8;
  a9[24] = a10;
  return result;
}

uint64_t destroy for SearchCallHistorySharedGlobals(void *a1)
{
  return swift_release(a1[24]);
}

uint64_t initializeWithCopy for SearchCallHistorySharedGlobals(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 120) = v7;
  __int128 v8 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain(v7);
  v10(a1 + 128, a2 + 128, v9);
  uint64_t v11 = *(void *)(a2 + 168);
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = v11;
  *(void *)(a1 + 176) = v12;
  uint64_t v14 = *(void *)(a2 + 184);
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v14;
  *(void *)(a1 + 192) = v13;
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v14);
  swift_retain(v13);
  return a1;
}

void *assignWithCopy for SearchCallHistorySharedGlobals(void *a1, void *a2)
{
  uint64_t v4 = a1[15];
  a1[15] = a2[15];
  swift_retain();
  swift_release(v4);
  __swift_assign_boxed_opaque_existential_1(a1 + 16, a2 + 16);
  uint64_t v5 = a1[21];
  a1[21] = a2[21];
  swift_retain();
  swift_release(v5);
  uint64_t v6 = a1[22];
  a1[22] = a2[22];
  swift_retain();
  swift_release(v6);
  uint64_t v7 = a1[23];
  a1[23] = a2[23];
  swift_retain();
  swift_release(v7);
  uint64_t v8 = a2[24];
  uint64_t v9 = a1[24];
  a1[24] = v8;
  swift_retain();
  swift_release(v9);
  return a1;
}

void *__swift_memcpy200_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for SearchCallHistorySharedGlobals(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  uint64_t v6 = *(void *)(a2 + 120);
  uint64_t v7 = *(void *)(a1 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v6;
  swift_release(v7);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 128));
  __int128 v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v8;
  uint64_t v9 = *(void *)(a2 + 168);
  uint64_t v10 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v9;
  swift_release(v10);
  uint64_t v11 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release(v11);
  uint64_t v12 = *(void *)(a1 + 184);
  *(void *)(a1 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 184);
  swift_release(v12);
  uint64_t v13 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistorySharedGlobals(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 200))
    {
      LODWORD(outlined init with copy of SpeakableString?( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(outlined init with copy of SpeakableString?( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(outlined init with copy of SpeakableString?( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistorySharedGlobals(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 200) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SearchCallHistorySharedGlobals()
{
  return &type metadata for SearchCallHistorySharedGlobals;
}

void *CallingIntentHandleIntentFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  return CallingIntentHandleIntentFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
}

void CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v14 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v14, (uint64_t)static Logger.siriPhone);
  os_log_type_t v15 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_11_5(v15))
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v16 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v0,  v2,  "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentResponse",  v16);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  uint64_t v17 = type metadata accessor for TaskPriority(0LL);
  OUTLINED_FUNCTION_88(v1, 1LL, v18, v17);
  uint64_t v19 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4118E0, 80LL);
  v19[2] = 0LL;
  v19[3] = 0LL;
  v19[4] = v3;
  void v19[5] = v13;
  v19[6] = v11;
  v19[7] = v9;
  v19[8] = v7;
  v19[9] = v5;
  OUTLINED_FUNCTION_95();
  swift_retain();
  id v20 = v11;
  id v21 = v9;
  OUTLINED_FUNCTION_3_8();
  uint64_t v22 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v1,  (uint64_t)&async function pointer to partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:),  (uint64_t)v19);
  swift_release(v22);
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[24] = a8;
  v8[25] = v18;
  v8[22] = a6;
  v8[23] = a7;
  v8[20] = a4;
  v8[21] = a5;
  uint64_t v13 = type metadata accessor for PhoneError(0LL);
  v8[26] = v13;
  v8[27] = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(int **)(*(void *)a4 + 344LL);
  uint64_t v17 = (int *)((char *)v14 + *v14);
  os_log_type_t v15 = (void *)swift_task_alloc(v14[1]);
  v8[28] = v15;
  *os_log_type_t v15 = v8;
  v15[1] = closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:);
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))v17)(v8 + 14, a5, a6, a7);
}

uint64_t closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  *(void *)(v1 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 192);
  os_log_type_t v2 = OUTLINED_FUNCTION_99_2();
  outlined init with copy of SharedGlobalsProviding(v2, v3);
  *(_BYTE *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  uint64_t v4 = v1(v0 + 64);
  OUTLINED_FUNCTION_119_1(v4, &demangling cache variable for type metadata for Result<Output, Error>);
  OUTLINED_FUNCTION_90();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v0 + 152) = v1;
  os_log_type_t v2 = *(void *)(v0 + 216);
  swift_errorRetain(v1);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if ((swift_dynamicCast(v2, v0 + 152, v3) & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(*(void *)(v0 + 216), *(void *)(v0 + 208));
  if ((_DWORD)EnumCaseMultiPayload != 4)
  {
    OUTLINED_FUNCTION_141_6(EnumCaseMultiPayload, type metadata accessor for PhoneError);
LABEL_5:
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void (**)(uint64_t))(v0 + 192);
    swift_errorRelease(*(void *)(v0 + 152));
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v6;
    *(_BYTE *)(v0 + 56) = 1;
    swift_errorRetain(v6);
    v7(v0 + 16);
    __int128 v8 = swift_errorRelease(v6);
    OUTLINED_FUNCTION_119_1(v8, &demangling cache variable for type metadata for Result<Output, Error>);
    goto LABEL_6;
  }

  uint64_t v5 = swift_errorRelease(*(void *)(v0 + 232));
  OUTLINED_FUNCTION_141_6(v5, type metadata accessor for PhoneError);
  CallingIntentHandleIntentFlowStrategy.makeLegacyFailureHandlingIntentOutput(app:intent:intentResponse:_:)();
  swift_errorRelease(*(void *)(v0 + 152));
LABEL_6:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void CallingIntentHandleIntentFlowStrategy.makeLegacyFailureHandlingIntentOutput(app:intent:intentResponse:_:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  uint64_t v3 = (os_log_s *)OUTLINED_FUNCTION_12_1(v2, (uint64_t)static Logger.siriPhone);
  os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
  uint64_t v6 = (void *)v5;
  if (os_log_type_enabled(v3, v5))
  {
    uint64_t v1 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v1 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v3,  (os_log_type_t)v6,  "#CallingIntentHandleIntentFlowStrategy makeLegacyFailureHandlingIntentOutput ",  v1);
    OUTLINED_FUNCTION_0_2((uint64_t)v1);
  }

  uint64_t v7 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
  uint64_t v8 = OUTLINED_FUNCTION_90_13(v7);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = objc_opt_self(&OBJC_CLASS___INStartCallIntentResponse);
    uint64_t v11 = OUTLINED_FUNCTION_89_16(v10);
    if (v11)
    {
      OUTLINED_FUNCTION_62_19(v11);
      ObjC metadata update function for StartCallCATs();
      OUTLINED_FUNCTION_133_9();
      OUTLINED_FUNCTION_144_6();
      OUTLINED_FUNCTION_61_22();
      OUTLINED_FUNCTION_97_4();
      type metadata accessor for PhoneCallDisplayTextCATs(0LL);
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_97_4();
      OUTLINED_FUNCTION_98_12();
      OUTLINED_FUNCTION_55_0();
      uint64_t v3 = (os_log_s *)OUTLINED_FUNCTION_97_4();
      type metadata accessor for UnsupportedFlowCATs(0LL);
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_97_4();
      uint64_t v12 = OUTLINED_FUNCTION_69_1();
      OUTLINED_FUNCTION_8_2(v12, 16LL);
      OUTLINED_FUNCTION_115_8();
      uint64_t v13 = type metadata accessor for TemplatingOperationManager();
      OUTLINED_FUNCTION_8_2(v13, 56LL);
      TemplatingOperationManager.init()();
      uint64_t v14 = type metadata accessor for StartCallCatTemplatingService(0LL);
      OUTLINED_FUNCTION_15_2(v14);
      specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)();
      os_log_type_t v15 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_411A60, 64LL);
      OUTLINED_FUNCTION_45_27(v15);
      OUTLINED_FUNCTION_140_9();
      OUTLINED_FUNCTION_97_14();
      OUTLINED_FUNCTION_95_1();
      OUTLINED_FUNCTION_95();
LABEL_14:
      ((void (*)(uint8_t *, uint64_t, uint64_t, uint64_t (*)(), os_log_s *))dispatch thunk of DucTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:))( v1,  v9,  v46,  partial apply for closure #3 in CallingIntentHandleIntentFlowStrategy.makeLegacyFailureHandlingIntentOutput(app:intent:intentResponse:_:),  v3);

      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_22();

      goto LABEL_15;
    }

    goto LABEL_15;
  }

  uint64_t v16 = objc_opt_self(&OBJC_CLASS___INStartAudioCallIntent);
  uint64_t v17 = OUTLINED_FUNCTION_90_13(v16);
  if (v17)
  {
    uint64_t v9 = v17;
    uint64_t v18 = objc_opt_self(&OBJC_CLASS___INStartAudioCallIntentResponse);
    uint64_t v19 = OUTLINED_FUNCTION_89_16(v18);
    if (v19)
    {
      OUTLINED_FUNCTION_62_19(v19);
      ObjC metadata update function for StartCallCATs();
      OUTLINED_FUNCTION_133_9();
      OUTLINED_FUNCTION_144_6();
      OUTLINED_FUNCTION_61_22();
      OUTLINED_FUNCTION_97_4();
      OUTLINED_FUNCTION_122_8();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_97_4();
      OUTLINED_FUNCTION_98_12();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_97_4();
      uint64_t v20 = OUTLINED_FUNCTION_69_1();
      OUTLINED_FUNCTION_8_2(v20, 16LL);
      uint64_t v21 = OUTLINED_FUNCTION_115_8();
      uint64_t v22 = type metadata accessor for StartAudioCallCatTemplatingService(v21);
      OUTLINED_FUNCTION_15_2(v22);
      uint64_t v23 = (void *)OUTLINED_FUNCTION_93_13();
      specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( v23,  v24,  v25,  v26,  v27,  v28);
      uint64_t v29 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_411A38, 64LL);
      OUTLINED_FUNCTION_45_27(v29);
      OUTLINED_FUNCTION_140_9();
      OUTLINED_FUNCTION_97_14();
      OUTLINED_FUNCTION_95_1();
      OUTLINED_FUNCTION_95();
      goto LABEL_14;
    }

void CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)()
{
  uint64_t v51 = v0;
  uint64_t v52 = v1;
  uint64_t v50 = v2;
  uint64_t v4 = v3;
  uint64_t v45 = v5;
  uint64_t v46 = v6;
  uint64_t v7 = *v0;
  uint64_t v48 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?)
                  - 8);
  uint64_t v8 = *(void *)(v48 + 64);
  __chkstk_darwin();
  uint64_t v47 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v41 - v9;
  uint64_t v10 = OUTLINED_FUNCTION_19_15();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin();
  os_log_type_t v44 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  outlined init with copy of TransformationResult?( v4,  (uint64_t)v0,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v0, v15) == 1)
  {
    uint64_t v16 = *v0;
    (*(void (**)(void, uint64_t, uint64_t))(*v51 + 224LL))(*v0, v50, v52);
    swift_errorRelease(v16);
  }

  else
  {
    uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    uint64_t v42 = v14;
    os_log_type_t v43 = v17;
    uint64_t v18 = v7;
    uint64_t v19 = v14;
    v17((uint64_t)v14, (char *)v0, v10);
    uint64_t v21 = v18 + 264;
    uint64_t v20 = *(void *)(v18 + 264);
    uint64_t v41 = *(void *)(v21 + 8);
    uint64_t v22 = OUTLINED_FUNCTION_87_12();
    uint64_t v23 = OUTLINED_FUNCTION_87_12();
    type metadata accessor for PhoneCallNLContextProvider(0LL, v22, v23, v24);
    uint64_t v25 = v49;
    static PhoneCallNLContextProvider.makeContextForHandleIntent(intent:handleIntentResponse:)();
    uint64_t v26 = v44;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v44, v19, v10);
    uint64_t v27 = v47;
    outlined init with copy of TransformationResult?( v25,  v47,  &demangling cache variable for type metadata for NLContextUpdate?);
    uint64_t v28 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v29 = (v28 + 32) & ~v28;
    unint64_t v30 = (v12 + v29 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v31 = *(unsigned __int8 *)(v48 + 80);
    uint64_t v32 = (v31 + v30 + 8) & ~v31;
    unint64_t v33 = (v8 + v32 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v34 = swift_allocObject(&unk_4119E8, v33 + 16, v28 | v31 | 7);
    uint64_t v35 = v41;
    *(void *)(v34 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v20;
    *(void *)(v34 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v35;
    v43(v34 + v29, v26, v10);
    *(void *)(v34 + v30) = v51;
    outlined init with take of PhoneCallNLIntent?( v27,  v34 + v32,  &demangling cache variable for type metadata for NLContextUpdate?);
    uint64_t v36 = (void *)(v34 + v33);
    uint64_t v37 = v52;
    *uint64_t v36 = v50;
    v36[1] = v37;
    OUTLINED_FUNCTION_95_1();
    uint64_t v38 = OUTLINED_FUNCTION_3_8();
    CallingIntentHandleIntentFlowStrategy.makeUnsupportedViews(app:intent:intentResponse:_:)( v38,  v39,  v40,  (uint64_t (*)(void *, void))partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:));
    OUTLINED_FUNCTION_31_2();
    outlined destroy of PhoneCallNLIntent?(v49, &demangling cache variable for type metadata for NLContextUpdate?);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
  }

  OUTLINED_FUNCTION_7_5();
}

void closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *))
{
  if ((a2 & 1) != 0)
  {
    v13[0] = a1;
    swift_errorRetain(a1);
  }

  else
  {
    uint64_t v12 = a1;
    swift_bridgeObjectRetain();
    closure #1 in closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)( &v12,  a3,  a4,  a5,  v13);
    outlined consume of Result<[SAAceView], Error>(a1, 0);
  }

  char v14 = a2 & 1;
  a6(v13);
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v13,  &demangling cache variable for type metadata for Result<Output, Error>);
}

uint64_t closure #1 in closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  void *(*v11)(void *__return_ptr);
  void *v12;
  uint64_t v13;
  char v14;
  _OWORD v16[2];
  uint64_t v17;
  void v18[3];
  uint64_t v19;
  void v20[5];
  uint64_t v9 = *a1;
  Swift::Bool v10 = TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(0);
  uint64_t v11 = *(void *(**)(void *__return_ptr))(*(void *)a3 + 208LL);
  uint64_t v12 = v11(v20);
  ((void (*)(void *__return_ptr, void *))v11)(v18, v12);
  uint64_t v13 = v19;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  char v14 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v13);
  memset(v16, 0, sizeof(v16));
  uint64_t v17 = 0LL;
  a5[3] = type metadata accessor for AceOutput(0LL);
  a5[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(a5);
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( a2,  v20,  v14 & 1,  v9,  v10,  0LL,  a4,  _swiftEmptyArrayStorage);
  outlined destroy of PhoneCallNLIntent?((uint64_t)v16, &demangling cache variable for type metadata for FlowActivity?);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:)( uint64_t a1)
{
  *(void *)(v1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v2, v3, v4);
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeIntentHandledOutput(app:intent:intentResponse:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  uint64_t v2 = (os_log_s *)OUTLINED_FUNCTION_12_1(v1, (uint64_t)static Logger.siriPhone);
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v5 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v9 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000033LL,  0x8000000000350650LL,  &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v4 + 4);
    _os_log_impl( &dword_0,  v2,  v3,  "#CallingIntentHandleIntentFlowStrategy %s: This should not provide output.",  v4,  0xCu);
    swift_arrayDestroy(v5, 1LL);
    OUTLINED_FUNCTION_0_2(v5);
    OUTLINED_FUNCTION_0_2((uint64_t)v4);
  }

  uint64_t v6 = *(void **)(v0 + 24);
  type metadata accessor for EmptyOutput(0LL);
  static EmptyOutput.instance.getter(v6);
  uint64_t v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v7();
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[25] = a4;
  v5[26] = v4;
  v5[23] = a2;
  _BYTE v5[24] = a3;
  v5[22] = a1;
  v5[27] = *v4;
  uint64_t v6 = type metadata accessor for PhoneError(0LL);
  v5[28] = v6;
  v5[29] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for ButtonConfigurationModel(0LL);
  v5[30] = v7;
  v5[31] = *(void *)(v7 - 8);
  v5[32] = OUTLINED_FUNCTION_28();
  v5[33] = OUTLINED_FUNCTION_28();
  uint64_t v8 = type metadata accessor for OutputGenerationManifest(0LL);
  v5[34] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[35] = v9;
  v5[36] = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = type metadata accessor for Locale(0LL);
  v5[37] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v5[38] = v11;
  v5[39] = OUTLINED_FUNCTION_23(v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonConfigurationModel?);
  v5[40] = OUTLINED_FUNCTION_28();
  v5[41] = OUTLINED_FUNCTION_28();
  v5[42] = OUTLINED_FUNCTION_28();
  v5[43] = OUTLINED_FUNCTION_28();
  v5[44] = OUTLINED_FUNCTION_28();
  v5[45] = OUTLINED_FUNCTION_28();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v5[46] = OUTLINED_FUNCTION_23(*(void *)(v12 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  void *(*v13)(uint64_t *__return_ptr, void *);
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __objc2_prop_list **p_base_props;
  int *v25;
  uint64_t v26;
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  void *v33;
  uint64_t AssociatedTypeWitness;
  id v35;
  uint64_t WitnessTable;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_s *v49;
  id v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  void *v54;
  void *v55;
  void *v56;
  Swift::String v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  void *v75;
  uint64_t (*v76)();
  uint64_t v77;
  id v78;
  uint64_t v79;
  void *v80;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  __objc2_prop_list **v86;
  void *v87;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t (*v109)();
  void *v110;
  void *v111;
  uint64_t v112;
  os_log_s *v113;
  os_log_type_t v114;
  BOOL v115;
  void *v116;
  uint8_t *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  void *v140;
  void *v141;
  unint64_t v142;
  Swift::String v143;
  uint64_t v144;
  Swift::String v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(void);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  id v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  Swift::String v182;
  Swift::String v183;
  Swift::String v184;
  Swift::String v185;
  uint64_t v2 = *(os_log_s **)(v1 + 192);
  uint64_t v3 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
  uint64_t v4 = OUTLINED_FUNCTION_33_4(v3);
  if (!v4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v29 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v29, (uint64_t)static Logger.siriPhone);
    unint64_t v30 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_27_1(v30))
    {
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v31 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v2,  v0,  "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentIntentOutput: unexpected intent type",  v31);
      OUTLINED_FUNCTION_0_2((uint64_t)v31);
    }

    uint64_t v32 = *(void **)(v1 + 232);
    unint64_t v33 = *(void **)(v1 + 192);

    OUTLINED_FUNCTION_110_11();
    _StringGuts.grow(_:)(42LL);
    swift_bridgeObjectRelease();
    uint64_t v180 = 0x3D746E65746E69LL;
    uint64_t v181 = 0xE700000000000000LL;
    *(void *)(v1 + 136) = v33;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    uint64_t v35 = v33;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, AssociatedTypeWitness);
    v182._uint64_t countAndFlagsBits = String.init<A>(describing:)(v1 + 136, AssociatedTypeWitness, WitnessTable);
    OUTLINED_FUNCTION_108_7(v182);
    swift_bridgeObjectRelease();
    v183._uint64_t countAndFlagsBits = 0xD000000000000021LL;
    v183._object = (void *)0x8000000000350690LL;
    OUTLINED_FUNCTION_108_7(v183);
    uint64_t v37 = v181;
    *uint64_t v32 = v180;
    v32[1] = v37;
    v32[2] = 0xD000000000000047LL;
    uint64_t v32[3] = 0x80000000003506C0LL;
    _BYTE v32[4] = 0xD00000000000003BLL;
    v32[5] = 0x800000000034F6A0LL;
    OUTLINED_FUNCTION_92_13(99LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v39 = OUTLINED_FUNCTION_88_20(v38);
    OUTLINED_FUNCTION_69_18(v39, v40);
    OUTLINED_FUNCTION_142_9();
    OUTLINED_FUNCTION_123_5(v41, v42, v43, v44, v45, v46, v47, v48, v169, v170, v171, v173, (uint64_t)v176);
    goto LABEL_15;
  }

  uint64_t v5 = (void *)v4;
  uint64_t v6 = objc_opt_self(&OBJC_CLASS___INStartCallIntentResponse);
  uint64_t v7 = OUTLINED_FUNCTION_33_4(v6);
  if (!v7)
  {
    uint64_t v49 = (os_log_s *)one-time initialization token for siriPhone;
    uint64_t v50 = *(id *)(v1 + 192);
    if (v49 != (os_log_s *)-1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v51 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v51, (uint64_t)static Logger.siriPhone);
    uint64_t v52 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_27_1(v52))
    {
      uint64_t v53 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v53 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v49,  (os_log_type_t)v5,  "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentIntentOutput: unexpected intentResponse type",  v53);
      OUTLINED_FUNCTION_0_2((uint64_t)v53);
    }

    unint64_t v54 = *(void **)(v1 + 232);
    uint64_t v56 = *(void **)(v1 + 192);
    uint64_t v55 = *(void **)(v1 + 200);

    OUTLINED_FUNCTION_110_11();
    _StringGuts.grow(_:)(58LL);
    v57._uint64_t countAndFlagsBits = 0x6552746E65746E69LL;
    v57._object = (void *)0xEF3D65736E6F7073LL;
    String.append(_:)(v57);
    *(void *)(v1 + 160) = v55;
    unint64_t v58 = swift_getAssociatedTypeWitness(0LL);
    uint64_t v59 = v55;
    uint64_t v60 = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v58);
    v184._uint64_t countAndFlagsBits = String.init<A>(describing:)(v1 + 160, v58, v60);
    OUTLINED_FUNCTION_108_7(v184);
    swift_bridgeObjectRelease();
    v185._uint64_t countAndFlagsBits = 0xD000000000000029LL;
    v185._object = (void *)0x8000000000350710LL;
    OUTLINED_FUNCTION_108_7(v185);
    uint64_t v61 = v181;
    *unint64_t v54 = v180;
    v54[1] = v61;
    v54[2] = 0xD000000000000047LL;
    v54[3] = 0x80000000003506C0LL;
    v54[4] = 0xD00000000000003BLL;
    v54[5] = 0x800000000034F6A0LL;
    OUTLINED_FUNCTION_92_13(103LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    unint64_t v63 = OUTLINED_FUNCTION_88_20(v62);
    OUTLINED_FUNCTION_69_18(v63, v64);
    OUTLINED_FUNCTION_142_9();
    OUTLINED_FUNCTION_123_5(v65, v66, v67, v68, v69, v70, v71, v72, v169, v170, v171, v173, (uint64_t)v176);

    goto LABEL_15;
  }

  unint64_t v174 = v1 + 160;
  uint64_t v177 = v5;
  uint64_t v178 = (id)v7;
  uint64_t v179 = v1;
  uint64_t v8 = *(void *)(v1 + 360);
  uint64_t v9 = *(void *)(v1 + 240);
  uint64_t v10 = *(void *)(v1 + 208);
  uint64_t v11 = *(void **)(v1 + 200);
  uint64_t v12 = *(void **)(v1 + 192);
  type metadata accessor for SirikitDeviceState(0LL);
  uint64_t v13 = *(void *(**)(uint64_t *__return_ptr, void *))(*(void *)v10 + 208LL);
  char v14 = v12;
  uint64_t v15 = v13(&v180, v11);
  uint64_t v22 = OUTLINED_FUNCTION_139_8((uint64_t)v15, v16, v17, v18, v19, v20, v21);
  *(void *)(v179 + 376) = v22;
  uint64_t v23 = v179;
  CallingIntentHandleIntentFlowStrategy.getSpeakableAppName(app:intent:)();
  *(_BYTE *)(v179 + 736) = App.isFirstParty()();
  __swift_storeEnumTagSinglePayload(v8, 1LL, 1LL, v9);
  p_base_props = &CameraControlFlow.base_props;
  uint64_t v25 = (int *)[v178 code];
  switch((unint64_t)v25)
  {
    case 6uLL:
      OUTLINED_FUNCTION_58_21();
      uint64_t v27 = (void *)OUTLINED_FUNCTION_26_52(*(void *)(class metadata base offset for StartCallCATsSimple + v26 + 352));
      *(void *)(v179 + 472) = v27;
      uint64_t v28 = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
      goto LABEL_39;
    case 7uLL:
      OUTLINED_FUNCTION_58_21();
      uint64_t v75 = (void *)OUTLINED_FUNCTION_26_52(*(void *)(class metadata base offset for StartCallCATsSimple + v74 + 368));
      *(void *)(v179 + 512) = v75;
      uint64_t v76 = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
      goto LABEL_35;
    case 8uLL:
      uint64_t v77 = *(void *)(v179 + 208);
      uint64_t v78 = *(id *)(v179 + 200);
      static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v177, v178);

      uint64_t v79 = *(unsigned int *)(*(void *)(class metadata base offset for StartCallCATsSimple
                                        + **(void **)(v77 + 112)
                                        + 288)
                            + 4LL);
      OUTLINED_FUNCTION_64_22();
      uint64_t v80 = (void *)swift_task_alloc(v79);
      *(void *)(v179 + 38__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v80;
      *uint64_t v80 = v179;
      v80[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
      OUTLINED_FUNCTION_82_17();
      __asm { BR              X2 }

      return;
    case 0xAuLL:
      OUTLINED_FUNCTION_58_21();
      uint64_t v75 = (void *)OUTLINED_FUNCTION_26_52(*(void *)(class metadata base offset for StartCallCATsSimple + v103 + 304));
      *(void *)(v179 + 432) = v75;
      uint64_t v76 = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
LABEL_35:
      *uint64_t v75 = v179;
      v75[1] = v76;
      goto LABEL_36;
    default:
      if ((int *)_INStartCallIntentResponseCodeFailureDownTimeRestrictionEnabled == v25)
      {
        uint64_t v82 = [v177 contacts];
        if (!v82)
        {
          uint64_t v110 = _swiftEmptyArrayStorage;
          goto LABEL_59;
        }

        uint64_t v83 = v82;
        uint64_t v84 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
        uint64_t v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v83, v84);

        uint64_t v180 = (uint64_t)_swiftEmptyArrayStorage;
        if ((unint64_t)v85 >> 62)
        {
          if (v85 < 0) {
            uint64_t v159 = v85;
          }
          else {
            uint64_t v159 = v85 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain();
          p_base_props = (__objc2_prop_list **)_CocoaArrayWrapper.endIndex.getter(v159);
          if (p_base_props) {
            goto LABEL_23;
          }
        }

        else
        {
          p_base_props = *(__objc2_prop_list ***)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFF8LL));
          swift_bridgeObjectRetain();
          if (p_base_props)
          {
LABEL_23:
            uint64_t v178 = (id)type metadata accessor for PhonePerson(0LL);
            if ((uint64_t)p_base_props >= 1)
            {
              uint64_t v86 = 0LL;
              uint64_t v87 = (void *)(v179 + 16);
              unsigned int v172 = v85 & 0xC000000000000001LL;
              uint64_t v175 = *(void *)(v179 + 304);
              uint64_t v88 = v85;
              do
              {
                if (v172) {
                  uint64_t v89 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v86, v85);
                }
                else {
                  uint64_t v89 = *(id *)(v85 + 8LL * (void)v86 + 32);
                }
                char v90 = v89;
                uint64_t v91 = *(void *)(v179 + 312);
                static Device.current.getter(v87);
                uint64_t v93 = *(void *)(v179 + 40);
                uint64_t v92 = *(void *)(v179 + 48);
                __swift_project_boxed_opaque_existential_1(v87, v93);
                dispatch thunk of DeviceState.siriLocale.getter(v93, v92);
                __swift_destroy_boxed_opaque_existential_1(v87);
                static PhonePerson.make(phonePerson:options:locale:)(v90, 0, v91);
                uint64_t v95 = v94;
                OUTLINED_FUNCTION_157_0(v175);

                if (v95)
                {
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
                  char v98 = *(void *)((char *)&dword_10 + (v180 & 0xFFFFFFFFFFFFFF8LL));
                  uint64_t v97 = *(void *)((char *)&dword_18 + (v180 & 0xFFFFFFFFFFFFFF8LL));
                  if (v98 >= v97 >> 1) {
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)( v97 > 1,  v98 + 1,  1LL);
                  }
                  uint64_t v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v95);
                  specialized Array._endMutation()(v99, v100, v101, v102);
                }

                uint64_t v86 = (__objc2_prop_list **)((char *)v86 + 1);
                uint64_t v85 = v88;
              }

              while (p_base_props != v86);
              OUTLINED_FUNCTION_39();
              uint64_t v23 = v179;
              uint64_t v110 = (void *)v180;
              goto LABEL_58;
            }

            __break(1u);
            goto LABEL_61;
          }
        }

        OUTLINED_FUNCTION_39();
        uint64_t v110 = _swiftEmptyArrayStorage;
LABEL_58:
        OUTLINED_FUNCTION_39();
LABEL_59:
        uint64_t v160 = *(void **)(*(void *)(v23 + 208) + 112LL);
        uint64_t v161 = *(id *)(v23 + 192);
        specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
        *(void *)(v23 + 552) = v162;
        uint64_t v163 = type metadata accessor for PhonePersonList.Builder();
        uint64_t v164 = OUTLINED_FUNCTION_8_2(v163, 24LL);
        *(void *)(v164 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
        swift_beginAccess(v164 + 16, v23 + 96, 1LL, 0LL);
        *(void *)(v164 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v110;
        swift_bridgeObjectRelease();
        uint64_t v165 = type metadata accessor for PhonePersonList();
        OUTLINED_FUNCTION_8_2(v165, 32LL);
        *(void *)(v23 + 560) = PhonePersonList.init(builder:)(v164);
        uint64_t v166 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for StartCallCATsSimple + *v160 + 384));
        uint64_t v167 = (void *)swift_task_alloc(v166);
        *(void *)(v23 + 568) = v167;
        OUTLINED_FUNCTION_136_5( v167,  (uint64_t)CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:));
        OUTLINED_FUNCTION_82_17();
        __asm { BR              X2 }
      }

      if ((int *)_INStartCallIntentResponseCodeFailureScreenTimeRestrictionEnabled == v25)
      {
        OUTLINED_FUNCTION_58_21();
        uint64_t v27 = (void *)OUTLINED_FUNCTION_26_52(*(void *)(class metadata base offset for StartCallCATsSimple
                                                          + v105
                                                          + 416));
        *(void *)(v179 + 592) = v27;
        uint64_t v28 = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
LABEL_39:
        OUTLINED_FUNCTION_136_5(v27, (uint64_t)v28);
LABEL_16:
        OUTLINED_FUNCTION_82_17();
        __asm { BR              X0 }
      }

      if (v25 == (int *)((char *)&dword_8 + 1))
      {
        uint64_t v177 = (id)v22;
        int v170 = v179 + 168;
        uint64_t v171 = v179 + 120;
        if (one-time initialization token for siriPhone == -1)
        {
LABEL_46:
          uint64_t v111 = *(void **)(v179 + 200);
          uint64_t v112 = OUTLINED_FUNCTION_15_1();
          uint64_t v113 = (os_log_s *)__swift_project_value_buffer(v112, (uint64_t)static Logger.siriPhone);
          Logger.logObject.getter(v111);
          uint64_t v114 = OUTLINED_FUNCTION_24();
          uint64_t v115 = OUTLINED_FUNCTION_11_5(v114);
          char v116 = *(void **)(v179 + 200);
          if (v115)
          {
            uint64_t v117 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
            uint64_t v118 = OUTLINED_FUNCTION_7_0(32LL);
            uint64_t v180 = v118;
            *(_DWORD *)uint64_t v117 = 136315138;
            uint64_t v119 = v178;
            *(void *)(v179 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = objc_msgSend(v178, (SEL)p_base_props[263]);
            type metadata accessor for INStartCallIntentResponseCode(0LL);
            uint64_t v121 = String.init<A>(describing:)(v179 + 144, v120);
            *(void *)(v179 + 152) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v121, v122, &v180);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v179 + 152, v174, v117 + 4);
            OUTLINED_FUNCTION_39();

            _os_log_impl( &dword_0,  v113,  (os_log_type_t)v8,  "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentIntentOutput: the dialog for %s hasn't bee n migrated to Response Framework.",  v117,  0xCu);
            swift_arrayDestroy(v118, 1LL);
            OUTLINED_FUNCTION_0_2(v118);
            OUTLINED_FUNCTION_0_2((uint64_t)v117);
          }

          else
          {

            uint64_t v119 = v178;
          }

          uint64_t v136 = *(void *)(v179 + 368);
          char v137 = *(void *)(v179 + 360);
          uint64_t v138 = *(void **)(v179 + 232);
          uint64_t v139 = *(void *)(v179 + 224);
          uint64_t v140 = *(void **)(v179 + 200);
          uint64_t v141 = *(void **)(v179 + 192);
          OUTLINED_FUNCTION_110_11();
          _StringGuts.grow(_:)(57LL);
          uint64_t v142 = v181;
          *(void *)(v179 + 120) = v180;
          *(void *)(v179 + 128) = v142;
          v143._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
          v143._object = (void *)0x8000000000350740LL;
          String.append(_:)(v143);
          *(void *)(v179 + 168) = objc_msgSend(v119, (SEL)p_base_props[263]);
          type metadata accessor for INStartCallIntentResponseCode(0LL);
          _print_unlocked<A, B>(_:_:)( v170,  v171,  v144,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
          v145._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
          v145._object = (void *)0x8000000000350760LL;
          String.append(_:)(v145);
          uint64_t v146 = *(void *)(v179 + 128);
          *uint64_t v138 = *(void *)(v179 + 120);
          v138[1] = v146;
          v138[2] = 0xD000000000000047LL;
          v138[3] = 0x80000000003506C0LL;
          v138[4] = 0xD00000000000003BLL;
          v138[5] = 0x800000000034F6A0LL;
          v138[6] = 150LL;
          swift_storeEnumTagMultiPayload(v138, v139, 4LL);
          lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
          swift_allocError(v139, v147, 0LL, 0LL);
          PhoneError.logged()(v148);
          uint64_t v149 = OUTLINED_FUNCTION_99_2();
          outlined destroy of CommonDirectAction(v149, v150);
          swift_willThrow(v151, v152, v153, v154, v155, v156, v157, v158);

          swift_release(v177);
          outlined destroy of PhoneCallNLIntent?( v137,  &demangling cache variable for type metadata for ButtonConfigurationModel?);
          outlined destroy of PhoneCallNLIntent?( v136,  &demangling cache variable for type metadata for SpeakableString?);
LABEL_15:
          swift_task_dealloc();
          OUTLINED_FUNCTION_23_3();
          OUTLINED_FUNCTION_7_8();
          OUTLINED_FUNCTION_10_0();
          OUTLINED_FUNCTION_92_0();
          OUTLINED_FUNCTION_9_2();
          OUTLINED_FUNCTION_14_3();
          OUTLINED_FUNCTION_29_17();
          OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_46_0();
          swift_task_dealloc();
          swift_task_dealloc();
          goto LABEL_16;
        }

LABEL_61:
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        goto LABEL_46;
      }

      if (v25 == &dword_C)
      {
        OUTLINED_FUNCTION_58_21();
        uint64_t v124 = *(unsigned int *)(*(void *)(class metadata base offset for StartCallCATsSimple + v123 + 336) + 4LL);
        OUTLINED_FUNCTION_64_22();
        uint64_t v108 = (void *)swift_task_alloc(v124);
        *(void *)(v179 + 640) = v108;
        uint64_t v109 = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
      }

      else
      {
        if (v25 != (int *)((char *)&dword_8 + 3))
        {
          unsigned int v125 = *(void *)(v179 + 208);
          uint64_t v126 = *(void *)(v125 + 48);
          uint64_t v127 = *(void *)(v125 + 56);
          __swift_project_boxed_opaque_existential_1((void *)(v125 + 24), v126);
          uint64_t v128 = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v127 + 8))(&v180, v126, v127);
          *(void *)(v179 + 66__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_139_8((uint64_t)v128, v129, v130, v131, v132, v133, v134);
          char v135 = (void *)OUTLINED_FUNCTION_26_52(*(void *)(class metadata base offset for StartCallCATsSimple
                                                             + **(void **)(v125 + 112)
                                                             + 464));
          *(void *)(v179 + 672) = v135;
          OUTLINED_FUNCTION_136_5( v135,  (uint64_t)CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:));
LABEL_36:
          OUTLINED_FUNCTION_82_17();
          __asm { BR              X1 }
        }

        OUTLINED_FUNCTION_58_21();
        uint64_t v107 = *(unsigned int *)(*(void *)(class metadata base offset for StartCallCATsSimple + v106 + 320) + 4LL);
        OUTLINED_FUNCTION_64_22();
        uint64_t v108 = (void *)swift_task_alloc(v107);
        *(void *)(v179 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 16) = v108;
        uint64_t v109 = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
      }

      OUTLINED_FUNCTION_136_5(v108, (uint64_t)v109);
      goto LABEL_36;
  }

  uint64_t v123 = (*(uint64_t (**)(uint64_t))(*(void *)v196 + 224LL))(v98);
  if ((v123 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v124 = type metadata accessor for Logger(0LL);
    unsigned int v125 = __swift_project_value_buffer(v124, (uint64_t)static Logger.siriPhone);
    uint64_t v126 = (os_log_s *)Logger.logObject.getter(v125);
    uint64_t v128 = static os_log_type_t.debug.getter(v126, v127);
    if (os_log_type_enabled(v126, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v130 = swift_slowAlloc(32LL, -1LL);
      uint64_t v216 = v130;
      *(_DWORD *)uint64_t v129 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v131 = static NLv4Transformer.logPrefix;
      uint64_t v132 = *(void *)algn_478188;
      uint64_t v133 = qword_478190;
      uint64_t v134 = (void *)unk_478198;
      uint64_t v217 = 0LL;
      unint64_t v218 = 0xE000000000000000LL;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v131, v132, v133, v134);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v217 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v217, v218, &v216);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v217, &v218, v129 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v126, v128, "%s skipping SRR", v129, 0xCu);
      swift_arrayDestroy(v130, 1LL);
      swift_slowDealloc(v130, -1LL, -1LL);
      swift_slowDealloc(v129, -1LL, -1LL);

      uint64_t v7 = v202;
    }

    else
    {
    }

    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    goto LABEL_30;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v31 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v31, (uint64_t)static Logger.siriPhone);
  uint64_t v32 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v32))
  {
    unint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    *(_DWORD *)unint64_t v33 = 134217984;
    os_log_t v68 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v33 + 4);
    OUTLINED_FUNCTION_57_0( &dword_0,  v23,  (os_log_type_t)v12,  "#CallingIntentConfirmationFlowStrategy updateForConfirmedContact: Updating confirmed contact at selectedIndex=%ld",  v33);
    OUTLINED_FUNCTION_0_2((uint64_t)v33);
  }

  uint64_t v34 = a2;
  uint64_t v35 = OUTLINED_FUNCTION_90_22();
  uint64_t v70 = v7;
  if (!v35 || v7 < 0 || (v7 & 0x4000000000000000LL) != 0)
  {
    uint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew()(v7);
    uint64_t v70 = v7;
  }

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_60;
  }

  if (*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8LL)) <= (unint64_t)a1)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }

  uint64_t v36 = (v7 & 0xFFFFFFFFFFFFFF8LL) + 8 * a1;
LABEL_43:
  uint64_t v49 = *(void **)(v36 + 32);
  *(void *)(v36 + 32) = v23;

LABEL_44:
  specialized Array._endMutation()(v43, v44, v45, v46);
  if (v15[107] != -1LL) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v50 = OUTLINED_FUNCTION_15_1();
  uint64_t v51 = (os_log_s *)__swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
  uint64_t v52 = swift_retain_n(v4, 2LL);
  Logger.logObject.getter(v52);
  uint64_t v53 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v51, v53))
  {
    unint64_t v54 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v55 = OUTLINED_FUNCTION_7_0(64LL);
    os_log_t v68 = v55;
    *(_DWORD *)unint64_t v54 = 136315394;
    uint64_t v56 = _typeName(_:qualified:)(*v4, 0LL);
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v54 + 4);
    OUTLINED_FUNCTION_0_3();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2080;
    OUTLINED_FUNCTION_22_0((uint64_t)&v70, (uint64_t)&v66);
    unint64_t v58 = OUTLINED_FUNCTION_68();
    uint64_t v59 = OUTLINED_FUNCTION_20_14();
    uint64_t v60 = Array.description.getter(v59, v58);
    uint64_t v62 = v61;
    swift_bridgeObjectRelease();
    uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v62, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v54 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v51, v53, "#%s updated contacts : %s)", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy(v55, 2LL);
    OUTLINED_FUNCTION_0_2(v55);
    OUTLINED_FUNCTION_0_2(v54);
  }

  else
  {

    OUTLINED_FUNCTION_0_3();
  }

  OUTLINED_FUNCTION_22_0((uint64_t)&v70, (uint64_t)&v68);
  return v70;
}

uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  v0[49] = v2;
  v0[50] = v1;
  OUTLINED_FUNCTION_28_17(v3);
  swift_release(v0[47]);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  void *v3;
  uint64_t (*v5)(void);
  uint64_t v1 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                         + **(void **)(*(void *)(v0 + 208) + 176LL)
                                         + 328));
  uint64_t v5 = v2;
  uint64_t v3 = (void *)swift_task_alloc(v1);
  *(void *)(v0 + 408) = v3;
  *uint64_t v3 = v0;
  v3[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
  return OUTLINED_FUNCTION_3_0(v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 42__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 46__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 50__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 54__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "25EA44: call analysis failed (funcsize=102)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_86_12();
  v0[55] = v3;
  v0[56] = v1;
  OUTLINED_FUNCTION_28_17(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v5, v6, v7);
  }

  else
  {
    uint64_t v9 = (void *)swift_task_alloc(dword_43C614);
    v0[57] = v9;
    *uint64_t v9 = v2;
    v9[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_69_21();
    return OUTLINED_FUNCTION_49_28(v10, v11, v12, v13, v14, v15);
  }

#error "25EC74: call analysis failed (funcsize=80)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_86_12();
  v0[60] = v3;
  v0[61] = v1;
  OUTLINED_FUNCTION_28_17(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v5, v6, v7);
  }

  else
  {
    uint64_t v9 = (void *)swift_task_alloc(dword_43C614);
    v0[62] = v9;
    *uint64_t v9 = v2;
    v9[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_69_21();
    return OUTLINED_FUNCTION_49_28(v10, v11, v12, v13, v14, v15);
  }

#error "25EEA4: call analysis failed (funcsize=80)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_86_12();
  v0[65] = v3;
  v0[66] = v1;
  OUTLINED_FUNCTION_28_17(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v5, v6, v7);
  }

  else
  {
    uint64_t v9 = (void *)swift_task_alloc(dword_43C614);
    v0[67] = v9;
    *uint64_t v9 = v2;
    v9[1] = CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_69_21();
    return OUTLINED_FUNCTION_49_28(v10, v11, v12, v13, v14, v15);
  }

#error "25F0D8: call analysis failed (funcsize=80)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)( uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v4;
  uint64_t v5;
  void *v7;
  uint64_t v7 = (void *)*v2;
  uint64_t v4 = v7;
  OUTLINED_FUNCTION_39_0(&v7);
  v4[72] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[69];
  swift_release(v4[70]);
  swift_release(v5);
  if (!v1) {
    v4[73] = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

#error "25F2B0: call analysis failed (funcsize=38)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 600) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 608) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

#error "25F3B0: call analysis failed (funcsize=38)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[78] = v1;
  swift_task_dealloc();
  swift_release(v2[47]);
  if (!v1) {
    v2[79] = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

#error "25F4B8: call analysis failed (funcsize=38)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[81] = v1;
  swift_task_dealloc();
  swift_release(v2[47]);
  if (!v1) {
    v2[82] = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

#error "25F5C0: call analysis failed (funcsize=38)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 680) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 688) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

#error "25F6C8: call analysis failed (funcsize=40)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_27_7();
  uint64_t v1 = (void *)(v0 + 56);
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 712));
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

#error "25F7CC: call analysis failed (funcsize=38)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentOutput(app:intent:intentResponse:)()
{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 728));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "25F89C: call analysis failed (funcsize=35)"
#error "25F920: call analysis failed (funcsize=29)"
#error "25F9A4: call analysis failed (funcsize=31)"
#error "25FA20: call analysis failed (funcsize=29)"
#error "25FAA4: call analysis failed (funcsize=31)"
#error "25FB20: call analysis failed (funcsize=29)"
#error "25FBA4: call analysis failed (funcsize=31)"
#error "25FC20: call analysis failed (funcsize=29)"
#error "25FCA4: call analysis failed (funcsize=31)"
#error "25FD20: call analysis failed (funcsize=29)"
#error "25FD9C: call analysis failed (funcsize=29)"
#error "25FE18: call analysis failed (funcsize=29)"
#error "25FE94: call analysis failed (funcsize=29)"
#error "25FF24: call analysis failed (funcsize=34)"
uint64_t CallingIntentHandleIntentFlowStrategy.makeUnsupportedViews(app:intent:intentResponse:_:)( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t (*a4)(void *, void))
{
  os_log_s *v4;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v4, v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v8 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v4,  v7,  "#CallingIntentHandleIntentFlowStrategy makeUnsupportedViews: returning empty views",  v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  return a4(_swiftEmptyArrayStorage, 0LL);
}

uint64_t CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(_BYTE *)(v7 + 106) = a6;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = v6;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v7 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  uint64_t v8 = type metadata accessor for UUID(0LL);
  *(void *)(v7 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
  uint64_t v3 = OUTLINED_FUNCTION_99_2();
  v0[9] = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(v3, v4, v2);
  uint64_t v5 = *(void **)(v1 + 176);
  LOBYTE(outlined init with copy of SpeakableString?( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, v2) = App.isFirstParty()();
  uint64_t v6 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple + *v5 + 296));
  uint64_t v10 = v7;
  uint64_t v8 = (void *)swift_task_alloc(v6);
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:);
  return v10(v0[6], (v2 & 1) == 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t (*v8)(void);
  if (*(_BYTE *)(v0 + 106) == 1)
  {
    *(_BYTE *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 1;
    uint64_t v1 = v0 + 105;
  }

  else
  {
    *(_BYTE *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
    uint64_t v1 = v0 + 104;
  }

  uint64_t v2 = dispatch thunk of LabelExecutionResult.subscript.getter(v1);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void **)(v0 + 16);
  uint64_t v7 = *(id *)(v0 + 72);
  UUID.init()(v7);
  ButtonConfigurationModel.init(label:action:id:)(v2, v4, v6);

  swift_release(v5);
  OUTLINED_FUNCTION_46_0();
  uint64_t v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v8();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)( uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 80);
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = v1;
  OUTLINED_FUNCTION_28_17(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void CallingIntentHandleIntentFlowStrategy.getSpeakableAppName(app:intent:)()
{
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *v0;
  uint64_t v8 = type metadata accessor for Locale(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v29 = v6;
  if (App.isFirstParty()())
  {
    uint64_t v12 = v7 + 264;
    uint64_t v11 = *(void *)(v7 + 264);
    uint64_t v10 = *(void *)(v12 + 8);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
    uint64_t v14 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness(v10, v11, AssociatedTypeWitness) + 8) + 16LL);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    uint64_t v16 = swift_checkMetadataState(0LL, AssociatedTypeWitness);
    uint64_t v17 = v15(v16, v14);
    OUTLINED_FUNCTION_94_6(v2 + 3);
    OUTLINED_FUNCTION_62_12();
    uint64_t v4 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( v4,  v17,  v30);
    __swift_destroy_boxed_opaque_existential_1(v30);
  }

  else
  {
    OUTLINED_FUNCTION_3_8();
  }

  uint64_t v18 = v2[41];
  uint64_t v19 = v2[42];
  __swift_project_boxed_opaque_existential_1(v2 + 38, v18);
  (*(void (**)(void *__return_ptr))(*v2 + 208LL))(v30);
  uint64_t v20 = v31;
  uint64_t v21 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  dispatch thunk of DeviceState.siriLocale.getter(v20, v21);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16))(v4, v1, v18, v19);
  uint64_t v24 = v23;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  __swift_destroy_boxed_opaque_existential_1(v30);
  if (v24)
  {
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)(v22, v24, 0LL, 0LL);
    uint64_t v25 = type metadata accessor for SpeakableString(0LL);
    OUTLINED_FUNCTION_88(v29, 0LL, v26, v25);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v27 = type metadata accessor for SpeakableString(0LL);
    OUTLINED_FUNCTION_88(v29, 1LL, v28, v27);
  }

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_7_5();
}

uint64_t *CallingIntentHandleIntentFlowStrategy.makeIntentExecutionBehavior(app:intent:completion:)( uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v5 = *v3;
  uint64_t v6 = v3 + 3;
  OUTLINED_FUNCTION_94_6(v3 + 3);
  OUTLINED_FUNCTION_62_12();
  uint64_t v7 = v41[4];
  OUTLINED_FUNCTION_94_6(v41);
  uint64_t v8 = App.appIdentifier.getter();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v7 + 16))(v42, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v41);
  uint64_t v10 = *(void *)(v5 + 264);
  uint64_t v9 = *(void *)(v5 + 272);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v9, v10, AssociatedTypeWitness);
  CallingIntent.populateCallIntentMetadata(resolvedApp:)( (uint64_t)v42,  AssociatedTypeWitness,  AssociatedConformanceWitness);
  uint64_t v14 = v4[6];
  uint64_t v13 = v4[7];
  OUTLINED_FUNCTION_94_6(v6);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 56))(v14, v13);
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 120LL))(v15);
  uint64_t v18 = v17;
  OUTLINED_FUNCTION_38_1();
  if (v18)
  {
    uint64_t v19 = *(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8LL);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(AssociatedTypeWitness, v19);
    if (v20)
    {
      uint64_t v21 = v20;
      if ((unint64_t)v20 >> 62)
      {
        if (v20 >= 0) {
          v20 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        if (_CocoaArrayWrapper.endIndex.getter(v20)) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v21 & 0xC000000000000001LL) == 0, v21);
        if ((v21 & 0xC000000000000001LL) != 0) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v21);
        }
        else {
          id v22 = *(id *)(v21 + 32);
        }
        id v23 = v22;
        OUTLINED_FUNCTION_62();
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v24 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v24, (uint64_t)static Logger.siriPhone);
        os_log_type_t v25 = OUTLINED_FUNCTION_6_0();
        if (os_log_type_enabled((os_log_t)v21, v25))
        {
          uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_1_0();
          *(_WORD *)uint64_t v26 = 0;
          OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v21,  v25,  "#CallingIntentHandleIntentFlowStrategy: overwriting intent before going to Intent extension",  v26);
          OUTLINED_FUNCTION_0_2((uint64_t)v26);
        }

        Class isa = INPerson.mutableCopyOrCrash()().super.isa;
        id v28 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
        id v29 = @nonobjc INPersonHandle.init(value:type:)(v16, v18, 2LL);
        -[objc_class setPersonHandle:](isa, "setPersonHandle:", v29);

        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v31 = OUTLINED_FUNCTION_5_32(v30);
        *(_OWORD *)(v31 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
        *(void *)(v31 + 32) = isa;
        v41[0] = v31;
        specialized Array._endMutation()(v31, v32, v33, v34);
        uint64_t v35 = v41[0];
        uint64_t v36 = v23;
        uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
        uint64_t v38 = isa;
        v37(v35, AssociatedTypeWitness, v19);

        goto LABEL_17;
      }

      swift_bridgeObjectRelease();
    }

void *CallingIntentHandleIntentFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  *(void *)(v11 + direct field offset for CallingIntentHandleIntentFlowStrategy.cancellable) = 0LL;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)v26);
  outlined init with copy of SharedGlobalsProviding(a7, (uint64_t)v25);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a9, (uint64_t)v24);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a10, (uint64_t)v23);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a11, (uint64_t)v22);
  uint64_t v17 = CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  a2,  v26,  a4,  a5,  a6,  v25,  a8,  v24,  v23,  v22);
  __swift_destroy_boxed_opaque_existential_1(a11);
  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(a9);
  OUTLINED_FUNCTION_90();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v17;
}

uint64_t sub_2608B4()
{
  swift_release(*(void *)(v0 + 72));
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc(dword_43C5EC);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = partial apply for closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:);
  return closure #1 in CallingIntentHandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( a1,  v4,  v5,  v6,  v7,  v8,  v9,  v10);
}

uint64_t CallingIntentHandleIntentFlowStrategy.__ivar_destroyer()
{
  return swift_release(*(void *)(v0 + direct field offset for CallingIntentHandleIntentFlowStrategy.cancellable));
}

void CallingIntentHandleIntentFlowStrategy.deinit()
{
}

uint64_t CallingIntentHandleIntentFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = type metadata accessor for CallingIntentHandleIntentFlowStrategy( 0LL,  *(void *)(a6 + 264),  *(void *)(a6 + 272),  a4);
  return a8(a1, a2, a3, a4, a5, v14, a7);
}

uint64_t protocol witness for IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for CallingIntentHandleIntentFlowStrategy( 0LL,  *(void *)(a2 + 264),  *(void *)(a2 + 272),  a4);
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v6, a3);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CallingIntentHandleIntentFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  a4);
  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:) in conformance CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CallingIntentHandleIntentFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  a4);
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t base witness table accessor for IntentExtensionCommunicating in CallingIntentHandleIntentFlowStrategy<A>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CallingIntentHandleIntentFlowStrategy<A>, a1);
}

uint64_t type metadata completion function for CallingIntentHandleIntentFlowStrategy(uint64_t a1)
{
  uint64_t v2 = "\b";
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + 280);
}

uint64_t type metadata accessor for CallingIntentHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CallingIntentHandleIntentFlowStrategy);
}

uint64_t sub_260C0C()
{
  uint64_t v1 = OUTLINED_FUNCTION_19_15();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?)
                 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v5));
  uint64_t v10 = type metadata accessor for NLContextUpdate(0LL);
  unint64_t v11 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v12 = v11 + 16;
  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v12, v3 | v7 | 7);
}

void partial apply for closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)( uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(OUTLINED_FUNCTION_19_15() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?)
                 - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  closure #1 in CallingIntentHandleIntentFlowStrategy.makeCompletionViewOutput(app:intent:intentResponse:result:_:)( a1,  v4,  v2 + v6,  *(void *)(v2 + v7),  v2 + v9,  *(void (**)(void *))(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)()
{
  uint64_t v24 = v1;
  uint64_t v25 = v2;
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  *(void *)((char *)v4 + direct field offset for StartCallCatTemplatingService.startCallCatFamily) = v16;
  *(void *)((char *)v4 + direct field offset for StartCallCatTemplatingService.unsupportedFlowCats) = v10;
  *(void *)((char *)v4 + direct field offset for StartCallCatTemplatingService.operationManager) = v6;
  outlined init with copy of SharedGlobalsProviding(v18, (uint64_t)v23);
  ObjC metadata update function for StartCallCATs();
  OUTLINED_FUNCTION_95_1();
  swift_retain();
  uint64_t v19 = OUTLINED_FUNCTION_3_8();
  static CATOption.defaultMode.getter(v19);
  uint64_t v20 = CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
  OUTLINED_FUNCTION_95();
  uint64_t v21 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0x6C61437472617473LL,  0xEF3256736375446CLL,  v23,  v14,  v12,  v8,  0LL,  0LL,  0LL,  0LL,  v20,  v4);
  swift_release(v8);
  swift_release(v16);
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_90();
  return v21;
}

uint64_t objectdestroy_22Tm()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

void partial apply for closure #3 in CallingIntentHandleIntentFlowStrategy.makeLegacyFailureHandlingIntentOutput(app:intent:intentResponse:_:)()
{
}

uint64_t sub_2613F4()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_1_88()
{
  return swift_task_dealloc(*(void *)(v0 + 368));
}

uint64_t OUTLINED_FUNCTION_2_80(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 176);
}

uint64_t OUTLINED_FUNCTION_6_92()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

id OUTLINED_FUNCTION_7_97@<X0>(void *a1@<X8>)
{
  *(void *)(v1 + 696) = a1;
  return a1;
}

uint64_t OUTLINED_FUNCTION_8_73( __n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  a1[1] = a5;
  a1[2].n128_u64[0] = a11;
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_70()
{
  return v2(v1, v0, 1LL, 0LL, 0LL, 1LL);
}

uint64_t OUTLINED_FUNCTION_11_76()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

uint64_t OUTLINED_FUNCTION_12_78()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:))();
}

uint64_t OUTLINED_FUNCTION_14_68()
{
  return v0(v2, v1, 1LL, 0LL, 0LL, 1LL);
}

uint64_t OUTLINED_FUNCTION_16_53(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 176);
}

uint64_t OUTLINED_FUNCTION_17_60()
{
  return *(void *)(v0 + 320);
}

void OUTLINED_FUNCTION_18_60()
{
}

uint64_t OUTLINED_FUNCTION_20_57(uint64_t a1)
{
  return swift_allocObject( a1,  ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
         + *(void *)(v1 + 72),
           *(unsigned __int8 *)(v1 + 80) | 7LL);
}

uint64_t OUTLINED_FUNCTION_26_52@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t OUTLINED_FUNCTION_28_51(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  a1[1] = a5;
  a1[2].n128_u64[0] = v5;
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_32_44(uint64_t a1)
{
  *(void *)a1 = v2;
  *(_BYTE *)(a1 + 8) = 1;
  return swift_storeEnumTagMultiPayload(a1, v1, 6LL);
}

uint64_t OUTLINED_FUNCTION_33_50()
{
  return outlined init with copy of ButtonConfigurationModel(*(void *)(v0 + 264), *(void *)(v0 + 256));
}

void OUTLINED_FUNCTION_43_28()
{
}

id OUTLINED_FUNCTION_45_27(void *a1)
{
  a1[2] = v4;
  a1[3] = v1;
  a1[4] = v3;
  a1[5] = v2;
  uint64_t v6 = *(void *)(v5 - 128);
  a1[6] = *(void *)(v5 - 144);
  a1[7] = v6;
  return v3;
}

uint64_t OUTLINED_FUNCTION_48_30()
{
  return (*(uint64_t (**)(void, void))(v0[35] + 8LL))(v0[36], v0[34]);
}

uint64_t OUTLINED_FUNCTION_49_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return CallingIntentHandleIntentFlowStrategy.getButtonConfigurationModel(app:intent:intentResponse:appNameSpeakable:isThirdPartyApp:)( a1,  a2,  a3,  a4,  a5,  a6);
}

void OUTLINED_FUNCTION_56_22(void *a1@<X8>)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_59_20(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return outlined init with take of ButtonConfigurationModel(v3, (uint64_t)a1 + v2);
}

uint64_t OUTLINED_FUNCTION_61_22()
{
  return static CATOption.defaultMode.getter();
}

void OUTLINED_FUNCTION_62_19(uint64_t a1)
{
  *(void *)(v2 - 152) = a1;
  outlined init with copy of SharedGlobalsProviding(v1 + 24, v2 - 120);
}

uint64_t OUTLINED_FUNCTION_63_22(uint64_t a1)
{
  return outlined init with take of ButtonConfigurationModel(a1, *(void *)(v1 + 264));
}

  ;
}

uint64_t OUTLINED_FUNCTION_72_25(uint64_t result)
{
  *(void *)(v1 + 728) = result;
  return result;
}

unint64_t OUTLINED_FUNCTION_74_18()
{
  return StackedButtonsModel.responseViewId.getter(v0, 1);
}

void OUTLINED_FUNCTION_80_13()
{
}

  ;
}

void OUTLINED_FUNCTION_86_12()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_87_12()
{
  return swift_getAssociatedTypeWitness(255LL);
}

uint64_t OUTLINED_FUNCTION_88_20(uint64_t a1)
{
  return swift_allocError(v1, a1, 0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_89_16(uint64_t a1)
{
  return swift_dynamicCastObjCClass(v1, a1);
}

uint64_t OUTLINED_FUNCTION_90_13(uint64_t a1)
{
  return swift_dynamicCastObjCClass(v1, a1);
}

uint64_t OUTLINED_FUNCTION_92_13@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  return swift_storeEnumTagMultiPayload(v1, v2, 4LL);
}

uint64_t OUTLINED_FUNCTION_93_13()
{
  return v0 - 120;
}

void OUTLINED_FUNCTION_94_14()
{
}

uint64_t OUTLINED_FUNCTION_97_14()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_98_12()
{
  return type metadata accessor for PhoneCallCommonCATs(0LL);
}

uint64_t OUTLINED_FUNCTION_101_9()
{
  return swift_task_alloc(v0);
}

  ;
}

void OUTLINED_FUNCTION_114_8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 720) = a9;
}

uint64_t OUTLINED_FUNCTION_115_8()
{
  return 0LL;
}

void OUTLINED_FUNCTION_121_9(uint64_t a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_122_8()
{
  return type metadata accessor for PhoneCallDisplayTextCATs(0LL);
}

uint64_t OUTLINED_FUNCTION_123_5( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return swift_willThrow(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v13);
}

uint64_t OUTLINED_FUNCTION_129_10(uint64_t result)
{
  *(void *)(v1 + 712) = result;
  return result;
}

void OUTLINED_FUNCTION_131_7( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 70__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a11;
}

void OUTLINED_FUNCTION_132_9( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 720) = a11;
}

id OUTLINED_FUNCTION_133_9()
{
  return v0;
}

void *OUTLINED_FUNCTION_136_5@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *uint64_t result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_139_8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  return SirikitDeviceState.__allocating_init(from:)(va);
}

id OUTLINED_FUNCTION_140_9()
{
  return v0;
}

void OUTLINED_FUNCTION_141_6(uint64_t a1, uint64_t (*a2)(void))
{
}

id OUTLINED_FUNCTION_144_6()
{
  return v0;
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional __swiftcall AddCallParticipantCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xB) {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional)11;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional)v3;
  }
}

uint64_t AddCallParticipantCATs.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_261930 + 4 * byte_33A900[a1]))( 0xD000000000000025LL,  0x8000000000343670LL);
}

  ;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATs.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATs.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATs.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATs::Properties_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATs.Properties@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = AddCallParticipantCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(_OWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  *(void *)(v2 + 32) = 0xD000000000000010LL;
  *(void *)(v2 + 40) = 0x80000000003490A0LL;
  if (v0)
  {
    uint64_t v3 = type metadata accessor for DialogPerson(0LL);
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_15_71(0xD000000000000025LL);
  return OUTLINED_FUNCTION_1_41(v2);
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.confirmParticipant(contactToConfirm:));
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_125(v4);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_3_8();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_18_3();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_112_4();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  OUTLINED_FUNCTION_178_0();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_3_8();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:));
  uint64_t v8 = OUTLINED_FUNCTION_40_16(0xD000000000000025LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(_OWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  *(void *)(v2 + 32) = 0xD000000000000010LL;
  *(void *)(v2 + 40) = 0x80000000003490A0LL;
  if (v0)
  {
    uint64_t v3 = type metadata accessor for DialogPerson(0LL);
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 72) = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_107_6(0xD000000000000025LL, (uint64_t)"AddCallParticipant#ConfirmParticipant");
  return OUTLINED_FUNCTION_1_41(v2);
}

uint64_t AddCallParticipantCATs.confirmParticipant(contactToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.confirmParticipant(contactToConfirm:));
}

uint64_t AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:completion:)( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 128LL);
  OUTLINED_FUNCTION_0_59((__n128 *)v6, (__n128)xmmword_31D880);
  if (a1)
  {
    uint64_t v7 = OUTLINED_FUNCTION_17_38();
    uint64_t v8 = a1;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_52_1();
  }

  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 72) = v7;
  *(void *)(v6 + 80) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_78_12((uint64_t)"unsupportedReason");
  outlined init with copy of SpeakableString?(a2, v2, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v2, 1LL, v9) == 1)
  {
    OUTLINED_FUNCTION_29_3();
    outlined destroy of SpeakableString?(v2, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v6 + 96) = 0u;
    *(_OWORD *)(v6 + 112) = 0u;
  }

  else
  {
    *(void *)(v6 + 120) = v9;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v6 + 96));
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))( boxed_opaque_existential_1,  v2,  v9);
    OUTLINED_FUNCTION_29_3();
  }

  OUTLINED_FUNCTION_15_71(0xD000000000000025LL);
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  void v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v4[6] = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  v0[7] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_1_55((__n128 *)v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }

  else
  {
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  uint64_t v6 = v0[4];
  *(void *)(v3 + 48) = v1;
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = 0xD000000000000011LL;
  *(void *)(v3 + 88) = 0x8000000000347AD0LL;
  OUTLINED_FUNCTION_29_16(v6, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_36_2(v7) == 1)
  {
    uint64_t v8 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v3 + 96) = 0u;
    *(_OWORD *)(v3 + 112) = 0u;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_75_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[8] = v10;
  OUTLINED_FUNCTION_109(v10);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_48_11(v11, v12, v13, v3, v15);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v4 = *v1;
  uint64_t v2 = v4;
  OUTLINED_FUNCTION_39_0(&v4);
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_16_1((uint64_t (*)(void))v1[1]);
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v14)(void);
  uint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  v0[6] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_1_55((__n128 *)v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }

  else
  {
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  uint64_t v6 = v0[3];
  *(void *)(v3 + 48) = v1;
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = 0xD000000000000011LL;
  *(void *)(v3 + 88) = 0x8000000000347AD0LL;
  OUTLINED_FUNCTION_29_16(v6, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_36_2(v7) == 1)
  {
    uint64_t v8 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v3 + 96) = 0u;
    *(_OWORD *)(v3 + 112) = 0u;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_75_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[7] = v10;
  *uint64_t v10 = v0;
  v10[1] = AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:);
  uint64_t v11 = OUTLINED_FUNCTION_21_19(0xD000000000000025LL);
  return OUTLINED_FUNCTION_18_39(v11, v12, v3, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t (*v8)(void);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v7 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v7, v8);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  OUTLINED_FUNCTION_163();
  uint64_t v17 = v1;
  uint64_t v18 = v2;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_131_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = OUTLINED_FUNCTION_8_2(v7, 128LL);
  OUTLINED_FUNCTION_0_59((__n128 *)v8, (__n128)xmmword_31D880);
  if (v0)
  {
    uint64_t v9 = OUTLINED_FUNCTION_17_38();
    uint64_t v11 = v0;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_55_12();
  }

  *(void *)(v8 + 48) = v11;
  *(void *)(v8 + 72) = v9;
  *(void *)(v8 + 80) = 0xD000000000000011LL;
  *(void *)(v8 + 88) = 0x8000000000347AD0LL;
  OUTLINED_FUNCTION_29_16(v4, v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1LL, v12) == 1)
  {
    uint64_t v13 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v13, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v8 + 96) = 0u;
    *(_OWORD *)(v8 + 112) = 0u;
  }

  else
  {
    *(void *)(v8 + 120) = v12;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v8 + 96));
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))( boxed_opaque_existential_1,  v6,  v12);
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_107_6(0xD000000000000025LL, (uint64_t)"AddCallParticipant#ErrorAddRestricted");
  return swift_bridgeObjectRelease();
}

uint64_t AddCallParticipantCATs.errorAddRestricted(currentCall:unsupportedReason:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_15_3(v1);
  OUTLINED_FUNCTION_0_59(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_17_38();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_52_3(0xD00000000000002ELL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:));
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_18_3();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_112_4();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(46LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_15_3(v1);
  OUTLINED_FUNCTION_0_59(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_17_38();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_55(0xD00000000000002ELL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorMaxParticipantsReached(currentCall:));
}

uint64_t AddCallParticipantCATs.errorNoTargetCall(completion:)()
{
  return OUTLINED_FUNCTION_13(36LL);
}

uint64_t AddCallParticipantCATs.errorNoTargetCall()(uint64_t a1)
{
  uint64_t v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return OUTLINED_FUNCTION_6_15(a1, 0xD000000000000024LL, 0x8000000000343700LL, (uint64_t)_swiftEmptyArrayStorage, v5);
}

uint64_t AddCallParticipantCATs.errorNoTargetCall()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return OUTLINED_FUNCTION_4_2(0xD000000000000024LL, 0x8000000000343700LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

{
  return OUTLINED_FUNCTION_14_6(36LL, 0x8000000000343700LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:completion:)()
{
  unint64_t v1 = v0;
  char v3 = v2;
  unint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  OUTLINED_FUNCTION_29_26(v7, (__n128)xmmword_320080);
  if (v5)
  {
    uint64_t v8 = OUTLINED_FUNCTION_18_22();
    unint64_t v9 = v5;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_52_1();
  }

  v7[3].n128_u64[0] = v9;
  v7[4].n128_u64[1] = v8;
  v7[5].n128_u64[0] = 0xD000000000000018LL;
  OUTLINED_FUNCTION_78_12((uint64_t)"shouldIncludeHandleLabel");
  v7[6].n128_u8[0] = v3 & 1;
  OUTLINED_FUNCTION_97_15();
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = v11;
  v7[8].n128_u64[1] = 0xEB000000006C6C61LL;
  if (v1)
  {
    uint64_t v12 = OUTLINED_FUNCTION_17_38();
    unint64_t v13 = v1;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_54_0();
    v7[9].n128_u64[1] = 0LL;
    v7[10].n128_u64[0] = 0LL;
  }

  v7[9].n128_u64[0] = v13;
  v7[10].n128_u64[1] = v12;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_15_71(0xD000000000000030LL);
  return OUTLINED_FUNCTION_51_12((uint64_t)v7);
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(_BYTE *)(v5 + 72) = a3;
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  v0[6] = v3;
  OUTLINED_FUNCTION_29_26(v3, (__n128)xmmword_320080);
  if (v1) {
    OUTLINED_FUNCTION_18_22();
  }
  else {
    OUTLINED_FUNCTION_32_23();
  }
  OUTLINED_FUNCTION_231_0();
  unint64_t v4 = v0[4];
  v3[3].n128_u64[0] = v5;
  OUTLINED_FUNCTION_68_13(v6, (uint64_t)"shouldIncludeHandleLabel");
  uint64_t v7 = OUTLINED_FUNCTION_21_31((uint64_t)&type metadata for Bool);
  if (v4)
  {
    uint64_t v7 = type metadata accessor for PhoneCallRecord(v7);
  }

  else
  {
    v3[9].n128_u64[1] = 0LL;
    v3[10].n128_u64[0] = 0LL;
  }

  v3[9].n128_u64[0] = v4;
  v3[10].n128_u64[1] = v7;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_65_10();
  v0[7] = v8;
  OUTLINED_FUNCTION_109(v8);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_48_11(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v2 = v0[2];
  char v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 176LL);
  v0[5] = v4;
  OUTLINED_FUNCTION_29_26(v4, (__n128)xmmword_320080);
  if (v2) {
    OUTLINED_FUNCTION_18_22();
  }
  else {
    OUTLINED_FUNCTION_32_23();
  }
  OUTLINED_FUNCTION_231_0();
  unint64_t v5 = v0[3];
  v4[3].n128_u64[0] = v6;
  OUTLINED_FUNCTION_68_13(v7, (uint64_t)"shouldIncludeHandleLabel");
  uint64_t v8 = OUTLINED_FUNCTION_21_31((uint64_t)&type metadata for Bool);
  if (v5)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v4[9].n128_u64[1] = 0LL;
    v4[10].n128_u64[0] = 0LL;
  }

  v4[9].n128_u64[0] = v5;
  v4[10].n128_u64[1] = v8;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v9;
  *uint64_t v9 = v0;
  v9[1] = AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:);
  uint64_t v10 = OUTLINED_FUNCTION_40(v1 + 24);
  return OUTLINED_FUNCTION_18_39(v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    unint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  OUTLINED_FUNCTION_163();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_8_2(v7, 176LL);
  OUTLINED_FUNCTION_29_26(v8, (__n128)xmmword_320080);
  if (v6) {
    OUTLINED_FUNCTION_18_22();
  }
  else {
    OUTLINED_FUNCTION_55_12();
  }
  OUTLINED_FUNCTION_231_0();
  v8[3].n128_u64[0] = v9;
  v8[4].n128_u64[1] = v10;
  v8[5].n128_u64[0] = v0;
  v8[5].n128_u64[1] = 0x800000000034BAC0LL;
  v8[6].n128_u8[0] = v4 & 1;
  OUTLINED_FUNCTION_97_15();
  v8[7].n128_u64[1] = v11;
  v8[8].n128_u64[0] = v12;
  v8[8].n128_u64[1] = 0xEB000000006C6C61LL;
  if (v2)
  {
    unint64_t v13 = OUTLINED_FUNCTION_17_38();
    uint64_t v14 = v2;
  }

  else
  {
    unint64_t v13 = OUTLINED_FUNCTION_54_0();
    v8[9].n128_u64[1] = 0LL;
    v8[10].n128_u64[0] = 0LL;
  }

  v8[9].n128_u64[0] = v14;
  v8[10].n128_u64[1] = v13;
  swift_retain();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_107_6(v0 + 24, (uint64_t)"AddCallParticipant#ErrorParticipantAlreadyActive");
  return OUTLINED_FUNCTION_51_12((uint64_t)v8);
}

uint64_t AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)( uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a3;
  *(void *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_15_3(v1);
  OUTLINED_FUNCTION_54_19(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = type metadata accessor for DialogLocationAddress(0LL);
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_52_3(0xD000000000000030LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:));
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_125(v4);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x6E6F697461636F6CLL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x6E6F697461636F6CLL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(48LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_15_3(v1);
  OUTLINED_FUNCTION_54_19(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = type metadata accessor for DialogLocationAddress(0LL);
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_55(0xD000000000000030LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorRestrictedDeviceByRegion(location:));
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:completion:)()
{
  char v2 = v1;
  unint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_8_2(v5, 128LL);
  OUTLINED_FUNCTION_29_26(v6, (__n128)xmmword_31D880);
  if (v4)
  {
    OUTLINED_FUNCTION_18_22();
    unint64_t v7 = v4;
  }

  else
  {
    OUTLINED_FUNCTION_52_1();
  }

  v6[3].n128_u64[0] = v7;
  OUTLINED_FUNCTION_231_0();
  v6[4].n128_u64[1] = v8;
  v6[5].n128_u64[0] = v0;
  OUTLINED_FUNCTION_78_12((uint64_t)"shouldIncludeHandleLabel");
  v6[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[6].n128_u8[0] = v2 & 1;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_15_71(v0 + 24);
  return OUTLINED_FUNCTION_51_12((uint64_t)v6);
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  *(void *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a3;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:));
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = OUTLINED_FUNCTION_125(v4);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D880;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x7069636974726170LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 64);
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 88) = 0x800000000034BAC0LL;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v7;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = 0xD000000000000018LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v8 = OUTLINED_FUNCTION_46();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_113_5(v8);
  OUTLINED_FUNCTION_45_8(v9);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v10, v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D880;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x7069636974726170LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 56);
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 88) = 0x800000000034BAC0LL;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v7;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = 0xD000000000000018LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v8;
  OUTLINED_FUNCTION_30(v8, (uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDetail(callRecord:));
  uint64_t v9 = OUTLINED_FUNCTION_40_16(0xD000000000000030LL);
  return OUTLINED_FUNCTION_12_28(v9, v10, v11, v12);
}

uint64_t AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:));
}

{
  unint64_t v2;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  OUTLINED_FUNCTION_131_3();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 128LL);
  OUTLINED_FUNCTION_29_26(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_18_22();
    char v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_52_1();
  }

  v5[3].n128_u64[0] = v7;
  v5[4].n128_u64[1] = v6;
  v5[5].n128_u64[0] = 0xD000000000000018LL;
  OUTLINED_FUNCTION_78_12((uint64_t)"shouldIncludeHandleLabel");
  v5[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[6].n128_u8[0] = a2 & 1;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(v8, v9, v5);
  return OUTLINED_FUNCTION_1_41((uint64_t)v5);
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_15_3(v1);
  OUTLINED_FUNCTION_0_59(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_17_38();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_52_3(0xD00000000000001FLL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorSelfAdd(currentCall:));
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)SearchCallHistoryCATsSimple.buildCallRecordDetailAsLabels(callRecord:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(31LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_15_3(v1);
  OUTLINED_FUNCTION_0_59(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_17_38();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_55(0xD00000000000001FLL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t AddCallParticipantCATs.errorSelfAdd(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.errorSelfAdd(currentCall:));
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:completion:)()
{
  char v1 = v0;
  unint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  OUTLINED_FUNCTION_32_27(v7, (__n128)xmmword_320080);
  if (v5)
  {
    uint64_t v8 = ObjC metadata update function for PhoneCallInvite();
    unint64_t v9 = v5;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_52_1();
  }

  v7[3].n128_u64[0] = v9;
  v7[4].n128_u64[1] = v8;
  v7[5].n128_u64[0] = 0x656369766564LL;
  v7[5].n128_u64[1] = 0xE600000000000000LL;
  if (v3)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState(0LL);
    unint64_t v11 = v3;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_54_0();
    v7[6].n128_u64[1] = 0LL;
    v7[7].n128_u64[0] = 0LL;
  }

  v7[6].n128_u64[0] = v11;
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = 0xD000000000000015LL;
  v7[8].n128_u64[1] = 0x800000000034BAE0LL;
  v7[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[9].n128_u8[0] = v1 & 1;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_15_71(0xD000000000000028LL);
  return OUTLINED_FUNCTION_51_12((uint64_t)v7);
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(_BYTE *)(v5 + 72) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 48) = v3;
  OUTLINED_FUNCTION_32_27(v3, (__n128)xmmword_320080);
  if (v1)
  {
    uint64_t v4 = ObjC metadata update function for PhoneCallInvite();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_32_23();
  }

  unint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = OUTLINED_FUNCTION_46_16(v4, v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for SirikitDeviceState(v7);
  }

  else
  {
    v3[6].n128_u64[1] = 0LL;
    v3[7].n128_u64[0] = 0LL;
  }

  unsigned __int8 v8 = *(_BYTE *)(v0 + 72);
  v3[6].n128_u64[0] = v6;
  v3[8].n128_u64[1] = 0x800000000034BAE0LL;
  v3[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v3[9].n128_u8[0] = v8;
  v3[7].n128_u64[1] = v7;
  v3[8].n128_u64[0] = 0xD000000000000015LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v0 + 56) = v9;
  OUTLINED_FUNCTION_109(v9);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_48_11(v10, v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 40) = v3;
  OUTLINED_FUNCTION_32_27(v3, (__n128)xmmword_320080);
  if (v1)
  {
    uint64_t v4 = ObjC metadata update function for PhoneCallInvite();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_32_23();
  }

  unint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = OUTLINED_FUNCTION_46_16(v4, v5);
  if (v6)
  {
    uint64_t v7 = type metadata accessor for SirikitDeviceState(v7);
  }

  else
  {
    v3[6].n128_u64[1] = 0LL;
    v3[7].n128_u64[0] = 0LL;
  }

  unsigned __int8 v8 = *(_BYTE *)(v0 + 64);
  v3[6].n128_u64[0] = v6;
  v3[8].n128_u64[1] = 0x800000000034BAE0LL;
  v3[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v3[9].n128_u8[0] = v8;
  v3[7].n128_u64[1] = v7;
  v3[8].n128_u64[0] = 0xD000000000000015LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  unint64_t v9 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v0 + 48) = v9;
  *unint64_t v9 = v0;
  v9[1] = AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:);
  uint64_t v10 = OUTLINED_FUNCTION_40(0xD000000000000028LL);
  return OUTLINED_FUNCTION_18_39(v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  char v0;
  char v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  OUTLINED_FUNCTION_163();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  OUTLINED_FUNCTION_32_27(v7, (__n128)xmmword_320080);
  if (v5)
  {
    unsigned __int8 v8 = ObjC metadata update function for PhoneCallInvite();
    unint64_t v9 = v5;
  }

  else
  {
    unsigned __int8 v8 = OUTLINED_FUNCTION_55_12();
  }

  v7[3].n128_u64[0] = v9;
  v7[4].n128_u64[1] = v8;
  v7[5].n128_u64[0] = 0x656369766564LL;
  v7[5].n128_u64[1] = 0xE600000000000000LL;
  if (v3)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState(0LL);
    uint64_t v11 = v3;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_54_0();
    v7[6].n128_u64[1] = 0LL;
    v7[7].n128_u64[0] = 0LL;
  }

  v7[6].n128_u64[0] = v11;
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = 0xD000000000000015LL;
  v7[8].n128_u64[1] = 0x800000000034BAE0LL;
  v7[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[9].n128_u8[0] = v1 & 1;
  swift_retain();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_107_6(0xD000000000000028LL, (uint64_t)"AddCallParticipant#IntentHandledResponse");
  return OUTLINED_FUNCTION_51_12((uint64_t)v7);
}

uint64_t AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  *(void *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a3;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:completion:)(char a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  *(void *)(v3 + 32) = 0xD000000000000015LL;
  *(void *)(v3 + 40) = 0x800000000034BB00LL;
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(_BYTE *)(v3 + 48) = a1;
  OUTLINED_FUNCTION_15_71(0xD000000000000027LL);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v2 + 32) = 0xD000000000000015LL;
  *(void *)(v2 + 40) = 0x800000000034BB00LL;
  *(void *)(v2 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_239_0( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v0 + 32) = v2;
  *(_OWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v4;
  uint64_t v5 = (void *)swift_task_alloc(v3);
  *(void *)(v0 + 40) = v5;
  *uint64_t v5 = v0;
  v5[1] = AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_6_15(v6, v7, v8, v2, v10);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v4 = *v1;
  uint64_t v2 = v4;
  OUTLINED_FUNCTION_39_0(&v4);
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1((uint64_t (*)(void))v1[1]);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v2 + 32) = 0xD000000000000015LL;
  *(void *)(v2 + 40) = 0x800000000034BB00LL;
  *(void *)(v2 + 72) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_239_0( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  *(_OWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v4;
  uint64_t v5 = (void *)swift_task_alloc(v3);
  *(void *)(v0 + 32) = v5;
  *uint64_t v5 = v0;
  v5[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  uint64_t v6 = OUTLINED_FUNCTION_21_19(0xD000000000000027LL);
  return v8(v6);
}

uint64_t AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATs.promptForParticipant(isUnsupportedFollowup:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  *(void *)(v3 + 32) = 0xD000000000000015LL;
  *(void *)(v3 + 40) = 0x800000000034BB00LL;
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(_BYTE *)(v3 + 48) = a1;
  OUTLINED_FUNCTION_55(0xD000000000000027LL, 0x8000000000343840LL);
  return OUTLINED_FUNCTION_41_20(v3);
}

uint64_t AddCallParticipantCATs.unsupportedParticipantsMultipleContactsUnsupported(completion:)()
{
  return OUTLINED_FUNCTION_13(69LL);
}

uint64_t AddCallParticipantCATs.unsupportedParticipantsMultipleContactsUnsupported()(uint64_t a1)
{
  uint64_t v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return OUTLINED_FUNCTION_6_15(a1, 0xD000000000000045LL, 0x8000000000343870LL, (uint64_t)_swiftEmptyArrayStorage, v5);
}

uint64_t AddCallParticipantCATs.unsupportedParticipantsMultipleContactsUnsupported()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return OUTLINED_FUNCTION_4_2(0xD000000000000045LL, 0x8000000000343870LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

{
  return OUTLINED_FUNCTION_14_6(69LL, 0x8000000000343870LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t AddCallParticipantCATs.__allocating_init(templateDir:options:globals:)()
{
  return PhoneCallControlCATs.init(templateDir:options:globals:)(v3, v2, v0);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATs.Properties,  &type metadata for AddCallParticipantCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATs.Properties and conformance AddCallParticipantCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AddCallParticipantCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantCATs;
  if (!type metadata singleton initialization cache for AddCallParticipantCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddCallParticipantCATs);
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AddCallParticipantCATs);
}

uint64_t ObjC metadata update function for AddCallParticipantCATs()
{
  return type metadata accessor for AddCallParticipantCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for AddCallParticipantCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF5) {
    return ((uint64_t (*)(void))((char *)&loc_263DD0 + 4 * byte_33A910[v4]))();
  }
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_263E04 + 4 * byte_33A90B[v4]))();
}

uint64_t sub_263E04(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_263E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x263E14LL);
  }
  return result;
}

uint64_t sub_263E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x263E28LL);
  }
  *(_BYTE *)uint64_t result = a2 + 10;
  return result;
}

uint64_t sub_263E2C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_263E34(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AddCallParticipantCATs.Properties()
{
  return &type metadata for AddCallParticipantCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_15_71(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1);
}

__n128 *OUTLINED_FUNCTION_54_19(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6E6F697461636F6CLL;
  result[2].n128_u64[1] = 0xE800000000000000LL;
  return result;
}

  ;
}

void BargeInCapablePromptForConfirmationFlow.__allocating_init<A>(itemToConfirm:strategy:sharedGlobals:)()
{
  uint64_t v24 = (void *)v1;
  uint64_t v25 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v23 = v7;
  uint64_t v9 = *(void *)(v3 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = *(void *)(*(void *)(v0 + 80) - 8LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  OUTLINED_FUNCTION_132_10(v17, v18, *(void *)(v0 + 88), *(void *)(v0 + 96));
  __chkstk_darwin();
  uint64_t v20 = (char *)&v23 - v19;
  *(uint64_t *)((char *)&v23 - v1__swift_destroy_boxed_opaque_existential_1(v0 + 9) = 0LL;
  swift_storeEnumTagMultiPayload((char *)&v23 - v19, v21, 0LL);
  OUTLINED_FUNCTION_97_1(v16, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v6, v4);
  id v22 = v24;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v24, (uint64_t)v26);
  (*(void (**)(char *, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t))(v0 + 208))(v20, v16, v12, v26, v4, v25);
  __swift_destroy_boxed_opaque_existential_1(v22);
  OUTLINED_FUNCTION_81_3(v6, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  OUTLINED_FUNCTION_11_20(v23, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_7_5();
}

uint64_t type metadata accessor for BargeInCapablePromptForConfirmationFlow.State( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for BargeInCapablePromptForConfirmationFlow.State);
}

uint64_t BargeInCapableSection.id.getter()
{
  return OUTLINED_FUNCTION_34_1();
}

uint64_t BargeInCapableSection.outputProducer.getter()
{
  return OUTLINED_FUNCTION_34_1();
}

uint64_t BargeInCapableSection.makeOutput()(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[18] = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AceOutput?);
  v4[19] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v9 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc(a4[1]);
  v4[20] = v7;
  *uint64_t v7 = v4;
  v7[1] = BargeInCapableSection.makeOutput();
  return v9(v4 + 2);
}

uint64_t BargeInCapableSection.makeOutput()()
{
  *(void *)(*(void *)v1 + 168LL) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t DynamicType;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  os_log_t v19;
  os_log_type_t v20;
  const char *v21;
  uint8_t *v22;
  uint64_t (*v23)(void);
  _OWORD v25[2];
  uint64_t v26;
  uint64_t v1 = v0[19];
  OUTLINED_FUNCTION_70_4();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Output);
  uint64_t v3 = type metadata accessor for AceOutput(0LL);
  uint64_t v4 = swift_dynamicCast(v1, v0 + 7, v2);
  uint64_t v5 = v0[19];
  if (v4)
  {
    uint64_t v6 = v0[18];
    OUTLINED_FUNCTION_158_0(v0[19], 0LL);
    OUTLINED_FUNCTION_11_12();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL))(v6, v5, v3);
  }

  else
  {
    OUTLINED_FUNCTION_158_0(v0[19], 1LL);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v5,  &demangling cache variable for type metadata for AceOutput?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v7 = OUTLINED_FUNCTION_15_1();
    uint64_t v8 = (void *)__swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_70_4();
    Logger.logObject.getter(v9);
    uint64_t v10 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_63(v10))
    {
      uint64_t v11 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v12 = OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&v25[0] = v12;
      *uint64_t v11 = 136315138;
      uint64_t v13 = v0[15];
      uint64_t v14 = __swift_project_boxed_opaque_existential_1(v0 + 12, v13);
      DynamicType = swift_getDynamicType(v14, v13, 1LL);
      uint64_t v16 = _typeName(_:qualified:)(DynamicType, 0LL);
      v0[17] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, (uint64_t *)v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 17, v0 + 18, v11 + 1);
      OUTLINED_FUNCTION_70_2();
      __swift_destroy_boxed_opaque_existential_1(v0 + 12);
      OUTLINED_FUNCTION_90_14();
      _os_log_impl(v18, v19, v20, v21, v22, 0xCu);
      OUTLINED_FUNCTION_48_13();
      OUTLINED_FUNCTION_0_2(v12);
      OUTLINED_FUNCTION_0_2((uint64_t)v11);
    }

    else
    {
      __swift_destroy_boxed_opaque_existential_1(v0 + 12);
    }

    uint64_t v26 = 0LL;
    memset(v25, 0, sizeof(v25));
    AceOutput.init(commands:flowActivity:)(_swiftEmptyArrayStorage, v25);
    OUTLINED_FUNCTION_11_12();
  }

  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_14_2(v23);
}

{
  uint64_t v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

void BargeInCapablePromptForConfirmationFlow.exitValue.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v25 = *v20;
  uint64_t v26 = type metadata accessor for PhoneError(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  id v29 = (void *)(v28 - v27);
  uint64_t v30 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State(0LL, v25[10], v25[11], v25[12]);
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin();
  uint64_t v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin();
  uint64_t v36 = (uint64_t *)((char *)&a9 - v35);
  uint64_t v37 = (void (*)(void))v25[23];
  ((void (*)(uint64_t))v37)(v34);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v30);
  if (EnumCaseMultiPayload == 4)
  {
    *(void *)uint64_t v24 = *v36;
    *(_BYTE *)(v24 + 8) = 1;
    uint64_t v40 = OUTLINED_FUNCTION_83_21();
    OUTLINED_FUNCTION_7_35(v40);
  }

  else if (EnumCaseMultiPayload == 3)
  {
    uint64_t v39 = OUTLINED_FUNCTION_83_21();
    (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v39 - 8) + 32LL))(v24, v36, v39);
  }

  else
  {
    v37();
    uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for BargeInCapablePromptForConfirmationFlow<A, B>.State,  v30);
    uint64_t v42 = String.init<A>(describing:)(v33, v30, WitnessTable);
    *id v29 = 0xD000000000000027LL;
    v29[1] = 0x800000000033A9E0LL;
    v29[2] = v42;
    v29[3] = v43;
    swift_storeEnumTagMultiPayload(v29, v26, 7LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v45 = OUTLINED_FUNCTION_4_4(v26, v44);
    PhoneError.logged()(v46);
    outlined destroy of PhoneError((uint64_t)v29);
    *(void *)uint64_t v24 = v45;
    *(_BYTE *)(v24 + 8) = 0;
    uint64_t v47 = OUTLINED_FUNCTION_83_21();
    OUTLINED_FUNCTION_7_35(v47);
    (*(void (**)(void *, uint64_t))(v31 + 8))(v36, v30);
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t key path setter for BargeInCapablePromptForConfirmationFlow.sections : <A, B>BargeInCapablePromptForConfirmationFlow<A, B>( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t *)(*(void *)a2 + *(void *)(**(void **)a2 + 136LL));
  swift_beginAccess(v3, v6, 1LL, 0LL);
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t BargeInCapablePromptForConfirmationFlow.sections.getter()
{
  return swift_bridgeObjectRetain();
}

void key path setter for BargeInCapablePromptForConfirmationFlow.state : <A, B>BargeInCapablePromptForConfirmationFlow<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v8 - v5, a1);
  BargeInCapablePromptForConfirmationFlow.state.setter((uint64_t)v6);
}

void BargeInCapablePromptForConfirmationFlow.state.willset(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State( 0LL,  *(void *)(*(void *)v1 + 80LL),  *(void *)(*(void *)v1 + 88LL),  *(void *)(*(void *)v1 + 96LL));
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - v7;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v11 = v10(v8, a1, v3);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v25 = v23;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v22 = v15 + 4;
    v10(v6, (uint64_t)v8, v3);
    uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
    v16(v8, v3);
    BargeInCapablePromptForConfirmationFlow.State.description.getter();
    uint64_t v18 = v17;
    unint64_t v20 = v19;
    v16(v6, v3);
    uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v22);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v12, v14, "#BargeInCapablePromptForConfirmationFlow state = %s", v15, 0xCu);
    uint64_t v21 = v23;
    swift_arrayDestroy(v23, 1LL);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  }
}

void BargeInCapablePromptForConfirmationFlow.state.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 144LL);
  OUTLINED_FUNCTION_25_0(v3, (uint64_t)v5, 0LL);
  OUTLINED_FUNCTION_120_9();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(a1, v3);
  OUTLINED_FUNCTION_26_1();
}

void BargeInCapablePromptForConfirmationFlow.state.setter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_34_1();
  v3(v2);
  swift_endAccess(v4);
  OUTLINED_FUNCTION_26_1();
}

uint64_t BargeInCapablePromptForConfirmationFlow.__allocating_init<A>(state:itemToConfirm:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)(a1, a2, a3, a4, a5, a6);
  return v13;
}

uint64_t BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v12 = *(void **)v7;
  uint64_t v13 = (uint64_t *)(v7 + *(void *)(*(void *)v7 + 136LL));
  *uint64_t v13 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v14 = v7 + *(void *)(*(void *)v7 + 144LL);
  uint64_t v15 = v12[10];
  uint64_t v34 = v12[11];
  uint64_t v35 = v12[12];
  uint64_t v16 = OUTLINED_FUNCTION_132_10(a1, a2, v34, v35);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v14, a1, v16);
  uint64_t v18 = *(void *)(v15 - 8);
  OUTLINED_FUNCTION_97_1( v7 + *(void *)(*(void *)v7 + 104LL),  a2,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  outlined init with copy of SharedGlobalsProviding((uint64_t)a4, v7 + *(void *)(*(void *)v7 + 112LL));
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a2, a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  OUTLINED_FUNCTION_11_20(a2, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  OUTLINED_FUNCTION_25_0((uint64_t)v13, (uint64_t)v37, 1LL);
  *uint64_t v13 = v31;
  swift_bridgeObjectRelease();
  uint64_t v19 = OUTLINED_FUNCTION_36_13();
  uint64_t v21 = implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( v19,  v20,  v34,  a5,  v35,  a6);
  uint64_t v22 = (void (**)())(v7 + *(void *)(*(void *)v7 + 120LL));
  *uint64_t v22 = v21;
  v22[1] = v23;
  uint64_t v24 = OUTLINED_FUNCTION_36_13();
  uint64_t v26 = implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( v24,  v25,  v34,  a5,  v35,  a6);
  uint64_t v28 = v27;
  OUTLINED_FUNCTION_81_3(a3, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8LL));
  id v29 = (void *)(v7 + *(void *)(*(void *)v7 + 128LL));
  *id v29 = v26;
  v29[1] = v28;
  return v7;
}

void (*implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v11 + 16))(v13);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (v14 + 56) & ~v14;
  uint64_t v16 = (char *)swift_allocObject(&unk_411E90, v15 + v12, v14 | 7);
  *((void *)v16 + 2) = a2;
  *((void *)v16 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = a3;
  *((void *)v16 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  *((void *)v16 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = a5;
  *((void *)v16 + 6) = a6;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], v13, a4);
  return partial apply for implicit closure #2 in implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:);
}

void *implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(a1);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v11 + 16))(v13);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (v14 + 56) & ~v14;
  uint64_t v16 = (char *)swift_allocObject(&unk_411E68, v15 + v12, v14 | 7);
  *((void *)v16 + 2) = a2;
  *((void *)v16 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = a3;
  *((void *)v16 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  *((void *)v16 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = a5;
  *((void *)v16 + 6) = a6;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], v13, a4);
  return &async function pointer to partial apply for implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:);
}

uint64_t implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = *(int **)(a9 + 40);
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v17 + *v17);
  uint64_t v18 = (void *)swift_task_alloc(v17[1]);
  *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v18;
  void *v18 = v9;
  v18[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v20(a1, a2, a3, a4, a5, a6, a7, v21, a9);
}

void BargeInCapablePromptForConfirmationFlow.on(input:)()
{
  uint64_t v72 = v1;
  uint64_t v2 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State( 0LL,  *(void *)(*(void *)v0 + 80LL),  *(void *)(*(void *)v0 + 88LL),  *(void *)(*(void *)v0 + 96LL));
  uint64_t v3 = *(void (**)(void))(v2 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v67 = v4;
  __chkstk_darwin();
  uint64_t v6 = (unint64_t *)((char *)&v65 - v5);
  uint64_t v7 = type metadata accessor for ActionForInput(0LL);
  uint64_t v68 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v69 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v65 - v9;
  __chkstk_darwin();
  uint64_t v12 = (void (*)(void))((char *)&v65 - v11);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v13 = OUTLINED_FUNCTION_15_1();
  uint64_t v70 = __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v14 = OUTLINED_FUNCTION_6_0();
  BOOL v15 = os_log_type_enabled(v0, v14);
  uint64_t v71 = v2;
  if (v15)
  {
    uint64_t v16 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v65 = v3;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v66 = v12;
    uint64_t v19 = v7;
    uint64_t v20 = v18;
    uint64_t v74 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v73 = OUTLINED_FUNCTION_42_24();
    uint64_t v2 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v17 + 4);
    _os_log_impl(&dword_0, v0, v14, "#BargeInCapablePromptForConfirmationFlow %s", v17, 0xCu);
    swift_arrayDestroy(v20, 1LL);
    uint64_t v21 = v20;
    uint64_t v7 = v19;
    uint64_t v12 = v66;
    OUTLINED_FUNCTION_0_2(v21);
    uint64_t v22 = (uint64_t)v17;
    uint64_t v3 = v65;
    OUTLINED_FUNCTION_0_2(v22);
  }

  uint64_t v23 = *(void (**)(void))(*(void *)v0 + 184LL);
  v23();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v2);
  if ((_DWORD)EnumCaseMultiPayload == 5)
  {
    uint64_t v65 = (void (*)(void))v7;
    uint64_t v30 = *(void (**)(void))(*(void *)v0 + 160LL);
    v30();
    unint64_t v31 = *(void *)(((uint64_t (*)(void))v30)() + 16);
    swift_bridgeObjectRelease();
    uint64_t v32 = OUTLINED_FUNCTION_39();
    uint64_t v33 = *(void (**)(uint64_t))((char *)v0 + *(void *)(*(void *)v0 + 120LL));
    uint64_t v34 = ((uint64_t (*)(uint64_t))v30)(v32);
    if (!v31)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }

    if (v31 > *(void *)(v34 + 16))
    {
LABEL_26:
      __break(1u);
      return;
    }

    uint64_t v66 = v23;
    OUTLINED_FUNCTION_136_6();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_62();
    uint64_t v35 = OUTLINED_FUNCTION_105_7();
    v33(v35);
    OUTLINED_FUNCTION_34_0();
    uint64_t v29 = OUTLINED_FUNCTION_111_10();
    uint64_t v7 = (uint64_t)v65;
  }

  else
  {
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      unint64_t v25 = *v6;
      uint64_t v26 = *(void (**)(void))((char *)v0 + *(void *)(*(void *)v0 + 120LL));
      uint64_t v27 = (*(uint64_t (**)(void))(*(void *)v0 + 160LL))();
      if ((v25 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (v25 < *(void *)(v27 + 16))
      {
        uint64_t v65 = v26;
        uint64_t v66 = v23;
        OUTLINED_FUNCTION_136_6();
        OUTLINED_FUNCTION_59();
        OUTLINED_FUNCTION_62();
        uint64_t v28 = OUTLINED_FUNCTION_105_7();
        v65(v28);
        OUTLINED_FUNCTION_34_0();
        uint64_t v29 = OUTLINED_FUNCTION_111_10();
        goto LABEL_14;
      }

      __break(1u);
      goto LABEL_25;
    }

    static ActionForInput.ignore()(EnumCaseMultiPayload);
    uint64_t v29 = OUTLINED_FUNCTION_41_2((uint64_t)v6, *((uint64_t (**)(uint64_t, uint64_t))v3 + 1));
  }

uint64_t BargeInCapablePromptForConfirmationFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for BargeInCapablePromptForConfirmationFlow( 0LL,  *(void *)(*(void *)v2 + 80LL),  *(void *)(*(void *)v2 + 88LL),  *(void *)(*(void *)v2 + 96LL));
  uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for BargeInCapablePromptForConfirmationFlow<A, B>,  v5);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v5, WitnessTable);
}

uint64_t BargeInCapablePromptForConfirmationFlow.execute()(uint64_t a1)
{
  v3[6] = a1;
  v3[7] = v2;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = type metadata accessor for CATOption(0LL);
  v3[8] = OUTLINED_FUNCTION_23(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for PhoneError(0LL);
  v3[9] = v6;
  v3[10] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = v4[11];
  v3[11] = v7;
  uint64_t v8 = type metadata accessor for PromptResult(0LL, v7);
  v3[12] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[13] = v9;
  v3[14] = OUTLINED_FUNCTION_68_24(v9);
  v3[15] = swift_task_alloc(v1);
  uint64_t v10 = type metadata accessor for Input(0LL);
  v3[16] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[17] = v11;
  v3[18] = OUTLINED_FUNCTION_68_24(v11);
  v3[19] = swift_task_alloc(v1);
  uint64_t v12 = v4[10];
  v3[20] = v12;
  uint64_t v13 = v4[12];
  v3[21] = v13;
  uint64_t v14 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State(0LL, v12, v7, v13);
  v3[22] = v14;
  v3[23] = *(void *)(v14 - 8);
  v3[24] = OUTLINED_FUNCTION_28();
  v3[25] = OUTLINED_FUNCTION_28();
  v3[26] = OUTLINED_FUNCTION_28();
  v3[27] = OUTLINED_FUNCTION_28();
  v3[28] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v15, v16, v17);
}

uint64_t BargeInCapablePromptForConfirmationFlow.execute()()
{
  uint64_t v93 = v1;
  uint64_t v94 = v2;
  uint64_t v92 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = swift_retain();
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    uint64_t v8 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v89 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v11 = OUTLINED_FUNCTION_7_0(22LL);
    char v90 = (uint64_t (*)(void))OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v91 = v90;
    *(_DWORD *)uint64_t v11 = 136315394;
    *(void *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0x2865747563657865LL,  0xE900000000000029LL,  (uint64_t *)&v91);
    uint64_t v12 = OUTLINED_FUNCTION_36_13();
    uint64_t v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v12, v13, v11 + 4);
    *(_WORD *)(v11 + 12) = 2080;
    (*(void (**)(uint64_t))(*(void *)v10 + 184LL))(v14);
    BargeInCapablePromptForConfirmationFlow.State.description.getter();
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v8, v9);
    uint64_t v15 = OUTLINED_FUNCTION_36_13();
    *(void *)(v0 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v11 + 14);
    swift_release(v10);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v7, "#BargeInCapablePromptForConfirmationFlow %s state = %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v90, 2LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v90);
    OUTLINED_FUNCTION_0_2(v11);
  }

  else
  {

    uint64_t v18 = OUTLINED_FUNCTION_38_1();
  }

  uint64_t v19 = *(void *)(v0 + 216);
  uint64_t v20 = *(void *)(v0 + 176);
  uint64_t v21 = *(void (**)(void))(**(void **)(v0 + 56) + 184LL);
  ((void (*)(uint64_t))v21)(v18);
  switch(swift_getEnumCaseMultiPayload(v19, v20))
  {
    case 0u:
      uint64_t v22 = *(uint64_t **)(v0 + 208);
      (*(void (**)(uint64_t *, void, void))(*(void *)(v0 + 184) + 16LL))( v22,  *(void *)(v0 + 216),  *(void *)(v0 + 176));
      uint64_t v23 = *v22;
      uint64_t v24 = (void *)swift_task_alloc(dword_43C7BC);
      *(void *)(v0 + 232) = v24;
      *uint64_t v24 = v0;
      v24[1] = BargeInCapablePromptForConfirmationFlow.execute();
      return BargeInCapablePromptForConfirmationFlow.executeSection(idx:)(*(void *)(v0 + 48), v23);
    case 1u:
    case 5u:
      OUTLINED_FUNCTION_54_9(*(void *)(v0 + 184));
      static ExecuteResponse.ongoing(requireInput:)(1LL);
      goto LABEL_20;
    case 2u:
      uint64_t v26 = *(uint64_t **)(v0 + 200);
      uint64_t v27 = *(void *)(v0 + 176);
      uint64_t v28 = *(void *)(v0 + 128);
      uint64_t v29 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v0 + 184) + 16LL);
      v29(v26, *(void *)(v0 + 216), v27);
      uint64_t v30 = *v26;
      *(void *)(v0 + 248) = *v26;
      uint64_t v31 = OUTLINED_FUNCTION_1_27(0LL, v28, v27, (uint64_t)" previous ");
      uint64_t v32 = swift_projectBox(v30);
      uint64_t v33 = v32 + *(int *)(v31 + 48);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v33, v27);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v43 = *(unint64_t **)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 136);
        uint64_t v44 = *(void *)(v0 + 144);
        uint64_t v46 = *(void *)(v0 + 128);
        uint64_t v47 = *(void *)(v0 + 56);
        v29((uint64_t *)v43, v33, *(void *)(v0 + 176));
        unint64_t v48 = *v43;
        uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v44, v32, v46);
        uint64_t v50 = (*(uint64_t (**)(uint64_t))(*(void *)v47 + 160LL))(v49);
        if ((v48 & 0x8000000000000000LL) == 0)
        {
          if (v48 < *(void *)(v50 + 16))
          {
            uint64_t v51 = v50 + 32 * v48;
            *(void *)(v0 + 288) = *(void *)(v51 + 40);
            *(void *)(v0 + 296) = *(void *)(v51 + 56);
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_59();
            OUTLINED_FUNCTION_62();
            uint64_t v52 = (void *)OUTLINED_FUNCTION_69_22();
            *(void *)(v0 + 30__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v52;
            void *v52 = v0;
            v52[1] = BargeInCapablePromptForConfirmationFlow.execute();
            OUTLINED_FUNCTION_107_11();
            return v90();
          }

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(*(void *)v1 + 24OUTLINED_FUNCTION_25_0(v0 + *(void *)(*(void *)v0 + 136LL), (uint64_t)v2, 0LL) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "265CB0: call analysis failed (funcsize=23)"
uint64_t BargeInCapablePromptForConfirmationFlow.execute()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 280) = v1;
  swift_task_dealloc();
  swift_release(*(void *)(v0 + 264));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

#error "265D64: call analysis failed (funcsize=38)"
uint64_t BargeInCapablePromptForConfirmationFlow.execute()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 312) = v1;
  swift_task_dealloc();
  swift_release(*(void *)(v0 + 296));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

#error "265E54: call analysis failed (funcsize=38)"
#error "265F30: call analysis failed (funcsize=40)"
#error "265FE4: call analysis failed (funcsize=45)"
#error "266098: call analysis failed (funcsize=45)"
void BargeInCapablePromptForConfirmationFlow.State.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void v8[8];
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  type metadata accessor for PromptResult(0LL, *(void *)(v0 + 24));
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for Input(0LL);
  v8[3] = *(void *)(v2 - 8);
  uint64_t v8[4] = v2;
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  __int128 v8[2] = v4 - v3;
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v6 = (char *)v8 - v5;
  OUTLINED_FUNCTION_118_7((uint64_t)v8 - v5);
  os_log_type_t v7 = (char *)sub_2661CC + 4 * byte_33A9F0[swift_getEnumCaseMultiPayload(v6, v1)];
  __asm { BR              X10 }

void sub_2661CC()
{
  *(_BYTE *)(v1 - 81) = -18;
  *(void *)(v1 - 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  String.append(_:)(v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_33_24();
  OUTLINED_FUNCTION_7_5();
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for BargeInError(0LL);
  v3[24] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[25] = v6;
  v3[26] = OUTLINED_FUNCTION_23(v6);
  uint64_t v7 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State(0LL, v4[10], v4[11], v4[12]);
  v3[27] = v7;
  v3[28] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v3[29] = OUTLINED_FUNCTION_28();
  v3[30] = OUTLINED_FUNCTION_28();
  uint64_t v8 = type metadata accessor for NLContextUpdate(0LL);
  v3[31] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[32] = v9;
  v3[33] = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = type metadata accessor for AceOutput(0LL);
  v3[34] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[35] = v11;
  v3[36] = OUTLINED_FUNCTION_23(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)()
{
  uint64_t v1 = *(void *)(v0 + 176);
  Swift::String v2 = *(uint64_t (**)(void))(**(void **)(v0 + 184) + 160LL);
  *(void *)(v0 + 296) = v2;
  uint64_t result = v2();
  if (v1 < 0)
  {
    __break(1u);
  }

  else
  {
    unint64_t v4 = *(void *)(v0 + 176);
    if (*(void *)(result + 16) > v4)
    {
      uint64_t v5 = (void *)(result + 32 * v4);
      *(void *)(v0 + 30__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v5[5];
      uint64_t v6 = (int *)v5[6];
      *(void *)(v0 + 312) = v5[7];
      swift_bridgeObjectRetain();
      swift_retain();
      OUTLINED_FUNCTION_62();
      uint64_t v7 = (void *)swift_task_alloc(dword_43C7AC);
      *(void *)(v0 + 320) = v7;
      *uint64_t v7 = v0;
      v7[1] = BargeInCapablePromptForConfirmationFlow.executeSection(idx:);
      return BargeInCapableSection.makeOutput()(*(void *)(v0 + 288), v8, v9, v6);
    }
  }

  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 328) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release(*(void *)(v0 + 312));
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 34__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc();
  if (!v1) {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 104));
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  OUTLINED_FUNCTION_54_9(v2[32]);
  uint64_t v3 = OUTLINED_FUNCTION_76_1();
  unint64_t v4 = AceOutput.commands.getter(v3);
  v2[44] = v4;
  if (v4 >> 62) {
    uint64_t v5 = OUTLINED_FUNCTION_108_8(v4);
  }
  else {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
  }
  v2[45] = v5;
  if (v5)
  {
    OUTLINED_FUNCTION_84_15();
    if (v7) {
      uint64_t v8 = *(id *)(v6 + 32);
    }
    else {
      uint64_t v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v6);
    }
    uint64_t v15 = v8;
    v2[47] = (uint64_t)v8;
    v2[48] = 1LL;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    unint64_t v16 = OUTLINED_FUNCTION_15_1();
    uint64_t v17 = (void *)__swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = v15;
    OUTLINED_FUNCTION_117_9();
    uint64_t v19 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_93(v19))
    {
      uint64_t v17 = (void *)OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v20 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v35 = v20;
      uint64_t v21 = OUTLINED_FUNCTION_121_10(4.8151e-34);
      if (!v22) {
        uint64_t v21 = 4271950LL;
      }
      *(void *)((char *)v17 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_99_10(v21, v22, &v35);

      OUTLINED_FUNCTION_23_5();
      uint64_t v23 = OUTLINED_FUNCTION_102_8();
      if (!v24) {
        uint64_t v23 = 4271950LL;
      }
      *(void *)((char *)v17 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_99_10(v23, v24, &v35);

      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_6_68( &dword_0,  v25,  v26,  "#BargeInCapablePromptForConfirmationFlow Submitting AceCommand: %s, aceId=%s");
      OUTLINED_FUNCTION_4_79();
      OUTLINED_FUNCTION_0_2(v20);
      OUTLINED_FUNCTION_0_2((uint64_t)v17);
    }

    else
    {
    }

    OUTLINED_FUNCTION_20_58();
    __swift_project_boxed_opaque_existential_1(v17, v2[11]);
    uint64_t v27 = swift_task_alloc(dword_42F074);
    OUTLINED_FUNCTION_53_26(v27);
    uint64_t v28 = OUTLINED_FUNCTION_71_19((uint64_t)BargeInCapablePromptForConfirmationFlow.executeSection(idx:));
    return OUTLINED_FUNCTION_66_19(v28, v29, v30, v31);
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_48_31();
    ((void (*)(uint64_t))v0)(v9);
    uint64_t result = swift_bridgeObjectRelease();
    if (__OFADD__(v1, 1LL))
    {
      __break(1u);
    }

    else
    {
      uint64_t v11 = OUTLINED_FUNCTION_75_21();
      OUTLINED_FUNCTION_113_10(v11);
      OUTLINED_FUNCTION_95_13();
      if (v13 != v14)
      {
        uint64_t v32 = OUTLINED_FUNCTION_96_8();
      }

      else
      {
        uint64_t v32 = v0;
        uint64_t v33 = 5LL;
      }

      swift_storeEnumTagMultiPayload(v32, v12, v33);
      OUTLINED_FUNCTION_54_20();
      OUTLINED_FUNCTION_35_34();
      OUTLINED_FUNCTION_3_70();
      OUTLINED_FUNCTION_3_108();
      OUTLINED_FUNCTION_23_3();
      OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_92_0();
      uint64_t v34 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
      return v34();
    }
  }

  return result;
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  os_log_type_t v7;
  float *v8;
  uint64_t v9;
  uint64_t v10;
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_54_9(v0[32]);
  OUTLINED_FUNCTION_26_53();
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_76_1();
  uint64_t v1 = v0[43];
  v0[18] = v1;
  OUTLINED_FUNCTION_9_50();
  Swift::String v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_46_31(v2, v3, v4, (uint64_t)&type metadata for InferredBargeInError))
  {
    OUTLINED_FUNCTION_13_6();
LABEL_5:
    OUTLINED_FUNCTION_62_20();
    OUTLINED_FUNCTION_16_54();
    OUTLINED_FUNCTION_54_20();
    OUTLINED_FUNCTION_80_14();
    OUTLINED_FUNCTION_3_108();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    uint64_t v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_2_38(v5);
  }

  OUTLINED_FUNCTION_40_29();
  v0[19] = v1;
  OUTLINED_FUNCTION_9_50();
  if (OUTLINED_FUNCTION_22_52())
  {
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_26_53();
    goto LABEL_5;
  }

  OUTLINED_FUNCTION_62_20();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  uint64_t v7 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_93(v7))
  {
    uint64_t v8 = (float *)OUTLINED_FUNCTION_7_0(12LL);
    OUTLINED_FUNCTION_13_79(v8, 3.852e-34);
    OUTLINED_FUNCTION_36_36(&dword_0, v9, v10, "#BargeInCapablePromptForConfirmationFlow error executing section %ld");
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  OUTLINED_FUNCTION_23_55();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return OUTLINED_FUNCTION_2_38(v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  os_log_type_t v9;
  float *v10;
  uint64_t v11;
  uint64_t v12;
  OUTLINED_FUNCTION_21_0();
  Swift::String v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);

  OUTLINED_FUNCTION_81_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_76_1();
  uint64_t v3 = *(void *)(v0 + 400);
  *(void *)(v0 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  OUTLINED_FUNCTION_9_50();
  unint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_46_31(v4, v5, v6, (uint64_t)&type metadata for InferredBargeInError))
  {
    OUTLINED_FUNCTION_13_6();
LABEL_5:
    OUTLINED_FUNCTION_62_20();
    OUTLINED_FUNCTION_16_54();
    OUTLINED_FUNCTION_54_20();
    OUTLINED_FUNCTION_80_14();
    OUTLINED_FUNCTION_3_108();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    uint64_t v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_2_38(v7);
  }

  OUTLINED_FUNCTION_40_29();
  *(void *)(v0 + 152) = v3;
  OUTLINED_FUNCTION_9_50();
  if (OUTLINED_FUNCTION_22_52())
  {
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_26_53();
    goto LABEL_5;
  }

  OUTLINED_FUNCTION_62_20();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  uint64_t v9 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_93(v9))
  {
    uint64_t v10 = (float *)OUTLINED_FUNCTION_7_0(12LL);
    OUTLINED_FUNCTION_13_79(v10, 3.852e-34);
    OUTLINED_FUNCTION_36_36(&dword_0, v11, v12, "#BargeInCapablePromptForConfirmationFlow error executing section %ld");
    OUTLINED_FUNCTION_0_2((uint64_t)v10);
  }

  OUTLINED_FUNCTION_23_55();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return OUTLINED_FUNCTION_2_38(v7);
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)(uint64_t a1)
{
  Swift::String v2 = (os_log_s *)v1[36];
  uint64_t v4 = v1[30];
  uint64_t v3 = (void *)v1[31];
  AceOutput.nlContextUpdate.getter(a1);
  if (__swift_getEnumTagSinglePayload(v4, 1LL, (uint64_t)v3) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1[30],  &demangling cache variable for type metadata for NLContextUpdate?);
    unint64_t v6 = AceOutput.commands.getter(v5);
    v1[44] = v6;
    if (v6 >> 62) {
      uint64_t v7 = OUTLINED_FUNCTION_108_8(v6);
    }
    else {
      uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8LL));
    }
    v1[45] = v7;
    if (v7)
    {
      OUTLINED_FUNCTION_84_15();
      if (v9) {
        id v10 = *(id *)(v8 + 32);
      }
      else {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v8);
      }
      uint64_t v28 = v10;
      v1[47] = v10;
      v1[48] = 1LL;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v29 = OUTLINED_FUNCTION_15_1();
      uint64_t v30 = (void *)__swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
      id v31 = v28;
      OUTLINED_FUNCTION_117_9();
      os_log_type_t v32 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_93(v32))
      {
        uint64_t v30 = (void *)OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v33 = OUTLINED_FUNCTION_7_0(64LL);
        *(void *)&v49[0] = v33;
        uint64_t v34 = OUTLINED_FUNCTION_121_10(4.8151e-34);
        if (!v35) {
          uint64_t v34 = 4271950LL;
        }
        *(void *)((char *)v30 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_99_10(v34, v35, (uint64_t *)v49);

        OUTLINED_FUNCTION_23_5();
        uint64_t v36 = OUTLINED_FUNCTION_102_8();
        if (!v37) {
          uint64_t v36 = 4271950LL;
        }
        *(void *)((char *)v30 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_99_10(v36, v37, (uint64_t *)v49);

        OUTLINED_FUNCTION_23_5();
        OUTLINED_FUNCTION_6_68( &dword_0,  v38,  v39,  "#BargeInCapablePromptForConfirmationFlow Submitting AceCommand: %s, aceId=%s");
        OUTLINED_FUNCTION_4_79();
        OUTLINED_FUNCTION_0_2(v33);
        OUTLINED_FUNCTION_0_2((uint64_t)v30);
      }

      else
      {
      }

      OUTLINED_FUNCTION_20_58();
      __swift_project_boxed_opaque_existential_1(v30, v1[11]);
      uint64_t v40 = swift_task_alloc(dword_42F074);
      OUTLINED_FUNCTION_53_26(v40);
      uint64_t v41 = OUTLINED_FUNCTION_71_19((uint64_t)BargeInCapablePromptForConfirmationFlow.executeSection(idx:));
      return AceServiceInvokerAsync.submitWithBargeInDetection<A>(_:)(v41, v42, v43, v44);
    }

    else
    {
      uint64_t v23 = OUTLINED_FUNCTION_48_31();
      ((void (*)(uint64_t))v3)(v23);
      uint64_t result = swift_bridgeObjectRelease();
      if (__OFADD__(v4, 1LL))
      {
        __break(1u);
      }

      else
      {
        uint64_t v24 = OUTLINED_FUNCTION_75_21();
        OUTLINED_FUNCTION_113_10(v24);
        OUTLINED_FUNCTION_95_13();
        if (v26 != v27)
        {
          uint64_t v45 = OUTLINED_FUNCTION_96_8();
        }

        else
        {
          uint64_t v45 = v3;
          uint64_t v46 = 5LL;
        }

        swift_storeEnumTagMultiPayload(v45, v25, v46);
        OUTLINED_FUNCTION_54_20();
        OUTLINED_FUNCTION_35_34();
        OUTLINED_FUNCTION_3_70();
        OUTLINED_FUNCTION_3_108();
        OUTLINED_FUNCTION_23_3();
        OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_10_0();
        OUTLINED_FUNCTION_46_0();
        OUTLINED_FUNCTION_92_0();
        uint64_t v47 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
        return OUTLINED_FUNCTION_14_2(v47);
      }
    }
  }

  else
  {
    (*(void (**)(void, void, void))(v1[32] + 32LL))(v1[33], v1[30], v1[31]);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v11 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v12 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v2, v12))
    {
      uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v2, v12, "#BargeInCapablePromptForConfirmationFlow Submitting NLContextUpdate", v13, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v13);
    }

    uint64_t v14 = v1[33];
    uint64_t v48 = v1[34];
    uint64_t v15 = v1[31];
    uint64_t v16 = v1[32];
    uint64_t v17 = v1[29];
    uint64_t v18 = v1[23];

    __swift_project_boxed_opaque_existential_1( (void *)(v18 + *(void *)(*(void *)v18 + 112LL)),  *(void *)(v18 + *(void *)(*(void *)v18 + 112LL) + 24));
    OUTLINED_FUNCTION_7_3();
    uint64_t v19 = v1[5];
    uint64_t v20 = v1[7];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v19);
    uint64_t v50 = 0LL;
    memset(v49, 0, sizeof(v49));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v14, v15);
    __swift_storeEnumTagSinglePayload(v17, 0LL, 1LL, v15);
    v1[16] = v48;
    v1[17] = &protocol witness table for AceOutput;
    __swift_allocate_boxed_opaque_existential_1(v1 + 13);
    AceOutput.init(commands:flowActivity:nlContextUpdate:)(_swiftEmptyArrayStorage, v49, v17);
    uint64_t v21 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
    v1[42] = v21;
    *uint64_t v21 = v1;
    v21[1] = BargeInCapablePromptForConfirmationFlow.executeSection(idx:);
    return dispatch thunk of OutputPublisherAsync.publish(output:)(v1 + 13, v19, v20);
  }

  return result;
}

uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)(void *a1)
{
  uint64_t v9 = *v2;
  uint64_t v4 = v9;
  OUTLINED_FUNCTION_39_0(&v9);
  *(void *)(v4 + 400) = v1;
  swift_task_dealloc();
  if (v1) {
    swift_bridgeObjectRelease();
  }
  else {

  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

#error "266F7C: call analysis failed (funcsize=165)"
uint64_t BargeInCapablePromptForConfirmationFlow.executeSection(idx:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  os_log_type_t v7;
  float *v8;
  uint64_t v9;
  uint64_t v10;
  OUTLINED_FUNCTION_21_0();
  swift_release(v0[39]);
  OUTLINED_FUNCTION_62();
  uint64_t v1 = v0[41];
  v0[18] = v1;
  OUTLINED_FUNCTION_9_50();
  Swift::String v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (OUTLINED_FUNCTION_46_31(v2, v3, v4, (uint64_t)&type metadata for InferredBargeInError))
  {
    OUTLINED_FUNCTION_13_6();
LABEL_5:
    OUTLINED_FUNCTION_62_20();
    OUTLINED_FUNCTION_16_54();
    OUTLINED_FUNCTION_54_20();
    OUTLINED_FUNCTION_80_14();
    OUTLINED_FUNCTION_3_108();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    uint64_t v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_2_38(v5);
  }

  OUTLINED_FUNCTION_40_29();
  v0[19] = v1;
  OUTLINED_FUNCTION_9_50();
  if (OUTLINED_FUNCTION_22_52())
  {
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_26_53();
    goto LABEL_5;
  }

  OUTLINED_FUNCTION_62_20();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  uint64_t v7 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_93(v7))
  {
    uint64_t v8 = (float *)OUTLINED_FUNCTION_7_0(12LL);
    OUTLINED_FUNCTION_13_79(v8, 3.852e-34);
    OUTLINED_FUNCTION_36_36(&dword_0, v9, v10, "#BargeInCapablePromptForConfirmationFlow error executing section %ld");
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  OUTLINED_FUNCTION_23_55();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return OUTLINED_FUNCTION_2_38(v5);
}

uint64_t *BargeInCapablePromptForConfirmationFlow.deinit()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  OUTLINED_FUNCTION_41_2( (uint64_t)v0 + *(void *)(*v0 + 104),  *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL));
  __swift_destroy_boxed_opaque_existential_1((uint64_t *)((char *)v0 + *(void *)(*v0 + 112)));
  OUTLINED_FUNCTION_112_8(*(void *)(*v0 + 120));
  OUTLINED_FUNCTION_112_8(*(void *)(*v0 + 128));
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t)v0 + *(void *)(*v0 + 144);
  uint64_t v4 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State( 0LL,  v2,  *(void *)(v1 + 88),  *(void *)(v1 + 96));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  return v0;
}

uint64_t BargeInCapablePromptForConfirmationFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.on(input:) in conformance BargeInCapablePromptForConfirmationFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216LL))() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance BargeInCapablePromptForConfirmationFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 224LL))();
}

uint64_t protocol witness for Flow.execute() in conformance BargeInCapablePromptForConfirmationFlow<A, B>( uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 232LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1);
}

uint64_t type metadata accessor for BargeInCapablePromptForConfirmationFlow( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for BargeInCapablePromptForConfirmationFlow);
}

void sub_2676E4(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(void **)a1 + 160LL))();
  OUTLINED_FUNCTION_2();
}

void sub_26771C(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for BargeInCapableSection()
{
  return &type metadata for BargeInCapableSection;
}

uint64_t type metadata completion function for BargeInCapablePromptForConfirmationFlow(void *a1)
{
  uint64_t v2 = swift_checkMetadataState(319LL, a1[10]);
  uint64_t v3 = v2;
  if (v4 <= 0x3F)
  {
    v9[0] = *(void *)(v2 - 8) + 64LL;
    v9[1] = "(";
    v9[2] = (char *)&value witness table for () + 64;
    v9[3] = (char *)&value witness table for () + 64;
    v9[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v5 = type metadata accessor for BargeInCapablePromptForConfirmationFlow.State(319LL, v2, a1[11], a1[12]);
    uint64_t v3 = v5;
    if (v6 <= 0x3F)
    {
      void v9[5] = *(void *)(v5 - 8) + 64LL;
      uint64_t inited = swift_initClassMetadata2(a1, 0LL, 6LL, v9, a1 + 13);
      if (inited) {
        return inited;
      }
      else {
        return 0LL;
      }
    }
  }

  return v3;
}

uint64_t type metadata completion function for BargeInCapablePromptForConfirmationFlow.State(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  void v4[2] = "\b";
  uint64_t result = type metadata accessor for PromptResult(319LL, *(void *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    v4[3] = *(void *)(result - 8) + 64LL;
    void v4[4] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 0LL, 5LL, v4);
    return 0LL;
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BargeInCapablePromptForConfirmationFlow.State( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v13);
  }

  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 4:
        uint64_t v14 = *a2;
        swift_errorRetain(v14);
        *a1 = v14;
        id v10 = a1;
        uint64_t v11 = a3;
        uint64_t v12 = 4LL;
        break;
      case 3:
        uint64_t v15 = type metadata accessor for PromptResult(0LL, *(void *)(a3 + 24));
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16LL))(a1, a2, v15);
        id v10 = a1;
        uint64_t v11 = a3;
        uint64_t v12 = 3LL;
        break;
      case 2:
        uint64_t v9 = *a2;
        *a1 = *a2;
        swift_retain(v9);
        id v10 = a1;
        uint64_t v11 = a3;
        uint64_t v12 = 2LL;
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        return a1;
    }

    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }

  return a1;
}

uint64_t destroy for BargeInCapablePromptForConfirmationFlow.State(void *a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((_DWORD)result)
  {
    case 4:
      return swift_errorRelease(*a1);
    case 3:
      uint64_t v5 = type metadata accessor for PromptResult(0LL, *(void *)(a2 + 24));
      return (*(uint64_t (**)(void *, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
    case 2:
      return swift_release(*a1);
  }

  return result;
}

uint64_t *initializeWithCopy for BargeInCapablePromptForConfirmationFlow.State( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 4:
      uint64_t v11 = *a2;
      swift_errorRetain(v11);
      *a1 = v11;
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 4LL;
      break;
    case 3:
      uint64_t v12 = type metadata accessor for PromptResult(0LL, *(void *)(a3 + 24));
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16LL))(a1, a2, v12);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 3LL;
      break;
    case 2:
      uint64_t v7 = *a2;
      *a1 = *a2;
      swift_retain(v7);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 2LL;
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      return a1;
  }

  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

uint64_t *assignWithCopy for BargeInCapablePromptForConfirmationFlow.State( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 4:
        uint64_t v12 = *a2;
        swift_errorRetain(v12);
        *a1 = v12;
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 4LL;
        break;
      case 3:
        uint64_t v13 = type metadata accessor for PromptResult(0LL, *(void *)(a3 + 24));
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 3LL;
        break;
      case 2:
        uint64_t v8 = *a2;
        *a1 = *a2;
        swift_retain(v8);
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 2LL;
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }

    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }

  return a1;
}

void *initializeWithTake for BargeInCapablePromptForConfirmationFlow.State( void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
  {
    uint64_t v6 = type metadata accessor for PromptResult(0LL, *(void *)(a3 + 24));
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 3LL);
  }

  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

void *assignWithTake for BargeInCapablePromptForConfirmationFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
    {
      uint64_t v7 = type metadata accessor for PromptResult(0LL, *(void *)(a3 + 24));
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 3LL);
    }

    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }

  return a1;
}

uint64_t outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(void *a1)
{
  id v1 = [a1 aceId];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = *(unsigned __int8 *)(*(void *)(*(void *)(v9 + 32) - 8LL) + 80LL);
  uint64_t v15 = v9 + ((v14 + 56) & ~v14);
  uint64_t v16 = (void *)swift_task_alloc(dword_43C8D4);
  *(void *)(v10 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v16;
  *uint64_t v16 = v10;
  v16[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return implicit closure #4 in implicit closure #3 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v15,  a9);
}

uint64_t objectdestroyTm_16()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) - 8LL);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80) | 7LL;
  OUTLINED_FUNCTION_54_9(v1);
  uint64_t v3 = OUTLINED_FUNCTION_34_1();
  return swift_deallocObject(v3, v4, v2);
}

void partial apply for implicit closure #2 in implicit closure #1 in BargeInCapablePromptForConfirmationFlow.init<A>(state:itemToConfirm:strategy:sharedGlobals:)()
{
}

uint64_t OUTLINED_FUNCTION_3_108()
{
  return swift_task_dealloc(*(void *)(v0 + 288));
}

uint64_t OUTLINED_FUNCTION_4_92()
{
  return swift_task_dealloc(*(void *)(v0 + 224));
}

uint64_t OUTLINED_FUNCTION_13_79(float *a1, float a2)
{
  *a1 = a2;
  *(void *)(v3 + 160) = v4;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v3 + 168, a1 + 1, (char *)a1 + v5);
}

uint64_t OUTLINED_FUNCTION_16_54()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = (void *)v0[28];
  *uint64_t v2 = v0[22];
  return swift_storeEnumTagMultiPayload(v2, v1, 1LL);
}

uint64_t OUTLINED_FUNCTION_19_57()
{
  return (*(uint64_t (**)(void, void))(v0[23] + 8LL))(v0[27], v0[22]);
}

uint64_t OUTLINED_FUNCTION_20_58()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 184) + *(void *)(v0 + 368));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_22_52()
{
  return swift_dynamicCast(v2, v0, v1, v3, 0LL);
}

void OUTLINED_FUNCTION_23_55()
{
}

uint64_t OUTLINED_FUNCTION_26_53()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_35_34()
{
  return static ExecuteResponse.ongoing(requireInput:)(0LL);
}

void OUTLINED_FUNCTION_36_36(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_37_37()
{
  return type metadata accessor for StartCallCATsSimple(0LL);
}

uint64_t OUTLINED_FUNCTION_38_34()
{
  return swift_task_dealloc(*(void *)(v0 + 224));
}

uint64_t OUTLINED_FUNCTION_41_35()
{
  *uint64_t v2 = v0;
  return swift_storeEnumTagMultiPayload(v2, v1, 4LL);
}

uint64_t OUTLINED_FUNCTION_42_24()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0x7475706E69286E6FLL,  0xEA0000000000293ALL,  (uint64_t *)(v0 - 88));
}

uint64_t OUTLINED_FUNCTION_46_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(a1, v4, a1, a4, 0LL);
}

void OUTLINED_FUNCTION_47_25()
{
}

uint64_t OUTLINED_FUNCTION_48_31()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 352));
}

unint64_t OUTLINED_FUNCTION_53_26(uint64_t a1)
{
  *(void *)(v1 + 392) = a1;
  return type metadata accessor for SABaseCommand();
}

void OUTLINED_FUNCTION_54_20()
{
}

uint64_t OUTLINED_FUNCTION_55_25()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112LL))();
}

uint64_t OUTLINED_FUNCTION_58_22()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_62_20()
{
  return swift_errorRelease(*v0);
}

uint64_t OUTLINED_FUNCTION_68_24@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(void *)(a1 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_69_22()
{
  return swift_task_alloc(*(unsigned int *)(v0 + 4));
}

uint64_t OUTLINED_FUNCTION_70_18( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a11 + 8))(a13, v13);
}

uint64_t OUTLINED_FUNCTION_71_19@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v3 = v2;
  v3[1] = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_75_21()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t OUTLINED_FUNCTION_80_14()
{
  return static ExecuteResponse.ongoing(requireInput:)(1LL);
}

uint64_t OUTLINED_FUNCTION_83_21()
{
  return type metadata accessor for PromptResult(0LL, v0);
}

void OUTLINED_FUNCTION_84_15()
{
  *(void *)(v0 + 368) = *(void *)(**(void **)(v0 + 184) + 112LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_93_14( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a10, v11);
}

uint64_t OUTLINED_FUNCTION_99_10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_101_10()
{
  return swift_storeEnumTagMultiPayload(v1, v0, 3LL);
}

uint64_t OUTLINED_FUNCTION_102_8()
{
  *(_WORD *)(v1 + 12) = 2080;
  return outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(v0);
}

uint64_t OUTLINED_FUNCTION_105_7()
{
  return *(void *)(v0 - 104);
}

void OUTLINED_FUNCTION_110_12()
{
}

uint64_t OUTLINED_FUNCTION_111_10()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_112_8@<X0>(uint64_t a1@<X8>)
{
  return swift_release(*(void *)(v1 + a1 + 8));
}

uint64_t OUTLINED_FUNCTION_113_10(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t OUTLINED_FUNCTION_117_9()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_118_7(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_120_9()
{
  return type metadata accessor for BargeInCapablePromptForConfirmationFlow.State(0LL, v0[10], v0[11], v0[12]);
}

uint64_t OUTLINED_FUNCTION_121_10(float a1)
{
  *uint64_t v2 = a1;
  return outlined bridged method (pb) of @objc AceObject.encodedClassName()(v1);
}

uint64_t OUTLINED_FUNCTION_132_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for BargeInCapablePromptForConfirmationFlow.State(0LL, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_133_10( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v9, &a9);
}

uint64_t OUTLINED_FUNCTION_136_6()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t YesNoConfirmationParser.__allocating_init(sharedGlobals:)(__int128 *a1)
{
  uint64_t v3 = swift_allocObject(v1, 64LL, 7LL);
  *(_BYTE *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(a1, v3 + 24);
  return v3;
}

void YesNoConfirmationParser.promptResponse.didset()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_beginAccess(v1 + 16, v13, 0LL, 0LL);
    LOBYTE(v12) = *(_BYTE *)(v1 + 16);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v10 = String.init<A>(describing:)(&v12, v9);
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, v13, v7 + 4);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v6, "#YesNoConfirmationParser promptResponse: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v0, 2LL);
  }

uint64_t YesNoConfirmationParser.promptResponse.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

void YesNoConfirmationParser.promptResponse.setter(char a1)
{
  *(_BYTE *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  YesNoConfirmationParser.promptResponse.didset();
}

uint64_t YesNoConfirmationParser.init(sharedGlobals:)(__int128 *a1)
{
  *(_BYTE *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(a1, v1 + 24);
  return v1;
}

uint64_t YesNoConfirmationParser.parseConfirmationResponse(input:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v62 = (uint64_t *)((char *)&v61 - v5);
  uint64_t v61 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v6 = *(void *)(v61 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Parse(0LL);
  uint64_t v10 = *(uint64_t (***)(uint64_t, uint64_t))(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin();
  uint64_t v15 = (uint64_t *)((char *)&v61 - v14);
  Input.parse.getter(v13);
  int v16 = v10[11]((uint64_t)v15, v9);
  if (v16 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_2;
  }
  if (v16 == enum case for Parse.directInvocation(_:))
  {
    OUTLINED_FUNCTION_3_67(v10[12]);
    uint64_t v23 = v6;
    uint64_t v24 = v61;
    (*(void (**)(char *, void *, uint64_t))(v6 + 32))(v8, v15, v61);
    uint64_t v25 = v62;
    static CommonDirectAction.from(_:)((uint64_t)v8, v62);
    uint64_t v26 = type metadata accessor for CommonDirectAction(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1LL, v26) != 1)
    {
      outlined init with copy of CommonDirectAction?((uint64_t)v25, (uint64_t)v4);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v26);
      if (EnumCaseMultiPayload == 6)
      {
        OUTLINED_FUNCTION_0_94();
        *(_BYTE *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0;
LABEL_28:
        OUTLINED_FUNCTION_8_74();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
        outlined destroy of SpeakableString?( (uint64_t)v25,  &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_29;
      }

      if (EnumCaseMultiPayload == 7)
      {
        OUTLINED_FUNCTION_0_94();
        char v28 = 2;
LABEL_27:
        *(_BYTE *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v28;
        goto LABEL_28;
      }

      outlined destroy of CommonDirectAction((uint64_t)v4);
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = OUTLINED_FUNCTION_15_1();
    uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    os_log_type_t v37 = v36;
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10(v39))
    {
      uint64_t v40 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_0, v38, v37, "#YesNoConfirmationParser Unrecognized directInvocation", v40, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v40);
    }

    OUTLINED_FUNCTION_0_94();
    char v28 = 5;
    goto LABEL_27;
  }

  if (v16 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_3_67(v10[12]);
    swift_unknownObjectRelease(*v15);
    goto LABEL_3;
  }

  if (v16 == enum case for Parse.uso(_:))
  {
LABEL_2:
    OUTLINED_FUNCTION_3_67(v10[1]);
LABEL_3:
    uint64_t v17 = *(void *)(v1 + 48);
    uint64_t v18 = *(void *)(v1 + 56);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 72))(v17, v18);
    Input.parse.getter(v19);
    (*(void (**)(void *__return_ptr, char *))(*(void *)v19 + 192LL))(v64, v12);
    swift_release(v19);
    v10[1]((uint64_t)v12, v9);
    uint64_t v20 = v65;
    if (v65)
    {
      uint64_t v21 = v66;
      __swift_project_boxed_opaque_existential_1(v64, v65);
      char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 64))(v20, v21);
      __swift_destroy_boxed_opaque_existential_1(v64);
    }

    else
    {
      outlined destroy of SpeakableString?( (uint64_t)v64,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      char v22 = 5;
    }

    OUTLINED_FUNCTION_0_94();
    *(_BYTE *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v22;
    OUTLINED_FUNCTION_8_74();
    goto LABEL_29;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v29 = OUTLINED_FUNCTION_15_1();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
  os_log_type_t v31 = v30;
  os_log_type_t v32 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v33 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_10(v33))
  {
    uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl(&dword_0, v32, v31, "#YesNoConfirmationParser Unrecognized parse type", v34, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v34);
  }

  OUTLINED_FUNCTION_0_94();
  *(_BYTE *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 5;
  OUTLINED_FUNCTION_8_74();
  OUTLINED_FUNCTION_3_67(v10[1]);
LABEL_29:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v41 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
  uint64_t v42 = swift_retain_n(v2, 2LL);
  unint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v45 = static os_log_type_t.debug.getter(v43, v44);
  if (os_log_type_enabled(v43, v45))
  {
    uint64_t v46 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v47 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v68 = v47;
    *(_DWORD *)uint64_t v46 = 136315394;
    uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000021LL, 0x800000000034FEE0LL, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v46 + 4);
    *(_WORD *)(v46 + 12) = 2080;
    unsigned __int8 v48 = OUTLINED_FUNCTION_5_92();
    if (v48 == 5)
    {
      unint64_t v49 = 0xE300000000000000LL;
      uint64_t v50 = 7104878LL;
    }

    else
    {
      uint64_t v50 = PhoneCallConfirmation.rawValue.getter(v48);
      unint64_t v49 = v51;
    }

    uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v49, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v46 + 14);
    OUTLINED_FUNCTION_17_30();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v43, v45, "#YesNoConfirmationParser %s received response: %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy(v47, 2LL);
    OUTLINED_FUNCTION_0_2(v47);
    OUTLINED_FUNCTION_0_2(v46);
  }

  else
  {

    OUTLINED_FUNCTION_17_30();
  }

  int v52 = OUTLINED_FUNCTION_5_92();
  if ((v52 - 1) >= 2)
  {
    if (v52)
    {
      uint64_t v59 = type metadata accessor for ConfirmationResponse(0LL);
      uint64_t v57 = v63;
      uint64_t v58 = 1LL;
      return __swift_storeEnumTagSinglePayload(v57, v58, 1LL, v59);
    }

    uint64_t v53 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
  }

  else
  {
    uint64_t v53 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
  }

  uint64_t v54 = *v53;
  uint64_t v55 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v56 = v63;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104LL))(v63, v54, v55);
  uint64_t v57 = v56;
  uint64_t v58 = 0LL;
  uint64_t v59 = v55;
  return __swift_storeEnumTagSinglePayload(v57, v58, 1LL, v59);
}

uint64_t YesNoConfirmationParser.deinit()
{
  return v0;
}

uint64_t YesNoConfirmationParser.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t sub_268C3C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96LL))();
  *a2 = result;
  return result;
}

void sub_268C6C(char *a1)
{
}

uint64_t type metadata accessor for YesNoConfirmationParser()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin23YesNoConfirmationParser);
}

uint64_t OUTLINED_FUNCTION_0_94()
{
  return swift_beginAccess(v0 + 16, v1 - 136, 1LL, 0LL);
}

void OUTLINED_FUNCTION_8_74()
{
}

void PhoneCallRecord.Builder.__allocating_init()()
{
}

uint64_t specialized PhoneCallRecordProperties<>.callerWithAliases.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = swift_retain();
  uint64_t v3 = specialized closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(v2);
  swift_release(v1);
  uint64_t v4 = type metadata accessor for PhonePersonWithAliasesList.Builder();
  uint64_t v5 = swift_allocObject(v4, 24LL, 7LL);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess(v5 + 16, v9, 1LL, 0LL);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for PhonePersonWithAliasesList();
  swift_allocObject(v6, 32LL, 7LL);
  uint64_t v7 = PhonePersonList.init(builder:)(v5);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t specialized closure #1 in PhoneCallRecordProperties<>.callerWithAliases.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v3 = swift_allocObject(v2, 40LL, 7LL);
  *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  *(void *)(v3 + 32) = a1;
  uint64_t v8 = v3;
  specialized Array._endMutation()(v3, v4, v5, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  return v8;
}

uint64_t specialized PhoneCallRecordProperties<>.isVideo.getter()
{
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability,  (uint64_t)v2);
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v2, 1LL, v3);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v2);
    uint64_t v5 = 0LL;
    uint64_t v6 = 0LL;
  }

  else
  {
    uint64_t v5 = SpeakableString.print.getter(EnumTagSinglePayload);
    uint64_t v6 = v7;
    (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
  }

  uint64_t BackingType = INCallCapabilityGetBackingType(2LL);
  if ((_DWORD)BackingType == 2)
  {
    uint64_t v9 = @"VIDEO_CALL";
    goto LABEL_8;
  }

  if ((_DWORD)BackingType == 1)
  {
    uint64_t v9 = @"AUDIO_CALL";
LABEL_8:
    uint64_t v10 = v9;
    goto LABEL_10;
  }

  uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
LABEL_10:
  uint64_t v11 = v9;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v14 = v13;

  if (v6)
  {
    if (v5 == v12 && v6 == v14) {
      char v16 = 1;
    }
    else {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v12, v14, 0LL);
    }
    swift_bridgeObjectRelease();
  }

  else
  {
    char v16 = 0;
  }

  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t specialized PhoneCallRecordProperties<>.isFaceTimeVideo.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  if (v1
    && (swift_retain(),
        char v2 = specialized PhoneCallProviderProperties.isFaceTime.getter(),
        swift_release(v1),
        (v2 & 1) != 0))
  {
    return specialized PhoneCallRecordProperties<>.isVideo.getter();
  }

  else
  {
    return 0LL;
  }

uint64_t specialized PhoneCallRecordProperties<>.isFaceTimeAudio.getter()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  if (!v4) {
    return v4 & 1;
  }
  swift_retain();
  char v5 = specialized PhoneCallProviderProperties.isFaceTime.getter();
  swift_release(v4);
  if ((v5 & 1) == 0)
  {
    LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
    return v4 & 1;
  }

  outlined init with copy of SpeakableString?( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability,  (uint64_t)v3);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v3, 1LL, v6);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v3);
    uint64_t v4 = 0LL;
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v4 = SpeakableString.print.getter(EnumTagSinglePayload);
    uint64_t v8 = v9;
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8LL))(v3, v6);
  }

  uint64_t BackingType = INCallCapabilityGetBackingType(1LL);
  if ((_DWORD)BackingType == 2)
  {
    uint64_t v11 = @"VIDEO_CALL";
  }

  else
  {
    if ((_DWORD)BackingType != 1)
    {
      uint64_t v11 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
      goto LABEL_13;
    }

    uint64_t v11 = @"AUDIO_CALL";
  }

  uint64_t v12 = v11;
LABEL_13:
  uint64_t v13 = v11;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v16 = v15;

  if (v8)
  {
    if (v4 == v14 && v8 == v16) {
      LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
    }
    else {
      LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v8, v14, v16, 0LL);
    }
    swift_bridgeObjectRelease();
  }

  else
  {
    LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  }

  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t key path setter for PhoneCallRecord.Builder.identifier : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 280LL))(v5);
}

void PhoneCallRecord.Builder.identifier.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.identifier.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.identifier.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.dateCreated : PhoneCallRecord.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 304LL);
  uint64_t v3 = swift_retain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.dateCreated.getter()
{
}

void PhoneCallRecord.Builder.dateCreated.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.dateCreated.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.caller : PhoneCallRecord.Builder(void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 328LL);
  uint64_t v3 = swift_retain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.caller.getter()
{
}

void PhoneCallRecord.Builder.caller.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.caller.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.aliases : PhoneCallRecord.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 352LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.aliases.getter()
{
}

void PhoneCallRecord.Builder.aliases.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.aliases.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.callRecordType : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 376LL))(v5);
}

void PhoneCallRecord.Builder.callRecordType.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.callRecordType.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.callRecordType.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.callMetrics : PhoneCallRecord.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 400LL);
  uint64_t v3 = swift_retain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.callMetrics.getter()
{
}

void PhoneCallRecord.Builder.callMetrics.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.callMetrics.modify(uint64_t a1)
{
}

void PhoneCallRecord.Builder.unseen.getter()
{
}

void PhoneCallRecord.Builder.unseen.setter(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_unseen);
  OUTLINED_FUNCTION_25_0((uint64_t)v3, (uint64_t)v4, 1LL);
  *uint64_t v3 = a1;
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallRecord.Builder.unseen.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.callCapability : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 448LL))(v5);
}

void PhoneCallRecord.Builder.callCapability.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.callCapability.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.callCapability.modify(uint64_t a1)
{
}

uint64_t PhoneCallRecord.Builder.numberOfCalls.getter()
{
  return PhoneCallRecord.Builder.numberOfCalls.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_numberOfCalls);
}

uint64_t PhoneCallRecord.Builder.numberOfCalls.setter(uint64_t a1, char a2)
{
  return PhoneCallRecord.Builder.numberOfCalls.setter( a1,  a2,  &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_numberOfCalls);
}

void PhoneCallRecord.Builder.numberOfCalls.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.callProvider : PhoneCallRecord.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 496LL);
  uint64_t v3 = swift_retain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.callProvider.getter()
{
}

void PhoneCallRecord.Builder.dateCreated.getter(void *a1)
{
}

void PhoneCallRecord.Builder.callProvider.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.dateCreated.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t *)(v2 + *a2);
  OUTLINED_FUNCTION_25_0((uint64_t)v4, (uint64_t)v6, 1LL);
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
  swift_release(v5);
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallRecord.Builder.callProvider.modify(uint64_t a1)
{
}

void PhoneCallRecord.Builder.isCallerIdBlocked.getter()
{
}

void PhoneCallRecord.Builder.isCallerIdBlocked.setter(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_isCallerIdBlocked);
  OUTLINED_FUNCTION_25_0((uint64_t)v3, (uint64_t)v4, 1LL);
  *uint64_t v3 = a1;
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallRecord.Builder.isCallerIdBlocked.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.displayName : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 544LL))(v5);
}

void PhoneCallRecord.Builder.displayName.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.displayName.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.displayName.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.displayDateTime : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 568LL))(v5);
}

void PhoneCallRecord.Builder.displayDateTime.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.displayDateTime.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.displayDateTime.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.displayTextColor : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 592LL))(v5);
}

void PhoneCallRecord.Builder.displayTextColor.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.displayTextColor.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.displayTextColor.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.displaySymbolIcon : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 616LL))(v5);
}

void PhoneCallRecord.Builder.displaySymbolIcon.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.displaySymbolIcon.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.displaySymbolIcon.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.displayCallDetail : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 640LL))(v5);
}

void PhoneCallRecord.Builder.displayCallDetail.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.displayCallDetail.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.displayCallDetail.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.selectAction : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 664LL))(v5);
}

void PhoneCallRecord.Builder.selectAction.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.selectAction.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.selectAction.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.playVoicemailAction : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 688LL))(v5);
}

void PhoneCallRecord.Builder.playVoicemailAction.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.playVoicemailAction.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.playVoicemailAction.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.openCallRecordAction : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 712LL))(v5);
}

void PhoneCallRecord.Builder.openCallRecordAction.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.openCallRecordAction.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.openCallRecordAction.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.callDuration : PhoneCallRecord.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 736LL))(v5);
}

void PhoneCallRecord.Builder.callDuration.getter(uint64_t a1@<X8>)
{
}

void PhoneCallRecord.Builder.callDuration.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.callDuration.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.participants : PhoneCallRecord.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 760LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.participants.getter()
{
}

void PhoneCallRecord.Builder.participants.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.participants.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.participantsNames : PhoneCallRecord.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 784LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.participantsNames.getter()
{
}

void PhoneCallRecord.Builder.participantsNames.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.participantsNames.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallRecord.Builder.contactIds : PhoneCallRecord.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 808LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

void PhoneCallRecord.Builder.contactIds.getter()
{
}

void PhoneCallRecord.Builder.aliases.getter(void *a1)
{
}

void PhoneCallRecord.Builder.contactIds.setter(uint64_t a1)
{
}

void PhoneCallRecord.Builder.aliases.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  OUTLINED_FUNCTION_25_0((uint64_t)v4, (uint64_t)v5, 1LL);
  *uint64_t v4 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallRecord.Builder.contactIds.modify(uint64_t a1)
{
}

uint64_t PhoneCallRecord.Builder.callDurationInterval.getter()
{
  return PhoneCallRecord.Builder.numberOfCalls.getter(&OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDurationInterval);
}

uint64_t PhoneCallRecord.Builder.numberOfCalls.getter(void *a1)
{
  uint64_t v2 = v1 + *a1;
  OUTLINED_FUNCTION_25_0(v2, (uint64_t)v4, 0LL);
  return *(void *)v2;
}

uint64_t PhoneCallRecord.Builder.callDurationInterval.setter(uint64_t a1, char a2)
{
  return PhoneCallRecord.Builder.numberOfCalls.setter( a1,  a2,  &OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDurationInterval);
}

uint64_t PhoneCallRecord.Builder.numberOfCalls.setter(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = v3 + *a3;
  uint64_t result = OUTLINED_FUNCTION_25_0(v6, (uint64_t)v8, 1LL);
  *(void *)uint64_t v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

void PhoneCallRecord.Builder.callDurationInterval.modify(uint64_t a1)
{
}

void PhoneCallRecord.Builder.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_identifier;
  uint64_t v2 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_dateCreated) = 0LL;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_caller) = 0LL;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_aliases) = _swiftEmptyArrayStorage;
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callRecordType);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callMetrics) = 0LL;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_unseen) = 0;
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callCapability);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_numberOfCalls;
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callProvider) = 0LL;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_isCallerIdBlocked) = 0;
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayName);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayDateTime);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayTextColor);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displaySymbolIcon);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_displayCallDetail);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_selectAction);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_playVoicemailAction);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_openCallRecordAction);
  OUTLINED_FUNCTION_11_77(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDuration);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_participants) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_participantsNames) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_contactIds) = _swiftEmptyArrayStorage;
  uint64_t v4 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_callDurationInterval;
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  OUTLINED_FUNCTION_6();
}

void PhoneCallRecord.Builder.withIdentifier(_:)()
{
}

void PhoneCallRecord.Builder.withIdentifier(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 280));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

uint64_t PhoneCallRecord.Builder.withDateCreated(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 304LL);
  uint64_t v2 = swift_retain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneCallRecord.Builder.withDateCreated(_:)(uint64_t a1)
{
  if (a1) {
    dispatch thunk of DialogCalendar.Builder.build()();
  }
  OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v1 + 304LL));
  return OUTLINED_FUNCTION_27_0(v1);
}

uint64_t PhoneCallRecord.Builder.withCaller(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 328LL);
  uint64_t v2 = swift_retain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneCallRecord.Builder.withCaller(_:)(uint64_t a1)
{
  if (a1) {
    dispatch thunk of DialogPerson.Builder.build()(a1);
  }
  OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v1 + 328LL));
  return OUTLINED_FUNCTION_27_0(v1);
}

uint64_t PhoneCallRecord.Builder.withAliases(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 352LL);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

void PhoneCallRecord.Builder.withCallRecordType(_:)()
{
}

void PhoneCallRecord.Builder.withCallRecordType(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 376));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

uint64_t PhoneCallRecord.Builder.withCallMetrics(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 400LL);
  uint64_t v2 = swift_retain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneCallRecord.Builder.withCallMetrics(_:)(uint64_t a1)
{
  if (a1) {
    (*(void (**)(void))(*(void *)a1 + 168LL))();
  }
  OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v1 + 400LL));
  return OUTLINED_FUNCTION_27_0(v1);
}

uint64_t PhoneCallRecord.Builder.withUnseen(_:)()
{
  return swift_retain();
}

void PhoneCallRecord.Builder.withCallCapability(_:)()
{
}

void PhoneCallRecord.Builder.withCallCapability(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 448));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

uint64_t PhoneCallRecord.Builder.withNumberOfCalls(_:)(uint64_t a1, char a2)
{
  return swift_retain(v2);
}

uint64_t PhoneCallRecord.Builder.withCallProvider(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 496LL);
  uint64_t v2 = swift_retain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneCallRecord.Builder.withCallProvider(_:)(uint64_t a1)
{
  if (a1) {
    (*(void (**)(void))(*(void *)a1 + 240LL))();
  }
  OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v1 + 496LL));
  return OUTLINED_FUNCTION_27_0(v1);
}

uint64_t PhoneCallRecord.Builder.withIsCallerIdBlocked(_:)()
{
  return swift_retain();
}

void PhoneCallRecord.Builder.withDisplayName(_:)()
{
}

void PhoneCallRecord.Builder.withDisplayName(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 544));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withDisplayDateTime(_:)()
{
}

void PhoneCallRecord.Builder.withDisplayDateTime(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 568));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withDisplayTextColor(_:)()
{
}

void PhoneCallRecord.Builder.withDisplayTextColor(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 592));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withDisplaySymbolIcon(_:)()
{
}

void PhoneCallRecord.Builder.withDisplaySymbolIcon(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 616));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withDisplayCallDetail(_:)()
{
}

void PhoneCallRecord.Builder.withDisplayCallDetail(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 640));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withSelectAction(_:)()
{
}

void PhoneCallRecord.Builder.withSelectAction(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 664));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withPlayVoicemailAction(_:)()
{
}

void PhoneCallRecord.Builder.withPlayVoicemailAction(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 688));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withOpenCallRecordAction(_:)()
{
}

void PhoneCallRecord.Builder.withOpenCallRecordAction(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 712));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallRecord.Builder.withCallDuration(_:)()
{
}

void PhoneCallRecord.Builder.withCallDuration(print:speak:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v0);
  OUTLINED_FUNCTION_33_8(*(uint64_t (**)(uint64_t))(v1 + 736));
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

uint64_t PhoneCallRecord.Builder.withParticipants(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 760LL);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneCallRecord.Builder.withParticipantsNames(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 784LL);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneCallRecord.Builder.withContactIds(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 808LL);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneCallRecord.Builder.withCallDurationInterval(_:)(uint64_t a1, char a2)
{
  return swift_retain(v2);
}

void PhoneCallRecord.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhoneCallRecord(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = UsoEntity_common_Person.usoPerson.getter();
  PhoneCallRecord.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

void PhoneCallRecord.__allocating_init(builder:)(uint64_t a1)
{
}

uint64_t type metadata accessor for PhoneCallRecord(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallRecord,  (uint64_t)&nominal type descriptor for PhoneCallRecord);
}

uint64_t PhoneCallRecord.Builder.deinit()
{
  return v0;
}

uint64_t PhoneCallRecord.Builder.__deallocating_deinit()
{
  return PhoneCallProvider.Builder.__deallocating_deinit((void (*)(void))PhoneCallRecord.Builder.deinit);
}

unint64_t static PhoneCallRecord.catTypeName.getter()
{
  return 0xD000000000000010LL;
}

uint64_t key path setter for PhoneCallRecord.mockGlobals : PhoneCallRecord(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 304LL);
  id v4 = *a1;
  return v3(v2);
}

uint64_t PhoneCallRecord.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
}

uint64_t PhoneCallRecord.dateCreated.getter()
{
  return OUTLINED_FUNCTION_59_12(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated);
}

uint64_t PhoneCallRecord.caller.getter()
{
  return OUTLINED_FUNCTION_59_12(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
}

uint64_t PhoneCallRecord.aliases.getter()
{
  return OUTLINED_FUNCTION_40_30(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases);
}

uint64_t PhoneCallRecord.callRecordType.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
}

uint64_t PhoneCallRecord.callMetrics.getter()
{
  return OUTLINED_FUNCTION_59_12(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics);
}

uint64_t PhoneCallRecord.unseen.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen);
}

uint64_t PhoneCallRecord.callCapability.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
}

uint64_t PhoneCallRecord.numberOfCalls.getter()
{
  return OUTLINED_FUNCTION_75_22(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls);
}

uint64_t PhoneCallRecord.callProvider.getter()
{
  return OUTLINED_FUNCTION_59_12(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
}

uint64_t PhoneCallRecord.isCallerIdBlocked.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked);
}

uint64_t PhoneCallRecord.displayName.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
}

uint64_t PhoneCallRecord.displayDateTime.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
}

uint64_t PhoneCallRecord.displayTextColor.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
}

uint64_t PhoneCallRecord.displaySymbolIcon.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
}

uint64_t PhoneCallRecord.displayCallDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
}

uint64_t PhoneCallRecord.selectAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
}

uint64_t PhoneCallRecord.playVoicemailAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
}

uint64_t PhoneCallRecord.openCallRecordAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17( a1,  OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
}

uint64_t PhoneCallRecord.callDuration.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
}

uint64_t PhoneCallRecord.participants.getter()
{
  return OUTLINED_FUNCTION_40_30(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants);
}

uint64_t PhoneCallRecord.participantsNames.getter()
{
  return OUTLINED_FUNCTION_40_30(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames);
}

uint64_t PhoneCallRecord.contactIds.getter()
{
  return OUTLINED_FUNCTION_40_30(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds);
}

uint64_t PhoneCallRecord.callDurationInterval.getter()
{
  return OUTLINED_FUNCTION_75_22(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval);
}

void PhoneCallRecord.init(builder:)(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
  OUTLINED_FUNCTION_44_30();
  uint64_t v4 = OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 296LL))(v4);
  uint64_t v6 = OUTLINED_FUNCTION_62_21(v5, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v7 + 320))(v6);
  uint64_t v9 = OUTLINED_FUNCTION_62_21(v8, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v10 + 344))(v9);
  OUTLINED_FUNCTION_62_21(v11, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases);
  OUTLINED_FUNCTION_44_30();
  uint64_t v12 = OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 392LL))(v12);
  uint64_t v14 = OUTLINED_FUNCTION_62_21(v13, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen) = (*(uint64_t (**)(uint64_t))(v15 + 416))(v14) & 1;
  OUTLINED_FUNCTION_44_30();
  uint64_t v16 = OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 464LL))(v16);
  uint64_t v18 = v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls;
  *(void *)uint64_t v18 = v17;
  *(_BYTE *)(v18 + 8) = v19 & 1;
  uint64_t v20 = (*(uint64_t (**)(void))(*(void *)a1 + 488LL))();
  uint64_t v21 = OUTLINED_FUNCTION_62_21(v20, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked) = (*(uint64_t (**)(uint64_t))(v22 + 512))(v21) & 1;
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
  OUTLINED_FUNCTION_44_30();
  uint64_t v23 = OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 752LL))(v23);
  uint64_t v25 = OUTLINED_FUNCTION_62_21(v24, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v26 + 776))(v25);
  uint64_t v28 = OUTLINED_FUNCTION_62_21(v27, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames);
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v29 + 800))(v28);
  uint64_t v31 = OUTLINED_FUNCTION_62_21(v30, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds);
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v32 + 824))(v31);
  char v35 = v34;
  OUTLINED_FUNCTION_38_1();
  uint64_t v36 = v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval;
  *(void *)uint64_t v36 = v33;
  *(_BYTE *)(v36 + 8) = v35 & 1;
  OUTLINED_FUNCTION_6();
}

uint64_t PhoneCallRecord.__allocating_init(identifier:dateCreated:caller:aliases:callRecordType:callMetrics:unseen:callCapability:numberOfCalls:callProvider:isCallerIdBlocked:displayName:displayDateTime:displayTextColor:displaySymbolIcon:displayCallDetail:selectAction:playVoicemailAction:openCallRecordAction:callDuration:participants:participantsNames:contactIds:callDurationInterval:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  uint64_t v33 = type metadata accessor for PhoneCallRecord.Builder(0LL);
  uint64_t v34 = OUTLINED_FUNCTION_15_2(v33);
  PhoneCallRecord.Builder.init()();
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)v34 + 856LL))(a1);
  OUTLINED_FUNCTION_38_1();
  (*(void (**)(uint64_t))(*(void *)v35 + 872LL))(a2);
  OUTLINED_FUNCTION_41_26();
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(*(void *)v35 + 888LL))(a3);
  OUTLINED_FUNCTION_38_1();
  (*(void (**)(uint64_t))(*(void *)v36 + 904LL))(a4);
  OUTLINED_FUNCTION_41_26();
  swift_bridgeObjectRelease();
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)v36 + 912LL))(a5);
  OUTLINED_FUNCTION_38_1();
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 928LL))(a6);
  swift_release(v37);
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 944LL))(a7);
  OUTLINED_FUNCTION_38_1();
  (*(void (**)(uint64_t))(*(void *)v39 + 952LL))(a8);
  OUTLINED_FUNCTION_52();
  uint64_t v40 = (*(uint64_t (**)(uint64_t, void))(*(void *)v39 + 968LL))(a9, a10 & 1);
  OUTLINED_FUNCTION_38_1();
  (*(void (**)(uint64_t))(*(void *)v40 + 976LL))(a11);
  OUTLINED_FUNCTION_52();
  uint64_t v41 = (*(uint64_t (**)(void))(*(void *)v40 + 992LL))(a12);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v41 + 1000LL));
  OUTLINED_FUNCTION_51_19();
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 1016LL))(a14);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v42 + 1032LL));
  OUTLINED_FUNCTION_51_19();
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 1048LL))(a16);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v43 + 1064LL));
  OUTLINED_FUNCTION_51_19();
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 1080LL))(a18);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v44 + 1096LL));
  OUTLINED_FUNCTION_51_19();
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 1112LL))(a20);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v45 + 1128LL));
  OUTLINED_FUNCTION_51_19();
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 1144LL))(a22);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v46 + 1152LL));
  OUTLINED_FUNCTION_51_19();
  OUTLINED_FUNCTION_39();
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 1160LL))(a24);
  OUTLINED_FUNCTION_38_1();
  swift_bridgeObjectRelease();
  uint64_t v48 = (*(uint64_t (**)(uint64_t, void))(*(void *)v47 + 1168LL))(a25, a26 & 1);
  swift_release(v47);
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v55 + 320))(v48);
  swift_release(a11);
  swift_release(a6);
  swift_release(a3);
  swift_release(a2);
  outlined destroy of SpeakableString?(a21);
  outlined destroy of SpeakableString?(a20);
  outlined destroy of SpeakableString?(a19);
  outlined destroy of SpeakableString?(a18);
  outlined destroy of SpeakableString?(a17);
  outlined destroy of SpeakableString?(a16);
  outlined destroy of SpeakableString?(a15);
  outlined destroy of SpeakableString?(a14);
  outlined destroy of SpeakableString?(a13);
  outlined destroy of SpeakableString?(a8);
  outlined destroy of SpeakableString?(a5);
  outlined destroy of SpeakableString?(a1);
  return v49;
}

uint64_t type metadata accessor for PhoneCallRecord.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallRecord.Builder,  (uint64_t)&nominal type descriptor for PhoneCallRecord.Builder);
}

void PhoneCallRecord.getProperty(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v106 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v104 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v103 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v102 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v101 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v100 = (char *)&v99 - v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v99 = (char *)&v99 - v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_86_13();
  __chkstk_darwin();
  OUTLINED_FUNCTION_84_16();
  __chkstk_darwin();
  uint64_t v15 = (char *)&v99 - v14;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v99 - v16;
  __chkstk_darwin();
  OUTLINED_FUNCTION_70_14();
  __chkstk_darwin();
  char v19 = (char *)&v99 - v18;
  BOOL v20 = a1 == 0x696669746E656469LL && a2 == 0xEA00000000007265LL;
  if (v20 || (OUTLINED_FUNCTION_49_2(0x696669746E656469LL, 0xEA00000000007265LL, a1, a2) & 1) != 0)
  {
    uint64_t v21 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
    outlined init with copy of SpeakableString?(v21, (uint64_t)v19);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7((uint64_t)v19);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = (uint64_t)v19;
    goto LABEL_9;
  }

  BOOL v24 = a1 == 0x6165724365746164LL && a2 == 0xEB00000000646574LL;
  if (v24 || (OUTLINED_FUNCTION_49_2(0x6165724365746164LL, 0xEB00000000646574LL, a1, a2) & 1) != 0)
  {
    OUTLINED_FUNCTION_69_23();
    if (!v3) {
      goto LABEL_10;
    }
    uint64_t v25 = type metadata accessor for DialogCalendar(0LL);
    goto LABEL_19;
  }

  BOOL v26 = a1 == 0x72656C6C6163LL && a2 == 0xE600000000000000LL;
  if (v26 || (OUTLINED_FUNCTION_49_2(0x72656C6C6163LL, 0xE600000000000000LL, a1, a2) & 1) != 0)
  {
    OUTLINED_FUNCTION_69_23();
    if (!v3) {
      goto LABEL_10;
    }
    uint64_t v25 = type metadata accessor for PhonePerson(0LL);
    goto LABEL_19;
  }

  BOOL v27 = a1 == 0x73657361696C61LL && a2 == 0xE700000000000000LL;
  if (v27 || (OUTLINED_FUNCTION_49_2(0x73657361696C61LL, 0xE700000000000000LL, a1, a2) & 1) != 0) {
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_92_14();
  BOOL v32 = a1 == (v31 | 0x6F63655200000000LL) && a2 == v30;
  if (v32 || (OUTLINED_FUNCTION_49_2(0x6F6365526C6C6163LL, 0xEE00657079546472LL, a1, a2) & 1) != 0)
  {
    uint64_t v33 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
    outlined init with copy of SpeakableString?(v33, v5);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v5);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = v5;
    goto LABEL_9;
  }

  OUTLINED_FUNCTION_92_14();
  BOOL v36 = a1 == (v35 | 0x7274654D00000000LL) && a2 == v34;
  if (v36 || (OUTLINED_FUNCTION_49_2(0x7274654D6C6C6163LL, 0xEB00000000736369LL, a1, a2) & 1) != 0)
  {
    OUTLINED_FUNCTION_69_23();
    if (!v3) {
      goto LABEL_10;
    }
    uint64_t v25 = type metadata accessor for PhoneCallMetrics();
    goto LABEL_19;
  }

  BOOL v37 = a1 == 0x6E6565736E75LL && a2 == 0xE600000000000000LL;
  if (v37 || (OUTLINED_FUNCTION_49_2(0x6E6565736E75LL, 0xE600000000000000LL, a1, a2) & 1) != 0)
  {
    uint64_t v38 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen;
LABEL_55:
    uint64_t v39 = (_BYTE *)v106;
    char v40 = *(_BYTE *)(v105 + v38);
    *(void *)(v106 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for Bool;
    *uint64_t v39 = v40;
    return;
  }

  OUTLINED_FUNCTION_92_14();
  BOOL v43 = a1 == (v42 | 0x6170614300000000LL) && a2 == v41;
  if (v43 || (OUTLINED_FUNCTION_49_2(0x617061436C6C6163LL, 0xEE007974696C6962LL, a1, a2) & 1) != 0)
  {
    uint64_t v44 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
    outlined init with copy of SpeakableString?(v44, (uint64_t)v17);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7((uint64_t)v17);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = (uint64_t)v17;
    goto LABEL_9;
  }

  BOOL v45 = a1 == 0x664F7265626D756ELL && a2 == 0xED0000736C6C6143LL;
  if (v45 || (OUTLINED_FUNCTION_49_2(0x664F7265626D756ELL, 0xED0000736C6C6143LL, a1, a2) & 1) != 0)
  {
    uint64_t v46 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls;
    goto LABEL_70;
  }

  OUTLINED_FUNCTION_92_14();
  BOOL v52 = a1 == (v51 | 0x766F725000000000LL) && a2 == v50;
  if (v52 || (OUTLINED_FUNCTION_7_98(0x766F72506C6C6163LL, 0xEC00000072656469LL) & 1) != 0)
  {
    OUTLINED_FUNCTION_69_23();
    if (!v3) {
      goto LABEL_10;
    }
    uint64_t v25 = type metadata accessor for PhoneCallProvider(0LL);
LABEL_19:
    OUTLINED_FUNCTION_74_19(v25);
    swift_retain();
    return;
  }

  uint64_t v53 = "isCallerIdBlocked";
  if (a1 == 0xD000000000000011LL && (OUTLINED_FUNCTION_39_30(), v20)
    || (OUTLINED_FUNCTION_7_98(0xD000000000000011LL, (unint64_t)(v53 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    uint64_t v38 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked;
    goto LABEL_55;
  }

  BOOL v54 = a1 == 0x4E79616C70736964LL && a2 == 0xEB00000000656D61LL;
  if (v54 || (OUTLINED_FUNCTION_7_98(0x4E79616C70736964LL, 0xEB00000000656D61LL) & 1) != 0)
  {
    uint64_t v55 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
    OUTLINED_FUNCTION_64_24(v55);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7((uint64_t)v15);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = (uint64_t)v15;
    goto LABEL_9;
  }

  BOOL v56 = a1 == 0x4479616C70736964LL && a2 == 0xEF656D6954657461LL;
  if (v56 || (OUTLINED_FUNCTION_7_98(0x4479616C70736964LL, 0xEF656D6954657461LL) & 1) != 0)
  {
    uint64_t v57 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
    outlined init with copy of SpeakableString?(v57, v4);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v4);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = v4;
    goto LABEL_9;
  }

  uint64_t v58 = 0xD000000000000010LL;
  uint64_t v59 = "displayTextColor";
  if (a1 == 0xD000000000000010LL && (OUTLINED_FUNCTION_39_30(), v20)
    || (OUTLINED_FUNCTION_7_98(v58, (unint64_t)(v59 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    uint64_t v60 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
    outlined init with copy of SpeakableString?(v60, v3);
    uint64_t v61 = OUTLINED_FUNCTION_26_0();
    if (__swift_getEnumTagSinglePayload(v3, 1LL, v61) != 1)
    {
      uint64_t v62 = (void *)v106;
      *(void *)(v106 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v61;
      __swift_allocate_boxed_opaque_existential_1(v62);
      uint64_t v63 = *(void (**)(void))(*(void *)(v61 - 8) + 32LL);
LABEL_11:
      v63();
      return;
    }

    uint64_t v22 = v3;
LABEL_9:
    outlined destroy of SpeakableString?(v22);
LABEL_10:
    uint64_t v23 = v106;
    *(_OWORD *)uint64_t v106 = 0u;
    *(_OWORD *)(v23 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0u;
    return;
  }

  uint64_t v64 = "displaySymbolIcon";
  if (a1 == 0xD000000000000011LL && (OUTLINED_FUNCTION_39_30(), v20)
    || (OUTLINED_FUNCTION_7_98(0xD000000000000011LL, (unint64_t)(v64 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    uint64_t v65 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
    uint64_t v66 = (uint64_t)v99;
    OUTLINED_FUNCTION_64_24(v65);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v66);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = (uint64_t)v99;
    goto LABEL_9;
  }

  uint64_t v67 = "displayCallDetail";
  if (a1 == 0xD000000000000011LL && (OUTLINED_FUNCTION_39_30(), v20)
    || (OUTLINED_FUNCTION_7_98(0xD000000000000011LL, (unint64_t)(v67 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    uint64_t v68 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
    uint64_t v69 = (uint64_t)v100;
    OUTLINED_FUNCTION_64_24(v68);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v69);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = (uint64_t)v100;
    goto LABEL_9;
  }

  BOOL v70 = a1 == 0x63417463656C6573LL && a2 == 0xEC0000006E6F6974LL;
  if (v70 || (OUTLINED_FUNCTION_7_98(0x63417463656C6573LL, 0xEC0000006E6F6974LL) & 1) != 0)
  {
    uint64_t v71 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
    uint64_t v72 = v101;
    OUTLINED_FUNCTION_64_24(v71);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v72);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = v101;
    goto LABEL_9;
  }

  uint64_t v73 = 0xD000000000000013LL;
  uint64_t v74 = "playVoicemailAction";
  if (a1 == 0xD000000000000013LL && (OUTLINED_FUNCTION_39_30(), v20)
    || (OUTLINED_FUNCTION_7_98(v73, (unint64_t)(v74 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    uint64_t v75 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
    uint64_t v76 = v102;
    OUTLINED_FUNCTION_64_24(v75);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v76);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = v102;
    goto LABEL_9;
  }

  uint64_t v77 = "openCallRecordAction";
  if (a1 == 0xD000000000000014LL && (OUTLINED_FUNCTION_39_30(), v20)
    || (OUTLINED_FUNCTION_7_98(0xD000000000000014LL, (unint64_t)(v77 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    uint64_t v78 = OUTLINED_FUNCTION_53_27(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
    uint64_t v79 = v103;
    OUTLINED_FUNCTION_64_24(v78);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v79);
    if (!v20) {
      goto LABEL_143;
    }
    uint64_t v22 = v103;
    goto LABEL_9;
  }

  BOOL v80 = a1 == 0x617275446C6C6163LL && a2 == 0xEC0000006E6F6974LL;
  if (v80 || (OUTLINED_FUNCTION_7_98(0x617275446C6C6163LL, 0xEC0000006E6F6974LL) & 1) != 0)
  {
    uint64_t v81 = v104;
    OUTLINED_FUNCTION_64_24(v105 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
    OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_3_7(v81);
    if (!v20)
    {
LABEL_143:
      OUTLINED_FUNCTION_30_42();
      OUTLINED_FUNCTION_52_26();
      goto LABEL_11;
    }

    uint64_t v22 = v104;
    goto LABEL_9;
  }

  BOOL v82 = a1 == 0x7069636974726170LL && a2 == 0xEC00000073746E61LL;
  if (v82 || (OUTLINED_FUNCTION_7_98(0x7069636974726170LL, 0xEC00000073746E61LL) & 1) != 0)
  {
LABEL_32:
    OUTLINED_FUNCTION_69_23();
    uint64_t v28 = &demangling cache variable for type metadata for [PhonePerson];
LABEL_33:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(v28);
    OUTLINED_FUNCTION_74_19(v29);
    swift_bridgeObjectRetain();
    return;
  }

  uint64_t v83 = "participantsNames";
  if (a1 == 0xD000000000000011LL && (OUTLINED_FUNCTION_39_30(), v20)
    || (OUTLINED_FUNCTION_7_98(0xD000000000000011LL, (unint64_t)(v83 - 32) | 0x8000000000000000LL) & 1) != 0
    || (a1 == 0x49746361746E6F63LL ? (BOOL v84 = a2 == 0xEA00000000007364LL) : (BOOL v84 = 0),
        v84 || (OUTLINED_FUNCTION_7_98(0x49746361746E6F63LL, 0xEA00000000007364LL) & 1) != 0))
  {
    OUTLINED_FUNCTION_69_23();
    uint64_t v28 = &demangling cache variable for type metadata for [SpeakableString];
    goto LABEL_33;
  }

  uint64_t v85 = "callDurationInterval";
  if (a1 != 0xD000000000000014LL || (OUTLINED_FUNCTION_39_30(), !v20))
  {
    if ((OUTLINED_FUNCTION_7_98(0xD000000000000014LL, (unint64_t)(v85 - 32) | 0x8000000000000000LL) & 1) == 0)
    {
      uint64_t v86 = "callerWithAliases";
      if (a1 == 0xD000000000000011LL && (OUTLINED_FUNCTION_39_30(), v20)
        || (OUTLINED_FUNCTION_7_98(0xD000000000000011LL, (unint64_t)(v86 - 32) | 0x8000000000000000LL) & 1) != 0)
      {
        uint64_t v87 = specialized PhoneCallRecordProperties<>.callerWithAliases.getter();
        if (!v87) {
          goto LABEL_10;
        }
        uint64_t v88 = v87;
        uint64_t v89 = type metadata accessor for PhonePersonWithAliasesList();
        char v90 = (uint64_t *)v106;
        *(void *)(v106 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v89;
        *char v90 = v88;
      }

      else
      {
        BOOL v91 = a1 == 0x6954656361467369LL && a2 == 0xEF6F65646956656DLL;
        if (v91
          || (uint64_t v92 = OUTLINED_FUNCTION_80_15(), (OUTLINED_FUNCTION_7_98(v92, v93 | 0xEF6F656469560000LL) & 1) != 0))
        {
          char v94 = specialized PhoneCallRecordProperties<>.isFaceTimeVideo.getter();
        }

        else
        {
          if (a1 != 0x6954656361467369LL || a2 != 0xEF6F69647541656DLL)
          {
            uint64_t v97 = OUTLINED_FUNCTION_80_15();
            if ((OUTLINED_FUNCTION_7_98(v97, v98 | 0xEF6F696475410000LL) & 1) == 0) {
              goto LABEL_10;
            }
          }

          char v94 = specialized PhoneCallRecordProperties<>.isFaceTimeAudio.getter();
        }

        uint64_t v95 = (_BYTE *)v106;
        *(void *)(v106 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for Bool;
        *uint64_t v95 = v94 & 1;
      }

      return;
    }
  }

  uint64_t v46 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval;
LABEL_70:
  uint64_t v47 = (uint64_t *)(v105 + v46);
  if ((v47[1] & 1) != 0) {
    goto LABEL_10;
  }
  uint64_t v48 = *v47;
  uint64_t v49 = (void *)v106;
  *(void *)(v106 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for Double;
  *uint64_t v49 = v48;
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional __swiftcall PhoneCallRecord.CodingKeys.init(rawValue:)( Swift::String rawValue)
{
  unint64_t v1 = _findStringSwitchCaseWithCache(cases:string:cache:)( &outlined read-only object #0 of PhoneCallRecord.CodingKeys.init(rawValue:),  rawValue._countAndFlagsBits,  rawValue._object);
  OUTLINED_FUNCTION_39();
  if (v1 >= 0x18) {
    return (PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional)24;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional)v1;
  }
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional __swiftcall PhoneCallRecord.CodingKeys.init(intValue:)( Swift::Int intValue)
{
  return (PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional)24;
}

uint64_t PhoneCallRecord.CodingKeys.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_26C75C + 4 * byte_33ABD0[a1]))( 0x696669746E656469LL,  0xEA00000000007265LL);
}

uint64_t sub_26C75C()
{
  return 0x6165724365746164LL;
}

uint64_t sub_26C77C()
{
  return 0x72656C6C6163LL;
}

uint64_t sub_26C790()
{
  return 0x73657361696C61LL;
}

uint64_t sub_26C7A8()
{
  return 0x6F6365526C6C6163LL;
}

uint64_t sub_26C7CC()
{
  return 0x7274654D6C6C6163LL;
}

uint64_t sub_26C7EC()
{
  return 0x6E6565736E75LL;
}

uint64_t sub_26C800()
{
  return 0x617061436C6C6163LL;
}

uint64_t sub_26C824()
{
  return 0x664F7265626D756ELL;
}

uint64_t sub_26C848()
{
  return 0x766F72506C6C6163LL;
}

unint64_t sub_26C868()
{
  return 0xD000000000000011LL;
}

uint64_t sub_26C988()
{
  return 0x49746361746E6F63LL;
}

void sub_26C9A0()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallRecord.CodingKeys( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallRecord.CodingKeys()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallRecord.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallRecord.CodingKeys( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallRecord.CodingKeys@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallRecord.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallRecord.CodingKeys( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallRecord.CodingKeys.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneCallRecord.CodingKeys()
{
  return PhoneCallRecord.CodingKeys.stringValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneCallRecord.CodingKeys@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallRecord::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallRecord.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneCallRecord.CodingKeys( _BYTE *a1@<X8>)
{
  *a1 = 24;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallRecord.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneCallRecord.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneCallRecord.deinit()
{
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  OUTLINED_FUNCTION_62_16(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated);
  OUTLINED_FUNCTION_62_16(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
  OUTLINED_FUNCTION_20_38(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
  OUTLINED_FUNCTION_62_16(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
  OUTLINED_FUNCTION_62_16(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration);
  OUTLINED_FUNCTION_20_38(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants);
  OUTLINED_FUNCTION_20_38(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames);
  OUTLINED_FUNCTION_20_38(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds);
  return v0;
}

uint64_t PhoneCallRecord.__deallocating_deinit()
{
  return PhoneCallProvider.Builder.__deallocating_deinit((void (*)(void))PhoneCallRecord.deinit);
}

uint64_t PhoneCallRecord.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneCallRecord.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  unint64_t v11 = lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for PhoneCallRecord.CodingKeys,  &type metadata for PhoneCallRecord.CodingKeys,  v11,  v9,  v10);
  uint64_t v12 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier;
  v32[0] = 0;
  uint64_t v13 = type metadata accessor for SpeakableString(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
  OUTLINED_FUNCTION_19_58(v12, (uint64_t)v32, v5, v13, v14);
  if (!v2)
  {
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated);
    uint64_t v15 = OUTLINED_FUNCTION_90_15(1);
    uint64_t v16 = type metadata accessor for DialogCalendar(v15);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DialogCalendar and conformance DialogCalendar,  (uint64_t (*)(uint64_t))&type metadata accessor for DialogCalendar,  (uint64_t)&protocol conformance descriptor for DialogCalendar);
    OUTLINED_FUNCTION_19_58((uint64_t)v32, (uint64_t)&v31, v5, v16, v17);
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
    uint64_t v18 = OUTLINED_FUNCTION_90_15(2);
    uint64_t v19 = type metadata accessor for PhonePerson(v18);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  type metadata accessor for PhonePerson,  (uint64_t)&protocol conformance descriptor for DialogPerson);
    OUTLINED_FUNCTION_19_58((uint64_t)v32, (uint64_t)&v31, v5, v19, v20);
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases);
    char v31 = 3;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_1(&lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A]);
    uint64_t v23 = v22;
    v30[2] = v21;
    OUTLINED_FUNCTION_11_8();
    v30[1] = v23;
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType, 4);
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics);
    OUTLINED_FUNCTION_90_15(5);
    uint64_t v24 = type metadata accessor for PhoneCallMetrics();
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallMetrics and conformance PhoneCallMetrics,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallMetrics,  (uint64_t)&protocol conformance descriptor for PhoneCallMetrics);
    OUTLINED_FUNCTION_19_58((uint64_t)v32, (uint64_t)&v31, v5, v24, v25);
    OUTLINED_FUNCTION_66_20( *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen),  6);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability, 7);
    OUTLINED_FUNCTION_67_20( *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls),  *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls + 8),  8);
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider);
    uint64_t v26 = OUTLINED_FUNCTION_90_15(9);
    uint64_t v27 = type metadata accessor for PhoneCallProvider(v26);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallProvider and conformance PhoneCallProvider,  type metadata accessor for PhoneCallProvider,  (uint64_t)&protocol conformance descriptor for PhoneCallProvider);
    OUTLINED_FUNCTION_19_58((uint64_t)v32, (uint64_t)&v31, v5, v27, v28);
    OUTLINED_FUNCTION_66_20( *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked),  10);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName, 11);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime, 12);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor, 13);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon, 14);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail, 15);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction, 16);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction, 17);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction, 18);
    OUTLINED_FUNCTION_2_81(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration, 19);
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants);
    char v31 = 20;
    OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames);
    char v31 = 21;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
    lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A](&lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A]);
    OUTLINED_FUNCTION_58_23();
    OUTLINED_FUNCTION_63_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds);
    char v31 = 22;
    OUTLINED_FUNCTION_58_23();
    OUTLINED_FUNCTION_67_20( *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval),  *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval + 8),  23);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.CodingKeys,  &type metadata for PhoneCallRecord.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.CodingKeys,  &type metadata for PhoneCallRecord.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.CodingKeys,  &type metadata for PhoneCallRecord.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.CodingKeys,  &type metadata for PhoneCallRecord.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys);
  }

  return result;
}

void lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A]( unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SpeakableString]);
    OUTLINED_FUNCTION_98_13(v2, (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString);
    atomic_store(OUTLINED_FUNCTION_73_25(), a1);
  }

  OUTLINED_FUNCTION_12_3();
}

uint64_t PhoneCallRecord.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  PhoneCallRecord.init(from:)(a1);
  return v3;
}

uint64_t PhoneCallRecord.init(from:)(void *a1)
{
  uint64_t v118 = v6;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v117 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v116 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v115 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v119 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v120 = (uint64_t)&v110 - v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v121 = (uint64_t)&v110 - v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_70_14();
  __chkstk_darwin();
  OUTLINED_FUNCTION_86_13();
  __chkstk_darwin();
  OUTLINED_FUNCTION_84_16();
  __chkstk_darwin();
  uint64_t v14 = (char *)&v110 - v13;
  __chkstk_darwin();
  uint64_t v122 = (char *)&v110 - v15;
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneCallRecord.CodingKeys>);
  uint64_t v16 = *(void *)(v123 - 8);
  __chkstk_darwin();
  unsigned int v125 = a1;
  uint64_t v126 = v2;
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = a1;
  uint64_t v21 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_project_boxed_opaque_existential_1(v20, v18);
  unint64_t v22 = lazy protocol witness table accessor for type PhoneCallRecord.CodingKeys and conformance PhoneCallRecord.CodingKeys();
  uint64_t v23 = v124;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for PhoneCallRecord.CodingKeys,  &type metadata for PhoneCallRecord.CodingKeys,  v22,  v18,  v19);
  if (v23)
  {
    uint64_t v29 = v126;

    uint64_t v30 = v125;
    goto LABEL_4;
  }

  uint64_t v124 = v14;
  uint64_t v113 = v1;
  uint64_t v114 = v3;
  uint64_t v112 = v4;
  uint64_t v24 = type metadata accessor for SpeakableString(0LL);
  LOBYTE(v128) = 0;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
  uint64_t v26 = v25;
  uint64_t v27 = (uint64_t)v122;
  uint64_t v28 = v123;
  OUTLINED_FUNCTION_87_13(v24, (uint64_t)&v128, v123, v24, v25);
  uint64_t v33 = v126;
  outlined init with take of SpeakableString?( v27,  v126 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  uint64_t v34 = type metadata accessor for DialogCalendar(0LL);
  char v127 = 1;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DialogCalendar and conformance DialogCalendar,  (uint64_t (*)(uint64_t))&type metadata accessor for DialogCalendar,  (uint64_t)&protocol conformance descriptor for DialogCalendar);
  uint64_t v35 = OUTLINED_FUNCTION_56_23();
  OUTLINED_FUNCTION_87_13(v35, v36, v28, v34, v37);
  *(void *)(v33 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated) = v128;
  uint64_t v38 = type metadata accessor for PhonePerson(0LL);
  char v127 = 2;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  type metadata accessor for PhonePerson,  (uint64_t)&protocol conformance descriptor for DialogPerson);
  uint64_t v39 = OUTLINED_FUNCTION_56_23();
  uint64_t v111 = 0LL;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v39, v40, v123, v38, v41);
  *(void *)(v33 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller) = v128;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  char v127 = 3;
  _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_1(&lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A]);
  uint64_t v44 = v43;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v42, &v127, v123, v42, v43);
  uint64_t v122 = v44;
  *(void *)(v33 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_aliases) = v128;
  OUTLINED_FUNCTION_54_21(4);
  uint64_t v45 = (uint64_t)v124;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v24, v46, v123, v24, v26);
  uint64_t v110 = v26;
  outlined init with take of SpeakableString?( v45,  v33 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType);
  uint64_t v47 = type metadata accessor for PhoneCallMetrics();
  char v127 = 5;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallMetrics and conformance PhoneCallMetrics,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallMetrics,  (uint64_t)&protocol conformance descriptor for PhoneCallMetrics);
  uint64_t v48 = OUTLINED_FUNCTION_56_23();
  uint64_t v49 = v123;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v48, v50, v123, v47, v51);
  *(void *)(v33 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics) = v128;
  uint64_t v52 = OUTLINED_FUNCTION_89_17(6);
  *(_BYTE *)(v33 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen) = KeyedDecodingContainer.decode(_:forKey:)( v52,  v53) & 1;
  OUTLINED_FUNCTION_54_21(7);
  uint64_t v54 = v114;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v24, v55, v49, v24, v110);
  OUTLINED_FUNCTION_55_26();
  outlined init with take of SpeakableString?(v54, v56);
  uint64_t v57 = OUTLINED_FUNCTION_89_17(8);
  uint64_t v59 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v57, v58);
  uint64_t v124 = 0LL;
  uint64_t v61 = v126 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls;
  *(void *)uint64_t v61 = v59;
  *(_BYTE *)(v61 + 8) = v60 & 1;
  uint64_t v62 = type metadata accessor for PhoneCallProvider(0LL);
  char v127 = 9;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallProvider and conformance PhoneCallProvider,  type metadata accessor for PhoneCallProvider,  (uint64_t)&protocol conformance descriptor for PhoneCallProvider);
  uint64_t v63 = OUTLINED_FUNCTION_56_23();
  uint64_t v64 = v62;
  int v65 = (int)v21;
  uint64_t v66 = v124;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v63, v67, v49, v64, v68);
  uint64_t v124 = v66;
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v123);
    OUTLINED_FUNCTION_17_61();
    LODWORD(v4__swift_destroy_boxed_opaque_existential_1(v0 + 9) = 1;
  }

  else
  {
    OUTLINED_FUNCTION_95_14(v128);
    uint64_t v70 = OUTLINED_FUNCTION_88_21(10);
    char v72 = KeyedDecodingContainer.decode(_:forKey:)(v70, v71);
    uint64_t v124 = 0LL;
    *(_BYTE *)(v126 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked) = v72 & 1;
    OUTLINED_FUNCTION_54_21(11);
    OUTLINED_FUNCTION_12_79(v73, v74);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v113, v75);
    OUTLINED_FUNCTION_54_21(12);
    OUTLINED_FUNCTION_12_79(v76, v77);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v112, v78);
    OUTLINED_FUNCTION_54_21(13);
    OUTLINED_FUNCTION_12_79(v79, v80);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v121, v81);
    OUTLINED_FUNCTION_54_21(14);
    OUTLINED_FUNCTION_12_79(v82, v83);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v120, v84);
    OUTLINED_FUNCTION_54_21(15);
    OUTLINED_FUNCTION_12_79(v85, v86);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v119, v87);
    OUTLINED_FUNCTION_54_21(16);
    OUTLINED_FUNCTION_12_79(v88, v89);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v115, v90);
    OUTLINED_FUNCTION_54_21(17);
    OUTLINED_FUNCTION_12_79(v91, v92);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v116, v93);
    OUTLINED_FUNCTION_54_21(18);
    OUTLINED_FUNCTION_12_79(v94, v95);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v117, v96);
    OUTLINED_FUNCTION_54_21(19);
    OUTLINED_FUNCTION_12_79(v97, v98);
    uint64_t v124 = 0LL;
    OUTLINED_FUNCTION_55_26();
    outlined init with take of SpeakableString?(v118, v99);
    char v127 = 20;
    int v65 = (int)v21;
    uint64_t v100 = v124;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v42, &v127, v123, v42, v122);
    uint64_t v124 = v100;
    if (!v100)
    {
      OUTLINED_FUNCTION_95_14(v128);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
      char v127 = 21;
      lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A](&lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A]);
      OUTLINED_FUNCTION_57_27();
      uint64_t v124 = 0LL;
      OUTLINED_FUNCTION_95_14(v128);
      char v127 = 22;
      OUTLINED_FUNCTION_57_27();
      uint64_t v124 = 0LL;
      OUTLINED_FUNCTION_95_14(v128);
      uint64_t v102 = OUTLINED_FUNCTION_88_21(23);
      uint64_t v104 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v102, v103);
      uint64_t v124 = 0LL;
      uint64_t v105 = v104;
      char v107 = v106;
      OUTLINED_FUNCTION_13_80();
      uint64_t v108 = v125;
      uint64_t v29 = v126;
      uint64_t v109 = v126 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval;
      *(void *)uint64_t v109 = v105;
      *(_BYTE *)(v109 + 8) = v107 & 1;
      __swift_destroy_boxed_opaque_existential_1(v108);
      return v29;
    }

    OUTLINED_FUNCTION_13_80();
    OUTLINED_FUNCTION_33_51();
    LODWORD(v120) = v101;
  }

  uint64_t v69 = v111;
  uint64_t v29 = v126;

  OUTLINED_FUNCTION_49_19(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier);
  if (v69)
  {
    if ((_DWORD)v42) {
      goto LABEL_8;
    }
  }

  else
  {
    OUTLINED_FUNCTION_69_12(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated);
    if ((v42 & 1) != 0)
    {
LABEL_8:
      OUTLINED_FUNCTION_69_12(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller);
      if ((v24 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }

  if (!(_DWORD)v24)
  {
LABEL_9:
    if (v65) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }

LABEL_33:
  if (!(_DWORD)v113)
  {
LABEL_15:
    if ((_DWORD)v114) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }

LABEL_37:
      static ActionForInput.ignore()(v70);
LABEL_38:
      char v72 = (void *)v22;
      uint64_t v73 = v24;
LABEL_67:
      outlined consume of ContactDisambiguationPromptResponse?(v72, v73);
      OUTLINED_FUNCTION_7_5();
      return;
    default:
LABEL_14:
      uint64_t v18 = (void *)OUTLINED_FUNCTION_84_21(v25);
      uint64_t v38 = static os_log_type_t.error.getter();
      if (!OUTLINED_FUNCTION_10(v38)) {
        goto LABEL_33;
      }
      uint64_t v39 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_31_0(v39);
      uint64_t v40 = "#CallingIntentContactNeedsDisambiguationFlowStrategy Coudln't parse response at disambiguation, ignoring…";
      goto LABEL_32;
  }

void _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_1(unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhonePerson]);
    OUTLINED_FUNCTION_98_13(v2, type metadata accessor for PhonePerson);
    atomic_store(OUTLINED_FUNCTION_73_25(), a1);
  }

  OUTLINED_FUNCTION_12_3();
}

void base witness table accessor for Decodable in PhoneCallRecord()
{
}

void base witness table accessor for Encodable in PhoneCallRecord()
{
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t protocol witness for CATType.mockGlobals.getter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 296LL))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 304LL))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneCallRecord( void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 312LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 336LL))();
}

uint64_t protocol witness for PhoneCallRecordProperties.identifier.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_identifier,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.dateCreated.getter in conformance PhoneCallRecord()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_dateCreated));
}

uint64_t protocol witness for PhoneCallRecordProperties.caller.getter in conformance PhoneCallRecord()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_caller));
}

uint64_t protocol witness for PhoneCallRecordProperties.participantsNames.getter in conformance PhoneCallRecord()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames));
}

uint64_t protocol witness for PhoneCallRecordProperties.callRecordType.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callRecordType,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.callMetrics.getter in conformance PhoneCallRecord()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics));
}

uint64_t protocol witness for PhoneCallRecordProperties.unseen.getter in conformance PhoneCallRecord()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_unseen);
}

uint64_t protocol witness for PhoneCallRecordProperties.callCapability.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.numberOfCalls.getter in conformance PhoneCallRecord()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_numberOfCalls);
}

uint64_t protocol witness for PhoneCallRecordProperties.callProvider.getter in conformance PhoneCallRecord()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callProvider));
}

uint64_t protocol witness for PhoneCallRecordProperties.isCallerIdBlocked.getter in conformance PhoneCallRecord()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_isCallerIdBlocked);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayName.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayName,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayDateTime.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayDateTime,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayTextColor.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayTextColor,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displaySymbolIcon.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.displayCallDetail.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.selectAction.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.playVoicemailAction.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.openCallRecordAction.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_openCallRecordAction,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.callDuration.getter in conformance PhoneCallRecord@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDuration,  a1);
}

uint64_t protocol witness for PhoneCallRecordProperties.callDurationInterval.getter in conformance PhoneCallRecord()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callDurationInterval);
}

uint64_t protocol witness for PhoneCallRecordProperties.participants.getter in conformance PhoneCallRecord()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants));
}

uint64_t protocol witness for PhoneCallRecordProperties.contactIds.getter in conformance PhoneCallRecord()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds));
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneCallRecord@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 352))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneCallRecord()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 344LL))();
}

void sub_26E320()
{
}

void sub_26E344()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 296))();
  OUTLINED_FUNCTION_2();
}

void sub_26E36C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 320))();
  OUTLINED_FUNCTION_2();
}

void sub_26E394()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 344))();
  OUTLINED_FUNCTION_2();
}

void sub_26E3BC()
{
}

void sub_26E3E0()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 392))();
  OUTLINED_FUNCTION_2();
}

void sub_26E408()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 416))() & 1;
  OUTLINED_FUNCTION_2();
}

void sub_26E430()
{
}

void sub_26E450()
{
}

void sub_26E474()
{
  *(void *)uint64_t v0 = (*(uint64_t (**)(void))(v1 + 464))();
  *(_BYTE *)(v0 + 8) = v2 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_26E4A0()
{
}

void sub_26E4C0()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 488))();
  OUTLINED_FUNCTION_2();
}

void sub_26E4E8()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 512))() & 1;
  OUTLINED_FUNCTION_2();
}

void sub_26E510()
{
}

void sub_26E530()
{
}

void sub_26E554()
{
}

void sub_26E578()
{
}

void sub_26E59C()
{
}

void sub_26E5C0()
{
}

void sub_26E5E4()
{
}

void sub_26E608()
{
}

void sub_26E62C()
{
}

void sub_26E650()
{
}

void sub_26E674()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 752))();
  OUTLINED_FUNCTION_2();
}

void sub_26E69C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 776))();
  OUTLINED_FUNCTION_2();
}

void sub_26E6C4()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 800))();
  OUTLINED_FUNCTION_2();
}

void sub_26E6EC()
{
  *(void *)uint64_t v0 = (*(uint64_t (**)(void))(v1 + 824))();
  *(_BYTE *)(v0 + 8) = v2 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_26E718()
{
}

void type metadata completion function for PhoneCallRecord(uint64_t a1)
{
  uint64_t v4 = "\b";
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = "\b";
    uint64_t v7 = "\b";
    uint64_t v8 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v9 = v5;
    uint64_t v10 = "\b";
    uint64_t v11 = &unk_33AE50;
    uint64_t v12 = v5;
    uint64_t v13 = &unk_33AE68;
    uint64_t v14 = "\b";
    uint64_t v15 = &unk_33AE50;
    uint64_t v16 = v5;
    uint64_t v17 = v5;
    uint64_t v18 = v5;
    uint64_t v19 = v5;
    uint64_t v20 = v5;
    uint64_t v21 = v5;
    uint64_t v22 = v5;
    uint64_t v23 = v5;
    uint64_t v24 = v5;
    uint64_t v25 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v26 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v27 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v28 = &unk_33AE68;
    swift_updateClassMetadata2(a1, 256LL, 25LL, &v4, a1 + 80);
  }

uint64_t ObjC metadata update function for PhoneCallRecord.Builder()
{
  return type metadata accessor for PhoneCallRecord.Builder(0LL);
}

void type metadata completion function for PhoneCallRecord.Builder(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    void v4[2] = "\b";
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[4] = v4[0];
    void v4[5] = "\b";
    void v4[6] = &unk_33AE50;
    v4[7] = v4[0];
    v4[8] = &unk_33AE68;
    v4[9] = "\b";
    v4[10] = &unk_33AE50;
    v4[11] = v4[0];
    v4[12] = v4[0];
    v4[13] = v4[0];
    v4[14] = v4[0];
    v4[15] = v4[0];
    v4[16] = v4[0];
    v4[17] = v4[0];
    v4[18] = v4[0];
    v4[19] = v4[0];
    v4[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[23] = &unk_33AE68;
    swift_updateClassMetadata2(a1, 256LL, 24LL, v4, a1 + 80);
  }

uint64_t getEnumTagSinglePayload for PhoneCallRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xE9)
  {
    if (a2 + 23 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 23) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 24;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for PhoneCallRecord.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xE8) {
    return ((uint64_t (*)(void))((char *)&loc_26E98C + 4 * byte_33ABED[v4]))();
  }
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_26E9C0 + 4 * byte_33ABE8[v4]))();
}

uint64_t sub_26E9C0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_26E9C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x26E9D0LL);
  }
  return result;
}

uint64_t sub_26E9DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x26E9E4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 23;
  return result;
}

uint64_t sub_26E9E8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_26E9F0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallRecord.CodingKeys()
{
  return &type metadata for PhoneCallRecord.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_0_95@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return swift_beginAccess(v2 + a2, a1, 33LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_2_81@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(v5 - 72) = a2;
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(a1, v5 - 72, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_7_98(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

uint64_t OUTLINED_FUNCTION_11_77@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v2 + a1, 1LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_12_79(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v2, a2, *(void *)(v3 - 120), v2, *(void *)(v3 - 224));
}

uint64_t OUTLINED_FUNCTION_13_80()
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 8))(v0, *(void *)(v2 - 120));
}

void OUTLINED_FUNCTION_17_61()
{
  *(_DWORD *)(v0 - 200) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
}

void OUTLINED_FUNCTION_18_61()
{
  *(_DWORD *)(v0 - 200) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
}

uint64_t OUTLINED_FUNCTION_19_58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_28_52@<X0>(uint64_t a1@<X8>)
{
  return outlined init with take of SpeakableString?(v2, v1 + a1);
}

void *OUTLINED_FUNCTION_30_42()
{
  uint64_t v2 = *(void **)(v1 - 88);
  void v2[3] = v0;
  return __swift_allocate_boxed_opaque_existential_1(v2);
}

uint64_t OUTLINED_FUNCTION_31_41@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 120));
}

void OUTLINED_FUNCTION_32_45()
{
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  *(_DWORD *)(v0 - 176) = 1;
  *(_DWORD *)(v0 - 168) = 1;
  *(_DWORD *)(v0 - 160) = 1;
  *(_DWORD *)(v0 - 152) = 1;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  *(_DWORD *)(v0 - 136) = 1;
}

void OUTLINED_FUNCTION_33_51()
{
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  *(_DWORD *)(v0 - 176) = 1;
  *(_DWORD *)(v0 - 168) = 1;
  *(_DWORD *)(v0 - 160) = 1;
  *(_DWORD *)(v0 - 152) = 1;
}

void OUTLINED_FUNCTION_34_34()
{
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  *(_DWORD *)(v0 - 176) = 1;
  *(_DWORD *)(v0 - 168) = 1;
}

void OUTLINED_FUNCTION_35_35()
{
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
}

void OUTLINED_FUNCTION_36_37()
{
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
  *(_DWORD *)(v0 - 200) = 1;
}

void OUTLINED_FUNCTION_37_38()
{
  *(_DWORD *)(v0 - 200) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
}

void OUTLINED_FUNCTION_38_35()
{
  *(_DWORD *)(v0 - 200) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 160) = 0;
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  *(_DWORD *)(v0 - 136) = 0;
  *(_DWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_44_30()
{
  return v0();
}

uint64_t OUTLINED_FUNCTION_51_19()
{
  return swift_release(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_53_27@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 96) + a1;
}

void OUTLINED_FUNCTION_54_21(char a1@<W8>)
{
  *(_BYTE *)(v1 - 72) = a1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_56_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58_23()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)(v3 - 72, v3 - 81, v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_62_21@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + a2) = result;
  return result;
}

void OUTLINED_FUNCTION_63_23(uint64_t a1@<X8>)
{
  *(void *)(v2 - 72) = *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_67_20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(_BYTE *)(v4 - 72) = a3;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)(a1, a2, v4 - 72, v3);
}

  ;
}

uint64_t OUTLINED_FUNCTION_73_25()
{
  return swift_getWitnessTable(v0, v1);
}

uint64_t OUTLINED_FUNCTION_74_19(uint64_t a1)
{
  uint64_t v3 = *(void **)(v2 - 88);
  v3[3] = a1;
  *uint64_t v3 = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_75_22@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_78_21@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_80_15()
{
  return 0x6954656361467369LL;
}

uint64_t OUTLINED_FUNCTION_81_19()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520LL))();
}

uint64_t OUTLINED_FUNCTION_82_18()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424LL))();
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_87_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_88_21@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_89_17@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_90_15@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v1 - 81) = a1;
  return 0LL;
}

  ;
}

void OUTLINED_FUNCTION_98_13(uint64_t a1, uint64_t (*a2)(uint64_t))
{
}

uint64_t ButtonConfigurationModel.init(label:directInvocation:id:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = [objc_allocWithZone(SABaseCommand) init];
  uint64_t v7 = OUTLINED_FUNCTION_1_89();
  type metadata accessor for INPlayVoicemailIntent( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SABaseCommand,  &OBJC_CLASS___SABaseCommand_ptr);
  uint64_t v9 = CodableAceObject.init(wrappedValue:)(v6, v8);
  *(_BYTE *)(v4 + *(int *)(v7 + swift_release(*(void *)(v0 + 32)) = 1;
  OUTLINED_FUNCTION_24_10( v9,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor,  &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
  CodableAceObject.init(wrappedValue:)(v5, v10);
  uint64_t v11 = v4 + *(int *)(v7 + 28);
  uint64_t v12 = OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(v11, v3, v12);
}

uint64_t type metadata accessor for ButtonConfigurationModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for ButtonConfigurationModel;
  if (!type metadata singleton initialization cache for ButtonConfigurationModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ButtonConfigurationModel);
  }
  return result;
}

unint64_t StackedButtonsModel.responseViewId.getter(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v3 = 0x747465536E65706FLL;
    }
    else {
      unint64_t v3 = 0xD000000000000011LL;
    }
    if (a2 == 1) {
      unint64_t v4 = 0xEC00000073676E69LL;
    }
    else {
      unint64_t v4 = 0x8000000000346480LL;
    }
  }

  else
  {
    unint64_t v4 = 0xEF74706D6F72506CLL;
    unint64_t v3 = 0x6C6143724F646461LL;
  }

  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v4);
  return 0xD000000000000014LL;
}

uint64_t StackedButtonsModel.init(buttonConfiguration:useCase:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v3 = *(void *)(OUTLINED_FUNCTION_1_89() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v2, v6 + v4, v5 | 7);
  *(_OWORD *)(v7 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
  outlined init with take of ButtonConfigurationModel(a1, v7 + v6);
  return v7;
}

uint64_t ButtonConfigurationModel.init(label:action:id:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = OUTLINED_FUNCTION_1_89();
  OUTLINED_FUNCTION_24_10( v6,  (unint64_t *)&lazy cache variable for type metadata for SABaseCommand,  &OBJC_CLASS___SABaseCommand_ptr);
  uint64_t v8 = v7;
  id v9 = v5;
  CodableAceObject.init(wrappedValue:)(v9, v8);
  uint64_t v10 = v4 + *(int *)(v6 + 28);
  uint64_t v11 = OUTLINED_FUNCTION_12();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v3, v11);
  *(_BYTE *)(v4 + *(int *)(v6 + swift_release(*(void *)(v0 + 32)) = 0;
  id v13 = [objc_allocWithZone(SAIntentGroupRunSiriKitExecutor) init];
  type metadata accessor for INPlayVoicemailIntent( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor,  &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
  CodableAceObject.init(wrappedValue:)(v13, v14);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v3, v11);
}

void ButtonConfigurationModel.init(label:url:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v13 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  id v14 = [objc_allocWithZone(SAUIAppPunchOut) init];
  URL.init(string:)(a3, a4);
  swift_bridgeObjectRelease();
  uint64_t v15 = type metadata accessor for URL(0LL);
  uint64_t v17 = 0LL;
  if (__swift_getEnumTagSinglePayload(v6, 1LL, v15) != 1)
  {
    URL._bridgeToObjectiveC()(v16);
    uint64_t v17 = v18;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v6, v15);
  }

  [v14 setPunchOutUri:v17];

  id v19 = v14;
  uint64_t v20 = UUID.init()(v19);
  uint64_t v21 = UUID.uuidString.getter(v20);
  uint64_t v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v13);
  outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v21, v23, v19);

  id v24 = v19;
  UUID.init()(v24);
  ButtonConfigurationModel.init(label:action:id:)(a1, a2, a5);
}

uint64_t StackedButtonsModel.shouldHideSnippet(on:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for DeviceIdiom(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin();
  uint64_t v11 = (char *)&v19 - v10;
  OUTLINED_FUNCTION_8_75(v9, enum case for DeviceIdiom.car(_:));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DeviceIdiom and conformance DeviceIdiom,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceIdiom);
  char v12 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v11, v5);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v14 = OUTLINED_FUNCTION_7_99();
  if ((v12 & 1) != 0)
  {
    char v15 = 1;
  }

  else if (a3 == 1)
  {
    OUTLINED_FUNCTION_8_75(v14, enum case for DeviceIdiom.watch(_:));
    char v16 = static DeviceIdiom.== infix(_:_:)(a1, v11);
    OUTLINED_FUNCTION_7_99();
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    if ((v16 & 1) != 0)
    {
      char v15 = 1;
    }

    else
    {
      OUTLINED_FUNCTION_8_75(v17, enum case for DeviceIdiom.mac(_:));
      char v15 = static DeviceIdiom.== infix(_:_:)(v8, v11);
      OUTLINED_FUNCTION_7_99();
    }

    v13(v8, v5);
  }

  else
  {
    char v15 = 0;
  }

  return v15 & 1;
}

void ButtonConfigurationModel.label.getter()
{
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.action(uint64_t a1)
{
  return OUTLINED_FUNCTION_24_30();
}

void ButtonConfigurationModel.action.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for ButtonConfigurationModel.action : ButtonConfigurationModel(id *a1)
{
  id v1 = *a1;
  ButtonConfigurationModel.action.setter();
}

void ButtonConfigurationModel.action.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void ButtonConfigurationModel.action.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_89();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void ButtonConfigurationModel.directInvocation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for ButtonConfigurationModel.directInvocation : ButtonConfigurationModel(id *a1)
{
  id v1 = *a1;
  ButtonConfigurationModel.directInvocation.setter();
}

void ButtonConfigurationModel.directInvocation.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void ButtonConfigurationModel.directInvocation.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_89();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t ButtonConfigurationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_89() + 28);
  uint64_t v4 = OUTLINED_FUNCTION_12();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t ButtonConfigurationModel.isDirectInvocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_1_89() + 32));
}

uint64_t ButtonConfigurationModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000LL)
  {
    unint64_t v5 = 0xE500000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6562616CLL, 0xE500000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6E6F69746361LL && a2 == 0xE600000000000000LL)
  {
    unint64_t v8 = 0xE600000000000000LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69746361LL, 0xE600000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000010LL)
  {
    unint64_t v9 = 0x8000000000346F10LL;
    if (a2 == 0x8000000000346F10LL) {
      goto LABEL_21;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x8000000000346F10LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 25705 && a2 == 0xE200000000000000LL)
  {
    unint64_t v11 = 0xE200000000000000LL;
    goto LABEL_29;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705LL, 0xE200000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3LL;
  }

  if (a1 == 0xD000000000000012LL && a2 == 0x800000000034B370LL)
  {
    swift_bridgeObjectRelease(0x800000000034B370LL);
    return 4LL;
  }

  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012LL, 0x800000000034B370LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

uint64_t ButtonConfigurationModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_26FA24 + 4 * byte_33AEA0[a1]))( 0x6C6562616CLL,  0xE500000000000000LL);
}

uint64_t sub_26FA24()
{
  return 0x6E6F69746361LL;
}

unint64_t sub_26FA38()
{
  return 0xD000000000000010LL;
}

uint64_t sub_26FA54()
{
  return 25705LL;
}

unint64_t sub_26FA60()
{
  return 0xD000000000000012LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ButtonConfigurationModel.CodingKeys()
{
  return ButtonConfigurationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ButtonConfigurationModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = ButtonConfigurationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ButtonConfigurationModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ButtonConfigurationModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void ButtonConfigurationModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ButtonConfigurationModel.CodingKeys>);
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  unint64_t v8 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_412590, &unk_412590, v8, v6, v7);
  uint64_t v9 = *v3;
  uint64_t v10 = v3[1];
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v9, v10, &v14, v5);
  if (!v2)
  {
    uint64_t v11 = type metadata accessor for ButtonConfigurationModel(0LL);
    v13[3] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>,  &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    OUTLINED_FUNCTION_4_5();
    void v13[2] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>,  &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    OUTLINED_FUNCTION_4_5();
    v13[1] = 3;
    type metadata accessor for UUID(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UUID and conformance UUID,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    OUTLINED_FUNCTION_4_5();
    uint64_t v12 = *((unsigned __int8 *)v3 + *(int *)(v11 + 32));
    v13[0] = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v12, v13, v5);
  }

  OUTLINED_FUNCTION_15_72();
  OUTLINED_FUNCTION_7_1();
}

void ButtonConfigurationModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = type metadata accessor for UUID(0LL);
  uint64_t v25 = *(void *)(v23 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v21 = v5;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v26 = *(void *)(v28 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v22 = v6;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v24 = *(void *)(v27 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ButtonConfigurationModel.CodingKeys>);
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v7 = (int *)type metadata accessor for ButtonConfigurationModel(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_412590, &unk_412590, v10, v8, v9);
  if (v30)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  else
  {
    char v35 = 0;
    *(void *)uint64_t v3 = KeyedDecodingContainer.decode(_:forKey:)(&v35, v29);
    *((void *)v3 + 1) = v11;
    char v34 = 1;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>,  &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    OUTLINED_FUNCTION_9_72(v12, (uint64_t)&v34, v13, v14, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(&v3[v7[5]], v2, v27);
    char v33 = 2;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>,  &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v28, &v33, v29, v28, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(&v3[v7[6]], v22, v28);
    char v32 = 3;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UUID and conformance UUID,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    OUTLINED_FUNCTION_9_72(v16, (uint64_t)&v32, v17, v18, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v3[v7[7]], v21, v23);
    char v31 = 4;
    char v19 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v29);
    OUTLINED_FUNCTION_2_82();
    v3[v7[8]] = v19 & 1;
    outlined init with copy of ButtonConfigurationModel((uint64_t)v3, a2);
    __swift_destroy_boxed_opaque_existential_1(a1);
    outlined destroy of ButtonConfigurationModel((uint64_t)v3);
  }

  OUTLINED_FUNCTION_7_1();
}

uint64_t protocol witness for Identifiable.id.getter in conformance ButtonConfigurationModel@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for UUID(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

void protocol witness for Decodable.init(from:) in conformance ButtonConfigurationModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for Encodable.encode(to:) in conformance ButtonConfigurationModel(void *a1)
{
}

PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional __swiftcall StackedButtonsModel.UseCase.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of StackedButtonsModel.UseCase.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional)v3;
  }
}

uint64_t StackedButtonsModel.UseCase.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6C6143724F646461LL;
  }
  if (a1 == 1) {
    return 0x747465536E65706FLL;
  }
  return 0xD000000000000011LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StackedButtonsModel.UseCase( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StackedButtonsModel.UseCase()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StackedButtonsModel.UseCase(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StackedButtonsModel.UseCase( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StackedButtonsModel.UseCase@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StackedButtonsModel::UseCase_optional *a2@<X8>)
{
  result.value = StackedButtonsModel.UseCase.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StackedButtonsModel.UseCase( uint64_t *a1@<X8>)
{
  *a1 = StackedButtonsModel.UseCase.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel.UseCase( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel.UseCase( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t StackedButtonsModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0xD000000000000014LL)
  {
    unint64_t v4 = 0x80000000003509D0LL;
    if (a2 == 0x80000000003509D0LL) {
      goto LABEL_5;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014LL, 0x80000000003509D0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  if (a1 == 0x65736143657375LL && a2 == 0xE700000000000000LL)
  {
    swift_bridgeObjectRelease(0xE700000000000000LL);
    return 1LL;
  }

  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65736143657375LL, 0xE700000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t StackedButtonsModel.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x65736143657375LL;
  }
  else {
    return 0xD000000000000014LL;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance StackedButtonsModel.CodingKeys()
{
  return StackedButtonsModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance StackedButtonsModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = StackedButtonsModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance StackedButtonsModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance StackedButtonsModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void StackedButtonsModel.encode(to:)(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  unint64_t v5 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_412500, &unk_412500, v5, v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
  lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A]( &lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A],  &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel,  (uint64_t)&protocol conformance descriptor for ButtonConfigurationModel,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  OUTLINED_FUNCTION_4_5();
  if (!v1)
  {
    lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    OUTLINED_FUNCTION_4_5();
  }

  OUTLINED_FUNCTION_15_72();
  OUTLINED_FUNCTION_7_1();
}

uint64_t StackedButtonsModel.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<StackedButtonsModel.CodingKeys>);
  __chkstk_darwin();
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  unint64_t v6 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_412500, &unk_412500, v6, v4, v5);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    char v12 = 0;
    uint64_t v8 = lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A]( &lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A],  &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel,  (uint64_t)&protocol conformance descriptor for ButtonConfigurationModel,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    OUTLINED_FUNCTION_26_54(v7, (uint64_t)&v12, v3, v7, v8);
    uint64_t v4 = v13;
    char v11 = 1;
    unint64_t v10 = lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_26_54( (uint64_t)&type metadata for StackedButtonsModel.UseCase,  (uint64_t)&v11,  v3,  (uint64_t)&type metadata for StackedButtonsModel.UseCase,  v10);
    OUTLINED_FUNCTION_0_54();
    if (v10) {
      OUTLINED_FUNCTION_23_5();
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
    OUTLINED_FUNCTION_23_5();
  }

  return v4;
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance StackedButtonsModel( uint64_t a1)
{
  return StackedButtonsModel.responseViewId.getter(a1, *(_BYTE *)(v1 + 8));
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = StackedButtonsModel.init(from:)(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }

  return result;
}

void protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel(void *a1)
{
}

void outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setAceId:v5];
}

unint64_t lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ButtonConfigurationModel.CodingKeys,  &unk_412590);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ButtonConfigurationModel.CodingKeys,  &unk_412590);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ButtonConfigurationModel.CodingKeys,  &unk_412590);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ButtonConfigurationModel.CodingKeys,  &unk_412590);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_412500);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_412500);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_412500);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for StackedButtonsModel.CodingKeys, &unk_412500);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StackedButtonsModel.UseCase,  &type metadata for StackedButtonsModel.UseCase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StackedButtonsModel.UseCase,  &type metadata for StackedButtonsModel.UseCase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StackedButtonsModel.UseCase,  &type metadata for StackedButtonsModel.UseCase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StackedButtonsModel.UseCase,  &type metadata for StackedButtonsModel.UseCase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }

  return result;
}

uint64_t lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A]( unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    lazy protocol witness table accessor for type UUID and conformance UUID( a2,  type metadata accessor for ButtonConfigurationModel);
    uint64_t result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }

  return result;
}

void base witness table accessor for Decodable in ButtonConfigurationModel()
{
}

void base witness table accessor for Encodable in ButtonConfigurationModel()
{
}

void associated type witness table accessor for Identifiable.ID : Hashable in ButtonConfigurationModel()
{
}

unint64_t instantiation function for generic protocol witness table for StackedButtonsModel( uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_270AD4(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

void sub_270AFC(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

void *initializeBufferWithCopyOfBuffer for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }

  return a1;
}

uint64_t destroy for ButtonConfigurationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for UUID(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
}

void *initializeWithCopy for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16LL))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v16, v17, v18);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

void *assignWithCopy for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24LL))(v15, v16, v17);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for ButtonConfigurationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32LL))(v15, v16, v17);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40LL))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40LL))(v16, v17, v18);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonConfigurationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_27105C);
}

uint64_t sub_27105C(uint64_t a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == (_DWORD)a2)
    {
      uint64_t v9 = v8;
      uint64_t v10 = a3[5];
    }

    else
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      if (*(_DWORD *)(*(void *)(v11 - 8) + 84LL) == (_DWORD)a2)
      {
        uint64_t v9 = v11;
        uint64_t v10 = a3[6];
      }

      else
      {
        uint64_t v9 = OUTLINED_FUNCTION_12();
        uint64_t v10 = a3[7];
      }
    }

    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }

uint64_t storeEnumTagSinglePayload for ButtonConfigurationModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_271128);
}

uint64_t sub_271128(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
    {
      uint64_t v9 = v8;
      uint64_t v10 = a4[5];
    }

    else
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      if (*(_DWORD *)(*(void *)(v11 - 8) + 84LL) == a3)
      {
        uint64_t v9 = v11;
        uint64_t v10 = a4[6];
      }

      else
      {
        uint64_t v9 = OUTLINED_FUNCTION_12();
        uint64_t v10 = a4[7];
      }
    }

    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }

  return result;
}

void type metadata completion function for ButtonConfigurationModel(uint64_t a1)
{
  v8[0] = &unk_33B130;
  type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>( 319LL,  (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseCommand>,  (unint64_t *)&lazy cache variable for type metadata for SABaseCommand,  &OBJC_CLASS___SABaseCommand_ptr);
  if (v3 <= 0x3F)
  {
    v8[1] = *(void *)(v2 - 8) + 64LL;
    type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>( 319LL,  (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor,  &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
    if (v5 <= 0x3F)
    {
      __int128 v8[2] = *(void *)(v4 - 8) + 64LL;
      uint64_t v6 = type metadata accessor for UUID(319LL);
      if (v7 <= 0x3F)
      {
        v8[3] = *(void *)(v6 - 8) + 64LL;
        uint64_t v8[4] = &unk_33B148;
        swift_initStructMetadata(a1, 256LL, 5LL, v8, a1 + 16);
      }
    }
  }

uint64_t initializeBufferWithCopyOfBuffer for StackedButtonsModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for StackedButtonsModel(void *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for StackedButtonsModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t *assignWithTake for StackedButtonsModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for StackedButtonsModel()
{
  return &type metadata for StackedButtonsModel;
}

uint64_t storeEnumTagSinglePayload for StackedButtonsModel.UseCase( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_2713E8 + 4 * byte_33AEAA[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_27141C + 4 * byte_33AEA5[v4]))();
}

uint64_t sub_27141C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_271424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x27142CLL);
  }
  return result;
}

uint64_t sub_271438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x271440LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_271444(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27144C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StackedButtonsModel.UseCase()
{
  return &type metadata for StackedButtonsModel.UseCase;
}

uint64_t storeEnumTagSinglePayload for StackedButtonsModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2714B4 + 4 * byte_33AEB4[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2714E8 + 4 * byte_33AEAF[v4]))();
}

uint64_t sub_2714E8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2714F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2714F8LL);
  }
  return result;
}

uint64_t sub_271504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x27150CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_271510(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_271518(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for StackedButtonsModel.CodingKeys()
{
  return &unk_412500;
}

uint64_t storeEnumTagSinglePayload for ButtonConfigurationModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_271580 + 4 * byte_33AEBE[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2715B4 + 4 * byte_33AEB9[v4]))();
}

uint64_t sub_2715B4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2715BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2715C4LL);
  }
  return result;
}

uint64_t sub_2715D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2715D8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_2715DC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2715E4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for ButtonConfigurationModel.CodingKeys()
{
  return &unk_412590;
}

uint64_t OUTLINED_FUNCTION_1_89()
{
  return type metadata accessor for ButtonConfigurationModel(0LL);
}

uint64_t OUTLINED_FUNCTION_2_82()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v1 - 104), *(void *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_7_99()
{
  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_75(uint64_t a1, uint64_t a2)
{
  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_9_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(v5, a2, *(void *)(v6 - 96), v5, a5);
}

uint64_t OUTLINED_FUNCTION_15_72()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for AudioSessionManager()
{
  return &type metadata for AudioSessionManager;
}

void static StartCallViewBuilders.makeSiriSettingsButton(templatingService:sharedGlobals:)( uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = [objc_allocWithZone(SAUIOpenLink) init];
  URL.init(string:)(0x6F723A7366657270LL, 0xEF495249533D746FLL);
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v9 = 0LL;
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1LL, v7) != 1)
  {
    URL._bridgeToObjectiveC()(v8);
    uint64_t v9 = v10;
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8LL))(v5, v7);
  }

  [v6 setRef:v9];

  uint64_t v11 = outlined init with copy of SignalProviding(a1, (uint64_t)v18);
  OUTLINED_FUNCTION_4_93(v11, (uint64_t)v17);
  a2[3] = &type metadata for ButtonBuilder;
  a2[4] = &protocol witness table for ButtonBuilder;
  uint64_t v12 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4126F0, 80LL);
  *a2 = v12;
  outlined init with copy of SignalProviding((uint64_t)v18, (uint64_t)v16);
  uint64_t v13 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412718, 56LL);
  outlined init with take of AppSelectionSignalComponent(v16, v13 + 16);
  id v14 = v6;
  __swift_destroy_boxed_opaque_existential_1(v18);
  v12[2] = partial apply for implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
  v12[3] = v13;
  v12[4] = v14;
  outlined init with take of AppSelectionSignalComponent(v17, (uint64_t)(v12 + 5));
}

uint64_t sub_2719E4()
{
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t static SCHViewBuilders.makeErrorButtonBuilder(templatingService:app:preferredCallProvider:sharedGlobals:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v12, v14, "#SCHViewBuilders Providing ErrorButtonBuilder", v15, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v15);
  }

  if (App.isFirstParty()())
  {
    uint64_t v16 = a4[3];
    uint64_t v17 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v16);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v72, v16, v17);
    a2 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( a2,  a3,  v72);
    OUTLINED_FUNCTION_13_28(a2, v18, v19, v20, v21, v22, v23, v24, v60, v63, *((uint64_t *)&v63 + 1));
  }

  else
  {
    swift_retain();
  }

  uint64_t v25 = outlined init with copy of SignalProviding(a1, (uint64_t)v72);
  OUTLINED_FUNCTION_49( v25,  (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp,  &OBJC_CLASS___SAAppsLaunchApp_ptr);
  uint64_t v26 = swift_retain_n(a2, 2LL);
  SAAppsLaunchApp.init(app:)(v26);
  OUTLINED_FUNCTION_2_83(v27, v28, v29, v30, v31, v32);
  a5[3] = (uint64_t)&type metadata for ButtonBuilder;
  a5[4] = (uint64_t)&protocol witness table for ButtonBuilder;
  uint64_t v33 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4126F0, 80LL);
  *a5 = v33;
  OUTLINED_FUNCTION_5_94((uint64_t)v72, v34);
  uint64_t v35 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412740, 64LL);
  uint64_t v43 = OUTLINED_FUNCTION_1_90(v35, v36, v37, v38, v39, v40, v41, v42, v60, v63);
  *(void *)(v35 + 56) = a2;
  uint64_t v51 = OUTLINED_FUNCTION_13_28(v43, v44, v45, v46, v47, v48, v49, v50, v61, v64, v66);
  *(void *)(v33 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = partial apply for closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
  *(void *)(v33 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v35;
  OUTLINED_FUNCTION_12_80(v51, v52, v53, v54, v55, v56, v57, v58, v62, v65, v67, v68, v69, v70, v71);
  return swift_release(a2);
}

uint64_t static StartCallViewBuilders.makeErrorButtonBuilder(templatingService:app:intent:intentResponse:sharedGlobals:)@<X0>( uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v12, v14, "#StartCallViewBuilders Providing ErrorButtonBuilder", v15, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v15);
  }

  BOOL v16 = App.isFirstParty()();
  if (!v16)
  {
    uint64_t v77 = OUTLINED_FUNCTION_6_93(v16, v17, v18, v19, v20, v21, v22, v23, v137, v146, *((uint64_t *)&v146 + 1));
    uint64_t v78 = OUTLINED_FUNCTION_49( v77,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    uint64_t v79 = OUTLINED_FUNCTION_9_73();
    OUTLINED_FUNCTION_2_83(v79, v80, v81, v82, v83, v84);
    *(void *)(a5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for ButtonBuilder;
    *(void *)(a5 + 32) = &protocol witness table for ButtonBuilder;
    uint64_t v85 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4126F0, 80LL);
    OUTLINED_FUNCTION_3_109((uint64_t)v85, v86);
    uint64_t v87 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412768, 64LL);
    OUTLINED_FUNCTION_1_90(v87, v88, v89, v90, v91, v92, v93, v94, v142, v146);
    *(void *)(v87 + 56) = a1;
    uint64_t v95 = swift_retain();
    OUTLINED_FUNCTION_13_28(v95, v96, v97, v98, v99, v100, v101, v102, v143, v146, *((uint64_t *)&v146 + 1));
    unint64_t v85[2] = closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    v85[3] = v87;
    v85[4] = v78;
    return outlined init with take of AppSelectionSignalComponent(&v150, (uint64_t)(v85 + 5));
  }

  id v24 = [a2 preferredCallProvider];
  uint64_t v25 = a4[3];
  uint64_t v26 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 8))(v151, v25, v26);
  uint64_t v27 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( a1,  (uint64_t)v24,  v151);
  uint64_t v35 = (int *)OUTLINED_FUNCTION_13_28(v27, v28, v29, v30, v31, v32, v33, v34, v137, v146, *((uint64_t *)&v146 + 1));
  if (!a3) {
    goto LABEL_11;
  }
  uint64_t v35 = (int *)[a3 code];
  if (v35 == (int *)((char *)&dword_4 + 2))
  {
    uint64_t v121 = OUTLINED_FUNCTION_6_93(6LL, v36, v37, v38, v39, v40, v41, v42, v138, v146, *((uint64_t *)&v146 + 1));
    OUTLINED_FUNCTION_49( v121,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    swift_retain();
    uint64_t v122 = OUTLINED_FUNCTION_9_73();
    OUTLINED_FUNCTION_2_83(v122, v123, v124, v125, v126, v127);
    *(void *)(a5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for ButtonBuilder;
    *(void *)(a5 + 32) = &protocol witness table for ButtonBuilder;
    uint64_t v50 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4126F0, 80LL);
    OUTLINED_FUNCTION_3_109(v50, v128);
    uint64_t v52 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4127B8, 64LL);
    uint64_t v129 = outlined init with take of AppSelectionSignalComponent(&v146, v52 + 16);
    *(void *)(v52 + 56) = v27;
    uint64_t v68 = OUTLINED_FUNCTION_13_28(v129, v130, v131, v132, v133, v134, v135, v136, v145, v146, *((uint64_t *)&v146 + 1));
    uint64_t v76 = partial apply for closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
    goto LABEL_13;
  }

  if (v35 == &dword_8)
  {
    uint64_t v43 = OUTLINED_FUNCTION_6_93(8LL, v36, v37, v38, v39, v40, v41, v42, v138, v146, *((uint64_t *)&v146 + 1));
    OUTLINED_FUNCTION_49( v43,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    uint64_t v44 = OUTLINED_FUNCTION_9_73();
    OUTLINED_FUNCTION_2_83(v44, v45, v46, v47, v48, v49);
    *(void *)(a5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for ButtonBuilder;
    *(void *)(a5 + 32) = &protocol witness table for ButtonBuilder;
    uint64_t v50 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4126F0, 80LL);
    OUTLINED_FUNCTION_3_109(v50, v51);
    uint64_t v52 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4127E0, 56LL);
    uint64_t v60 = OUTLINED_FUNCTION_1_90(v52, v53, v54, v55, v56, v57, v58, v59, v139, v146);
    uint64_t v68 = OUTLINED_FUNCTION_13_28(v60, v61, v62, v63, v64, v65, v66, v67, v140, v146, *((uint64_t *)&v146 + 1));
    uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t))implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }

  else
  {
LABEL_11:
    uint64_t v104 = OUTLINED_FUNCTION_6_93((uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, v138, v146, *((uint64_t *)&v146 + 1));
    OUTLINED_FUNCTION_49( v104,  (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp,  &OBJC_CLASS___SAAppsLaunchApp_ptr);
    uint64_t v105 = swift_retain_n(v27, 2LL);
    SAAppsLaunchApp.init(app:)(v105);
    OUTLINED_FUNCTION_2_83(v106, v107, v108, v109, v110, v111);
    *(void *)(a5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for ButtonBuilder;
    *(void *)(a5 + 32) = &protocol witness table for ButtonBuilder;
    uint64_t v50 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4126F0, 80LL);
    OUTLINED_FUNCTION_3_109(v50, v112);
    uint64_t v52 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412790, 64LL);
    uint64_t v113 = outlined init with take of AppSelectionSignalComponent(&v146, v52 + 16);
    *(void *)(v52 + 56) = v27;
    uint64_t v68 = OUTLINED_FUNCTION_13_28(v113, v114, v115, v116, v117, v118, v119, v120, v144, v146, *((uint64_t *)&v146 + 1));
    uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t))closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }

uint64_t (*ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( uint64_t a1, unint64_t a2))()
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      OUTLINED_FUNCTION_5_94(a1, a2);
      uint64_t v3 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412830, 64LL);
      OUTLINED_FUNCTION_1_90(v3, v4, v5, v6, v7, v8, v9, v10, v29, v30);
      *(void *)(v3 + 56) = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }

    else
    {
      OUTLINED_FUNCTION_5_94(a1, a2);
      uint64_t v20 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412808, 56LL);
      OUTLINED_FUNCTION_1_90(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30);
      uint64_t v11 = implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }
  }

  else
  {
    OUTLINED_FUNCTION_5_94(a1, a2);
    uint64_t v12 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412858, 64LL);
    OUTLINED_FUNCTION_1_90(v12, v13, v14, v15, v16, v17, v18, v19, v29, v30);
    *(void *)(v12 + 56) = a2;
    uint64_t v11 = closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }

  outlined copy of ErrorButtonLabelOptions(a2);
  return v11;
}

uint64_t closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 72))(a4, a1, a2, v7, v8);
}

uint64_t closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 80))(a4, a1, a2, v7, v8);
}

uint64_t implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 88))(a1, a2, v5, v6);
}

uint64_t ButtonBuilder.init(label:templatingService:command:sharedGlobals:)@<X0>( unint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)()@<X2>, __int128 *a4@<X3>, uint64_t (**a5)()@<X8>)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      OUTLINED_FUNCTION_4_93(a1, (uint64_t)v21);
      uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4128A8, 64LL);
      outlined init with take of AppSelectionSignalComponent(v21, v10 + 16);
      *(void *)(v10 + 56) = a1 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }

    else
    {
      OUTLINED_FUNCTION_4_93(a1, (uint64_t)v21);
      uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_412880, 56LL);
      OUTLINED_FUNCTION_1_90(v10, v12, v13, v14, v15, v16, v17, v18, v20, v21[0]);
      uint64_t v11 = implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
    }
  }

  else
  {
    OUTLINED_FUNCTION_4_93(a1, (uint64_t)v21);
    uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4128D0, 64LL);
    outlined init with take of AppSelectionSignalComponent(v21, v10 + 16);
    *(void *)(v10 + 56) = a1;
    uint64_t v11 = closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)partial apply;
  }

  __swift_destroy_boxed_opaque_existential_1(a2);
  *a5 = v11;
  a5[1] = (uint64_t (*)())v10;
  a5[2] = a3;
  return outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a5 + 3));
}

uint64_t sub_2722AC()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( uint64_t a1, uint64_t a2)
{
  return implicit closure #2 in implicit closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( a1,  a2,  (void *)(v2 + 16));
}

uint64_t ButtonBuilder.labelProvider.getter()
{
  uint64_t v1 = *v0;
  swift_retain(v0[1]);
  return v1;
}

uint64_t ButtonBuilder.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return AnnotatedAppFinder.thirdPartyAnnotatedAppStore.getter(a1);
}

uint64_t partial apply for closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( uint64_t a1, uint64_t a2)
{
  return closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( a1,  a2,  (void *)(v2 + 16),  *(void *)(v2 + 56));
}

uint64_t ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  a2,  a3,  (uint64_t)&unk_4128F8,  (uint64_t)_s27PhoneCallFlowDelegatePlugin13ButtonBuilderV17makeViewsForWatch09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0);
}

uint64_t closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  a2,  a3,  a4,  a5,  (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:));
}

void closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = a2;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0) {
      uint64_t v26 = a2;
    }
    else {
      uint64_t v26 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v27 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    swift_bridgeObjectRetain();
    uint64_t v28 = _bridgeCocoaArray<A>(_:)(v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v5 = v28;
  }

  else
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
  }

  uint64_t v9 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SASTItemGroup,  &OBJC_CLASS___SASTItemGroup_ptr);
  uint64_t v10 = (void *)TemplatingResult.print.getter(v9);
  unint64_t v11 = v10[2];
  if (!v11)
  {
    __break(1u);
    goto LABEL_11;
  }

  uint64_t v12 = v10[4];
  uint64_t v13 = v10[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = swift_allocObject(v14, 40LL, 7LL);
  *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  uint64_t v16 = a3[2];
  *(void *)(v15 + 32) = v16;
  uint64_t v30 = v15;
  specialized Array._endMutation()(v15, v17, v18, v19);
  swift_unknownObjectRetain(v16);
  static SASTItemGroup.makeButtonGroup(label:commands:centered:)(v12, v13, v30, 1);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v5;
  swift_bridgeObjectRetain();
  a3 = v21;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a3);
  a1 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v11 = *(void *)((char *)&dword_18 + (v5 & 0xFFFFFFFFFFFFFF8LL));
  if (a1 >= v11 >> 1) {
LABEL_11:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, a1 + 1, 1LL);
  uint64_t v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, a3);
  specialized Array._endMutation()(v22, v23, v24, v25);
  swift_bridgeObjectRelease();

  *a4 = v29;
}

uint64_t ButtonBuilder.makeViewsForMac(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void (*)(uint64_t (*)(), void *))*v3;
  OUTLINED_FUNCTION_15_73((uint64_t)v3, v18);
  uint64_t v8 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_412920, 104LL);
  __int128 v8[2] = a2;
  v8[3] = a3;
  uint64_t v8[4] = a1;
  OUTLINED_FUNCTION_10_71((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v18, v19, v16, v20);
  swift_retain();
  OUTLINED_FUNCTION_6_1();
  v7( _s27PhoneCallFlowDelegatePlugin13ButtonBuilderV15makeViewsForIOS09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0,  v8);
  return swift_release(v8);
}

uint64_t ButtonBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  a2,  a3,  (uint64_t)&unk_412948,  (uint64_t)closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)partial apply);
}

uint64_t ButtonBuilder.makeViewsForCar(utteranceViews:_:)(uint64_t a1, void (*a2)(uint64_t, void))
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v8 = a1;
    }
    else {
      uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v9 = OUTLINED_FUNCTION_49( a1,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    OUTLINED_FUNCTION_6_1();
    uint64_t v6 = _bridgeCocoaArray<A>(_:)(v8, v9);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_6_1();
    uint64_t v5 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    OUTLINED_FUNCTION_49( v5,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    uint64_t v6 = a1;
  }

  a2(v6, 0LL);
  return swift_bridgeObjectRelease();
}

uint64_t ButtonBuilder.makeViewsForTV(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  a2,  a3,  (uint64_t)&unk_412970,  (uint64_t)_s27PhoneCallFlowDelegatePlugin13ButtonBuilderV14makeViewsForTV09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0);
}

uint64_t ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void (*)(uint64_t, void *))*v5;
  OUTLINED_FUNCTION_15_73((uint64_t)v5, v22);
  uint64_t v12 = (void *)OUTLINED_FUNCTION_8_2(a4, 104LL);
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a1;
  OUTLINED_FUNCTION_10_71((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v22, v23, v20, v24);
  swift_retain();
  swift_bridgeObjectRetain();
  v11(a5, v12);
  return swift_release(v12);
}

uint64_t closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  a2,  a3,  a4,  a5,  (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:));
}

void closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(TemplatingResult.sections.getter(a1) + 16);
  swift_bridgeObjectRelease();
  if (!v8)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0) {
        uint64_t v31 = a2;
      }
      else {
        uint64_t v31 = a2 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v32 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
      swift_bridgeObjectRetain();
      uint64_t v33 = _bridgeCocoaArray<A>(_:)(v31, v32);
      swift_bridgeObjectRelease();
      a2 = v33;
    }

    else
    {
      uint64_t v24 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v24);
      type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    }

    goto LABEL_10;
  }

  id v9 = (id)type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAUIButton,  &OBJC_CLASS___SAUIButton_ptr);
  if (*(void *)(TemplatingResult.print.getter(v9) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v11 = swift_allocObject(v10, 40LL, 7LL);
    *(_OWORD *)(v11 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
    uint64_t v12 = a3[2];
    *(void *)(v11 + 32) = v12;
    specialized Array._endMutation()(v11, v13, v14, v15);
    swift_unknownObjectRetain(v12);
    SAUIButton.init(text:commands:)();
    a3 = v16;
    id v9 = [objc_allocWithZone(SAUIDialogPunchout) init];
    [v9 setButtonView:a3];
    uint64_t v17 = swift_allocObject(v10, 40LL, 7LL);
    *(_OWORD *)(v17 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
    *(void *)(v17 + 32) = v9;
    uint64_t v34 = v17;
    specialized Array._endMutation()(v17, v18, v19, v20);
    uint64_t v4 = v34;
    if (!((unint64_t)a2 >> 62))
    {
      id v21 = v9;
      uint64_t v22 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v22);
      type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
      goto LABEL_5;
    }
  }

  else
  {
    __break(1u);
  }

  if (a2 < 0) {
    uint64_t v25 = a2;
  }
  else {
    uint64_t v25 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v26 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
  id v27 = v9;
  swift_bridgeObjectRetain();
  uint64_t v28 = _bridgeCocoaArray<A>(_:)(v25, v26);
  swift_bridgeObjectRelease();
  a2 = v28;
LABEL_5:
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v29 = v4;
    }
    else {
      uint64_t v29 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v30 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)(v29, v30);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v23 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_10:
  *a4 = a2;
}

uint64_t closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  a2,  a3,  a4,  a5,  (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:));
}

uint64_t closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, char *))
{
  uint64_t v7 = _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSaySo9SAAceViewCGTg5(a6);
  char v9 = v8 & 1;
  a2(v7, v8 & 1);
  return outlined consume of Result<[SAAceView], Error>(v7, v9);
}

void closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)( unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v6 = a1;
  uint64_t v8 = *(void *)(TemplatingResult.sections.getter(a1) + 16);
  swift_bridgeObjectRelease();
  unint64_t v9 = (unint64_t)a2 >> 62;
  if (v8)
  {
    if (v9)
    {
      if (a2 < 0) {
        uint64_t v27 = a2;
      }
      else {
        uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v28 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
      swift_bridgeObjectRetain();
      uint64_t v29 = _bridgeCocoaArray<A>(_:)(v27, v28);
      swift_bridgeObjectRelease();
      a2 = v29;
    }

    else
    {
      uint64_t v10 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
      type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    }

    uint64_t v11 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAUIButton,  &OBJC_CLASS___SAUIButton_ptr);
    unint64_t v12 = *(void *)(TemplatingResult.print.getter(v11) + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v14 = swift_allocObject(v13, 40LL, 7LL);
      *(_OWORD *)(v14 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
      uint64_t v15 = a3[2];
      *(void *)(v14 + 32) = v15;
      specialized Array._endMutation()(v14, v16, v17, v18);
      swift_unknownObjectRetain(v15);
      SAUIButton.init(text:commands:)();
      uint64_t v20 = v19;
      uint64_t v32 = a2;
      swift_bridgeObjectRetain();
      a3 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a3);
      unint64_t v6 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v12 = *(void *)((char *)&dword_18 + (a2 & 0xFFFFFFFFFFFFFF8LL));
      if (v6 < v12 >> 1)
      {
LABEL_6:
        uint64_t v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, a3);
        specialized Array._endMutation()(v21, v22, v23, v24);
        uint64_t v25 = v32;
        swift_bridgeObjectRelease();

        goto LABEL_7;
      }
    }

    else
    {
      __break(1u);
    }

    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v6 + 1, 1LL);
    goto LABEL_6;
  }

  if (!v9)
  {
    uint64_t v26 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    goto LABEL_10;
  }

  if (a2 < 0) {
    uint64_t v30 = a2;
  }
  else {
    uint64_t v30 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v31 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
  swift_bridgeObjectRetain();
  uint64_t v25 = _bridgeCocoaArray<A>(_:)(v30, v31);
  swift_bridgeObjectRelease();
LABEL_7:
  a2 = v25;
LABEL_10:
  *a4 = a2;
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForCar(utteranceViews:_:) in conformance ButtonBuilder( uint64_t a1, void (*a2)(uint64_t, void))
{
  return ButtonBuilder.makeViewsForCar(utteranceViews:_:)(a1, a2);
}

uint64_t partial apply for closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( uint64_t a1, uint64_t a2)
{
  return closure #2 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:)( a1,  a2,  (void *)(v2 + 16),  *(void *)(v2 + 56));
}

unint64_t outlined copy of ErrorButtonLabelOptions(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1) {
      return result;
    }
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }

  return swift_retain(result);
}

uint64_t _s27PhoneCallFlowDelegatePlugin13ButtonBuilderV17makeViewsForWatch09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0()
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( v0,  v1,  v2,  v3,  v4,  (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:));
}

uint64_t _s27PhoneCallFlowDelegatePlugin13ButtonBuilderV15makeViewsForIOS09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0()
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( v0,  v1,  v2,  v3,  v4,  (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:));
}

uint64_t objectdestroy_52Tm()
{
  return swift_deallocObject(v0, 104LL, 7LL);
}

uint64_t _s27PhoneCallFlowDelegatePlugin13ButtonBuilderV14makeViewsForTV09utteranceI0_ySaySo26SAUIAssistantUtteranceViewCG_ys6ResultOySaySo05SAAceO0CGs5Error_pGctFyAJy07SiriKitC0010TemplatingP0VsAN_pGcfU_TA_0()
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( v0,  v1,  v2,  v3,  v4,  (void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:));
}

unint64_t *initializeBufferWithCopyOfBuffer for ErrorButtonLabelOptions( unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  outlined copy of ErrorButtonLabelOptions(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ErrorButtonLabelOptions(unint64_t *a1)
{
  return outlined consume of ErrorButtonLabelOptions(*a1);
}

unint64_t outlined consume of ErrorButtonLabelOptions(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1) {
      return result;
    }
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }

  return swift_release(result);
}

unint64_t *assignWithCopy for ErrorButtonLabelOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  outlined copy of ErrorButtonLabelOptions(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  outlined consume of ErrorButtonLabelOptions(v4);
  return a1;
}

unint64_t *assignWithTake for ErrorButtonLabelOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  outlined consume of ErrorButtonLabelOptions(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorButtonLabelOptions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }

    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }

  else
  {
    unsigned int v2 = -1;
  }

  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ErrorButtonLabelOptions( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007LL;
    }
  }

  return result;
}

unint64_t *destructiveInjectEnumTag for ErrorButtonLabelOptions(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8LL;
    unint64_t v3 = a2 << 62;
  }

  else
  {
    uint64_t v2 = 8LL * (a2 - 2);
    unint64_t v3 = 0x8000000000000000LL;
  }

  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ErrorButtonLabelOptions()
{
  return &type metadata for ErrorButtonLabelOptions;
}

uint64_t destroy for ButtonBuilder(void *a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 3);
}

uint64_t initializeWithCopy for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v4;
  uint64_t v5 = a2 + 24;
  __int128 v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain(v3);
  swift_unknownObjectRetain(v4);
  v8(a1 + 24, v5, v7);
  return a1;
}

void *assignWithCopy for ButtonBuilder(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release(v5);
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  return a1;
}

uint64_t assignWithTake for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease(v5);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 24));
  *(_OWORD *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for ButtonBuilder()
{
  return &type metadata for ButtonBuilder;
}

void partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)( unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void partial apply for closure #1 in closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_1_90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  return outlined init with take of AppSelectionSignalComponent(&a10, a1 + 16);
}

uint64_t OUTLINED_FUNCTION_2_83(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return outlined init with copy of SignalProviding(v6, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_3_109(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  *uint64_t v2 = a1;
  return outlined init with copy of SignalProviding((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_4_93(uint64_t a1, uint64_t a2)
{
  return outlined init with copy of SignalProviding(v2, a2);
}

uint64_t OUTLINED_FUNCTION_6_93( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  return outlined init with copy of SignalProviding(v11, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_9_73()
{
  return static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(v0, v2, v1);
}

__n128 OUTLINED_FUNCTION_10_71( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __n128 a11, __int128 a12)
{
  *(_OWORD *)(a1 + 40) = a9;
  *(_OWORD *)(a1 + 56) = a10;
  __n128 result = a11;
  *(__n128 *)(a1 + 72) = a11;
  *(_OWORD *)(a1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a12;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_12_80( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15)
{
  *(void *)(v16 + 32) = v15;
  return outlined init with take of AppSelectionSignalComponent(&a15, v16 + 40);
}

uint64_t OUTLINED_FUNCTION_15_73@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return outlined init with copy of ButtonBuilder(a1, (uint64_t)&a2);
}

void PhoneCallProviderProperties.isFirstPartyPhone.getter(uint64_t a1, __CFString *a2)
{
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  uint64_t v6 = OUTLINED_FUNCTION_4_90(v5);
  if (v11)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v7 = 0LL;
    a2 = 0LL;
  }

  else
  {
    uint64_t v7 = v2;
    SpeakableString.print.getter(v6);
    OUTLINED_FUNCTION_0_91();
  }

  uint64_t v8 = INPreferredCallProviderGetBackingType(1LL);
  switch((_DWORD)v8)
  {
    case 4:
      uint64_t v9 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v9 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v9 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v10 = v9;
      goto LABEL_12;
  }

  uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v8));
LABEL_12:
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  OUTLINED_FUNCTION_1_1();
  if (a2)
  {
    BOOL v11 = v7 == a1 && a2 == v9;
    if (!v11) {
      OUTLINED_FUNCTION_0_15();
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
}

void PhoneCallProviderProperties.isFaceTime.getter(uint64_t a1, __CFString *a2)
{
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  uint64_t v6 = OUTLINED_FUNCTION_4_90(v5);
  if (v11)
  {
    outlined destroy of SpeakableString?(v2);
    uint64_t v7 = 0LL;
    a2 = 0LL;
  }

  else
  {
    uint64_t v7 = v2;
    SpeakableString.print.getter(v6);
    OUTLINED_FUNCTION_0_91();
  }

  uint64_t v8 = INPreferredCallProviderGetBackingType(2LL);
  switch((_DWORD)v8)
  {
    case 4:
      uint64_t v9 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v9 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v9 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v10 = v9;
      goto LABEL_12;
  }

  uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v8));
LABEL_12:
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  OUTLINED_FUNCTION_1_1();
  if (a2)
  {
    BOOL v11 = v7 == a1 && a2 == v9;
    if (!v11) {
      OUTLINED_FUNCTION_0_15();
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
}

uint64_t OUTLINED_FUNCTION_0_96()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v0);
}

void UnsupportedFaceTimeOutputProvider.__allocating_init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
  uint64_t v3 = v2;
  uint64_t v16 = v4;
  OUTLINED_FUNCTION_97_16();
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v0, 136LL);
  uint64_t v7 = v3[3];
  uint64_t v6 = v3[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v7);
  OUTLINED_FUNCTION_13_24();
  __chkstk_darwin();
  OUTLINED_FUNCTION_1_31(v8, v9, v15);
  char v10 = OUTLINED_FUNCTION_86_14();
  specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( v10,  v11,  v12,  v13,  v14,  v16,  v1,  v5,  v7,  v6);
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_7_5();
}

void UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
  uint64_t v17 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_97_16();
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v7 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
  OUTLINED_FUNCTION_13_24();
  __chkstk_darwin();
  OUTLINED_FUNCTION_1_31(v9, v10, v16);
  char v11 = OUTLINED_FUNCTION_86_14();
  specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( v11,  v12,  v13,  v14,  v15,  v5,  v1,  v17,  v8,  v7);
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_7_5();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 16))(v12, v2, v3);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v4;
  v11[4] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16LL))(boxed_opaque_existential_1, v6, v4);
  uint64_t v8 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  OUTLINED_FUNCTION_15_2(v8);
  swift_retain();
  uint64_t v9 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v11,  &async function pointer to partial apply for closure #1 in UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync(),  v1);
  __swift_destroy_boxed_opaque_existential_1(v12);
  return v9;
}

uint64_t closure #1 in UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int **)(*(void *)a2 + 152LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v7(a1);
}

uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedOutput()(uint64_t a1)
{
  void v2[3] = a1;
  v2[4] = v1;
  uint64_t v4 = OUTLINED_FUNCTION_82_0();
  v2[5] = v4;
  v2[6] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = (void *)swift_task_alloc(dword_43D25C);
  v2[7] = v5;
  *uint64_t v5 = v2;
  v5[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedOutput();
  return UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()(a1);
}

uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedOutput()()
{
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v1 = *(void *)(v0 + 64);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  uint64_t v2 = *(void *)(v0 + 48);
  swift_errorRetain(v1);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast(v2, v0 + 16, v3))
  {
    uint64_t v4 = *(void *)(v0 + 48);
    if (swift_getEnumCaseMultiPayload(v4, *(void *)(v0 + 40)) == 4)
    {
      swift_errorRelease(*(void *)(v0 + 64));
      outlined destroy of MainFlow(v4, type metadata accessor for PhoneError);
      uint64_t v5 = (void *)swift_task_alloc(dword_43D264);
      *(void *)(v0 + 72) = v5;
      *uint64_t v5 = v0;
      v5[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedOutput();
      return UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(*(void *)(v0 + 24));
    }

    outlined destroy of MainFlow(v4, type metadata accessor for PhoneError);
  }

  uint64_t v7 = OUTLINED_FUNCTION_170_0();
  swift_willThrow(v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_110_13();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(*(void *)v1 + 8OUTLINED_FUNCTION_25_0( v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallRecord7Builder_isCallerIdBlocked,  (uint64_t)v1, 0LL) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_110_13();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_110_13();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  v2[31] = *v1;
  uint64_t v3 = OUTLINED_FUNCTION_82_0();
  v2[32] = v3;
  v2[33] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  v2[34] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for TemplatingResult(0LL);
  v2[35] = v5;
  v2[36] = *(void *)(v5 - 8);
  v2[37] = OUTLINED_FUNCTION_28();
  v2[38] = OUTLINED_FUNCTION_28();
  v2[39] = OUTLINED_FUNCTION_28();
  v2[40] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  *(void *)(v1 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  uint64_t v4 = (os_log_s *)v3;
  Logger.logObject.getter(v3);
  os_log_type_t v5 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v6);
    OUTLINED_FUNCTION_33_52( &dword_0,  v4,  v7,  "#UnsupportedFaceTimeOutputProvider makeUnsupportedLegacyResponse: returning legacy unsupported dialog");
    OUTLINED_FUNCTION_0_2(v0);
  }

  uint64_t v8 = *(void *)(v1 + 240);

  int v9 = *(unsigned __int8 *)(v8 + 96);
  switch(v9)
  {
    case 12:
      uint64_t v15 = *(void **)(v1 + 240);
      uint64_t v16 = (void *)v15[14];
      OUTLINED_FUNCTION_50_6();
      __swift_project_boxed_opaque_existential_1(v15 + 2, v15[5]);
      OUTLINED_FUNCTION_7_3();
      uint64_t v12 = OUTLINED_FUNCTION_58_17((uint64_t)v40);
      *(void *)(v1 + 400) = v12;
      uint64_t v17 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for UnsupportedFlowCATs + *v16 + 200));
      *(void *)(v1 + 40__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v17;
      *uint64_t v17 = v1;
      v17[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
      uint64_t v14 = *(void *)(v1 + 296);
      return v39(v14, v12);
    case 9:
      uint64_t v18 = *(void *)(v1 + 240);
      ObjC metadata update function for StartCallCATs();
      OUTLINED_FUNCTION_126_7();
      uint64_t v19 = (void *)OUTLINED_FUNCTION_95_15();
      *(void *)(v1 + 36__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v19;
      OUTLINED_FUNCTION_50_6();
      __swift_project_boxed_opaque_existential_1((void *)(v18 + 16), *(void *)(v18 + 40));
      OUTLINED_FUNCTION_7_3();
      uint64_t v12 = OUTLINED_FUNCTION_58_17((uint64_t)v40);
      *(void *)(v1 + 376) = v12;
      uint64_t v20 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for StartCallCATs + *v19 + 1960));
      *(void *)(v1 + 38__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v20;
      void *v20 = v1;
      v20[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
      uint64_t v14 = *(void *)(v1 + 304);
      return v39(v14, v12);
    case 8:
      uint64_t v10 = *(void *)(v1 + 240);
      ObjC metadata update function for StartCallCATs();
      OUTLINED_FUNCTION_126_7();
      char v11 = (void *)OUTLINED_FUNCTION_95_15();
      *(void *)(v1 + 336) = v11;
      OUTLINED_FUNCTION_50_6();
      __swift_project_boxed_opaque_existential_1((void *)(v10 + 16), *(void *)(v10 + 40));
      OUTLINED_FUNCTION_7_3();
      uint64_t v12 = OUTLINED_FUNCTION_58_17((uint64_t)v40);
      *(void *)(v1 + 34__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v12;
      uint64_t v13 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for StartCallCATs + *v11 + 1928));
      *(void *)(v1 + 352) = v13;
      *uint64_t v13 = v1;
      v13[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
      uint64_t v14 = *(void *)(v1 + 312);
      return v39(v14, v12);
  }

  uint64_t v23 = *(void *)(v1 + 256);
  uint64_t v22 = *(void *)(v1 + 264);
  _StringGuts.grow(_:)(26LL);
  swift_bridgeObjectRelease();
  v40[0] = 0xD000000000000018LL;
  v40[1] = 0x8000000000350A60LL;
  v24._uint64_t countAndFlagsBits = UnsupportedPhoneCall.rawValue.getter(v9);
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v22 = 0xD000000000000018LL;
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x8000000000350A60LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v25;
  *(void *)(v22 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v26;
  OUTLINED_FUNCTION_179();
  *(void *)(v22 + 32) = v27;
  *(void *)(v22 + 40) = v28;
  *(void *)(v22 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 71LL;
  *(_BYTE *)(v22 + 56) = 0;
  swift_storeEnumTagMultiPayload(v22, v23, 2LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
  OUTLINED_FUNCTION_4_4(v23, v29);
  PhoneError.logged()(v30);
  outlined destroy of MainFlow(v22, type metadata accessor for PhoneError);
  swift_willThrow(v31, v32, v33, v34, v35, v36, v37, v38);
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_57_28(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 360) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release(*(void *)(v0 + 344));
    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  os_log_s *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  os_log_type_t v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_83_22(*(void *)(v1 + 288));
  uint64_t v3 = *(os_log_s **)(v2 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), (uint64_t)v3);
  OUTLINED_FUNCTION_7_3();
  if ((OUTLINED_FUNCTION_25_51() & 1) != 0)
  {
    OUTLINED_FUNCTION_90();
LABEL_4:
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_22_53();
    OUTLINED_FUNCTION_78_22();
    if ((v0 & 1) != 0)
    {
      if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
        swift_once( &one-time initialization token for siriPhoneFaceTimeMacExtension,  one-time initialization function for siriPhoneFaceTimeMacExtension);
      }
      uint64_t v4 = &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
    }

    else
    {
      if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
        swift_once( &one-time initialization token for siriPhoneFaceTimeExtension,  one-time initialization function for siriPhoneFaceTimeExtension);
      }
      uint64_t v4 = &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
    }

    OUTLINED_FUNCTION_17_62(v4);
    ObjC metadata update function for StartCallCATs();
    OUTLINED_FUNCTION_75_23();
    OUTLINED_FUNCTION_61_22();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_72_26();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_70_19();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_68_25();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    os_log_type_t v5 = OUTLINED_FUNCTION_63_24();
    OUTLINED_FUNCTION_8_2(v5, 16LL);
    uint64_t v6 = OUTLINED_FUNCTION_67_21();
    OUTLINED_FUNCTION_8_2(v6, 56LL);
    OUTLINED_FUNCTION_121_11();
    uint64_t v7 = OUTLINED_FUNCTION_74_20();
    OUTLINED_FUNCTION_15_2(v7);
    uint64_t v8 = OUTLINED_FUNCTION_12_81();
    OUTLINED_FUNCTION_5_95(v8);
    int v9 = OUTLINED_FUNCTION_49_29();
    OUTLINED_FUNCTION_42_25(v9);
    uint64_t v10 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v10))
    {
      char v11 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *char v11 = 0;
      OUTLINED_FUNCTION_34_35(&dword_0, v12, v13, "#UnsupportedFaceTimeOutputProvider Adding Open FaceTime button.");
      OUTLINED_FUNCTION_0_2((uint64_t)v11);
    }

    OUTLINED_FUNCTION_66_21();
    uint64_t v14 = (void *)OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_55_27(v14);
    uint64_t v15 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(void *)(v1 + 456) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
    *uint64_t v15 = v1;
    v15[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
    OUTLINED_FUNCTION_26_55();
    return OUTLINED_FUNCTION_10_72();
  }

  OUTLINED_FUNCTION_11_79();
  OUTLINED_FUNCTION_23_56();
  OUTLINED_FUNCTION_51_20();
  if ((v0 & 1) != 0) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_108_9();
  uint64_t v17 = OUTLINED_FUNCTION_234();
  if (OUTLINED_FUNCTION_48_32(v17))
  {
    uint64_t v18 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v18);
    OUTLINED_FUNCTION_33_52(&dword_0, v3, v19, "#UnsupportedFaceTimeOutputProvider No FaceTime button shown");
    OUTLINED_FUNCTION_0_2(v1 + 16);
  }

  OUTLINED_FUNCTION_65_17();
  uint64_t v20 = OUTLINED_FUNCTION_84_17();
  OUTLINED_FUNCTION_81(v20, (uint64_t)&protocol witness table for AceOutput);
  OUTLINED_FUNCTION_76_19();
  OUTLINED_FUNCTION_8_76();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  uint64_t v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_5_8(v21);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release(*(void *)(v0 + 376));
    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  os_log_s *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  os_log_type_t v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_83_22(*(void *)(v1 + 288));
  uint64_t v3 = *(os_log_s **)(v2 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), (uint64_t)v3);
  OUTLINED_FUNCTION_7_3();
  if ((OUTLINED_FUNCTION_25_51() & 1) != 0)
  {
    OUTLINED_FUNCTION_90();
LABEL_4:
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_22_53();
    OUTLINED_FUNCTION_78_22();
    if ((v0 & 1) != 0)
    {
      if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
        swift_once( &one-time initialization token for siriPhoneFaceTimeMacExtension,  one-time initialization function for siriPhoneFaceTimeMacExtension);
      }
      uint64_t v4 = &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
    }

    else
    {
      if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
        swift_once( &one-time initialization token for siriPhoneFaceTimeExtension,  one-time initialization function for siriPhoneFaceTimeExtension);
      }
      uint64_t v4 = &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
    }

    OUTLINED_FUNCTION_17_62(v4);
    ObjC metadata update function for StartCallCATs();
    OUTLINED_FUNCTION_75_23();
    OUTLINED_FUNCTION_61_22();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_72_26();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_70_19();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_68_25();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    os_log_type_t v5 = OUTLINED_FUNCTION_63_24();
    OUTLINED_FUNCTION_8_2(v5, 16LL);
    uint64_t v6 = OUTLINED_FUNCTION_67_21();
    OUTLINED_FUNCTION_8_2(v6, 56LL);
    OUTLINED_FUNCTION_121_11();
    uint64_t v7 = OUTLINED_FUNCTION_74_20();
    OUTLINED_FUNCTION_15_2(v7);
    uint64_t v8 = OUTLINED_FUNCTION_12_81();
    OUTLINED_FUNCTION_5_95(v8);
    int v9 = OUTLINED_FUNCTION_49_29();
    OUTLINED_FUNCTION_42_25(v9);
    uint64_t v10 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v10))
    {
      char v11 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *char v11 = 0;
      OUTLINED_FUNCTION_34_35(&dword_0, v12, v13, "#UnsupportedFaceTimeOutputProvider Adding Open FaceTime button.");
      OUTLINED_FUNCTION_0_2((uint64_t)v11);
    }

    OUTLINED_FUNCTION_66_21();
    uint64_t v14 = (void *)OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_55_27(v14);
    uint64_t v15 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(void *)(v1 + 456) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
    *uint64_t v15 = v1;
    v15[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
    OUTLINED_FUNCTION_26_55();
    return OUTLINED_FUNCTION_10_72();
  }

  OUTLINED_FUNCTION_11_79();
  OUTLINED_FUNCTION_23_56();
  OUTLINED_FUNCTION_51_20();
  if ((v0 & 1) != 0) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_108_9();
  uint64_t v17 = OUTLINED_FUNCTION_234();
  if (OUTLINED_FUNCTION_48_32(v17))
  {
    uint64_t v18 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v18);
    OUTLINED_FUNCTION_33_52(&dword_0, v3, v19, "#UnsupportedFaceTimeOutputProvider No FaceTime button shown");
    OUTLINED_FUNCTION_0_2(v1 + 16);
  }

  OUTLINED_FUNCTION_65_17();
  uint64_t v20 = OUTLINED_FUNCTION_84_17();
  OUTLINED_FUNCTION_81(v20, (uint64_t)&protocol witness table for AceOutput);
  OUTLINED_FUNCTION_76_19();
  OUTLINED_FUNCTION_8_76();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  uint64_t v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_5_8(v21);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  swift_task_dealloc();
  if (!v1) {
    swift_release(*(void *)(v0 + 400));
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  os_log_s *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  os_log_type_t v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_83_22(*(void *)(v1 + 288));
  uint64_t v3 = *(os_log_s **)(v2 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), (uint64_t)v3);
  OUTLINED_FUNCTION_7_3();
  if ((OUTLINED_FUNCTION_25_51() & 1) != 0)
  {
    OUTLINED_FUNCTION_90();
LABEL_4:
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_22_53();
    OUTLINED_FUNCTION_78_22();
    if ((v0 & 1) != 0)
    {
      if (one-time initialization token for siriPhoneFaceTimeMacExtension != -1) {
        swift_once( &one-time initialization token for siriPhoneFaceTimeMacExtension,  one-time initialization function for siriPhoneFaceTimeMacExtension);
      }
      uint64_t v4 = &static DefaultPhoneApps.siriPhoneFaceTimeMacExtension;
    }

    else
    {
      if (one-time initialization token for siriPhoneFaceTimeExtension != -1) {
        swift_once( &one-time initialization token for siriPhoneFaceTimeExtension,  one-time initialization function for siriPhoneFaceTimeExtension);
      }
      uint64_t v4 = &static DefaultPhoneApps.siriPhoneFaceTimeExtension;
    }

    OUTLINED_FUNCTION_17_62(v4);
    ObjC metadata update function for StartCallCATs();
    OUTLINED_FUNCTION_75_23();
    OUTLINED_FUNCTION_61_22();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_72_26();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_70_19();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    OUTLINED_FUNCTION_68_25();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_97_4();
    os_log_type_t v5 = OUTLINED_FUNCTION_63_24();
    OUTLINED_FUNCTION_8_2(v5, 16LL);
    uint64_t v6 = OUTLINED_FUNCTION_67_21();
    OUTLINED_FUNCTION_8_2(v6, 56LL);
    OUTLINED_FUNCTION_121_11();
    uint64_t v7 = OUTLINED_FUNCTION_74_20();
    OUTLINED_FUNCTION_15_2(v7);
    uint64_t v8 = OUTLINED_FUNCTION_12_81();
    OUTLINED_FUNCTION_5_95(v8);
    int v9 = OUTLINED_FUNCTION_49_29();
    OUTLINED_FUNCTION_42_25(v9);
    uint64_t v10 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v10))
    {
      char v11 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *char v11 = 0;
      OUTLINED_FUNCTION_34_35(&dword_0, v12, v13, "#UnsupportedFaceTimeOutputProvider Adding Open FaceTime button.");
      OUTLINED_FUNCTION_0_2((uint64_t)v11);
    }

    OUTLINED_FUNCTION_66_21();
    uint64_t v14 = (void *)OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_55_27(v14);
    uint64_t v15 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(void *)(v1 + 456) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
    *uint64_t v15 = v1;
    v15[1] = UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse();
    OUTLINED_FUNCTION_26_55();
    return OUTLINED_FUNCTION_10_72();
  }

  OUTLINED_FUNCTION_11_79();
  OUTLINED_FUNCTION_23_56();
  OUTLINED_FUNCTION_51_20();
  if ((v0 & 1) != 0) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_108_9();
  uint64_t v17 = OUTLINED_FUNCTION_234();
  if (OUTLINED_FUNCTION_48_32(v17))
  {
    uint64_t v18 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v18);
    OUTLINED_FUNCTION_33_52(&dword_0, v3, v19, "#UnsupportedFaceTimeOutputProvider No FaceTime button shown");
    OUTLINED_FUNCTION_0_2(v1 + 16);
  }

  OUTLINED_FUNCTION_65_17();
  uint64_t v20 = OUTLINED_FUNCTION_84_17();
  OUTLINED_FUNCTION_81(v20, (uint64_t)&protocol witness table for AceOutput);
  OUTLINED_FUNCTION_76_19();
  OUTLINED_FUNCTION_8_76();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  uint64_t v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_5_8(v21);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 46__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  os_log_type_t v12;
  _DWORD *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v1 = v0[27];
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0) {
      uint64_t v21 = v0[27];
    }
    else {
      uint64_t v21 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter(v21)) {
      goto LABEL_3;
    }
LABEL_14:
    OUTLINED_FUNCTION_39();
    goto LABEL_15;
  }

  uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v1 & 0xC000000000000001LL) == 0, v1);
  if ((v1 & 0xC000000000000001LL) != 0) {
    uint64_t v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v1);
  }
  else {
    uint64_t v3 = *(id *)(v1 + 32);
  }
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_39();
  os_log_type_t v5 = objc_opt_self(&OBJC_CLASS___SAUIDialogPunchout);
  uint64_t v6 = swift_dynamicCastObjCClass(v4, v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    static UnsupportedFaceTimeOutputProvider.makeAssistantUtteranceViewForTemplatingResultOnAppleTV(template:)();
    int v9 = v8;
    [v7 setUtteranceView:v8];

    uint64_t v10 = v4;
    char v11 = (void *)Logger.logObject.getter(v10);
    uint64_t v12 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_93(v12))
    {
      uint64_t v13 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v28 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v29 = v28;
      *uint64_t v13 = 136315138;
      uint64_t v14 = v10;
      uint64_t v15 = [v7 description];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      uint64_t v18 = v17;

      v0[28] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 28, v0 + 29, v13 + 1);
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_34_16(&dword_0, v19, v20, "#UnsupportedFaceTimeOutputProvider Punchout button for apple tv: %s");
      OUTLINED_FUNCTION_17_0(v28);
      OUTLINED_FUNCTION_0_2(v28);
      OUTLINED_FUNCTION_0_2((uint64_t)v13);
    }

    else
    {
    }
  }

  else
  {
  }

{
  uint64_t v0;
  OUTLINED_FUNCTION_82_19();
  swift_release(*(void *)(v0 + 344));
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_31_42();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_73(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_82_19();
  swift_release(*(void *)(v0 + 376));
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_31_42();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_73(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_82_19();
  swift_release(*(void *)(v0 + 400));
  OUTLINED_FUNCTION_31_42();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_73(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_82_19();
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 288);
  swift_release(*(void *)(v0 + 440));
  OUTLINED_FUNCTION_38_1();
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_31_42();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_73(*(uint64_t (**)(void))(v0 + 8));
}

void *closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  v20[3] = type metadata accessor for StartCallCatTemplatingService(0LL);
  v20[4] = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
  v20[0] = a3;
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp,  &OBJC_CLASS___SAAppsLaunchApp_ptr);
  swift_retain();
  uint64_t v11 = swift_retain();
  SAAppsLaunchApp.init(app:)(v11);
  uint64_t v13 = v12;
  outlined init with copy of SharedGlobalsProviding(a4 + 16, (uint64_t)v19);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v20, (uint64_t)&v21);
  uint64_t v14 = swift_allocObject(&unk_412B10, 64LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(&v21, v14 + 16);
  *(void *)(v14 + 56) = a2;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(v20);
  *(void *)&__int128 v21 = partial apply for closure #1 in ErrorButtonLabelOptions.getTemplatingFunction(templatingService:);
  *((void *)&v21 + 1) = v14;
  uint64_t v22 = v13;
  outlined init with take of AppSelectionSignalComponent(v19, (uint64_t)&v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))( (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v8);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (v15 + 16) & ~v15;
  uint64_t v17 = swift_allocObject(&unk_412B38, v16 + v10, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))( v17 + v16,  (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v8);
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( (unint64_t)_swiftEmptyArrayStorage,  (void (*)(void, void))partial apply for closure #1 in closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v17);
  swift_release(v17);
  return outlined destroy of ButtonBuilder(&v21);
}

void static UnsupportedFaceTimeOutputProvider.makeAssistantUtteranceViewForTemplatingResultOnAppleTV(template:)()
{
  uint64_t v59 = v1;
  uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v52 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v52 - v4;
  uint64_t v5 = type metadata accessor for TemplatingText(0LL);
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = (uint8_t *)v5;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TemplatingSection?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v8 = type metadata accessor for TemplatingSection(0LL);
  uint64_t v53 = *(void *)(v8 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v15 = [objc_allocWithZone(SAUIAssistantUtteranceView) init];
  uint64_t v16 = UUID.init()(v15);
  uint64_t v17 = UUID.uuidString.getter(v16);
  uint64_t v19 = v18;
  uint64_t v20 = v14;
  uint64_t v21 = v59;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  OUTLINED_FUNCTION_103_9(v17, v19, v22, (SEL *)&selRef_setAceId_);

  uint64_t v24 = TemplatingResult.templateIdentifier.getter(v23);
  OUTLINED_FUNCTION_103_9(v24, v25, v26, (SEL *)&selRef_setDialogIdentifier_);
  TemplatingResult.sections.getter(v27);
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v0, 1LL, v8) == 1)
  {
    outlined destroy of UUID?(v0, &demangling cache variable for type metadata for TemplatingSection?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v28 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = (uint64_t)v56;
    uint64_t v30 = v57;
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 16);
    uint64_t v32 = v58;
    uint64_t v33 = v31(v56, v21, v58);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v59 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v61 = v59;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v55 = v36 + 4;
      uint64_t v37 = v52;
      v31(v52, v29, v32);
      uint64_t v38 = String.init<A>(describing:)(v37, v32);
      uint64_t v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v55);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_21_21(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
      _os_log_impl( &dword_0,  v34,  v35,  "Received an invalid templatingResult while rendering SAUIDialogPunchout: %s",  v36,  0xCu);
      uint64_t v40 = v59;
      OUTLINED_FUNCTION_17_0(v59);
      OUTLINED_FUNCTION_0_2(v40);
      OUTLINED_FUNCTION_0_2((uint64_t)v36);
    }

    else
    {
      OUTLINED_FUNCTION_21_21(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    }
  }

  else
  {
    uint64_t v41 = v53;
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 32))(v10, v0, v8);
    uint64_t v43 = TemplatingSection.content.getter(v42);
    uint64_t v44 = TemplatingText.text.getter(v43);
    uint64_t v46 = v45;
    (*(void (**)(char *, uint8_t *))(v54 + 8))(v7, v55);
    OUTLINED_FUNCTION_103_9(v44, v46, v47, (SEL *)&selRef_setText_);
    uint64_t v48 = OUTLINED_FUNCTION_21_21((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
  }

  OUTLINED_FUNCTION_119_6(v48, "setCanUseServerTTS:");
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for NSNumber,  &OBJC_CLASS___NSNumber_ptr);
  id v49 = v15;
  Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  [v49 setListenAfterSpeaking:isa];

  OUTLINED_FUNCTION_119_6(v51, "setCanBeRefreshed:");
  OUTLINED_FUNCTION_7_5();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText()()
{
  v1[12] = v0;
  uint64_t v2 = type metadata accessor for Locale(0LL);
  v1[13] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[14] = v3;
  v1[15] = OUTLINED_FUNCTION_23(v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[16] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t (*v23)(void);
  uint64_t v1 = v0[15];
  uint64_t v20 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v21 = v0[13];
  type metadata accessor for App(0LL);
  uint64_t v3 = App.__allocating_init(appIdentifier:)(0xD000000000000012LL, 0x80000000003479B0LL);
  v0[17] = v3;
  OUTLINED_FUNCTION_81_20();
  OUTLINED_FUNCTION_85();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v22 = v0 + 2;
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(v2 + 48);
  OUTLINED_FUNCTION_4_35();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  OUTLINED_FUNCTION_4_35();
  dispatch thunk of DeviceState.siriLocale.getter(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v1, v4, v5);
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v21);
  __swift_destroy_boxed_opaque_existential_1(v0 + 7);
  uint64_t v12 = v0[16];
  if (v11)
  {
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for SpeakableString(0LL);
    OUTLINED_FUNCTION_88(v12, 0LL, v14, v13);
    __swift_destroy_boxed_opaque_existential_1(v22);
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1(v22);
    id v15 = type metadata accessor for SpeakableString(0LL);
    OUTLINED_FUNCTION_88(v12, 1LL, v16, v15);
  }

  uint64_t v17 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + **(void **)(v0[12] + 128LL) + 24);
  uint64_t v23 = (uint64_t (*)(void))((char *)v17 + *v17);
  uint64_t v18 = (void *)swift_task_alloc(v17[1]);
  v0[18] = v18;
  char *v18 = v0;
  v18[1] = UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText();
  return v23(v0[16]);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_82_19();
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v4 = dispatch thunk of LabelExecutionResult.subscript.getter(v3);
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_38_1();
  swift_release(v1);
  outlined destroy of UUID?(v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release(*(void *)(v0 + 136));
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText()(uint64_t a1)
{
  uint64_t v9 = *v2;
  uint64_t v4 = v9;
  OUTLINED_FUNCTION_39_0(&v9);
  *(void *)(v4 + 152) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v4 + 160) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v5, v6, v7);
}

uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()(uint64_t a1)
{
  v2[23] = a1;
  _BYTE v2[24] = v1;
  uint64_t v3 = OUTLINED_FUNCTION_82_0();
  v2[25] = v3;
  v2[26] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v2[27] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[28] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[29] = v6;
  v2[30] = OUTLINED_FUNCTION_23(v6);
  uint64_t v7 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v2[31] = v7;
  v2[32] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = *(void *)(type metadata accessor for ButtonConfigurationModel(0LL) - 8);
  v2[33] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[34] = swift_task_alloc(v9);
  v2[35] = swift_task_alloc(v9);
  uint64_t v10 = (void *)swift_task_alloc(dword_43D29C);
  v2[36] = v10;
  *uint64_t v10 = v2;
  v10[1] = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
  return UnsupportedFaceTimeOutputProvider.makeFaceTimeSettingsButtonText()();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()()
{
  v2[12] = v1;
  v2[13] = v3;
  v2[14] = v4;
  v2[15] = v0;
  OUTLINED_FUNCTION_39_0(v5);
  v2[37] = v6;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_36_38();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    return OUTLINED_FUNCTION_6_73(*(uint64_t (**)(void))(v1 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)();
  void *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  OUTLINED_FUNCTION_193_2();
  uint64_t v44 = v1;
  uint64_t v45 = v2;
  uint64_t v43 = v0;
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 96);
  if (v4 == 9)
  {
    unint64_t v9 = *(void **)(v3 + 120);
    OUTLINED_FUNCTION_50_6();
    __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
    OUTLINED_FUNCTION_7_3();
    uint64_t v6 = OUTLINED_FUNCTION_58_17((uint64_t)&v41);
    *(void *)(v0 + 320) = v6;
    uint64_t v7 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple + *v9 + 976));
    *(void *)(v0 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
    uint64_t v8 = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
    goto LABEL_5;
  }

  if (v4 == 8)
  {
    uint64_t v5 = *(void **)(v3 + 120);
    OUTLINED_FUNCTION_50_6();
    __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
    OUTLINED_FUNCTION_7_3();
    uint64_t v6 = OUTLINED_FUNCTION_58_17((uint64_t)&v41);
    *(void *)(v0 + 30__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v6;
    uint64_t v7 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple + *v5 + 960));
    *(void *)(v0 + 312) = v7;
    uint64_t v8 = UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput();
LABEL_5:
    *uint64_t v7 = v0;
    v7[1] = v8;
    return v40(v6);
  }

  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = swift_retain_n(v11, 2LL);
  uint64_t v14 = (void *)Logger.logObject.getter(v13);
  id v15 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_93(v15))
  {
    uint64_t v16 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v17 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v41 = v17;
    *uint64_t v16 = 136315138;
    uint64_t v18 = specialized String.init<A>(describing:)(v4);
    *(void *)(v0 + 176) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v16 + 1);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_16();
    OUTLINED_FUNCTION_34_16( &dword_0,  v20,  v21,  "#UnsupportedFaceTimeOutputProvider makeUnsupportedOutput: the dialog for %s hasn't been migrated to Response Framework.");
    OUTLINED_FUNCTION_17_0(v17);
    OUTLINED_FUNCTION_0_2(v17);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  else
  {
    OUTLINED_FUNCTION_3_16();
  }

  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v22 = *(void **)(v0 + 208);
  uint64_t v41 = 0LL;
  uint64_t v42 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(21LL);
  swift_bridgeObjectRelease();
  uint64_t v41 = 0xD000000000000013LL;
  uint64_t v42 = 0x8000000000350AF0LL;
  v24._uint64_t countAndFlagsBits = UnsupportedPhoneCall.rawValue.getter(v4);
  String.append(_:)(v24);
  OUTLINED_FUNCTION_39();
  uint64_t v25 = v42;
  *uint64_t v22 = v41;
  v22[1] = v25;
  OUTLINED_FUNCTION_179();
  __int128 v22[2] = v26;
  void v22[3] = v27;
  OUTLINED_FUNCTION_179();
  v22[4] = v28;
  v22[5] = v29;
  v22[6] = 125LL;
  swift_storeEnumTagMultiPayload(v22, v23, 4LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
  OUTLINED_FUNCTION_4_4(v23, v30);
  PhoneError.logged()(v31);
  outlined destroy of MainFlow((uint64_t)v22, type metadata accessor for PhoneError);
  swift_willThrow(v32, v33, v34, v35, v36, v37, v38, v39);
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  OUTLINED_FUNCTION_82_19();
  OUTLINED_FUNCTION_93_15();
  v2[16] = v1;
  v2[17] = v3;
  v2[18] = v0;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_22_9(v2[39], v5);
  swift_release(v2[38]);
  if (v0)
  {
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_36_38();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    return OUTLINED_FUNCTION_6_73(*(uint64_t (**)(void))(v4 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[32];
  uint64_t v5 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v6 = v0[28];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  outlined destroy of MainFlow(v3, type metadata accessor for PhoneSnippetDataModels);
  outlined destroy of MainFlow(v2, type metadata accessor for ButtonConfigurationModel);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v7();
}

#error "275A94: call analysis failed (funcsize=69)"
uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  OUTLINED_FUNCTION_82_19();
  OUTLINED_FUNCTION_93_15();
  v2[19] = v1;
  v2[20] = v3;
  v2[21] = v0;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_22_9(v2[41], v5);
  swift_release(v2[40]);
  if (v0)
  {
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_36_38();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    return OUTLINED_FUNCTION_6_73(*(uint64_t (**)(void))(v4 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

#error "275C5C: call analysis failed (funcsize=69)"
uint64_t UnsupportedFaceTimeOutputProvider.makeUnsupportedRFOutput()()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;
  uint64_t v3 = *v0;
  uint64_t v1 = (void *)(v3 + 56);
  OUTLINED_FUNCTION_22_9(*(void *)(v3 + 352), &v3);
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)()
{
  uint64_t v20 = v2;
  uint64_t v21 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_81_20();
  OUTLINED_FUNCTION_85();
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  OUTLINED_FUNCTION_81_20();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v17, v9, v8);
  uint64_t v10 = v18;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  char v11 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v10);
  uint64_t v12 = type metadata accessor for NLContextUpdate(0LL);
  OUTLINED_FUNCTION_88(v1, 1LL, v13, v12);
  uint64_t v16 = 0LL;
  memset(v15, 0, sizeof(v15));
  ((void (*)(uint64_t, void *, void, uint64_t, void, void, uint64_t, void *, _BYTE *))static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:))( v7,  v19,  v11 & 1,  v5,  0LL,  0LL,  v1,  _swiftEmptyArrayStorage,  v15);
  outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of UUID?(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1(v19);
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

void *UnsupportedFaceTimeOutputProvider.deinit()
{
  return v0;
}

uint64_t UnsupportedFaceTimeOutputProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

void outlined bridged method (mbnn) of @objc SABaseAceObject.aceId.setter( uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, *a4, v7);
}

uint64_t specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( char a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a8 + 80) = a9;
  *(void *)(a8 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(a8 + 56));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32LL))(boxed_opaque_existential_1, a7, a9);
  *(_BYTE *)(a8 + 96) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, a8 + 16);
  *(void *)(a8 + 120) = a4;
  *(void *)(a8 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a5;
  *(void *)(a8 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a3;
  *(void *)(a8 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  return a8;
}

uint64_t partial apply for closure #1 in UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()( uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_43D244);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in UnsupportedFaceTimeOutputProvider.makeSimpleOutputFlowAsync()(a1, v1);
}

uint64_t type metadata accessor for UnsupportedFaceTimeOutputProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin33UnsupportedFaceTimeOutputProvider);
}

void *partial apply for closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()( uint64_t a1)
{
  return closure #1 in UnsupportedFaceTimeOutputProvider.makeLegacyUnsupportedResponse()(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_27610C()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_276138()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void *outlined destroy of ButtonBuilder(void *a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_94()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_8_76()
{
  return (*(uint64_t (**)(void, void))(v0[36] + 8LL))(v0[40], v0[35]);
}

uint64_t OUTLINED_FUNCTION_10_72()
{
  return ((uint64_t (*)(void))withCheckedThrowingContinuation<A>(isolation:function:_:))();
}

uint64_t OUTLINED_FUNCTION_11_79()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_12_81()
{
  return specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)();
}

void OUTLINED_FUNCTION_17_62(void *a1@<X8>)
{
  *(void *)(v3 + 42__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *a1;
  outlined init with copy of SharedGlobalsProviding(v1, v2);
}

id OUTLINED_FUNCTION_20_59@<X0>(void *a1@<X8>)
{
  *(void *)(v1 + 336) = a1;
  return a1;
}

uint64_t OUTLINED_FUNCTION_22_53()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return dispatch thunk of DeviceState.isMac.getter(v2, v3);
}

uint64_t OUTLINED_FUNCTION_23_56()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return dispatch thunk of DeviceState.isAppleTV.getter(v2, v3);
}

uint64_t OUTLINED_FUNCTION_26_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_42()
{
  return swift_task_dealloc(*(void *)(v0 + 320));
}

uint64_t OUTLINED_FUNCTION_32_46()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:))();
}

void OUTLINED_FUNCTION_33_52(void *a1, os_log_s *a2, uint64_t a3, const char *a4)
{
}

void OUTLINED_FUNCTION_34_35(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_36_38()
{
  return swift_task_dealloc(*(void *)(v0 + 280));
}

uint64_t OUTLINED_FUNCTION_38_36()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_42_25(uint64_t a1)
{
  *(void *)(v2 + 440) = a1;
  uint64_t v3 = __swift_destroy_boxed_opaque_existential_1(v1);
  return Logger.logObject.getter(v3);
}

void OUTLINED_FUNCTION_43_29(uint64_t a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_45_28(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 184);
}

BOOL OUTLINED_FUNCTION_48_32(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_49_29()
{
  return static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( v1,  2LL,  v0);
}

uint64_t OUTLINED_FUNCTION_51_20()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_52_27()
{
  *(void *)uint64_t v1 = v0;
  *(_BYTE *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1;
  return swift_storeEnumTagMultiPayload(v1, v2, 6LL);
}

uint64_t OUTLINED_FUNCTION_53_28(uint64_t a1)
{
  return swift_allocObject( a1,  ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
         + *(void *)(v1 + 72),
           *(unsigned __int8 *)(v1 + 80) | 7LL);
}

void *OUTLINED_FUNCTION_55_27(void *result)
{
  *(void *)(v2 + 44__swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  result[2] = v1;
  result[3] = v3;
  result[4] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_58_24( __n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  a1[1] = a5;
  a1[2].n128_u64[0] = a14;
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_63_24()
{
  return type metadata accessor for AppInfoBuilder();
}

uint64_t OUTLINED_FUNCTION_67_21()
{
  return type metadata accessor for TemplatingOperationManager();
}

uint64_t OUTLINED_FUNCTION_68_25()
{
  return type metadata accessor for UnsupportedFlowCATs(0LL);
}

uint64_t OUTLINED_FUNCTION_70_19()
{
  return type metadata accessor for PhoneCallCommonCATs(0LL);
}

uint64_t OUTLINED_FUNCTION_72_26()
{
  return type metadata accessor for PhoneCallDisplayTextCATs(0LL);
}

uint64_t OUTLINED_FUNCTION_74_20()
{
  return type metadata accessor for StartCallCatTemplatingService(0LL);
}

uint64_t OUTLINED_FUNCTION_75_23()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_76_19()
{
  return UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)();
}

uint64_t OUTLINED_FUNCTION_78_22()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

void *OUTLINED_FUNCTION_81_20()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_83_22@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t OUTLINED_FUNCTION_84_17()
{
  return type metadata accessor for AceOutput(0LL);
}

uint64_t OUTLINED_FUNCTION_85_14()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_86_14()
{
  return v0;
}

void *OUTLINED_FUNCTION_88_22( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  *(void *)(v12 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return __swift_allocate_boxed_opaque_existential_1(a12);
}

void OUTLINED_FUNCTION_89_18(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_90_16(uint64_t a1, uint64_t a2)
{
  return OutputGenerationManifest.init(dialogPhase:_:)(v3, a2, v2);
}

void OUTLINED_FUNCTION_93_15()
{
  *(void *)(v1 - __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_99_11(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return outlined init with take of ButtonConfigurationModel(v3, (uint64_t)a1 + v2);
}

void OUTLINED_FUNCTION_103_9(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
}

uint64_t OUTLINED_FUNCTION_110_13()
{
  return swift_task_dealloc(*(void *)(v0 + 48));
}

void *OUTLINED_FUNCTION_116_9()
{
  __n128 result = __swift_project_boxed_opaque_existential_1(v1, *(void *)(v0 + 40));
  *(void *)(v0 + 80) = v2;
  return result;
}

void OUTLINED_FUNCTION_120_10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
}

void *OUTLINED_FUNCTION_121_11()
{
  return TemplatingOperationManager.init()();
}

  ;
}

void OUTLINED_FUNCTION_123_6()
{
}

uint64_t OUTLINED_FUNCTION_126_7()
{
  return static CATOption.defaultMode.getter();
}

void PhoneCallRecord.__allocating_init(callRecord:options:appInfoBuilder:locale:)( char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v9 = a3[3];
  uint64_t v10 = a3[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a3, v9);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  (*(void (**)(uint64_t))(v14 + 16))(v12 - v11);
  specialized PhoneCallRecord.__allocating_init(callRecord:options:appInfoBuilder:locale:)(a1, a2, v13, a4, v4, v9, v10);
  __swift_destroy_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_58();
}

void *PhoneCallRecord.Options.callHistoryForDisplay.unsafeMutableAddressor()
{
  return &static PhoneCallRecord.Options.callHistoryForDisplay;
}

void *PhoneCallRecord.Options.announceCalls.unsafeMutableAddressor()
{
  return &static PhoneCallRecord.Options.announceCalls;
}

unint64_t PhoneCallRecord.Options.description.getter(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 1) == 0)
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }

  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  1LL,  1LL,  (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = v3;
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1)
  {
    OUTLINED_FUNCTION_1_25(v4 > 1, v5 + 1);
    uint64_t v2 = v11;
  }

  void v2[2] = v5 + 1;
  uint64_t v6 = &v2[2 * v5];
  v6[4] = 0xD000000000000016LL;
  v6[5] = 0x8000000000350B30LL;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    {
      OUTLINED_FUNCTION_1_25(0LL, v2[2] + 1LL);
      uint64_t v2 = v12;
    }

    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    unint64_t v1 = v8 + 1;
    if (v8 >= v7 >> 1)
    {
      OUTLINED_FUNCTION_1_25(v7 > 1, v8 + 1);
      uint64_t v2 = v13;
    }

    void v2[2] = v1;
    uint64_t v9 = (char *)&v2[2 * v8];
    strcpy(v9 + 32, ".announceCalls");
    v9[47] = -18;
  }

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallRecord.Options()
{
  return PhoneCallRecord.Options.description.getter(*v0);
}

void protocol witness for SetAlgebra.symmetricDifference(_:) in conformance PhoneCallRecord.Options( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = specialized OptionSet.symmetricDifference(_:)(*a1, *v2);
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for SetAlgebra.insert(_:) in conformance PhoneCallRecord.Options( uint64_t a1, void *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

uint64_t protocol witness for SetAlgebra.remove(_:) in conformance PhoneCallRecord.Options@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.remove(_:)(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.update(with:) in conformance PhoneCallRecord.Options@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.update(with:)(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.formUnion(_:) in conformance PhoneCallRecord.Options(void *a1)
{
  return specialized OptionSet<>.formUnion(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance PhoneCallRecord.Options( void *a1)
{
  return specialized OptionSet<>.formSymmetricDifference(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.subtracting(_:) in conformance PhoneCallRecord.Options@<X0>( void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized SetAlgebra.subtracting(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.isDisjoint(with:) in conformance PhoneCallRecord.Options(void *a1)
{
  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

uint64_t protocol witness for SetAlgebra.subtract(_:) in conformance PhoneCallRecord.Options(void *a1)
{
  return specialized SetAlgebra.subtract(_:)(*a1);
}

uint64_t protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance PhoneCallRecord.Options@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = specialized SetAlgebra<>.init(arrayLiteral:)();
  *a1 = result;
  return result;
}

uint64_t static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)( char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a3, v8);
  return specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)( a1,  a2,  v10,  a4,  v4,  v8,  v9);
}

uint64_t specialized Double.init<A>(exactly:)(uint64_t result)
{
  double v1 = (double)result;
  if ((double)result >= 9.22337204e18)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }

  if ((~*(void *)&v1 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v1 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }

  else {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t *PhoneCallRecord.description.getter()
{
  uint64_t v0 = type metadata accessor for PhoneCallRecord(0LL);
  unint64_t v1 = lazy protocol witness table accessor for type PhoneCallRecord and conformance PhoneCallRecord();
  uint64_t v2 = CATType.toDictionary.getter(v0, v1);
  Dictionary.description.getter( v2,  &type metadata for String,  &type metadata for Any[1],  &protocol witness table for String);
  OUTLINED_FUNCTION_3_110();
  return &v4;
}

uint64_t *protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallRecord()
{
  return PhoneCallRecord.description.getter();
}

uint64_t outlined bridged method (ob) of @objc INPerson.alternatives.getter(void *a1)
{
  id v2 = [a1 alternatives];

  if (!v2) {
    return 0LL;
  }
  unint64_t v3 = type metadata accessor for INPerson();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

void specialized PhoneCallRecord.__allocating_init(callRecord:options:appInfoBuilder:locale:)( char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = (void *)(v15 - v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v15 - v14, v17, v18);
  uint64_t v19 = specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)( a1,  a2,  v16,  a4,  a5,  a6,  a7);
  (*(void (**)(uint64_t))(a5 + 320))(v19);

  uint64_t v20 = type metadata accessor for Locale(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8LL))(a4, v20);
  (*(void (**)(void *, uint64_t))(v13 + 8))(v16, a6);
  OUTLINED_FUNCTION_58();
}

uint64_t specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)( char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v246 = (char *)a4;
  uint64_t v247 = a6;
  uint64_t v248 = a3;
  uint64_t v238 = a2;
  uint64_t v9 = type metadata accessor for Locale(0LL);
  uint64_t v250 = *(void *)(v9 - 8);
  uint64_t v251 = v9;
  __chkstk_darwin();
  uint64_t v249 = (char *)&v224 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v227 = (char *)&v224 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SpeakableString(0LL);
  uint64_t v245 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v233 = (uint64_t)&v224 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v244 = (char *)&v224 - v14;
  __chkstk_darwin();
  v241 = (char *)&v224 - v15;
  __chkstk_darwin();
  v240 = (char *)&v224 - v16;
  __chkstk_darwin();
  v243 = (char *)&v224 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v224 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Date(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin();
  v242 = (char *)&v224 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v224 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v224 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v228 = (char *)&v224 - v27;
  __chkstk_darwin();
  uint64_t v226 = (uint64_t)&v224 - v28;
  __chkstk_darwin();
  uint64_t v230 = (uint64_t)&v224 - v29;
  __chkstk_darwin();
  v232 = (char *)&v224 - v30;
  __chkstk_darwin();
  uint64_t v231 = (char *)&v224 - v31;
  __chkstk_darwin();
  v229 = (char *)&v224 - v32;
  __chkstk_darwin();
  v239 = (char *)&v224 - v33;
  __chkstk_darwin();
  os_log_type_t v35 = (char *)&v224 - v34;
  type metadata accessor for App(0LL);
  outlined bridged method (pb) of @objc INCallRecord.providerBundleId.getter(a1);
  uint64_t v234 = App.__allocating_init(appIdentifier:)(v36, v37);
  uint64_t v38 = AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)(v234, (uint64_t)v246, v247, a7);
  if (v39)
  {
    uint64_t v40 = v38;
    uint64_t v41 = v39;
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)(v40, v41, 0LL, 0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0LL, 1LL, v12);
    swift_bridgeObjectRelease();
  }

  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 1LL, 1LL, v12);
  }

  id v42 = [a1 dateCreated];
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v44 = v242;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v45(v19, v44, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0LL, 1LL, v20);
    uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v20);
    if ((_DWORD)EnumTagSinglePayload != 1)
    {
      v45(v24, v19, v20);
      goto LABEL_9;
    }
  }

  else
  {
    uint64_t EnumTagSinglePayload = __swift_storeEnumTagSinglePayload((uint64_t)v19, 1LL, 1LL, v20);
  }

  Date.init()(EnumTagSinglePayload);
  outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Date?);
LABEL_9:
  type metadata accessor for DialogCalendar(0LL);
  uint64_t v237 = static DialogCalendar.make(date:)((uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  if ([a1 callRecordType])
  {
    uint64_t BackingType = INCallRecordTypeGetBackingType();
    switch((int)BackingType)
    {
      case 2:
        uint64_t v48 = @"OUTGOING";
        goto LABEL_21;
      case 3:
        uint64_t v48 = @"MISSED";
        goto LABEL_21;
      case 4:
        uint64_t v48 = @"RECEIVED";
        goto LABEL_21;
      case 5:
        uint64_t v48 = @"LATEST";
        goto LABEL_21;
      case 7:
        uint64_t v48 = @"VOICEMAIL";
        goto LABEL_21;
      case 8:
        uint64_t v48 = @"RINGING";
        goto LABEL_21;
      case 9:
        uint64_t v48 = @"IN_PROGRESS";
        goto LABEL_21;
      case 10:
        uint64_t v48 = @"ON_HOLD";
LABEL_21:
        uint64_t v51 = v48;
        break;
      default:
        uint64_t v48 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        break;
    }

    uint64_t v52 = v48;
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    unint64_t v49 = v53;
  }

  else
  {
    unint64_t v49 = 0xE700000000000000LL;
    uint64_t v50 = 0x4E574F4E4B4E55LL;
  }

  SpeakableString.init(serializedValue:)(v50, v49);
  SpeakableString.init(print:speak:)(0LL, 0xE000000000000000LL, 0LL, 0LL);
  SpeakableString.init(print:speak:)(0LL, 0xE000000000000000LL, 0LL, 0LL);
  outlined bridged method (pb) of @objc INCallRecord.participants.getter(a1);
  uint64_t v55 = (uint64_t)_swiftEmptyArrayStorage;
  if (v54) {
    uint64_t v56 = v54;
  }
  else {
    uint64_t v56 = (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v255 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v56 >> 62)
  {
    if (v56 < 0) {
      uint64_t v94 = v56;
    }
    else {
      uint64_t v94 = v56 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter(v94);
  }

  else
  {
    uint64_t v57 = *(void *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  v246 = v26;
  uint64_t v247 = v12;
  v242 = a1;
  v235 = v35;
  if (v57)
  {
    uint64_t v248 = (void *)type metadata accessor for PhonePerson(0LL);
    if (v57 < 1)
    {
      __break(1u);
      goto LABEL_105;
    }

    uint64_t v58 = 0LL;
    char v59 = v238 & 2;
    unint64_t v60 = v56 & 0xC000000000000001LL;
    uint64_t v61 = v56;
    uint64_t v62 = v57;
    do
    {
      if (v60) {
        id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v56);
      }
      else {
        id v63 = *(id *)(v56 + 8 * v58 + 32);
      }
      uint64_t v64 = v63;
      static Device.current.getter(v252);
      uint64_t v65 = v253;
      uint64_t v66 = v254;
      __swift_project_boxed_opaque_existential_1(v252, v253);
      uint64_t v67 = (uint64_t)v249;
      dispatch thunk of DeviceState.siriLocale.getter(v65, v66);
      __swift_destroy_boxed_opaque_existential_1(v252);
      static PhonePerson.make(phonePerson:options:locale:)(v64, v59, v67);
      uint64_t v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v67, v251);

      uint64_t v26 = v246;
      if (v69)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
        unint64_t v72 = *(void *)((char *)&dword_10 + (v255 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v71 = *(void *)((char *)&dword_18 + (v255 & 0xFFFFFFFFFFFFFF8LL));
        if (v72 >= v71 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1LL);
        }
        uint64_t v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v69);
        specialized Array._endMutation()(v73, v74, v75, v76);
      }

      ++v58;
      uint64_t v56 = v61;
    }

    while (v62 != v58);
    swift_bridgeObjectRelease();
    uint64_t v77 = (void *)v255;
    uint64_t v12 = v247;
    a1 = v242;
    uint64_t v55 = (uint64_t)_swiftEmptyArrayStorage;
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v77 = _swiftEmptyArrayStorage;
  }

  uint64_t v236 = (uint64_t)v77;
  swift_bridgeObjectRelease();
  outlined bridged method (pb) of @objc INCallRecord.participants.getter(a1);
  if (v78) {
    uint64_t v55 = v78;
  }
  uint64_t v79 = v233;
  if (!((unint64_t)v55 >> 62))
  {
    uint64_t v80 = *(void *)((char *)&dword_10 + (v55 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v80) {
      goto LABEL_45;
    }
LABEL_69:
    uint64_t v248 = _swiftEmptyArrayStorage;
    goto LABEL_70;
  }

  if (v55 < 0) {
    uint64_t v95 = v55;
  }
  else {
    uint64_t v95 = v55 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v80 = _CocoaArrayWrapper.endIndex.getter(v95);
  if (!v80) {
    goto LABEL_69;
  }
LABEL_45:
  if (v80 < 1)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }

  uint64_t v81 = 0LL;
  uint64_t v248 = _swiftEmptyArrayStorage;
  do
  {
    if ((v55 & 0xC000000000000001LL) != 0) {
      id v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v81, v55);
    }
    else {
      id v82 = *(id *)(v55 + 8 * v81 + 32);
    }
    uint64_t v83 = v82;
    uint64_t v84 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v82);
    if (!v85)
    {
      uint64_t v84 = 0LL;
      unint64_t v85 = 0xE000000000000000LL;
    }

    SpeakableString.init(print:speak:)(v84, v85, 0LL, 0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0LL, 1LL, v12);

    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1LL, v12) == 1)
    {
      outlined destroy of SpeakableString?( (uint64_t)v26,  &demangling cache variable for type metadata for SpeakableString?);
    }

    else
    {
      uint64_t v86 = v244;
      uint64_t v87 = v26;
      uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v245 + 32);
      v88(v244, v87, v12);
      v88((char *)v79, v86, v12);
      if ((swift_isUniquelyReferenced_nonNull_native(v248) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v248 = v92;
      }

      unint64_t v89 = v248[2];
      if (v89 >= v248[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v248 = v93;
      }

      uint64_t v90 = v248;
      v248[2] = v89 + 1;
      unint64_t v91 = (unint64_t)v90
      uint64_t v12 = v247;
      v88((char *)v91, (char *)v79, v247);
      uint64_t v26 = v246;
    }

    ++v81;
  }

  while (v80 != v81);
LABEL_70:
  swift_bridgeObjectRelease_n(v55, 2LL);
  uint64_t v55 = v236;
  if ((unint64_t)v236 >> 62)
  {
    if (v236 < 0) {
      uint64_t v127 = v236;
    }
    else {
      uint64_t v127 = v236 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v96 = _CocoaArrayWrapper.endIndex.getter(v127);
  }

  else
  {
    uint64_t v96 = *(void *)((char *)&dword_10 + (v236 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  a1 = v242;
  if (v96)
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v55 & 0xC000000000000001LL) == 0, v55);
    if ((v55 & 0xC000000000000001LL) == 0)
    {
      uint64_t v97 = *(void *)(v55 + 32);
      swift_retain();
LABEL_75:
      p_base_props = (__objc2_prop_list **)(&CameraControlFlow + 64);
      swift_bridgeObjectRelease();
      goto LABEL_77;
    }

unint64_t lazy protocol witness table accessor for type PhoneCallRecord and conformance PhoneCallRecord()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord)
  {
    uint64_t v1 = type metadata accessor for PhoneCallRecord(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallRecord, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord and conformance PhoneCallRecord);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.Options,  &type metadata for PhoneCallRecord.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.Options,  &type metadata for PhoneCallRecord.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.Options,  &type metadata for PhoneCallRecord.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options;
  if (!lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallRecord.Options,  &type metadata for PhoneCallRecord.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallRecord.Options and conformance PhoneCallRecord.Options);
  }

  return result;
}

ValueMetadata *type metadata accessor for PhoneCallRecord.Options()
{
  return &type metadata for PhoneCallRecord.Options;
}

uint64_t OUTLINED_FUNCTION_3_110()
{
  return swift_bridgeObjectRelease(v0);
}

void OUTLINED_FUNCTION_4_95()
{
}

PhoneCallFlowDelegatePlugin::PhoneCallCommonCATPatternsIdentifiers_optional __swiftcall PhoneCallCommonCATPatternsIdentifiers.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallCommonCATPatternsIdentifiers.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallCommonCATPatternsIdentifiers_promptCancelled;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallCommonCATPatternsIdentifiers_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t PhoneCallCommonCATPatternsIdentifiers.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD00000000000001FLL;
  }
  else {
    return 0xD000000000000028LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallCommonCATPatternsIdentifiers( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallCommonCATPatternsIdentifiers()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallCommonCATPatternsIdentifiers()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallCommonCATPatternsIdentifiers( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallCommonCATPatternsIdentifiers_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCommonCATPatternsIdentifiers@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallCommonCATPatternsIdentifiers_optional *a2@<X8>)
{
  result.value = PhoneCallCommonCATPatternsIdentifiers.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallCommonCATPatternsIdentifiers@<X0>( unint64_t *a1@<X8>)
{
  unint64_t result = PhoneCallCommonCATPatternsIdentifiers.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallCommonCATPatternsExecutor.phoneFeaturesUnavailable()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return OUTLINED_FUNCTION_4_2(0xD000000000000028LL, 0x80000000003421B0LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

uint64_t PhoneCallCommonCATPatternsExecutor.promptCancelled()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  return OUTLINED_FUNCTION_4_2(0xD00000000000001FLL, 0x80000000003421E0LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

unint64_t lazy protocol witness table accessor for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers;
  if (!lazy protocol witness table cache variable for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallCommonCATPatternsIdentifiers,  &type metadata for PhoneCallCommonCATPatternsIdentifiers);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCommonCATPatternsIdentifiers and conformance PhoneCallCommonCATPatternsIdentifiers);
  }

  return result;
}

uint64_t protocol witness for PhoneCallCommonCATPatternsExecuting.phoneFeaturesUnavailable() in conformance PhoneCallCommonCATPatternsExecutor()
{
  Swift::String v2 = *(int **)(**v0 + class metadata base offset for PhoneCallCommonCATPatternsExecutor);
  unint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  Swift::Int v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  *Swift::Int v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t protocol witness for PhoneCallCommonCATPatternsExecuting.promptCancelled() in conformance PhoneCallCommonCATPatternsExecutor()
{
  Swift::String v2 = *(int **)(class metadata base offset for PhoneCallCommonCATPatternsExecutor + **v0 + 8);
  unint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  Swift::Int v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  *Swift::Int v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t storeEnumTagSinglePayload for PhoneCallCommonCATPatternsIdentifiers( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_278A00 + 4 * byte_33B6C5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_278A34 + 4 * asc_33B6C0[v4]))();
}

uint64_t sub_278A34(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_278A3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x278A44LL);
  }
  return result;
}

uint64_t sub_278A50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x278A58LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_278A5C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_278A64(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallCommonCATPatternsIdentifiers()
{
  return &type metadata for PhoneCallCommonCATPatternsIdentifiers;
}

uint64_t type metadata completion function for PhoneCallCommonCATPatternsExecutor(uint64_t a1)
{
  return swift_initClassMetadata2( a1,  0LL,  0LL,  v2,  a1 + class metadata base offset for PhoneCallCommonCATPatternsExecutor);
}

uint64_t ObjC metadata update function for PhoneCallCommonCATPatternsExecutor()
{
  return type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.__allocating_init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)( void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject(v4, 82LL, 7LL);
  VoiceOnlyEmergencyConfirmationFlow.init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)( a1,  a2,  a3,  a4);
  return v9;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.state.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

void VoiceOnlyEmergencyConfirmationFlow.state.setter(char a1)
{
  *(_BYTE *)(v1 + 80) = a1;
  OUTLINED_FUNCTION_16_7();
}

uint64_t (*VoiceOnlyEmergencyConfirmationFlow.state.modify(uint64_t a1))()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

void VoiceOnlyEmergencyConfirmationFlow.promptResponse.didset()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v14 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_beginAccess(v1 + 81, v13, 0LL, 0LL);
    LOBYTE(v1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(v1 + 81);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v10 = String.init<A>(describing:)(&v12, v9);
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, v13, v7 + 4);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v6, "#VoiceOnlyEmergencyConfirmationFlow promptResponse: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v0, 2LL);
  }

uint64_t VoiceOnlyEmergencyConfirmationFlow.promptResponse.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

void VoiceOnlyEmergencyConfirmationFlow.promptResponse.setter(char a1)
{
  *(_BYTE *)(v1 + 81) = a1;
  VoiceOnlyEmergencyConfirmationFlow.promptResponse.didset();
  OUTLINED_FUNCTION_16_7();
}

void (*VoiceOnlyEmergencyConfirmationFlow.promptResponse.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  OUTLINED_FUNCTION_25_0(v1 + 81, a1, 33LL);
  return VoiceOnlyEmergencyConfirmationFlow.promptResponse.modify;
}

void VoiceOnlyEmergencyConfirmationFlow.promptResponse.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    VoiceOnlyEmergencyConfirmationFlow.promptResponse.didset();
  }
  OUTLINED_FUNCTION_2();
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.State.description.getter(unsigned __int8 a1)
{
  int v1 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x46676E6974696177LL;
    }
    else {
      uint64_t v2 = 0x6365527475706E69LL;
    }
    if (v1 == 1) {
      unint64_t v3 = 0xEF7475706E49726FLL;
    }
    else {
      unint64_t v3 = 0xED00006465766965LL;
    }
  }

  else
  {
    unint64_t v3 = 0xEB0000000064657ALL;
    uint64_t v2 = OUTLINED_FUNCTION_39_31();
  }

  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  OUTLINED_FUNCTION_39();
  return 46LL;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.State.rawValue.getter(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_39_31();
  }
  if (a1 == 1) {
    return 0x46676E6974696177LL;
  }
  return 0x6365527475706E69LL;
}

PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional __swiftcall VoiceOnlyEmergencyConfirmationFlow.State.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of VoiceOnlyEmergencyConfirmationFlow.State.init(rawValue:),  v2);
  OUTLINED_FUNCTION_39();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional)v3;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance VoiceOnlyEmergencyConfirmationFlow.State( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance VoiceOnlyEmergencyConfirmationFlow.State()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoiceOnlyEmergencyConfirmationFlow.State( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VoiceOnlyEmergencyConfirmationFlow.State( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VoiceOnlyEmergencyConfirmationFlow.State@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::VoiceOnlyEmergencyConfirmationFlow::State_optional *a2@<X8>)
{
  result.value = VoiceOnlyEmergencyConfirmationFlow.State.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VoiceOnlyEmergencyConfirmationFlow.State( uint64_t *a1@<X8>)
{
  *a1 = VoiceOnlyEmergencyConfirmationFlow.State.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VoiceOnlyEmergencyConfirmationFlow.State()
{
  return VoiceOnlyEmergencyConfirmationFlow.State.description.getter(*v0);
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  uint64_t v5 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin();
  unint64_t v11 = (char *)&v42 - v10;
  uint64_t v46 = *(uint64_t (**)(void))(*v1 + 152LL);
  unsigned __int8 v12 = ((uint64_t (*)(uint64_t))v46)(v9);
  if (v12 != 5)
  {
    uint64_t v13 = PhoneCallConfirmation.rawValue.getter(v12);
    if (v13 == 7562617 && v14 == 0xE300000000000000LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      char v16 = OUTLINED_FUNCTION_49_2(v13, v14, 7562617LL, 0xE300000000000000LL);
      OUTLINED_FUNCTION_39();
      if ((v16 & 1) == 0) {
        goto LABEL_7;
      }
    }

    uint64_t v20 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
    goto LABEL_12;
  }

uint64_t VoiceOnlyEmergencyConfirmationFlow.init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)( void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(_BYTE *)(v5 + 81) = 5;
  outlined init with copy of SignalProviding((uint64_t)a1, v5 + 16);
  *(_BYTE *)(v5 + 80) = 0;
  *(void *)(v5 + 56) = a2;
  *(void *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a3;
  *(void *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v11 = *(void *)(v5 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), v10);
  unsigned __int8 v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 224);
  id v13 = a2;
  OUTLINED_FUNCTION_95_1();
  swift_retain();
  uint64_t v14 = v12(v10, v11);
  (*(void (**)(uint64_t))(*(void *)v14 + 128LL))(v14);

  swift_release(a3);
  swift_release(a4);
  OUTLINED_FUNCTION_38_1();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.on(input:)(os_log_s *a1)
{
  uint64_t v4 = v1;
  uint64_t v86 = a1;
  uint64_t v5 = type metadata accessor for Parse(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  unint64_t v85 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v80 - v8;
  uint64_t v10 = type metadata accessor for Input(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  int v12 = OUTLINED_FUNCTION_13_23();
  if (v12)
  {
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }

    uint64_t v13 = 0xED00006465766965LL;
    uint64_t v14 = 0x6365527475706E69LL;
  }

  else
  {
    uint64_t v13 = 0xEB0000000064657ALL;
    uint64_t v14 = OUTLINED_FUNCTION_39_31();
  }

  uint64_t v2 = OUTLINED_FUNCTION_49_2(v14, v13, 0x46676E6974696177LL, 0xEF7475706E49726FLL);
  OUTLINED_FUNCTION_62();
  if ((v2 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v29 = OUTLINED_FUNCTION_15_1();
    uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
    os_log_type_t v31 = v30;
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (!OUTLINED_FUNCTION_10(v33)) {
      goto LABEL_56;
    }
    unint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)unint64_t v34 = 0;
    goto LABEL_55;
  }

void VoiceOnlyEmergencyConfirmationFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VoiceOnlyEmergencyConfirmationFlow();
  uint64_t v6 = lazy protocol witness table accessor for type SimpleHandoffStrategy and conformance SimpleHandoffStrategy( &lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow and conformance VoiceOnlyEmergencyConfirmationFlow,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for VoiceOnlyEmergencyConfirmationFlow,  (uint64_t)&protocol conformance descriptor for VoiceOnlyEmergencyConfirmationFlow);
  Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
  OUTLINED_FUNCTION_16_7();
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  return swift_task_switch(VoiceOnlyEmergencyConfirmationFlow.execute(), 0LL, 0LL);
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v1 = (void *)(v0 + 16);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = v0 + 64;
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = swift_retain_n(v3, 2LL);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v9 = static os_log_type_t.debug.getter(v7, v8);
  BOOL v10 = os_log_type_enabled(v7, v9);
  uint64_t v11 = *(void *)(v0 + 112);
  if (v10)
  {
    int v12 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v13 = v46;
    _DWORD *v12 = 136315138;
    unsigned __int8 v14 = OUTLINED_FUNCTION_13_23();
    uint64_t v15 = VoiceOnlyEmergencyConfirmationFlow.State.description.getter(v14);
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 1);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_31_1(v11);
    OUTLINED_FUNCTION_51_21(&dword_0, v7, v9, "#VoiceOnlyEmergencyConfirmationFlow executing with state = %s");
    swift_arrayDestroy(v13, 1LL);
    uint64_t v17 = v13;
    uint64_t v2 = v0 + 64;
    OUTLINED_FUNCTION_0_2(v17);
    uint64_t v18 = (uint64_t)v12;
    uint64_t v1 = (void *)(v0 + 16);
    OUTLINED_FUNCTION_0_2(v18);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(*(void *)(v0 + 112));
  }

  uint64_t v19 = OUTLINED_FUNCTION_13_23();
  if (!(_BYTE)v19)
  {
    uint64_t v20 = *(void *)(v0 + 112);
    OUTLINED_FUNCTION_15_74();
    OUTLINED_FUNCTION_21_51();
    uint64_t v21 = OUTLINED_FUNCTION_12_82();
    OUTLINED_FUNCTION_47_1((uint64_t)v21);
    uint64_t v22 = type metadata accessor for SimpleOutputFlowAsync(0LL);
    OUTLINED_FUNCTION_57_17(v22);
    OUTLINED_FUNCTION_95_1();
    uint64_t v23 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v2,  &async function pointer to partial apply for closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute(),  v20);
    __swift_destroy_boxed_opaque_existential_1(v1);
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v23;
    OUTLINED_FUNCTION_95_1();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)( v1,  partial apply for closure #2 in VoiceOnlyEmergencyConfirmationFlow.execute(),  v20,  v5);
    swift_release(v20);
    uint64_t v24 = *(void *)(v0 + 16);
LABEL_28:
    swift_release(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (v19 != 1)
  {
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
    if (os_log_type_enabled(v25, v27))
    {
      uint64_t v28 = (_WORD *)OUTLINED_FUNCTION_1_0();
      *uint64_t v28 = 0;
      OUTLINED_FUNCTION_17_27(&dword_0, v25, v27, "#VoiceOnlyEmergencyConfirmationFlow returning .complete()");
      OUTLINED_FUNCTION_0_2((uint64_t)v28);
    }

    uint64_t v29 = *(void *)(v0 + 112);

    uint64_t v30 = *(uint64_t (**)(void))(*(void *)v29 + 152LL);
    uint64_t v31 = v30();
    if (v31 != 5)
    {
      uint64_t v32 = PhoneCallConfirmation.rawValue.getter(v31);
      if (v32 == 0x6C65636E6163LL && v33 == 0xE600000000000000LL)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }

      char v35 = OUTLINED_FUNCTION_49_2(v32, v33, 0x6C65636E6163LL, 0xE600000000000000LL);
      uint64_t v31 = OUTLINED_FUNCTION_62();
      if ((v35 & 1) != 0)
      {
LABEL_27:
        uint64_t v41 = *(void *)(v0 + 112);
        __swift_project_boxed_opaque_existential_1((void *)(v41 + 16), *(void *)(v41 + 40));
        OUTLINED_FUNCTION_21_51();
        uint64_t v42 = OUTLINED_FUNCTION_12_82();
        OUTLINED_FUNCTION_47_1((uint64_t)v42);
        uint64_t v43 = type metadata accessor for SimpleOutputFlowAsync(0LL);
        OUTLINED_FUNCTION_57_17(v43);
        swift_retain();
        uint64_t v44 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v2,  &async function pointer to partial apply for closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute(),  v41);
        __swift_destroy_boxed_opaque_existential_1(v1);
        *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v44;
        static ExecuteResponse.complete<A>(next:)(v1);
        uint64_t v24 = v44;
        goto LABEL_28;
      }
    }

    uint64_t v36 = ((uint64_t (*)(uint64_t))v30)(v31);
    if (v36 == 5)
    {
LABEL_19:
      static ExecuteResponse.complete()(v36);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }

    uint64_t v37 = PhoneCallConfirmation.rawValue.getter(v36);
    if (v37 != 28526 || v38 != 0xE200000000000000LL)
    {
      char v40 = OUTLINED_FUNCTION_49_2(v37, v38, 28526LL, 0xE200000000000000LL);
      uint64_t v36 = OUTLINED_FUNCTION_62();
      if ((v40 & 1) == 0) {
        goto LABEL_19;
      }
      goto LABEL_27;
    }

    goto LABEL_26;
  }

  static ExecuteResponse.ongoing(requireInput:)(1LL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  _BYTE v2[8] = a2;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[9] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[11] = v5;
  v2[12] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0LL, 0LL);
}

uint64_t closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple
                                                  + **(void **)(*(void *)(v0 + 64) + 64LL)
                                                  + 528));
  *(void *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute();
  return OUTLINED_FUNCTION_3_0(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_11_80();
  if (v1)
  {
    OUTLINED_FUNCTION_54_22();
    OUTLINED_FUNCTION_7_8();
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }

  else
  {
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
    return OUTLINED_FUNCTION_9_11((uint64_t)closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0LL, 0LL);
  }

{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v3 = OUTLINED_FUNCTION_24_46();
  OUTLINED_FUNCTION_16_48(v3, (uint64_t)closure #1 in closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute());
  OUTLINED_FUNCTION_9_74();
  __swift_project_boxed_opaque_existential_1(v0, v1[5]);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_5_32(v4);
  OUTLINED_FUNCTION_14_31(v5, v6, v7, v8, (__n128)xmmword_31FE60);
  v1[15] = v13;
  os_log_type_t v9 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  BOOL v10 = v2;
  uint64_t v11 = (void *)swift_task_alloc(v9);
  v1[16] = (uint64_t)v11;
  OUTLINED_FUNCTION_13_81(v11);
  return OUTLINED_FUNCTION_3_54();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 128LL));
  OUTLINED_FUNCTION_62();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t closure #1 in closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v1 = (char *)&v5 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
  uint64_t v2 = specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter(v2);
  uint64_t v3 = type metadata accessor for NLContextUpdate(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v1, 0LL, 1LL, v3);
  return OutputGenerationManifest.nlContextUpdate.setter(v1);
}

uint64_t closure #2 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl( &dword_0,  v5,  v7,  "#VoiceOnlyEmergencyConfirmationFlow offered to call emergency services. Updating state to .waitingForInput",  v8,  2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 136LL))(1LL);
}

uint64_t closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  _BYTE v2[8] = a2;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[9] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[11] = v5;
  v2[12] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0LL, 0LL);
}

uint64_t closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallCommonCATsSimple
                                                  + **(void **)(*(void *)(v0 + 64) + 72LL)
                                                  + 48));
  *(void *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute();
  return OUTLINED_FUNCTION_3_0(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_11_80();
  if (v1)
  {
    OUTLINED_FUNCTION_54_22();
    OUTLINED_FUNCTION_7_8();
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }

  else
  {
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
    return OUTLINED_FUNCTION_9_11((uint64_t)closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute(), 0LL, 0LL);
  }

{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v3 = OUTLINED_FUNCTION_24_46();
  OUTLINED_FUNCTION_16_48( v3,  (uint64_t)closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest);
  OUTLINED_FUNCTION_9_74();
  __swift_project_boxed_opaque_existential_1(v0, v1[5]);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_5_32(v4);
  OUTLINED_FUNCTION_14_31(v5, v6, v7, v8, (__n128)xmmword_31FE60);
  v1[15] = v13;
  os_log_type_t v9 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  BOOL v10 = v2;
  uint64_t v11 = (void *)swift_task_alloc(v9);
  v1[16] = (uint64_t)v11;
  OUTLINED_FUNCTION_13_81(v11);
  return OUTLINED_FUNCTION_3_54();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 128LL));
  OUTLINED_FUNCTION_62();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.deinit()
{
  swift_release(*(void *)(v0 + 64));
  swift_release(*(void *)(v0 + 72));
  return v0;
}

uint64_t VoiceOnlyEmergencyConfirmationFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 82LL, 7LL);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance VoiceOnlyEmergencyConfirmationFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176LL))();
}

uint64_t type metadata accessor for VoiceOnlyEmergencyConfirmationFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin34VoiceOnlyEmergencyConfirmationFlow);
}

uint64_t partial apply for closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43D424);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return closure #3 in VoiceOnlyEmergencyConfirmationFlow.execute()(v2, v3);
}

uint64_t partial apply for closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43D434);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return closure #1 in VoiceOnlyEmergencyConfirmationFlow.execute()(v2, v3);
}

uint64_t partial apply for closure #2 in VoiceOnlyEmergencyConfirmationFlow.execute()(uint64_t a1)
{
  return closure #2 in VoiceOnlyEmergencyConfirmationFlow.execute()(a1, v1);
}

unint64_t lazy protocol witness table accessor for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State()
{
  unint64_t result = lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State;
  if (!lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceOnlyEmergencyConfirmationFlow.State,  &type metadata for VoiceOnlyEmergencyConfirmationFlow.State);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow.State and conformance VoiceOnlyEmergencyConfirmationFlow.State);
  }

  return result;
}

uint64_t base witness table accessor for Flow in VoiceOnlyEmergencyConfirmationFlow(uint64_t a1, uint64_t a2)
{
  return lazy protocol witness table accessor for type SimpleHandoffStrategy and conformance SimpleHandoffStrategy( &lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow and conformance VoiceOnlyEmergencyConfirmationFlow,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for VoiceOnlyEmergencyConfirmationFlow,  (uint64_t)&protocol conformance descriptor for VoiceOnlyEmergencyConfirmationFlow);
}

void sub_27A8FC(_BYTE *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_2();
}

void sub_27A920(unsigned __int8 *a1, uint64_t a2)
{
}

void sub_27A948(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(void **)a1 + 152LL))();
  OUTLINED_FUNCTION_2();
}

void sub_27A974(unsigned __int8 *a1, uint64_t a2)
{
}

uint64_t storeEnumTagSinglePayload for VoiceOnlyEmergencyConfirmationFlow.State( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_27A9E8 + 4 * byte_33B845[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_27AA1C + 4 * asc_33B840[v4]))();
}

uint64_t sub_27AA1C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_27AA24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x27AA2CLL);
  }
  return result;
}

uint64_t sub_27AA38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x27AA40LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_27AA44(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27AA4C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VoiceOnlyEmergencyConfirmationFlow.State()
{
  return &type metadata for VoiceOnlyEmergencyConfirmationFlow.State;
}

uint64_t OUTLINED_FUNCTION_9_74()
{
  __int16 v1 = v0 + 2;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_11_80()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)(v1 - 8);
  *uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(v2 + 104);
  *uint64_t v3 = *v0;
  return swift_task_dealloc(v4);
}

void *OUTLINED_FUNCTION_12_82()
{
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[7];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v0[11] = v3;
  v0[12] = v4;
  return __swift_allocate_boxed_opaque_existential_1(v2);
}

uint64_t OUTLINED_FUNCTION_13_81(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 56);
}

BOOL OUTLINED_FUNCTION_14_69()
{
  return PhoneCallNLIntent.isEmergencyCall()();
}

void *OUTLINED_FUNCTION_15_74()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_19_59()
{
  uint64_t v2 = *(void *)(v1 - 184);
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 216), v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_24_46()
{
  return static DialogPhase.confirmation.getter();
}

uint64_t OUTLINED_FUNCTION_30_43()
{
  return outlined init with copy of PhoneCallNLIntent?(v0 - 128, v0 - 216);
}

uint64_t OUTLINED_FUNCTION_32_47@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_39_31()
{
  return 0x696C616974696E69LL;
}

uint64_t OUTLINED_FUNCTION_41_36@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

void OUTLINED_FUNCTION_51_21(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_54_22()
{
  return swift_task_dealloc(*(void *)(v0 + 96));
}

uint64_t OUTLINED_FUNCTION_55_28()
{
  return v0(v1);
}

uint64_t OUTLINED_FUNCTION_56_24(uint64_t a1)
{
  return v1(a1, v3, v2);
}

PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationHistory __swiftcall ForcedAppDisambiguationHistory.init()()
{
  uint64_t v0 = type metadata accessor for Date(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = static Date.distantPast.getter();
  Date.timeIntervalSince1970.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  OUTLINED_FUNCTION_2_45();
  result.timestamp = v8;
  result.apps._rawValue = v7;
  result.phase = v6;
  return result;
}

void ForcedAppDisambiguationHistory.init(phase:date:apps:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_4_96();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a2, v3);
  OUTLINED_FUNCTION_2_45();
}

PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationPhase_optional __swiftcall ForcedAppDisambiguationPhase.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of ForcedAppDisambiguationPhase.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_ForcedAppDisambiguationPhase_loggedForcedAppDisambiguation;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_ForcedAppDisambiguationPhase_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t ForcedAppDisambiguationPhase.rawValue.getter()
{
  return 0xD00000000000001DLL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ForcedAppDisambiguationPhase( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ForcedAppDisambiguationPhase()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ForcedAppDisambiguationPhase()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ForcedAppDisambiguationPhase( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationPhase_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ForcedAppDisambiguationPhase@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationPhase_optional *a2@<X8>)
{
  result.value = ForcedAppDisambiguationPhase.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ForcedAppDisambiguationPhase@<X0>( void *a1@<X8>)
{
  unint64_t result = ForcedAppDisambiguationPhase.rawValue.getter();
  *a1 = 0xD00000000000001DLL;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ForcedAppDisambiguationPhase( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ForcedAppDisambiguationPhase( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t ForcedAppDisambiguationHistory.description.getter(char a1, double a2)
{
  v10[0] = 0LL;
  v10[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(28LL);
  v4._uint64_t countAndFlagsBits = 0x3A65736168700A7BLL;
  v4._object = (void *)0xE900000000000020LL;
  String.append(_:)(v4);
  if ((a1 & 1) != 0) {
    uint64_t v5 = (void *)0x80000000003464E0LL;
  }
  else {
    uint64_t v5 = (void *)0x80000000003464C0LL;
  }
  v6._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  v7._uint64_t countAndFlagsBits = 0x7473656D69740A2CLL;
  v7._object = (void *)0xED0000203A706D61LL;
  String.append(_:)(v7);
  Double.write<A>(to:)( v10,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation,  a2);
  v8._uint64_t countAndFlagsBits = 32010LL;
  v8._object = (void *)0xE200000000000000LL;
  String.append(_:)(v8);
  return v10[0];
}

void static ForcedAppDisambiguationHistory.__derived_struct_equals(_:_:)( double a1, double a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  specialized == infix<A>(_:_:)();
  if ((v10 & 1) != 0 && a1 == a2) {
    specialized static Array<A>.== infix(_:_:)(a4, a6);
  }
}

uint64_t ForcedAppDisambiguationHistory.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6573616870LL && a2 == 0xE500000000000000LL)
  {
    unint64_t v5 = 0xE500000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6573616870LL, 0xE500000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6D617473656D6974LL && a2 == 0xE900000000000070LL)
  {
    unint64_t v8 = 0xE900000000000070LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D617473656D6974LL, 0xE900000000000070LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 1936748641 && a2 == 0xE400000000000000LL)
  {
    swift_bridgeObjectRelease(0xE400000000000000LL);
    return 2LL;
  }

  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(1936748641LL, 0xE400000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0) {
      return 2LL;
    }
    else {
      return 3LL;
    }
  }

uint64_t ForcedAppDisambiguationHistory.CodingKeys.stringValue.getter(char a1)
{
  if (!a1) {
    return 0x6573616870LL;
  }
  if (a1 == 1) {
    return 0x6D617473656D6974LL;
  }
  return 1936748641LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ForcedAppDisambiguationHistory.CodingKeys()
{
  return ForcedAppDisambiguationHistory.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ForcedAppDisambiguationHistory.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = ForcedAppDisambiguationHistory.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ForcedAppDisambiguationHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ForcedAppDisambiguationHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ForcedAppDisambiguationHistory.encode(to:)(void *a1, char a2, double a3)
{
  char v6 = a2 & 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ForcedAppDisambiguationHistory.CodingKeys>);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v14 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_413140, &unk_413140, v14, v12, v13);
  __int128 v16[2] = v6;
  v16[1] = 0;
  lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase();
  OUTLINED_FUNCTION_4_5();
  if (!v3)
  {
    v16[0] = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v7, a3);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    OUTLINED_FUNCTION_4_5();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
}

double ForcedAppDisambiguationHistory.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ForcedAppDisambiguationHistory.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  unint64_t v7 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_413140, &unk_413140, v7, v5, v6);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  else
  {
    char v14 = 0;
    unint64_t v8 = lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase();
    OUTLINED_FUNCTION_26_54( (uint64_t)&type metadata for ForcedAppDisambiguationPhase,  (uint64_t)&v14,  v4,  (uint64_t)&type metadata for ForcedAppDisambiguationPhase,  v8);
    char v13 = 1;
    double v2 = KeyedDecodingContainer.decode(_:forKey:)(&v13, v4);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v12 = 2;
    uint64_t v11 = lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    OUTLINED_FUNCTION_26_54(v10, (uint64_t)&v12, v4, v10, v11);
    OUTLINED_FUNCTION_0_54();
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  return v2;
}

uint64_t protocol witness for SiriPhoneDefaultsCodable.init() in conformance ForcedAppDisambiguationHistory@<X0>( uint64_t a1@<X8>)
{
  PhoneCallFlowDelegatePlugin::ForcedAppDisambiguationHistory v3 = ForcedAppDisambiguationHistory.init()();
  *(_BYTE *)a1 = 0;
  *(Swift::Double *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3.timestamp;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
  LOBYTE(result) = v3.phase;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ForcedAppDisambiguationHistory()
{
  return ForcedAppDisambiguationHistory.description.getter(*(_BYTE *)v0, *(double *)(v0 + 8));
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ForcedAppDisambiguationHistory( double *a1, double *a2)
{
}

void protocol witness for Decodable.init(from:) in conformance ForcedAppDisambiguationHistory( void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = ForcedAppDisambiguationHistory.init(from:)(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = v4 & 1;
    *(double *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
    *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  }

uint64_t protocol witness for Encodable.encode(to:) in conformance ForcedAppDisambiguationHistory(void *a1)
{
  return ForcedAppDisambiguationHistory.encode(to:)(a1, *(_BYTE *)v1, *(double *)(v1 + 8));
}

unint64_t lazy protocol witness table accessor for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationHistory.CodingKeys,  &unk_413140);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationHistory.CodingKeys,  &unk_413140);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationHistory.CodingKeys,  &unk_413140);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationHistory.CodingKeys,  &unk_413140);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationHistory.CodingKeys and conformance ForcedAppDisambiguationHistory.CodingKeys);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase()
{
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationPhase,  &type metadata for ForcedAppDisambiguationPhase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationPhase,  &type metadata for ForcedAppDisambiguationPhase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationPhase,  &type metadata for ForcedAppDisambiguationPhase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase;
  if (!lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ForcedAppDisambiguationPhase,  &type metadata for ForcedAppDisambiguationPhase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ForcedAppDisambiguationPhase and conformance ForcedAppDisambiguationPhase);
  }

  return result;
}

unint64_t instantiation function for generic protocol witness table for ForcedAppDisambiguationHistory( void *a1)
{
  a1[1] = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  a1[2] = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  unint64_t result = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for ForcedAppDisambiguationHistory( uint64_t a1)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  unint64_t result = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for ForcedAppDisambiguationPhase( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_27B85C + 4 * byte_33BA05[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_27B890 + 4 * asc_33BA00[v4]))();
}

uint64_t sub_27B890(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_27B898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x27B8A0LL);
  }
  return result;
}

uint64_t sub_27B8AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x27B8B4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_27B8B8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27B8C0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForcedAppDisambiguationPhase()
{
  return &type metadata for ForcedAppDisambiguationPhase;
}

uint64_t initializeBufferWithCopyOfBuffer for ForcedAppDisambiguationHistory(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for ForcedAppDisambiguationHistory(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for ForcedAppDisambiguationHistory(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for ForcedAppDisambiguationHistory()
{
  return &type metadata for ForcedAppDisambiguationHistory;
}

uint64_t storeEnumTagSinglePayload for ForcedAppDisambiguationHistory.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_27B9F4 + 4 * byte_33BA0F[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_27BA28 + 4 * byte_33BA0A[v4]))();
}

uint64_t sub_27BA28(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_27BA30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x27BA38LL);
  }
  return result;
}

uint64_t sub_27BA44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x27BA4CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_27BA50(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27BA58(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for ForcedAppDisambiguationHistory.CodingKeys()
{
  return &unk_413140;
}

uint64_t OUTLINED_FUNCTION_3_111(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 120, v5, v4, a4);
}

uint64_t OUTLINED_FUNCTION_4_96()
{
  return type metadata accessor for Date(0LL);
}

uint64_t OUTLINED_FUNCTION_8_77()
{
  return Date.init(timeIntervalSince1970:)(v0);
}

void IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)()
{
  uint64_t v1 = v0;
  int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v1 + 264);
  uint64_t v11 = type metadata accessor for PhoneCallFlowState(0LL, v8, v9, v10);
  OUTLINED_FUNCTION_17_4();
  __chkstk_darwin();
  char v13 = &v17[-v12];
  v18[0] = v7;
  uint64_t v14 = type metadata accessor for RCHFlowResult(255LL, v8, v9);
  uint64_t v15 = type metadata accessor for AnyValueFlow(0LL, v14);
  swift_getWitnessTable(&protocol conformance descriptor for AnyValueFlow<A>, v15);
  *char v13 = Flow.eraseToAnyValueFlow()(v15);
  swift_storeEnumTagMultiPayload(v13, v11, 2LL);
  uint64_t v16 = outlined init with copy of SignalProviding((uint64_t)v3, (uint64_t)v18);
  OUTLINED_FUNCTION_16_29(v16, (uint64_t)v17);
  (*(void (**)(void *, uint64_t, void *, _BYTE *))(v1 + 304))(v13, v5, v18, v17);
  swift_release(v7);
  OUTLINED_FUNCTION_90();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_7_5();
}

void IncomingCallFlow.__allocating_init(state:app:strategy:sharedGlobals:)()
{
}

void IncomingCallFlow.init(state:app:strategy:sharedGlobals:)()
{
  uint64_t v2 = (void *)v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *v0;
  uint64_t v8 = OUTLINED_FUNCTION_7_14(v5, *(void *)(*v0 + 256), *(void *)(*v0 + 264), v1);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v13 - v11;
  OUTLINED_FUNCTION_16_29(v10, (uint64_t)v0 + *(void *)(v7 + 288));
  *(uint64_t *)((char *)v0 + *(void *)(*v0 + 296)) = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v6, v8);
  outlined init with copy of SignalProviding((uint64_t)v2, (uint64_t)&v14);
  PhoneFlow.init(state:sharedGlobals:)((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_90();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  OUTLINED_FUNCTION_7_5();
}

void IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = &v11[-v7];
  uint64_t v10 = swift_storeEnumTagMultiPayload(&v11[-v7], v9, 5LL);
  OUTLINED_FUNCTION_16_29(v10, (uint64_t)v12);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v11);
  (*(void (**)(_BYTE *, uint64_t, _BYTE *, _BYTE *))(v4 + 304))(v8, a1, v12, v11);
  __swift_destroy_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_16();
}

uint64_t IncomingCallFlow.on(input:)()
{
  void (*v33)(uint64_t *__return_ptr, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  os_log_s *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  OUTLINED_FUNCTION_29_2();
  uint64_t v53 = v1;
  uint64_t v54 = v2;
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = OUTLINED_FUNCTION_7_14(v4, *(void *)(*v0 + 256), *(void *)(*v0 + 264), v6);
  int v47 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin();
  uint64_t v11 = (char *)&v43 - v10;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v14 = swift_retain();
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v48 = v7;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v46 = v5;
    uint64_t v20 = v19;
    v50[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v44 = v18 + 4;
    (*(void (**)(void))(*v0 + 128))();
    PhoneCallFlowState.description.getter(v48);
    uint64_t v22 = v21;
    uint64_t v45 = v13;
    uint64_t v23 = v9;
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v48);
    int v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v25, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v44);
    swift_release(v3);
    uint64_t v9 = v23;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_57_0(&dword_0, v15, v16, "#IncomingCallFlow: State = %s", v18);
    OUTLINED_FUNCTION_17_0(v20);
    uint64_t v26 = v20;
    uint64_t v5 = v46;
    OUTLINED_FUNCTION_0_2(v26);
    uint64_t v27 = (uint64_t)v18;
    uint64_t v7 = v48;
    OUTLINED_FUNCTION_0_2(v27);
  }

  else
  {

    uint64_t v28 = swift_release(v0);
  }

  (*(void (**)(uint64_t))(*v3 + 128))(v28);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v7);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    uint64_t v38 = *v9;
    uint64_t v37 = dispatch thunk of AnyValueFlow.on(input:)(v5);
    swift_release(v38);
  }

  else if ((_DWORD)EnumCaseMultiPayload == 5)
  {
    uint64_t v31 = OUTLINED_FUNCTION_3_4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16LL))(v11, v5, v31);
    uint64_t v32 = *v3;
    *(void *)&v11[v30] = *(uint64_t *)((char *)v3 + *(void *)(*v3 + 296));
    uint64_t v33 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v32 + 152);
    unint64_t v34 = swift_retain();
    v33(v50, v34);
    char v35 = v51;
    uint64_t v36 = v52;
    __swift_project_boxed_opaque_existential_1(v50, v51);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    uint64_t v37 = 1;
    swift_storeEnumTagMultiPayload(v11, v7, 1LL);
    (*(void (**)(char *))(*v3 + 136))(v11);
    __swift_destroy_boxed_opaque_existential_1(v50);
  }

  else
  {
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(EnumCaseMultiPayload);
    char v40 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_7(v40))
    {
      uint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v41 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v39,  (os_log_type_t)v3,  "#IncomingCallFlow: Flow is not in a state that will expect input.",  v41);
      OUTLINED_FUNCTION_0_2((uint64_t)v41);
    }

    (*(void (**)(void *, uint64_t))(v47 + 8))(v9, v7);
    uint64_t v37 = 0;
  }

  return v37 & 1;
}

uint64_t IncomingCallFlow.execute()(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = *v1;
  v2[14] = *v1;
  uint64_t v4 = OUTLINED_FUNCTION_3_4();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = OUTLINED_FUNCTION_28();
  v2[18] = OUTLINED_FUNCTION_28();
  uint64_t v5 = OUTLINED_FUNCTION_28();
  v2[19] = v5;
  uint64_t v6 = *(void *)(v3 + 256);
  v2[20] = v6;
  uint64_t v7 = *(void *)(v3 + 264);
  v2[21] = v7;
  uint64_t v9 = OUTLINED_FUNCTION_7_14(v5, v6, v7, v8);
  v2[22] = v9;
  v2[23] = *(void *)(v9 - 8);
  _BYTE v2[24] = OUTLINED_FUNCTION_28();
  v2[25] = OUTLINED_FUNCTION_28();
  v2[26] = OUTLINED_FUNCTION_28();
  v2[27] = OUTLINED_FUNCTION_28();
  v2[28] = OUTLINED_FUNCTION_28();
  return swift_task_switch(IncomingCallFlow.execute(), 0LL, 0LL);
}

uint64_t IncomingCallFlow.execute()()
{
  void (*v56)(__int128 *__return_ptr);
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(__int128 *__return_ptr, uint64_t);
  uint64_t v69;
  uint64_t (*v70)();
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_s *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t);
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  __int128 v97[2];
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void (**)(void))(**(void **)(v0 + 104) + 128LL);
  v3();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v5 = *(void *)(v0 + 216);
      uint64_t v6 = *(void *)(v0 + 152);
      uint64_t v8 = *(void *)(v0 + 120);
      uint64_t v7 = *(void *)(v0 + 128);
      OUTLINED_FUNCTION_20_60(*(void *)(v0 + 184));
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      uint64_t v96 = *(void *)(v5 + *(int *)(v9 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v10 = *(void *)(v0 + 144);
      uint64_t v11 = *(void *)(v0 + 152);
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v12 = *(void *)(v0 + 128);
      uint64_t v14 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
      uint64_t v16 = v15(v10, v11, v13);
      uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
      os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
      if (os_log_type_enabled(v17, v19))
      {
        uint64_t v87 = *(void *)(v0 + 160);
        uint64_t v20 = *(void *)(v0 + 144);
        uint64_t v21 = *(void *)(v0 + 120);
        uint64_t v93 = *(void *)(v0 + 128);
        uint64_t v90 = v15;
        uint64_t v22 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v88 = OUTLINED_FUNCTION_7_0(64LL);
        *(void *)&v97[0] = v88;
        *(_DWORD *)uint64_t v22 = 136315394;
        unint64_t v23 = lazy protocol witness table accessor for type Input and conformance Input();
        uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter(v21, v23);
        *(void *)(v0 + 80) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, (uint64_t *)v97);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v22 + 4);
        swift_bridgeObjectRelease();
        uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
        v94(v20, v21);
        *(_WORD *)(v22 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v87);
        uint64_t v27 = _typeName(_:qualified:)(MetatypeMetadata, 0LL);
        *(void *)(v0 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, (uint64_t *)v97);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v22 + 14);
        swift_bridgeObjectRelease();
        _os_log_impl( &dword_0,  v17,  v19,  "#IncomingCallFlow: Converting input: %s to intent of type %s.",  (uint8_t *)v22,  0x16u);
        swift_arrayDestroy(v88, 2LL);
        OUTLINED_FUNCTION_0_2(v88);
        uint64_t v29 = v22;
        uint64_t v15 = v90;
        OUTLINED_FUNCTION_0_2(v29);
      }

      else
      {
        uint64_t v94 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 128) + 8LL);
        v94(*(void *)(v0 + 144), *(void *)(v0 + 120));
      }

      BOOL v60 = *(void *)(v0 + 152);
      BOOL v61 = *(void *)(v0 + 136);
      id v63 = *(void *)(v0 + 112);
      os_log_type_t v62 = *(void *)(v0 + 120);
      uint64_t v64 = *(void *)(v0 + 104);
      unint64_t v91 = (void *)(*(void *)(v0 + 216) + *(int *)(v9 + 64));
      uint64_t v89 = *(_OWORD *)(v0 + 160);
      uint64_t v67 = type metadata accessor for IntentConversionFlow(0LL, *(void *)(v0 + 160), v65, v66);
      v15(v61, v60, v62);
      int v68 = *(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)v64 + 152LL);
      uint64_t v69 = swift_retain();
      v68(v97, v69);
      *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = IntentConversionFlow.__allocating_init(input:app:sharedGlobals:)(v61, v96, v97);
      BOOL v70 = implicit closure #3 in IncomingCallFlow.execute()(v64);
      uint64_t v72 = v71;
      os_log_type_t v73 = swift_allocObject(&unk_413240, 64LL, 7LL);
      *(_OWORD *)(v73 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v89;
      *(void *)(v73 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(v63 + 272);
      *(void *)(v73 + 40) = *(void *)(v63 + 280);
      *(void *)(v73 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v70;
      *(void *)(v73 + 56) = v72;
      swift_getWitnessTable(&protocol conformance descriptor for IntentConversionFlow<A>, v67);
      static ExecuteResponse.ongoing<A>(next:childCompletion:)( v0 + 72,  partial apply for thunk for @escaping @callee_guaranteed (@guaranteed A?) -> (),  v73,  v67);
      swift_release(v73);
      swift_release(v96);
      swift_release(*(void *)(v0 + 72));
      v94(v60, v62);
      __swift_destroy_boxed_opaque_existential_1(v91);
      goto LABEL_25;
    case 2:
      uint64_t v30 = *(uint64_t **)(v0 + 208);
      OUTLINED_FUNCTION_20_60(*(void *)(v0 + 184));
      uint64_t v31 = *v30;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v32 = OUTLINED_FUNCTION_15_1();
      uint64_t v33 = (os_log_s *)OUTLINED_FUNCTION_12_1(v32, (uint64_t)static Logger.siriPhone);
      os_log_type_t v35 = static os_log_type_t.debug.getter(v33, v34);
      if (OUTLINED_FUNCTION_7(v35))
      {
        uint64_t v36 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v36 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v33,  (os_log_type_t)v1,  "#IncomingCallFlow: Executing first RCHFlow. IncomingCallFlow will stay on the stack.",  v36);
        OUTLINED_FUNCTION_0_2((uint64_t)v36);
      }

      uint64_t v37 = implicit closure #5 in IncomingCallFlow.execute()();
      uint64_t v39 = v38;
      static ExecuteResponse.ongoing<A>(next:childCompletion:)(v31, v37, v38);
      swift_release(v39);
      uint64_t v40 = v31;
      goto LABEL_13;
    case 3:
      uint64_t v41 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 160);
      uint64_t v42 = *(void *)(v0 + 168);
      (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 184) + 16LL))( v41,  *(void *)(v0 + 224),  *(void *)(v0 + 176));
      uint64_t v44 = type metadata accessor for RCHFlowResult(0LL, v43, v42);
      uint64_t v45 = *(uint64_t (***)(uint64_t, uint64_t))(v44 - 8);
      int v46 = v45[11](v41, v44);
      int v47 = *(uint64_t **)(v0 + 200);
      if (v46 == enum case for RCHFlowResult.complete<A, B>(_:))
      {
        uint64_t v49 = *(void *)(v0 + 160);
        uint64_t v48 = *(void *)(v0 + 168);
        uint64_t v50 = *(void *)(v0 + 104);
        uint64_t v51 = *(void *)(v0 + 112);
        OUTLINED_FUNCTION_37_1(v45[12]);
        uint64_t v53 = *v47;
        uint64_t v52 = (void *)v47[1];
        uint64_t v54 = (void *)v47[2];
        uint64_t v55 = type metadata accessor for IncomingCallFollowUpFlow(0LL, v49, v48, *(void *)(v51 + 280));
        outlined init with copy of SignalProviding(v50 + *(void *)(*(void *)v50 + 288LL), v0 + 16);
        uint64_t v56 = *(void (**)(__int128 *__return_ptr))(*(void *)v50 + 152LL);
        swift_retain();
        uint64_t v57 = v52;
        BOOL v58 = v54;
        v56(v97);
        char v59 = IncomingCallFollowUpFlow.__allocating_init(app:intent:intentResponse:strategy:sharedGlobals:)();
        *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v59;
        swift_getWitnessTable(&protocol conformance descriptor for IncomingCallFollowUpFlow<A, B>, v55);
        static ExecuteResponse.complete<A>(next:)(v0 + 64);
        swift_release(v53);

        uint64_t v40 = v59;
LABEL_13:
        swift_release(v40);
      }

      else
      {
        OUTLINED_FUNCTION_37_1(v45[1]);
LABEL_18:
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v74 = OUTLINED_FUNCTION_15_1();
        __swift_project_value_buffer(v74, (uint64_t)static Logger.siriPhone);
        uint64_t v75 = swift_retain();
        uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
        uint64_t v77 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v76, v77))
        {
          os_log_type_t v78 = *(void *)(v0 + 192);
          uint64_t v95 = *(void *)(v0 + 184);
          uint64_t v79 = *(void *)(v0 + 176);
          uint64_t v92 = *(void *)(v0 + 104);
          uint64_t v80 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v81 = OUTLINED_FUNCTION_7_0(32LL);
          *(void *)&v97[0] = v81;
          *(_DWORD *)uint64_t v80 = 136315138;
          v3();
          PhoneCallFlowState.description.getter(v79);
          uint64_t v83 = v82;
          unint64_t v85 = v84;
          (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v78, v79);
          *(void *)(v0 + 56) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v85, (uint64_t *)v97);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v80 + 4);
          swift_bridgeObjectRelease();
          swift_release(v92);
          OUTLINED_FUNCTION_57_0(&dword_0, v76, v77, "#IncomingCallFlow: encountered unexpected state %s", v80);
          OUTLINED_FUNCTION_17_0(v81);
          OUTLINED_FUNCTION_0_2(v81);
          OUTLINED_FUNCTION_0_2((uint64_t)v80);
        }

        else
        {
          swift_release(*(void *)(v0 + 104));
        }

LABEL_24:
        static ExecuteResponse.complete()(EnumCaseMultiPayload);
      }

uint64_t (*implicit closure #3 in IncomingCallFlow.execute()(uint64_t a1))()
{
  return partial apply for implicit closure #4 in implicit closure #3 in IncomingCallFlow.execute();
}

uint64_t (*implicit closure #5 in IncomingCallFlow.execute()())()
{
  return partial apply for implicit closure #6 in implicit closure #5 in HangUpCallFlow.execute();
}

void IncomingCallFlow.onRCHFlowComplete(exitValue:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = *v0;
  uint64_t v5 = *(void *)(*v0 + 256);
  uint64_t v6 = *(void *)(v4 + 264);
  uint64_t v8 = type metadata accessor for PhoneCallFlowState(0LL, v5, v6, v7);
  OUTLINED_FUNCTION_17_4();
  __chkstk_darwin();
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = type metadata accessor for RCHFlowResult(0LL, v5, v6);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v53 - v13);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v15((char *)&v53 - v13, v3, v11);
  if ((*(unsigned int (**)(void *, uint64_t))(v12 + 88))(v14, v11) == enum case for RCHFlowResult.complete<A, B>(_:))
  {
    uint64_t v60 = v3;
    OUTLINED_FUNCTION_25_53(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 96));
    uint64_t v16 = (void *)v14[1];
    id v17 = (id)v14[2];
    swift_release(*v14);

    if (((*(uint64_t (**)(id))(*v1 + 240))(v17) & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v18 = OUTLINED_FUNCTION_15_1();
      os_log_type_t v19 = (os_log_s *)OUTLINED_FUNCTION_12_1(v18, (uint64_t)static Logger.siriPhone);
      os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
      if (os_log_type_enabled(v19, v21))
      {
        uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v22 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v19,  v21,  "#IncomingCallFlow: First RCHFlow complete with intent response indicating we should dismiss Siri -> will dismiss Siri",  v22);
        OUTLINED_FUNCTION_0_2((uint64_t)v22);

        goto LABEL_28;
      }

LABEL_27:
      goto LABEL_28;
    }

    uint64_t v23 = *(void *)(v4 + 280);
    char v59 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 24);
    unsigned __int8 v24 = v59(v6, v23);
    uint64_t v25 = FollowUpOfferType.rawValue.getter(v24);
    if (v25 == 1162760014 && v26 == 0xE400000000000000LL)
    {

      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v28 = v23;
      char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 1162760014LL, 0xE400000000000000LL, 0LL);
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v37 = OUTLINED_FUNCTION_15_1();
        __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
        id v17 = v17;
        uint64_t v38 = (os_log_s *)Logger.logObject.getter(v17);
        os_log_type_t v40 = static os_log_type_t.debug.getter(v38, v39);
        int v58 = v40;
        BOOL v41 = os_log_type_enabled(v38, v40);
        uint64_t v42 = v60;
        if (v41)
        {
          uint64_t v43 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v57 = OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v61 = v57;
          uint64_t v55 = v43;
          uint64_t v56 = v38;
          *(_DWORD *)uint64_t v43 = 136315138;
          uint64_t v54 = v43 + 4;
          unsigned __int8 v44 = v59(v6, v28);
          uint64_t v45 = FollowUpOfferType.rawValue.getter(v44);
          uint64_t v47 = OUTLINED_FUNCTION_89(v45, v46);
          uint64_t v48 = OUTLINED_FUNCTION_10_4(v47);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, v49, v54);

          uint64_t v42 = v60;
          swift_bridgeObjectRelease();
          uint64_t v51 = v55;
          uint64_t v50 = v56;
          OUTLINED_FUNCTION_57_0( &dword_0,  v56,  (os_log_type_t)v58,  "#IncomingCallFlow: First RCHFlow complete with followUpAction=%s.",  v55);
          uint64_t v52 = v57;
          OUTLINED_FUNCTION_17_0(v57);
          OUTLINED_FUNCTION_0_2(v52);
          OUTLINED_FUNCTION_0_2((uint64_t)v51);
        }

        else
        {
        }

        v15(v10, v42, v11);
        swift_storeEnumTagMultiPayload(v10, v8, 3LL);
        OUTLINED_FUNCTION_4_72();
        goto LABEL_27;
      }
    }
  }

  else
  {
    OUTLINED_FUNCTION_25_53(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v30 = OUTLINED_FUNCTION_15_1();
  uint64_t v31 = (void *)OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
  os_log_type_t v33 = static os_log_type_t.debug.getter(v31, v32);
  if (OUTLINED_FUNCTION_93(v33))
  {
    uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    *uint64_t v34 = 0;
    OUTLINED_FUNCTION_10_73(&dword_0, v35, v36, "#IncomingCallFlow: First RCHFlow complete with no followUpAction.");
    OUTLINED_FUNCTION_0_2((uint64_t)v34);
  }

  OUTLINED_FUNCTION_14_46();
  OUTLINED_FUNCTION_4_72();
LABEL_28:
  OUTLINED_FUNCTION_7_5();
}

void IncomingCallFlow.processIntentConversionResult(exitValue:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = (void *)v2;
  uint64_t v4 = (void *)*v0;
  uint64_t v6 = OUTLINED_FUNCTION_7_14(v2, v4[32], v4[33], v5);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = (void (*)(void))v4[16];
  ((void (*)(uint64_t))v13)(v10);
  if (swift_getEnumCaseMultiPayload(v12, v6) != 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = swift_retain_n(v1, 2LL);
    os_log_type_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v24 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v39 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v38 = v23 + 4;
      v13();
      uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallFlowState<A, B>, v6);
      uint64_t v26 = String.init<A>(describing:)(v9, v6, WitnessTable);
      uint64_t v28 = OUTLINED_FUNCTION_89(v26, v27);
      uint64_t v29 = OUTLINED_FUNCTION_10_4(v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v29, v30, v38);
      OUTLINED_FUNCTION_0_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0(&dword_0, v21, v22, "Unexpected state, stopping: %s", v23);
      OUTLINED_FUNCTION_17_0(v24);
      OUTLINED_FUNCTION_0_2(v24);
      OUTLINED_FUNCTION_0_2((uint64_t)v23);
    }

    else
    {

      OUTLINED_FUNCTION_0_3();
    }

    goto LABEL_14;
  }

  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
  swift_release(*(void *)&v12[*(int *)(v14 + 48)]);
  __swift_destroy_boxed_opaque_existential_1(&v12[*(int *)(v14 + 64)]);
  uint64_t v15 = OUTLINED_FUNCTION_3_4();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8LL))(v12, v15);
  if (!v3)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v31 = OUTLINED_FUNCTION_15_1();
    uint64_t v32 = (void *)OUTLINED_FUNCTION_12_1(v31, (uint64_t)static Logger.siriPhone);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_93(v33))
    {
      uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v34 = 0;
      OUTLINED_FUNCTION_10_73(&dword_0, v35, v36, "Could not convert Intent, stopping");
      OUTLINED_FUNCTION_0_2((uint64_t)v34);
    }

LABEL_14:
    OUTLINED_FUNCTION_14_46();
    OUTLINED_FUNCTION_4_72();
    goto LABEL_15;
  }

  id v16 = v3;
  uint64_t v17 = IncomingCallFlow.makeRCHFlow(intent:)();
  *uint64_t v9 = v17;
  swift_storeEnumTagMultiPayload(v9, v6, 2LL);
  uint64_t v18 = *(void (**)(uint64_t *))(*v1 + 136LL);
  swift_retain();
  v18(v9);

  swift_release(v17);
LABEL_15:
  OUTLINED_FUNCTION_7_5();
}

uint64_t IncomingCallFlow.makeRCHFlow(intent:)()
{
  (*(void (**)(void *__return_ptr))(*(void *)v0 + 152LL))(v4);
  static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)();
  uint64_t v2 = v1;
  __swift_destroy_boxed_opaque_existential_1(v4);
  return v2;
}

void IncomingCallFlow.__allocating_init(sharedGlobals:)()
{
}

void IncomingCallFlow.init(sharedGlobals:)()
{
}

void IncomingCallFlow.__allocating_init(state:sharedGlobals:)()
{
}

void IncomingCallFlow.init(state:sharedGlobals:)()
{
}

uint64_t IncomingCallFlow.__ivar_destroyer()
{
  return swift_release(*(void *)(v0 + *(void *)(*(void *)v0 + 296LL)));
}

uint64_t IncomingCallFlow.deinit()
{
  uint64_t v1 = v0;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + *(void *)(*(void *)v0 + 288LL)));
  swift_release(*(void *)(v1 + *(void *)(*(void *)v1 + 296LL)));
  return v1;
}

uint64_t IncomingCallFlow.__deallocating_deinit()
{
  uint64_t v0 = IncomingCallFlow.deinit();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_27D3DC()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed A?) -> ()(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 48))(*a1);
}

uint64_t type metadata completion function for IncomingCallFlow(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 288);
}

uint64_t type metadata accessor for IncomingCallFlow(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for IncomingCallFlow);
}

void OUTLINED_FUNCTION_10_73(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_20_60@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 16))(v1);
}

void AceOutput.copyAndPrepend(commands:)(uint64_t a1)
{
  uint64_t v2 = __chkstk_darwin();
  uint64_t v4 = (char *)&v8[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  AceOutput.commands.getter(v2);
  v8[0] = a1;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v5 = v8[0];
  uint64_t v6 = AceOutput.flowActivity.getter(v8);
  AceOutput.nlContextUpdate.getter(v6);
  AceOutput.init(commands:flowActivity:nlContextUpdate:)(v5, v8, v4);
  OUTLINED_FUNCTION_16();
}

void AceOutput.withContextCommandsFirst()()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = AceOutput.commands.getter(v0);
  if (v3 < 0 || (v3 & 0x4000000000000000LL) != 0)
  {
    unint64_t v7 = swift_bridgeObjectRetain();
    specialized _copyCollectionToContiguousArray<A>(_:)(v7);
    uint64_t v4 = v8;
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain();
  }

  v9[0] = v4;
  specialized MutableCollection<>.sort(by:)(v9);
  swift_bridgeObjectRelease();
  uint64_t v5 = v9[0];
  uint64_t v6 = AceOutput.flowActivity.getter(v9);
  AceOutput.nlContextUpdate.getter(v6);
  AceOutput.init(commands:flowActivity:nlContextUpdate:)(v5, v9, v2);
  OUTLINED_FUNCTION_16();
}

LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
}

uint64_t AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (App.isFirstParty()()) {
    return 0LL;
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a2, a3, a4);
  }
}

uint64_t IdiomSensitiveViewBuilding.makeViews(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(a4 + 8))(_swiftEmptyArrayStorage, a1, a2, a3);
}

void IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  __int16 v16 = v15;
  uint64_t v17 = swift_allocObject(&unk_4133A0, 64LL, 7LL);
  *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v10;
  *(void *)(v17 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v12;
  *(void *)(v17 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v14;
  *(_BYTE *)(v17 + 40) = v16;
  *(_BYTE *)(v17 + 41) = HIBYTE(v16) & 1;
  *(void *)(v17 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(void *)(v17 + 56) = a3;
  swift_retain();
  uint64_t v18 = swift_retain();
  OUTLINED_FUNCTION_2_84(v18, v19, v20, v21, v22, v23, v24);
  uint64_t v25 = __swift_project_boxed_opaque_existential_1(v121, v122);
  OUTLINED_FUNCTION_1_91((uint64_t)v25, v26);
  uint64_t v27 = v120;
  uint64_t v28 = OUTLINED_FUNCTION_4_97(v119);
  uint64_t v30 = dispatch thunk of DeviceState.isWatch.getter(v28, v29);
  uint64_t v31 = __swift_destroy_boxed_opaque_existential_1(v119);
  uint64_t v38 = OUTLINED_FUNCTION_277_1(v31, v32, v33, v34, v35, v36, v37);
  if ((v30 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v45 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v45, (uint64_t)static Logger.siriPhone);
    os_log_type_t v46 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_11_5(v46))
    {
      uint64_t v47 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_14_70(v47);
      OUTLINED_FUNCTION_0_97(&dword_0, v48, v49, "#IdiomSensitiveViewBuilder: Building views for Watch");
      uint64_t v50 = 3LL;
LABEL_28:
      OUTLINED_FUNCTION_0_2(v27);
      goto LABEL_29;
    }

    uint64_t v50 = 3LL;
  }

  else
  {
    OUTLINED_FUNCTION_2_84(v38, v39, v40, v41, v42, v43, v44);
    uint64_t v51 = __swift_project_boxed_opaque_existential_1(v121, v122);
    OUTLINED_FUNCTION_1_91((uint64_t)v51, v52);
    uint64_t v27 = v120;
    uint64_t v53 = OUTLINED_FUNCTION_4_97(v119);
    uint64_t v30 = dispatch thunk of DeviceState.isMac.getter(v53, v54);
    uint64_t v55 = __swift_destroy_boxed_opaque_existential_1(v119);
    uint64_t v62 = OUTLINED_FUNCTION_277_1(v55, v56, v57, v58, v59, v60, v61);
    if ((v30 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v69 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v69, (uint64_t)static Logger.siriPhone);
      os_log_type_t v70 = OUTLINED_FUNCTION_6_44();
      if (OUTLINED_FUNCTION_11_5(v70))
      {
        unint64_t v71 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_14_70(v71);
        OUTLINED_FUNCTION_0_97(&dword_0, v72, v73, "#IdiomSensitiveViewBuilder: Building views for Mac");
        uint64_t v50 = 4LL;
        goto LABEL_28;
      }

      uint64_t v50 = 4LL;
    }

    else
    {
      OUTLINED_FUNCTION_2_84(v62, v63, v64, v65, v66, v67, v68);
      uint64_t v74 = __swift_project_boxed_opaque_existential_1(v121, v122);
      OUTLINED_FUNCTION_1_91((uint64_t)v74, v75);
      uint64_t v27 = v120;
      uint64_t v76 = OUTLINED_FUNCTION_4_97(v119);
      uint64_t v30 = dispatch thunk of DeviceState.isCarPlay.getter(v76, v77);
      uint64_t v78 = __swift_destroy_boxed_opaque_existential_1(v119);
      uint64_t v85 = OUTLINED_FUNCTION_277_1(v78, v79, v80, v81, v82, v83, v84);
      if ((v30 & 1) == 0)
      {
        OUTLINED_FUNCTION_2_84(v85, v86, v87, v88, v89, v90, v91);
        uint64_t v97 = __swift_project_boxed_opaque_existential_1(v121, v122);
        OUTLINED_FUNCTION_1_91((uint64_t)v97, v98);
        uint64_t v27 = v120;
        uint64_t v99 = OUTLINED_FUNCTION_4_97(v119);
        uint64_t v30 = dispatch thunk of DeviceState.isAppleTV.getter(v99, v100);
        uint64_t v101 = __swift_destroy_boxed_opaque_existential_1(v119);
        OUTLINED_FUNCTION_277_1(v101, v102, v103, v104, v105, v106, v107);
        if ((v30 & 1) != 0)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v108 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v108, (uint64_t)static Logger.siriPhone);
          os_log_type_t v109 = OUTLINED_FUNCTION_6_44();
          if (!OUTLINED_FUNCTION_11_5(v109))
          {
            uint64_t v50 = 7LL;
            goto LABEL_29;
          }

          uint64_t v110 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_14_70(v110);
          OUTLINED_FUNCTION_0_97(&dword_0, v111, v112, "#IdiomSensitiveViewBuilder: Building views for AppleTV");
          uint64_t v50 = 7LL;
        }

        else
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v113 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v113, (uint64_t)static Logger.siriPhone);
          os_log_type_t v114 = OUTLINED_FUNCTION_6_44();
          if (!OUTLINED_FUNCTION_11_5(v114))
          {
            uint64_t v50 = 6LL;
            goto LABEL_29;
          }

          uint64_t v115 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_14_70(v115);
          OUTLINED_FUNCTION_0_97(&dword_0, v116, v117, "#IdiomSensitiveViewBuilder: Building views for IOS");
          uint64_t v50 = 6LL;
        }

        goto LABEL_28;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v92 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v92, (uint64_t)static Logger.siriPhone);
      os_log_type_t v93 = OUTLINED_FUNCTION_6_44();
      if (OUTLINED_FUNCTION_11_5(v93))
      {
        uint64_t v94 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_14_70(v94);
        OUTLINED_FUNCTION_0_97(&dword_0, v95, v96, "#IdiomSensitiveViewBuilder: Building views for CarPlay");
        uint64_t v50 = 5LL;
        goto LABEL_28;
      }

      uint64_t v50 = 5LL;
    }
  }

void protocol witness for IdiomSensitiveViewBuilding.makeViews(utteranceViews:_:) in conformance DefaultDisambiguationBuilder<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void protocol witness for IdiomSensitiveViewBuilding.makeViews(utteranceViews:_:) in conformance ConfirmationViewBuilder( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t IdiomSensitiveViewBuilding.makeViews()(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_43D71C);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  return IdiomSensitiveViewBuilding.makeViews(utteranceViews:)((uint64_t)_swiftEmptyArrayStorage, a1, a2);
}

uint64_t IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[5] = a3;
  void v4[6] = v3;
  v4[3] = a1;
  void v4[4] = a2;
  return swift_task_switch(IdiomSensitiveViewBuilding.makeViews(utteranceViews:), 0LL, 0LL);
}

uint64_t IdiomSensitiveViewBuilding.makeViews(utteranceViews:)()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc(48LL);
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v4 = v0;
  v4[1] = IdiomSensitiveViewBuilding.makeViews(utteranceViews:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 16,  0LL,  0LL,  0xD00000000000001ALL,  0x8000000000350C90LL,  partial apply for closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:),  v3,  v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  *(void *)(*(void *)v1 + 72LL) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = IdiomSensitiveViewBuilding.makeViews(utteranceViews:);
  }

  else
  {
    swift_task_dealloc();
    uint64_t v2 = IdiomSensitiveViewBuilding.makeViews(utteranceViews:);
  }

  return swift_task_switch(v2, 0LL, 0LL);
}

{
  uint64_t v0;
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v9);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 16) & ~v12;
  uint64_t v14 = swift_allocObject(&unk_413408, v13 + v11, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))( v14 + v13,  (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v9);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(a5 + 8))( a3,  partial apply for closure #1 in closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v14,  a4,  a5);
  return swift_release(v14);
}

void closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void, void))
{
  char v8 = a2;
  uint64_t v9 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    uint64_t v10 = (void *)v9;
  }

  else
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0) {
        uint64_t v39 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v39 = a1;
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v39);
      outlined consume of Result<[SAAceView], Error>(v9, 0);
    }

    else
    {
      uint64_t v11 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8LL));
    }

    uint64_t v10 = _swiftEmptyArrayStorage;
    if (v11)
    {
      uint64_t v45 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v11 < 0)
      {
        __break(1u);
        return;
      }

      uint64_t v40 = a7;
      uint64_t v12 = 0LL;
      a7 = (void (*)(void, void))(v9 & 0xC000000000000001LL);
      uint64_t v10 = v45;
      unint64_t v13 = 0xE300000000000000LL;
      while (v11 != v12)
      {
        if (a7) {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
        }
        else {
          id v14 = *(id *)(v9 + 8 * v12 + 32);
        }
        __int16 v15 = v14;
        uint64_t v16 = outlined bridged method (pb) of @objc AceObject.encodedClassName()(v14);
        if (v17) {
          uint64_t v18 = v16;
        }
        else {
          uint64_t v18 = 0x416E776F6E6B6E55LL;
        }
        if (v17) {
          unint64_t v19 = v17;
        }
        else {
          unint64_t v19 = 0xEE00776569566563LL;
        }
        uint64_t v20 = outlined bridged method (pb) of @objc SABaseCommand.aceId.getter(v15);
        if (v21) {
          uint64_t v22 = v20;
        }
        else {
          uint64_t v22 = 7104878LL;
        }
        if (v21) {
          uint64_t v23 = v21;
        }
        else {
          uint64_t v23 = (void *)0xE300000000000000LL;
        }
        uint64_t v43 = v18;
        unint64_t v44 = v19;
        v24._uint64_t countAndFlagsBits = 0x3D64496563615BLL;
        v24._object = (void *)0xE700000000000000LL;
        String.append(_:)(v24);
        v25._uint64_t countAndFlagsBits = v22;
        v25._object = v23;
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        v26._uint64_t countAndFlagsBits = 93LL;
        v26._object = (void *)0xE100000000000000LL;
        String.append(_:)(v26);

        unint64_t v27 = v19;
        uint64_t v45 = v10;
        unint64_t v28 = v10[2];
        if (v28 >= v10[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v10 = v45;
        }

        ++v12;
        void v10[2] = v28 + 1;
        uint64_t v29 = &v10[2 * v28];
        v29[4] = v18;
        v29[5] = v27;
        uint64_t v9 = a1;
        if (v11 == v12)
        {
          a7 = v40;
          goto LABEL_28;
        }
      }

      __break(1u);
      goto LABEL_35;
    }

uint64_t sub_27EE00()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t partial apply for closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(uint64_t a1)
{
  return closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(a1, v1[4], v1[5], v1[2], v1[3]);
}

ValueMetadata *type metadata accessor for StartCallViewBuilders()
{
  return &type metadata for StartCallViewBuilders;
}

ValueMetadata *type metadata accessor for SCHViewBuilders()
{
  return &type metadata for SCHViewBuilders;
}

uint64_t sub_27EE60()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t outlined copy of Result<[String], Error>(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRetain(a1);
  }
  else {
    return swift_bridgeObjectRetain(a1);
  }
}

void OUTLINED_FUNCTION_0_97(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

void *OUTLINED_FUNCTION_1_91(uint64_t a1, uint64_t a2, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))((uint64_t *)va, v2, v3);
}

void *OUTLINED_FUNCTION_2_84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *(*v9)(uint64_t *__return_ptr, uint64_t, uint64_t);
  va_list va;
  va_start(va, a7);
  return v9((uint64_t *)va, v8, v7);
}

uint64_t OUTLINED_FUNCTION_4_97(void *a1)
{
  return v1;
}

uint64_t OUTLINED_FUNCTION_10_74()
{
  return outlined consume of Result<[SAAceView], Error>(v0, v1);
}

uint64_t OUTLINED_FUNCTION_11_81()
{
  return outlined copy of Result<[String], Error>(v0, v1);
}

_WORD *OUTLINED_FUNCTION_14_70(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t InferenceSource.rawValue.getter()
{
  return 0x747369486C6C6163LL;
}

BOOL InferenceSource.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of InferenceSource.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

unint64_t lazy protocol witness table accessor for type InferenceSource and conformance InferenceSource()
{
  unint64_t result = lazy protocol witness table cache variable for type InferenceSource and conformance InferenceSource;
  if (!lazy protocol witness table cache variable for type InferenceSource and conformance InferenceSource)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for InferenceSource,  &type metadata for InferenceSource);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type InferenceSource and conformance InferenceSource);
  }

  return result;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance InferenceSource@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = InferenceSource.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance InferenceSource(void *a1@<X8>)
{
  *a1 = 0x747369486C6C6163LL;
  a1[1] = 0xEB0000000079726FLL;
}

uint64_t storeEnumTagSinglePayload for InferenceSource(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_27F09C + 4 * asc_33BE30[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_27F0BC + 4 * byte_33BE35[v4]))();
  }
}

_BYTE *sub_27F09C(_BYTE *result, char a2)
{
  *BOOL result = a2;
  return result;
}

_BYTE *sub_27F0BC(_BYTE *result)
{
  *BOOL result = 0;
  return result;
}

_DWORD *sub_27F0C4(_DWORD *result, int a2)
{
  *BOOL result = a2;
  return result;
}

_WORD *sub_27F0CC(_WORD *result, __int16 a2)
{
  *BOOL result = a2;
  return result;
}

_WORD *sub_27F0D4(_WORD *result)
{
  *BOOL result = 0;
  return result;
}

_DWORD *sub_27F0DC(_DWORD *result)
{
  *BOOL result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InferenceSource()
{
  return &type metadata for InferenceSource;
}

uint64_t static StartCallViewBuilders.makeFaceTimeSettingsViewBuilder(templatingService:sharedGlobals:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v11 = static os_log_type_t.debug.getter(v9, v10);
  if (OUTLINED_FUNCTION_63(v11))
  {
    uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v9, v3, "#StartCallViewBuilders Providing FaceTimeSettingsBuilder", v12, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v12);
  }

  outlined init with copy of SignalProviding(a2, (uint64_t)(a3 + 1));
  *a3 = a1;
  type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  uint64_t v13 = swift_retain();
  static CATOption.defaultMode.getter(v13);
  uint64_t result = OUTLINED_FUNCTION_106();
  a3[6] = result;
  return result;
}

uint64_t FaceTimeSettingsBuilder.init(templatingService:sharedGlobals:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a3 + 1));
  uint64_t v6 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  static CATOption.defaultMode.getter(v6);
  uint64_t result = OUTLINED_FUNCTION_106();
  a3[6] = result;
  return result;
}

uint64_t FaceTimeSettingsBuilder.phoneCallDisplayTextCATs.getter()
{
  return swift_retain(*(void *)(v0 + 48));
}

uint64_t FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (void *)*v3;
  outlined init with copy of FaceTimeSettingsBuilder(v4, (uint64_t)v13);
  uint64_t v9 = swift_allocObject(&unk_413518, 96LL, 7LL);
  __int128 v10 = v13[1];
  *(_OWORD *)(v9 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v13[0];
  *(_OWORD *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  *(_OWORD *)(v9 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v13[2];
  *(void *)(v9 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v14;
  *(void *)(v9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *(void *)(v9 + 80) = a2;
  *(void *)(v9 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a3;
  os_log_type_t v11 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                        + *v8
                                                                        + 120);
  OUTLINED_FUNCTION_6_1();
  swift_retain();
  v11(partial apply for closure #1 in FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:), v9);
  return swift_release(v9);
}

uint64_t closure #1 in FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), os_log_type_t a5)
{
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  outlined init with copy of Result<TemplatingResult, Error>(a1, v19 - v18);
  if (swift_getEnumCaseMultiPayload(v20, v17) == 1)
  {
    uint64_t v21 = *v20;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_8_55();
    uint64_t v23 = OUTLINED_FUNCTION_8_55();
    Swift::String v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_63(v25))
    {
      Swift::String v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      unint64_t v27 = (void *)OUTLINED_FUNCTION_7_0(8LL);
      *(_DWORD *)Swift::String v26 = 138412290;
      OUTLINED_FUNCTION_8_55();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError(v21);
      uint64_t v52 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v26 + 4);
      *unint64_t v27 = v28;
      OUTLINED_FUNCTION_7_68();
      OUTLINED_FUNCTION_7_68();
      _os_log_impl( &dword_0,  v24,  a5,  "#FaceTimeSettingsBuilder failed to generate templating result for appSettings: %@",  v26,  0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy(v27, 1LL);
      OUTLINED_FUNCTION_0_2((uint64_t)v27);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }

    else
    {
      OUTLINED_FUNCTION_7_68();
      OUTLINED_FUNCTION_7_68();
    }

    OUTLINED_FUNCTION_8_55();
    a4(v21, 1LL);
    OUTLINED_FUNCTION_7_68();
    return OUTLINED_FUNCTION_7_68();
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v13 + 32))(v16, v20, v12);
    id v29 = [objc_allocWithZone(SAUIOpenLink) init];
    URL.init(string:)(0xD000000000000013LL, 0x8000000000348A40LL);
    uint64_t v30 = type metadata accessor for URL(0LL);
    uint64_t v32 = 0LL;
    if (__swift_getEnumTagSinglePayload(v11, 1LL, v30) != 1)
    {
      URL._bridgeToObjectiveC()(v31);
      uint64_t v32 = v33;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8LL))(v11, v30);
    }

    [v29 setRef:v32];

    uint64_t v35 = OUTLINED_FUNCTION_49( v34,  (unint64_t *)&lazy cache variable for type metadata for SAUIButton,  &OBJC_CLASS___SAUIButton_ptr);
    uint64_t result = TemplatingResult.print.getter(v35);
    if (*(void *)(result + 16))
    {
      uint64_t v50 = a4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v38 = swift_allocObject(v37, 40LL, 7LL);
      *(_OWORD *)(v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
      *(void *)(v38 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
      uint64_t v52 = v38;
      specialized Array._endMutation()(v38, v39, v40, v41);
      id v42 = v29;
      SAUIButton.init(text:commands:)();
      unint64_t v44 = v43;
      uint64_t v45 = type metadata accessor for SiriKitAceViewBuilder(0LL);
      os_log_type_t v46 = a2 + 1;
      uint64_t v48 = a2[4];
      uint64_t v47 = a2[5];
      __swift_project_boxed_opaque_existential_1(v46, v48);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v47 + 8))(&v52, v48, v47);
      dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(&v52);
      __swift_destroy_boxed_opaque_existential_1(&v52);
      dispatch thunk of SiriKitAceViewBuilder.addButton(button:)(v44);
      OUTLINED_FUNCTION_38_6();
      dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a3);
      uint64_t v49 = swift_release(v45);
      dispatch thunk of SiriKitAceViewBuilder.build()(v49);
      OUTLINED_FUNCTION_38_6();
      v50(v45, 0LL);

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    }

    else
    {
      __break(1u);
    }
  }

  return result;
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForWatch(utteranceViews:_:) in conformance FaceTimeSettingsBuilder()
{
  return FaceTimeSettingsBuilder.makeViewsForWatch(utteranceViews:_:)();
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForMac(utteranceViews:_:) in conformance FaceTimeSettingsBuilder( uint64_t a1, uint64_t (*a2)(void *, void))
{
  return FaceTimeSettingsBuilder.makeViewsForMac(utteranceViews:_:)(a1, a2);
}

uint64_t sub_27F7D8()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t destroy for FaceTimeSettingsBuilder(void *a1)
{
  return swift_release(a1[6]);
}

uint64_t initializeWithCopy for FaceTimeSettingsBuilder(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  uint64_t v5 = a2 + 1;
  __int128 v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v4);
  v8(a1 + 8, v5, v7);
  uint64_t v9 = a2[6];
  *(void *)(a1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v9;
  swift_retain(v9);
  return a1;
}

uint64_t *assignWithCopy for FaceTimeSettingsBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  uint64_t v5 = a2[6];
  uint64_t v6 = a1[6];
  a1[6] = v5;
  swift_retain();
  swift_release(v6);
  return a1;
}

uint64_t *assignWithTake for FaceTimeSettingsBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = *(_OWORD *)(a2 + 3);
  uint64_t v5 = a2[6];
  uint64_t v6 = a1[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FaceTimeSettingsBuilder(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(OUTLINED_FUNCTION_2_18(v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(OUTLINED_FUNCTION_2_18(v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceTimeSettingsBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for FaceTimeSettingsBuilder()
{
  return &type metadata for FaceTimeSettingsBuilder;
}

_UNKNOWN **sub_27FA24()
{
  return &protocol witness table for FaceTimeSettingsBuilder;
}

uint64_t Transformer<>.transformer.unsafeMutableAddressor()
{
  return INPersonCodable.transformer.unsafeMutableAddressor( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>,  (uint64_t)&static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer);
}

{
  return INPersonCodable.transformer.unsafeMutableAddressor( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<IncomingCallIntentResponse, Input>,  (uint64_t)&static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer);
}

{
  return INPersonCodable.transformer.unsafeMutableAddressor( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallAudioRoute?>,  (uint64_t)static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer);
}

{
  return INPersonCodable.transformer.unsafeMutableAddressor( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<UsoTask_noVerb_common_PhoneNumber, UsoTask?>,  (uint64_t)static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer);
}

void NLv4Transformer.__allocating_init(referenceResolver:featureManager:)(void *a1)
{
}

uint64_t UsoIdentifierAppBundleType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000015LL;
  }
  else {
    return 0x746163696C707041LL;
  }
}

uint64_t UsoIdentifierNamespaceType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_27FB48 + 4 * aD[a1]))( 0xD000000000000012LL,  0x8000000000346510LL);
}

unint64_t sub_27FB48()
{
  return 0xD000000000000014LL;
}

uint64_t sub_27FBD0()
{
  return 0x656D614E707061LL;
}

uint64_t sub_27FBE8()
{
  return 0x6369746E616D6573LL;
}

uint64_t sub_27FC0C()
{
  return v0 + 2;
}

uint64_t sub_27FC20()
{
  return 0x65746C615F727361LL;
}

void sub_27FC44()
{
}

void specialized SiriPhoneContact.update(person:)()
{
  uint64_t v164 = v0;
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v156 = v4;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v163 = v5;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v152 = v6;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v153 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v150 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v151 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v161 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v162 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v159 = v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v160 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v157 = v14;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v158 = v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v17 = (char *)&v146 - v16;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v146 - v18;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v146 - v20;
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin();
  uint64_t v23 = (char *)&v146 - v22;
  uint64_t v24 = __chkstk_darwin();
  Swift::String v26 = (char *)&v146 - v25;
  id v166 = v3;
  id v27 = OUTLINED_FUNCTION_38_37(v24, "nameComponents");
  if (v27)
  {
    uint64_t v28 = v27;
    OUTLINED_FUNCTION_142_10();

    uint64_t v29 = type metadata accessor for PersonNameComponents(0LL);
    uint64_t v30 = (uint64_t)v23;
    uint64_t v31 = 0LL;
  }

  else
  {
    uint64_t v29 = type metadata accessor for PersonNameComponents(0LL);
    uint64_t v30 = (uint64_t)v23;
    uint64_t v31 = 1LL;
  }

  OUTLINED_FUNCTION_1_38(v30, v31);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v23,  (uint64_t)v26,  &demangling cache variable for type metadata for PersonNameComponents?);
  type metadata accessor for PersonNameComponents(0LL);
  uint64_t v32 = OUTLINED_FUNCTION_13_21((uint64_t)v26);
  id v33 = v166;
  uint64_t v34 = v164;
  uint64_t v165 = v29;
  if ((_DWORD)v32)
  {
    OUTLINED_FUNCTION_122_0(v32, &demangling cache variable for type metadata for PersonNameComponents?);
    uint64_t v163 = 0LL;
    uint64_t v149 = 0LL;
    goto LABEL_26;
  }

  uint64_t v35 = PersonNameComponents.givenName.getter();
  unint64_t v37 = v36;
  OUTLINED_FUNCTION_122_0(v35, &demangling cache variable for type metadata for PersonNameComponents?);
  if (!v37) {
    goto LABEL_24;
  }
  uint64_t v38 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000LL) == 0) {
    uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
  }
  if (!v38) {
    goto LABEL_23;
  }
  uint64_t v155 = v37;
  if (OUTLINED_FUNCTION_31_43())
  {
    OUTLINED_FUNCTION_164_5();

    uint64_t v39 = 0LL;
  }

  else
  {
    uint64_t v39 = 1LL;
  }

  OUTLINED_FUNCTION_1_38((uint64_t)v21, v39);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v21,  v1,  &demangling cache variable for type metadata for PersonNameComponents?);
  if (!OUTLINED_FUNCTION_13_21(v1))
  {
    uint64_t v41 = PersonNameComponents.familyName.getter();
    unint64_t v43 = v42;
    OUTLINED_FUNCTION_8_63(v41, &demangling cache variable for type metadata for PersonNameComponents?);
    if (v43)
    {
      uint64_t v44 = HIBYTE(v43) & 0xF;
      if ((v43 & 0x2000000000000000LL) == 0) {
        uint64_t v44 = v41 & 0xFFFFFFFFFFFFLL;
      }
      if (v44)
      {
        uint64_t v154 = v41;
        id v45 = OUTLINED_FUNCTION_31_43();
        if (v45)
        {
          os_log_type_t v46 = v45;
          uint64_t v47 = v156;
          static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v48 = 0LL;
          uint64_t v49 = v163;
        }

        else
        {
          uint64_t v48 = 1LL;
          uint64_t v49 = v163;
          uint64_t v47 = v156;
        }

        OUTLINED_FUNCTION_1_38(v47, v48);
        _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( v47,  v49,  &demangling cache variable for type metadata for PersonNameComponents?);
        uint64_t v138 = OUTLINED_FUNCTION_13_21(v49);
        if ((_DWORD)v138)
        {
          OUTLINED_FUNCTION_122_0(v138, &demangling cache variable for type metadata for PersonNameComponents?);
        }

        else
        {
          uint64_t v140 = PersonNameComponents.middleName.getter();
          unint64_t v142 = v141;
          OUTLINED_FUNCTION_122_0(v140, &demangling cache variable for type metadata for PersonNameComponents?);
          if (v142)
          {
            uint64_t v143 = HIBYTE(v142) & 0xF;
            if ((v142 & 0x2000000000000000LL) == 0) {
              uint64_t v143 = v140 & 0xFFFFFFFFFFFFLL;
            }
            if (v143)
            {
              uint64_t v171 = v35;
              uint64_t v172 = v155;
              OUTLINED_FUNCTION_27_17();
              v144._uint64_t countAndFlagsBits = v140;
              v144._object = (void *)v142;
              String.append(_:)(v144);
              OUTLINED_FUNCTION_23_5();
              goto LABEL_100;
            }

            OUTLINED_FUNCTION_23_5();
          }
        }

        uint64_t v171 = v35;
        uint64_t v172 = v155;
LABEL_100:
        OUTLINED_FUNCTION_27_17();
        v139._uint64_t countAndFlagsBits = v154;
        v139._object = (void *)v43;
        String.append(_:)(v139);
        OUTLINED_FUNCTION_13_1();
        uint64_t v163 = v171;
        uint64_t v149 = (void *)v172;
        goto LABEL_25;
      }

      swift_bridgeObjectRelease();
    }

LABEL_85:
  id v131 = OUTLINED_FUNCTION_18_62();
  if (v131)
  {
    id v132 = OUTLINED_FUNCTION_170_4((uint64_t)v131, "label");
    OUTLINED_FUNCTION_132_11();
    if (v120)
    {
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_51_22();
    }
  }

  OUTLINED_FUNCTION_60_26(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v121 + 488LL));
  id v133 = OUTLINED_FUNCTION_18_62();
  if (v133 && (OUTLINED_FUNCTION_149_7(v133), OUTLINED_FUNCTION_124_8(), v113 == 1))
  {
    uint64_t v134 = 0LL;
  }

  else
  {
    id v135 = OUTLINED_FUNCTION_18_62();
    if (v135 && (OUTLINED_FUNCTION_149_7(v135), OUTLINED_FUNCTION_124_8(), v113 == 2)) {
      uint64_t v134 = 1LL;
    }
    else {
      uint64_t v134 = 2LL;
    }
  }

  (*(void (**)(uint64_t))(*(void *)v121 + 536LL))(v134);
  v167[0] = v122;
  char v168 = 0;
  uint64_t v136 = *(void (**)(id *))(*(void *)v121 + 632LL);
  id v137 = v122;
  v136(v167);
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_7_5();
}

void *String.UsoAttributeNameRelationshipType.unsafeMutableAddressor()
{
  return &static String.UsoAttributeNameRelationshipType;
}

PhoneCallFlowDelegatePlugin::UsoIdentifierAppBundleType_optional __swiftcall UsoIdentifierAppBundleType.init(rawValue:)( Swift::String rawValue)
{
  return result;
}

uint64_t static Transformer<>.transformer(sharedGlobals:app:sirikitIntent:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = swift_allocObject(&unk_413638, 72LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(&v9, v5 + 16);
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  UsoEntity_common_Person.usoPerson.getter();
  id v6 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  return Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:sirikitIntent:),  v5,  v7);
}

void specialized UsoContactConvertible.nameSpans.getter(void (*a1)(uint64_t, unint64_t))
{
}

uint64_t specialized UsoContactConvertible.hasFullBusinessNameProperty.getter()
{
  uint64_t v0 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  specialized UsoContactConvertible.nameSpans.getter((void (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getEntitySpansFor(attributeName:));
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v7 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v8 = *(void *)(v1 + 72);
    __int128 v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v9(v3, v7, v0);
      char v10 = closure #1 in UsoContactConvertible.hasFullBusinessNameProperty.getter((uint64_t)v3);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      if ((v10 & 1) != 0) {
        break;
      }
      v7 += v8;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n(v5, 2LL);
        return 0LL;
      }
    }

    swift_bridgeObjectRelease_n(v5, 2LL);
    return 1LL;
  }

  else
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

uint64_t EntitySpanPropertyKey.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_52_28 + 4 * byte_33BF5D[a1]))( 0x7373656E69737562LL,  0xEC000000656D614ELL);
}

uint64_t sub_280AB8()
{
  return 0x72506E6F73726570LL;
}

uint64_t sub_280AD8()
{
  return 0x75536E6F73726570LL;
}

uint64_t specialized UsoContactConvertible.isNameLikelyNonBusiness()()
{
  uint64_t v1 = type metadata accessor for PayloadAttachmentInfo.AttachmentType(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v152 = (char *)v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
  __chkstk_darwin();
  uint64_t v165 = (uint64_t)v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo?);
  __chkstk_darwin();
  uint64_t v6 = (char *)v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  __chkstk_darwin();
  uint64_t v162 = (char *)v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v163 = (uint64_t)v134 - v8;
  __chkstk_darwin();
  uint64_t v155 = (uint64_t)v134 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpanProperty?);
  __chkstk_darwin();
  uint64_t v154 = (char *)v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v156 = (char *)v134 - v11;
  __chkstk_darwin();
  uint64_t v160 = (char *)v134 - v12;
  uint64_t v13 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v161 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v159 = (char *)v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v164 = (char *)v134 - v15;
  __chkstk_darwin();
  id v166 = (char *)v134 - v16;
  __chkstk_darwin();
  uint64_t v18 = (char *)v134 - v17;
  uint64_t v149 = type metadata accessor for IndexSet.RangeView(0LL);
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin();
  uint64_t v147 = (char *)v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v151 = type metadata accessor for IndexSet(0LL);
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin();
  uint64_t v153 = (char *)v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  __chkstk_darwin();
  uint64_t v22 = (char *)v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v24 = (char *)v134 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceAlignment?);
  __chkstk_darwin();
  Swift::String v26 = (char *)v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for UtteranceAlignment(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v167 = v27;
  uint64_t v168 = v28;
  uint64_t v29 = __chkstk_darwin();
  uint64_t v157 = (char *)v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v172 = v0;
  uint64_t v31 = dispatch thunk of UsoEntity_common_Person.name.getter(v29);
  if (!v32) {
    goto LABEL_9;
  }
  uint64_t v33 = v32;
  uint64_t v34 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000LL) == 0) {
    uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (!v34)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v42 = static os_log_type_t.debug.getter(v40, v41);
    if (os_log_type_enabled(v40, v42))
    {
      unint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v44 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)unint64_t v43 = 136315138;
      uint64_t v169 = 0LL;
      unint64_t v170 = 0xE000000000000000LL;
      uint64_t v171 = v44;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized UsoContactConvertible.isNameLikelyNonBusiness(),  0xD000000000000019LL,  (void *)0x8000000000350420LL);
      uint64_t v169 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v169, v170, &v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170, v43 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v40, v42, "%s -  Name is nil or empty, returning false", v43, 0xCu);
      swift_arrayDestroy(v44, 1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);
    }

    return 0;
  }

  uint64_t v145 = v31;
  uint64_t v146 = v2;
  specialized UsoContactConvertible.nameSpans.getter((void (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getEntitySpansFor(attributeName:));
  uint64_t v36 = *(void *)(v35 + 16);
  swift_bridgeObjectRelease();
  if (!v36)
  {
    swift_bridgeObjectRelease();
    return 0;
  }

  specialized UsoContactConvertible.nameSpans.getter((void (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenBase.getUtteranceAlignmentsHelper(attributeName:));
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v37 = v167;
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1LL, v167) == 1)
  {
    swift_bridgeObjectRelease();
    outlined destroy of UUID?((uint64_t)v26, &demangling cache variable for type metadata for UtteranceAlignment?);
    return 0;
  }

  uint64_t v140 = v6;
  uint64_t v139 = v1;
  uint64_t v47 = v168;
  uint64_t v48 = v157;
  (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v157, v26, v37);
  uint64_t v49 = specialized UsoContactConvertible.hasFullBusinessNameProperty.getter();
  if ((v49 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v37);
    return 0;
  }

  UtteranceAlignment.spans.getter(v49);
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v50 = type metadata accessor for UtteranceSpan(0LL);
  uint64_t v51 = v48;
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1LL, v50) == 1)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    outlined destroy of UUID?((uint64_t)v24, &demangling cache variable for type metadata for UtteranceSpan?);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v51, v37);
    return 0;
  }

  unsigned int v52 = UtteranceSpan.startIndex.getter();
  id v53 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8LL);
  uint64_t v54 = v53(v24, v50);
  UtteranceAlignment.spans.getter(v54);
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1LL, v50) == 1)
  {
    uint64_t v24 = v22;
    uint64_t v37 = v167;
    goto LABEL_22;
  }

  unsigned int v55 = UtteranceSpan.endIndex.getter();
  uint64_t result = v53(v22, v50);
  if (v55 < v52) {
    goto LABEL_95;
  }
  unsigned int v135 = v52;
  IndexSet.init(integersIn:)(v52, v55);
  specialized UsoContactConvertible.nameSpans.getter((void (*)(uint64_t, unint64_t))&dispatch thunk of CodeGenGlobalArgs.getEntitySpansFor(attributeName:));
  uint64_t v57 = *(void *)(v56 + 16);
  uint64_t v58 = v168;
  uint64_t v59 = v155;
  if (!v57)
  {
LABEL_92:
    uint64_t v120 = swift_bridgeObjectRelease();
    uint64_t v121 = v147;
    id v122 = v153;
    IndexSet.rangeView.getter(v120);
    __chkstk_darwin();
    uint64_t v123 = v145;
    v134[-10] = v145;
    v134[-9] = v33;
    LODWORD(v134[-8]) = v135;
    v134[-7] = &type metadata for String;
    v134[-6] = &outlined read-only object #0 of specialized UsoContactConvertible.isNameLikelyNonBusiness();
    v134[-5] = 0LL;
    v134[-4] = 0LL;
    id v124 = v157;
    v134[-3] = v157;
    v134[-2] = &v172;
    id v125 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF10Foundation8IndexSetV9RangeViewV_SnySS0E0VGs5NeverOTg5((void (*)(__int128 *__return_ptr, __int128 *))partial apply for specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness());
    (*(void (**)(char *, uint64_t))(v148 + 8))(v121, v149);
    swift_bridgeObjectRetain();
    id v126 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySnySS5IndexVGG_Sss5NeverOTg5095_s27PhoneCallFlowDelegatePlugin21UsoContactConvertiblePAAE23isNameLikelyNonBusinessSbyFSsSnySS5D8VGXEfU0_SSTf1cn_n( (uint64_t)v125,  v123,  v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v169 = v126;
    uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Substring]);
    unint64_t v128 = lazy protocol witness table accessor for type [Substring] and conformance [A]();
    unint64_t v129 = lazy protocol witness table accessor for type Substring and conformance Substring();
    uint64_t v130 = Sequence<>.joined(separator:)(0LL, 0xE000000000000000LL, v127, v128, v129);
    uint64_t v132 = v131;
    swift_bridgeObjectRelease();
    BOOL v45 = specialized Sequence.allSatisfy(_:)(v130, v132);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v122, v151);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v124, v167);
    swift_bridgeObjectRelease();
    return v45;
  }

  unint64_t v60 = (*(unsigned __int8 *)(v161 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
  v134[1] = v56;
  uint64_t v61 = v56 + v60;
  unsigned int v137 = enum case for PayloadAttachmentInfo.AttachmentType.full(_:);
  uint64_t v138 = *(void *)(v161 + 72);
  uint64_t v62 = *(uint64_t (**)(void))(v161 + 16);
  unint64_t v142 = v62;
  uint64_t v136 = v13;
  while (1)
  {
    uint64_t v143 = v61;
    uint64_t v63 = v62(v18);
    uint64_t v64 = UsoEntitySpan.properties.getter(v63);
    uint64_t v65 = *(void *)(v64 + 16);
    uint64_t v66 = type metadata accessor for SpanProperty(0LL);
    uint64_t v67 = v66;
    if (v65)
    {
      uint64_t v68 = (uint64_t)v160;
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v66 - 8) + 16LL))( v160,  v64 + ((*(unsigned __int8 *)(*(void *)(v66 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v66 - 8) + 80LL)),  v66);
      uint64_t v69 = 0LL;
    }

    else
    {
      uint64_t v69 = 1LL;
      uint64_t v68 = (uint64_t)v160;
    }

    __swift_storeEnumTagSinglePayload(v68, v69, 1LL, v67);
    swift_bridgeObjectRelease();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v68, 1LL, v67);
    uint64_t v144 = v57;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of UUID?(v68, &demangling cache variable for type metadata for SpanProperty?);
      uint64_t v71 = ((uint64_t (*)(char *, char *, uint64_t))v62)(v166, v18, v13);
    }

    else
    {
      uint64_t v75 = SpanProperty.key.getter();
      uint64_t v77 = v76;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8LL))(v68, v67);
      if (v75 == 0x614E6E6F73726570LL && v77 == 0xEA0000000000656DLL)
      {
        swift_bridgeObjectRelease();
        uint64_t v80 = v166;
        uint64_t v62 = v142;
        ((void (*)(char *, char *, uint64_t))v142)(v166, v18, v13);
LABEL_40:
        id v81 = *(void (**)(char *, uint64_t))(v161 + 8);
        v81(v80, v13);
        uint64_t v82 = v164;
LABEL_52:
        ((void (*)(char *, char *, uint64_t))v62)(v82, v18, v13);
LABEL_53:
        v81(v82, v13);
        goto LABEL_54;
      }

      char v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v77, 0x614E6E6F73726570LL, 0xEA0000000000656DLL, 0LL);
      swift_bridgeObjectRelease();
      uint64_t v80 = v166;
      uint64_t v62 = v142;
      uint64_t v71 = ((uint64_t (*)(char *, char *, uint64_t))v142)(v166, v18, v13);
      if ((v79 & 1) != 0) {
        goto LABEL_40;
      }
    }

    uint64_t v72 = UsoEntitySpan.properties.getter(v71);
    if (*(void *)(v72 + 16))
    {
      uint64_t v73 = (uint64_t)v156;
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v67 - 8) + 16LL))( v156,  v72 + ((*(unsigned __int8 *)(*(void *)(v67 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v67 - 8) + 80LL)),  v67);
      uint64_t v74 = 0LL;
    }

    else
    {
      uint64_t v74 = 1LL;
      uint64_t v73 = (uint64_t)v156;
    }

    __swift_storeEnumTagSinglePayload(v73, v74, 1LL, v67);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v73, 1LL, v67) == 1)
    {
      outlined destroy of UUID?(v73, &demangling cache variable for type metadata for SpanProperty?);
      id v81 = *(void (**)(char *, uint64_t))(v161 + 8);
      v81(v166, v13);
      uint64_t v83 = ((uint64_t (*)(char *, char *, uint64_t))v62)(v164, v18, v13);
      goto LABEL_49;
    }

    uint64_t v84 = SpanProperty.key.getter();
    uint64_t v86 = v85;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8LL))(v73, v67);
    if (v84 == 0x72506E6F73726570LL && v86 == 0xEC00000078696665LL)
    {
      id v81 = *(void (**)(char *, uint64_t))(v161 + 8);
      v81(v166, v13);
      swift_bridgeObjectRelease();
      uint64_t v82 = v164;
      uint64_t v62 = v142;
      goto LABEL_52;
    }

    char v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v84, v86, 0x72506E6F73726570LL, 0xEC00000078696665LL, 0LL);
    id v81 = *(void (**)(char *, uint64_t))(v161 + 8);
    v81(v166, v13);
    swift_bridgeObjectRelease();
    uint64_t v82 = v164;
    uint64_t v62 = v142;
    uint64_t v83 = ((uint64_t (*)(char *, char *, uint64_t))v142)(v164, v18, v13);
    if ((v88 & 1) != 0) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v89 = UsoEntitySpan.properties.getter(v83);
    if (*(void *)(v89 + 16))
    {
      uint64_t v90 = (uint64_t)v154;
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v67 - 8) + 16LL))( v154,  v89 + ((*(unsigned __int8 *)(*(void *)(v67 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v67 - 8) + 80LL)),  v67);
      uint64_t v91 = 0LL;
    }

    else
    {
      uint64_t v91 = 1LL;
      uint64_t v90 = (uint64_t)v154;
    }

    __swift_storeEnumTagSinglePayload(v90, v91, 1LL, v67);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v90, 1LL, v67) == 1)
    {
      outlined destroy of UUID?(v90, &demangling cache variable for type metadata for SpanProperty?);
      v81(v164, v13);
      uint64_t v92 = v159;
      uint64_t v110 = ((uint64_t (*)(char *, char *, uint64_t))v62)(v159, v18, v13);
      goto LABEL_76;
    }

    uint64_t v115 = SpanProperty.key.getter();
    uint64_t v117 = v116;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8LL))(v90, v67);
    if (v115 == 0x75536E6F73726570LL && v117 == 0xEC00000078696666LL)
    {
      v81(v164, v13);
      swift_bridgeObjectRelease();
      uint64_t v62 = v142;
LABEL_54:
      uint64_t v92 = v159;
      ((void (*)(char *, char *, uint64_t))v62)(v159, v18, v13);
LABEL_55:
      uint64_t v93 = ((uint64_t (*)(char *, uint64_t))v81)(v92, v13);
      goto LABEL_56;
    }

    char v119 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v117, 0x75536E6F73726570LL, 0xEC00000078696666LL, 0LL);
    v81(v164, v13);
    swift_bridgeObjectRelease();
    uint64_t v92 = v159;
    uint64_t v62 = v142;
    uint64_t v110 = ((uint64_t (*)(char *, char *, uint64_t))v142)(v159, v18, v13);
    if ((v119 & 1) != 0) {
      goto LABEL_55;
    }
LABEL_76:
    uint64_t v111 = UsoEntitySpan.label.getter(v110);
    if (!v112)
    {
      v81(v92, v13);
      goto LABEL_71;
    }

    if (v111 == 0x75466E6F73726570LL && v112 == 0xEE00656D614E6C6CLL)
    {
      v81(v92, v13);
      uint64_t v93 = swift_bridgeObjectRelease();
    }

    else
    {
      char v114 = _stringCompareWithSmolCheck(_:_:expecting:)(v111, v112, 0x75466E6F73726570LL, 0xEE00656D614E6C6CLL, 0LL);
      v81(v92, v13);
      uint64_t v93 = swift_bridgeObjectRelease();
      if ((v114 & 1) == 0) {
        goto LABEL_71;
      }
    }

uint64_t EntitySpanLabel.rawValue.getter()
{
  return 0x75466E6F73726570LL;
}

uint64_t specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v64 = a2;
  uint64_t v63 = a6;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UtteranceSpan?);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = *(void *)(type metadata accessor for UtteranceAlignment(0LL) - 8);
  uint64_t v20 = __chkstk_darwin();
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = a1 - a5;
  if (__OFSUB__(a1, a5))
  {
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v60 = a1;
  uint64_t v61 = v18;
  uint64_t v62 = v16;
  uint64_t v18 = (char *)v20;
  uint64_t v24 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v24 = a3;
  }
  uint64_t v25 = 7LL;
  if (((a4 >> 60) & ((a3 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v25 = 11LL;
  }
  uint64_t v26 = v25 | (v24 << 16);
  uint64_t result = String.index(_:offsetBy:limitedBy:)(15LL, v23, v26, a3, a4);
  if ((v28 & 1) != 0)
  {
LABEL_11:
    a3 = a10;
    a5 = a11;
    a4 = a9;
    if (one-time initialization token for siriPhone == -1)
    {
LABEL_12:
      uint64_t v32 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
      (*(void (**)(char *, uint64_t, char *))(v19 + 16))(v22, a3, v18);
      swift_bridgeObjectRetain_n(a4, 2LL);
      swift_retain_n(a5, 2LL);
      uint64_t v33 = swift_bridgeObjectRetain_n(a7, 2LL);
      uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
      os_log_type_t v35 = static os_log_type_t.fault.getter();
      int v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v37 = swift_slowAlloc(42LL, -1LL);
        int v58 = v36;
        uint64_t v38 = v37;
        uint64_t v59 = swift_slowAlloc(128LL, -1LL);
        uint64_t v67 = v59;
        *(_DWORD *)uint64_t v38 = 136315906;
        uint64_t v65 = 0LL;
        unint64_t v66 = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        uint64_t v56 = v18;
        os_log_t v57 = v34;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( v63,  a7,  0xD000000000000019LL,  (void *)0x8000000000350420LL);
        swift_bridgeObjectRelease();
        uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v38 + 4);
        swift_bridgeObjectRelease_n(a4, 2LL);
        swift_bridgeObjectRelease_n(a7, 2LL);
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v45 = specialized Range.description.getter(v60, v64, v39, v40, v41, v42, v43, v44);
        uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v38 + 14);
        uint64_t v47 = swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        UtteranceAlignment.spans.getter(v47);
        uint64_t v48 = v61;
        specialized Collection.first.getter();
        swift_bridgeObjectRelease();
        uint64_t v49 = String.init<A>(describing:)(v48, v62);
        uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v38 + 24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v19 + 8))(v22, v56);
        *(_WORD *)(v38 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v65 = a5;
        uint64_t v51 = type metadata accessor for UsoEntity_common_Person(0LL);
        swift_retain();
        uint64_t v52 = String.init<A>(describing:)(&v65, v51);
        uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, &v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v38 + 34);
        swift_release_n(a5, 2LL);
        swift_bridgeObjectRelease();
        os_log_t v54 = v57;
        _os_log_impl( &dword_0,  v57,  (os_log_type_t)v58,  "%s- Unexpected: UtteranceAlignment range is greater than name - Current Range: %s -- Alignment Span: %s -- Self: %s",  (uint8_t *)v38,  0x2Au);
        uint64_t v55 = v59;
        swift_arrayDestroy(v59, 4LL);
        swift_slowDealloc(v55, -1LL, -1LL);
        swift_slowDealloc(v38, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(a4, 2LL);
        swift_bridgeObjectRelease_n(a7, 2LL);
        (*(void (**)(char *, char *))(v19 + 8))(v22, v18);

        swift_release_n(a5, 2LL);
      }

      return 15LL;
    }

uint64_t one-time initialization function for logPrefix()
{
  uint64_t result = type metadata accessor for NLv4Transformer(0LL);
  static NLv4Transformer.logPrefix = result;
  *(void *)algn_478188 = &outlined read-only object #0 of one-time initialization function for logPrefix;
  qword_478190 = 0LL;
  unk_478198 = 0LL;
  return result;
}

uint64_t *NLv4Transformer.logPrefix.unsafeMutableAddressor()
{
  if (one-time initialization token for logPrefix != -1) {
    swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
  }
  return &static NLv4Transformer.logPrefix;
}

uint64_t static NLv4Transformer.logPrefix.getter()
{
  if (one-time initialization token for logPrefix != -1) {
    swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
  }
  uint64_t v0 = static NLv4Transformer.logPrefix;
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_6_1();
  return v0;
}

void NLv4Transformer.init(referenceResolver:featureManager:)(void *a1)
{
}

void NLv4Transformer.deinit()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  OUTLINED_FUNCTION_2_0(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t NLv4Transformer.__deallocating_deinit()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  OUTLINED_FUNCTION_2_0(v1);
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t one-time initialization function for phoneCallAttributesLast(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast( a1,  (uint64_t)&static Transformer<>.phoneCallAttributesLast,  (unsigned int *)&enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesLast(_:));
}

uint64_t one-time initialization function for phoneCallAttributesRecent(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast( a1,  (uint64_t)&static Transformer<>.phoneCallAttributesRecent,  (unsigned int *)&enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesRecent(_:));
}

uint64_t one-time initialization function for phoneCallAttributesMissed(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast( a1,  (uint64_t)&static Transformer<>.phoneCallAttributesMissed,  &enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesMissed(_:));
}

uint64_t one-time initialization function for phoneCallAttributesOutgoing(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast( a1,  (uint64_t)&static Transformer<>.phoneCallAttributesOutgoing,  (unsigned int *)&enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesOutgoing(_:));
}

uint64_t one-time initialization function for phoneCallAttributesReceived(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast( a1,  (uint64_t)&static Transformer<>.phoneCallAttributesReceived,  &enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesReceived(_:));
}

uint64_t one-time initialization function for phoneCallAttributesNewVoicemail(uint64_t a1)
{
  return one-time initialization function for phoneCallAttributesLast( a1,  (uint64_t)&static Transformer<>.phoneCallAttributesNewVoicemail,  &enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesNew(_:));
}

uint64_t one-time initialization function for phoneCallAttributesLast( uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  OUTLINED_FUNCTION_139_9(v5);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104LL))(v6, *a3, v5);
}

uint64_t static Transformer<>.updatePhoneNounAndAttributesForLatestCallHistory(attribute:phoneCallAttributes:phoneCallNoun:)( uint64_t a1, uint64_t *a2, char *a3)
{
  os_log_type_t v35 = a3;
  uint64_t v4 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v34 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  __chkstk_darwin();
  uint64_t v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  __chkstk_darwin();
  uint64_t v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  uint64_t v13 = &v32[-v12];
  uint64_t v14 = __chkstk_darwin();
  uint64_t v16 = &v32[-v15];
  uint64_t v17 = dispatch thunk of CodeGenListEntry.entry.getter(&v36, v14);
  uint64_t v18 = v36;
  if (v36)
  {
    uint64_t v19 = CodeGenBase.entity.getter(v17);
    swift_release(v18);
  }

  else
  {
    uint64_t v19 = 0LL;
  }

  uint64_t v20 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute(0LL);
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v37, v19, v20, v20);
  uint64_t result = swift_release(v19);
  uint64_t v22 = v37;
  if (v37)
  {
    dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(result);
    (*(void (**)(_BYTE *, void, uint64_t))(v5 + 104))( v13,  enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesCurrent(_:),  v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v4);
    uint64_t v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
    outlined init with copy of PhoneCallNLIntent?( (uint64_t)v16,  (uint64_t)v9,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    outlined init with copy of PhoneCallNLIntent?( (uint64_t)v13,  v23,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v4) == 1)
    {
      outlined destroy of UUID?( (uint64_t)v13,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      outlined destroy of UUID?( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if (__swift_getEnumTagSinglePayload(v23, 1LL, v4) == 1)
      {
        outlined destroy of UUID?( (uint64_t)v9,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_13:
        char v27 = 8;
LABEL_15:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v30 = *(void *)(*a2 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        uint64_t v31 = *a2;
        *(void *)(v31 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v30 + 1;
        *(_BYTE *)(v31 + v30 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v27;
        uint64_t result = swift_release(v22);
        char v24 = 0;
        *a2 = v31;
        goto LABEL_16;
      }
    }

    else
    {
      outlined init with copy of PhoneCallNLIntent?( (uint64_t)v9,  (uint64_t)v11,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if (__swift_getEnumTagSinglePayload(v23, 1LL, v4) != 1)
      {
        uint64_t v25 = v34;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v34, v23, v4);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
        int v33 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v25, v4);
        uint64_t v26 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
        v26(v25, v4);
        outlined destroy of UUID?( (uint64_t)v13,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        outlined destroy of UUID?( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        v26(v11, v4);
        outlined destroy of UUID?( (uint64_t)v9,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        if ((v33 & 1) != 0) {
          goto LABEL_13;
        }
LABEL_14:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v28 = *(void *)(*a2 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        uint64_t v29 = *a2;
        *(void *)(v29 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v28 + 1;
        *(_BYTE *)(v29 + v28 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 6;
        *a2 = v29;
        char v27 = 4;
        goto LABEL_15;
      }

      outlined destroy of UUID?( (uint64_t)v13,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      outlined destroy of UUID?( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
    }

    outlined destroy of UUID?( (uint64_t)v9,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
    goto LABEL_14;
  }

  char v24 = 1;
LABEL_16:
  *os_log_type_t v35 = v24;
  return result;
}

uint64_t static Transformer<>.updatePhoneNounAndAttributesForGeneralCallHistory(attribute:phoneCallAttributes:)( uint64_t a1, uint64_t *a2)
{
  uint64_t v80 = a2;
  uint64_t v2 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v81 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v76 = (uint64_t)&v71 - v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v71 - v7;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v71 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  __chkstk_darwin();
  uint64_t v71 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  char v79 = (char *)&v71 - v12;
  __chkstk_darwin();
  uint64_t v72 = (uint64_t)&v71 - v13;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v71 - v14;
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)&v71 - v15;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v71 - v16;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v71 - v18;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v71 - v20;
  uint64_t v22 = __chkstk_darwin();
  char v24 = (char *)&v71 - v23;
  uint64_t v25 = dispatch thunk of CodeGenListEntry.entry.getter(&v83, v22);
  uint64_t v26 = v83;
  if (v83)
  {
    uint64_t v27 = CodeGenBase.entity.getter(v25);
    swift_release(v26);
  }

  else
  {
    uint64_t v27 = 0LL;
  }

  uint64_t v28 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute(0LL);
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v84, v27, v28, v28);
  uint64_t result = swift_release(v27);
  if (v84)
  {
    uint64_t v77 = v84;
    dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(result);
    if (one-time initialization token for phoneCallAttributesMissed != -1) {
      swift_once( &one-time initialization token for phoneCallAttributesMissed,  one-time initialization function for phoneCallAttributesMissed);
    }
    uint64_t v30 = __swift_project_value_buffer(v2, (uint64_t)&static Transformer<>.phoneCallAttributesMissed);
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
    v74(v21, v30, v2);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0LL, 1LL, v2);
    uint64_t v31 = (uint64_t)&v10[*(int *)(v82 + 48)];
    outlined init with copy of PhoneCallNLIntent?( (uint64_t)v21,  (uint64_t)v10,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    outlined init with copy of PhoneCallNLIntent?( (uint64_t)v24,  v31,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v2) == 1)
    {
      outlined destroy of UUID?( (uint64_t)v21,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if (__swift_getEnumTagSinglePayload(v31, 1LL, v2) == 1)
      {
        outlined destroy of UUID?( (uint64_t)v10,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_14:
        outlined destroy of UUID?( (uint64_t)v24,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        uint64_t v36 = v80;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v37 = *(void *)(*v36 + 16);
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        uint64_t v38 = *v36;
        *(void *)(v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v37 + 1;
        *(_BYTE *)(v38 + v37 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
LABEL_46:
        uint64_t result = swift_release(v77);
        *uint64_t v36 = v38;
        return result;
      }
    }

    else
    {
      outlined init with copy of PhoneCallNLIntent?( (uint64_t)v10,  (uint64_t)v19,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if (__swift_getEnumTagSinglePayload(v31, 1LL, v2) != 1)
      {
        uint64_t v32 = v4;
        uint64_t v33 = v81;
        (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v32, v31, v2);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
        char v34 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v32, v2);
        os_log_type_t v35 = *(void (**)(char *, uint64_t))(v33 + 8);
        v35(v32, v2);
        outlined destroy of UUID?( (uint64_t)v21,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        v35(v19, v2);
        uint64_t v4 = v32;
        outlined destroy of UUID?( (uint64_t)v10,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        if ((v34 & 1) != 0) {
          goto LABEL_14;
        }
LABEL_15:
        if (one-time initialization token for phoneCallAttributesOutgoing != -1) {
          swift_once( &one-time initialization token for phoneCallAttributesOutgoing,  one-time initialization function for phoneCallAttributesOutgoing);
        }
        uint64_t v39 = __swift_project_value_buffer(v2, (uint64_t)&static Transformer<>.phoneCallAttributesOutgoing);
        uint64_t v40 = (void (*)(uint64_t, uint64_t, uint64_t))v74;
        v74(v17, v39, v2);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0LL, 1LL, v2);
        uint64_t v41 = (uint64_t)&v8[*(int *)(v82 + 48)];
        outlined init with copy of PhoneCallNLIntent?( (uint64_t)v17,  (uint64_t)v8,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        outlined init with copy of PhoneCallNLIntent?( (uint64_t)v24,  v41,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v2);
        uint64_t v44 = (uint64_t)v78;
        uint64_t v43 = (uint64_t)v79;
        if (EnumTagSinglePayload == 1)
        {
          outlined destroy of UUID?( (uint64_t)v17,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          if (__swift_getEnumTagSinglePayload(v41, 1LL, v2) == 1)
          {
            outlined destroy of UUID?( (uint64_t)v8,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_37:
            outlined destroy of UUID?( (uint64_t)v24,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            uint64_t v36 = v80;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v59 = *(void *)(*v36 + 16);
            specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            uint64_t v38 = *v36;
            *(void *)(v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v59 + 1;
            uint64_t v60 = v38 + v59;
            char v61 = 5;
LABEL_45:
            *(_BYTE *)(v60 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v61;
            goto LABEL_46;
          }
        }

        else
        {
          uint64_t v45 = v75;
          outlined init with copy of PhoneCallNLIntent?( (uint64_t)v8,  v75,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          if (__swift_getEnumTagSinglePayload(v41, 1LL, v2) != 1)
          {
            uint64_t v53 = v45;
            uint64_t v54 = v81;
            (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v4, v41, v2);
            lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
            char v55 = dispatch thunk of static Equatable.== infix(_:_:)(v53, v4, v2);
            uint64_t v56 = v4;
            os_log_t v57 = *(void (**)(char *, uint64_t))(v54 + 8);
            v57(v56, v2);
            outlined destroy of UUID?( (uint64_t)v17,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            uint64_t v58 = v53;
            uint64_t v43 = (uint64_t)v79;
            v57((char *)v58, v2);
            uint64_t v4 = v56;
            uint64_t v40 = (void (*)(uint64_t, uint64_t, uint64_t))v74;
            outlined destroy of UUID?( (uint64_t)v8,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            if ((v55 & 1) != 0) {
              goto LABEL_37;
            }
LABEL_23:
            if (one-time initialization token for phoneCallAttributesReceived != -1) {
              swift_once( &one-time initialization token for phoneCallAttributesReceived,  one-time initialization function for phoneCallAttributesReceived);
            }
            uint64_t v46 = __swift_project_value_buffer(v2, (uint64_t)&static Transformer<>.phoneCallAttributesReceived);
            v40(v44, v46, v2);
            __swift_storeEnumTagSinglePayload(v44, 0LL, 1LL, v2);
            uint64_t v47 = v76;
            uint64_t v48 = v76 + *(int *)(v82 + 48);
            outlined init with copy of PhoneCallNLIntent?( v44,  v76,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            outlined init with copy of PhoneCallNLIntent?( (uint64_t)v24,  v48,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            if (__swift_getEnumTagSinglePayload(v47, 1LL, v2) == 1)
            {
              outlined destroy of UUID?( v44,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              if (__swift_getEnumTagSinglePayload(v48, 1LL, v2) == 1)
              {
                outlined destroy of UUID?( v47,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_42:
                outlined destroy of UUID?( (uint64_t)v24,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                uint64_t v36 = v80;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                uint64_t v66 = *(void *)(*v36 + 16);
                specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                uint64_t v38 = *v36;
                *(void *)(v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v66 + 1;
                uint64_t v60 = v38 + v66;
                char v61 = 4;
                goto LABEL_45;
              }
            }

            else
            {
              uint64_t v49 = v72;
              outlined init with copy of PhoneCallNLIntent?( v47,  v72,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              if (__swift_getEnumTagSinglePayload(v48, 1LL, v2) != 1)
              {
                uint64_t v63 = v81;
                (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v4, v48, v2);
                lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
                char v64 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v4, v2);
                uint64_t v65 = *(void (**)(char *, uint64_t))(v63 + 8);
                v65(v4, v2);
                outlined destroy of UUID?( v44,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                uint64_t v40 = (void (*)(uint64_t, uint64_t, uint64_t))v74;
                v65((char *)v49, v2);
                outlined destroy of UUID?( v47,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                if ((v64 & 1) != 0) {
                  goto LABEL_42;
                }
LABEL_31:
                if (one-time initialization token for phoneCallAttributesLast != -1) {
                  swift_once( &one-time initialization token for phoneCallAttributesLast,  one-time initialization function for phoneCallAttributesLast);
                }
                uint64_t v50 = __swift_project_value_buffer(v2, (uint64_t)&static Transformer<>.phoneCallAttributesLast);
                v40(v43, v50, v2);
                __swift_storeEnumTagSinglePayload(v43, 0LL, 1LL, v2);
                uint64_t v51 = v73;
                uint64_t v52 = v73 + *(int *)(v82 + 48);
                outlined init with copy of PhoneCallNLIntent?( v43,  v73,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v24,  v52,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                if (__swift_getEnumTagSinglePayload(v51, 1LL, v2) == 1)
                {
                  outlined destroy of UUID?( v43,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  if (__swift_getEnumTagSinglePayload(v52, 1LL, v2) == 1)
                  {
                    outlined destroy of UUID?( v51,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_44:
                    uint64_t v36 = v80;
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                    uint64_t v70 = *(void *)(*v36 + 16);
                    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                    uint64_t v38 = *v36;
                    *(void *)(v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v70 + 1;
                    uint64_t v60 = v38 + v70;
                    char v61 = 6;
                    goto LABEL_45;
                  }
                }

                else
                {
                  uint64_t v62 = v71;
                  outlined init with copy of PhoneCallNLIntent?( v51,  v71,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  if (__swift_getEnumTagSinglePayload(v52, 1LL, v2) != 1)
                  {
                    uint64_t v67 = v81;
                    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v4, v52, v2);
                    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
                    char v68 = dispatch thunk of static Equatable.== infix(_:_:)(v62, v4, v2);
                    uint64_t v69 = *(void (**)(char *, uint64_t))(v67 + 8);
                    v69(v4, v2);
                    outlined destroy of UUID?( v43,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                    v69((char *)v62, v2);
                    outlined destroy of UUID?( v51,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                    if ((v68 & 1) != 0) {
                      goto LABEL_44;
                    }
                    return swift_release(v77);
                  }

                  outlined destroy of UUID?( v43,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v62, v2);
                }

                outlined destroy of UUID?( v51,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
                return swift_release(v77);
              }

              outlined destroy of UUID?( v44,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v49, v2);
            }

            outlined destroy of UUID?( v47,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
            goto LABEL_31;
          }

          outlined destroy of UUID?( (uint64_t)v17,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v45, v2);
        }

        outlined destroy of UUID?( (uint64_t)v8,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
        goto LABEL_23;
      }

      outlined destroy of UUID?( (uint64_t)v21,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v19, v2);
    }

    outlined destroy of UUID?( (uint64_t)v10,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
    goto LABEL_15;
  }

  return result;
}

uint64_t static Transformer<>.findPositionReference(entity:referenceResolver:)@<X0>( void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MatchedResultsSetting(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget?);
  __chkstk_darwin();
  uint64_t v9 = &v57[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  __chkstk_darwin();
  uint64_t v11 = (id *)&v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  uint64_t v13 = (void **)&v57[-v12];
  __chkstk_darwin();
  uint64_t v15 = &v57[-v14];
  static Signpost.begin(_:)();
  uint64_t v65 = v17;
  uint64_t v66 = v16;
  uint64_t v64 = v18;
  int v63 = v19;
  uint64_t v20 = CodeGenBase.entity.getter(v16);
  (*(void (**)(_BYTE *, void, uint64_t))(v5 + 104))( v7,  enum case for MatchedResultsSetting.defaultMatching(_:),  v4);
  static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)( v20,  a1,  (uint64_t)v7,  (uint64_t)v9);
  swift_release(v20);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v21 = type metadata accessor for PhoneRRTarget(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v21) == 1)
  {
    outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for PhoneRRTarget?);
    uint64_t v22 = type metadata accessor for PhoneRRTarget.Target(0LL);
    uint64_t v23 = (uint64_t)v15;
    uint64_t v24 = 1LL;
  }

  else
  {
    outlined init with copy of YesNoConfirmationModel( (uint64_t)v9,  (uint64_t)v15,  type metadata accessor for PhoneRRTarget.Target);
    outlined destroy of MainFlow((uint64_t)v9, type metadata accessor for PhoneRRTarget);
    uint64_t v22 = type metadata accessor for PhoneRRTarget.Target(0LL);
    uint64_t v23 = (uint64_t)v15;
    uint64_t v24 = 0LL;
  }

  __swift_storeEnumTagSinglePayload(v23, v24, 1LL, v22);
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)v15,  (uint64_t)v13,  &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  type metadata accessor for PhoneRRTarget.Target(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v22) == 1)
  {
    outlined destroy of UUID?((uint64_t)v13, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  }

  else
  {
    if (!swift_getEnumCaseMultiPayload(v13, v22))
    {
      uint64_t v41 = *v13;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v42 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v42, (uint64_t)static Logger.siriPhone);
      id v43 = v41;
      uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
      int v46 = static os_log_type_t.debug.getter(v44, v45);
      if (os_log_type_enabled(v44, (os_log_type_t)v46))
      {
        int v58 = v46;
        os_log_t v61 = v44;
        id v62 = v43;
        uint64_t v47 = swift_slowAlloc(22LL, -1LL);
        uint64_t v59 = (void *)swift_slowAlloc(8LL, -1LL);
        uint64_t v60 = swift_slowAlloc(32LL, -1LL);
        uint64_t v67 = (void *)v60;
        *(_DWORD *)uint64_t v47 = 136315394;
        if (one-time initialization token for logPrefix != -1) {
          swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
        }
        uint64_t v48 = static NLv4Transformer.logPrefix;
        uint64_t v49 = *(void *)algn_478188;
        uint64_t v50 = qword_478190;
        uint64_t v51 = (void *)unk_478198;
        uint64_t v68 = 0LL;
        v69[0] = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v48, v49, v50, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69[0], (uint64_t *)&v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v47 + 4);
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2112;
        id v43 = v62;
        uint64_t v68 = (uint64_t)v62;
        id v52 = v62;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v47 + 14);
        uint64_t v53 = v59;
        *uint64_t v59 = v43;

        uint64_t v44 = v61;
        _os_log_impl( &dword_0,  v61,  (os_log_type_t)v58,  "%s referenceResolution findPositionReference selected person: %@ as the resolution result",  (uint8_t *)v47,  0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy(v53, 1LL);
        swift_slowDealloc(v53, -1LL, -1LL);
        uint64_t v54 = v60;
        swift_arrayDestroy(v60, 1LL);
        swift_slowDealloc(v54, -1LL, -1LL);
        swift_slowDealloc(v47, -1LL, -1LL);
      }

      else
      {
      }

      outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
      *(void *)(a2 + 40) = 0LL;
      *(_OWORD *)(a2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
      *(_OWORD *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
      *(void *)a2 = v43;
      goto LABEL_32;
    }

    outlined destroy of MainFlow((uint64_t)v13, type metadata accessor for PhoneRRTarget.Target);
  }

  outlined init with copy of PhoneCallNLIntent?( (uint64_t)v15,  (uint64_t)v11,  &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, v22) == 1)
  {
    outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
    outlined destroy of UUID?((uint64_t)v11, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
LABEL_21:
    *(void *)a2 = 1LL;
    *(_OWORD *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_OWORD *)(a2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(void *)(a2 + 40) = 0LL;
    goto LABEL_32;
  }

  if (swift_getEnumCaseMultiPayload(v11, v22) != 3)
  {
    outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
    outlined destroy of MainFlow((uint64_t)v11, type metadata accessor for PhoneRRTarget.Target);
    goto LABEL_21;
  }

  id v25 = *v11;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v26 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
  uint64_t v27 = swift_retain_n(v25, 2LL);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  int v30 = static os_log_type_t.debug.getter(v28, v29);
  if (os_log_type_enabled(v28, (os_log_type_t)v30))
  {
    LODWORD(v60) = v30;
    os_log_t v61 = v28;
    id v62 = v25;
    uint64_t v31 = swift_slowAlloc(22LL, -1LL);
    uint64_t v59 = (void *)swift_slowAlloc(64LL, -1LL);
    uint64_t v67 = v59;
    *(_DWORD *)uint64_t v31 = 136315394;
    if (one-time initialization token for logPrefix != -1) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v33 = static NLv4Transformer.logPrefix;
    uint64_t v32 = *(void *)algn_478188;
    uint64_t v35 = qword_478190;
    char v34 = (void *)unk_478198;
    uint64_t v68 = 0LL;
    v69[0] = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v33, v32, v35, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69[0], (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v31 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    id v25 = v62;
    UsoEntity_common_App.applicationId.getter();
    if (v37)
    {
      unint64_t v38 = v37;
    }

    else
    {
      uint64_t v36 = 0LL;
      unint64_t v38 = 0xE000000000000000LL;
    }

    uint64_t v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v31 + 14);
    swift_release_n(v25, 2LL);
    swift_bridgeObjectRelease();
    os_log_t v39 = v61;
    _os_log_impl( &dword_0,  v61,  (os_log_type_t)v60,  "%s referenceResolution findPositionReference selected app: %s as the resolution result",  (uint8_t *)v31,  0x16u);
    uint64_t v40 = v59;
    swift_arrayDestroy(v59, 2LL);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v25, 2LL);
  }

  void v69[2] = type metadata accessor for UsoEntity_common_App(0LL);
  v69[3] = (unint64_t)&protocol witness table for UsoEntity_common_App;
  uint64_t v68 = (uint64_t)v25;
  outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
  *(void *)a2 = 0LL;
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v68,  a2 + 8,  &demangling cache variable for type metadata for PhoneCallApp?);
LABEL_32:
  uint64_t v55 = v66;
  Signpost.OpenSignpost.end()();
  return swift_release(v55);
}

uint64_t static Transformer<>.convertPhoneCallPositionToNoVerbPosition(task:)(uint64_t a1)
{
  uint64_t v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ListPosition.DefinedValues?);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for UsoEntity_common_ListPosition.DefinedValues(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static UsoTask_CodegenConverter.convert(task:)(a1);
  if (!v68) {
    goto LABEL_29;
  }
  type metadata accessor for UsoTask_call_common_PhoneCall(0LL);
  uint64_t v10 = v65;
  swift_retain();
  dispatch thunk of Uso_VerbTemplate_Target.target.getter(&v66);
  uint64_t v11 = swift_release(v10);
  uint64_t v12 = v66;
  if (!v66
    || (v13 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v11), uint64_t v14 = swift_release(v12), !v13)
    || (uint64_t v15 = dispatch thunk of CodeGenGlobalArgs.usoListPosition.getter(v14), v16 = swift_release(v13), !v15))
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1LL, 1LL, v6);
    goto LABEL_14;
  }

  dispatch thunk of UsoEntity_common_ListPosition.definedValue.getter(v16);
  swift_release(v15);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1LL, v6) == 1)
  {
LABEL_14:
    swift_release(v10);
    uint64_t v50 = &demangling cache variable for type metadata for UsoEntity_common_ListPosition.DefinedValues?;
    uint64_t v51 = v5;
LABEL_30:
    outlined destroy of UUID?((uint64_t)v51, v50);
    return 0LL;
  }

  (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v9, v5, v6);
  uint64_t v17 = type metadata accessor for UsoTaskBuilder_noVerb_uso_NoEntity(0LL);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v18 = UsoTaskBuilder_noVerb_uso_NoEntity.init()();
  uint64_t v19 = type metadata accessor for UsoEntityBuilder_uso_NoEntity(0LL);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  uint64_t v20 = UsoEntityBuilder_uso_NoEntity.init()();
  uint64_t v21 = type metadata accessor for UsoEntityBuilder_common_ListPosition(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  uint64_t v22 = UsoEntityBuilder_common_ListPosition.init()();
  dispatch thunk of UsoEntityBuilder_common_ListPosition.setDefinedValue(value:)(v9);
  uint64_t v23 = swift_retain();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoListPosition(value:)( v23,  &protocol witness table for UsoEntityBuilder_common_ListPosition);
  uint64_t v64 = v22;
  swift_release(v22);
  dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.setEntity(value:)(v20);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v25 = swift_allocObject(v24, 40LL, 7LL);
  *(_OWORD *)(v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  *(void *)(v25 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v18;
  uint64_t v66 = v25;
  specialized Array._endMutation()(v25, v26, v27, v28);
  uint64_t v29 = v66;
  uint64_t v30 = type metadata accessor for UsoBuilderOptions(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1LL, 1LL, v30);
  swift_retain();
  uint64_t v31 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v29, v3);
  swift_bridgeObjectRelease();
  outlined destroy of UUID?((uint64_t)v3, &demangling cache variable for type metadata for UsoBuilderOptions?);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v32 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
  uint64_t v33 = swift_retain_n(v31, 2LL);
  char v34 = (os_log_s *)Logger.logObject.getter(v33);
  int v63 = static os_log_type_t.debug.getter(v34, v35);
  uint64_t v36 = v31;
  if (os_log_type_enabled(v34, (os_log_type_t)v63))
  {
    os_log_t v59 = v34;
    uint64_t v60 = v31;
    uint64_t v61 = v20;
    uint64_t v62 = v18;
    unint64_t v37 = (_DWORD *)swift_slowAlloc(22LL, -1LL);
    uint64_t v57 = swift_slowAlloc(64LL, -1LL);
    uint64_t v65 = v57;
    int v58 = v37;
    *unint64_t v37 = 136315394;
    unint64_t v38 = v37 + 1;
    if (one-time initialization token for logPrefix != -1) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v39 = *(void *)algn_478188;
    uint64_t v56 = static NLv4Transformer.logPrefix;
    uint64_t v40 = qword_478190;
    uint64_t v41 = (void *)unk_478198;
    uint64_t v66 = 0LL;
    v67[0] = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v56, v39, v40, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67[0], &v65);
    id v43 = v58;
    uint64_t v66 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v38);
    swift_bridgeObjectRelease();
    *((_WORD *)v43 + 6) = 2080;
    uint64_t v36 = v60;
    uint64_t v66 = v60;
    uint64_t v44 = type metadata accessor for Graph(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Graph and conformance Graph,  (uint64_t (*)(uint64_t))&type metadata accessor for Graph,  (uint64_t)&protocol conformance descriptor for Graph);
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter(v44, v45);
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, (char *)v43 + 14);
    swift_release_n(v36, 2LL);
    swift_bridgeObjectRelease();
    os_log_t v48 = v59;
    _os_log_impl(&dword_0, v59, (os_log_type_t)v63, "%s convert to a new entity graph: %s", (uint8_t *)v43, 0x16u);
    uint64_t v49 = v57;
    swift_arrayDestroy(v57, 2LL);
    swift_slowDealloc(v49, -1LL, -1LL);
    swift_slowDealloc(v43, -1LL, -1LL);

    uint64_t v20 = v61;
    uint64_t v18 = v62;
  }

  else
  {

    swift_release_n(v31, 2LL);
  }

  uint64_t v52 = static UsoConversionUtils.convertGraphToTasks(graph:)(v36);
  uint64_t v53 = v52;
  if ((unint64_t)v52 >> 62)
  {
    if (v52 >= 0) {
      v52 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v52)) {
      goto LABEL_18;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v54 = 0LL;
    goto LABEL_25;
  }

void static Transformer<>.buildNLIntentByVoicemailVerb(phoneCallUsoTask:voiceMailVerb:)( char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = UsoTask.usoAssociatedApp.getter();
  if (v4)
  {
    uint64_t v5 = v4;
    *((void *)&v9 + 1) = type metadata accessor for UsoEntity_common_App(0LL);
    uint64_t v10 = &protocol witness table for UsoEntity_common_App;
    *(void *)&__int128 v8 = v5;
  }

  else
  {
    uint64_t v10 = 0LL;
    __int128 v8 = 0u;
    __int128 v9 = 0u;
  }

  a2[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
  a2[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
  uint64_t v6 = swift_allocObject(&unk_4139D8, 120LL, 7LL);
  *a2 = v6;
  BYTE6(v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 0;
  BYTE5(v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = a1;
  BYTE4(v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 17;
  LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 587401477;
  PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)( (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&v8,  2,  0LL,  4,  2,  5,  v6 + 16,  v7,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)_swiftEmptyArrayStorage);
}

void closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:)( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  void (*v24)(__int128 *__return_ptr, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_s *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  void *v40;
  os_log_s *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t *v49;
  os_log_s *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  os_log_s *v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  os_log_s *v69;
  id v70;
  os_log_type_t v71;
  _DWORD *v72;
  _DWORD *v73;
  _DWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  _DWORD *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  __int128 *v93;
  void *v94;
  uint64_t v95;
  os_log_s *v96;
  uint64_t v97;
  os_log_s *v98;
  uint64_t v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t updated;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(__int128 *__return_ptr, __int128 *);
  os_log_s *v177;
  os_log_s *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  os_log_s *v188;
  os_log_s *v189;
  uint64_t v190;
  _DWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  os_log_type_t v204;
  uint64_t v205;
  __int128 v206;
  uint64_t v207;
  os_log_s *v208;
  uint64_t v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  os_log_type_t v214;
  os_log_s *v215;
  int v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(__int128 *__return_ptr, __int128 *);
  int v225;
  os_log_type_t v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  Swift::Bool v230;
  uint64_t v231;
  os_log_s *v232;
  uint64_t v233;
  os_log_s *v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  os_log_type_t v238;
  uint64_t v239;
  os_log_s *v240;
  uint64_t *v241;
  uint64_t v243;
  void (*v244)(__int128 *__return_ptr, uint64_t *);
  os_log_type_t v245;
  uint64_t *v246;
  void *v248;
  os_log_s *v249;
  uint64_t v250;
  __int128 v251;
  uint64_t v252;
  uint64_t v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  uint64_t v260[3];
  uint64_t v261;
  _BYTE v262[40];
  _OWORD v263[2];
  os_log_s *v264;
  char v265;
  uint64_t v266;
  uint64_t v6 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, TargetContacts>);
  uint64_t v7 = *(v6 - 1);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  static Signpost.begin(_:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  uint64_t v16 = type metadata accessor for TransformerInput(0LL);
  outlined init with copy of PhoneCallNLIntent?( a1 + *(int *)(v16 + 20),  (uint64_t)v262,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  uint64_t v17 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter();
  if ((v17 & 1) == 0)
  {
    v241 = a4;
    if ((Siri_Nlu_External_UserDialogAct.hasRejected.getter(v17) & 1) != 0)
    {
      uint64_t v18 = a4;
      char v19 = 1;
      goto LABEL_7;
    }

    if ((Siri_Nlu_External_UserDialogAct.hasCancelled.getter() & 1) != 0)
    {
      uint64_t v18 = a4;
      char v19 = 2;
      goto LABEL_7;
    }

    uint64_t v21 = Siri_Nlu_External_UserDialogAct.hasWantedToRepeat.getter();
    if ((v21 & 1) != 0)
    {
      *(void *)&v259 = 0LL;
      v257 = 0u;
      v258 = 0u;
      OUTLINED_FUNCTION_24_47(v21, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      OUTLINED_FUNCTION_1_92();
      a4[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
      a4[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
      uint64_t v22 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4139D8, 120LL);
      *a4 = v22;
      BYTE6(v19__swift_destroy_boxed_opaque_existential_1(v0 + 9) = 2;
      WORD2(v19__swift_destroy_boxed_opaque_existential_1(v0 + 9) = 1549;
      LODWORD(v19__swift_destroy_boxed_opaque_existential_1(v0 + 9) = 587401477;
      OUTLINED_FUNCTION_61_23( (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&v257,  v22 + 16,  v199,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)_swiftEmptyArrayStorage);
      goto LABEL_8;
    }

    if (one-time initialization token for transformer != -1) {
      swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
    }
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>);
    uint64_t v24 = (void (*)(__int128 *__return_ptr, uint64_t))OUTLINED_FUNCTION_14_71( v23,  (uint64_t)&static Transformer<>.transformer);
    uint64_t v26 = v25;
    v24(&v257, v15);
    if (v250)
    {
      uint64_t v27 = swift_release(v26);
      OUTLINED_FUNCTION_24_47(v27, &demangling cache variable for type metadata for PhoneCallNLIntent?);
      OUTLINED_FUNCTION_1_92();
      goto LABEL_8;
    }

    swift_release(v26);
    uint64_t v28 = (os_log_s *)v257;
    v266 = v257;
    uint64_t v29 = OUTLINED_FUNCTION_44_1();
    if ((static Transformer<>.findNextVoicemailTask(usoTask:)( v29,  (uint64_t (*)(void))&type metadata accessor for UsoTask_update_uso_NoEntity) & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v30 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
      uint64_t v31 = (void *)OUTLINED_FUNCTION_9();
      uint64_t v33 = static os_log_type_t.debug.getter(v31, v32);
      if (os_log_type_enabled((os_log_t)v31, v33))
      {
        uint64_t v248 = v31;
        char v34 = OUTLINED_FUNCTION_7_0(12LL);
        v235 = OUTLINED_FUNCTION_7_0(32LL);
        *(void *)&uint64_t v254 = v235;
        OUTLINED_FUNCTION_162_7(4.8149e-34);
        if (one-time initialization token for logPrefix != -1) {
          swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
        }
        v229 = static NLv4Transformer.logPrefix;
        *(void *)&v257 = 0LL;
        *((void *)&v257 + 1) = 0xE000000000000000LL;
        OUTLINED_FUNCTION_20_14();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_106_9(v229);
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_70_2();
        uint64_t v36 = OUTLINED_FUNCTION_10_3(v257, v35, (uint64_t *)&v254);
        OUTLINED_FUNCTION_54_23(v36);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_98_14(&dword_0, v37, v33, "%s user selects change, parse current request as confirmation=no");
        OUTLINED_FUNCTION_17_0(v235);
        OUTLINED_FUNCTION_0_2(v235);
        OUTLINED_FUNCTION_0_2(v34);

        unint64_t v38 = v241;
      }

      else
      {

        unint64_t v38 = v241;
      }

      static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(1, v38);
      uint64_t v41 = v28;
      goto LABEL_49;
    }

    (*(void (**)(void))(*(void *)a2 + 232LL))();
    v240 = v28;
    UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)();
    if ((v39 & 1) != 0)
    {
      uint64_t v230 = 0;
      uint64_t v40 = &outlined read-only object #0 of closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:);
    }

    else
    {
      uint64_t v230 = UserDialogActParse.isRedirectBusinessCall()();
      if (v230) {
        uint64_t v40 = &outlined read-only object #1 of closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:);
      }
      else {
        uint64_t v40 = _swiftEmptyArrayStorage;
      }
    }

    uint64_t v42 = OUTLINED_FUNCTION_44_1();
    static UsoTask_CodegenConverter.convert(task:)(v42);
    id v43 = OUTLINED_FUNCTION_50_2();
    uint64_t v236 = (uint64_t)v40;
    if (*((void *)&v258 + 1))
    {
      uint64_t v44 = type metadata accessor for UsoTask_noVerb_uso_NoEntity(0LL);
      if ((OUTLINED_FUNCTION_6_94(v44, (uint64_t)&type metadata for Any) & 1) != 0)
      {
LABEL_34:
        unint64_t v47 = OUTLINED_FUNCTION_44_1();
        dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v257, v47);
        OUTLINED_FUNCTION_50_2();
        os_log_t v48 = (void *)v257;
        if ((void)v257)
        {
          OUTLINED_FUNCTION_16_55();
          static Transformer<>.findPositionReference(entity:referenceResolver:)(a3, (uint64_t)&v254);
          if ((void)v254 == 1LL)
          {
            outlined destroy of UUID?( (uint64_t)&v254,  &demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult?);
            uint64_t v49 = v241;
          }

          else
          {
            v257 = v254;
            v258 = v255;
            v259 = v256;
            uint64_t v49 = v241;
            if ((void)v254)
            {
              uint64_t v66 = one-time initialization token for siriPhone;
              v243 = v257;
              uint64_t v67 = (id)v257;
              if (v66 != -1) {
                swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
              }
              uint64_t v68 = OUTLINED_FUNCTION_15_1();
              uint64_t v69 = (os_log_s *)__swift_project_value_buffer(v68, (uint64_t)static Logger.siriPhone);
              uint64_t v70 = v67;
              Logger.logObject.getter(v70);
              uint64_t v71 = OUTLINED_FUNCTION_6_0();
              if (OUTLINED_FUNCTION_35_12(v71))
              {
                uint64_t v214 = v71;
                v232 = v69;
                uint64_t v237 = v70;
                uint64_t v72 = (_DWORD *)OUTLINED_FUNCTION_7_0(22LL);
                uint64_t v217 = (void *)OUTLINED_FUNCTION_7_0(8LL);
                uint64_t v222 = OUTLINED_FUNCTION_7_0(32LL);
                *(void *)&uint64_t v251 = v222;
                uint64_t v73 = v72;
                *uint64_t v72 = 136315394;
                uint64_t v74 = v72 + 1;
                if (one-time initialization token for logPrefix != -1) {
                  swift_once( &one-time initialization token for logPrefix,  one-time initialization function for logPrefix);
                }
                uint64_t v75 = *(void *)algn_478188;
                uint64_t v211 = static NLv4Transformer.logPrefix;
                uint64_t v76 = qword_478190;
                uint64_t v77 = (void *)unk_478198;
                *(void *)&uint64_t v254 = 0LL;
                *((void *)&v254 + 1) = 0xE000000000000000LL;
                OUTLINED_FUNCTION_128();
                OUTLINED_FUNCTION_20_14();
                DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v211, v75, v76, v77);
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_13_1();
                char v79 = (uint64_t)v73;
                *(void *)&uint64_t v254 = OUTLINED_FUNCTION_10_3(v254, v78, (uint64_t *)&v251);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v254, (char *)&v254 + 8, v74);
                OUTLINED_FUNCTION_62();
                *((_WORD *)v73 + 6) = 2112;
                *(void *)&uint64_t v254 = v237;
                uint64_t v80 = v237;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v254, (char *)&v254 + 8, (char *)v73 + 14);
                *uint64_t v217 = v243;

                OUTLINED_FUNCTION_33_6( &dword_0,  v232,  v214,  "%s referenceResolution find a position reference for person:%@",  (uint8_t *)v73);
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
                OUTLINED_FUNCTION_17_0((uint64_t)v217);
                OUTLINED_FUNCTION_0_2((uint64_t)v217);
                OUTLINED_FUNCTION_17_0(v222);
                uint64_t v70 = v237;
                OUTLINED_FUNCTION_0_2(v222);
                OUTLINED_FUNCTION_0_2(v79);
              }

              else
              {
              }

              uint64_t v112 = type metadata accessor for PhoneCallNLv4Contact();
              OUTLINED_FUNCTION_8_2(v112, 346LL);
              uint64_t v113 = PhoneCallNLv4Contact.init()();
              *(void *)&uint64_t v251 = v113;
              specialized SiriPhoneContact.update(person:)();
              char v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SiriPhoneContact>);
              uint64_t v57 = (void *)OUTLINED_FUNCTION_8_2(v114, 72LL);
              *((_OWORD *)v57 + 1) = xmmword_31D870;
              v57[7] = v112;
              v57[8] = &protocol witness table for PhoneCallNLv4Contact;
              v57[4] = v113;
              *(void *)&v256 = 0LL;
              uint64_t v254 = 0u;
              unint64_t v255 = 0u;
              OUTLINED_FUNCTION_50_2();

              OUTLINED_FUNCTION_27_55();
              OUTLINED_FUNCTION_103_10();
              uint64_t v115 = OUTLINED_FUNCTION_19_60();
              OUTLINED_FUNCTION_158_6( v115,  (uint64_t (*)(void))type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
              OUTLINED_FUNCTION_24_47(v116, &demangling cache variable for type metadata for PhoneCallNLIntent?);
              OUTLINED_FUNCTION_1_92();
              v241[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
              v241[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
              char *v241 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4139D8, 120LL);
              OUTLINED_FUNCTION_34_36();
              uint64_t v93 = &v254;
              LODWORD(v19__swift_destroy_boxed_opaque_existential_1(v0 + 9) = v117;
              goto LABEL_78;
            }

            outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v257 + 8,  (uint64_t)&v251,  &demangling cache variable for type metadata for PhoneCallApp?);
            if (v252)
            {
              outlined init with take of AppSelectionSignalComponent(&v251, (uint64_t)&v254);
              uint64_t v96 = v240;
              if (one-time initialization token for siriPhone != -1) {
                swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
              }
              uint64_t v97 = OUTLINED_FUNCTION_15_1();
              uint64_t v98 = (os_log_s *)__swift_project_value_buffer(v97, (uint64_t)static Logger.siriPhone);
              OUTLINED_FUNCTION_154_7();
              Logger.logObject.getter(v99);
              uint64_t v100 = OUTLINED_FUNCTION_6_0();
              if (OUTLINED_FUNCTION_35_12(v100))
              {
                uint64_t v238 = v100;
                uint64_t v101 = OUTLINED_FUNCTION_7_0(22LL);
                uint64_t v233 = OUTLINED_FUNCTION_7_0(64LL);
                v261 = v233;
                OUTLINED_FUNCTION_162_7(4.8151e-34);
                if (one-time initialization token for logPrefix != -1) {
                  swift_once( &one-time initialization token for logPrefix,  one-time initialization function for logPrefix);
                }
                uint64_t v102 = *(void *)algn_478188;
                unint64_t v223 = static NLv4Transformer.logPrefix;
                v260[0] = 0LL;
                v260[1] = 0xE000000000000000LL;
                OUTLINED_FUNCTION_36();
                OUTLINED_FUNCTION_20_14();
                OUTLINED_FUNCTION_80_16(v223, v102);
                OUTLINED_FUNCTION_70_2();
                OUTLINED_FUNCTION_13_1();
                v260[0] = OUTLINED_FUNCTION_10_3(v260[0], v103, &v261);
                OUTLINED_FUNCTION_97_17(v260[0], v104, v105, v101 + 12);
                OUTLINED_FUNCTION_62();
                *(_WORD *)(v101 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
                char v106 = v252;
                uint64_t v107 = v253;
                OUTLINED_FUNCTION_42(&v251);
                uint64_t v108 = (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 8))(v106, v107);
                if (!v109) {
                  uint64_t v108 = 0LL;
                }
                v260[0] = OUTLINED_FUNCTION_10_3(v108, v109, &v261);
                OUTLINED_FUNCTION_97_17(v260[0], v110, v111, v101 + 22);
                OUTLINED_FUNCTION_62();
                __swift_destroy_boxed_opaque_existential_1(&v251);
                OUTLINED_FUNCTION_33_6( &dword_0,  v98,  v238,  "%s referenceResolution find a position reference for app:%s",  (uint8_t *)v101);
                swift_arrayDestroy(v233, 2LL);
                OUTLINED_FUNCTION_0_2(v233);
                OUTLINED_FUNCTION_0_2(v101);

                uint64_t v49 = v241;
                uint64_t v96 = v240;
                uint64_t v57 = _swiftEmptyArrayStorage;
              }

              else
              {
                __swift_destroy_boxed_opaque_existential_1(&v251);

                uint64_t v57 = _swiftEmptyArrayStorage;
              }

              OUTLINED_FUNCTION_154_7();
              OUTLINED_FUNCTION_50_2();
              swift_release(v96);
              OUTLINED_FUNCTION_103_10();
              OUTLINED_FUNCTION_19_60();
              id v124 = __swift_destroy_boxed_opaque_existential_1(&v254);
              OUTLINED_FUNCTION_158_6( v124,  (uint64_t (*)(void))type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
              OUTLINED_FUNCTION_24_47(v125, &demangling cache variable for type metadata for PhoneCallNLIntent?);
              OUTLINED_FUNCTION_1_92();
              v49[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
              v49[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
              *uint64_t v49 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4139D8, 120LL);
              OUTLINED_FUNCTION_34_36();
              uint64_t v93 = &v251;
              goto LABEL_66;
            }

            OUTLINED_FUNCTION_158_6( v95,  (uint64_t (*)(void))type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
            OUTLINED_FUNCTION_82_20(v123, &demangling cache variable for type metadata for PhoneCallApp?);
          }

          uint64_t v50 = v240;
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v51 = OUTLINED_FUNCTION_15_1();
          __swift_project_value_buffer(v51, (uint64_t)static Logger.siriPhone);
          OUTLINED_FUNCTION_9();
          uint64_t v52 = OUTLINED_FUNCTION_6_0();
          if (OUTLINED_FUNCTION_35_12(v52))
          {
            uint64_t v53 = OUTLINED_FUNCTION_7_0(12LL);
            uint64_t v231 = OUTLINED_FUNCTION_7_0(32LL);
            *(void *)&uint64_t v254 = v231;
            OUTLINED_FUNCTION_162_7(4.8149e-34);
            if (one-time initialization token for logPrefix != -1) {
              swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
            }
            uint64_t v221 = static NLv4Transformer.logPrefix;
            *(void *)&v257 = 0LL;
            *((void *)&v257 + 1) = 0xE000000000000000LL;
            OUTLINED_FUNCTION_20_14();
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_106_9(v221);
            OUTLINED_FUNCTION_13_1();
            OUTLINED_FUNCTION_70_2();
            uint64_t v55 = OUTLINED_FUNCTION_10_3(v257, v54, (uint64_t *)&v254);
            OUTLINED_FUNCTION_54_23(v55);
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_98_14( &dword_0,  v56,  v52,  "%s referenceResolution find a position reference but can't be resolved, return an empty NL intent");
            OUTLINED_FUNCTION_17_0(v231);
            OUTLINED_FUNCTION_0_2(v231);
            OUTLINED_FUNCTION_0_2(v53);

            uint64_t v49 = v241;
            uint64_t v50 = v240;
            uint64_t v57 = _swiftEmptyArrayStorage;
          }

          else
          {

            uint64_t v57 = _swiftEmptyArrayStorage;
          }

          *(void *)&v259 = 0LL;
          v257 = 0u;
          v258 = 0u;
          OUTLINED_FUNCTION_50_2();
          swift_release(v50);
          OUTLINED_FUNCTION_103_10();
          uint64_t v90 = OUTLINED_FUNCTION_19_60();
          OUTLINED_FUNCTION_24_47(v90, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          OUTLINED_FUNCTION_1_92();
          v49[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
          v49[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
          *uint64_t v49 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4139D8, 120LL);
          OUTLINED_FUNCTION_34_36();
          uint64_t v93 = &v257;
LABEL_66:
          LODWORD(v19__swift_destroy_boxed_opaque_existential_1(v0 + 9) = v92;
          uint64_t v94 = _swiftEmptyArrayStorage;
LABEL_78:
          OUTLINED_FUNCTION_61_23( (uint64_t)v94,  (uint64_t)v57,  (uint64_t)v93,  v91,  v199,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)_swiftEmptyArrayStorage);
          goto LABEL_79;
        }

        OUTLINED_FUNCTION_50_2();
LABEL_44:
        int v58 = (os_log_s *)v266;
        os_log_t v59 = UsoEntity_common_Person.usoPerson.getter();
        uint64_t v60 = static Transformer<>.findNextVoicemailTask(usoTask:)( v59,  (uint64_t (*)(void))&type metadata accessor for UsoTask_skipForward_uso_NoEntity);
        OUTLINED_FUNCTION_38_1();
        if ((v60 & 1) != 0)
        {
          OUTLINED_FUNCTION_16_55();
          UsoEntity_common_Person.usoPerson.getter();
          uint64_t v61 = v241;
          uint64_t v62 = 2;
LABEL_48:
          static Transformer<>.buildNLIntentByVoicemailVerb(phoneCallUsoTask:voiceMailVerb:)(v62, v61);
          OUTLINED_FUNCTION_27_55();
          uint64_t v41 = v58;
LABEL_49:
          swift_release(v41);
          uint64_t v65 = OUTLINED_FUNCTION_19_60();
LABEL_50:
          OUTLINED_FUNCTION_24_47(v65, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          OUTLINED_FUNCTION_1_92();
LABEL_79:
          swift_release(v266);
          goto LABEL_8;
        }

        int v63 = UsoEntity_common_Person.usoPerson.getter();
        uint64_t v64 = static Transformer<>.findNextVoicemailTask(usoTask:)( v63,  (uint64_t (*)(void))&type metadata accessor for UsoTask_repeat_uso_NoEntity);
        OUTLINED_FUNCTION_38_1();
        if ((v64 & 1) != 0)
        {
          OUTLINED_FUNCTION_16_55();
          UsoEntity_common_Person.usoPerson.getter();
          uint64_t v61 = v241;
          uint64_t v62 = 1;
          goto LABEL_48;
        }

        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v81 = OUTLINED_FUNCTION_15_1();
        uint64_t v82 = __swift_project_value_buffer(v81, (uint64_t)static Logger.siriPhone);
        OUTLINED_FUNCTION_9();
        uint64_t v226 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_35_12(v226))
        {
          uint64_t v215 = v58;
          uint64_t v218 = v82;
          uint64_t v83 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v212 = OUTLINED_FUNCTION_7_0(32LL);
          *(void *)&uint64_t v254 = v212;
          *uint64_t v83 = 136315138;
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          uint64_t v84 = *(void *)algn_478188;
          uint64_t v85 = (void *)unk_478198;
          uint64_t v205 = qword_478190;
          uint64_t v207 = static NLv4Transformer.logPrefix;
          *(void *)&v257 = 0LL;
          *((void *)&v257 + 1) = 0xE000000000000000LL;
          OUTLINED_FUNCTION_36();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v207, v84, v205, v85);
          OUTLINED_FUNCTION_70_2();
          swift_bridgeObjectRelease();
          uint64_t v87 = OUTLINED_FUNCTION_10_3(v257, v86, (uint64_t *)&v254);
          char v88 = OUTLINED_FUNCTION_104_8(v87);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v88, v89, v83 + 1);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_143_5( &dword_0,  v215,  v226,  "%s ReferenceResolution can't find any item, proceeding to a regular check");
          OUTLINED_FUNCTION_17_0(v212);
          OUTLINED_FUNCTION_0_2(v212);
          OUTLINED_FUNCTION_0_2((uint64_t)v83);

          uint64_t v82 = v218;
        }

        else
        {
        }

        if (one-time initialization token for transformer != -1) {
          swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
        }
        uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallAudioRoute?>);
        uint64_t v224 = (void (*)(__int128 *__return_ptr, __int128 *))OUTLINED_FUNCTION_14_71( v118,  (uint64_t)static Transformer<>.transformer);
        *(void *)&v257 = v266;
        swift_retain();
        v224(&v254, &v257);
        OUTLINED_FUNCTION_103_10();
        OUTLINED_FUNCTION_38_1();
        unint64_t v225 = v254;
        if (one-time initialization token for transformer != -1) {
          swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
        }
        char v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallVerb?>);
        uint64_t v120 = OUTLINED_FUNCTION_14_71(v119, (uint64_t)static Transformer<>.transformer);
        OUTLINED_FUNCTION_62_22(v120);
        OUTLINED_FUNCTION_85_15();
        OUTLINED_FUNCTION_50_2();
        OUTLINED_FUNCTION_38_1();
        uint64_t v216 = v254;
        if (one-time initialization token for transformer != -1) {
          swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
        }
        uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, VoiceMail.VoiceMailVerb?>);
        id v122 = OUTLINED_FUNCTION_14_71(v121, (uint64_t)static Transformer<>.transformer);
        OUTLINED_FUNCTION_62_22(v122);
        OUTLINED_FUNCTION_85_15();
        OUTLINED_FUNCTION_50_2();
        OUTLINED_FUNCTION_38_1();
        id v126 = v254;
        if (v216 == 17 && v254 == 6)
        {
          OUTLINED_FUNCTION_16_55();
          type metadata accessor for TransformationError(0LL);
          lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
          uint64_t v132 = OUTLINED_FUNCTION_78_23(v131);
          OUTLINED_FUNCTION_127_8(v132);
          _StringGuts.grow(_:)(77LL);
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          OUTLINED_FUNCTION_167_0((uint64_t)&static NLv4Transformer.logPrefix);
          OUTLINED_FUNCTION_53_29((uint64_t)" UsoTask_CodegenConverter convert failed for USO Task: ");
          uint64_t v133 = UsoEntity_common_Person.usoPerson.getter();
          UsoTask.verbString.getter(v133);
          OUTLINED_FUNCTION_38_1();
          OUTLINED_FUNCTION_116_10();
          OUTLINED_FUNCTION_70_2();
          OUTLINED_FUNCTION_10_63(v7 - 37, (uint64_t)" to any valid verb");
          uint64_t v134 = *((void *)&v257 + 1);
          *uint64_t v6 = v257;
          v6[1] = v134;
          unsigned int v135 = OUTLINED_FUNCTION_90_17();
          swift_willThrow(v135, v136, v137, v138, v139, v140, v141, v142);
          OUTLINED_FUNCTION_27_55();
          uint64_t v143 = OUTLINED_FUNCTION_19_60();
        }

        else
        {
          unint64_t v128 = OUTLINED_FUNCTION_44_1();
          static UsoTask_CodegenConverter.convert(task:)(v128);
          OUTLINED_FUNCTION_50_2();
          OUTLINED_FUNCTION_44_1();
          uint64_t v227 = v126;
          static Transformer<>.incomingCallTransformerOutput(phoneCallVerb:voicemailVerb:phoneCallUsoTask:audioRoute:)( v216,  v126,  v82,  v225,  (uint64_t)&v254);
          OUTLINED_FUNCTION_50_2();
          if (*((void *)&v255 + 1))
          {
            OUTLINED_FUNCTION_16_55();
            OUTLINED_FUNCTION_27_55();
            unint64_t v129 = OUTLINED_FUNCTION_19_60();
            OUTLINED_FUNCTION_82_20(v129, &demangling cache variable for type metadata for Any?);
            OUTLINED_FUNCTION_24_47(v130, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            OUTLINED_FUNCTION_1_92();
            outlined init with take of AppSelectionSignalComponent(&v254, (uint64_t)&v257);
            outlined init with take of AppSelectionSignalComponent(&v257, (uint64_t)v241);
            goto LABEL_79;
          }

          outlined destroy of UUID?((uint64_t)&v254, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          OUTLINED_FUNCTION_48_33(v144, v145, &demangling cache variable for type metadata for Any?);
          if (*((void *)&v258 + 1))
          {
            uint64_t v147 = type metadata accessor for UsoTask_join_common_PhoneCall(0LL);
            uint64_t v148 = OUTLINED_FUNCTION_6_94(v147, (uint64_t)&type metadata for Any);
            if ((v148 & 1) != 0)
            {
              OUTLINED_FUNCTION_16_55();
              static NLv4JoinTransformer.transform(joinTask:)(v241);
              OUTLINED_FUNCTION_27_55();
              OUTLINED_FUNCTION_38_1();
              updated = OUTLINED_FUNCTION_19_60();
LABEL_143:
              OUTLINED_FUNCTION_82_20(updated, &demangling cache variable for type metadata for Any?);
              goto LABEL_50;
            }
          }

          else
          {
            OUTLINED_FUNCTION_88_23(v146, &demangling cache variable for type metadata for Any?);
          }

          OUTLINED_FUNCTION_48_33(v148, v149, &demangling cache variable for type metadata for Any?);
          if (*((void *)&v258 + 1))
          {
            uint64_t v152 = type metadata accessor for UsoTask_update_common_PhoneCall(0LL);
            uint64_t v153 = OUTLINED_FUNCTION_6_94(v152, (uint64_t)&type metadata for Any);
            if ((v153 & 1) != 0)
            {
              OUTLINED_FUNCTION_16_55();
              uint64_t v155 = v254;
              OUTLINED_FUNCTION_86_15();
              NLv4UpdateTransformer.transform(updateTask:)(v155, v241);
LABEL_112:
              OUTLINED_FUNCTION_27_55();
              swift_release(v155);
              OUTLINED_FUNCTION_19_60();
              updated = outlined destroy of NLv4UpdateTransformer((uint64_t)&v257);
              goto LABEL_143;
            }
          }

          else
          {
            OUTLINED_FUNCTION_88_23(v151, &demangling cache variable for type metadata for Any?);
          }

          OUTLINED_FUNCTION_48_33(v153, v154, &demangling cache variable for type metadata for Any?);
          if (*((void *)&v258 + 1))
          {
            uint64_t v157 = type metadata accessor for UsoTask_update_common_Communication(0LL);
            uint64_t v158 = OUTLINED_FUNCTION_6_94(v157, (uint64_t)&type metadata for Any);
            if ((v158 & 1) != 0)
            {
              OUTLINED_FUNCTION_16_55();
              uint64_t v155 = v254;
              OUTLINED_FUNCTION_86_15();
              NLv4UpdateTransformer.transform(updateTask:)(v155, v241);
              goto LABEL_112;
            }
          }

          else
          {
            OUTLINED_FUNCTION_88_23(v156, &demangling cache variable for type metadata for Any?);
          }

          if (v216 != 17)
          {
            OUTLINED_FUNCTION_48_33(v158, v159, &demangling cache variable for type metadata for Any?);
            if (*((void *)&v258 + 1))
            {
              uint64_t v174 = type metadata accessor for UsoTask_noVerb_common_PhoneNumber(0LL);
              if ((OUTLINED_FUNCTION_6_94(v174, (uint64_t)&type metadata for Any) & 1) != 0)
              {
                uint64_t v213 = v254;
                if (one-time initialization token for transformer != -1) {
                  swift_once( &one-time initialization token for transformer,  one-time initialization function for transformer);
                }
                uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask_noVerb_common_PhoneNumber, UsoTask?>);
                uint64_t v176 = (void (*)(__int128 *__return_ptr, __int128 *))OUTLINED_FUNCTION_14_71( v175,  (uint64_t)static Transformer<>.transformer);
                uint64_t v178 = v177;
                *(void *)&v257 = v213;
                v176(&v254, &v257);
                OUTLINED_FUNCTION_38_1();
                uint64_t v209 = v254;
                if ((void)v254)
                {
                  uint64_t v179 = v266;
                  v266 = v254;
                  swift_retain();
                  swift_release(v179);
                  OUTLINED_FUNCTION_157_4();
                  uint64_t v180 = OUTLINED_FUNCTION_6_0();
                  uint64_t v204 = v180;
                  uint64_t v208 = v178;
                  if (OUTLINED_FUNCTION_57_30(v180, (os_log_type_t)v180))
                  {
                    __int128 v181 = OUTLINED_FUNCTION_7_0(22LL);
                    uint64_t v203 = OUTLINED_FUNCTION_7_0(64LL);
                    *(void *)&uint64_t v254 = v203;
                    *(_DWORD *)__int128 v181 = 136315394;
                    if (one-time initialization token for logPrefix != -1) {
                      swift_once( &one-time initialization token for logPrefix,  one-time initialization function for logPrefix);
                    }
                    uint64_t v182 = *(void *)algn_478188;
                    uint64_t v183 = (void *)unk_478198;
                    uint64_t v200 = qword_478190;
                    char v202 = static NLv4Transformer.logPrefix;
                    *(void *)&v257 = 0LL;
                    *((void *)&v257 + 1) = 0xE000000000000000LL;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v202, v182, v200, v183);
                    OUTLINED_FUNCTION_70_2();
                    swift_bridgeObjectRelease();
                    *(void *)&v257 = OUTLINED_FUNCTION_148_8(v257, v184, (uint64_t *)&v254);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, (char *)&v257 + 8, v181 + 4);
                    OUTLINED_FUNCTION_70_2();
                    *(_WORD *)(v181 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
                    OUTLINED_FUNCTION_22_0((uint64_t)&v266, (uint64_t)v260);
                    UsoEntity_common_Person.usoPerson.getter();
                    id v201 = UsoTask.description.getter();
                    OUTLINED_FUNCTION_38_1();
                    *(void *)&v257 = OUTLINED_FUNCTION_148_8(v201, v185, (uint64_t *)&v254);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, (char *)&v257 + 8, v181 + 14);
                    OUTLINED_FUNCTION_70_2();
                    OUTLINED_FUNCTION_33_6( &dword_0,  v208,  v204,  "%s Obtained a verbless phone number task and transformed to common call task: %s",  (uint8_t *)v181);
                    OUTLINED_FUNCTION_12_24();
                    OUTLINED_FUNCTION_0_2(v203);
                    OUTLINED_FUNCTION_0_2(v181);
                    swift_release(v209);
                  }

                  else
                  {

                    swift_release(v209);
                  }
                }

                swift_release(v213);
              }
            }

            else
            {
              OUTLINED_FUNCTION_88_23(v173, &demangling cache variable for type metadata for Any?);
            }

            OUTLINED_FUNCTION_86_15();
            uint64_t v186 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4139B0, 73LL);
            outlined init with take of AppSelectionSignalComponent(&v257, v186 + 16);
            *(_BYTE *)(v186 + 56) = v216;
            *(void *)(v186 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
            *(_BYTE *)(v186 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v230;
            uint64_t v187 = type metadata accessor for UsoTask(0LL);
            OUTLINED_FUNCTION_44_1();
            Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:),  v186,  v187);
            uint64_t v244 = (void (*)(__int128 *__return_ptr, uint64_t *))Transformer.transform.getter(v6);
            uint64_t v189 = v188;
            OUTLINED_FUNCTION_22_0((uint64_t)&v266, (uint64_t)&v254);
            v261 = v266;
            OUTLINED_FUNCTION_44_1();
            v244(&v257, &v261);
            OUTLINED_FUNCTION_50_2();
            OUTLINED_FUNCTION_38_1();
            uint64_t v206 = v257;
            uint64_t v210 = v258;
            uint64_t v234 = (os_log_s *)v259;
            if ((BYTE8(v259) & 1) != 0)
            {
              OUTLINED_FUNCTION_16_55();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_145_8();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_157_4();
              uint64_t v190 = OUTLINED_FUNCTION_6_0();
              uint64_t v245 = v190;
              uint64_t v249 = v189;
              if (OUTLINED_FUNCTION_57_30(v190, (os_log_type_t)v190))
              {
                uint64_t v191 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
                uint64_t v228 = OUTLINED_FUNCTION_7_0(32LL);
                v261 = v228;
                *uint64_t v191 = 136315138;
                if (one-time initialization token for logPrefix != -1) {
                  swift_once( &one-time initialization token for logPrefix,  one-time initialization function for logPrefix);
                }
                uint64_t v219 = static NLv4Transformer.logPrefix;
                v239 = *(void *)algn_478188;
                *(void *)&v257 = 0LL;
                *((void *)&v257 + 1) = 0xE000000000000000LL;
                OUTLINED_FUNCTION_36();
                OUTLINED_FUNCTION_6_3();
                OUTLINED_FUNCTION_80_16(v219, v239);
                OUTLINED_FUNCTION_70_2();
                OUTLINED_FUNCTION_16_55();
                uint64_t v193 = OUTLINED_FUNCTION_10_3(v257, v192, &v261);
                uint64_t v194 = OUTLINED_FUNCTION_104_8(v193);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(v194, v195, v191 + 1);
                OUTLINED_FUNCTION_62();
                OUTLINED_FUNCTION_143_5( &dword_0,  v249,  v245,  "%s found change contact request, return NL as confirmation=no");
                OUTLINED_FUNCTION_17_0(v228);
                OUTLINED_FUNCTION_0_2(v228);
                OUTLINED_FUNCTION_0_2((uint64_t)v191);
              }

              static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(1, v241);
              OUTLINED_FUNCTION_27_55();
            }

            else
            {
              UsoEntity_common_Person.usoPerson.getter();
              v246 = UsoTask.convertToCommonPhoneCallEntity()();
              OUTLINED_FUNCTION_38_1();
              UsoEntity_common_Person.usoPerson.getter();
              uint64_t v220 = UsoTask.usoAssociatedApp.getter();
              OUTLINED_FUNCTION_38_1();
              if (v246
                && (uint64_t v196 = OUTLINED_FUNCTION_44_1(),
                    uint64_t v197 = dispatch thunk of UsoEntity_common_PhoneCall.mode.getter(v196),
                    OUTLINED_FUNCTION_50_2(),
                    v197))
              {
                uint64_t v198 = UsoEntity_common_PhoneCallMode.phoneCallAVMode.getter();
                OUTLINED_FUNCTION_38_1();
              }

              else
              {
                uint64_t v198 = 2;
              }

              v263[0] = v206;
              v263[1] = v210;
              v264 = v234;
              v265 = 0;
              static Transformer<>.createNLIntent(app:phoneCallAVMode:phoneCallAttributes:targetContacts:commonPhoneCall:audioRoute:phoneCallVerb:voicemailVerb:referenceResolver:previousNLIntent:)( v220,  v198,  v236,  (unint64_t *)v263,  (uint64_t)v246,  v225,  v216,  v227,  (uint64_t)v241,  (uint64_t)a3,  (uint64_t)v262);
              OUTLINED_FUNCTION_62();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_50_2();
              OUTLINED_FUNCTION_27_55();
              swift_release(v220);
              OUTLINED_FUNCTION_19_60();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_145_8();
            }

            swift_bridgeObjectRelease();
            updated = (*(uint64_t (**)(uint64_t, void *))(v7 + 8))(v10, v6);
            goto LABEL_143;
          }

          OUTLINED_FUNCTION_16_55();
          type metadata accessor for TransformationError(0LL);
          lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
          uint64_t v161 = OUTLINED_FUNCTION_78_23(v160);
          OUTLINED_FUNCTION_127_8(v161);
          _StringGuts.grow(_:)(83LL);
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          OUTLINED_FUNCTION_167_0((uint64_t)&static NLv4Transformer.logPrefix);
          OUTLINED_FUNCTION_53_29((uint64_t)" UsoTask_CodegenConverter convert failed for USO Task: ");
          uint64_t v162 = UsoEntity_common_Person.usoPerson.getter();
          UsoTask.verbString.getter(v162);
          OUTLINED_FUNCTION_38_1();
          OUTLINED_FUNCTION_116_10();
          OUTLINED_FUNCTION_70_2();
          OUTLINED_FUNCTION_10_63(v7 - 31, (uint64_t)" to any valid phone verb");
          uint64_t v163 = *((void *)&v257 + 1);
          *uint64_t v6 = v257;
          v6[1] = v163;
          uint64_t v164 = OUTLINED_FUNCTION_90_17();
          swift_willThrow(v164, v165, v166, v167, v168, v169, v170, v171);
          OUTLINED_FUNCTION_27_55();
          uint64_t v172 = OUTLINED_FUNCTION_19_60();
          OUTLINED_FUNCTION_82_20(v172, &demangling cache variable for type metadata for Any?);
        }

        OUTLINED_FUNCTION_24_47(v143, &demangling cache variable for type metadata for PhoneCallNLIntent?);
        OUTLINED_FUNCTION_1_92();
        swift_release(v266);
        goto LABEL_8;
      }
    }

    else
    {
      OUTLINED_FUNCTION_88_23(v43, &demangling cache variable for type metadata for Any?);
    }

    uint64_t v45 = UsoEntity_common_Person.usoPerson.getter();
    uint64_t v46 = static Transformer<>.convertPhoneCallPositionToNoVerbPosition(task:)(v45);
    OUTLINED_FUNCTION_38_1();
    if (!v46) {
      goto LABEL_44;
    }
    goto LABEL_34;
  }

  uint64_t v18 = a4;
  char v19 = 0;
LABEL_7:
  static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(v19, v18);
  OUTLINED_FUNCTION_24_47(v20, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  OUTLINED_FUNCTION_1_92();
LABEL_8:
  Signpost.OpenSignpost.end()();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_7_1();
}

void UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int v7 = v6;
  uint64_t v8 = type metadata accessor for IdentifierNamespace(0LL);
  uint64_t v162 = *(void *)(v8 - 8);
  uint64_t v163 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v161 = v9;
  uint64_t v10 = type metadata accessor for Google_Protobuf_StringValue(0LL);
  uint64_t v159 = *(void *)(v10 - 8);
  uint64_t v160 = v10;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v158 = v11;
  uint64_t v12 = OUTLINED_FUNCTION_168_3();
  uint64_t v166 = *(void *)(v12 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v165 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v167 = v14;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v157 = v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v154 = (char *)&v143 - v16;
  static Signpost.begin(_:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  unint64_t v22 = v21;
  uint64_t v24 = v23;
  static UsoTask_CodegenConverter.convert(task:)(v3);
  if (!v171[2])
  {
    outlined destroy of UUID?((uint64_t)&v170, &demangling cache variable for type metadata for Any?);
    goto LABEL_22;
  }

  uint64_t v25 = type metadata accessor for UsoTask_call_common_PhoneCall(0LL);
  if ((OUTLINED_FUNCTION_105_8((uint64_t)v172, (uint64_t)&v170, (uint64_t)&type metadata for Any + 8, v25) & 1) != 0)
  {
    int v149 = v7;
    uint64_t v26 = v172[0];
    swift_retain();
    dispatch thunk of Uso_VerbTemplate_Target.target.getter(&v170);
    uint64_t v27 = swift_release(v26);
    if (!v170
      || (uint64_t v150 = v1,
          unint64_t v28 = dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter(v27),
          OUTLINED_FUNCTION_38_1(),
          !v28))
    {
      swift_release(v26);
      goto LABEL_22;
    }

    uint64_t v145 = v18;
    unint64_t v153 = v28;
    unint64_t v144 = v28 >> 62;
    if (v28 >> 62)
    {
LABEL_147:
      OUTLINED_FUNCTION_20_14();
      uint64_t v29 = OUTLINED_FUNCTION_61_1();
      OUTLINED_FUNCTION_13_1();
    }

    else
    {
      uint64_t v29 = *(void *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v146 = v20;
    unint64_t v148 = v22;
    uint64_t v147 = v26;
    uint64_t v164 = v12;
    uint64_t v30 = v150;
    uint64_t v143 = v5;
    if (v29)
    {
      v172[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v26 = v153;
      if (v29 < 0)
      {
        __break(1u);
        goto LABEL_149;
      }

      uint64_t v31 = 0LL;
      uint64_t v32 = (void *)v172[0];
      unint64_t v22 = v153 & 0xC000000000000001LL;
      do
      {
        if (v22) {
          uint64_t v33 = OUTLINED_FUNCTION_5_49(v31);
        }
        else {
          uint64_t v33 = swift_retain();
        }
        char v34 = dispatch thunk of CodeGenListEntry.entry.getter(&v170, v33);
        if (v170)
        {
          uint64_t v35 = CodeGenBase.entity.getter(v34);
          OUTLINED_FUNCTION_38_1();
        }

        else
        {
          uint64_t v35 = 0LL;
        }

        static UsoEntity_CodeGenConverter.convert(entity:)(&v170, v35);
        OUTLINED_FUNCTION_76();
        swift_release(v35);
        v172[0] = (uint64_t)v32;
        unint64_t v36 = v32[2];
        if (v36 >= v32[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v32 = (void *)v172[0];
        }

        ++v31;
        v32[2] = v36 + 1;
        _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v170,  (uint64_t)&v32[4 * v36 + 4],  &demangling cache variable for type metadata for Any?);
      }

      while (v29 != v31);
      OUTLINED_FUNCTION_5_97();
      uint64_t v30 = v150;
    }

    else
    {
      uint64_t v32 = _swiftEmptyArrayStorage;
      uint64_t v26 = v153;
    }

    uint64_t v37 = v32[2];
    if (v37)
    {
      uint64_t v38 = (uint64_t)(v32 + 4);
      swift_bridgeObjectRetain();
      do
      {
        outlined init with copy of PhoneCallNLIntent?( v38,  (uint64_t)&v170,  &demangling cache variable for type metadata for Any?);
        outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v170,  (uint64_t)v172,  &demangling cache variable for type metadata for Any?);
        if (v172[3])
        {
          uint64_t v39 = type metadata accessor for UsoEntity_common_Group(0LL);
          if ((OUTLINED_FUNCTION_105_8((uint64_t)v169, (uint64_t)v172, (uint64_t)&type metadata for Any + 8, v39) & 1) != 0)
          {
            swift_release(v169[0]);
            outlined destroy of UUID?((uint64_t)&v170, &demangling cache variable for type metadata for Any?);
            OUTLINED_FUNCTION_12_83();
            OUTLINED_FUNCTION_39();
            OUTLINED_FUNCTION_7_4((uint64_t)v32);
            goto LABEL_145;
          }
        }

        else
        {
          OUTLINED_FUNCTION_119_7((uint64_t)v172);
        }

        OUTLINED_FUNCTION_119_7((uint64_t)&v170);
        v38 += 32LL;
        --v37;
      }

      while (v37);
      OUTLINED_FUNCTION_7_4((uint64_t)v32);
      uint64_t v30 = v150;
    }

    else
    {
      swift_bridgeObjectRelease();
    }

    UsoEntity_common_Person.usoPerson.getter();
    dispatch thunk of Uso_VerbTemplate_Target.target.getter(&v170);
    OUTLINED_FUNCTION_38_1();
    unsigned int v151 = v24;
    uint64_t v12 = v164;
    if (v170)
    {
      uint64_t v40 = swift_retain();
      uint64_t v41 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v40);
      OUTLINED_FUNCTION_16_3();
      if (v41)
      {
        UsoEntity_common_App.applicationId.getter();
        uint64_t v43 = v42;
        unint64_t v45 = v44;
        OUTLINED_FUNCTION_38_1();
        if (v45)
        {
          OUTLINED_FUNCTION_39();
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v46 = OUTLINED_FUNCTION_15_1();
          __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
          uint64_t v47 = OUTLINED_FUNCTION_6_1();
          Logger.logObject.getter(v47);
          os_log_type_t v48 = OUTLINED_FUNCTION_41();
          if (!OUTLINED_FUNCTION_22_54(v48))
          {

            OUTLINED_FUNCTION_7_4(v45);
            OUTLINED_FUNCTION_16_3();
            goto LABEL_144;
          }

          uint64_t v167 = v43;
          uint64_t v49 = OUTLINED_FUNCTION_7_0(22LL);
          uint64_t v50 = OUTLINED_FUNCTION_7_0(64LL);
          v172[0] = v50;
          *(_DWORD *)uint64_t v49 = 136315394;
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          uint64_t v51 = static NLv4Transformer.logPrefix;
          uint64_t v52 = *(void *)algn_478188;
          uint64_t v170 = 0LL;
          v171[0] = 0xE000000000000000LL;
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_111_11();
          OUTLINED_FUNCTION_40_32(v51, v52, v53, v54);
          swift_bridgeObjectRelease();
          uint64_t v170 = OUTLINED_FUNCTION_37_39();
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, v171, v49 + 4);
          OUTLINED_FUNCTION_62();
          *(_WORD *)(v49 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
          OUTLINED_FUNCTION_6_1();
          uint64_t v170 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v167, v45, v172);
          OUTLINED_FUNCTION_14_0((uint64_t)&v170, (uint64_t)v171, v55, v49 + 22);
          swift_bridgeObjectRelease_n(v45, 3LL);
          OUTLINED_FUNCTION_33_6(&dword_0, (os_log_s *)v26, v48, "%s returning false. Found appID %s", (uint8_t *)v49);
          OUTLINED_FUNCTION_42_2(v50);
          OUTLINED_FUNCTION_0_2(v50);
          OUTLINED_FUNCTION_0_2(v49);
          OUTLINED_FUNCTION_12_83();
          OUTLINED_FUNCTION_16_3();

          goto LABEL_158;
        }
      }

      OUTLINED_FUNCTION_16_3();
    }

    if (!v30 || (uint64_t v56 = *(void *)(v30 + 16)) == 0)
    {
      uint64_t v5 = 0LL;
      goto LABEL_56;
    }

    uint64_t v170 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v57 = v166;
    unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v156 = *(os_log_s **)(v166 + 72);
    unint64_t v152 = v58;
    uint64_t v59 = v30 + v58;
    uint64_t v155 = *(void *)(v166 + 16);
    swift_bridgeObjectRetain_n(v30, 2LL);
    uint64_t v60 = v56;
    uint64_t v61 = v59;
    uint64_t v62 = v154;
    do
    {
      OUTLINED_FUNCTION_123_7((uint64_t)v62, v61);
      if ((closure #3 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)(v62) & 1) != 0)
      {
        OUTLINED_FUNCTION_47_20(v157, (uint64_t)v62);
        if ((OUTLINED_FUNCTION_135_7() & 1) == 0)
        {
          OUTLINED_FUNCTION_63_25();
          uint64_t v57 = v170;
        }

        unint64_t v63 = *(void *)(v57 + 16);
        if (v63 >= *(void *)(v57 + 24) >> 1)
        {
          OUTLINED_FUNCTION_63_25();
          uint64_t v57 = v170;
        }

        OUTLINED_FUNCTION_151_5();
        uint64_t v64 = v156;
        OUTLINED_FUNCTION_47_20(v65 + v63 * (void)v156, v157);
        uint64_t v170 = v57;
        uint64_t v24 = v151;
        uint64_t v62 = v154;
        uint64_t v57 = v166;
      }

      else
      {
        OUTLINED_FUNCTION_107_12();
        uint64_t v64 = v156;
      }

      v61 += (uint64_t)v64;
      --v60;
    }

    while (v60);
    uint64_t v154 = 0LL;
    OUTLINED_FUNCTION_81_21();
    v172[0] = v170;
    uint64_t v170 = (uint64_t)_swiftEmptyArrayStorage;
    LODWORD(v15__swift_destroy_boxed_opaque_existential_1(v0 + 7) = enum case for IdentifierNamespace.nsPersonRelationship(_:);
    uint64_t v66 = v162;
    while (1)
    {
      uint64_t v67 = v24;
      uint64_t v68 = OUTLINED_FUNCTION_123_7(v167, v59);
      uint64_t v69 = v158;
      uint64_t v70 = Siri_Nlu_External_UsoEntityIdentifier.namespace.getter(v68);
      uint64_t v71 = Google_Protobuf_StringValue.value.getter(v70);
      uint64_t v30 = v72;
      (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v69, v160);
      uint64_t v73 = v161;
      uint64_t v74 = v163;
      uint64_t v75 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v66 + 104))(v161, v157, v163);
      uint64_t v76 = IdentifierNamespace.rawValue.getter(v75);
      uint64_t v78 = v77;
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v73, v74);
      if (v71 == v76 && v30 == v78) {
        break;
      }
      char v80 = OUTLINED_FUNCTION_49_2(v71, v30, v76, v78);
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_13_1();
      uint64_t v81 = v166;
      if ((v80 & 1) != 0) {
        goto LABEL_65;
      }
      uint64_t v12 = v164;
      (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v167, v164);
      uint64_t v24 = v67;
      uint64_t v82 = v156;
LABEL_70:
      v59 += (uint64_t)v82;
      if (!--v56)
      {
        OUTLINED_FUNCTION_81_21();
        specialized Array.append<A>(contentsOf:)(v170);
        if (*(void *)(v172[0] + 16))
        {
          swift_bridgeObjectRelease();
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v85 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v85, (uint64_t)static Logger.siriPhone);
          os_log_type_t v86 = OUTLINED_FUNCTION_41();
          if (OUTLINED_FUNCTION_22_54(v86))
          {
            uint64_t v87 = OUTLINED_FUNCTION_7_0(22LL);
            uint64_t v88 = OUTLINED_FUNCTION_7_0(64LL);
            v169[0] = v88;
            OUTLINED_FUNCTION_144_7(4.8151e-34);
            if (one-time initialization token for logPrefix != -1) {
              swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
            }
            uint64_t v170 = 0LL;
            v171[0] = 0xE000000000000000LL;
            OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_7_100((uint64_t)"isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)");
            OUTLINED_FUNCTION_70_2();
            uint64_t v90 = OUTLINED_FUNCTION_10_3(v170, v89, v169);
            OUTLINED_FUNCTION_32_48(v90);
            OUTLINED_FUNCTION_62();
            *(_WORD *)(v87 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
            swift_beginAccess(v172, &v170, 0LL, 0LL);
            uint64_t v91 = OUTLINED_FUNCTION_20_14();
            uint64_t v92 = Array.description.getter(v91, v164);
            unint64_t v94 = v93;
            OUTLINED_FUNCTION_13_1();
            uint64_t v168 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v92, v94, v169);
            OUTLINED_FUNCTION_14_0((uint64_t)&v168, (uint64_t)v169, v95, v87 + 22);
            OUTLINED_FUNCTION_70_2();
            OUTLINED_FUNCTION_33_6(&dword_0, v82, v86, "%s returning false. Found identifiers %s", (uint8_t *)v87);
            OUTLINED_FUNCTION_42_2(v88);
            OUTLINED_FUNCTION_0_2(v88);
            OUTLINED_FUNCTION_0_2(v87);
            OUTLINED_FUNCTION_12_83();

            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_5_97();
          }

          else
          {

            OUTLINED_FUNCTION_12_83();
            swift_bridgeObjectRelease();
          }

          goto LABEL_145;
        }

        swift_bridgeObjectRelease();
        unint64_t v22 = v148;
        uint64_t v26 = v153;
        uint64_t v5 = v154;
LABEL_56:
        uint64_t v170 = (uint64_t)_swiftEmptyArrayStorage;
        if (v144)
        {
          if (v26 >= 0) {
            v26 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          swift_bridgeObjectRetain();
          uint64_t v26 = _CocoaArrayWrapper.endIndex.getter(v26);
        }

        else
        {
          uint64_t v26 = *(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8LL));
          swift_bridgeObjectRetain();
        }

        if (!v26)
        {
          OUTLINED_FUNCTION_62();
          uint64_t v26 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_96;
        }

        if (v26 < 1)
        {
          __break(1u);
          goto LABEL_161;
        }

        uint64_t v96 = 0LL;
        unint64_t v97 = v153 & 0xC000000000000001LL;
        do
        {
          if (v97) {
            uint64_t v98 = specialized _ArrayBuffer._getElementSlowPath(_:)(v96, v153);
          }
          else {
            uint64_t v98 = swift_retain();
          }
          dispatch thunk of CodeGenListEntry.entry.getter(v172, v98);
          if (v172[0])
          {
            uint64_t v12 = UsoEntity_common_Agent.asCommonPerson()();
            OUTLINED_FUNCTION_77_0();
            uint64_t v99 = OUTLINED_FUNCTION_38_1();
            if (v12)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v99);
              unint64_t v101 = *(void *)((char *)&dword_10 + (v170 & 0xFFFFFFFFFFFFFF8LL));
              unint64_t v100 = *(void *)((char *)&dword_18 + (v170 & 0xFFFFFFFFFFFFFF8LL));
              if (v101 >= v100 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)( v100 > 1,  v101 + 1,  1LL);
              }
              uint64_t v102 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v12);
              specialized Array._endMutation()(v102, v103, v104, v105);
            }
          }

          else
          {
            OUTLINED_FUNCTION_77_0();
          }

          ++v96;
        }

        while (v26 != v96);
        OUTLINED_FUNCTION_62();
        uint64_t v26 = v170;
        unint64_t v22 = v148;
LABEL_96:
        OUTLINED_FUNCTION_62();
        uint64_t v30 = (unint64_t)v26 >> 62;
        if ((v149 & 1) != 0)
        {
          if (!v30)
          {
            uint64_t v106 = *(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8LL));
            OUTLINED_FUNCTION_8_1();
            if (v106) {
              goto LABEL_99;
            }
            goto LABEL_119;
          }

LABEL_161:
          OUTLINED_FUNCTION_8_1();
          uint64_t v106 = OUTLINED_FUNCTION_61_1();
          if (!v106) {
            goto LABEL_119;
          }
LABEL_99:
          unint64_t v22 = v26 & 0xC000000000000001LL;
          if ((v26 & 0xC000000000000001LL) != 0) {
            OUTLINED_FUNCTION_5_49(0LL);
          }
          else {
            UsoEntity_common_Person.usoPerson.getter();
          }
          uint64_t v12 = specialized UsoContactConvertible.isNameLikelyNonBusiness()();
          OUTLINED_FUNCTION_38_1();
          if ((v12 & 1) != 0)
          {
LABEL_102:
            OUTLINED_FUNCTION_7_4(v26);
            if (one-time initialization token for siriPhone != -1) {
              swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
            }
            uint64_t v107 = OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_12_1(v107, (uint64_t)static Logger.siriPhone);
            os_log_type_t v108 = OUTLINED_FUNCTION_41();
            OUTLINED_FUNCTION_22_54(v108);
            OUTLINED_FUNCTION_5_97();
            if (v109)
            {
              uint64_t v110 = OUTLINED_FUNCTION_7_0(12LL);
              uint64_t v111 = OUTLINED_FUNCTION_7_0(32LL);
              v172[0] = v111;
              OUTLINED_FUNCTION_144_7(4.8149e-34);
              if (one-time initialization token for logPrefix != -1) {
                swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
              }
              uint64_t v170 = 0LL;
              v171[0] = 0xE000000000000000LL;
              OUTLINED_FUNCTION_36();
              OUTLINED_FUNCTION_7_100((uint64_t)"isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)");
              OUTLINED_FUNCTION_70_2();
              uint64_t v112 = OUTLINED_FUNCTION_37_39();
              OUTLINED_FUNCTION_32_48(v112);
              OUTLINED_FUNCTION_62();
              os_log_type_t v114 = v108;
              uint64_t v115 = "%s returning false. Likely non business call due to entity span matches";
              goto LABEL_142;
            }

            goto LABEL_143;
          }

          if (v106 != 1)
          {
            uint64_t v116 = 5LL;
            while (1)
            {
              if (v22) {
                uint64_t v12 = OUTLINED_FUNCTION_5_49(v116 - 4);
              }
              else {
                OUTLINED_FUNCTION_136_7();
              }
              uint64_t v117 = v116 - 3;
              if (__OFADD__(v116 - 4, 1LL)) {
                break;
              }
              char v118 = specialized UsoContactConvertible.isNameLikelyNonBusiness()();
              OUTLINED_FUNCTION_76();
              if ((v118 & 1) != 0) {
                goto LABEL_102;
              }
              ++v116;
              if (v117 == v106) {
                goto LABEL_119;
              }
            }

LABEL_143:
LABEL_144:
                  OUTLINED_FUNCTION_12_83();
LABEL_145:
                  uint64_t v18 = v145;
                  goto LABEL_22;
                }
              }

              else
              {
                OUTLINED_FUNCTION_76();
              }

              ++v20;
              if (v121 == v119)
              {
                OUTLINED_FUNCTION_39();
                OUTLINED_FUNCTION_95_16();
                __chkstk_darwin();
                *(&v143 - __swift_destroy_boxed_opaque_existential_1(v0 + 2) = (char *)&v170;
                char v130 = specialized Sequence.allSatisfy(_:)( (uint64_t (*)(uint64_t *))partial apply for closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:),  (uint64_t)(&v143 - 4),  v26);
                OUTLINED_FUNCTION_39();
                OUTLINED_FUNCTION_5_97();
                goto LABEL_152;
              }
            }
          }

LABEL_119:
          OUTLINED_FUNCTION_39();
          OUTLINED_FUNCTION_5_97();
        }

        if (v30) {
          goto LABEL_150;
        }
        uint64_t v119 = *(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8LL));
        OUTLINED_FUNCTION_8_1();
        if (v119) {
          goto LABEL_122;
        }
LABEL_151:
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_95_16();
        OUTLINED_FUNCTION_39();
        char v130 = 0;
LABEL_152:
        __swift_destroy_boxed_opaque_existential_1(&v170);
        uint64_t v18 = v145;
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v135 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v135, (uint64_t)static Logger.siriPhone);
        os_log_type_t v136 = OUTLINED_FUNCTION_41();
        if (!OUTLINED_FUNCTION_22_54(v136))
        {

          OUTLINED_FUNCTION_12_83();
          goto LABEL_22;
        }

        uint64_t v137 = OUTLINED_FUNCTION_7_0(18LL);
        uint64_t v138 = OUTLINED_FUNCTION_7_0(32LL);
        v172[0] = v138;
        OUTLINED_FUNCTION_162_7(4.8151e-34);
        if (one-time initialization token for logPrefix != -1) {
          swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
        }
        uint64_t v139 = static NLv4Transformer.logPrefix;
        uint64_t v140 = *(void *)algn_478188;
        uint64_t v170 = 0LL;
        v171[0] = 0xE000000000000000LL;
        OUTLINED_FUNCTION_76_4();
        OUTLINED_FUNCTION_111_11();
        OUTLINED_FUNCTION_40_32(v139, v140, v141, v142);
        OUTLINED_FUNCTION_87_0();
        uint64_t v170 = OUTLINED_FUNCTION_37_39();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, v171, v22);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v137 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1024;
        LODWORD(v170) = v130 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, (char *)&v170 + 4, v137 + 14);
        _os_log_impl(&dword_0, (os_log_t)v26, v136, "%s returning %{BOOL}d.", (uint8_t *)v137, 0x12u);
        swift_arrayDestroy(v138, 1LL);
        OUTLINED_FUNCTION_0_2(v138);
        OUTLINED_FUNCTION_0_2(v137);
        OUTLINED_FUNCTION_12_83();

LABEL_158:
        uint64_t v18 = v145;
        OUTLINED_FUNCTION_5_97();
        goto LABEL_22;
      }
    }

    OUTLINED_FUNCTION_7_4(v30);
    uint64_t v81 = v166;
LABEL_65:
    uint64_t v30 = *(void *)(v81 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v165, v167, v164);
    uint64_t v24 = v67;
    if ((OUTLINED_FUNCTION_135_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_63_25();
      uint64_t v73 = v170;
    }

    uint64_t v82 = v156;
    unint64_t v83 = *(void *)(v73 + 16);
    if (v83 >= *(void *)(v73 + 24) >> 1)
    {
      OUTLINED_FUNCTION_63_25();
      uint64_t v73 = v170;
    }

    OUTLINED_FUNCTION_151_5();
    uint64_t v12 = v164;
    OUTLINED_FUNCTION_91_15(v84 + v83 * (void)v82, v165);
    uint64_t v170 = v73;
    goto LABEL_70;
  }

Swift::Bool __swiftcall UserDialogActParse.isRedirectBusinessCall()()
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Google_Protobuf_StringValue(0LL);
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v46 = v4;
  uint64_t v5 = OUTLINED_FUNCTION_168_3();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v50 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v38 - v8;
  if (!v2) {
    goto LABEL_27;
  }
  uint64_t v10 = *(void *)(v2 + 16);
  if (!v10) {
    goto LABEL_27;
  }
  uint64_t v51 = _swiftEmptyArrayStorage;
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v44 = *(void *)(v6 + 72);
  unint64_t v40 = v11;
  uint64_t v12 = v2 + v11;
  uint64_t v38 = v2;
  OUTLINED_FUNCTION_8_1();
  unint64_t v45 = (unint64_t)"";
  uint64_t v49 = 0xD000000000000016LL;
  unint64_t v42 = (unint64_t)"ndleSet";
  unint64_t v43 = 0x80000000003465D0LL;
  unint64_t v39 = 0x800000000034C4A0LL;
  uint64_t v41 = v6;
  do
  {
    uint64_t v13 = OUTLINED_FUNCTION_47_20((uint64_t)v9, v12);
    uint64_t v14 = v46;
    uint64_t v15 = Siri_Nlu_External_UsoEntityIdentifier.namespace.getter(v13);
    uint64_t v16 = Google_Protobuf_StringValue.value.getter(v15);
    uint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v14, v48);
    if (v16 == 0xD000000000000018LL && v18 == (void (*)(char *, uint64_t))v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = OUTLINED_FUNCTION_47_20(v0, (uint64_t)v9);
    }

    else
    {
      char v20 = OUTLINED_FUNCTION_49_2(v16, (uint64_t)v18, 0xD000000000000018LL, v45 | 0x8000000000000000LL);
      OUTLINED_FUNCTION_62();
      uint64_t v19 = OUTLINED_FUNCTION_47_20(v0, (uint64_t)v9);
      if ((v20 & 1) == 0)
      {
        OUTLINED_FUNCTION_112_9();
LABEL_18:
        v18(v9, v5);
        uint64_t v26 = v44;
        goto LABEL_19;
      }
    }

    uint64_t v21 = Siri_Nlu_External_UsoEntityIdentifier.backingAppBundleID.getter(v19);
    uint64_t v18 = (void (*)(char *, uint64_t))v22;
    if (v21 == v49 && v22 == v39)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
    }

    else
    {
      char v23 = OUTLINED_FUNCTION_49_2(v21, v22, v49, v42 | 0x8000000000000000LL);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_112_9();
      if ((v23 & 1) == 0) {
        goto LABEL_18;
      }
    }

    OUTLINED_FUNCTION_47_20(v50, (uint64_t)v9);
    uint64_t v24 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
    {
      OUTLINED_FUNCTION_63_25();
      uint64_t v24 = v51;
    }

    unint64_t v25 = v24[2];
    if (v25 >= v24[3] >> 1)
    {
      OUTLINED_FUNCTION_63_25();
      uint64_t v24 = v51;
    }

    v24[2] = v25 + 1;
    uint64_t v26 = v44;
    OUTLINED_FUNCTION_47_20((uint64_t)v24 + v40 + v25 * v44, v50);
    uint64_t v51 = v24;
    uint64_t v6 = v41;
LABEL_19:
    v12 += v26;
    --v10;
  }

  while (v10);
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)v51[2];
  swift_release(v51);
  if (v27)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v28 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v28, (uint64_t)static Logger.siriPhone);
    os_log_type_t v29 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_22_54(v29))
    {
      uint64_t v30 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v31 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v53 = v31;
      OUTLINED_FUNCTION_144_7(4.8149e-34);
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v32 = static NLv4Transformer.logPrefix;
      uint64_t v33 = *(void *)algn_478188;
      uint64_t v51 = 0LL;
      unint64_t v52 = 0xE000000000000000LL;
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_111_11();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v32, v33, 0xD000000000000018LL, v34);
      OUTLINED_FUNCTION_70_2();
      uint64_t v51 = (void *)OUTLINED_FUNCTION_10_3((uint64_t)v51, v35, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, 0LL);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_115_9(&dword_0, v36, v29, "%s returning true. Found identifiers for redirect business call");
      OUTLINED_FUNCTION_141_7();
      OUTLINED_FUNCTION_0_2(v31);
      OUTLINED_FUNCTION_0_2(v30);
    }

    else
    {
    }
  }

uint64_t static Transformer<>.createNLIntent(app:phoneCallAVMode:phoneCallAttributes:targetContacts:commonPhoneCall:audioRoute:phoneCallVerb:voicemailVerb:referenceResolver:previousNLIntent:)@<X0>( uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  void (*v50)(__int128 *__return_ptr, __int128 *);
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  PhoneCallFlowDelegatePlugin::ContactSourceType_optional v67;
  uint64_t v68;
  unint64_t *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_s *v74;
  uint64_t v75;
  int v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t *v107;
  __int128 v108;
  __int128 v109;
  _UNKNOWN **v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  _UNKNOWN **v114;
  char v115;
  uint64_t v116;
  char v117;
  int v118;
  __int16 v119;
  char v120;
  char v121;
  char v122;
  uint64_t v123;
  void *v124;
  unint64_t v125;
  char v126[8];
  char v127[8];
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v99 = a8;
  uint64_t v98 = a7;
  unint64_t v97 = a6;
  uint64_t v104 = a3;
  uint64_t v96 = a2;
  uint64_t v106 = a1;
  uint64_t v105 = a9;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_PhoneCall?, [SiriPhoneContact]>);
  unint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:)();
  uint64_t v103 = v17;
  uint64_t v102 = v18;
  unint64_t v101 = v19;
  unint64_t v100 = v20;
  if (a5 && (uint64_t v21 = dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter(v17)) != 0)
  {
    uint64_t v22 = v21;
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)_swiftEmptyArrayStorage;
  }

  *(void *)&uint64_t v111 = _swiftEmptyArrayStorage;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0) {
      uint64_t v47 = v22;
    }
    else {
      uint64_t v47 = v22 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v47);
  }

  else
  {
    uint64_t v23 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  uint64_t v24 = &v131;
  uint64_t v107 = a4;
  if (v23)
  {
    if (v23 < 1)
    {
      __break(1u);
      goto LABEL_35;
    }

    uint64_t v95 = a5;
    for (uint64_t i = 0LL; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001LL) != 0)
      {
        uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v22);
        uint64_t v27 = v26;
      }

      else
      {
        uint64_t v27 = *(void *)(v22 + 8 * i + 32);
        uint64_t v26 = swift_retain();
      }

      dispatch thunk of CodeGenListEntry.entry.getter(&v108, v26);
      uint64_t v28 = v108;
      if ((void)v108)
      {
        uint64_t v29 = UsoEntity_common_Agent.asCommonGroup()();
        swift_release(v27);
        uint64_t v30 = swift_release(v28);
        if (v29)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
          unint64_t v32 = *(void *)((char *)&dword_10 + (v111 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v31 = *(void *)((char *)&dword_18 + (v111 & 0xFFFFFFFFFFFFFF8LL));
          if (v32 >= v31 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1LL);
          }
          uint64_t v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
          specialized Array._endMutation()(v33, v34, v35, v36);
        }
      }

      else
      {
        swift_release(v27);
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v37 = (void *)v111;
    a4 = v107;
    a5 = v95;
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = _swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease();
  uint64_t v125 = (unint64_t)v37;
  uint64_t v22 = a4[3];
  if (!v22) {
    goto LABEL_40;
  }
  uint64_t v24 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFF8LL);
  if ((unint64_t)v22 >> 62)
  {
LABEL_35:
    if (v22 >= 0) {
      uint64_t v48 = v24;
    }
    else {
      uint64_t v48 = (void *)v22;
    }
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter(v48))
    {
LABEL_25:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v22 & 0xC000000000000001LL) == 0, v22);
      if ((v22 & 0xC000000000000001LL) == 0)
      {
        uint64_t v39 = *(void *)(v22 + 32);
        swift_retain();
        goto LABEL_27;
      }

      goto LABEL_98;
    }

    goto LABEL_39;
  }

  uint64_t v38 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (v38) {
    goto LABEL_25;
  }
LABEL_39:
  swift_bridgeObjectRelease();
LABEL_40:
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCall?);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  Transformer.init(transform:)(closure #1 in static Transformer<>.transformer.getter, 0LL, v49);
  uint64_t v50 = (void (*)(__int128 *__return_ptr, __int128 *))Transformer.transform.getter(v13);
  unint64_t v52 = v51;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
  *(void *)&uint64_t v111 = a5;
  v50(&v108, &v111);
  swift_release(v52);
  a5 = v108;
  uint64_t v128 = *a4;
  uint64_t v13 = v128;
  uint64_t v53 = v128 & 0xFFFFFFFFFFFFFF8LL;
  if (!(v128 >> 62))
  {
    uint64_t v16 = *(void *)((char *)&dword_10 + (v128 & 0xFFFFFFFFFFFFFF8LL));
    goto LABEL_42;
  }

  while (1)
  {
    if (v13 >= 0) {
      uint64_t v22 = v53;
    }
    else {
      uint64_t v22 = v13;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter(v22);
    outlined release of Set<String>(&v128);
    if (v16 < 0)
    {
      __break(1u);
LABEL_98:
      uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v22);
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v40 = swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      unint64_t v42 = *(void *)((char *)&dword_10 + (v125 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v41 = *(void *)((char *)&dword_18 + (v125 & 0xFFFFFFFFFFFFFF8LL));
      if (v42 >= v41 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1LL);
      }
      uint64_t v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v39);
      specialized Array._endMutation()(v43, v44, v45, v46);
      swift_release(v39);
      goto LABEL_40;
    }

LABEL_57:
  if (*(void *)(a5 + 16))
  {
    uint64_t v64 = v107;
    uint64_t v13 = v106;
  }

  else
  {
    uint64_t v64 = v107;
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)(v107 + 2),  (uint64_t)v127,  &demangling cache variable for type metadata for [ContactQuery]?);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v127,  (uint64_t)&v129,  &demangling cache variable for type metadata for [ContactQuery]?);
    uint64_t v13 = v106;
    if (v129 && *(void *)(v129 + 16) == 1LL)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v72 = type metadata accessor for Logger(0LL);
      uint64_t v73 = __swift_project_value_buffer(v72, (uint64_t)static Logger.siriPhone);
      uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
      uint64_t v76 = static os_log_type_t.debug.getter(v74, v75);
      if (os_log_type_enabled(v74, (os_log_type_t)v76))
      {
        LODWORD(v9__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v76;
        uint64_t v77 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v78 = swift_slowAlloc(32LL, -1LL);
        *(void *)&os_log_type_t v108 = v78;
        *(_DWORD *)uint64_t v77 = 136315138;
        if (one-time initialization token for logPrefix != -1) {
          swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
        }
        char v79 = static NLv4Transformer.logPrefix;
        char v80 = *(void *)algn_478188;
        uint64_t v81 = qword_478190;
        uint64_t v82 = (void *)unk_478198;
        *(void *)&uint64_t v111 = 0LL;
        *((void *)&v111 + 1) = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v79, v80, v81, v82);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v111,  *((unint64_t *)&v111 + 1),  (uint64_t *)&v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, (char *)&v111 + 8, v77 + 4);
        swift_bridgeObjectRelease();
        _os_log_impl( &dword_0,  v74,  (os_log_type_t)v95,  "%s add an dummy contact to align with its contactQuery size",  v77,  0xCu);
        swift_arrayDestroy(v78, 1LL);
        swift_slowDealloc(v78, -1LL, -1LL);
        swift_slowDealloc(v77, -1LL, -1LL);

        uint64_t v64 = v107;
        uint64_t v13 = v106;
      }

      else
      {
      }

      uint64_t v89 = type metadata accessor for PhoneCallNLv4Contact();
      swift_allocObject(v89, 346LL, 7LL);
      uint64_t v90 = PhoneCallNLv4Contact.init()();
      if ((swift_isUniquelyReferenced_nonNull_native(a5) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        a5 = v92;
      }

      uint64_t v91 = *(void *)(a5 + 16);
      if (v91 >= *(void *)(a5 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        a5 = v93;
      }

      uint64_t v113 = v89;
      os_log_type_t v114 = &protocol witness table for PhoneCallNLv4Contact;
      *(void *)&uint64_t v111 = v90;
      *(void *)(a5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v91 + 1;
      outlined init with take of AppSelectionSignalComponent(&v111, a5 + 40 * v91 + 32);
    }
  }

  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)(v64 + 1),  (uint64_t)v126,  &demangling cache variable for type metadata for [ContactSourceType]?);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v126,  (uint64_t)&v130,  &demangling cache variable for type metadata for [ContactSourceType]?);
  if (v130)
  {
    a4 = *(unint64_t **)(v130 + 16);
    if (a4)
    {
      if (a4 == *(unint64_t **)(a5 + 16))
      {
        uint64_t v65 = 0LL;
        unint64_t v14 = 0LL;
        uint64_t v66 = v130 + 32;
        do
        {
          v67.value = *(_BYTE *)(v66 + v14);
          if ((swift_isUniquelyReferenced_nonNull_native(a5) & 1) == 0)
          {
            specialized _ArrayBuffer._consumeAndCreateNew()();
            a5 = v68;
          }

          uint64_t v53 = *(void *)(a5 + 16);
          if (v14 >= v53) {
            goto LABEL_92;
          }
          ++v14;
          __swift_mutable_project_boxed_opaque_existential_1(a5 + v65 + 32, *(void *)(a5 + v65 + 56));
          SiriPhoneContact.update(contactSource:)(v67);
          v65 += 40LL;
        }

        while (a4 != (unint64_t *)v14);
      }
    }
  }

  uint64_t v69 = v107;
  uint64_t v70 = (void *)v107[2];
  if (v13)
  {
    uint64_t v71 = type metadata accessor for UsoEntity_common_App(0LL);
    uint64_t v110 = &protocol witness table for UsoEntity_common_App;
    *((void *)&v109 + 1) = v71;
    *(void *)&os_log_type_t v108 = v13;
  }

  else
  {
    uint64_t v110 = 0LL;
    int v109 = 0u;
    os_log_type_t v108 = 0u;
  }

  if (v70) {
    unint64_t v83 = v70;
  }
  else {
    unint64_t v83 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  specialized _arrayForceCast<A, B>(_:)();
  uint64_t v85 = v84;
  swift_bridgeObjectRelease();
  if (v69[4]) {
    os_log_type_t v86 = (void *)v69[4];
  }
  else {
    os_log_type_t v86 = _swiftEmptyArrayStorage;
  }
  *(void *)&uint64_t v111 = v83;
  *((void *)&v111 + 1) = a5;
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v108,  (uint64_t)&v112,  &demangling cache variable for type metadata for PhoneCallApp?);
  uint64_t v115 = v96;
  uint64_t v116 = v104;
  uint64_t v117 = v97;
  char v118 = 151323906;
  uint64_t v119 = 8963;
  uint64_t v120 = v98;
  uint64_t v121 = v99;
  uint64_t v122 = 2;
  uint64_t v123 = v85;
  uint64_t v124 = v86;
  *((void *)&v109 + 1) = &type metadata for PhoneCallNLv4Intent;
  uint64_t v110 = &protocol witness table for PhoneCallNLv4Intent;
  *(void *)&os_log_type_t v108 = swift_allocObject(&unk_4139D8, 120LL, 7LL);
  outlined init with copy of PhoneCallNLv4Intent((uint64_t *)&v111, v108 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static PhoneCallNLv4Intent.getMergedNLIntent(previousNLIntent:currentNLIntent:)(a11, &v108, v105);
  outlined destroy of PhoneCallNLv4Intent(&v111);
  __swift_destroy_boxed_opaque_existential_1(&v108);
  uint64_t v87 = v103;
  Signpost.OpenSignpost.end()();
  return swift_release(v87);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  v33[2] = a2;
  uint64_t v3 = type metadata accessor for Parse(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (void *)((char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  v33[0] = v12;
  v33[1] = v11;
  uint64_t ObjectType = swift_getObjectType(v8);
  unsigned __int8 v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(ObjectType, v7);
  uint64_t v15 = FollowUpOfferType.rawValue.getter(v14);
  if (v15 == 0xD000000000000011LL && v16 == 0x8000000000343650LL)
  {
    swift_bridgeObjectRelease();
  }

  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0xD000000000000011LL, 0x8000000000343650LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      uint64_t v20 = type metadata accessor for UsoTaskBuilder_call_common_PhoneCall(0LL);
      uint64_t v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      uint64_t v19 = UsoTaskBuilder_call_common_PhoneCall.init()(v21);
      goto LABEL_7;
    }
  }

  uint64_t v18 = type metadata accessor for UsoTaskBuilder_callback_common_PhoneCall(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v19 = UsoTaskBuilder_callback_common_PhoneCall.init()();
LABEL_7:
  uint64_t v22 = v19;
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for USOSerializedGraph,  &OBJC_CLASS___USOSerializedGraph_ptr);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v24 = swift_allocObject(v23, 40LL, 7LL);
  *(_OWORD *)(v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  *(void *)(v24 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v22;
  uint64_t v34 = v24;
  specialized Array._endMutation()(v24, v25, v26, v27);
  uint64_t v28 = v34;
  swift_retain();
  uint64_t v29 = (void *)static USOSerializedGraph.fromTaskBuilders(_:)(v28);
  swift_bridgeObjectRelease();
  id v30 = [objc_allocWithZone(SIRINLUUserStatedTask) initWithTask:v29];
  *uint64_t v6 = v30;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for Parse.NLv4IntentOnly(_:), v3);
  id v31 = v30;
  Input.init(parse:)(v6);

  swift_release(v22);
  Signpost.OpenSignpost.end()();
  return swift_release(v10);
}

uint64_t static Transformer<>.transformer.getter@<X0>(uint64_t a1@<X8>)
{
  return static INPersonCodable.transformer.getter( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<IncomingCallIntentResponse, Input>,  (uint64_t)&static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer,  a1);
}

{
  return static INPersonCodable.transformer.getter( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>,  (uint64_t)&static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer,  a1);
}

{
  return static INPersonCodable.transformer.getter( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallAudioRoute?>,  (uint64_t)static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer,  a1);
}

{
  return static INPersonCodable.transformer.getter( &one-time initialization token for transformer,  &demangling cache variable for type metadata for Transformer<UsoTask_noVerb_common_PhoneNumber, UsoTask?>,  (uint64_t)static Transformer<>.transformer,  (uint64_t)one-time initialization function for transformer,  a1);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Siri_Nlu_External_UserStatedTask(0LL);
  uint64_t v103 = *(void *)(v9 - 8);
  uint64_t v104 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v106 = v14;
  uint64_t v107 = v15;
  HIDWORD(v10__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v16;
  if ((Siri_Nlu_External_UserDialogAct.hasUserStatedTask.getter() & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v39 = type metadata accessor for Logger(0LL);
    uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)static Logger.siriPhone);
    unint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v102 = v13;
      uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v44 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v45 = static NLv4Transformer.logPrefix;
      uint64_t v46 = *(void *)algn_478188;
      uint64_t v47 = qword_478190;
      uint64_t v48 = (void *)unk_478198;
      uint64_t v108 = 0LL;
      unint64_t v109 = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_478198);
      swift_bridgeObjectRetain(v46);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v45, v46, v47, v48);
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v46);
      unint64_t v49 = v109;
      uint64_t v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v108, v109, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v43 + 4, v43 + 12);
      swift_bridgeObjectRelease(v49);
      _os_log_impl(&dword_0, v41, v42, "%s does NOT have UserStatedTask", v43, 0xCu);
      swift_arrayDestroy(v44, 1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      uint64_t v13 = v102;
    }

    else
    {
    }

    uint64_t v70 = type metadata accessor for TransformationError(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
    swift_allocError(v70, v71, 0LL, 0LL);
    *uint64_t v72 = 0xD00000000000002DLL;
    v72[1] = 0x8000000000350ED0LL;
    uint64_t v73 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v70 - 8) + 104LL))( v72,  enum case for TransformationError.cannotTransform(_:),  v70);
    swift_willThrow(v73, v74, v75, v76, v77, v78, v79, v80, v100, v101, v102, v103, v104, v105);
    goto LABEL_27;
  }

  uint64_t v17 = Siri_Nlu_External_UserDialogAct.userStatedTask.getter();
  char v18 = Siri_Nlu_External_UserStatedTask.hasTask.getter(v17);
  uint64_t v102 = v13;
  if ((v18 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v50 = type metadata accessor for Logger(0LL);
    uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
    unint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v101 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = v101;
      *(_DWORD *)uint64_t v54 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v55 = static NLv4Transformer.logPrefix;
      uint64_t v56 = *(void *)algn_478188;
      uint64_t v58 = qword_478190;
      uint64_t v57 = (void *)unk_478198;
      uint64_t v108 = 0LL;
      unint64_t v109 = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_478198);
      swift_bridgeObjectRetain(v56);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v55, v56, v58, v57);
      swift_bridgeObjectRelease(v57);
      swift_bridgeObjectRelease(v56);
      unint64_t v59 = v109;
      uint64_t v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v108, v109, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease(v59);
      _os_log_impl(&dword_0, v52, v53, "%s userDialogAct.userStatedTask has no task UsoGraph", v54, 0xCu);
      uint64_t v60 = v101;
      swift_arrayDestroy(v101, 1LL);
      swift_slowDealloc(v60, -1LL, -1LL);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    uint64_t v33 = type metadata accessor for TransformationError(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
    swift_allocError(v33, v61, 0LL, 0LL);
    uint64_t v36 = v35;
    unint64_t v37 = 0xD000000000000042LL;
    uint64_t v38 = "#NLv4Transformer userDialogAct.userStatedTask has no task UsoGraph";
    goto LABEL_24;
  }

  uint64_t v19 = Siri_Nlu_External_UserStatedTask.task.getter();
  uint64_t v20 = Siri_Nlu_External_UsoGraph.identifiers.getter(v19);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v21 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(a1);
  if (v2)
  {
    swift_errorRelease(v2);
    swift_bridgeObjectRelease(v20);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v101 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = v101;
      *(_DWORD *)uint64_t v26 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v27 = static NLv4Transformer.logPrefix;
      uint64_t v28 = *(void *)algn_478188;
      uint64_t v30 = qword_478190;
      uint64_t v29 = (void *)unk_478198;
      uint64_t v108 = 0LL;
      unint64_t v109 = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_478198);
      swift_bridgeObjectRetain(v28);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v27, v28, v30, v29);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v28);
      unint64_t v31 = v109;
      uint64_t v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v108, v109, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease(v31);
      _os_log_impl(&dword_0, v24, v25, "%s could not convert user dialog act to task", v26, 0xCu);
      uint64_t v32 = v101;
      swift_arrayDestroy(v101, 1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    uint64_t v33 = type metadata accessor for TransformationError(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
    swift_allocError(v33, v34, 0LL, 0LL);
    uint64_t v36 = v35;
    unint64_t v37 = 0xD00000000000003ALL;
    uint64_t v38 = "#NLv4Transformer Could not convert user dialog act to task";
LABEL_24:
    *uint64_t v35 = v37;
    v35[1] = (unint64_t)(v38 - 32) | 0x8000000000000000LL;
    uint64_t v62 = (*(uint64_t (**)(unint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104LL))( v36,  enum case for TransformationError.cannotTransform(_:),  v33);
    swift_willThrow(v62, v63, v64, v65, v66, v67, v68, v69, v100, v101, v102, v103, v104, v105);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v11, v104);
    uint64_t v13 = v102;
LABEL_27:
    Signpost.OpenSignpost.end()();
    uint64_t v81 = v13;
    return swift_release(v81);
  }

  uint64_t v83 = v21;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v86 = v21;
    }
    else {
      uint64_t v86 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v21);
    uint64_t v87 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v83);
    if (v87) {
      goto LABEL_31;
    }
LABEL_38:
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v83);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v88 = type metadata accessor for Logger(0LL);
    uint64_t v89 = __swift_project_value_buffer(v88, (uint64_t)static Logger.siriPhone);
    uint64_t v90 = (os_log_s *)Logger.logObject.getter(v89);
    os_log_type_t v91 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v101 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = v101;
      *(_DWORD *)uint64_t v92 = 136315138;
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v93 = static NLv4Transformer.logPrefix;
      uint64_t v94 = *(void *)algn_478188;
      uint64_t v96 = qword_478190;
      uint64_t v95 = (void *)unk_478198;
      uint64_t v108 = 0LL;
      unint64_t v109 = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_478198);
      swift_bridgeObjectRetain(v94);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v93, v94, v96, v95);
      swift_bridgeObjectRelease(v95);
      swift_bridgeObjectRelease(v94);
      unint64_t v97 = v109;
      uint64_t v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v108, v109, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v92 + 4, v92 + 12);
      swift_bridgeObjectRelease(v97);
      _os_log_impl(&dword_0, v90, v91, "%s no tasks found in input", v92, 0xCu);
      uint64_t v98 = v101;
      swift_arrayDestroy(v101, 1LL);
      swift_slowDealloc(v98, -1LL, -1LL);
      swift_slowDealloc(v92, -1LL, -1LL);
    }

    uint64_t v33 = type metadata accessor for TransformationError(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
    swift_allocError(v33, v99, 0LL, 0LL);
    uint64_t v36 = v35;
    unint64_t v37 = 0xD000000000000028LL;
    uint64_t v38 = "#NLv4Transformer No tasks found in input";
    goto LABEL_24;
  }

uint64_t static Transformer<>.toPhoneCallAudioRoute(phoneCallAttribute:)()
{
  uint64_t v1 = (char *)v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)v21 - v6;
  static Signpost.begin(_:)();
  uint64_t v9 = v8;
  v21[1] = v10;
  uint64_t v11 = dispatch thunk of CodeGenListEntry.entry.getter(&v22, v8);
  uint64_t v12 = v22;
  if (v22)
  {
    uint64_t v13 = CodeGenBase.entity.getter(v11);
    swift_release(v12);
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  uint64_t v14 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute(0LL);
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v23, v13, v14, v14);
  uint64_t v15 = swift_release(v13);
  uint64_t v16 = v23;
  if (v23)
  {
    dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(v15);
    swift_release(v16);
    if (__swift_getEnumTagSinglePayload((uint64_t)v1, 1LL, v2) == 1)
    {
      outlined destroy of UUID?( (uint64_t)v1,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    }

    else
    {
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v19(v7, v1, v2);
      v19(v5, v7, v2);
      int v20 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
      if (v20 == enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallNounSpeakerphone(_:))
      {
        uint64_t v17 = 0LL;
        goto LABEL_8;
      }

      if (v20 == enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallNounNotSpeakerphone(_:))
      {
        uint64_t v17 = 1LL;
        goto LABEL_8;
      }

      if (v20 == enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallNounBluetooth(_:))
      {
        uint64_t v17 = 2LL;
        goto LABEL_8;
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }

  uint64_t v17 = 4LL;
LABEL_8:
  Signpost.OpenSignpost.end()();
  swift_release(v9);
  return v17;
}

void one-time initialization function for transformer(uint64_t a1)
{
}

{
  one-time initialization function for transformer( a1,  &demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallVerb?>,  static Transformer<>.transformer,  &demangling cache variable for type metadata for PhoneCallVerb?,  (uint64_t)closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer);
}

{
  one-time initialization function for transformer( a1,  &demangling cache variable for type metadata for Transformer<UsoTask, VoiceMail.VoiceMailVerb?>,  static Transformer<>.transformer,  &demangling cache variable for type metadata for VoiceMail.VoiceMailVerb?,  (uint64_t)closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>( uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = *a1;
  static Signpost.begin(_:)();
  uint64_t v5 = v4;
  static UsoTask_CodegenConverter.convert(task:)(v3);
  if (v30)
  {
    type metadata accessor for UsoTask_call_common_PhoneCall(0LL);
    if ((swift_dynamicCast(&v31, v29, (char *)&type metadata for Any + 8) & 1) != 0)
    {
      uint64_t v6 = a2;
      uint64_t v7 = v31;
      swift_retain();
      dispatch thunk of Uso_VerbTemplate_Target.target.getter(v29);
      uint64_t v8 = swift_release(v7);
      uint64_t v9 = v29[0];
      if (v29[0] && (uint64_t v10 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v8), swift_release(v9), v10))
      {
        if ((unint64_t)v10 >> 62)
        {
          if (v10 >= 0) {
            uint64_t v23 = v10 & 0xFFFFFFFFFFFFFF8LL;
          }
          else {
            uint64_t v23 = v10;
          }
          swift_bridgeObjectRetain();
          uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v23);
          swift_bridgeObjectRelease();
          if (v24) {
            goto LABEL_16;
          }
        }

        else if (*(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8LL)))
        {
LABEL_16:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v10 & 0xC000000000000001LL) == 0, v10);
          if ((v10 & 0xC000000000000001LL) != 0)
          {
            uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v10);
          }

          else
          {
            uint64_t v14 = *(void *)(v10 + 32);
            swift_retain();
          }

          swift_bridgeObjectRelease();
          char v15 = static Transformer<>.toPhoneCallAudioRoute(phoneCallAttribute:)();
          swift_release(v14);
          swift_release(v7);
          a2 = v6;
          goto LABEL_34;
        }

        swift_release(v7);
        swift_bridgeObjectRelease();
      }

      else
      {
        swift_release(v7);
      }
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)v29, &demangling cache variable for type metadata for Any?);
  }

  static UsoTask_CodegenConverter.convert(task:)(v3);
  if (v30)
  {
    type metadata accessor for UsoTask_redial_common_PhoneCall(0LL);
    if ((swift_dynamicCast(&v31, v29, (char *)&type metadata for Any + 8) & 1) != 0)
    {
      uint64_t v6 = a2;
      uint64_t v7 = v31;
      uint64_t v11 = swift_retain();
      dispatch thunk of Uso_VerbTemplate_ReferenceTarget.reference.getter(v29, v11);
      uint64_t v12 = swift_release(v7);
      uint64_t v13 = v29[0];
      if (v29[0]
        && (uint64_t v10 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v12), swift_release(v13), v10))
      {
        if ((unint64_t)v10 >> 62)
        {
          if (v10 >= 0) {
            uint64_t v25 = v10 & 0xFFFFFFFFFFFFFF8LL;
          }
          else {
            uint64_t v25 = v10;
          }
          swift_bridgeObjectRetain();
          uint64_t v26 = _CocoaArrayWrapper.endIndex.getter(v25);
          swift_bridgeObjectRelease();
          if (v26) {
            goto LABEL_16;
          }
        }

        else if (*(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8LL)))
        {
          goto LABEL_16;
        }

        swift_release(v7);
        swift_bridgeObjectRelease();
      }

      else
      {
        swift_release(v7);
      }
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)v29, &demangling cache variable for type metadata for Any?);
  }

  static UsoTask_CodegenConverter.convert(task:)(v3);
  if (!v30)
  {
    outlined destroy of UUID?((uint64_t)v29, &demangling cache variable for type metadata for Any?);
    goto LABEL_31;
  }

  type metadata accessor for UsoTask_answer_common_PhoneCall(0LL);
  if ((swift_dynamicCast(&v31, v29, (char *)&type metadata for Any + 8) & 1) == 0)
  {
LABEL_31:
    char v15 = 4;
    goto LABEL_34;
  }

  uint64_t v16 = v31;
  uint64_t v17 = swift_retain();
  dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter(v29, v17);
  uint64_t v18 = swift_release(v16);
  uint64_t v19 = v29[0];
  if (!v29[0] || (uint64_t v20 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v18), swift_release(v19), !v20))
  {
    swift_release(v16);
LABEL_33:
    char v15 = 4;
    goto LABEL_34;
  }

  if ((unint64_t)v20 >> 62)
  {
    if (v20 >= 0) {
      uint64_t v27 = v20 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v27 = v20;
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_27;
    }
    goto LABEL_50;
  }

  if (!*(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_50:
    swift_release(v16);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }

{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  os_log_s *v23;
  uint64_t v24;
  int v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint8_t *v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  _OWORD v70[2];
  uint64_t v71;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v58 - v7;
  uint64_t v9 = *a1;
  static Signpost.begin(_:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  static UsoTask_CodegenConverter.convert(task:)(v9);
  if (v69)
  {
    uint64_t v64 = v13;
    outlined init with take of Any(&v68, v70);
    outlined init with copy of Any((uint64_t)v70, (uint64_t)&v68);
    type metadata accessor for UsoTask_noVerb_common_PhoneNumber(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      __swift_destroy_boxed_opaque_existential_1(v70);
      swift_release(v65);
LABEL_4:
      *a2 = 0;
LABEL_35:
      __swift_destroy_boxed_opaque_existential_1(&v68);
      goto LABEL_36;
    }

    type metadata accessor for UsoTask_noVerb_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      char v15 = v65;
      uint64_t v16 = swift_retain();
      dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v71, v16);
      swift_release_n(v15, 2LL);
      __swift_destroy_boxed_opaque_existential_1(v70);
      uint64_t v17 = v71;
      swift_release(v71);
      if (!v17) {
        goto LABEL_4;
      }
      uint64_t v18 = 5;
      goto LABEL_34;
    }

    type metadata accessor for UsoTask_call_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v71, &v68, (char *)&type metadata for Any + 8))
    {
      uint64_t v19 = v71;
      uint64_t v20 = static Transformer<>.isCallingLastNumberUserCalled(callTask:)();
      uint64_t v63 = v19;
      if ((v20 & 1) != 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v21 = type metadata accessor for Logger(0LL);
        uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
        uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
        uint64_t v25 = static os_log_type_t.debug.getter(v23, v24);
        if (os_log_type_enabled(v23, (os_log_type_t)v25))
        {
          unint64_t v59 = v25;
          uint64_t v61 = v23;
          uint64_t v62 = v2;
          uint64_t v26 = (_DWORD *)swift_slowAlloc(12LL, -1LL);
          uint64_t v58 = swift_slowAlloc(32LL, -1LL);
          uint64_t v67 = v58;
          uint64_t v60 = (uint8_t *)v26;
          *uint64_t v26 = 136315138;
          uint64_t v27 = v26 + 1;
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          uint64_t v28 = static NLv4Transformer.logPrefix;
          uint64_t v29 = *(void *)algn_478188;
          uint64_t v31 = qword_478190;
          uint64_t v30 = (void *)unk_478198;
          uint64_t v65 = 0LL;
          uint64_t v66 = 0xE000000000000000LL;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v28, v29, v31, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, &v67);
          uint64_t v33 = v60;
          uint64_t v65 = v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v27);
          swift_bridgeObjectRelease();
          uint64_t v34 = v61;
          _os_log_impl( &dword_0,  v61,  (os_log_type_t)v59,  "%s call last number user called is found, treat current request as redial",  v33,  0xCu);
          uint64_t v35 = v58;
          swift_arrayDestroy(v58, 1LL);
          swift_slowDealloc(v35, -1LL, -1LL);
          swift_slowDealloc(v33, -1LL, -1LL);
          swift_release(v63);

          __swift_destroy_boxed_opaque_existential_1(v70);
        }

        else
        {
          swift_release(v63);

          __swift_destroy_boxed_opaque_existential_1(v70);
        }

        uint64_t v18 = 6;
        goto LABEL_34;
      }

      uint64_t v62 = v2;
      swift_retain();
      dispatch thunk of Uso_VerbTemplate_Target.target.getter(&v65);
      uint64_t v38 = swift_release(v19);
      uint64_t v39 = v65;
      if (v65 && (v40 = dispatch thunk of UsoEntity_common_PhoneCall.mode.getter(v38), unint64_t v41 = swift_release(v39), v40))
      {
        dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter(v41);
        swift_release(v40);
        os_log_type_t v42 = type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues(0LL);
        if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v42) != 1)
        {
          outlined init with copy of PhoneCallNLIntent?( (uint64_t)v8,  (uint64_t)v6,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
          uint64_t v43 = *(void *)(v42 - 8);
          uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v6, v42);
          if (v44 == enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Audio(_:))
          {
            __swift_destroy_boxed_opaque_existential_1(v70);
            swift_release(v63);
            uint64_t v45 = 3;
LABEL_31:
            outlined destroy of UUID?( (uint64_t)v8,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
            *a2 = v45;
            goto LABEL_35;
          }

          if (v44 == enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Video(_:))
          {
            __swift_destroy_boxed_opaque_existential_1(v70);
            swift_release(v63);
            uint64_t v45 = 2;
            goto LABEL_31;
          }

          (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v42);
        }
      }

      else
      {
        uint64_t v47 = type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues(0LL);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 1LL, 1LL, v47);
      }

      uint64_t v48 = UsoTask.usoAssociatedApp.getter();
      uint64_t v45 = static Transformer<>.overrideVerbForApp(originalVerb:usoApp:)(0LL, v48);
      swift_release(v63);
      swift_release(v48);
      __swift_destroy_boxed_opaque_existential_1(v70);
      goto LABEL_31;
    }

    type metadata accessor for UsoTask_callback_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      swift_release(v65);
      uint64_t v36 = UsoTask.usoAssociatedApp.getter();
      unint64_t v37 = 1LL;
LABEL_28:
      uint64_t v46 = static Transformer<>.overrideVerbForApp(originalVerb:usoApp:)(v37, v36);
      swift_release(v36);
      __swift_destroy_boxed_opaque_existential_1(v70);
      *a2 = v46;
      goto LABEL_35;
    }

    type metadata accessor for UsoTask_redial_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      swift_release(v65);
      uint64_t v36 = UsoTask.usoAssociatedApp.getter();
      unint64_t v37 = 6LL;
      goto LABEL_28;
    }

    type metadata accessor for UsoTask_delete_common_Voicemail(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8)
      || (type metadata accessor for UsoTask_delete_common_PhoneCall(0LL),
          swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8)))
    {
      __swift_destroy_boxed_opaque_existential_1(v70);
      swift_release(v65);
      __swift_destroy_boxed_opaque_existential_1(&v68);
      uint64_t v14 = 12;
      goto LABEL_7;
    }

    type metadata accessor for UsoTask_answer_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      __swift_destroy_boxed_opaque_existential_1(v70);
      swift_release(v65);
      uint64_t v50 = 10;
LABEL_52:
      *a2 = v50;
      __swift_destroy_boxed_opaque_existential_1(&v68);
      goto LABEL_36;
    }

    type metadata accessor for UsoTask_reply_uso_NoEntity(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      uint64_t v51 = v65;
      unint64_t v52 = swift_retain();
      dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter(&v71, v52);
      swift_release(v51);
      os_log_type_t v53 = v71;
      uint64_t v54 = swift_release(v71);
      if (v53
        || (dispatch thunk of Uso_VerbTemplate_ReferenceTarget.reference.getter(&v71, v54),
            uint64_t v55 = v71,
            swift_release(v71),
            v55))
      {
        __swift_destroy_boxed_opaque_existential_1(v70);
        swift_release(v51);
      }

      else
      {
        uint64_t v56 = swift_retain();
        uint64_t v57 = dispatch thunk of Uso_VerbTemplate_ReferenceTarget.userEntities.getter(v56);
        swift_release_n(v51, 2LL);
        __swift_destroy_boxed_opaque_existential_1(v70);
        swift_bridgeObjectRelease();
        if (!v57)
        {
          uint64_t v18 = 10;
          goto LABEL_34;
        }
      }

      uint64_t v18 = 17;
LABEL_34:
      *a2 = v18;
      goto LABEL_35;
    }

    __swift_destroy_boxed_opaque_existential_1(v70);
    type metadata accessor for UsoTask_join_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      swift_release(v65);
      uint64_t v50 = 14;
      goto LABEL_52;
    }

    type metadata accessor for UsoTask_update_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8)
      || (type metadata accessor for UsoTask_update_common_Communication(0LL),
          swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8)))
    {
      swift_release(v65);
      __swift_destroy_boxed_opaque_existential_1(&v68);
      uint64_t v14 = 15;
      goto LABEL_7;
    }

    type metadata accessor for UsoTask_hangup_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
    {
      swift_release(v65);
      uint64_t v50 = 11;
      goto LABEL_52;
    }

    type metadata accessor for UsoTask_request_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8)
      || (type metadata accessor for UsoTask_summarise_common_PhoneCall(0LL),
          swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
      || (type metadata accessor for UsoTask_summarise_common_Voicemail(0LL),
          swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
      || (type metadata accessor for UsoTask_read_common_PhoneCall(0LL),
          swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
      || (type metadata accessor for UsoTask_read_common_Voicemail(0LL),
          swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8))
      || (type metadata accessor for UsoTask_call_common_Voicemail(0LL),
          swift_dynamicCast(&v65, &v68, (char *)&type metadata for Any + 8)))
    {
      swift_release(v65);
      __swift_destroy_boxed_opaque_existential_1(&v68);
      *a2 = 5;
      goto LABEL_36;
    }

    __swift_destroy_boxed_opaque_existential_1(&v68);
  }

  else
  {
    outlined destroy of UUID?((uint64_t)&v68, &demangling cache variable for type metadata for Any?);
  }

  uint64_t v14 = 17;
LABEL_7:
  *a2 = v14;
LABEL_36:
  Signpost.OpenSignpost.end()();
  return swift_release(v11);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v3 = *a1;
  static Signpost.begin(_:)();
  uint64_t v5 = v4;
  static UsoTask_CodegenConverter.convert(task:)(v3);
  if (!v10)
  {
    outlined destroy of UUID?((uint64_t)&v9, &demangling cache variable for type metadata for Any?);
    goto LABEL_6;
  }

  outlined init with take of Any(&v9, v11);
  outlined init with take of Any(v11, &v9);
  type metadata accessor for UsoTask_play_common_Voicemail(0LL);
  if (!swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8))
  {
    type metadata accessor for UsoTask_noVerb_common_Voicemail(0LL);
    if (!swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8))
    {
      type metadata accessor for UsoTask_repeat_common_Voicemail(0LL);
      if (swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8))
      {
        swift_release(v8);
        uint64_t v6 = 1;
LABEL_17:
        *a2 = v6;
        __swift_destroy_boxed_opaque_existential_1(&v9);
        goto LABEL_18;
      }

      type metadata accessor for UsoTask_skip_common_Voicemail(0LL);
      if (swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8))
      {
        swift_release(v8);
        uint64_t v6 = 2;
        goto LABEL_17;
      }

      type metadata accessor for UsoTask_pause_common_Voicemail(0LL);
      if (swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8))
      {
        swift_release(v8);
        uint64_t v6 = 3;
        goto LABEL_17;
      }

      type metadata accessor for UsoTask_resume_common_Voicemail(0LL);
      if (swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8))
      {
        swift_release(v8);
        uint64_t v6 = 4;
        goto LABEL_17;
      }

      type metadata accessor for UsoTask_delete_common_Voicemail(0LL);
      if (swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8))
      {
        swift_release(v8);
        uint64_t v6 = 5;
        goto LABEL_17;
      }

      __swift_destroy_boxed_opaque_existential_1(&v9);
LABEL_6:
      *a2 = 6;
      goto LABEL_18;
    }
  }

  swift_release(v8);
  __swift_destroy_boxed_opaque_existential_1(&v9);
  *a2 = 0;
LABEL_18:
  Signpost.OpenSignpost.end()();
  return swift_release(v5);
}

uint64_t static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, int a4@<W4>, void *a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v7 = v6;
  char v185 = a5;
  int v226 = a4;
  uint64_t v196 = a3;
  uint64_t v213 = a2;
  uint64_t v188 = a6;
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Person, INPerson>);
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin();
  uint64_t v189 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v209 = type metadata accessor for ContactQuery(0LL);
  uint64_t v208 = *(void *)(v209 - 8);
  __chkstk_darwin();
  uint64_t v210 = (char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v206 = (char *)&v184 - v11;
  __chkstk_darwin();
  uint64_t v205 = (char *)&v184 - v12;
  uint64_t v13 = type metadata accessor for MatchedResultsSetting(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:)();
  uint64_t v193 = v17;
  uint64_t v191 = v18;
  uint64_t v192 = v19;
  int v190 = v20;
  uint64_t v220 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v221 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v219 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v194 = v14;
  uint64_t v21 = *(void (**)(char *, void, uint64_t))(v14 + 104);
  id v201 = v16;
  uint64_t v195 = v13;
  v21(v16, enum case for MatchedResultsSetting.defaultMatching(_:), v13);
  unint64_t v207 = (unint64_t)a1 >> 62;
  uint64_t v22 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    uint64_t v202 = v7;
    uint64_t v211 = (void (*)(char *, void, uint64_t))v22;
    if (!v22) {
      break;
    }
    unint64_t v215 = a1 & 0xC000000000000001LL;
    uint64_t v23 = a1 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v200 = a1 & 0xFFFFFFFFFFFFFF8LL;
    if (a1 < 0) {
      uint64_t v23 = a1;
    }
    uint64_t v199 = v23;
    swift_bridgeObjectRetain();
    uint64_t v7 = 4LL;
    *(void *)&__int128 v24 = 136315138LL;
    __int128 v198 = v24;
    uint64_t v197 = (char *)&type metadata for Any + 8;
    uint64_t v212 = a1;
    uint64_t v21 = v211;
    while (1)
    {
      if (v215)
      {
        uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1);
        uint64_t v26 = v25;
      }

      else
      {
        uint64_t v26 = *(void *)(a1 + 8 * v7);
        uint64_t v25 = swift_retain();
      }

      uint64_t v27 = (void (*)(char *, void, uint64_t))(v7 - 3);
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      uint64_t v28 = dispatch thunk of CodeGenListEntry.entry.getter(&v217, v25);
      uint64_t v29 = v217;
      if (v217 && (v30 = UsoEntity_common_Agent.asCommonPerson()(), uint64_t v28 = (void *)swift_release(v29), v30))
      {
        uint64_t v214 = v26;
        uint64_t v31 = v213[3];
        uint64_t v32 = v213[4];
        __swift_project_boxed_opaque_existential_1(v213, v31);
        uint64_t v33 = swift_retain();
        uint64_t v34 = CodeGenBase.entity.getter(v33);
        swift_release(v30);
        char v35 = dispatch thunk of RRReferenceResolverProtocol.hasReference(usoEntity:)(v34, v31, v32);
        uint64_t v36 = swift_release(v34);
        if ((v35 & 1) != 0)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v37 = type metadata accessor for Logger(0LL);
          uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
          uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
          os_log_type_t v41 = static os_log_type_t.debug.getter(v39, v40);
          BOOL v42 = os_log_type_enabled(v39, v41);
          uint64_t v43 = v214;
          if (v42)
          {
            uint64_t v204 = v7 - 3;
            uint64_t v44 = swift_slowAlloc(12LL, -1LL);
            uint64_t v203 = swift_slowAlloc(32LL, -1LL);
            uint64_t v216 = v203;
            *(_DWORD *)uint64_t v44 = v198;
            if (one-time initialization token for logPrefix != -1) {
              swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
            }
            uint64_t v45 = static NLv4Transformer.logPrefix;
            uint64_t v46 = *(void *)algn_478188;
            uint64_t v47 = qword_478190;
            uint64_t v48 = (void *)unk_478198;
            uint64_t v217 = 0LL;
            unint64_t v218 = 0xE000000000000000LL;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v45, v46, v47, v48);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v44 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( (uint64_t)v217,  v218,  &v216);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v39, v41, "%s found a reference from common person", (uint8_t *)v44, 0xCu);
            uint64_t v49 = v203;
            swift_arrayDestroy(v203, 1LL);
            swift_slowDealloc(v49, -1LL, -1LL);
            swift_slowDealloc(v44, -1LL, -1LL);

            uint64_t v21 = v211;
            uint64_t v43 = v214;
            uint64_t v27 = (void (*)(char *, void, uint64_t))v204;
          }

          else
          {
          }

          uint64_t v72 = swift_retain();
          uint64_t v73 = CodeGenBase.entity.getter(v72);
          uint64_t v74 = swift_release(v30);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
          unint64_t v76 = *(void *)((char *)&dword_10 + (v219 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v75 = *(void *)((char *)&dword_18 + (v219 & 0xFFFFFFFFFFFFFF8LL));
          if (v76 >= v75 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1LL);
          }
          uint64_t v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v73);
          specialized Array._endMutation()(v77, v78, v79, v80);
          swift_release(v43);
          swift_release(v30);
          a1 = v212;
        }

        else
        {
          a1 = v212;
          if (v207)
          {
            swift_bridgeObjectRetain();
            uint64_t v65 = _CocoaArrayWrapper.endIndex.getter(v199);
            uint64_t v36 = swift_bridgeObjectRelease();
          }

          else
          {
            uint64_t v65 = *(void *)(v200 + 16);
          }

          uint64_t v81 = v214;
          if (v65 == 1)
          {
            uint64_t v82 = v205;
            UsoEntity_common_Person.toContactQuery()(v36);
            if (one-time initialization token for emptyQuery != -1) {
              swift_once(&one-time initialization token for emptyQuery, one-time initialization function for emptyQuery);
            }
            uint64_t v83 = v209;
            __swift_project_value_buffer(v209, (uint64_t)static ContactQuery.emptyQuery);
            char v84 = static ContactQuery.== infix(_:_:)(v82);
            uint64_t v85 = v82;
            char v86 = v84;
            (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v206, v85, v83);
            if ((v86 & 1) != 0)
            {
              uint64_t v168 = *(void (**)(char *, uint64_t))(v208 + 8);
              uint64_t v169 = v209;
              v168(v206, v209);
              v168(v205, v169);
LABEL_112:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release(v81);
              swift_release(v30);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v194 + 8))(v201, v195);
              swift_bridgeObjectRelease();
              uint64_t v170 = v193;
              Signpost.OpenSignpost.end()();
              uint64_t result = swift_release(v170);
              uint64_t v144 = 0LL;
              uint64_t v143 = 0LL;
              uint64_t v146 = 0LL;
              uint64_t v145 = 0LL;
              char v151 = 1;
              uint64_t v142 = (uint64_t)_swiftEmptyArrayStorage;
              goto LABEL_146;
            }

            if (one-time initialization token for emptyNLv4Query != -1) {
              swift_once( &one-time initialization token for emptyNLv4Query,  one-time initialization function for emptyNLv4Query);
            }
            uint64_t v87 = v209;
            __swift_project_value_buffer(v209, (uint64_t)static ContactQuery.emptyNLv4Query);
            uint64_t v88 = v206;
            char v89 = static ContactQuery.== infix(_:_:)(v206);
            uint64_t v90 = *(void (**)(char *, uint64_t))(v208 + 8);
            v90(v88, v87);
            v90(v205, v87);
            uint64_t v81 = v214;
            if ((v89 & 1) != 0) {
              goto LABEL_112;
            }
          }

          uint64_t v91 = swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
          unint64_t v93 = *(void *)((char *)&dword_10 + (v221 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v92 = *(void *)((char *)&dword_18 + (v221 & 0xFFFFFFFFFFFFFF8LL));
          if (v93 >= v92 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v93 + 1, 1LL);
          }
          uint64_t v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v93, v30);
          specialized Array._endMutation()(v94, v95, v96, v97);
          swift_release(v81);
          swift_release(v30);
          uint64_t v21 = v211;
        }
      }

      else
      {
        dispatch thunk of CodeGenListEntry.entry.getter(&v217, v28);
        uint64_t v50 = v217;
        if (v217)
        {
          uint64_t v51 = v26;
          uint64_t v52 = v213[3];
          uint64_t v53 = v213[4];
          __swift_project_boxed_opaque_existential_1(v213, v52);
          uint64_t v54 = swift_retain();
          uint64_t v55 = CodeGenBase.entity.getter(v54);
          swift_release(v50);
          LOBYTE(v5__swift_destroy_boxed_opaque_existential_1(v0 + 2) = dispatch thunk of RRReferenceResolverProtocol.hasReference(usoEntity:)(v55, v52, v53);
          swift_release(v55);
          uint64_t v56 = swift_retain();
          if ((v52 & 1) != 0)
          {
            uint64_t v57 = CodeGenBase.entity.getter(v56);
            uint64_t v58 = swift_release(v50);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
            unint64_t v60 = *(void *)((char *)&dword_10 + (v219 & 0xFFFFFFFFFFFFFF8LL));
            unint64_t v59 = *(void *)((char *)&dword_18 + (v219 & 0xFFFFFFFFFFFFFF8LL));
            uint64_t v21 = v211;
            if (v60 >= v59 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1LL);
            }
            uint64_t v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v57);
            specialized Array._endMutation()(v61, v62, v63, v64);
            swift_release(v50);
            swift_release(v51);
            a1 = v212;
          }

          else
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
            unint64_t v67 = *(void *)((char *)&dword_10 + (v220 & 0xFFFFFFFFFFFFFF8LL));
            unint64_t v66 = *(void *)((char *)&dword_18 + (v220 & 0xFFFFFFFFFFFFFF8LL));
            a1 = v212;
            uint64_t v21 = v211;
            if (v67 >= v66 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1LL);
            }
            uint64_t v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v50);
            specialized Array._endMutation()(v68, v69, v70, v71);
            swift_release(v50);
            swift_release(v51);
          }

          uint64_t v27 = (void (*)(char *, void, uint64_t))(v7 - 3);
        }

        else
        {
          swift_release(v26);
        }
      }

      ++v7;
      if (v27 == v21)
      {
        uint64_t v98 = swift_bridgeObjectRelease();
        uint64_t v7 = v202;
        goto LABEL_61;
      }
    }

    __break(1u);
LABEL_114:
    if (a1 < 0) {
      uint64_t v171 = a1;
    }
    else {
      uint64_t v171 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v171);
    swift_bridgeObjectRelease();
  }

  uint64_t v98 = PhoneCallVerb.isCallOrFaceTime()();
  if ((v98 & 1) != 0)
  {
    uint64_t v98 = (*(uint64_t (**)(void))(*(void *)v196 + 224LL))();
    if ((v98 & 1) == 0)
    {
      uint64_t v98 = static UsoUtils.buildDummyReferenceEntity()();
      if (v98)
      {
        uint64_t v99 = v98;
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v100 = type metadata accessor for Logger(0LL);
        uint64_t v101 = __swift_project_value_buffer(v100, (uint64_t)static Logger.siriPhone);
        uint64_t v102 = (os_log_s *)Logger.logObject.getter(v101);
        os_log_type_t v104 = static os_log_type_t.debug.getter(v102, v103);
        if (os_log_type_enabled(v102, v104))
        {
          uint64_t v105 = (_DWORD *)swift_slowAlloc(12LL, -1LL);
          uint64_t v214 = swift_slowAlloc(32LL, -1LL);
          uint64_t v216 = v214;
          unint64_t v215 = (unint64_t)v105;
          *uint64_t v105 = 136315138;
          uint64_t v106 = v105 + 1;
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          uint64_t v107 = static NLv4Transformer.logPrefix;
          uint64_t v108 = *(void *)algn_478188;
          uint64_t v110 = qword_478190;
          unint64_t v109 = (void *)unk_478198;
          uint64_t v217 = 0LL;
          unint64_t v218 = 0xE000000000000000LL;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v107, v108, v110, v109);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v111 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v217, v218, &v216);
          uint64_t v112 = (uint8_t *)v215;
          uint64_t v217 = v111;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v217, &v218, v106);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v102,  v104,  "%s call verb only to query SRR is enabled, build dummy reference",  v112,  0xCu);
          uint64_t v113 = v214;
          swift_arrayDestroy(v214, 1LL);
          swift_slowDealloc(v113, -1LL, -1LL);
          swift_slowDealloc(v112, -1LL, -1LL);
        }

        uint64_t v114 = swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v114);
        unint64_t v116 = *(void *)((char *)&dword_10 + (v219 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v115 = *(void *)((char *)&dword_18 + (v219 & 0xFFFFFFFFFFFFFF8LL));
        uint64_t v7 = v202;
        if (v116 >= v115 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v115 > 1, v116 + 1, 1LL);
        }
        uint64_t v117 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v116, v99);
        specialized Array._endMutation()(v117, v118, v119, v120);
        swift_release(v99);
        uint64_t v121 = v201;
        uint64_t v122 = v195;
        (*(void (**)(char *, uint64_t))(v194 + 8))(v201, v195);
        uint64_t v98 = ((uint64_t (*)(char *, void, uint64_t))v21)( v121,  enum case for MatchedResultsSetting.extremelySalientResultsOnly(_:),  v122);
      }
    }
  }

LABEL_139:
    if (v142 < 0) {
      uint64_t v178 = v142;
    }
    else {
      uint64_t v178 = v142 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v179 = _CocoaArrayWrapper.endIndex.getter(v178);
    swift_bridgeObjectRelease();
    if (!v179) {
      goto LABEL_143;
    }
    goto LABEL_133;
  }

  if ((unint64_t)v219 >> 62)
  {
    if (v219 < 0) {
      uint64_t v173 = v219;
    }
    else {
      uint64_t v173 = v219 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v174 = _CocoaArrayWrapper.endIndex.getter(v173);
    uint64_t v123 = swift_bridgeObjectRelease();
    if (!v174) {
      goto LABEL_80;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (v219 & 0xFFFFFFFFFFFFF8LL)))
  {
    goto LABEL_80;
  }

  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v136 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  if (v137) {
    uint64_t v138 = v136;
  }
  else {
    uint64_t v138 = 0LL;
  }
  if (v137) {
    unint64_t v139 = v137;
  }
  else {
    unint64_t v139 = 0xE000000000000000LL;
  }
  uint64_t v140 = __chkstk_darwin();
  *(&v184 - __swift_destroy_boxed_opaque_existential_1(v0 + 4) = (uint64_t)&v219;
  uint64_t v141 = v201;
  *(&v184 - __swift_destroy_boxed_opaque_existential_1(v0 + 3) = (uint64_t)v213;
  *(&v184 - __swift_destroy_boxed_opaque_existential_1(v0 + 2) = (uint64_t)v141;
  static SiriKitEventSender.current.getter(&v217, v140);
  specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
  __swift_destroy_boxed_opaque_existential_1(&v217);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v222,  (uint64_t)v223,  &demangling cache variable for type metadata for TargetContacts?);
  uint64_t v142 = v223[0];
  if (!v223[0])
  {
    uint64_t v123 = swift_bridgeObjectRelease();
    goto LABEL_80;
  }

  uint64_t v144 = v223[1];
  uint64_t v143 = v223[2];
  uint64_t v146 = v223[3];
  uint64_t v145 = v223[4];
  char v225 = v224;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v147 = v185[3];
  unint64_t v215 = v185[4];
  __swift_project_boxed_opaque_existential_1(v185, v147);
  type metadata accessor for SiriKitEvent(0LL);
  LOBYTE(v21__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 0;
  uint64_t v148 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v138,  v139,  31LL,  closure #2 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:),  0LL);
  dispatch thunk of SiriKitEventSending.send(_:)(v148, v147, v215);
  swift_release(v148);
  (*(void (**)(char *, uint64_t))(v194 + 8))(v201, v195);
  swift_bridgeObjectRelease();
  uint64_t v149 = v193;
  Signpost.OpenSignpost.end()();
  uint64_t result = swift_release(v149);
  char v151 = v225;
LABEL_146:
  uint64_t v183 = v188;
  uint64_t *v188 = v142;
  v183[1] = v144;
  v183[2] = v143;
  v183[3] = v146;
  v183[4] = v145;
  *((_BYTE *)v183 + 40) = v151;
  return result;
}

void closure #1 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MatchedResultsSetting(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v10 = swift_bridgeObjectRetain();
  static NLTransformerReferenceHelper.resolveEntitiesTargetContacts(_:referenceResolver:matchedResultsSetting:)( v10,  a1,  (uint64_t)v9,  v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v11,  a3,  &demangling cache variable for type metadata for TargetContacts?);
}

uint64_t static NLTransformerReferenceHelper.resolveEntitiesTargetContacts(_:referenceResolver:matchedResultsSetting:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v7 = type metadata accessor for ContactQuery(0LL);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v30 = (char *)v22 - v8;
  __chkstk_darwin();
  uint64_t v33 = (char *)v22 - v9;
  uint64_t v10 = type metadata accessor for PhoneRRTarget.Target(0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = type metadata accessor for PhoneRRTarget(0LL);
  uint64_t v13 = *(void *)(v37 - 8);
  __chkstk_darwin();
  uint64_t v27 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)v22 - v15;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  specialized Sequence.compactMap<A>(_:)( (uint64_t)partial apply for closure #1 in static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:),  (uint64_t)v42,  a1);
  if (*(void *)(v17 + 16))
  {
    uint64_t v35 = v17 + ((*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v46 = _swiftEmptyArrayStorage;
    uint64_t v47 = _swiftEmptyArrayStorage;
    uint64_t v45 = _swiftEmptyArrayStorage;
    *(void *)&__int128 v18 = 136315138LL;
    __int128 v25 = v18;
    uint64_t v26 = "olver:siriKitEventSender:)";
    __int128 v22[2] = 0x8000000000350DE0LL;
    v22[1] = (char *)&type metadata for Any + 8;
    *(void *)&__int128 v18 = 136315394LL;
    __int128 v24 = v18;
    v22[0] = "ppBundleId";
    os_log_type_t v41 = _swiftEmptyArrayStorage;
    uint64_t v28 = v10;
    uint64_t v29 = v12;
    uint64_t v31 = v13;
    uint64_t v32 = v16;
    uint64_t v34 = v17;
    if (*(void *)(v17 + 16))
    {
      outlined init with copy of YesNoConfirmationModel(v35, (uint64_t)v16, type metadata accessor for PhoneRRTarget);
      outlined init with copy of YesNoConfirmationModel( (uint64_t)v16,  (uint64_t)v12,  type metadata accessor for PhoneRRTarget.Target);
      uint64_t v19 = (char *)&loc_28B1C8 + dword_28BF24[swift_getEnumCaseMultiPayload(v12, v10)];
      uint64_t v38 = 1LL;
      __asm { BR              X9 }
    }

    __break(1u);
    JUMPOUT(0x28BEE8LL);
  }

  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = v23;
  *uint64_t v23 = 0LL;
  v21[1] = 0LL;
  void v21[2] = 0LL;
  v21[3] = 0LL;
  v21[4] = 0LL;
  *((_BYTE *)v21 + 40) = 0;
  return result;
}

uint64_t closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>( uint64_t *a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v6 = *a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Person, INPerson>);
  uint64_t v8 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter(v7);
  uint64_t v10 = v9;
  uint64_t v13 = v6;
  v8(&v12, &v13);
  uint64_t result = swift_release(v10);
  if (v3) {
    *a2 = v3;
  }
  else {
    *a3 = v12;
  }
  return result;
}

uint64_t closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>( uint64_t *a1@<X0>, void *a2@<X8>)
{
  void (*v6)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v4 = *a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Agent, INPerson?>);
  uint64_t v6 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter(v5);
  uint64_t v8 = v7;
  uint64_t v11 = v4;
  v6(&v10, &v11);
  uint64_t result = swift_release(v8);
  if (!v2) {
    *a2 = v10;
  }
  return result;
}

uint64_t closure #1 in static Transformer<>.transformer(referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:)@<X0>( void *a1@<X1>, uint64_t a2@<X3>, char a3@<W4>, _OWORD *a4@<X8>)
{
  uint64_t v22 = a2;
  static Signpost.begin(_:)();
  uint64_t v8 = v7;
  uint64_t v9 = UsoTask.convertToCommonPhoneCallEntity()();
  if (v4)
  {
    Signpost.OpenSignpost.end()();
    uint64_t v10 = v8;
  }

  else
  {
    uint64_t v11 = v9;
    uint64_t v17 = a4;
    if (!v9
      || (uint64_t v12 = swift_retain(),
          uint64_t v13 = (void *)dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter(v12),
          uint64_t v14 = swift_release(v11),
          !v13))
    {
      uint64_t v14 = swift_bridgeObjectRelease();
      uint64_t v13 = _swiftEmptyArrayStorage;
    }

    static SiriKitEventSender.current.getter(v19, v14);
    static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)( (uint64_t)v13,  a1,  v22,  a3 & 1,  v19,  (uint64_t *)&v20);
    __swift_destroy_boxed_opaque_existential_1(v19);
    swift_bridgeObjectRelease();
    swift_release(v11);
    __int128 v15 = v21[0];
    *uint64_t v17 = v20;
    v17[1] = v15;
    *(_OWORD *)((char *)v17 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = *(_OWORD *)((char *)v21 + 9);
    Signpost.OpenSignpost.end()();
    uint64_t v10 = v8;
  }

  return swift_release(v10);
}

void one-time initialization function for transformer( uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  __swift_allocate_value_buffer(v8, a3);
  __swift_project_value_buffer(v8, (uint64_t)a3);
  uint64_t v9 = type metadata accessor for UsoTask(0LL);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Transformer.init(transform:)(a5, 0LL, v9);
  OUTLINED_FUNCTION_6();
}

void closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer( void *a1@<X8>)
{
  void (*v24)(void **__return_ptr, void *);
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  void v30[2];
  void *v31;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin();
  uint64_t v7 = (char *)&v28 - v6;
  dispatch thunk of UsoEntity_common_Agent.name.getter(v5);
  uint64_t v9 = v8;
  uint64_t v10 = swift_bridgeObjectRelease();
  if (v9
    || (id v11 = (id)dispatch thunk of UsoEntity_common_Agent.specifyingContactAddress.getter(v10),
        uint64_t v10 = swift_release(v11),
        v11))
  {
    uint64_t v12 = dispatch thunk of UsoEntity_common_Agent.name.getter(v10);
    uint64_t v14 = v13;
    if (one-time initialization token for transformer != -1) {
      swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<String?, PersonNameComponents?>);
    __swift_project_value_buffer(v15, (uint64_t)static Transformer<>.transformer);
    uint64_t v16 = (void (*)(void *))Transformer.transform.getter(v15);
    uint64_t v18 = v17;
    v30[0] = v12;
    v30[1] = v14;
    v16(v30);
    if (v1)
    {
      swift_release(v18);
      swift_bridgeObjectRelease();
      return;
    }

    swift_release(v18);
    id v19 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
    id v20 = @nonobjc INPersonHandle.init(value:type:)(0LL, 0LL, 0LL);
    uint64_t v21 = dispatch thunk of UsoEntity_common_Agent.specifyingContactAddress.getter(v20);
    uint64_t v29 = a1;
    if (v21)
    {
      uint64_t v22 = v21;
      if (one-time initialization token for transfomer != -1) {
        swift_once(&one-time initialization token for transfomer, one-time initialization function for transfomer);
      }
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_ContactAddress?, INPersonHandle>);
      __swift_project_value_buffer(v23, (uint64_t)static Transformer<>.transfomer);
      __int128 v24 = (void (*)(void **__return_ptr, void *))Transformer.transform.getter(v23);
      uint64_t v26 = v25;
      v30[0] = v22;
      swift_retain();
      v24(&v31, v30);
      swift_release(v26);
      swift_release_n(v22, 2LL);

      id v20 = v31;
    }

    outlined init with copy of PhoneCallNLIntent?( (uint64_t)v7,  (uint64_t)v4,  &demangling cache variable for type metadata for PersonNameComponents?);
    uint64_t v27 = objc_allocWithZone(&OBJC_CLASS___INPerson);
    id v11 = @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:)( v20,  (uint64_t)v4,  v12,  v14,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);
    outlined destroy of UUID?((uint64_t)v7, &demangling cache variable for type metadata for PersonNameComponents?);
    a1 = v29;
  }

  *a1 = v11;
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer@<X0>( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v71 = (uint64_t)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for UtteranceAlignment(0LL);
  uint64_t v76 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v75 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *a1;
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v74 = v16;
  int v73 = v17;
  uint64_t v18 = dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v77, v12);
  uint64_t v19 = v77;
  if (v77)
  {
    uint64_t v64 = v5;
    uint64_t v72 = a2;
    uint64_t v70 = v15;
    uint64_t v20 = CodeGenBase.entity.getter(v18);
    swift_release(v19);
    uint64_t v21 = type metadata accessor for UsoEntityBuilder_common_PhoneCall(0LL);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    uint64_t v22 = UsoEntityBuilder_common_PhoneCall.init()();
    uint64_t v23 = type metadata accessor for UsoEntityBuilder_common_PhoneNumber(0LL);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    uint64_t v24 = UsoEntityBuilder_common_PhoneNumber.init()();
    uint64_t v69 = v20;
    static UsoBuilderConversionUtils.copyEntityDataToEntityBuilder(entityBuilder:entity:copyValueType:copyIdentifiers:copyUtteranceAlignments:)( v24,  v20,  1LL,  1LL,  1LL);
    uint64_t v25 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    uint64_t v26 = UsoEntityBuilder_common_Person.init()();
    uint64_t v27 = swift_retain();
    dispatch thunk of UsoEntityBuilder_common_Person.setSpecifyingContactAddress(value:)( v27,  &protocol witness table for UsoEntityBuilder_common_PhoneNumber);
    uint64_t v67 = v24;
    swift_release(v24);
    uint64_t v28 = swift_retain();
    uint64_t v68 = v22;
    dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)( v28,  &protocol witness table for UsoEntityBuilder_common_Person);
    uint64_t v66 = v26;
    swift_release(v26);
    uint64_t v29 = type metadata accessor for UsoTaskBuilder_call_common_PhoneCall(0LL);
    uint64_t v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    uint64_t v31 = UsoTaskBuilder_call_common_PhoneCall.init()(v30);
    uint64_t v32 = dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v77, v31);
    uint64_t v33 = v77;
    uint64_t v34 = v11;
    if (v77)
    {
      uint64_t v35 = dispatch thunk of CodeGenBase.usoIdentifiers.getter(v32);
      swift_release(v33);
      uint64_t v36 = v35;
      uint64_t v37 = *(void *)(v35 + 16);
      a2 = v72;
      if (v37)
      {
        v63[0] = v36;
        v63[1] = v34;
        uint64_t v65 = v13;
        unint64_t v38 = v36 + ((*(unsigned __int8 *)(v75 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
        uint64_t v39 = *(void *)(v75 + 72);
        uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v75 + 16);
        do
        {
          v40(v10, v38, v8);
          dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v10);
          (*(void (**)(char *, uint64_t))(v75 + 8))(v10, v8);
          v38 += v39;
          --v37;
        }

        while (v37);
        uint64_t v32 = (void *)swift_bridgeObjectRelease();
        a2 = v72;
        uint64_t v13 = v65;
      }

      else
      {
        uint64_t v32 = (void *)swift_bridgeObjectRelease();
      }
    }

    else
    {
      a2 = v72;
    }

    BOOL v42 = dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v77, v32);
    uint64_t v43 = v77;
    if (v77)
    {
      uint64_t v44 = dispatch thunk of CodeGenBase.utteranceAlignments.getter(v42);
      swift_release(v43);
      uint64_t v45 = *(void *)(v44 + 16);
      if (v45)
      {
        uint64_t v65 = v13;
        unint64_t v46 = v44 + ((*(unsigned __int8 *)(v76 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
        uint64_t v47 = *(void *)(v76 + 72);
        uint64_t v48 = *(void (**)(char *, unint64_t, uint64_t))(v76 + 16);
        uint64_t v49 = v64;
        do
        {
          v48(v7, v46, v49);
          dispatch thunk of UsoBuilder.addUtteranceAlignment(utteranceAlignment:)(v7);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v7, v49);
          v46 += v47;
          --v45;
        }

        while (v45);
        swift_bridgeObjectRelease();
        a2 = v72;
        uint64_t v13 = v65;
      }

      else
      {
        swift_bridgeObjectRelease();
      }
    }

    uint64_t v50 = v68;
    dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v68);
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v52 = swift_allocObject(v51, 40LL, 7LL);
    *(_OWORD *)(v52 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
    *(void *)(v52 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v31;
    uint64_t v77 = v52;
    specialized Array._endMutation()(v52, v53, v54, v55);
    uint64_t v56 = v77;
    uint64_t v57 = type metadata accessor for UsoBuilderOptions(0LL);
    uint64_t v58 = v71;
    __swift_storeEnumTagSinglePayload(v71, 1LL, 1LL, v57);
    swift_retain();
    uint64_t v59 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v56, v58);
    swift_bridgeObjectRelease();
    outlined destroy of UUID?(v58, &demangling cache variable for type metadata for UsoBuilderOptions?);
    uint64_t v60 = static UsoConversionUtils.convertGraphToTasks(graph:)(v59);
    uint64_t v61 = v60;
    if ((unint64_t)v60 >> 62)
    {
      if (v60 >= 0) {
        v60 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v60)) {
        goto LABEL_18;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_18:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v61 & 0xC000000000000001LL) == 0, v61);
      if ((v61 & 0xC000000000000001LL) != 0)
      {
        uint64_t v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v61);
      }

      else
      {
        uint64_t v41 = *(void *)(v61 + 32);
        swift_retain();
      }

      swift_release(v59);
      swift_release(v66);
      goto LABEL_25;
    }

    swift_release(v59);
    swift_release(v66);
    uint64_t v41 = 0LL;
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release(v67);
    swift_release(v31);
    swift_release(v69);
    swift_release(v50);
    goto LABEL_26;
  }

  uint64_t v41 = 0LL;
LABEL_26:
  *a2 = v41;
  Signpost.OpenSignpost.end()();
  return swift_release(v13);
}

uint64_t one-time initialization function for transfomer()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_ContactAddress?, INPersonHandle>);
  __swift_allocate_value_buffer(v0, static Transformer<>.transfomer);
  __swift_project_value_buffer(v0, (uint64_t)static Transformer<>.transfomer);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ContactAddress?);
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INPersonHandle,  &OBJC_CLASS___INPersonHandle_ptr);
  return Transformer.init(transform:)( closure #1 in closure #1 in variable initialization expression of static Transformer<>.transfomer,  0LL,  v1);
}

uint64_t closure #1 in closure #1 in variable initialization expression of static Transformer<>.transfomer@<X0>( uint64_t *a1@<X0>, id *a2@<X8>)
{
  uint64_t v3 = *a1;
  static Signpost.begin(_:)();
  uint64_t v5 = v4;
  int v37 = v6;
  if (v3)
  {
    uint64_t v7 = dispatch thunk of UsoEntity_common_ContactAddress.value.getter(v4);
    uint64_t v9 = v8;
    dispatch thunk of UsoEntity_common_ContactAddress.label.getter();
    if (v10) {
      goto LABEL_6;
    }
  }

  else
  {
    uint64_t v7 = 0LL;
    uint64_t v9 = 0LL;
  }

  swift_bridgeObjectRelease();
LABEL_6:
  NSString v11 = String._bridgeToObjectiveC()();
  uint64_t v12 = swift_bridgeObjectRelease();
  uint64_t v34 = v11;
  if (!v3)
  {
    uint64_t v18 = 0LL;
    goto LABEL_22;
  }

  uint64_t v13 = CodeGenBase.entity.getter(v12);
  uint64_t v14 = UsoEntity.valueTypeString.getter();
  uint64_t v16 = v15;
  swift_release(v13);
  if (v14 == 0xD000000000000010LL && v16 == 0x8000000000350EB0LL) {
    goto LABEL_9;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 0xD000000000000010LL, 0x8000000000350EB0LL, 0LL);
  uint64_t v17 = swift_bridgeObjectRelease();
  if ((v19 & 1) != 0) {
    goto LABEL_15;
  }
  uint64_t v20 = CodeGenBase.entity.getter(v17);
  uint64_t v21 = UsoEntity.valueTypeString.getter();
  uint64_t v23 = v22;
  swift_release(v20);
  if (v21 == 0xD000000000000012LL && v23 == 0x80000000003465F0LL)
  {
LABEL_9:
    uint64_t v17 = swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v18 = 2LL;
    goto LABEL_16;
  }

  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, 0xD000000000000012LL, 0x80000000003465F0LL, 0LL);
  uint64_t v17 = swift_bridgeObjectRelease();
  if ((v24 & 1) != 0) {
    goto LABEL_15;
  }
  uint64_t v18 = 0LL;
LABEL_16:
  uint64_t v25 = CodeGenBase.entity.getter(v17);
  uint64_t v26 = UsoEntity.valueTypeString.getter();
  uint64_t v28 = v27;
  swift_release(v25);
  if (v26 == 0xD000000000000012LL && v28 == 0x80000000003465F0LL)
  {
    swift_bridgeObjectRelease();
  }

  else
  {
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, 0xD000000000000012LL, 0x80000000003465F0LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      goto LABEL_22;
    }
  }

  if (v9)
  {
    v36[2] = v7;
    v36[3] = v9;
    v36[0] = 32LL;
    v36[1] = 0xE100000000000000LL;
    v35[0] = 0LL;
    v35[1] = 0xE000000000000000LL;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v7 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v36,  v35,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v9 = v31;
  }

unint64_t SpecifyingContactAddress.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000013LL;
  }
  else {
    return 0xD000000000000012LL;
  }
}

void closure #1 in closure #1 in variable initialization expression of static Transformer<>.transformer( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(void *)(a1 + 8))
  {
    id v6 = [objc_allocWithZone(NSPersonNameComponentsFormatter) init];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 personNameComponentsFromString:v7];

    if (v8)
    {
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v8);

      uint64_t v9 = type metadata accessor for PersonNameComponents(0LL);
      uint64_t v10 = 0LL;
    }

    else
    {
      uint64_t v9 = type metadata accessor for PersonNameComponents(0LL);
      uint64_t v10 = 1LL;
    }

    __swift_storeEnumTagSinglePayload((uint64_t)v5, v10, 1LL, v9);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v5,  a2,  &demangling cache variable for type metadata for PersonNameComponents?);
  }

  else
  {
    uint64_t v11 = type metadata accessor for PersonNameComponents(0LL);
    __swift_storeEnumTagSinglePayload(a2, 1LL, 1LL, v11);
  }

uint64_t closure #3 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)( char *a1)
{
  uint64_t v69 = type metadata accessor for IdentifierAppBundle(0LL);
  uint64_t v67 = *(void *)(v69 - 8);
  uint64_t v2 = __chkstk_darwin(v69);
  uint64_t v65 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v66 = (char *)&v64 - v4;
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  uint64_t v72 = v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v68 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  int v73 = (char *)&v64 - v9;
  uint64_t v10 = type metadata accessor for IdentifierNamespace(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Google_Protobuf_StringValue(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = a1;
  uint64_t v19 = Siri_Nlu_External_UsoEntityIdentifier.namespace.getter(v16);
  uint64_t v20 = Google_Protobuf_StringValue.value.getter(v19);
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v23 = (*(uint64_t (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for IdentifierNamespace.nsItemId(_:),  v10);
  uint64_t v24 = IdentifierNamespace.rawValue.getter(v23);
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v20 == v24 && v22 == v26)
  {
    char v28 = 1;
    uint64_t v26 = v22;
  }

  else
  {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v26, 0LL);
  }

  uint64_t v30 = v71;
  uint64_t v29 = v72;
  uint64_t v31 = v73;
  id v32 = v70;
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v22);
  uint64_t v33 = *(uint64_t (**)(char *, char *, uint64_t))(v29 + 16);
  uint64_t v34 = v33(v31, v32, v30);
  if ((v28 & 1) == 0)
  {
    char v61 = 0;
    uint64_t v62 = *(void (**)(char *, uint64_t))(v29 + 8);
    goto LABEL_21;
  }

  uint64_t v35 = Siri_Nlu_External_UsoEntityIdentifier.backingAppBundleID.getter(v34);
  uint64_t v37 = v36;
  unint64_t v38 = v66;
  uint64_t v39 = v67;
  uint64_t v40 = *(char **)(v67 + 104);
  uint64_t v41 = v69;
  uint64_t v42 = ((uint64_t (*)(char *, void, uint64_t))v40)( v66,  enum case for IdentifierAppBundle.abContacts(_:),  v69);
  uint64_t v43 = IdentifierAppBundle.rawValue.getter(v42);
  uint64_t v45 = v44;
  unint64_t v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v38, v41);
  if (v35 == v43 && v37 == v45)
  {
    swift_bridgeObjectRelease_n(v37, 2LL);
    uint64_t v49 = v68;
    uint64_t v31 = v73;
    uint64_t v30 = v71;
    v33(v68, v73, v71);
    goto LABEL_20;
  }

  uint64_t v70 = v40;
  char v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v43, v45, 0LL);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v37);
  uint64_t v49 = v68;
  uint64_t v31 = v73;
  uint64_t v30 = v71;
  uint64_t v50 = v33(v68, v73, v71);
  if ((v48 & 1) != 0)
  {
LABEL_20:
    uint64_t v62 = *(void (**)(char *, uint64_t))(v72 + 8);
    v62(v49, v30);
    char v61 = 1;
    goto LABEL_21;
  }

  uint64_t v51 = Siri_Nlu_External_UsoEntityIdentifier.backingAppBundleID.getter(v50);
  uint64_t v53 = v52;
  uint64_t v54 = v65;
  uint64_t v55 = v69;
  uint64_t v56 = ((uint64_t (*)(char *, void, uint64_t))v70)( v65,  enum case for IdentifierAppBundle.abApplications(_:),  v69);
  uint64_t v57 = IdentifierAppBundle.rawValue.getter(v56);
  uint64_t v59 = v58;
  v46(v54, v55);
  if (v51 == v57 && v53 == v59)
  {
    char v61 = 1;
    uint64_t v59 = v53;
  }

  else
  {
    char v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v57, v59, 0LL);
  }

  swift_bridgeObjectRelease(v59);
  swift_bridgeObjectRelease(v53);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v72 + 8);
  v62(v68, v30);
  uint64_t v31 = v73;
LABEL_21:
  v62(v31, v30);
  return v61 & 1;
}

BOOL closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)( uint64_t a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v3 = a2[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a2, v2);
  uint64_t v5 = CodeGenBase.entity.getter(v4);
  int v6 = dispatch thunk of RRReferenceResolverProtocol.hasReference(usoEntity:)(v5, v2, v3);
  uint64_t v7 = swift_release(v5);
  uint64_t v8 = dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter(v7);
  uint64_t v9 = swift_release(v8);
  if (v8) {
    goto LABEL_2;
  }
  uint64_t v11 = dispatch thunk of UsoEntity_common_Person.specifyingContactAddress.getter(v9);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter(v11);
    swift_release(v12);
    if (v13)
    {
      swift_release(v13);
LABEL_2:
      int v10 = 1;
      goto LABEL_7;
    }
  }

  int v10 = 0;
LABEL_7:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v18 = static os_log_type_t.debug.getter(v16, v17);
  if (os_log_type_enabled(v16, v18))
  {
    int v24 = v6;
    uint64_t v19 = swift_slowAlloc(24LL, -1LL);
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v27 = v20;
    *(_DWORD *)uint64_t v19 = 136315650;
    if (one-time initialization token for logPrefix != -1) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v21 = static NLv4Transformer.logPrefix;
    uint64_t v22 = *(void *)algn_478188;
    unint64_t v26 = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( v21,  v22,  0xD000000000000041LL,  (void *)0x8000000000350CB0LL);
    swift_bridgeObjectRelease();
    uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v19 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1024;
    int v6 = v24;
    LODWORD(v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v24 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 4, v19 + 14);
    *(_WORD *)(v19 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1024;
    LODWORD(v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 4, v19 + 20);
    _os_log_impl(&dword_0, v16, v18, "%s hasReference=%{BOOL}d, hasQuantifier=%{BOOL}d.", (uint8_t *)v19, 0x18u);
    swift_arrayDestroy(v20, 1LL);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  else
  {
  }

  return ((v6 | v10) & 1) == 0;
}

void UserDialogActParse.isPlayIt.getter()
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?));
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin();
  uint64_t v13 = (char *)&v26 - v12;
  static UsoTask_CodegenConverter.convert(task:)(v3);
  if (!v28[3])
  {
    uint64_t v20 = &demangling cache variable for type metadata for Any?;
    uint64_t v21 = v28;
LABEL_19:
    outlined destroy of UUID?((uint64_t)v21, v20);
    goto LABEL_20;
  }

  uint64_t v14 = type metadata accessor for UsoTask_play_common_Voicemail(0LL);
  if ((OUTLINED_FUNCTION_105_8((uint64_t)&v27, (uint64_t)v28, (uint64_t)&type metadata for Any[1], v14) & 1) != 0)
  {
    uint64_t v26 = v8;
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_134_6();
    OUTLINED_FUNCTION_50_2();
    uint64_t v15 = v28[0];
    OUTLINED_FUNCTION_38_1();
    if (v15)
    {
      uint64_t v16 = OUTLINED_FUNCTION_134_6();
      uint64_t v17 = v28[0];
      if (v28[0]
        && (v18 = dispatch thunk of CodeGenGlobalArgs.usoReferenceType.getter(v16), uint64_t v19 = swift_release(v17), v18))
      {
        dispatch thunk of UsoEntity_common_ReferenceType.definedValue.getter(v19);
        OUTLINED_FUNCTION_38_1();
      }

      else
      {
        OUTLINED_FUNCTION_120_4((uint64_t)v13, 1LL);
      }

      (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))( v1,  enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:),  v4);
      OUTLINED_FUNCTION_120_4(v1, 0LL);
      uint64_t v22 = v0 + *(int *)(v9 + 48);
      outlined init with copy of PhoneCallNLIntent?( (uint64_t)v13,  v0,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      outlined init with copy of PhoneCallNLIntent?( v1,  v22,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      OUTLINED_FUNCTION_3_7(v0);
      if (!v23)
      {
        outlined init with copy of PhoneCallNLIntent?( v0,  (uint64_t)v11,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
        OUTLINED_FUNCTION_3_7(v22);
        if (!v23)
        {
          uint64_t v24 = v26;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v26, v22, v4);
          lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_ReferenceType.DefinedValues);
          dispatch thunk of static Equatable.== infix(_:_:)(v11, v24, v4);
          OUTLINED_FUNCTION_50_2();
          uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
          v25(v24, v4);
          OUTLINED_FUNCTION_47_7(v1);
          OUTLINED_FUNCTION_47_7((uint64_t)v13);
          v25((uint64_t)v11, v4);
          OUTLINED_FUNCTION_47_7(v0);
          goto LABEL_20;
        }

        OUTLINED_FUNCTION_50_2();
        outlined destroy of UUID?( v1,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
        outlined destroy of UUID?( (uint64_t)v13,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
        goto LABEL_18;
      }

      OUTLINED_FUNCTION_50_2();
      OUTLINED_FUNCTION_119_7(v1);
      OUTLINED_FUNCTION_119_7((uint64_t)v13);
      OUTLINED_FUNCTION_3_7(v22);
      if (!v23)
      {
LABEL_18:
        uint64_t v20 = &demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?);
        uint64_t v21 = (void *)v0;
        goto LABEL_19;
      }

      outlined destroy of UUID?( v0,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
    }

    else
    {
      OUTLINED_FUNCTION_50_2();
    }
  }

PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional __swiftcall UsoIdentifierNamespaceType.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of UsoIdentifierNamespaceType.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance UsoIdentifierNamespaceType( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance UsoIdentifierNamespaceType()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UsoIdentifierNamespaceType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance UsoIdentifierNamespaceType( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UsoIdentifierNamespaceType@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UsoIdentifierNamespaceType_optional *a2@<X8>)
{
  result.value = UsoIdentifierNamespaceType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance UsoIdentifierNamespaceType()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = UsoIdentifierNamespaceType.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

const char *String.UsoAttributeNameLabel.unsafeMutableAddressor()
{
  return "label";
}

unint64_t static String.UsoAttributeNameRelationshipType.getter()
{
  return 0xD000000000000010LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance UsoIdentifierAppBundleType( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance UsoIdentifierAppBundleType()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UsoIdentifierAppBundleType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance UsoIdentifierAppBundleType( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::UsoIdentifierAppBundleType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UsoIdentifierAppBundleType@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UsoIdentifierAppBundleType_optional *a2@<X8>)
{
  result.value = UsoIdentifierAppBundleType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance UsoIdentifierAppBundleType()
{
  char v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = UsoIdentifierAppBundleType.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

PhoneCallFlowDelegatePlugin::SpecifyingContactAddress_optional __swiftcall SpecifyingContactAddress.init(rawValue:)( Swift::String rawValue)
{
  return result;
}

void UsoIdentifierAppBundleType.init(rawValue:)()
{
  v1._rawValue = v0;
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
}

void protocol witness for static Equatable.== infix(_:_:) in conformance SpecifyingContactAddress( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance SpecifyingContactAddress()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SpecifyingContactAddress()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SpecifyingContactAddress(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::SpecifyingContactAddress_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SpecifyingContactAddress@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SpecifyingContactAddress_optional *a2@<X8>)
{
  result.value = SpecifyingContactAddress.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SpecifyingContactAddress()
{
  char v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = SpecifyingContactAddress.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional __swiftcall EntitySpanPropertyKey.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of EntitySpanPropertyKey.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance EntitySpanPropertyKey()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance EntitySpanPropertyKey()
{
}

void protocol witness for Hashable.hash(into:) in conformance EntitySpanPropertyKey()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance EntitySpanPropertyKey(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EntitySpanPropertyKey@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::EntitySpanPropertyKey_optional *a2@<X8>)
{
  result.value = EntitySpanPropertyKey.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EntitySpanPropertyKey()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = EntitySpanPropertyKey.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void EntitySpanLabel.init(rawValue:)()
{
  v0._rawValue = &outlined read-only object #0 of EntitySpanLabel.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v0, v1);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance EntitySpanLabel(BOOL *a1@<X8>)
{
  *a1 = v2 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EntitySpanLabel(char *a1@<X8>)
{
  a1[15] = -18;
}

void closure #1 in static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:)( uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MatchedResultsSetting(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for MatchedResultsSetting.defaultMatching(_:),  v4);
  uint64_t v8 = swift_bridgeObjectRetain();
  static NLTransformerReferenceHelper.resolveEntitiesTargetContacts(_:referenceResolver:matchedResultsSetting:)( v8,  a1,  (uint64_t)v7,  v9);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v9,  a2,  &demangling cache variable for type metadata for TargetContacts?);
}

uint64_t specialized NLv4Transformer.init(referenceResolver:featureManager:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  v18[3] = a4;
  v18[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32LL))(boxed_opaque_existential_1, a1, a4);
  outlined init with copy of SiriPhoneContact();
  uint64_t v14 = swift_allocObject(&unk_413A00, 64LL, 7LL);
  *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a2;
  outlined init with take of AppSelectionSignalComponent(&v17, v14 + 24);
  uint64_t v15 = type metadata accessor for TransformerInput(0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLIntent?);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:),  v14,  v15);
  __swift_destroy_boxed_opaque_existential_1(v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))( a3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15NLv4Transformer_transformer,  v5,  v11);
  return a3;
}

uint64_t sub_28ED40()
{
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

BOOL partial apply for closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)( uint64_t a1)
{
  return closure #8 in implicit closure #7 in UserDialogActParse.isCallToOffDeviceContactEntity(useEntitySpans:referenceResolver:)( a1,  *(void **)(v1 + 16));
}

unint64_t lazy protocol witness table accessor for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType()
{
  unint64_t result = lazy protocol witness table cache variable for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType;
  if (!lazy protocol witness table cache variable for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UsoIdentifierNamespaceType,  &type metadata for UsoIdentifierNamespaceType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UsoIdentifierNamespaceType and conformance UsoIdentifierNamespaceType);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType()
{
  unint64_t result = lazy protocol witness table cache variable for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType;
  if (!lazy protocol witness table cache variable for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UsoIdentifierAppBundleType,  &type metadata for UsoIdentifierAppBundleType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UsoIdentifierAppBundleType and conformance UsoIdentifierAppBundleType);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type SpecifyingContactAddress and conformance SpecifyingContactAddress()
{
  unint64_t result = lazy protocol witness table cache variable for type SpecifyingContactAddress and conformance SpecifyingContactAddress;
  if (!lazy protocol witness table cache variable for type SpecifyingContactAddress and conformance SpecifyingContactAddress)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SpecifyingContactAddress,  &type metadata for SpecifyingContactAddress);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SpecifyingContactAddress and conformance SpecifyingContactAddress);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey()
{
  unint64_t result = lazy protocol witness table cache variable for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey;
  if (!lazy protocol witness table cache variable for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EntitySpanPropertyKey,  &type metadata for EntitySpanPropertyKey);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EntitySpanPropertyKey and conformance EntitySpanPropertyKey);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type EntitySpanLabel and conformance EntitySpanLabel()
{
  unint64_t result = lazy protocol witness table cache variable for type EntitySpanLabel and conformance EntitySpanLabel;
  if (!lazy protocol witness table cache variable for type EntitySpanLabel and conformance EntitySpanLabel)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EntitySpanLabel,  &type metadata for EntitySpanLabel);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EntitySpanLabel and conformance EntitySpanLabel);
  }

  return result;
}

uint64_t ObjC metadata update function for NLv4Transformer()
{
  return type metadata accessor for NLv4Transformer(0LL);
}

uint64_t type metadata accessor for NLv4Transformer(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for NLv4Transformer,  (uint64_t)&nominal type descriptor for NLv4Transformer);
}

void type metadata completion function for NLv4Transformer(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
  }

void type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>)
  {
    uint64_t v2 = type metadata accessor for TransformerInput(255LL);
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PhoneCallNLIntent?);
    unint64_t v4 = type metadata accessor for Transformer(a1, v2, v3);
    if (!v5) {
      atomic_store( v4,  (unint64_t *)&lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
    }
  }

uint64_t destroy for UserDialogActParse(void *a1)
{
  return swift_bridgeObjectRelease(a1[1]);
}

void initializeBufferWithCopyOfBuffer for UserDialogActParse(void *a1, void *a2)
{
  uint64_t v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_2();
}

uint64_t *assignWithCopy for UserDialogActParse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a1[1];
  uint64_t v7 = a2[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  return a1;
}

void *assignWithTake for UserDialogActParse(void *a1, _OWORD *a2)
{
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

void type metadata accessor for UserDialogActParse()
{
}

uint64_t storeEnumTagSinglePayload for UsoIdentifierNamespaceType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF3) {
    return ((uint64_t (*)(void))((char *)&loc_28F108 + 4 * byte_33BF66[v4]))();
  }
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_28F13C + 4 * byte_33BF61[v4]))();
}

uint64_t sub_28F13C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_28F144(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x28F14CLL);
  }
  return result;
}

uint64_t sub_28F158(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x28F160LL);
  }
  *(_BYTE *)unint64_t result = a2 + 12;
  return result;
}

uint64_t sub_28F164(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_28F16C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for UsoIdentifierNamespaceType()
{
}

void type metadata accessor for UsoIdentifierAppBundleType()
{
}

uint64_t storeEnumTagSinglePayload for UsoIdentifierAppBundleType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_28F1E0 + 4 * byte_33BF70[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_28F214 + 4 * byte_33BF6B[v4]))();
}

uint64_t sub_28F214(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_28F21C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x28F224LL);
  }
  return result;
}

uint64_t sub_28F230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x28F238LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_28F23C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_28F244(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SpecifyingContactAddress()
{
}

uint64_t storeEnumTagSinglePayload for EntitySpanPropertyKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_28F2A8 + 4 * byte_33BF7A[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_28F2DC + 4 * byte_33BF75[v4]))();
}

uint64_t sub_28F2DC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_28F2E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x28F2ECLL);
  }
  return result;
}

uint64_t sub_28F2F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x28F300LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_28F304(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_28F30C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntitySpanPropertyKey()
{
}

uint64_t storeEnumTagSinglePayload for EntitySpanLabel(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_28F364 + 4 * byte_33BF7F[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_28F384 + 4 * byte_33BF84[v4]))();
  }
}

_BYTE *sub_28F364(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_28F384(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_28F38C(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_28F394(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_28F39C(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_28F3A4(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void type metadata accessor for EntitySpanLabel()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TransformerInput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v11;
      *((void *)v9 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }

    else
    {
      __int128 v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = *((void *)v10 + 4);
    }
  }

  return a1;
}

uint64_t initializeWithCopy for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v10;
    *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
    (**(void (***)(void))(v10 - 8))();
  }

  else
  {
    __int128 v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v12;
    *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(v9 + 32);
  }

  return a1;
}

uint64_t assignWithCopy for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (__int128 *)(a2 + v7);
  uint64_t v10 = *((void *)v9 + 3);
  if (!*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v10;
      *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, __int128 *))(v10 - 8))(v8, v9);
      return a1;
    }

uint64_t initializeWithTake for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __int128 v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v10;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(a1 + v7));
  }
  __int128 v9 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v9;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + v7 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_28F6B0);
}

uint64_t sub_28F6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_20_56();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 8) = -1;
  }
  int v9 = v8 - 1;
  if (v9 < 0) {
    int v9 = -1;
  }
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TransformerInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_28F740);
}

void sub_28F740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_56();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }

  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
    OUTLINED_FUNCTION_6();
  }

uint64_t type metadata completion function for TransformerInput(uint64_t a1)
{
  uint64_t result = type metadata accessor for Siri_Nlu_External_UserDialogAct(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t *a11)
{
  uint64_t result = specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()( *a1,  a1[1],  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  *a11);
  if (!v11)
  {
    *a9 = result;
    a9[1] = v14;
  }

  return result;
}

uint64_t partial apply for specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()@<X0>( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return specialized closure #1 in UsoContactConvertible.isNameLikelyNonBusiness()( a1,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(unsigned int *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56),  *(void *)(v2 + 64),  a2,  *(void *)(v2 + 72),  *(uint64_t **)(v2 + 80));
}

void partial apply for closure #1 in static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:)( uint64_t a1@<X8>)
{
}

uint64_t sub_28F8D0()
{
  return swift_deallocObject(v0, 73LL, 7LL);
}

uint64_t partial apply for closure #1 in static Transformer<>.transformer(referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:)@<X0>( _OWORD *a1@<X8>)
{
  return closure #1 in static Transformer<>.transformer(referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:)( (void *)(v1 + 16),  *(void *)(v1 + 64),  *(_BYTE *)(v1 + 72),  a1);
}

uint64_t outlined destroy of NLv4UpdateTransformer(uint64_t a1)
{
  return a1;
}

uint64_t sub_28F954()
{
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 120LL, 7LL);
}

void type metadata accessor for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult)
  {
    unint64_t v4 = type metadata accessor for Transformer<>.SrrOrdinalResolvedResult(0LL, a2, a3, a4);
    if (!v5) {
      atomic_store( v4,  (unint64_t *)&lazy cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?><>.SrrOrdinalResolvedResult);
    }
  }

uint64_t type metadata accessor for Transformer<>.SrrOrdinalResolvedResult( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for Transformer<>.SrrOrdinalResolvedResult);
}

void partial apply for closure #1 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)( uint64_t a1@<X8>)
{
}

uint64_t partial apply for closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)( a1,  a2,  a3);
}

uint64_t partial apply for closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)@<X0>( uint64_t *a1@<X0>, void *a2@<X8>)
{
  return closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:)( a1,  a2);
}

uint64_t sub_28FA34()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

void partial apply for closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:)( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t type metadata instantiation function for Transformer<>.SrrOrdinalResolvedResult( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8LL);
}

void destroy for Transformer<>.SrrOrdinalResolvedResult(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 8));
  }
}

void *initializeWithCopy for Transformer<>.SrrOrdinalResolvedResult(void *a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  *a1 = *(void *)a2;
  uint64_t v5 = a1 + 1;
  uint64_t v6 = a2 + 8;
  uint64_t v7 = *(void *)(a2 + 32);
  id v8 = v4;
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    a1[4] = v7;
    a1[5] = v9;
    (**(void (***)(void *, uint64_t, uint64_t))(v7 - 8))(v5, v6, v7);
  }

  else
  {
    __int128 v10 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
    *((_OWORD *)v5 + 1) = v10;
    v5[4] = *(void *)(v6 + 32);
  }

  return a1;
}

uint64_t assignWithCopy for Transformer<>.SrrOrdinalResolvedResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v7)
    {
      *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, a2 + 8);
      return a1;
    }

uint64_t assignWithTake for Transformer<>.SrrOrdinalResolvedResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 8));
  }
  __int128 v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for Transformer<>.SrrOrdinalResolvedResult(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      uint64_t v3 = *a1;
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Transformer<>.SrrOrdinalResolvedResult( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }

  return result;
}

uint64_t destroy for TargetContacts(void *a1)
{
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t initializeWithCopy for TargetContacts(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t *assignWithCopy for TargetContacts(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a1[1];
  uint64_t v7 = a2[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  uint64_t v8 = a1[2];
  uint64_t v9 = a2[2];
  a1[2] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = a1[3];
  uint64_t v11 = a2[3];
  a1[3] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v10);
  uint64_t v12 = a1[4];
  uint64_t v13 = a2[4];
  a1[4] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v12);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t assignWithTake for TargetContacts(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(void *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a1 + 32);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetContacts(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 41))
    {
      LODWORD(OUTLINED_FUNCTION_2_18(v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(OUTLINED_FUNCTION_2_18(v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetContacts(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 41) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void *type metadata accessor for TargetContacts()
{
  return &unk_413AD8;
}

uint64_t OUTLINED_FUNCTION_1_92()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_94@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return swift_dynamicCast(v2 + 256, v3 - 256, a2 + 8, a1, 6LL);
}

void OUTLINED_FUNCTION_7_100(uint64_t a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_12_83()
{
  return swift_release(*(void *)(v0 - 352));
}

uint64_t OUTLINED_FUNCTION_14_71(uint64_t a1, uint64_t a2)
{
  return Transformer.transform.getter(v2);
}

uint64_t OUTLINED_FUNCTION_16_55()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 128));
}

id OUTLINED_FUNCTION_18_62()
{
  return [v1 *(SEL *)(v0 + 1424)];
}

uint64_t OUTLINED_FUNCTION_19_60()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 144));
}

BOOL OUTLINED_FUNCTION_22_54(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_24_47(uint64_t a1, uint64_t *a2)
{
}

id OUTLINED_FUNCTION_31_43()
{
  return [v0 *(SEL *)(v1 + 1864)];
}

uint64_t OUTLINED_FUNCTION_32_48(uint64_t a1)
{
  *(void *)(v4 - 160) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 - 160, v3 + 8, v2, v1 + 12);
}

  ;
}

uint64_t OUTLINED_FUNCTION_37_39()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( *(void *)(v0 - 160),  *(void *)(v0 - 152),  (uint64_t *)(v0 - 120));
}

id OUTLINED_FUNCTION_38_37(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

void OUTLINED_FUNCTION_48_33(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

void OUTLINED_FUNCTION_51_22()
{
}

uint64_t OUTLINED_FUNCTION_52_28()
{
  return 0x614E6E6F73726570LL;
}

void OUTLINED_FUNCTION_53_29(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._uint64_t countAndFlagsBits = 0xD000000000000037LL;
  String.append(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_54_23(uint64_t a1)
{
  *(void *)(v3 - 256) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 256, v3 - 248, v2, v1 + 12);
}

uint64_t OUTLINED_FUNCTION_60_26@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void OUTLINED_FUNCTION_61_23( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

uint64_t OUTLINED_FUNCTION_62_22(uint64_t a1)
{
  *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  uint64_t v3 = *(void *)(v2 - 72);
  *(void *)(v2 - 256) = v3;
  return swift_retain(v3);
}

void OUTLINED_FUNCTION_63_25()
{
}

uint64_t OUTLINED_FUNCTION_75_24()
{
  return specialized NLv4Transformer.init(referenceResolver:featureManager:)(v4, v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_78_23(uint64_t a1)
{
  *(void *)(v1 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  return swift_allocError(v2, a1, 0LL, 0LL);
}

void OUTLINED_FUNCTION_80_16(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_81_21()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 328));
}

void OUTLINED_FUNCTION_82_20(uint64_t a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_85_15()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 112))(v1 - 256);
}

void OUTLINED_FUNCTION_86_15()
{
}

uint64_t OUTLINED_FUNCTION_87_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 8);
  *(void *)(v3 - 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  return v4(v1, v2);
}

void OUTLINED_FUNCTION_88_23(uint64_t a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_90_17()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v0 + 168) - 8LL) + 104LL))(v1);
}

uint64_t OUTLINED_FUNCTION_91_15(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_97_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 208, v4, v5, a4);
}

void OUTLINED_FUNCTION_98_14(void *a1, uint64_t a2, os_log_type_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_103_10()
{
  return swift_release(*(void *)(v0 + 112));
}

uint64_t OUTLINED_FUNCTION_104_8(uint64_t a1)
{
  *(void *)(v1 - 256) = a1;
  return v1 - 256;
}

uint64_t OUTLINED_FUNCTION_105_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(a1, a2, a3, a4, 6LL);
}

void OUTLINED_FUNCTION_106_9(uint64_t a1)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_112_9()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_115_9(void *a1, uint64_t a2, os_log_type_t a3, const char *a4)
{
}

void OUTLINED_FUNCTION_116_10()
{
  v2._uint64_t countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

void OUTLINED_FUNCTION_120_11(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t OUTLINED_FUNCTION_123_7(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 288))(a1, a2, v2);
}

void OUTLINED_FUNCTION_124_8()
{
}

uint64_t OUTLINED_FUNCTION_127_8(uint64_t result)
{
  *(void *)(v1 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  *(void *)(v2 - 256) = 0LL;
  *(void *)(v2 - 24__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xE000000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_131_8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
}

void OUTLINED_FUNCTION_132_11()
{
}

void OUTLINED_FUNCTION_133_11(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t OUTLINED_FUNCTION_134_6()
{
  return dispatch thunk of Uso_VerbTemplate_Reference.reference.getter();
}

uint64_t OUTLINED_FUNCTION_135_7()
{
  return swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_136_7()
{
  return swift_retain(*(void *)(v0 + 8 * v1));
}

uint64_t *OUTLINED_FUNCTION_139_9(uint64_t a1)
{
  return __swift_allocate_value_buffer(a1, v1);
}

uint64_t OUTLINED_FUNCTION_141_7()
{
  return swift_arrayDestroy(v0, 1LL);
}

void OUTLINED_FUNCTION_143_5(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

void OUTLINED_FUNCTION_144_7(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_145_8()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 80));
}

uint64_t OUTLINED_FUNCTION_148_8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

id OUTLINED_FUNCTION_149_7(void *a1)
{
  return [a1 *(SEL *)(v1 + 1872)];
}

id OUTLINED_FUNCTION_150_6(void *a1)
{
  return [a1 *(SEL *)(v1 + 1808)];
}

void *OUTLINED_FUNCTION_153_8()
{
  return outlined release of Set<String>((void *)(v0 - 104));
}

void OUTLINED_FUNCTION_154_7()
{
}

uint64_t OUTLINED_FUNCTION_168_3()
{
  return type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(0LL);
}

id OUTLINED_FUNCTION_170_4(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t TemplatingResult.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v35 = a3;
  uint64_t v5 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BehaviorAfterSpeaking?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for BehaviorAfterSpeaking(0LL);
  uint64_t v31 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v33 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin();
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = TemplatingResult.print.getter(v13);
  TemplatingResult.print.getter(v16);
  uint64_t v36 = v16;
  OUTLINED_FUNCTION_1_93();
  uint64_t v32 = v36;
  uint64_t v18 = TemplatingResult.speak.getter(v17);
  uint64_t v34 = a1;
  TemplatingResult.speak.getter(v18);
  uint64_t v36 = v18;
  OUTLINED_FUNCTION_1_93();
  uint64_t v19 = v36;
  outlined init with copy of BehaviorAfterSpeaking?(v30, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v11) == 1)
  {
    TemplatingResult.behaviorAfterSpeaking.getter();
    OUTLINED_FUNCTION_0_98();
    uint64_t v20 = outlined destroy of BehaviorAfterSpeaking?((uint64_t)v10);
    uint64_t v21 = v31;
  }

  else
  {
    OUTLINED_FUNCTION_0_98();
    uint64_t v21 = v31;
    uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v15, v10, v11);
  }

  uint64_t v22 = TemplatingResult.dialogIdentifier.getter(v20);
  TemplatingResult.dialogIdentifier.getter(v22);
  uint64_t v36 = v22;
  OUTLINED_FUNCTION_1_93();
  uint64_t v23 = v36;
  uint64_t v24 = TemplatingResult.templateIdentifier.getter();
  uint64_t v26 = v25;
  uint64_t v27 = v33;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v33, v15, v11);
  TemplatingResult.init(templateIdentifier:speak:print:behaviorAfterSpeaking:dialogIdentifier:)( v24,  v26,  v19,  v32,  v27,  v23);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, v11);
}

uint64_t outlined init with copy of BehaviorAfterSpeaking?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BehaviorAfterSpeaking?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t static TemplatingResult.makeDisplayTextResult(print:templateIdentifier:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TemplatingResult.init(templateIdentifier:speak:print:)(a2, a3, _swiftEmptyArrayStorage, a1);
}

uint64_t OUTLINED_FUNCTION_0_98()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_1_93()
{
}

PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional __swiftcall HangUpCallCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of HangUpCallCATsSimple.Properties.init(rawValue:),  v3);
  OUTLINED_FUNCTION_27_2();
  if (v1 >= 3) {
    return (PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional)v1;
  }
}

void HangUpCallCATsSimple.Properties.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_38_2();
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance HangUpCallCATsSimple.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance HangUpCallCATsSimple.Properties()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance HangUpCallCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::HangUpCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = HangUpCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance HangUpCallCATsSimple.Properties( void *a1@<X8>)
{
  *a1 = v3;
  a1[1] = v4;
}

uint64_t HangUpCallCATsSimple.errorWithCode()()
{
  unint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000018LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

BOOL HangUpCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of HangUpCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = HangUpCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HangUpCallCATsSimple.errorWithCodeAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds();
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000018LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for HangUpCallCATsSimple.ErrorWithCodeDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpCallCATsSimple.ErrorWithCodeDialogIds,  &type metadata for HangUpCallCATsSimple.ErrorWithCodeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpCallCATsSimple.ErrorWithCodeDialogIds,  &type metadata for HangUpCallCATsSimple.ErrorWithCodeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeDialogIds);
  }

  return result;
}

uint64_t HangUpCallCATsSimple.errorWithCodeNoCallToHangUp()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000026LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

BOOL HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HangUpCallCATsSimple.errorWithCodeNoCallToHangUpAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds();
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000026LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds,  &type metadata for HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds,  &type metadata for HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds and conformance HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds);
  }

  return result;
}

uint64_t HangUpCallCATsSimple.intentHandledResponse()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000020LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

BOOL HangUpCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of HangUpCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  return SuggestionsCATsSimple.PhoneCall_StartCallDialogIds.init(rawValue:)(a1, v1);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = HangUpCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HangUpCallCATsSimple.intentHandledResponseAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  lazy protocol witness table accessor for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds();
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000020LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for HangUpCallCATsSimple.IntentHandledResponseDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for HangUpCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for HangUpCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.IntentHandledResponseDialogIds and conformance HangUpCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpCallCATsSimple.Properties,  &type metadata for HangUpCallCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpCallCATsSimple.Properties and conformance HangUpCallCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for HangUpCallCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for HangUpCallCATsSimple;
  if (!type metadata singleton initialization cache for HangUpCallCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HangUpCallCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for HangUpCallCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for HangUpCallCATsSimple);
}

uint64_t ObjC metadata update function for HangUpCallCATsSimple()
{
  return type metadata accessor for HangUpCallCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for HangUpCallCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_290D04 + 4 * byte_33C435[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_290D38 + 4 * byte_33C430[v4]))();
}

uint64_t sub_290D38(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_290D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x290D48LL);
  }
  return result;
}

uint64_t sub_290D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x290D5CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_290D60(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_290D68(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HangUpCallCATsSimple.Properties()
{
}

void type metadata accessor for HangUpCallCATsSimple.ErrorWithCodeDialogIds()
{
}

void type metadata accessor for HangUpCallCATsSimple.ErrorWithCodeNoCallToHangUpDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for HangUpCallCATsSimple.ErrorWithCodeDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_290DDC + 4 * byte_33C43A[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_290DFC + 4 * byte_33C43F[v4]))();
  }
}

_BYTE *sub_290DDC(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_290DFC(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_290E04(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_290E0C(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_290E14(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_290E1C(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void type metadata accessor for HangUpCallCATsSimple.IntentHandledResponseDialogIds()
{
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional __swiftcall OngoingCallCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of OngoingCallCATsSimple.Properties.init(rawValue:),  v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t OngoingCallCATsSimple.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_290EAC + 4 * byte_33C7A0[a1]))( 0xD00000000000001BLL,  0x8000000000343540LL);
}

void sub_290EAC()
{
}

unint64_t sub_290EDC()
{
  return 0xD000000000000019LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallCATsSimple.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance OngoingCallCATsSimple.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallCATsSimple.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallCATsSimple.Properties()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = OngoingCallCATsSimple.Properties.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t OngoingCallCATsSimple.addOrCallPrompt()()
{
  unsigned __int8 v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *unsigned __int8 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD00000000000001BLL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

void OngoingCallCATsSimple.AddOrCallPromptDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.AddOrCallPromptDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t OngoingCallCATsSimple.addOrCallPromptAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds();
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD00000000000001BLL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for OngoingCallCATsSimple.AddOrCallPromptDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.AddOrCallPromptDialogIds,  &type metadata for OngoingCallCATsSimple.AddOrCallPromptDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.AddOrCallPromptDialogIds,  &type metadata for OngoingCallCATsSimple.AddOrCallPromptDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.AddOrCallPromptDialogIds and conformance OngoingCallCATsSimple.AddOrCallPromptDialogIds);
  }

  return result;
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:));
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergency(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  *uint64_t v7 = v0;
  v7[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD00000000000002CLL, v8, v1, v10);
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::ConfirmHangUpForForeignEmergencyDialogIds_optional __swiftcall OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x636972656E6567LL;
  }
  else {
    return 0x656D695465636166LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::ConfirmHangUpForForeignEmergencyDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::ConfirmHangUpForForeignEmergencyDialogIds_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergencyAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATsSimple.confirmHangUpForForeignEmergencyAsLabels(currentCall:));
}

uint64_t OngoingCallCATsSimple.confirmHangUpForForeignEmergencyAsLabels(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds();
  *uint64_t v7 = v0;
  v7[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( 0xD00000000000002CLL,  v8,  v1,  (uint64_t)&type metadata for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds,  v9,  v11);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds,  &type metadata for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds,  &type metadata for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds);
  }

  return result;
}

uint64_t OngoingCallCATsSimple.confirmHangUpForLocalEmergency()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD00000000000002ALL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

void OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t OngoingCallCATsSimple.confirmHangUpForLocalEmergencyAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds();
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD00000000000002ALL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds,  &type metadata for OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds,  &type metadata for OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds and conformance OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds);
  }

  return result;
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergency(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATsSimple.informHangUpForEmergency(currentCall:));
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergency(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  *uint64_t v7 = v0;
  v7[1] = AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD000000000000024LL, v8, v1, v10);
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::InformHangUpForEmergencyDialogIds_optional __swiftcall OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::InformHangUpForEmergencyDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::InformHangUpForEmergencyDialogIds_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergencyAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATsSimple.informHangUpForEmergencyAsLabels(currentCall:));
}

uint64_t OngoingCallCATsSimple.informHangUpForEmergencyAsLabels(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds();
  *uint64_t v7 = v0;
  v7[1] = AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( 0xD000000000000024LL,  v8,  v1,  (uint64_t)&type metadata for OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds,  v9,  v11);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds,  &type metadata for OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds,  &type metadata for OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds and conformance OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds);
  }

  return result;
}

uint64_t OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:));
}

uint64_t OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:)()
{
  uint64_t v3 = v1[2];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_30_37(v4);
  v1[5] = v5;
  OUTLINED_FUNCTION_0_59(v5, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(0LL);
    uint64_t v7 = v3;
  }

  else
  {
    uint64_t v7 = 0LL;
    uint64_t v6 = 0LL;
    v5[3].n128_u64[1] = 0LL;
    v5[4].n128_u64[0] = 0LL;
  }

  uint64_t v8 = OUTLINED_FUNCTION_8_78(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v5[6].n128_u64[1] = 0LL;
    v5[7].n128_u64[0] = 0LL;
  }

  v5[6].n128_u64[0] = v0;
  v5[7].n128_u64[1] = v8;
  OUTLINED_FUNCTION_19_27();
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc(v2);
  v1[6] = v9;
  *uint64_t v9 = v1;
  v9[1] = OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD000000000000019LL, v10, (uint64_t)v5, v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional __swiftcall OngoingCallCATsSimple.NewCallPromptDialogIds.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of OngoingCallCATsSimple.NewCallPromptDialogIds.init(rawValue:),  v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

void OngoingCallCATsSimple.NewCallPromptDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_38_2();
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATsSimple.NewCallPromptDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATsSimple::NewCallPromptDialogIds_optional *a2@<X8>)
{
  result.value = OngoingCallCATsSimple.NewCallPromptDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  OngoingCallCATsSimple.NewCallPromptDialogIds.rawValue.getter(v1);
  *unint64_t v0 = v2;
  v0[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:));
}

uint64_t OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:)()
{
  uint64_t v3 = v1[2];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_30_37(v4);
  v1[5] = v5;
  OUTLINED_FUNCTION_0_59(v5, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(0LL);
    uint64_t v7 = v3;
  }

  else
  {
    uint64_t v7 = 0LL;
    uint64_t v6 = 0LL;
    v5[3].n128_u64[1] = 0LL;
    v5[4].n128_u64[0] = 0LL;
  }

  uint64_t v8 = OUTLINED_FUNCTION_8_78(v6, v7);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v5[6].n128_u64[1] = 0LL;
    v5[7].n128_u64[0] = 0LL;
  }

  v5[6].n128_u64[0] = v0;
  v5[7].n128_u64[1] = v8;
  OUTLINED_FUNCTION_19_27();
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc(v2);
  v1[6] = v9;
  lazy protocol witness table accessor for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds();
  *uint64_t v9 = v1;
  v9[1] = OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( 0xD000000000000019LL,  v10,  (uint64_t)v5,  (uint64_t)&type metadata for OngoingCallCATsSimple.NewCallPromptDialogIds,  v11,  v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.NewCallPromptDialogIds,  &type metadata for OngoingCallCATsSimple.NewCallPromptDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.NewCallPromptDialogIds,  &type metadata for OngoingCallCATsSimple.NewCallPromptDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.NewCallPromptDialogIds and conformance OngoingCallCATsSimple.NewCallPromptDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATsSimple.Properties,  &type metadata for OngoingCallCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATsSimple.Properties and conformance OngoingCallCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for OngoingCallCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for OngoingCallCATsSimple;
  if (!type metadata singleton initialization cache for OngoingCallCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for OngoingCallCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for OngoingCallCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for OngoingCallCATsSimple);
}

uint64_t ObjC metadata update function for OngoingCallCATsSimple()
{
  return type metadata accessor for OngoingCallCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for OngoingCallCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_291C64 + 4 * byte_33C7AA[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_291C98 + 4 * byte_33C7A5[v4]))();
}

uint64_t sub_291C98(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_291CA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x291CA8LL);
  }
  return result;
}

uint64_t sub_291CB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x291CBCLL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_291CC0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_291CC8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.Properties()
{
}

void type metadata accessor for OngoingCallCATsSimple.AddOrCallPromptDialogIds()
{
}

void type metadata accessor for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for OngoingCallCATsSimple.AddOrCallPromptDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_291D40 + 4 * byte_33C7AF[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_291D60 + 4 * byte_33C7B4[v4]))();
  }
}

_BYTE *sub_291D40(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_291D60(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_291D68(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_291D70(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_291D78(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_291D80(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.ConfirmHangUpForLocalEmergencyDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for OngoingCallCATsSimple.ConfirmHangUpForForeignEmergencyDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_291DE4 + 4 * byte_33C7BE[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_291E18 + 4 * byte_33C7B9[v4]))();
}

uint64_t sub_291E18(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_291E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x291E28LL);
  }
  return result;
}

uint64_t sub_291E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x291E3CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_291E40(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_291E48(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.InformHangUpForEmergencyDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for OngoingCallCATsSimple.NewCallPromptDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_291EAC + 4 * byte_33C7C8[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_291EE0 + 4 * byte_33C7C3[v4]))();
}

uint64_t sub_291EE0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_291EE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x291EF0LL);
  }
  return result;
}

uint64_t sub_291EFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x291F04LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_291F08(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_291F10(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for OngoingCallCATsSimple.NewCallPromptDialogIds()
{
}

uint64_t OUTLINED_FUNCTION_8_78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x6143746567726174LL;
  v2[11] = 0xEA00000000006C6CLL;
  return 0LL;
}

void *AnnounceIncomingCallNotificationDirectAction.identifier.unsafeMutableAddressor()
{
  return &static AnnounceIncomingCallNotificationDirectAction.identifier;
}

uint64_t AnnounceIncomingCallNotificationDirectAction.__allocating_init(invocation:contactStore:)( uint64_t a1, void *a2)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a2, v5);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  (*(void (**)(uint64_t))(v10 + 16))(v8 - v7);
  uint64_t v11 = specialized AnnounceIncomingCallNotificationDirectAction.__allocating_init(invocation:contactStore:)( a1,  v9,  v2,  v5,  v6);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v11;
}

unint64_t static AnnounceIncomingCallNotificationDirectAction.identifier.getter()
{
  return 0xD000000000000046LL;
}

uint64_t key path setter for AnnounceIncomingCallNotificationDirectAction.callProviderBundleId : AnnounceIncomingCallNotificationDirectAction( uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess(*a2 + 56, v7, 1LL, 0LL);
  uint64_t v5 = *(void *)(v4 + 64);
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

void AnnounceIncomingCallNotificationDirectAction.callProviderBundleId.getter(uint64_t a1, uint64_t a2)
{
}

uint64_t key path setter for AnnounceIncomingCallNotificationDirectAction.callUUID : AnnounceIncomingCallNotificationDirectAction( uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess(*a2 + 72, v7, 1LL, 0LL);
  uint64_t v5 = *(void *)(v4 + 80);
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(void *)(v4 + 80) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

void AnnounceIncomingCallNotificationDirectAction.callUUID.getter(uint64_t a1, uint64_t a2)
{
}

void key path setter for AnnounceIncomingCallNotificationDirectAction.caller : AnnounceIncomingCallNotificationDirectAction( void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess(*a2 + 88, v6, 1LL, 0LL);
  uint64_t v4 = *(void **)(v3 + 88);
  *(void *)(v3 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  id v5 = v2;
}

void *AnnounceIncomingCallNotificationDirectAction.caller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 88);
  id v4 = v3;
  return v3;
}

void key path setter for AnnounceIncomingCallNotificationDirectAction.notification : AnnounceIncomingCallNotificationDirectAction( void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess(*a2 + 96, v6, 1LL, 0LL);
  id v4 = *(void **)(v3 + 96);
  *(void *)(v3 + 96) = v2;
  id v5 = v2;
}

id AnnounceIncomingCallNotificationDirectAction.notification.getter(uint64_t a1, uint64_t a2)
{
  return *(id *)(v2 + 96);
}

uint64_t key path setter for AnnounceIncomingCallNotificationDirectAction.callCapability : AnnounceIncomingCallNotificationDirectAction( uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess(*a2 + 104, v5, 1LL, 0LL);
  *(void *)(v3 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  return result;
}

uint64_t AnnounceIncomingCallNotificationDirectAction.callCapability.getter(uint64_t a1, uint64_t a2)
{
  return *(void *)(v2 + 104);
}

void AnnounceIncomingCallNotificationDirectAction.__allocating_init(appBundleId:notification:contactStore:)()
{
}

void AnnounceIncomingCallNotificationDirectAction.init(appBundleId:notification:contactStore:)()
{
}

void AnnounceIncomingCallNotificationDirectAction.callRecord.getter()
{
  uint64_t v3 = v2 - v1;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v0 + 152LL))();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v10 = OUTLINED_FUNCTION_29_1(v3, v8, v9, v7);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v0 + 176LL))(v10);
  uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v0 + 224LL))();
  id v13 = [objc_allocWithZone(NSNumber) initWithInteger:1];
  uint64_t v14 = (*(uint64_t (**)(void))(*(void *)v0 + 128LL))();
  uint64_t v16 = v15;
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for NSNumber,  &OBJC_CLASS___NSNumber_ptr);
  Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  id v18 = objc_allocWithZone(&OBJC_CLASS___INCallRecord);
  id v19 = @nonobjc INCallRecord.init(__identifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)( v4,  v6,  v3,  v11,  6LL,  v12,  0LL,  0LL,  3LL,  v13,  0LL,  0LL,  v14,  v16,  isa);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = OUTLINED_FUNCTION_15_1();
  uint64_t v21 = (os_log_s *)__swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  id v22 = v19;
  Logger.logObject.getter(v22);
  os_log_type_t v23 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v21, v23))
  {
    uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v25 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v24 = 138412290;
    id v27 = v22;
    id v26 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v24 + 4);
    *uint64_t v25 = v22;

    _os_log_impl( &dword_0,  v21,  v23,  "#AnnounceIncomingCallNotificationDirectAction: Call Notification INCallRecord to announce = %@.",  v24,  0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v25, 1LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v25);
    OUTLINED_FUNCTION_0_2((uint64_t)v24);
  }

  else
  {

    uint64_t v21 = (os_log_s *)v22;
  }

  OUTLINED_FUNCTION_7_5();
}

void AnnounceIncomingCallNotificationDirectAction.makeINPerson(contact:)(void *a1)
{
  uint64_t v6 = v5 - v4;
  if (a1)
  {
    id v7 = a1;
    uint64_t v8 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter( v7,  (SEL *)&selRef_cnContactIdentifier);
    if (!v9) {
      goto LABEL_4;
    }
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    uint64_t v12 = v1[5];
    uint64_t v13 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v12);
    uint64_t v14 = v10;
    os_log_type_t v2 = OS_LOG_TYPE_DEFAULT;
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v14, v11, v12, v13);
    OUTLINED_FUNCTION_13_1();
    if (v40)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v41 = OUTLINED_FUNCTION_15_1();
      uint64_t v42 = (os_log_s *)__swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v42);
      os_log_type_t v43 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v43))
      {
        uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl( &dword_0,  v42,  OS_LOG_TYPE_DEFAULT,  "#AnnounceIncomingCallNotificationDirectAction: Make INPerson in CNContactStore.",  v44,  2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v44);
      }
    }

    else
    {
LABEL_4:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v15 = OUTLINED_FUNCTION_15_1();
      uint64_t v16 = (os_log_s *)__swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v16);
      os_log_type_t v17 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v17))
      {
        id v18 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)id v18 = 0;
        _os_log_impl( &dword_0,  v16,  v2,  "#AnnounceIncomingCallNotificationDirectAction: Make INPerson with custom identifier.",  v18,  2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v18);
      }

      id v19 = [v7 handle];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      uint64_t v22 = v21;

      id v23 = [v7 handleType];
      id v24 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
      id v25 = @nonobjc INPersonHandle.init(value:type:)(v20, v22, (uint64_t)v23);
      uint64_t v26 = type metadata accessor for PersonNameComponents(0LL);
      uint64_t v29 = OUTLINED_FUNCTION_29_1(v6, v27, v28, v26);
      uint64_t v30 = OUTLINED_FUNCTION_16_56(v29, (SEL *)&selRef_displayName);
      uint64_t v32 = v31;
      uint64_t v33 = OUTLINED_FUNCTION_16_56(v30, (SEL *)&selRef_cnContactIdentifier);
      uint64_t v35 = v34;
      uint64_t v36 = OUTLINED_FUNCTION_16_56(v33, (SEL *)&selRef_customIdentifier);
      uint64_t v38 = v37;
      id v39 = objc_allocWithZone(&OBJC_CLASS___INPerson);
      @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)( v25,  v6,  v30,  v32,  0LL,  v33,  v35,  v36,  v38);
    }
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t AnnounceIncomingCallNotificationDirectAction.deinit()
{
  return v0;
}

uint64_t AnnounceIncomingCallNotificationDirectAction.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 112LL, 7LL);
}

id @nonobjc INCallRecord.init(__identifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v19 = type metadata accessor for Date(0LL);
  Class isa = 0LL;
  if (__swift_getEnumTagSinglePayload(a3, 1LL, v19) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(a3, v19);
  }

  if (a12)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v21 = 0LL;
  }

  if (a14)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v22 = 0LL;
  }

  id v23 = [v25 initWithIdentifier:v18 dateCreated:isa caller:a4 callRecordType:a5 callCapability:a6 callDuration:a7 unseen:a8 preferredCallProvider:a9  numberOfCalls:a10 providerId:v21 providerBundleId:v22 isCallerIdBlocked:a15];

  return v23;
}

id @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v16 = type metadata accessor for PersonNameComponents(0LL);
  Class isa = 0LL;
  if (__swift_getEnumTagSinglePayload(a2, 1LL, v16) != 1)
  {
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(a2, v16);
  }

  if (a4)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v18 = 0LL;
  }

  if (!a7)
  {
    NSString v19 = 0LL;
    if (a9) {
      goto LABEL_8;
    }
LABEL_10:
    NSString v20 = 0LL;
    goto LABEL_11;
  }

  NSString v19 = String._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_13_1();
  if (!a9) {
    goto LABEL_10;
  }
LABEL_8:
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_11:
  id v21 = [v10 initWithPersonHandle:a1 nameComponents:isa displayName:v18 image:a5 contactIdentifier:v19 customIdentifier:v20];

  return v21;
}

uint64_t specialized AnnounceIncomingCallNotificationDirectAction.__allocating_init(invocation:contactStore:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v56[3] = a4;
  v56[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v56);
  uint64_t v10 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32LL))( boxed_opaque_existential_1,  a2,  a4);
  uint64_t v11 = Parse.DirectInvocation.userData.getter(v10);
  if (!v11)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    id v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_24;
    }
    id v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v23 = 0;
    id v24 = "#AnnounceIncomingCallNotificationDirectAction: No userData.";
LABEL_23:
    _os_log_impl(&dword_0, v21, v22, v24, v23, 2u);
    swift_slowDealloc(v23, -1LL, -1LL);
LABEL_24:

    __swift_destroy_boxed_opaque_existential_1(v56);
    uint64_t v29 = type metadata accessor for Parse.DirectInvocation(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8LL))(a1, v29);
    return 0LL;
  }

  uint64_t v12 = v11;
  specialized Dictionary.subscript.getter(0x6C646E7542707061LL, 0xEB00000000644965LL, v11, v52);
  if (!v53)
  {
    swift_bridgeObjectRelease();
    outlined destroy of Any?((uint64_t)v52);
LABEL_13:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v25 = type metadata accessor for Logger(0LL);
    uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    id v21 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_24;
    }
    id v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v23 = 0;
    id v24 = "#AnnounceIncomingCallNotificationDirectAction: No App bundleId.";
    goto LABEL_23;
  }

  if ((swift_dynamicCast(&v54, v52, &type metadata for Any[1]) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }

  uint64_t v14 = v54;
  unint64_t v13 = v55;
  specialized Dictionary.subscript.getter(0x6163696669746F6ELL, 0xEC0000006E6F6974LL, v12, v52);
  swift_bridgeObjectRelease();
  if (!v53)
  {
    swift_bridgeObjectRelease();
    outlined destroy of Any?((uint64_t)v52);
LABEL_19:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    id v21 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_24;
    }
    id v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v23 = 0;
    id v24 = "#AnnounceIncomingCallNotificationDirectAction: No notification data in UserData.";
    goto LABEL_23;
  }

  if ((swift_dynamicCast(&v54, v52, &type metadata for Any[1]) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }

  uint64_t v15 = v54;
  unint64_t v16 = v55;
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for NSKeyedUnarchiver,  &OBJC_CLASS___NSKeyedUnarchiver_ptr);
  uint64_t v17 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for UNNotification,  &OBJC_CLASS___UNNotification_ptr);
  NSString v18 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v17, v15, v16, v17);
  uint64_t v32 = v18;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v42 = type metadata accessor for Logger(0LL);
    uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)static Logger.siriPhone);
    id v21 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl( &dword_0,  v21,  v44,  "#AnnounceIncomingCallNotificationDirectAction: No notification in archived data.",  v45,  2u);
      swift_slowDealloc(v45, -1LL, -1LL);
    }

    outlined consume of Data._Representation(v15, v16);
    goto LABEL_24;
  }

  unint64_t v49 = v16;
  uint64_t v33 = one-time initialization token for siriPhone;
  id v34 = v18;
  if (v33 != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v35 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
  id v36 = v34;
  swift_bridgeObjectRetain_n(v13, 2LL);
  id v50 = v36;
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v50);
  os_log_type_t v39 = static os_log_type_t.debug.getter(v37, v38);
  if (os_log_type_enabled(v37, v39))
  {
    uint64_t v40 = swift_slowAlloc(22LL, -1LL);
    uint64_t v47 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    v52[0] = v48;
    *(_DWORD *)uint64_t v40 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v13, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v40 + 4);
    swift_bridgeObjectRelease_n(v13, 3LL);
    *(_WORD *)(v40 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2112;
    uint64_t v54 = (uint64_t)v50;
    uint64_t v51 = v15;
    id v41 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v40 + 14);
    *uint64_t v47 = v32;

    uint64_t v15 = v51;
    _os_log_impl( &dword_0,  v37,  v39,  "#AnnounceIncomingCallNotificationDirectAction: initialized with bundleID: %s and notification %@.",  (uint8_t *)v40,  0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v47, 1LL);
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_arrayDestroy(v48, 1LL);
    swift_slowDealloc(v48, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v13, 2LL);
  }

  outlined init with copy of SignalProviding((uint64_t)v56, (uint64_t)v52);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, unint64_t, id, uint64_t *))(a3 + 248))(v14, v13, v50, v52);
  outlined consume of Data._Representation(v15, v49);

  __swift_destroy_boxed_opaque_existential_1(v56);
  uint64_t v46 = type metadata accessor for Parse.DirectInvocation(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8LL))(a1, v46);
  return v30;
}

void *specialized AnnounceIncomingCallNotificationDirectAction.init(appBundleId:notification:contactStore:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  v38[3] = a6;
  v38[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32LL))(boxed_opaque_existential_1, a4, a6);
  a5[11] = 0LL;
  a5[7] = a1;
  a5[8] = a2;
  id v14 = [a3 request];
  id v15 = [v14 identifier];

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  a5[9] = v16;
  a5[10] = v18;
  a5[12] = a3;
  outlined init with copy of SignalProviding((uint64_t)v38, (uint64_t)(a5 + 2));
  id v19 = a3;
  id v20 = [v19 request];
  id v21 = [v20 content];

  id v22 = [v21 communicationContext];
  if (!v22)
  {
    id v28 = 0LL;
    a5[13] = 1LL;
LABEL_13:
    uint64_t v29 = (*(uint64_t (**)(id))(*a5 + 264LL))(v28);

    goto LABEL_14;
  }

  id v23 = (char *)[v22 capabilities];
  uint64_t v24 = 1LL;
  if (v23 == (_BYTE *)&dword_0 + 1) {
    uint64_t v24 = 2LL;
  }
  a5[13] = v24;
  id v25 = [v22 sender];
  if (!v25)
  {
    id v30 = [v22 recipients];
    uint64_t v31 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for _UNNotificationContact,  &OBJC_CLASS____UNNotificationContact_ptr);
    uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

    if ((unint64_t)v32 >> 62)
    {
      if (v32 < 0) {
        uint64_t v36 = v32;
      }
      else {
        uint64_t v36 = v32 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      id v28 = (id)_CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease();
      if (!v28) {
        goto LABEL_12;
      }
    }

    else
    {
      id v28 = *(id *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFF8LL));
      if (!v28)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }

    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v32 & 0xC000000000000001LL) == 0, v32);
    if ((v32 & 0xC000000000000001LL) != 0) {
      id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v32);
    }
    else {
      id v33 = *(id *)(v32 + 32);
    }
    id v28 = v33;
    goto LABEL_12;
  }

  id v26 = v25;
  uint64_t v27 = *(uint64_t (**)(id))(*a5 + 264LL);
  id v28 = v25;
  uint64_t v29 = v27(v26);

LABEL_14:
  __swift_destroy_boxed_opaque_existential_1(v38);
  swift_beginAccess(a5 + 11, &v37, 1LL, 0LL);
  id v34 = (void *)a5[11];
  a5[11] = v29;

  return a5;
}

void sub_293770()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 128))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_293798()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 152))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2937C0()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 176))();
  OUTLINED_FUNCTION_2();
}

void sub_2937E8()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 200))();
  OUTLINED_FUNCTION_2();
}

void sub_293810()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 224))();
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for AnnounceIncomingCallNotificationDirectAction()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin44AnnounceIncomingCallNotificationDirectAction);
}

uint64_t OUTLINED_FUNCTION_0_99(uint64_t a1, uint64_t a2, ...)
{
  return swift_beginAccess(a1, va, 0LL, 0LL);
}

void *OUTLINED_FUNCTION_3_112()
{
  return specialized AnnounceIncomingCallNotificationDirectAction.init(appBundleId:notification:contactStore:)( v3,  v2,  v1,  v6,  v0,  v4,  v5);
}

uint64_t OUTLINED_FUNCTION_16_56(uint64_t a1, SEL *a2)
{
  return outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v2, a2);
}

void AnnounceVoicemailFlow.__allocating_init(directAction:sharedGlobals:eventStore:contactStore:)()
{
  uint64_t v21 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = (void *)v5;
  uint64_t v8 = (void *)v7;
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t v11 = *(void *)(v5 + 32);
  OUTLINED_FUNCTION_16_57(v9, v7, v5);
  OUTLINED_FUNCTION_65_5();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_98(v13, v14, v19);
  uint64_t v16 = v4[3];
  uint64_t v15 = v4[4];
  OUTLINED_FUNCTION_8_79();
  OUTLINED_FUNCTION_13_24();
  __chkstk_darwin();
  OUTLINED_FUNCTION_1_31(v17, v18, v20);
  specialized AnnounceVoicemailFlow.__allocating_init(directAction:sharedGlobals:eventStore:contactStore:)( v10,  v8,  v1,  v2,  v21,  v12,  v16,  v11,  v15);
  __swift_destroy_boxed_opaque_existential_1(v4);
  __swift_destroy_boxed_opaque_existential_1(v6);
  OUTLINED_FUNCTION_7_5();
}

void key path setter for AnnounceVoicemailFlow.state : AnnounceVoicemailFlow(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *a2;
  char v4 = *(_BYTE *)(a1 + 8);
  swift_beginAccess(*a2 + 16, v7, 1LL, 0LL);
  uint64_t v5 = *(void **)(v3 + 16);
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v2;
  char v6 = *(_BYTE *)(v3 + 24);
  *(_BYTE *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v4;
  outlined copy of AnnounceVoicemailFlow.State(v2, v4);
  outlined consume of AnnounceVoicemailFlow.State(v5, v6);
}

void *AnnounceVoicemailFlow.state.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  outlined copy of AnnounceVoicemailFlow.State(v1, *(_BYTE *)(v0 + 24));
  return v1;
}

void AnnounceVoicemailFlow.__allocating_init(state:eventStore:sharedGlobals:contactStore:)()
{
  uint64_t v2 = v0;
  char v4 = v3;
  id v22 = v5;
  uint64_t v7 = v6;
  HIDWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 21) = v8;
  uint64_t v10 = v9;
  uint64_t v11 = OUTLINED_FUNCTION_8_2(v2, 152LL);
  uint64_t v13 = v7[3];
  uint64_t v12 = v7[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v13);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v16 + 16))(v15);
  uint64_t v18 = v4[3];
  uint64_t v17 = v4[4];
  OUTLINED_FUNCTION_8_79();
  OUTLINED_FUNCTION_13_24();
  __chkstk_darwin();
  OUTLINED_FUNCTION_1_31(v19, v20, v21);
  specialized AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)( v10,  SBYTE4(v21),  (uint64_t)v15,  v22,  v1,  v11,  v13,  v18,  v12,  v17);
  __swift_destroy_boxed_opaque_existential_1(v4);
  __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_7_5();
}

void AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)()
{
  uint64_t v20 = v3;
  uint64_t v23 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = (void *)v6;
  char v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v6 + 24);
  uint64_t v12 = *(void *)(v6 + 32);
  OUTLINED_FUNCTION_16_57(v10, v8, v6);
  OUTLINED_FUNCTION_65_5();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_98(v14, v15, v20);
  uint64_t v17 = v5[3];
  uint64_t v16 = v5[4];
  OUTLINED_FUNCTION_8_79();
  OUTLINED_FUNCTION_13_24();
  __chkstk_darwin();
  OUTLINED_FUNCTION_1_31(v18, v19, v21);
  specialized AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)( v11,  v9,  v1,  v22,  v2,  v23,  v13,  v17,  v12,  v16);
  __swift_destroy_boxed_opaque_existential_1(v5);
  __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_7_5();
}

uint64_t AnnounceVoicemailFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnounceVoicemailFlow();
  lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow( &lazy protocol witness table cache variable for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for AnnounceVoicemailFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t AnnounceVoicemailFlow.execute()(uint64_t a1)
{
  v2[56] = a1;
  v2[57] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[58] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for Date(0LL);
  v2[59] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[60] = v5;
  v2[61] = OUTLINED_FUNCTION_23(v5);
  return swift_task_switch(AnnounceVoicemailFlow.execute(), 0LL, 0LL);
}

void AnnounceVoicemailFlow.execute()()
{
  __asm { BR              X10 }

uint64_t sub_293CE4()
{
  uint64_t v3 = *(void *)(v1 + 480);
  uint64_t v2 = *(void *)(v1 + 488);
  uint64_t v4 = *(void *)(v1 + 472);
  uint64_t v25 = *(void *)(v1 + 464);
  uint64_t v5 = *(void **)(v1 + 456);
  uint64_t v7 = v5[7];
  uint64_t v6 = v5[8];
  OUTLINED_FUNCTION_19_61(v5 + 4);
  uint64_t v8 = static Date.distantFuture.getter();
  double v9 = Date.timeIntervalSince1970.getter(v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  *(void *)(v1 + 38__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(void *)(v1 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(double *)(v1 + 400) = v9;
  unint64_t v10 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  SiriPhoneDefaultsProviding.getOrDefault<A>(key:defaultValue:)( 0LL,  v1 + 384,  v7,  (uint64_t)&type metadata for AnnounceVoicemailHintHistory,  v6,  v10,  v1 + 408);
  uint64_t v11 = *(void *)(v1 + 408);
  uint64_t v12 = *(void *)(v1 + 416);
  double v13 = *(double *)(v1 + 424);
  uint64_t v24 = v0[6];
  uint64_t v14 = (void *)(*(uint64_t (**)(void *))(*v0 + 112LL))(v5 + 14);
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v5 + 9), v1 + 304);
  BurstNotificationSearchManager.init(sharedGlobals:)((void *)(v1 + 304), (void *)(v1 + 96));
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v5 + 9), v1 + 264);
  uint64_t v15 = type metadata accessor for AnnounceVoicemailCATs(0LL);
  static CATOption.defaultMode.getter(v15);
  uint64_t v16 = CATWrapper.__allocating_init(options:globals:)(v25, 0LL);
  outlined init with copy of BurstNotificationSearchManager(v1 + 96, v1 + 16);
  uint64_t v17 = specialized AnnounceVoicemailReadingFlow.__allocating_init(synchronousBurstIndex:voicemail:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)( v24,  v14,  v11,  v12,  (void *)(v1 + 16),  (void *)(v1 + 264),  v16,  v13);
  outlined destroy of BurstNotificationSearchManager((void *)(v1 + 96));
  *(void *)(v1 + 440) = v17;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, double))(*v5 + 168LL))(v11, v12, v13);
  uint64_t v20 = v19;
  uint64_t v21 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4142A8, 32LL);
  *(void *)(v21 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v18;
  *(void *)(v21 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v20;
  uint64_t v22 = type metadata accessor for AnnounceVoicemailReadingFlow();
  lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow( (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailReadingFlow and conformance AnnounceVoicemailReadingFlow,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for AnnounceVoicemailReadingFlow);
  static ExecuteResponse.ongoing<A>(next:childCompletion:)( v1 + 440,  partial apply for thunk for @escaping @callee_guaranteed (@guaranteed AnnounceVoicemailReadingState) -> (),  v21,  v22);
  outlined consume of AnnounceVoicemailFlow.State(v0, 0);
  swift_release(v21);
  swift_release(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void (*AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:)( uint64_t a1, uint64_t a2, double a3))(uint64_t a1)
{
  uint64_t v7 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4142D0, 48LL);
  *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v3;
  *(void *)(v7 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(double *)(v7 + 40) = a3;
  swift_retain();
  return partial apply for closure #1 in AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:);
}

void AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:readingState:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  PhoneCallFlowDelegatePlugin::AnnounceVoicemailHintHistory v23 = AnnounceVoicemailHintHistory.makeUpdatedHistoryAfterAnnouncement(announcementCount:didReadHint:)( *(void *)a3,  *(_BYTE *)(a3 + 48));
  Swift::Int count = v23.count;
  Swift::Int hintCount = v23.hintCount;
  Swift::Double lastHintTimestamp = v23.lastHintTimestamp;
  uint64_t v9 = *(void *)(v4 + 56);
  uint64_t v10 = *(void *)(v4 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 32), v9);
  v22[0] = count;
  v22[1] = hintCount;
  *(Swift::Double *)&__int128 v22[2] = lastHintTimestamp;
  uint64_t v11 = *(void (**)(void, void *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v10 + 16);
  unint64_t v12 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  v11(0LL, v22, &type metadata for AnnounceVoicemailHintHistory, v12, v9, v10);
  uint64_t v13 = *(void *)(a3 + 8);
  if (!((unint64_t)v13 >> 62))
  {
    uint64_t v14 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_3(v4 + 16, (uint64_t)v22);
    uint64_t v19 = *(void **)(v4 + 16);
    *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
    char v20 = *(_BYTE *)(v4 + 24);
    *(_BYTE *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 3;
    goto LABEL_12;
  }

  if (v13 < 0) {
    uint64_t v21 = *(void *)(a3 + 8);
  }
  else {
    uint64_t v21 = v13 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v14) {
    goto LABEL_11;
  }
LABEL_3:
  BOOL v15 = __OFSUB__(v14, 1LL);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_14;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v16, (v13 & 0xC000000000000001LL) == 0, v13);
  if ((v13 & 0xC000000000000001LL) != 0)
  {
LABEL_14:
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v13);
    goto LABEL_6;
  }

  id v17 = *(id *)(v13 + 8 * v16 + 32);
LABEL_6:
  id v18 = v17;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_3(v4 + 16, (uint64_t)v22);
  uint64_t v19 = *(void **)(v4 + 16);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v18;
  char v20 = *(_BYTE *)(v4 + 24);
  *(_BYTE *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
LABEL_12:
  outlined consume of AnnounceVoicemailFlow.State(v19, v20);
}

uint64_t AnnounceVoicemailFlow.offerSilentPromptCompleted(lastVoicemail:response:)()
{
  void (*v36)(void *__return_ptr, uint64_t, uint64_t);
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  void v64[5];
  void v65[5];
  uint64_t v66;
  void v67[22];
  __int128 v68;
  uint64_t v69;
  ValueMetadata *v70;
  _UNKNOWN **v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  OUTLINED_FUNCTION_29_2();
  uint64_t v75 = v1;
  uint64_t v76 = v2;
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<AnnounceVoicemailPromptForValueFlowStrategy.VoicemailAnnouncementResponse>);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v58 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14((char *)&v58 - v12, v5, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v13, v8) != enum case for PromptResult.answered<A>(_:))
  {
    OUTLINED_FUNCTION_3_3(v3 + 16, (uint64_t)v67);
    uint64_t v29 = *(void **)(v3 + 16);
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
    char v30 = *(_BYTE *)(v3 + 24);
    char v31 = 3;
    goto LABEL_5;
  }

  v14(v11, (uint64_t)v13, v8);
  (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
  if ((*v11 & 1) != 0)
  {
    uint64_t v15 = *(void *)(v3 + 96);
    uint64_t v16 = *(void *)(v3 + 104);
    __swift_project_boxed_opaque_existential_1((void *)(v3 + 72), v15);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 16))(v67, v15, v16);
    id v17 = (ValueMetadata *)v67[3];
    id v18 = (_UNKNOWN **)v67[5];
    uint64_t v19 = __swift_project_boxed_opaque_existential_1(v67, v67[3]);
    uint64_t v70 = v17;
    uint64_t v71 = v18;
    char v20 = __swift_allocate_boxed_opaque_existential_1(&v68);
    (*((void (**)(void *, void *, ValueMetadata *))v17[-1].Description + 2))(v20, v19, v17);
    id v21 = [v7 identifier];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    uint64_t v24 = v23;

    uint64_t v25 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414398, 32LL);
    *(void *)(v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v22;
    *(void *)(v25 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v24;
    uint64_t v26 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4143C0, 32LL);
    *(void *)(v26 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = &async function pointer to partial apply for closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:);
    *(void *)(v26 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v25;
    uint64_t v27 = type metadata accessor for SimpleOutputFlowAsync(0LL);
    OUTLINED_FUNCTION_15_2(v27);
    uint64_t v28 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( &v68,  &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @async () -> (@out Output),  v26);
    __swift_destroy_boxed_opaque_existential_1(v67);
    v67[0] = v28;
    Flow.eraseToAnyFlow()(v27);
    swift_release(v28);
    OUTLINED_FUNCTION_3_3(v3 + 16, (uint64_t)v67);
    uint64_t v29 = (void *)OUTLINED_FUNCTION_13_82();
LABEL_5:
    *(_BYTE *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v31;
    outlined consume of AnnounceVoicemailFlow.State(v29, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }

  uint64_t v63 = v9;
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  memcpy(v67, &static PhoneCallFeatureFlags.instance, sizeof(v67));
  uint64_t v32 = type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject(v32, &v66);
  uint64_t v70 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v71 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v68 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4143E8, 192LL);
  memcpy((void *)(v68 + 16), v67, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v68, inited + 16);
  char v61 = (void *)(v3 + 72);
  uint64_t v34 = *(void *)(v3 + 96);
  uint64_t v35 = *(void *)(v3 + 104);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 72), v34);
  uint64_t v36 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v35 + 8);
  outlined retain of PhoneCallFeatureFlags(v67);
  v36(v65, v34, v35);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v65, (uint64_t)&v68);
  swift_release(inited);
  __swift_destroy_boxed_opaque_existential_1(v65);
  uint64_t v37 = objc_allocWithZone(&OBJC_CLASS___INCallRecordFilter);
  uint64_t v38 = @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:preferredCallProvider:)( 0LL,  0LL,  0LL,  0LL);
  os_log_type_t v39 = _INCallAudioRouteHeySiriAudioRoute;
  uint64_t v40 = objc_allocWithZone(&OBJC_CLASS___INStartCallIntent);
  uint64_t v62 = v38;
  id v41 = v7;
  uint64_t v42 = @nonobjc INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:)( v38,  v7,  v39,  5LL,  1LL,  0LL,  0LL,  1LL);
  uint64_t v60 = v42;
  uint64_t v43 = *(void *)(v3 + 96);
  os_log_type_t v44 = *(void *)(v3 + 104);
  uint64_t v45 = v61;
  __swift_project_boxed_opaque_existential_1(v61, v43);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v44 + 104))(v65, v43, v44);
  uint64_t v46 = v65[3];
  uint64_t v59 = v65[4];
  OUTLINED_FUNCTION_19_61(v65);
  uint64_t v47 = type metadata accessor for StartCallRCHFlowDelegate(0LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v45, (uint64_t)v64);
  uint64_t v48 = StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)(v64, 0LL);
  unint64_t v49 = v68;
  lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow( &lazy protocol witness table cache variable for type StartCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  255LL,  type metadata accessor for StartCallRCHFlowDelegate);
  SiriKitFlowFactoryProtocol.makeDelegateBasedRCHFlow<A>(delegate:app:intent:)( v48,  v49,  (uint64_t)v42,  v46,  v47,  v59,  v50);
  uint64_t v52 = v51;
  swift_release(v48);
  __swift_destroy_boxed_opaque_existential_1(v65);
  v65[0] = v52;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>,  &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  Flow.eraseToAnyFlow()(v53);
  swift_release(v49);

  uint64_t v74 = *((void *)&v68 + 1);
  outlined release of Set<String>(&v74);
  outlined init with take of String?((uint64_t)&v69, (uint64_t)v64);
  outlined release of String?((uint64_t)v64);
  int v73 = v72;
  outlined release of Set<String>(&v73);
  swift_release(v52);
  OUTLINED_FUNCTION_3_3(v3 + 16, (uint64_t)v65);
  uint64_t v54 = (void *)OUTLINED_FUNCTION_13_82();
  *(_BYTE *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v55;
  outlined consume of AnnounceVoicemailFlow.State(v54, v56);
  uint64_t v9 = v63;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:), 0LL, 0LL);
}

uint64_t closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INPlayVoicemailIntent,  &OBJC_CLASS___INPlayVoicemailIntent_ptr);
  static INPlayVoicemailIntent.makeFirstPartyHandleIntent(identifier:)();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 40LL);
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(void *)&v11[0] = v5;
  specialized Array._endMutation()(v5, v6, v7, v8);
  uint64_t v9 = *(void *)&v11[0];
  memset(v11, 0, sizeof(v11));
  uint64_t v12 = 0LL;
  v1[3] = type metadata accessor for AceOutput(0LL);
  v1[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v1);
  AceOutput.init(commands:flowActivity:)(v9, v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnnounceVoicemailFlow.deinit()
{
  return v0;
}

uint64_t AnnounceVoicemailFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 152LL, 7LL);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AnnounceVoicemailFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AnnounceVoicemailFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

id @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:preferredCallProvider:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (a1)
  {
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    v9.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }

  else
  {
    v9.super.Class isa = 0LL;
  }

  id v10 = [v5 initWithParticipants:v9.super.isa callTypes:a2 callCapability:a3 preferredCallProvider:a4];

  return v10;
}

uint64_t specialized AnnounceVoicemailFlow.__allocating_init(directAction:sharedGlobals:eventStore:contactStore:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v24[3] = a6;
  v24[4] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32LL))(boxed_opaque_existential_1, a3, a6);
  void v23[3] = a7;
  v23[4] = a9;
  id v17 = __swift_allocate_boxed_opaque_existential_1(v23);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32LL))(v17, a4, a7);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v24, (uint64_t)v22);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v21);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v23, (uint64_t)v20);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, void, _BYTE *, _BYTE *, _BYTE *))(a5 + 136))(a1, 0LL, v22, v21, v20);
  __swift_destroy_boxed_opaque_existential_1(v23);
  __swift_destroy_boxed_opaque_existential_1(v24);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v18;
}

id outlined copy of AnnounceVoicemailFlow.State(id result, char a2)
{
  if (a2 == 2) {
    return (id)swift_retain(result);
  }
  if (a2 != 1)
  {
    if (a2) {
      return result;
    }
    return (id)swift_retain(result);
  }

  return result;
}

uint64_t specialized AnnounceVoicemailFlow.init(state:eventStore:sharedGlobals:contactStore:)( uint64_t a1, char a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a6 + 56) = a7;
  *(void *)(a6 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(a6 + 32));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32LL))(boxed_opaque_existential_1, a3, a7);
  *(void *)(a6 + 136) = a8;
  *(void *)(a6 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a10;
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1((void *)(a6 + 112));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32LL))(v19, a5, a8);
  *(void *)(a6 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(_BYTE *)(a6 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  outlined init with take of AppSelectionSignalComponent(a4, a6 + 72);
  return a6;
}

uint64_t type metadata accessor for AnnounceVoicemailFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin21AnnounceVoicemailFlow);
}

void outlined consume of AnnounceVoicemailFlow.State(void *a1, char a2)
{
  if (a2 == 2)
  {
LABEL_4:
    swift_release(a1);
    return;
  }

  if (a2 != 1)
  {
    if (a2) {
      return;
    }
    goto LABEL_4;
  }
}

uint64_t sub_294D18()
{
  uint64_t v1 = OUTLINED_FUNCTION_34_3();
  return swift_deallocObject(v1, v2, v3);
}

void partial apply for closure #1 in AnnounceVoicemailFlow.offerSilentPromptCompleted(lastVoicemail:)()
{
}

uint64_t outlined init with copy of BurstNotificationSearchManager(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t specialized AnnounceVoicemailReadingFlow.__allocating_init(synchronousBurstIndex:voicemail:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *__src, void *a6, uint64_t a7, double a8)
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v16 = swift_allocObject(v15, 40LL, 7LL);
  *(_OWORD *)(v16 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  *(void *)(v16 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  v26[0] = v16;
  specialized Array._endMutation()(v16, v17, v18, v19);
  uint64_t v20 = v26[0];
  id v21 = a2;
  static AnnounceVoicemailReadingState.makeInitialState(synchronousBurstIndex:voicemail:)(a1, v21, (uint64_t)v29);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a6, (uint64_t)v27);
  uint64_t v22 = type metadata accessor for AnnounceVoicemailReadingFlow();
  uint64_t v23 = swift_allocObject(v22, 200LL, 7LL);
  outlined init with copy of BurstNotificationSearchManager((uint64_t)__dst, (uint64_t)v26);
  uint64_t v24 = specialized AnnounceVoicemailReadingFlow.init(state:readingState:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)( v20,  (uint64_t)v29,  a3,  a4,  v26,  v27,  a7,  v23,  a8);

  __swift_destroy_boxed_opaque_existential_1(a6);
  outlined destroy of BurstNotificationSearchManager(__dst);
  return v24;
}

void *outlined destroy of BurstNotificationSearchManager(void *a1)
{
  return a1;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed AnnounceVoicemailReadingState) -> ()( uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  __int128 v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(_BYTE *)(a1 + 48);
  return v2(v5);
}

uint64_t sub_294F80()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void partial apply for closure #1 in AnnounceVoicemailFlow.readingFlowCompleted(previousHintHistory:)( uint64_t a1)
{
}

void sub_294FD8(uint64_t a1@<X8>)
{
  *(void *)a1 = OUTLINED_FUNCTION_8_8();
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t initializeBufferWithCopyOfBuffer for AnnounceVoicemailFlow.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  outlined copy of AnnounceVoicemailFlow.State(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  return a1;
}

void destroy for AnnounceVoicemailFlow.State(uint64_t a1)
{
}

uint64_t assignWithCopy for AnnounceVoicemailFlow.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  outlined copy of AnnounceVoicemailFlow.State(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  outlined consume of AnnounceVoicemailFlow.State(v5, v6);
  return a1;
}

uint64_t assignWithTake for AnnounceVoicemailFlow.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  outlined consume of AnnounceVoicemailFlow.State(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnounceVoicemailFlow.State(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailFlow.State( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFD) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = -(char)a2;
    }
  }

  return result;
}

uint64_t getEnumTag for AnnounceVoicemailFlow.State(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t destructiveInjectEnumTag for AnnounceVoicemailFlow.State(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 3;
  }

  *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailFlow.State()
{
  return &type metadata for AnnounceVoicemailFlow.State;
}

uint64_t sub_2951A8()
{
  uint64_t v0 = OUTLINED_FUNCTION_34_3();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t partial apply for closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43DF64);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  uint64_t v2 = OUTLINED_FUNCTION_22_55();
  return closure #1 in AnnounceVoicemailFlow.makePlayVoicemailOutput(identifier:)(v2, v3, v4);
}

uint64_t sub_29521C()
{
  uint64_t v1 = OUTLINED_FUNCTION_34_3();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @async () -> (@out Output)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43DF74);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v2 = OUTLINED_FUNCTION_22_55();
  return v3(v2);
}

uint64_t sub_29529C()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

void lazy protocol witness table accessor for type AnnounceVoicemailFlow and conformance AnnounceVoicemailFlow( unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (!*a1)
  {
    uint64_t v4 = a3(a2);
    atomic_store(OUTLINED_FUNCTION_110(v4), a1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t specialized AnnounceVoicemailReadingFlow.init(state:readingState:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, __int128 *a6, uint64_t a7, uint64_t a8, double a9)
{
  *(void *)(a8 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for BurstNotificationSearchManager;
  *(void *)(a8 + 136) = &protocol witness table for BurstNotificationSearchManager;
  uint64_t v18 = swift_allocObject(&unk_414410, 96LL, 7LL);
  *(void *)(a8 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v18;
  memcpy((void *)(v18 + 16), a5, 0x50uLL);
  __int128 v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a8 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(_OWORD *)a2;
  *(void *)(a8 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(void *)(a8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(_OWORD *)(a8 + 40) = v19;
  *(_OWORD *)(a8 + 56) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a8 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(a2 + 48);
  *(void *)(a8 + 80) = a3;
  *(void *)(a8 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a4;
  *(double *)(a8 + 96) = a9;
  *(void *)(a8 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a7;
  outlined init with take of AppSelectionSignalComponent(a6, a8 + 152);
  return a8;
}

uint64_t sub_295450()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_8_79()
{
  return __swift_mutable_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_13_82()
{
  uint64_t result = *(void *)(v1 + 16);
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_57(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_mutable_project_boxed_opaque_existential_1(a3, v3);
}

void *OUTLINED_FUNCTION_19_61(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

void OUTLINED_FUNCTION_20_61()
{
}

uint64_t OUTLINED_FUNCTION_22_55()
{
  return v0;
}

uint64_t ContactResolverConfigHashable.isFaceTime.getter()
{
  uint64_t v19 = v1;
  uint64_t v20 = v2;
  uint64_t v3 = v0;
  OUTLINED_FUNCTION_7_101();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  OUTLINED_FUNCTION_12_84();
  __chkstk_darwin();
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = __chkstk_darwin();
  uint64_t v11 = &v18[-v10];
  uint64_t v12 = ContactResolverConfig.actionType.getter(v9);
  OUTLINED_FUNCTION_22_56(v12, enum case for ContactActionType.facetimeAudio(_:));
  char v13 = OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_8_80((uint64_t)v8);
  OUTLINED_FUNCTION_8_80((uint64_t)v11);
  uint64_t v14 = outlined init with copy of ContactResolverConfigHashable(v3, v6);
  if ((v13 & 1) != 0)
  {
    char v15 = 1;
  }

  else
  {
    uint64_t v16 = ContactResolverConfig.actionType.getter(v14);
    OUTLINED_FUNCTION_22_56(v16, enum case for ContactActionType.facetimeVideo(_:));
    char v15 = OUTLINED_FUNCTION_21_53();
    OUTLINED_FUNCTION_8_80((uint64_t)v8);
    OUTLINED_FUNCTION_8_80((uint64_t)v11);
  }

  outlined destroy of ContactResolverConfigHashable(v6);
  return v15 & 1;
}

void ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)()
{
  uint64_t v90 = v0;
  uint64_t v72 = v1;
  uint64_t v3 = v2;
  uint64_t v92 = v5;
  uint64_t v93 = v4;
  uint64_t v7 = v6;
  uint64_t v91 = v8;
  uint64_t v10 = v9;
  uint64_t v88 = type metadata accessor for RecommenderType(0LL);
  uint64_t v86 = *(void *)(v88 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v87 = v11;
  uint64_t v12 = type metadata accessor for SearchSuggestedContacts(0LL);
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = v12;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v81 = v13;
  type metadata accessor for ContactResolverDomain(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v77 = v14;
  uint64_t v15 = OUTLINED_FUNCTION_94_4();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v76 = v17;
  uint64_t v84 = OUTLINED_FUNCTION_13_83();
  uint64_t v82 = *(void *)(v84 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v80 = v18;
  uint64_t v74 = OUTLINED_FUNCTION_12_84();
  uint64_t v71 = *(void *)(v74 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v73 = v19;
  __chkstk_darwin();
  id v21 = (char *)&v63 - v20;
  __chkstk_darwin();
  uint64_t v69 = (char *)&v63 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactHandleTypePreference?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v67 = v23;
  __chkstk_darwin();
  uint64_t v25 = (char *)&v63 - v24;
  uint64_t ObjectType = swift_getObjectType(v3);
  id v27 = v3;
  uint64_t v28 = outlined bridged method (ob) of @objc INIntent.intentId.getter(v27);
  if (v29) {
    uint64_t v30 = v28;
  }
  else {
    uint64_t v30 = 0LL;
  }
  if (v29) {
    unint64_t v31 = v29;
  }
  else {
    unint64_t v31 = 0xE000000000000000LL;
  }
  uint64_t v66 = v30;
  *uint64_t v10 = v30;
  v10[1] = v31;
  void v10[2] = v91;
  v10[3] = v7;
  uint64_t v32 = OUTLINED_FUNCTION_7_101();
  id v33 = (char *)v10 + *(int *)(v32 + 24);
  uint64_t v83 = v16;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v85 = v15;
  v34(v33, v93, v15);
  uint64_t v70 = v32;
  uint64_t v35 = *(int *)(v32 + 28);
  uint64_t v75 = v10;
  *(uint64_t *)((char *)v10 + v3__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v92;
  unint64_t v65 = v31;
  swift_bridgeObjectRetain();
  uint64_t v89 = v7;
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_6_3();
  uint64_t v36 = (uint64_t)v25;
  uint64_t v37 = v72;
  static ContactResolverConfigHashable.chooseHandleTypePreference(skIntent:)((uint64_t)v27, v72, (uint64_t)v25);
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)(v37 + 16) + 8LL))(ObjectType);
  id v68 = v27;
  if (v38 == 2)
  {
    uint64_t v39 = swift_getObjectType(v27);
    uint64_t v40 = dynamic_cast_existential_1_conditional((uint64_t)v27, v39, (uint64_t)&protocol descriptor for CallingIntent);
    uint64_t v42 = (unsigned int *)&enum case for ContactActionType.facetimeVideo(_:);
    if (v40)
    {
      uint64_t v43 = v41;
      uint64_t v44 = swift_getObjectType(v40);
      uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 24);
      id v46 = v27;
      uint64_t v47 = v45(v44, v43);

      if (v47 == 1) {
        uint64_t v42 = (unsigned int *)&enum case for ContactActionType.facetimeAudio(_:);
      }
    }
  }

  else
  {
    uint64_t v42 = (unsigned int *)&enum case for ContactActionType.phoneCall(_:);
  }

  uint64_t v48 = v71;
  uint64_t v49 = v74;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v21, *v42, v74);
  id v50 = v69;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v69, v21, v49);
  uint64_t v51 = v76;
  uint64_t v52 = v93;
  uint64_t v53 = v85;
  uint64_t v54 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v76, v93, v85);
  uint64_t v55 = v77;
  static ContactResolverDomain.phone.getter(v54);
  uint64_t v56 = v36;
  uint64_t v64 = v36;
  uint64_t v57 = v67;
  outlined init with copy of ContactHandleTypePreference?(v56, v67);
  uint64_t v58 = v81;
  (*(void (**)(uint64_t, void, uint64_t))(v78 + 104))( v81,  enum case for SearchSuggestedContacts.ifOnlyMatchIsSuggested(_:),  v79);
  uint64_t v59 = v87;
  (*(void (**)(uint64_t, void, uint64_t))(v86 + 104))( v87,  enum case for RecommenderType.mlRecommender(_:),  v88);
  uint64_t v62 = v59;
  uint64_t v60 = v80;
  ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:)( v66,  v65,  v91,  v89,  v51,  1LL,  1LL,  v92,  v55,  v58,  v57,  v62,  0LL,  0LL);
  uint64_t v61 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v73, v50, v49);
  ContactResolverConfig.actionType.setter(v61);

  __swift_destroy_boxed_opaque_existential_1(v90);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v52, v53);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
  outlined destroy of ContactHandleTypePreference?(v64);
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))((char *)v75 + *(int *)(v70 + 32), v60, v84);
  OUTLINED_FUNCTION_7_5();
}

uint64_t ContactResolverConfigHashable.intentTypeName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_6_3();
  return v1;
}

uint64_t ContactResolverConfigHashable.config.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(OUTLINED_FUNCTION_7_101() + 32);
  uint64_t v4 = OUTLINED_FUNCTION_13_83();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t ContactResolverConfigHashable.description.getter()
{
  uint64_t v23 = v0;
  uint64_t v24 = v1;
  uint64_t v2 = OUTLINED_FUNCTION_12_84();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  v20[0] = 0LL;
  v20[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(115LL);
  uint64_t v21 = 0LL;
  unint64_t v22 = 0xE000000000000000LL;
  v25._uint64_t countAndFlagsBits = 0xD000000000000028LL;
  v25._object = (void *)0x8000000000351120LL;
  OUTLINED_FUNCTION_5_61(v25);
  Hasher.init(_seed:)(v20, 0LL);
  ContactResolverConfigHashable.hash(into:)();
  v20[0] = Hasher._finalize()();
  v26._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  OUTLINED_FUNCTION_5_61(v26);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x746E65746E69202CLL;
  v7._object = (void *)0xEB000000003D6449LL;
  String.append(_:)(v7);
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_17_51();
  OUTLINED_FUNCTION_23_5();
  v8._object = (void *)0x8000000000351150LL;
  v8._uint64_t countAndFlagsBits = 0xD000000000000011LL;
  String.append(_:)(v8);
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_17_51();
  OUTLINED_FUNCTION_23_5();
  v9._uint64_t countAndFlagsBits = 0x656C61636F6C202CLL;
  v9._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v9);
  OUTLINED_FUNCTION_7_101();
  uint64_t v10 = OUTLINED_FUNCTION_94_4();
  uint64_t v11 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type Locale and conformance Locale,  (uint64_t (*)(uint64_t))&type metadata accessor for Locale,  (uint64_t)&protocol conformance descriptor for Locale);
  v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v10, v11);
  OUTLINED_FUNCTION_5_61(v27);
  OUTLINED_FUNCTION_23_5();
  v12._uint64_t countAndFlagsBits = 0x656C646E7562202CLL;
  v12._object = (void *)0xEC0000003D736449LL;
  String.append(_:)(v12);
  uint64_t v13 = OUTLINED_FUNCTION_128();
  v14._uint64_t countAndFlagsBits = Array.description.getter(v13, &type metadata for String);
  String.append(_:)(v14);
  OUTLINED_FUNCTION_23_5();
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x6E6F69746361202CLL;
  v15._object = (void *)0xED00003D65707954LL;
  String.append(_:)(v15);
  ContactResolverConfig.actionType.getter(v16);
  uint64_t v17 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type ContactActionType and conformance ContactActionType,  (uint64_t (*)(uint64_t))&type metadata accessor for ContactActionType,  (uint64_t)&protocol conformance descriptor for ContactActionType);
  v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v17);
  OUTLINED_FUNCTION_5_61(v28);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  v18._uint64_t countAndFlagsBits = 41LL;
  v18._object = (void *)0xE100000000000000LL;
  String.append(_:)(v18);
  return v21;
}

void ContactResolverConfigHashable.hashValue.getter(uint64_t a1)
{
}

uint64_t static ContactResolverConfigHashable.chooseHandleTypePreference(skIntent:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(a2 + 16) + 8LL))(ObjectType) == 2)
  {
    uint64_t v6 = 1LL;
  }

  else
  {
    static ContactHandleTypePreference.requirePhone.getter();
    uint64_t v6 = 0LL;
  }

  uint64_t v7 = type metadata accessor for ContactHandleTypePreference(0LL);
  return __swift_storeEnumTagSinglePayload(a3, v6, 1LL, v7);
}

BOOL static ContactResolverConfigHashable.== infix(_:_:)(uint64_t a1)
{
  Swift::Int v1 = OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_13_3(v1);
  ContactResolverConfigHashable.hash(into:)();
  return v1 == OUTLINED_FUNCTION_11_17();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ContactResolverConfigHashable( uint64_t a1)
{
}

uint64_t outlined bridged method (ob) of @objc INIntent.intentId.getter(void *a1)
{
  id v2 = [a1 intentId];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t base witness table accessor for Equatable in ContactResolverConfigHashable()
{
  return lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type ContactResolverConfigHashable and conformance ContactResolverConfigHashable,  type metadata accessor for ContactResolverConfigHashable,  (uint64_t)&protocol conformance descriptor for ContactResolverConfigHashable);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactResolverConfigHashable( uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v21);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Locale(0LL);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v16;
    uint64_t v17 = (char *)v4 + v15;
    Swift::String v18 = (char *)a2 + v15;
    uint64_t v19 = type metadata accessor for ContactResolverConfig(0LL);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL);
    swift_bridgeObjectRetain(v16);
    v20(v17, v18, v19);
  }

  return v4;
}

void *assignWithCopy for ContactResolverConfigHashable(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Locale(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void *)((char *)a2 + v14);
  uint64_t v16 = *(void *)((char *)a1 + v14);
  *(void *)((char *)a1 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  uint64_t v17 = a3[8];
  Swift::String v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for ContactResolverConfig(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24LL))(v18, v19, v20);
  return a1;
}

_OWORD *initializeWithTake for ContactResolverConfigHashable(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Locale(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for ContactResolverConfig(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32LL))(v12, v13, v14);
  return a1;
}

void *assignWithTake for ContactResolverConfigHashable(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[3];
  uint64_t v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Locale(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40LL))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void *)((char *)a1 + v14);
  *(void *)((char *)a1 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)((char *)a2 + v14);
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  Swift::String v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for ContactResolverConfig(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40LL))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactResolverConfigHashable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2962F8);
}

uint64_t sub_2962F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_94_4();
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == (_DWORD)a2)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(int *)(a3 + 24);
    }

    else
    {
      uint64_t v9 = OUTLINED_FUNCTION_13_83();
      uint64_t v10 = *(int *)(a3 + 32);
    }

    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }

uint64_t storeEnumTagSinglePayload for ContactResolverConfigHashable( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_296394);
}

uint64_t sub_296394(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_94_4();
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(int *)(a4 + 24);
    }

    else
    {
      uint64_t v9 = OUTLINED_FUNCTION_13_83();
      uint64_t v10 = *(int *)(a4 + 32);
    }

    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }

  return result;
}

uint64_t type metadata completion function for ContactResolverConfigHashable(uint64_t a1)
{
  v5[0] = &unk_33CE70;
  v5[1] = &unk_33CE70;
  uint64_t result = type metadata accessor for Locale(319LL);
  if (v3 <= 0x3F)
  {
    v5[2] = *(void *)(result - 8) + 64LL;
    _OWORD v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t result = type metadata accessor for ContactResolverConfig(319LL);
    if (v4 <= 0x3F)
    {
      v5[4] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 5LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_7_101()
{
  return type metadata accessor for ContactResolverConfigHashable(0LL);
}

uint64_t OUTLINED_FUNCTION_8_80(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_12_84()
{
  return type metadata accessor for ContactActionType(0LL);
}

uint64_t OUTLINED_FUNCTION_13_83()
{
  return type metadata accessor for ContactResolverConfig(0LL);
}

uint64_t OUTLINED_FUNCTION_14_72()
{
  return String.hash(into:)(v1, v0, v2);
}

void OUTLINED_FUNCTION_19_62()
{
}

uint64_t OUTLINED_FUNCTION_22_56(uint64_t a1, uint64_t a2)
{
  return v4(v3, a2, v2);
}

uint64_t EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[0] = a3;
  v16[1] = a1;
  uint64_t v6 = type metadata accessor for Locale(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for EmergencyContactResolution();
  uint64_t v11 = v4[3];
  uint64_t v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v18, v11, v10);
  uint64_t v12 = v19;
  uint64_t v13 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  dispatch thunk of DeviceState.siriLocale.getter(v12, v13);
  outlined init with copy of SignalProviding((uint64_t)(v4 + 5), (uint64_t)v17);
  uint64_t v14 = swift_allocObject(&unk_4144C0, 32LL, 7LL);
  *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v16[0];
  *(void *)(v14 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  swift_retain();
  specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)();
  swift_release(v14);
  __swift_destroy_boxed_opaque_existential_1(v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

uint64_t closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( uint64_t a1, char a2, void (*a3)(uint64_t, void, void))
{
  int v5 = a2 & 1;
  outlined copy of Result<[String], Error>(a1, a2 & 1);
  a3(a1, 0LL, (v5 << 8));
  return outlined consume of Result<[SAAceView], Error>(a1, v5);
}

uint64_t sub_2966C0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( uint64_t a1, char a2)
{
  return closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( a1,  a2 & 1,  *(void (**)(uint64_t, void, void))(v2 + 16));
}

uint64_t EmergencyContactSlotResolver.updateIntent(value:skIntent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, void))(*(void *)(a3 + 24) + 16LL))( a1,  *(void *)(a3 + 16),  *(void *)(a3 + 24));
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:_:) in conformance EmergencyContactSlotResolver<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject(&unk_414550, 32LL, 7LL);
  *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a3;
  *(void *)(v7 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  swift_retain();
  EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( a1,  v8,  (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<[INPerson], SlotResolverError>) -> (),  v7);
  return swift_release(v7);
}

uint64_t protocol witness for SlotResolver.updateIntent(value:skIntent:) in conformance EmergencyContactSlotResolver<A>( uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return EmergencyContactSlotResolver.updateIntent(value:skIntent:)(*a1, a2, a3);
}

BOOL protocol witness for SKIntentResolver.shouldRunResolver(skIntent:nlIntent:) in conformance EmergencyContactSlotResolver<A>( uint64_t a1, void *a2)
{
  return EmergencyContactSlotResolver.shouldRunResolver(skIntent:nlIntent:)(a1, a2);
}

uint64_t instantiation function for generic protocol witness table for EmergencyContactSlotResolver<A>( uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyContactSlotResolver<A>, a2);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  return result;
}

uint64_t type metadata accessor for EmergencyContactSlotResolver( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for EmergencyContactSlotResolver);
}

BOOL UnsupportedFeatureGuardFlow.exitValue.getter()
{
  return (*(_BYTE *)(v0 + 16) & 1) == 0;
}

uint64_t UnsupportedFeatureGuardFlow.__allocating_init(check:sharedGlobals:unsupportedFlowCATsSimple:)( char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(v3, 72LL, 7LL);
  UnsupportedFeatureGuardFlow.init(check:sharedGlobals:unsupportedFlowCATsSimple:)(a1, a2, a3);
  return v7;
}

uint64_t UnsupportedFeatureGuardFlow.init(check:sharedGlobals:unsupportedFlowCATsSimple:)( char a1, __int128 *a2, uint64_t a3)
{
  *(_BYTE *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, v3 + 24);
  *(void *)(v3 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a3;
  return v3;
}

uint64_t UnsupportedFeatureGuardFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnsupportedFeatureGuardFlow();
  unint64_t v5 = lazy protocol witness table accessor for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t type metadata accessor for UnsupportedFeatureGuardFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin27UnsupportedFeatureGuardFlow);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow;
  if (!lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow)
  {
    uint64_t v1 = type metadata accessor for UnsupportedFeatureGuardFlow();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UnsupportedFeatureGuardFlow, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow);
  }

  return result;
}

uint64_t UnsupportedFeatureGuardFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  return swift_task_switch(UnsupportedFeatureGuardFlow.execute(), 0LL, 0LL);
}

uint64_t UnsupportedFeatureGuardFlow.execute()()
{
  if (*(_BYTE *)(*(void *)(v0 + 32) + 16LL) == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
    if (os_log_type_enabled(v3, v5))
    {
      uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_0, v3, v5, "#UnsupportedFeatureGuardFlow: Passed!", v6, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v6);
    }

    static ExecuteResponse.complete()(v7);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v8 = type metadata accessor for Logger(0LL);
    uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v12 = static os_log_type_t.debug.getter(v10, v11);
    if (os_log_type_enabled(v10, v12))
    {
      uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_0, v10, v12, "#UnsupportedFeatureGuardFlow: Did not pass!", v13, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v13);
    }

    uint64_t v14 = *(void *)(v0 + 32);

    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)v14 + 144LL))();
    *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v15;
    type metadata accessor for SimpleOutputFlowAsync(0LL);
    static ExecuteResponse.complete<A>(next:)(v0 + 16);
    swift_release(v15);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v11, v1, v2);
  uint64_t v3 = SirikitDeviceState.__allocating_init(from:)(v11);
  uint64_t v4 = swift_allocObject(&unk_414598, 32LL, 7LL);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v0;
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  swift_retain();
  swift_retain();
  uint64_t v5 = swift_retain();
  static DialogPhase.error.getter(v5);
  outlined init with copy of SignalProviding((uint64_t)(v0 + 3), (uint64_t)v11);
  uint64_t v6 = type metadata accessor for DialogOutputFactory(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v8 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 112LL))(v7);
  swift_release(v3);
  swift_release(v4);
  swift_release(v8);
  return v9;
}

uint64_t closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  return swift_task_switch(closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow(), 0LL, 0LL);
}

uint64_t closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(int **)(class metadata base offset for UnsupportedFlowCATsSimple + **(void **)(v0[2] + 64LL) + 96);
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow();
  return v5(v1);
}

uint64_t closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()(uint64_t a1)
{
  uint64_t v6 = *v2;
  uint64_t v4 = swift_task_dealloc();
  if (!v1) {
    uint64_t v4 = a1;
  }
  return OUTLINED_FUNCTION_116_1(v4, *(uint64_t (**)(void))(v6 + 8));
}

uint64_t UnsupportedFeatureGuardFlow.deinit()
{
  return v0;
}

uint64_t UnsupportedFeatureGuardFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t sub_296DC4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc(dword_43E124);
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = partial apply for closure #1 in RestrictionCheckGuardFlow.execute();
  return closure #1 in UnsupportedFeatureGuardFlow.makeUnsupportedOutputFlow()(v2, v3);
}

void one-time initialization function for missedRed()
{
  v0.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  SAUIColor.init(r:g:b:alpha:)(255LL, 59LL, 48LL, v0.super.super.isa);
  static ColorFactory.missedRed = v1;
}

uint64_t *ColorFactory.missedRed.unsafeMutableAddressor()
{
  if (one-time initialization token for missedRed != -1) {
    swift_once(&one-time initialization token for missedRed, one-time initialization function for missedRed);
  }
  return &static ColorFactory.missedRed;
}

id static ColorFactory.missedRed.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for missedRed,  (id *)&static ColorFactory.missedRed);
}

void one-time initialization function for watchDarkCardItemBackgroundColor(uint64_t a1)
{
}

void *ColorFactory.watchDarkCardItemBackgroundColor.unsafeMutableAddressor()
{
  if (one-time initialization token for watchDarkCardItemBackgroundColor != -1) {
    swift_once( &one-time initialization token for watchDarkCardItemBackgroundColor,  one-time initialization function for watchDarkCardItemBackgroundColor);
  }
  return &static ColorFactory.watchDarkCardItemBackgroundColor;
}

id static ColorFactory.watchDarkCardItemBackgroundColor.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for watchDarkCardItemBackgroundColor,  (id *)&static ColorFactory.watchDarkCardItemBackgroundColor);
}

void one-time initialization function for watchDarkCardItemTitleBackgroundColor(uint64_t a1)
{
}

void one-time initialization function for watchDarkCardItemBackgroundColor( Swift::Double a1, uint64_t a2, void *a3)
{
  v5.super.super.Class isa = NSNumber.init(floatLiteral:)(a1).super.super.isa;
  SAUIColor.init(r:g:b:alpha:)(242LL, 244LL, 252LL, v5.super.super.isa);
  *a3 = v6;
}

void *ColorFactory.watchDarkCardItemTitleBackgroundColor.unsafeMutableAddressor()
{
  if (one-time initialization token for watchDarkCardItemTitleBackgroundColor != -1) {
    swift_once( &one-time initialization token for watchDarkCardItemTitleBackgroundColor,  one-time initialization function for watchDarkCardItemTitleBackgroundColor);
  }
  return &static ColorFactory.watchDarkCardItemTitleBackgroundColor;
}

id static ColorFactory.watchDarkCardItemTitleBackgroundColor.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for watchDarkCardItemTitleBackgroundColor,  (id *)&static ColorFactory.watchDarkCardItemTitleBackgroundColor);
}

void SpeakerphoneControlFlow.executeAction(currentCall:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v8 = *(unsigned __int8 *)(v3 + 56);
  PhoneCallControlAction.isSpeakerphoneAction.getter(*(_BYTE *)(v3 + 56));
  if ((v9 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v12 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
    uint64_t v13 = (void *)OUTLINED_FUNCTION_9();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10(v14))
    {
      uint64_t v15 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v15 = 0;
      OUTLINED_FUNCTION_2_85( &dword_0,  v16,  v17,  "#SpeakerphoneControlFlow used to handle a call control not related to the microphone.");
      OUTLINED_FUNCTION_0_2((uint64_t)v15);
    }

    unint64_t v18 = lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    unint64_t v19 = OUTLINED_FUNCTION_4_4( (uint64_t)&type metadata for ActionableCallControlFlow.ActionableCallControlFlowError,  v18);
    Swift::String v27 = v20;
    char v28 = 0;
    _BYTE *v20 = v8;
    goto LABEL_10;
  }

  uint64_t v10 = PhoneCallControlAction.rawValue.getter(v8);
  if (v10 == 0xD000000000000013LL && v11 == 0x8000000000346820LL)
  {
    swift_bridgeObjectRelease();
  }

  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0xD000000000000013LL, 0x8000000000346820LL, 0LL);
    OUTLINED_FUNCTION_27_2();
  }

  uint64_t ObjectType = swift_getObjectType(a1);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2) & 1) != 0
    && ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2) & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v30 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
    unint64_t v31 = (void *)OUTLINED_FUNCTION_9();
    os_log_type_t v33 = static os_log_type_t.debug.getter(v31, v32);
    if (OUTLINED_FUNCTION_10(v33))
    {
      uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v34 = 0;
      OUTLINED_FUNCTION_2_85( &dword_0,  v35,  v36,  "#SpeakerphoneControlFlow cannot turn off speakerphone on FaceTime call.");
      OUTLINED_FUNCTION_0_2((uint64_t)v34);
    }

    unint64_t v37 = lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ActionableCallControlFlow.ActionableCallControlFlowError, v37);
    Swift::String v27 = (_BYTE *)v38;
    *(void *)(v38 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason;
    unint64_t v19 = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason and conformance ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason();
    *((void *)v27 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = v19;
    char v28 = 1;
LABEL_10:
    v27[40] = v28;
    swift_willThrow(v19, v20, v21, v22, v23, v24, v25, v26);
    return;
  }

  uint64_t v87 = swift_getObjectType(a1);
  uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 120);
  char v39 = v84(v87, a2);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v40 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
  uint64_t v41 = (os_log_s *)OUTLINED_FUNCTION_9();
  os_log_type_t v43 = static os_log_type_t.debug.getter(v41, v42);
  if (os_log_type_enabled(v41, v43))
  {
    HIDWORD(v8__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    uint64_t v83 = v4;
    uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v85 = a3;
    uint64_t v45 = OUTLINED_FUNCTION_7_0(32LL);
    v89[0] = v45;
    uint64_t v81 = a2;
    *(_DWORD *)uint64_t v44 = 136315138;
    char v46 = v39;
    if ((v39 & 1) != 0) {
      uint64_t v47 = 0x64656C62616E65LL;
    }
    else {
      uint64_t v47 = 0x64656C6261736964LL;
    }
    if ((v39 & 1) != 0) {
      unint64_t v48 = 0xE700000000000000LL;
    }
    else {
      unint64_t v48 = 0xE800000000000000LL;
    }
    uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, v89);
    uint64_t v50 = OUTLINED_FUNCTION_11_2(v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v50, v51, v44 + 4);
    uint64_t v52 = v87;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v41, v43, "#SpeakerphoneControlFlow speakerphone is currently %s", v44, 0xCu);
    swift_arrayDestroy(v45, 1LL);
    uint64_t v53 = v45;
    a3 = v85;
    OUTLINED_FUNCTION_0_2(v53);
    OUTLINED_FUNCTION_0_2((uint64_t)v44);
  }

  else
  {

    char v46 = v39;
    uint64_t v52 = v87;
  }

  uint64_t v54 = PhoneCallControlAction.rawValue.getter(v8);
  if ((v46 & 1) != 0)
  {
    unint64_t v56 = 0x8000000000346820LL;
    if (v54 != 0xD000000000000013LL || v55 != 0x8000000000346820LL)
    {
      unint64_t v57 = 0xD000000000000013LL;
LABEL_37:
      _stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, v57, v56, 0LL);
      OUTLINED_FUNCTION_27_2();
      uint64_t v58 = &unk_31F000;
      goto LABEL_38;
    }
  }

  else
  {
    unint64_t v57 = 0xD000000000000012LL;
    unint64_t v56 = 0x8000000000346800LL;
    if (v54 != 0xD000000000000012LL || v55 != 0x8000000000346800LL) {
      goto LABEL_37;
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v58 = (void *)&unk_31F000;
LABEL_38:
  uint64_t v59 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a2 + 136))( v89,  v52,  a2);
  *uint64_t v60 = !*v60;
  v59(v89, 0LL);
  uint64_t v61 = OUTLINED_FUNCTION_12_85();
  uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
  os_log_type_t v64 = static os_log_type_t.debug.getter(v62, v63);
  if (os_log_type_enabled(v62, v64))
  {
    uint64_t v86 = a3;
    unint64_t v65 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v88 = OUTLINED_FUNCTION_7_0(32LL);
    v89[0] = v88;
    *(_DWORD *)unint64_t v65 = v58[237];
    char v73 = OUTLINED_FUNCTION_7_102(v52, v66, v67, v68, v69, v70, v71, v72, v81, v82, v83, v84);
    BOOL v74 = (v73 & 1) == 0;
    if ((v73 & 1) != 0) {
      uint64_t v75 = 0x64656C62616E65LL;
    }
    else {
      uint64_t v75 = 0x64656C6261736964LL;
    }
    if (v74) {
      unint64_t v76 = 0xE800000000000000LL;
    }
    else {
      unint64_t v76 = 0xE700000000000000LL;
    }
    uint64_t v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v76, v89);
    uint64_t v78 = OUTLINED_FUNCTION_11_2(v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v78, v79, v65 + 4);
    OUTLINED_FUNCTION_3_113();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v62, v64, "#SpeakerphoneControlFlow toggled speakerphone to %s", v65, 0xCu);
    swift_arrayDestroy(v88, 1LL);
    OUTLINED_FUNCTION_0_2(v88);
    uint64_t v80 = (uint64_t)v65;
    a3 = v86;
    OUTLINED_FUNCTION_0_2(v80);
  }

  else
  {

    OUTLINED_FUNCTION_3_113();
  }

  *(void *)a3 = 0LL;
  *(void *)(a3 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
  *(void *)(a3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
  *(_OWORD *)(a3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = xmmword_31F950;
}

uint64_t type metadata accessor for SpeakerphoneControlFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin23SpeakerphoneControlFlow);
}

void OUTLINED_FUNCTION_2_85(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_3_113()
{
  return swift_unknownObjectRelease_n(v0, 2LL);
}

uint64_t OUTLINED_FUNCTION_6_95( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return swift_release_n(a16, 2LL);
}

uint64_t OUTLINED_FUNCTION_7_102( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t))
{
  return a12(a1, v12);
}

uint64_t OUTLINED_FUNCTION_12_85()
{
  return swift_unknownObjectRetain_n(v0, 2LL);
}

void HangUpCallTemplatingService.__allocating_init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)()
{
}

uint64_t HangUpCallTemplatingService.hangUpCallCatFamily.getter()
{
  return swift_retain(*(void *)(v0 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily));
}

void HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)()
{
}

uint64_t HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = *(void **)(v5 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily);
  uint64_t v9 = swift_allocObject(&unk_414618, 32LL, 7LL);
  *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a4;
  *(void *)(v9 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a5;
  uint64_t v10 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for HangUpCallCATs
                                                                        + *v8
                                                                        + 64);
  swift_retain();
  v10( partial apply for closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:),  v9);
  return swift_release(v9);
}

uint64_t closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)( uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult?, Error>);
  __chkstk_darwin();
  uint64_t v13 = (uint64_t *)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    *uint64_t v13 = *v10;
    uint64_t v14 = 1LL;
  }

  else
  {
    (*(void (**)(char *, void *, uint64_t))(v5 + 32))(v7, v10, v4);
    (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v13, v7, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v14 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v13, v11, v14);
  a2(v13);
  return outlined destroy of Result<TemplatingResult?, Error>((uint64_t)v13);
}

uint64_t HangUpCallTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)( int a1, int a2, id a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (char *)[a3 code];
  uint64_t v9 = *(void **)(v5 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily);
  uint64_t v10 = class metadata base offset for HangUpCallCATs;
  if (v8 == (_BYTE *)&dword_4 + 2) {
    uint64_t v10 = class metadata base offset for HangUpCallCATs + 32;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*v9 + v10))(a4, a5);
}

void HangUpCallTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( uint64_t a1, uint64_t a2)
{
}

uint64_t HangUpCallTemplatingService.__ivar_destroyer()
{
  return swift_release(*(void *)(v0 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily));
}

uint64_t HangUpCallTemplatingService.deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release(*(void *)(v0 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily));
  return v0;
}

uint64_t HangUpCallTemplatingService.__deallocating_deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release(*(void *)(v0 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily));
  return swift_deallocClassInstance(v0, 264LL, 7LL);
}

uint64_t specialized HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a4;
  uint64_t v25 = a8;
  uint64_t v14 = *(void *)(a7 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(a6 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily) = a2;
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v26);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v19 = swift_retain();
  static CATOption.defaultMode.getter(v19);
  uint64_t v20 = CATWrapper.__allocating_init(options:globals:)(v18, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, a7);
  uint64_t v21 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0x61437055676E6168LL,  0xEF32764355446C6CLL,  v26,  a3,  v24,  v16,  0LL,  0LL,  0LL,  0LL,  v20,  a6,  a7,  v25);
  swift_release(a2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, a7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v21;
}

uint64_t sub_297E28()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)( uint64_t a1)
{
  return closure #1 in HangUpCallTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)( a1,  *(void (**)(void *))(v1 + 16));
}

uint64_t type metadata accessor for HangUpCallTemplatingService(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for HangUpCallTemplatingService;
  if (!type metadata singleton initialization cache for HangUpCallTemplatingService) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HangUpCallTemplatingService);
  }
  return result;
}

uint64_t type metadata completion function for HangUpCallTemplatingService(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + class metadata base offset for HangUpCallTemplatingService);
}

uint64_t ObjC metadata update function for HangUpCallTemplatingService()
{
  return type metadata accessor for HangUpCallTemplatingService(0LL);
}

uint64_t outlined destroy of Result<TemplatingResult?, Error>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult?, Error>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_100()
{
  return specialized HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( v4,  v3,  v2,  v1,  v7,  v0,  v5,  v6);
}

uint64_t OUTLINED_FUNCTION_3_114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 55LL, a3, 111LL, 0LL);
}

void SharedNeedsValueContext.registerPrompt(for:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25_0(v0 + 16, (uint64_t)v3, 33LL);
  specialized Set._Variant.insert(_:)(v1, v2);
  swift_endAccess(v3);
  OUTLINED_FUNCTION_60_2();
}

uint64_t SharedNeedsValueContext.hasPrompted(for:)()
{
  return specialized Set.contains(_:)(*(void *)(v0 + 16), v1) & 1;
}

void SharedNeedsValueContext.reset(for:)(char a1)
{
  uint64_t v2 = (void *)(v1 + 16);
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_25_0((uint64_t)v2, (uint64_t)v3, 1LL);
    *uint64_t v2 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
  }

  else
  {
    OUTLINED_FUNCTION_25_0((uint64_t)v2, (uint64_t)v3, 33LL);
    specialized Set._Variant.remove(_:)();
    swift_endAccess(v3);
  }

  OUTLINED_FUNCTION_60_2();
}

uint64_t SharedNeedsValueContext.__allocating_init()()
{
  uint64_t result = swift_allocObject(v0, 24LL, 7LL);
  *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = &_swiftEmptySetSingleton;
  return result;
}

uint64_t SharedNeedsValueContext.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = &_swiftEmptySetSingleton;
  return result;
}

BOOL specialized Set._Variant.remove(_:)()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)(v6, *(void *)(*v0 + 40LL));
  Hasher._combine(_:)(0LL);
  unint64_t v2 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v1 + 32));
  uint64_t v3 = (1LL << v2) & *(void *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56);
  if (v3)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v0);
    v6[0] = *v0;
    *uint64_t v0 = 0x8000000000000000LL;
    if (!isUniquelyReferenced_nonNull_native) {
      specialized _NativeSet.copy()();
    }
    specialized _NativeSet._delete(at:)(v2);
    *uint64_t v0 = v6[0];
    swift_bridgeObjectRelease();
  }

  return v3 == 0;
}

unint64_t lazy protocol witness table accessor for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase()
{
  unint64_t result = lazy protocol witness table cache variable for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase;
  if (!lazy protocol witness table cache variable for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SharedNeedsValueContext.NeedsValueCase,  &type metadata for SharedNeedsValueContext.NeedsValueCase);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SharedNeedsValueContext.NeedsValueCase and conformance SharedNeedsValueContext.NeedsValueCase);
  }

  return result;
}

uint64_t type metadata accessor for SharedNeedsValueContext()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin23SharedNeedsValueContext);
}

uint64_t storeEnumTagSinglePayload for SharedNeedsValueContext.NeedsValueCase(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_2981D0 + 4 * asc_33D030[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_2981F0 + 4 * byte_33D035[v4]))();
  }
}

_BYTE *sub_2981D0(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_2981F0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_2981F8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_298200(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_298208(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_298210(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SharedNeedsValueContext.NeedsValueCase()
{
  return &type metadata for SharedNeedsValueContext.NeedsValueCase;
}

unint64_t specialized _NativeSet._delete(at:)(unint64_t result)
{
  Swift::Int v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56LL;
  uint64_t v5 = -1LL << *(_BYTE *)(*v1 + 32LL);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain(*v1);
    uint64_t v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)(v20, *(void *)(v3 + 40));
        Hasher._combine(_:)(0LL);
        Swift::Int v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (_BYTE *)(v13 + v2);
            uint64_t v15 = (_BYTE *)(v13 + v6);
            BOOL v16 = v2 != v6 || v14 >= v15 + 1;
            Swift::Int v2 = v6;
            if (v16)
            {
              *uint64_t v14 = *v15;
              Swift::Int v2 = v6;
            }
          }
        }

        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }

        unint64_t v6 = (v6 + 1) & v7;
      }

      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
    }

    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << v2) - 1;
    unint64_t result = swift_release(v3);
  }

  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << result) - 1;
  }

  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1LL);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }

  return result;
}

id static SiriPhoneActionFactory.makeConfirmAndRejectActions()()
{
  uint64_t v2 = type metadata accessor for CommonDirectAction(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  swift_storeEnumTagMultiPayload(v1, v2, 6LL);
  type metadata accessor for SKIDirectInvocationPayload();
  OUTLINED_FUNCTION_4_98();
  SKIDirectInvocationPayload.__allocating_init(identifier:)();
  OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_5_99(v3);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_62();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v5, v0);
  OUTLINED_FUNCTION_3_115();
  unint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  id v7 = [objc_allocWithZone(SKIDirectInvocationContext) init];
  id v8 = [v6 runSiriKitExecutorCommandWithContext:v7 payload:v0];

  swift_storeEnumTagMultiPayload(v1, v2, 7LL);
  OUTLINED_FUNCTION_4_98();
  SKIDirectInvocationPayload.__allocating_init(identifier:)();
  Swift::Int v10 = v9;
  CommonDirectAction.userData.getter();
  OUTLINED_FUNCTION_5_99(v11);
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_62();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v13, v10);
  OUTLINED_FUNCTION_3_115();
  id v14 = [objc_allocWithZone(SKIDirectInvocationContext) init];
  id v15 = [v6 runSiriKitExecutorCommandWithContext:v14 payload:v10];

  return v8;
}

id static SiriPhoneActionFactory.makeSelectionAction(contact:)(void *a1)
{
  *uint64_t v1 = a1;
  swift_storeEnumTagMultiPayload(v1, v3, 1LL);
  type metadata accessor for SKIDirectInvocationPayload();
  id v4 = a1;
  OUTLINED_FUNCTION_4_98();
  SKIDirectInvocationPayload.__allocating_init(identifier:)();
  OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_5_99(v5);
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_62();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v7, a1);
  OUTLINED_FUNCTION_3_115();
  id v8 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  id v9 = [objc_allocWithZone(SKIDirectInvocationContext) init];
  id v10 = [v8 runSiriKitExecutorCommandWithContext:v9 payload:a1];

  return v10;
}

ValueMetadata *type metadata accessor for SiriPhoneActionFactory()
{
  return &type metadata for SiriPhoneActionFactory;
}

void OUTLINED_FUNCTION_1_94()
{
}

uint64_t OUTLINED_FUNCTION_3_115()
{
  return outlined destroy of CommonDirectAction(v0);
}

void OUTLINED_FUNCTION_4_98()
{
}

uint64_t AnnounceCallConfirmationStrategy.__allocating_init(wrapped:sharedGlobals:)(uint64_t a1, __int128 *a2)
{
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v2, 72LL);
  AnnounceCallConfirmationStrategy.init(wrapped:sharedGlobals:)(a1, a2);
  return v5;
}

uint64_t AnnounceCallConfirmationStrategy.init(wrapped:sharedGlobals:)(uint64_t a1, __int128 *a2)
{
  *(void *)(v2 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &outlined read-only object #0 of AnnounceCallConfirmationStrategy.init(wrapped:sharedGlobals:);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, v2 + 24);
  return v2;
}

uint64_t AnnounceCallConfirmationStrategy.actionForInput(_:section:isBargeIn:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_BYTE *, uint64_t)@<X2>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  int v104 = a5;
  uint64_t v102 = a2;
  uint64_t v103 = a6;
  uint64_t v110 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v101 = *(void *)(v110 - 8);
  __chkstk_darwin();
  uint64_t v94 = &v87[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
  __chkstk_darwin();
  uint64_t v93 = &v87[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v96 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v108 = &v87[-v12];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  __chkstk_darwin();
  id v14 = &v87[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v92 = v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v99 = v16;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v107 = v17;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v109 = v18;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v95 = v19;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v98 = v20;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v22 = &v87[-v21];
  uint64_t v23 = type metadata accessor for Input(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v26 = &v87[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  unint64_t v29 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v105 = a1;
  v29(v26, a1, v23);
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v30 = swift_retain_n(a4, 2LL);
  uint64_t v97 = v28;
  unint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v33 = static os_log_type_t.debug.getter(v31, v32);
  int v34 = v33;
  if (os_log_type_enabled(v31, v33))
  {
    uint64_t v35 = OUTLINED_FUNCTION_7_0(38LL);
    uint64_t v91 = v22;
    uint64_t v36 = v35;
    uint64_t v89 = OUTLINED_FUNCTION_7_0(96LL);
    *(void *)&v112[0] = v89;
    *(_DWORD *)uint64_t v36 = 136315906;
    int v88 = v34;
    uint64_t v111 = OUTLINED_FUNCTION_13_84((uint64_t)"registeredPrompts");
    uint64_t v90 = v14;
    OUTLINED_FUNCTION_19_63(v111, v37, v38, v36 + 12);
    *(_WORD *)(v36 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v102, (unint64_t)a3, (uint64_t *)v112);
    OUTLINED_FUNCTION_19_63(v111, v39, v40, v36 + 22);
    OUTLINED_FUNCTION_14_18();
    swift_bridgeObjectRelease_n(a3, 3LL);
    *(_WORD *)(v36 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1024;
    char v41 = v104;
    LODWORD(v1__swift_destroy_boxed_opaque_existential_1(v0 + 11) = v104 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, (char *)&v111 + 4, v36 + 24);
    *(_WORD *)(v36 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 2080;
    uint64_t v42 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter(v23, v42);
    uint64_t v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, (uint64_t *)v112);
    id v14 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, v112, v36 + 30);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_57();
    _os_log_impl( &dword_0,  v31,  (os_log_type_t)v88,  "#AnnounceCallConfirmationStrategy %s section %s, isBargeIn: %{BOOL}d, input: %s",  (uint8_t *)v36,  0x26u);
    uint64_t v45 = v89;
    swift_arrayDestroy(v89, 3LL);
    OUTLINED_FUNCTION_0_2(v45);
    uint64_t v46 = v36;
    uint64_t v22 = v91;
    OUTLINED_FUNCTION_0_2(v46);
  }

  else
  {
    OUTLINED_FUNCTION_14_18();
    swift_bridgeObjectRelease_n(a3, 2LL);
    OUTLINED_FUNCTION_22_57();

    char v41 = v104;
  }

  unint64_t v48 = v108;
  uint64_t v47 = v109;
  uint64_t v49 = v107;
  if ((v41 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))(**(void **)(v106 + 16) + 168LL))(v105);
  }
  uint64_t v50 = v106;
  outlined init with copy of SignalProviding(v106 + 24, (uint64_t)v112);
  uint64_t v51 = type metadata accessor for YesNoConfirmationParser();
  uint64_t v52 = OUTLINED_FUNCTION_8_2(v51, 64LL);
  *(_BYTE *)(v52 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(v112, v52 + 24);
  YesNoConfirmationParser.parseConfirmationResponse(input:)((uint64_t)v22);
  uint64_t result = OUTLINED_FUNCTION_38_1();
  uint64_t v54 = *(void *)(v50 + 64);
  uint64_t v55 = *(void *)(v54 + 16);
  if (!v55)
  {
    __break(1u);
    return result;
  }

  int v56 = *(unsigned __int8 *)(v55 + v54 + 31);
  if (v56) {
    unint64_t v57 = 0xD000000000000028LL;
  }
  else {
    unint64_t v57 = 0xD00000000000002ALL;
  }
  if (v56) {
    unint64_t v58 = 0x8000000000342AC0LL;
  }
  else {
    unint64_t v58 = 0x8000000000342A90LL;
  }
  BOOL v59 = v57 == v102 && v58 == (void)a3;
  if (v59)
  {
    OUTLINED_FUNCTION_50();
    uint64_t v60 = v99;
LABEL_25:
    uint64_t v65 = v98;
    OUTLINED_FUNCTION_25_54(v98, enum case for ConfirmationResponse.confirmed(_:));
    OUTLINED_FUNCTION_27_56(v65);
    OUTLINED_FUNCTION_20_62();
    outlined init with copy of ConfirmationResponse?(v65, v50);
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1LL, (uint64_t)a3) == 1)
    {
      outlined destroy of SpeakableString?(v65, &demangling cache variable for type metadata for ConfirmationResponse?);
      OUTLINED_FUNCTION_0_101();
      if (!v59) {
        goto LABEL_32;
      }
      outlined destroy of SpeakableString?( (uint64_t)v48,  &demangling cache variable for type metadata for ConfirmationResponse?);
      OUTLINED_FUNCTION_12_86();
    }

    else
    {
      uint64_t v66 = v95;
      OUTLINED_FUNCTION_26_56((uint64_t)v48);
      OUTLINED_FUNCTION_0_101();
      if (v59)
      {
        outlined destroy of SpeakableString?( v98,  &demangling cache variable for type metadata for ConfirmationResponse?);
        OUTLINED_FUNCTION_16_58();
LABEL_32:
        outlined destroy of SpeakableString?( (uint64_t)v48,  &demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
        OUTLINED_FUNCTION_12_86();
        goto LABEL_33;
      }

      uint64_t v70 = v101;
      uint64_t v71 = v49;
      uint64_t v72 = v94;
      uint64_t v73 = v110;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v101 + 32))(v94, v50, v110);
      lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse,  (uint64_t)&protocol conformance descriptor for ConfirmationResponse);
      char v74 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v72, v73);
      a3 = *(void (**)(_BYTE *, uint64_t))(v70 + 8);
      uint64_t v75 = v72;
      uint64_t v49 = v71;
      a3(v75, v73);
      OUTLINED_FUNCTION_8_17(v98);
      a3(v66, v73);
      uint64_t v47 = v109;
      uint64_t v60 = v99;
      outlined destroy of SpeakableString?( (uint64_t)v108,  &demangling cache variable for type metadata for ConfirmationResponse?);
      OUTLINED_FUNCTION_12_86();
      if ((v74 & 1) == 0)
      {
LABEL_33:
        OUTLINED_FUNCTION_25_54(v49, enum case for ConfirmationResponse.rejected(_:));
        OUTLINED_FUNCTION_27_56(v49);
        uint64_t v67 = v96;
        LOBYTE(v50) = v96 + v68;
        OUTLINED_FUNCTION_26_56(v47);
        OUTLINED_FUNCTION_24_48();
        if (__swift_getEnumTagSinglePayload(v67, 1LL, (uint64_t)a3) == 1)
        {
          OUTLINED_FUNCTION_8_17(v49);
          OUTLINED_FUNCTION_8_17(v47);
          OUTLINED_FUNCTION_0_101();
          if (v59)
          {
            uint64_t v64 = v67;
            goto LABEL_43;
          }
        }

        else
        {
          outlined init with copy of ConfirmationResponse?(v67, v60);
          OUTLINED_FUNCTION_0_101();
          if (!v59)
          {
            uint64_t v77 = (void (*)(uint64_t, void))v101;
            OUTLINED_FUNCTION_7_103(*(uint64_t (**)(void, uint64_t, void))(v101 + 32));
            lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse,  (uint64_t)&protocol conformance descriptor for ConfirmationResponse);
            OUTLINED_FUNCTION_57_8(v60, v47);
            OUTLINED_FUNCTION_17_63();
            OUTLINED_FUNCTION_8_17(v49);
            OUTLINED_FUNCTION_8_17(v47);
            v77(v60, a3);
            uint64_t v78 = v67;
            goto LABEL_49;
          }

          outlined destroy of SpeakableString?( v49,  &demangling cache variable for type metadata for ConfirmationResponse?);
          outlined destroy of SpeakableString?( v47,  &demangling cache variable for type metadata for ConfirmationResponse?);
          (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v60, v110);
        }

        uint64_t v69 = v67;
LABEL_48:
        uint64_t v76 = outlined destroy of SpeakableString?( v69,  &demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
        LOBYTE(v50) = 0;
        goto LABEL_50;
      }
    }

    uint64_t v64 = v47;
    goto LABEL_43;
  }

  uint64_t v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v102, a3, 0LL);
  OUTLINED_FUNCTION_62();
  uint64_t v60 = v99;
  if ((v50 & 1) != 0) {
    goto LABEL_25;
  }
  uint64_t v61 = v92;
  uint64_t v62 = v110;
  (*(void (**)(uint64_t, void, uint64_t))(v101 + 104))( v92,  enum case for ConfirmationResponse.rejected(_:),  v110);
  __swift_storeEnumTagSinglePayload(v61, 0LL, 1LL, v62);
  uint64_t v63 = (uint64_t)v93;
  OUTLINED_FUNCTION_20_62();
  OUTLINED_FUNCTION_24_48();
  if (__swift_getEnumTagSinglePayload(v63, 1LL, v62) != 1)
  {
    OUTLINED_FUNCTION_26_56(v63);
    OUTLINED_FUNCTION_0_101();
    if (v59)
    {
      outlined destroy of SpeakableString?(v61, &demangling cache variable for type metadata for ConfirmationResponse?);
      OUTLINED_FUNCTION_16_58();
LABEL_47:
      uint64_t v69 = v63;
      goto LABEL_48;
    }

    uint64_t v79 = (void (*)(_BYTE *, void))v101;
    OUTLINED_FUNCTION_7_103(*(uint64_t (**)(void, uint64_t, void))(v101 + 32));
    lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse,  (uint64_t)&protocol conformance descriptor for ConfirmationResponse);
    OUTLINED_FUNCTION_57_8((uint64_t)v14, v47);
    OUTLINED_FUNCTION_17_63();
    OUTLINED_FUNCTION_8_17(v61);
    v79(v14, a3);
    uint64_t v78 = v63;
LABEL_49:
    uint64_t v76 = OUTLINED_FUNCTION_8_17(v78);
    goto LABEL_50;
  }

  outlined destroy of SpeakableString?(v61, &demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_0_101();
  if (!v59) {
    goto LABEL_47;
  }
  uint64_t v64 = v63;
LABEL_43:
  uint64_t v76 = outlined destroy of SpeakableString?( v64,  &demangling cache variable for type metadata for ConfirmationResponse?);
  LOBYTE(v50) = 1;
LABEL_50:
  uint64_t v80 = (os_log_s *)Logger.logObject.getter(v76);
  os_log_type_t v82 = static os_log_type_t.debug.getter(v80, v81);
  if (os_log_type_enabled(v80, v82))
  {
    uint64_t v83 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v84 = OUTLINED_FUNCTION_7_0(64LL);
    *(void *)&v112[0] = v84;
    *(_DWORD *)uint64_t v83 = 136315394;
    uint64_t v111 = OUTLINED_FUNCTION_13_84((uint64_t)"registeredPrompts");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, v112, v83 + 4);
    *(_WORD *)(v83 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    if ((v50 & 1) != 0) {
      uint64_t v85 = 0x676E696C646E6148LL;
    }
    else {
      uint64_t v85 = 0x676E69726F6E6749LL;
    }
    uint64_t v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, 0xE800000000000000LL, (uint64_t *)v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, v112, v83 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v80, v82, "#AnnounceCallConfirmationStrategy %s %s barge-in Input", (uint8_t *)v83, 0x16u);
    swift_arrayDestroy(v84, 2LL);
    OUTLINED_FUNCTION_0_2(v84);
    OUTLINED_FUNCTION_0_2(v83);
  }

  if ((v50 & 1) != 0) {
    static ActionForInput.handle()(v86);
  }
  else {
    static ActionForInput.ignore()(v86);
  }
  return outlined destroy of SpeakableString?( (uint64_t)v22,  &demangling cache variable for type metadata for ConfirmationResponse?);
}

uint64_t AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch( AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:),  0LL,  0LL);
}

uint64_t AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:)()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(**(void **)(v0[4] + 16) + 176LL));
  v0[5] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:);
  return OUTLINED_FUNCTION_9_75(v0[2], v0[3], v3);
}

{
  uint64_t v0;
  uint64_t (**v1)(void);
  OUTLINED_FUNCTION_14_1(*((void *)*v1 + 5));
  if (v0) {
    return OUTLINED_FUNCTION_3_0(v1[1]);
  }
  else {
    return swift_task_switch( AnnounceCallConfirmationStrategy.parseConfirmationResponse(input:section:isBargeIn:),  0LL,  0LL);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = enum case for PromptResult.answered<A>(_:);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<IncomingCallActionConfirmation>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104LL))(v1, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<BargeInCapableSection>);
  uint64_t result = OUTLINED_FUNCTION_8_2(v3, 96LL);
  *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D880;
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }

  uint64_t v7 = (void *)result;
  if (*(_BYTE *)(v5 + 32)) {
    unint64_t v8 = 0xD000000000000028LL;
  }
  else {
    unint64_t v8 = 0xD00000000000002ALL;
  }
  if (*(_BYTE *)(v5 + 32)) {
    unint64_t v9 = 0x8000000000342AC0LL;
  }
  else {
    unint64_t v9 = 0x8000000000342A90LL;
  }
  uint64_t result = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414768, 32LL);
  *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a1;
  *(void *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  v7[4] = v8;
  void v7[5] = v9;
  uint64_t v7[6] = &async function pointer to partial apply for closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  v7[7] = result;
  if (v6 == 1) {
    goto LABEL_17;
  }
  int v10 = *(unsigned __int8 *)(v5 + 33);
  if (*(_BYTE *)(v5 + 33)) {
    unint64_t v11 = 0xD000000000000028LL;
  }
  else {
    unint64_t v11 = 0xD00000000000002ALL;
  }
  if (v10) {
    unint64_t v12 = 0x8000000000342AC0LL;
  }
  else {
    unint64_t v12 = 0x8000000000342A90LL;
  }
  uint64_t v13 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414790, 32LL);
  *(void *)(v13 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *(void *)(v13 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  v7[8] = v11;
  v7[9] = v12;
  v7[10] = &async function pointer to partial apply for closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  v7[11] = v13;
  id v14 = a1;
  swift_retain_n(v1, 2LL);
  id v15 = v14;
  return (uint64_t)v7;
}

uint64_t closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)( uint64_t a1, uint64_t a2, void *a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  v3[17] = *a3;
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v3[18] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[19] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[20] = v6;
  v3[21] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Locale(0LL);
  v3[22] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for CATOption(0LL);
  v3[23] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:), 0LL, 0LL);
}

uint64_t closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = (void *)v0[16];
  uint64_t v4 = v0[17];
  uint64_t v5 = (void *)v0[15];
  uint64_t v6 = type metadata accessor for AnnounceIncomingCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v6);
  uint64_t v7 = (void *)CATWrapperSimple.__allocating_init(options:globals:)(v1, 0LL);
  v0[24] = v7;
  uint64_t v8 = type metadata accessor for PhoneIncomingCall();
  unint64_t v9 = v3 + 3;
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v12);
  dispatch thunk of DeviceState.siriLocale.getter(v12, v13);
  uint64_t v20 = type metadata accessor for AppInfoBuilder();
  uint64_t v21 = &protocol witness table for AppInfoBuilder;
  v19[0] = OUTLINED_FUNCTION_8_2(v20, 16LL);
  uint64_t v14 = specialized PhoneIncomingCall.__allocating_init(intentResponse:siriLocale:options:appInfoBuilder:)( v5,  v2,  2uLL,  v19,  v8,  *(void *)(v4 + 80),  *(void *)(v4 + 88));
  v0[25] = v14;
  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  id v15 = *(int **)(*v7 + class metadata base offset for AnnounceIncomingCallCATsSimple);
  uint64_t v18 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
  uint64_t v16 = (void *)swift_task_alloc(v15[1]);
  v0[26] = v16;
  *uint64_t v16 = v0;
  v16[1] = closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  return v18(v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *(void *)(*(void *)v0 + 160LL);
  uint64_t v1 = *(void *)(*(void *)v0 + 168LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 152LL);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 240LL));
  OUTLINED_FUNCTION_62();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 200));
  OUTLINED_FUNCTION_38_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[27] = a1;
  v3[28] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release(v3[25]);
    OUTLINED_FUNCTION_38_1();
  }

  return OUTLINED_FUNCTION_4_0();
}

void closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  if (one-time initialization token for announceTelephony != -1) {
    swift_once( &one-time initialization token for announceTelephony,  one-time initialization function for announceTelephony);
  }
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.announceTelephony);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
  BOOL v6 = os_log_type_enabled(v3, v5);
  uint64_t v7 = (void *)v0[27];
  if (!v6)
  {

LABEL_22:
    uint64_t v30 = (void *)v0[27];
    uint64_t v31 = v0[18];
    uint64_t v32 = (void *)v0[16];
    uint64_t v33 = v32[6];
    uint64_t v34 = v32[7];
    __swift_project_boxed_opaque_existential_1(v32 + 3, v33);
    (*(void (**)(uint64_t, uint64_t))(v34 + 136))(v33, v34);
    uint64_t v35 = v0[10];
    uint64_t v36 = v0[11];
    __swift_project_boxed_opaque_existential_1(v0 + 7, v35);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v38 = OUTLINED_FUNCTION_8_2(v37, 40LL);
    *(_OWORD *)(v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
    *(void *)(v38 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v30;
    v52[0] = v38;
    specialized Array._endMutation()(v38, v39, v40, v41);
    uint64_t v42 = v52[0];
    v0[29] = v52[0];
    static DialogPhase.confirmed.getter(v30);
    OutputGenerationManifest.init(dialogPhase:_:)( v31,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
    uint64_t v43 = *(void *)(v36 + 8);
    unint64_t v44 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1]);
    v0[30] = v44;
    *unint64_t v44 = v0;
    v44[1] = closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
    dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v0[14],  v42,  v0[21],  v35,  v43);
    return;
  }

  os_log_type_t v48 = v5;
  uint64_t v49 = v0;
  uint64_t v8 = OUTLINED_FUNCTION_7_0(22LL);
  uint64_t v47 = OUTLINED_FUNCTION_7_0(64LL);
  uint64_t v50 = v47;
  *(_DWORD *)uint64_t v8 = 136315394;
  id v9 = [v7 catId];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  unint64_t v12 = v11;

  v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v50);
  uint64_t v46 = v0 + 13;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 12, v0 + 13, v8 + 4);
  swift_bridgeObjectRelease();

  *(_WORD *)(v8 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
  id v13 = [v7 dialog];
  unint64_t v14 = type metadata accessor for DialogElement();
  uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if (!((unint64_t)v15 >> 62))
  {
    uint64_t v16 = *(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8LL));
    if (v16) {
      goto LABEL_6;
    }
LABEL_20:
    OUTLINED_FUNCTION_50();
    uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_21:
    uint64_t v0 = v49;
    uint64_t v26 = (void *)v49[27];
    uint64_t v27 = Array.description.getter(v18, &type metadata for String);
    unint64_t v29 = v28;
    OUTLINED_FUNCTION_62();
    v49[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v46, v49 + 14, v8 + 14);
    swift_bridgeObjectRelease();

    _os_log_impl( &dword_0,  v3,  v48,  "#AnnounceCallConfirmationStrategy Call Announcement: { \n    catId=%s,\n    dialog={\n        %s\n    }\n}",  (uint8_t *)v8,  0x16u);
    swift_arrayDestroy(v47, 2LL);
    OUTLINED_FUNCTION_0_2(v47);
    OUTLINED_FUNCTION_0_2(v8);
    goto LABEL_22;
  }

  if (v15 < 0) {
    uint64_t v25 = v15;
  }
  else {
    uint64_t v25 = v15 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter(v25);
  OUTLINED_FUNCTION_50();
  if (!v16) {
    goto LABEL_20;
  }
LABEL_6:
  uint64_t v51 = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v16 & 0x8000000000000000LL) == 0)
  {
    uint64_t v45 = v3;
    uint64_t v17 = 0LL;
    uint64_t v18 = v51;
    do
    {
      if ((v15 & 0xC000000000000001LL) != 0) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
      }
      else {
        id v19 = *(id *)(v15 + 8 * v17 + 32);
      }
      uint64_t v20 = v19;
      uint64_t v53 = v19;
      closure #2 in implicit closure #2 in IncomingCallActionConfirmationStrategy.makePromptForConfirmationOutput(itemToConfirm:)( &v53,  v52);

      uint64_t v21 = v52[0];
      uint64_t v22 = v52[1];
      uint64_t v51 = v18;
      unint64_t v23 = v18[2];
      if (v23 >= v18[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v18 = v51;
      }

      ++v17;
      void v18[2] = v23 + 1;
      uint64_t v24 = &v18[2 * v23];
      v24[4] = v21;
      void v24[5] = v22;
    }

    while (v16 != v17);
    OUTLINED_FUNCTION_50();
    uint64_t v3 = v45;
    goto LABEL_21;
  }

  __break(1u);
}

uint64_t closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:), 0LL, 0LL);
}

uint64_t closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(**(void **)(v0[3] + 16) + 224LL));
  v0[5] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:);
  return OUTLINED_FUNCTION_9_75(v0[2], v0[4], v3);
}

{
  uint64_t (**v0)(void);
  OUTLINED_FUNCTION_14_1(*((void *)*v0 + 5));
  return OUTLINED_FUNCTION_3_0(v0[1]);
}

uint64_t AnnounceCallConfirmationStrategy.deinit()
{
  return v0;
}

uint64_t AnnounceCallConfirmationStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t protocol witness for BargeInCapablePromptForConfirmationStrategyAsync.makeSections(itemToConfirm:) in conformance AnnounceCallConfirmationStrategy<A>( void *a1)
{
  return (*(uint64_t (**)(void))(**(void **)v1 + 144LL))(*a1);
}

uint64_t protocol witness for BargeInCapablePromptForConfirmationStrategyAsync.parseConfirmationResponse(input:section:isBargeIn:) in conformance AnnounceCallConfirmationStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v16 = *(int **)(**(void **)v7 + 136LL);
  id v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v16 + *v16);
  uint64_t v17 = (void *)swift_task_alloc(v16[1]);
  *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return v19(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_299E70()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E44C);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_21_54(v1);
  return closure #1 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(v2, v3, v4);
}

uint64_t sub_299EF0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E45C);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_21_54(v1);
  return closure #2 in AnnounceCallConfirmationStrategy.makeSections(itemToConfirm:)(v2, v3, v4);
}

uint64_t type metadata completion function for AnnounceCallConfirmationStrategy(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  void v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + 96);
}

uint64_t type metadata accessor for AnnounceCallConfirmationStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for AnnounceCallConfirmationStrategy);
}

uint64_t OUTLINED_FUNCTION_0_101()
{
  return __swift_getEnumTagSinglePayload(v0, 1LL, *(void *)(v1 - 144));
}

uint64_t OUTLINED_FUNCTION_7_103@<X0>(uint64_t (*a1)(void, uint64_t, void)@<X8>)
{
  return a1(*(void *)(v2 - 272), v1, *(void *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_9_75(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_12_86()
{
  return outlined init with copy of ConfirmationResponse?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_13_84@<X0>(uint64_t a1@<X8>)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000024LL,  a1 | 0x8000000000000000LL,  (uint64_t *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_16_58()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 216) + 8LL))(v0, *(void *)(v1 - 144));
}

uint64_t OUTLINED_FUNCTION_17_63()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_19_63(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 136, v5, v4, a4);
}

uint64_t OUTLINED_FUNCTION_20_62()
{
  return outlined init with copy of ConfirmationResponse?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_57()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_24_48()
{
  return outlined init with copy of ConfirmationResponse?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_56(uint64_t a1)
{
  return outlined init with copy of ConfirmationResponse?(a1, v1);
}

uint64_t AddCallParticipantGuardFlowFactory.__allocating_init(sharedGlobals:addCallParticipantCats:)( __int128 *a1, uint64_t a2)
{
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v2, 64LL);
  outlined init with take of AppSelectionSignalComponent(a1, v5 + 16);
  *(void *)(v5 + 56) = a2;
  return v5;
}

uint64_t specialized Set.count.getter(uint64_t a1)
{
  if ((a1 & 0xC000000000000001LL) == 0) {
    return *(void *)(a1 + 16);
  }
  if (a1 >= 0) {
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  return __CocoaSet.count.getter(a1);
}

uint64_t AddCallParticipantGuardFlowFactory.makeGuardFlow()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 48LL);
  *(_OWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FBC0;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (*(uint64_t (**)(void))(*(void *)v0 + 112LL))();
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)v0 + 120LL))();
  *(void *)(v2 + 40) = v3;
  specialized Array._endMutation()(v3, v4, v5, v6);
  uint64_t v7 = type metadata accessor for GuardFlow(0LL);
  OUTLINED_FUNCTION_15_2(v7);
  return GuardFlow.init(preconditionFlows:)(v2);
}

__int128 *AddCallParticipantGuardFlowFactory.makeUnsupportedFeatureGuardFlow()()
{
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  LOBYTE(outlined init with take of PhoneCallNLIntent?(v0, v1, v3) = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 136LL))(v5);
  OUTLINED_FUNCTION_38_1();
  outlined init with copy of SignalProviding((uint64_t)(v0 + 2), (uint64_t)v11);
  uint64_t v6 = type metadata accessor for UnsupportedFlowCATsSimple(0LL);
  static CATOption.defaultMode.getter(v6);
  uint64_t v7 = CATWrapperSimple.__allocating_init(options:globals:)(v2, 0LL);
  uint64_t v8 = type metadata accessor for UnsupportedFeatureGuardFlow();
  OUTLINED_FUNCTION_8_2(v8, 72LL);
  *(void *)&v11[0] = UnsupportedFeatureGuardFlow.init(check:sharedGlobals:unsupportedFlowCATsSimple:)(v3 & 1, v11, v7);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFeatureGuardFlow and conformance UnsupportedFeatureGuardFlow,  (uint64_t (*)(uint64_t))type metadata accessor for UnsupportedFeatureGuardFlow,  (uint64_t)&protocol conformance descriptor for UnsupportedFeatureGuardFlow);
  Flow.eraseToAnyValueFlow()(v8);
  OUTLINED_FUNCTION_3_49();
  return v11;
}

uint64_t AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallStateGuardCheck>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 224LL);
  *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_328A80;
  uint64_t v4 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4148A8, 33LL);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = closure #1 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
  uint64_t v5 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4148D0, 32LL);
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = partial apply for implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  uint64_t v6 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4148F8, 48LL);
  __int128 v6[2] = specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:);
  void v6[3] = 0LL;
  v6[4] = partial apply for implicit closure #4 in CallStateGuardCheck.init(_:description:onFail:);
  v6[5] = v5;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = partial apply for implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:);
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = partial apply for closure #1 in CallStateGuardCheck.init(_:description:onFail:);
  *(void *)(v3 + 56) = v6;
  uint64_t v7 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414920, 33LL);
  *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = swift_getKeyPath(&unk_33D188);
  *(void *)(v7 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2;
  uint64_t v8 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414948, 33LL);
  *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *(void *)(v8 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 3;
  uint64_t v9 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414970, 33LL);
  *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *(void *)(v9 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 3;
  uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414998, 32LL);
  *(void *)(v10 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = partial apply for implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v10 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  unint64_t v11 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4149C0, 48LL);
  __int128 v11[2] = _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSSycfu1_TA_0;
  v11[3] = v9;
  v11[4] = partial apply for implicit closure #4 in CallStateGuardCheck.init(_:description:onFail:);
  void v11[5] = v10;
  *(void *)(v3 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSbAA0bF9Providing_pcAFcfu_SbAaJ_pcfu0_TA_0;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  *(void *)(v3 + 80) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v3 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v11;
  uint64_t KeyPath = swift_getKeyPath(&unk_33D1B0);
  uint64_t v13 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4149E8, 33LL);
  *(void *)(v13 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = KeyPath;
  *(void *)(v13 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v13 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2;
  uint64_t v14 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414A10, 33LL);
  *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = KeyPath;
  *(void *)(v14 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v14 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2;
  uint64_t v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414A38, 32LL);
  *(void *)(v15 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = partial apply for implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v15 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  uint64_t v16 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_414A60, 48LL);
  void v16[2] = implicit closure #3 in CallStateGuardCheck.init(_:onFail:)partial apply;
  _BYTE v16[3] = v14;
  v16[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v16[5] = v15;
  *(void *)(v3 + 96) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:)partial apply;
  *(void *)(v3 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v13;
  *(void *)(v3 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v3 + 120) = v16;
  uint64_t v17 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414A88, 33LL);
  *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v17 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v17 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
  uint64_t v18 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414AB0, 32LL);
  *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = partial apply for implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v18 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  id v19 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_414AD8, 48LL);
  __int128 v19[2] = specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:);
  uint64_t v19[3] = 0LL;
  v19[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  void v19[5] = v18;
  *(void *)(v3 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v3 + 136) = v17;
  *(void *)(v3 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v19;
  uint64_t v20 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414920, 33LL);
  *(void *)(v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = closure #3 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v20 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v20 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
  uint64_t v21 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414B00, 33LL);
  *(void *)(v21 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v20;
  *(void *)(v21 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(_BYTE *)(v21 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 3;
  uint64_t v22 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414B28, 32LL);
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = partial apply for implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v22 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  unint64_t v23 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_414B50, 48LL);
  v23[2] = specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:);
  void v23[3] = 0LL;
  v23[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  void v23[5] = v22;
  *(void *)(v3 + 160) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v3 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v21;
  *(void *)(v3 + 176) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v3 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v23;
  uint64_t v24 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414B78, 33LL);
  *(_OWORD *)(v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D8A0;
  *(_BYTE *)(v24 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  uint64_t v25 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414BA0, 33LL);
  *(_OWORD *)(v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D8A0;
  *(_BYTE *)(v25 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  uint64_t v26 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414BC8, 32LL);
  *(void *)(v26 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = partial apply for implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  *(void *)(v26 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  uint64_t v27 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_414BF0, 48LL);
  __int128 v27[2] = implicit closure #3 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v27[3] = v25;
  v27[4] = implicit closure #4 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v27[5] = v26;
  *(void *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:)partial apply;
  *(void *)(v3 + 200) = v24;
  *(void *)(v3 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 16) = v27;
  outlined init with copy of SignalProviding(v1 + 16, (uint64_t)v32);
  uint64_t v28 = type metadata accessor for CallStateGuardFlow();
  OUTLINED_FUNCTION_8_2(v28, 65LL);
  uint64_t v29 = CallStateGuardFlow.init(checks:sharedGlobals:)(v3, v32);
  *(void *)&v32[0] = v29;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type CallStateGuardFlow and conformance CallStateGuardFlow,  (uint64_t (*)(uint64_t))type metadata accessor for CallStateGuardFlow,  (uint64_t)&protocol conformance descriptor for CallStateGuardFlow);
  swift_retain_n(v1, 6LL);
  swift_retain();
  swift_retain();
  uint64_t v30 = Flow.eraseToAnyValueFlow()(v28);
  swift_release(v29);
  return v30;
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2) & 1;
}

void partial apply for implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)( uint64_t a1)
{
  return implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:description:onFail:)( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32));
}

void partial apply for implicit closure #4 in CallStateGuardCheck.init(_:description:onFail:)()
{
}

uint64_t implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E54C);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  return AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog()();
}

uint64_t implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()( uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_22_2();
  if (!v1) {
    uint64_t v4 = a1;
  }
  return OUTLINED_FUNCTION_116_1(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t key path getter for SPHCallCapabilities.isGreenTea : SPHCallCapabilities@<X0>( void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  *a2 = result & 1;
  return result;
}

void partial apply for implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
}

uint64_t _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSbAA0bF9Providing_pcAFcfu_SbAaJ_pcfu0_TA_0( uint64_t a1)
{
  return implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:)( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32));
}

uint64_t _s27PhoneCallFlowDelegatePlugin0B15StateGuardCheckV_6onFailAcA06CommonbF9PredicateO_07SiriKitC003AnyC0CyXAtcfcSSycfu1_TA_0()
{
  return implicit closure #3 in CallStateGuardCheck.init(_:onFail:)( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(unsigned __int8 *)(v0 + 32));
}

uint64_t implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E554);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  return AddCallParticipantGuardFlowFactory.makeRestrictedByRegionDialog()();
}

uint64_t key path getter for SPHCallCapabilities.isAddPersonEnabled : SPHCallCapabilities@<X0>( void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a2 = result & 1;
  return result;
}

void *implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1)
{
  uint64_t v2 = swift_allocObject(&unk_414C90, 32LL, 7LL);
  *(_DWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0;
  *(_BYTE *)(v2 + 20) = 1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  swift_retain();
  uint64_t v3 = AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)( (uint64_t)&closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)partial apply,  v2);
  swift_release(v2);
  return v3;
}

void *partial apply for implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #8 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0);
}

BOOL closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2);
  uint64_t v5 = specialized Set.count.getter(v4);
  swift_bridgeObjectRelease();
  return v5 < (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(ObjectType, a2);
}

void implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()( uint64_t a1, uint64_t a2)
{
}

void partial apply for implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
}

uint64_t implicit closure #12 in implicit closure #11 in implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E55C);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow();
  return AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog()();
}

uint64_t closure #3 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  return SPHCall.isFTAudioCallOnHold.getter(ObjectType, a2) & 1;
}

void *implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(uint64_t a1)
{
  uint64_t v2 = swift_allocObject(&unk_414C68, 32LL, 7LL);
  *(_DWORD *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 2;
  *(_BYTE *)(v2 + 20) = 0;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  swift_retain();
  uint64_t v3 = AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)( (uint64_t)&closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)partial apply,  v2);
  swift_release(v2);
  return v3;
}

void *partial apply for implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #14 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0);
}

void *implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 120))(v15, v2, v3);
  uint64_t v4 = v16;
  uint64_t v5 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  uint64_t v8 = v6;
  if (v6)
  {
    uint64_t v9 = v7;
    uint64_t ObjectType = swift_getObjectType(v6);
    int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(ObjectType, v9);
    swift_unknownObjectRelease(v8);
  }

  else
  {
    int v11 = 0;
  }

  __swift_destroy_boxed_opaque_existential_1(v15);
  uint64_t v12 = swift_allocObject(&unk_414C40, 32LL, 7LL);
  *(_DWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v11;
  *(_BYTE *)(v12 + 20) = v8 == 0;
  *(void *)(v12 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  swift_retain();
  uint64_t v13 = AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)( (uint64_t)&async function pointer to partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:),  v12);
  swift_release(v12);
  return v13;
}

void *partial apply for implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  return implicit closure #15 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()(v0);
}

uint64_t objectdestroy_5Tm()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void *AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2[5];
  uint64_t v7 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v17, v6, v7);
  uint64_t v8 = v18;
  uint64_t v9 = v19;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v17, v18);
  _BYTE v16[3] = v8;
  v16[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16LL))( boxed_opaque_existential_1,  v10,  v8);
  uint64_t v12 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_414C18, 40LL);
  v12[2] = a1;
  void v12[3] = a2;
  v12[4] = v3;
  uint64_t v13 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  OUTLINED_FUNCTION_15_2(v13);
  swift_retain();
  swift_retain();
  uint64_t v14 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v16,  &async function pointer to partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:),  v12);
  __swift_destroy_boxed_opaque_existential_1(v17);
  v17[0] = v14;
  Flow.eraseToAnyFlow()(v13);
  OUTLINED_FUNCTION_3_49();
  return v17;
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = type metadata accessor for DialogPhase(0LL);
  v4[11] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[12] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[13] = v7;
  v4[14] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:), 0LL, 0LL);
}

{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v5 = v4[15];
  uint64_t v7 = (void *)v4[10];
  uint64_t v6 = v4[11];
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4[18];
  uint64_t v17 = v5;
  specialized Array._endMutation()(a1, a2, a3, a4);
  v4[19] = v17;
  uint64_t v8 = v7 + 2;
  uint64_t v9 = v7[5];
  uint64_t v10 = v7[6];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 136))(v9, v10);
  int v11 = v4[5];
  uint64_t v12 = v4[6];
  uint64_t v13 = __swift_project_boxed_opaque_existential_1(v4 + 2, v11);
  static DialogPhase.error.getter(v13);
  OutputGenerationManifest.init(dialogPhase:_:)(v6, INStartAudioCallIntent.overwriteCallGroups(newCallGroups:), 0LL);
  uint64_t v14 = *(void *)(v12 + 8);
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1]);
  v4[20] = v15;
  *uint64_t v15 = v4;
  v15[1] = closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v4[7],  v17,  v4[14],  v11,  v14);
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)()
{
  uint64_t v1 = (int *)v0[8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 40LL);
  v0[15] = v3;
  *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31FE60;
  uint64_t v6 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v4 = (void *)swift_task_alloc(v1[1]);
  v0[16] = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:);
  return OUTLINED_FUNCTION_3_0(v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 136) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = *(void *)(*(void *)v0 + 104LL);
  uint64_t v1 = *(void *)(*(void *)v0 + 112LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 96LL);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 160LL));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v4, v5, v6);
}

{
  uint64_t v0;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 120);
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
  swift_release(v1);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog()()
{
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v0;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog());
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v3)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                  + **(void **)(*(void *)(v0 + 16) + 56LL)
                                                  + 48));
  *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  *uint64_t v1 = v0;
  v1[1] = AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog();
  return OUTLINED_FUNCTION_3_0(v3);
}

uint64_t AddCallParticipantGuardFlowFactory.makeNoTargetCallDialog()(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_14_1(*((void *)*v2 + 3));
  if (!v1) {
    uint64_t v4 = a1;
  }
  return OUTLINED_FUNCTION_116_1(v4, v2[1]);
}

uint64_t AddCallParticipantGuardFlowFactory.makeRestrictedByRegionDialog()()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for Locale.Region(0LL);
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = OUTLINED_FUNCTION_23(v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v1[6] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v17)(uint64_t);
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[2];
  uint64_t v6 = type metadata accessor for DialogLocationAddress.Builder(0LL);
  OUTLINED_FUNCTION_15_2(v6);
  uint64_t v7 = DialogLocationAddress.Builder.init()();
  uint64_t v8 = Locale.Region.init(stringLiteral:)(20035LL, 0xE200000000000000LL);
  Locale.Region.identifier.getter(v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_88(v1, 0LL, v10, v9);
  dispatch thunk of DialogLocationAddress.Builder.withCountryCode(_:)(v1);
  swift_release(v7);
  int v11 = outlined destroy of SpeakableString?(v1);
  uint64_t v12 = dispatch thunk of DialogLocationAddress.Builder.build()(v11);
  v0[7] = v12;
  OUTLINED_FUNCTION_38_1();
  uint64_t v13 = *(int **)(class metadata base offset for AddCallParticipantCATsSimple + **(void **)(v5 + 56) + 80);
  uint64_t v14 = v13[1];
  uint64_t v17 = (uint64_t (*)(uint64_t))((char *)v13 + *v13);
  swift_retain();
  uint64_t v15 = (void *)swift_task_alloc(v14);
  v0[8] = v15;
  *uint64_t v15 = v0;
  v15[1] = AddCallParticipantGuardFlowFactory.makeRestrictedByRegionDialog();
  return v17(v12);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[9] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release(v2[7]);
    v2[10] = v0;
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 56));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_116_1(*(void *)(v0 + 80), *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  swift_release_n(*(void *)(v0 + 56), 2LL);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog()()
{
  *(void *)(v1 + 56) = v0;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog());
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  void *v5;
  uint64_t (*v7)(uint64_t);
  OUTLINED_FUNCTION_9_76(*(void **)(v0 + 56));
  uint64_t v2 = OUTLINED_FUNCTION_10_75();
  if (v2)
  {
    OUTLINED_FUNCTION_31_44(v2);
    OUTLINED_FUNCTION_23_57();
    OUTLINED_FUNCTION_24_49();
  }

  else
  {
    uint64_t v1 = 0LL;
  }

  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  uint64_t v3 = *(void *)(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  uint64_t v4 = *(int **)(class metadata base offset for AddCallParticipantCATsSimple + **(void **)(v3 + 56) + 32);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *uint64_t v5 = v0;
  v5[1] = AddCallParticipantGuardFlowFactory.makeMaxParticipantsReachedDialog();
  return v7(v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 88));
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  _BYTE v2[8] = a2;
  unint64_t v3 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?)
                              - 8)
                  + 64LL)
      + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[9] = swift_task_alloc(v3);
  v2[10] = swift_task_alloc(v3);
  v2[11] = swift_task_alloc(v3);
  return swift_task_switch(closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:), 0LL, 0LL);
}

id closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)()
{
  uint64_t v2 = *(void *)(v0 + 56);
  if ((v2 & 0x100000000LL) != 0) {
    goto LABEL_9;
  }
  if ((v2 - 3) >= 2)
  {
    if ((_DWORD)v2 == 2)
    {
      id result = (id)TUStringForCallStatus(2LL);
      if (result)
      {
        uint64_t v4 = result;
        uint64_t v6 = *(void *)(v0 + 80);
        uint64_t v5 = *(void *)(v0 + 88);
        goto LABEL_8;
      }

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)()
{
  *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v2 + 120) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_29_42();
  outlined destroy of SpeakableString?(v0);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))(*(void *)(v1 + 120));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_29_42();
  outlined destroy of SpeakableString?(v0);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t type metadata accessor for AddCallParticipantGuardFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin34AddCallParticipantGuardFlowFactory);
}

uint64_t sub_29B960()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)( uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_43E624);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in AddCallParticipantGuardFlowFactory.makeErrorFlow(withDialog:)(a1, v4, v5, v6);
}

uint64_t partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E634);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_142_2( v1,  (uint64_t)partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:));
  return OUTLINED_FUNCTION_4_99(v2, v3);
}

uint64_t sub_29BA34()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)partial apply()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E634);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_142_2(v1, (uint64_t)partial apply for closure #1 in RestrictionCheckGuardFlow.execute());
  return OUTLINED_FUNCTION_4_99(v2, v3);
}

uint64_t partial apply for implicit closure #12 in implicit closure #11 in implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E64C);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  OUTLINED_FUNCTION_19_64( v1,  (uint64_t)partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:));
  return implicit closure #12 in implicit closure #11 in implicit closure #10 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()();
}

uint64_t partial apply for implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E664);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  OUTLINED_FUNCTION_19_64( v1,  (uint64_t)partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:));
  return implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()();
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43E674);
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
  OUTLINED_FUNCTION_19_64( v1,  (uint64_t)partial apply for closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:));
  return implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow()();
}

uint64_t OUTLINED_FUNCTION_4_99(uint64_t a1, uint64_t a2)
{
  return closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:)(a1, a2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_9_76@<X0>(void *a1@<X8>)
{
  uint64_t v1 = a1[5];
  uint64_t v2 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_10_75()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_19_64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_23_57()
{
  return SPHCall.toPhoneCallRecord()();
}

uint64_t OUTLINED_FUNCTION_24_49()
{
  return swift_unknownObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_29_42()
{
  return swift_release(*(void *)(v0 + 96));
}

uint64_t OUTLINED_FUNCTION_31_44(uint64_t a1)
{
  return swift_getObjectType(a1);
}

PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional __swiftcall TrialSmartAppSelectionConfigKey.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of TrialSmartAppSelectionConfigKey.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional)v3;
  }
}

uint64_t TrialSmartAppSelectionConfigKey.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_29BCD8 + 4 * byte_33D220[a1]))( 0xD000000000000017LL,  0x8000000000346110LL);
}

unint64_t sub_29BCD8()
{
  return 0xD000000000000016LL;
}

uint64_t sub_29BCF4()
{
  return 0x6567617355707061LL;
}

uint64_t sub_29BD14()
{
  return 0x63656C6553707061LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance TrialSmartAppSelectionConfigKey( char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance TrialSmartAppSelectionConfigKey()
{
}

void protocol witness for Hashable.hash(into:) in conformance TrialSmartAppSelectionConfigKey()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance TrialSmartAppSelectionConfigKey( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional protocol witness for RawRepresentable.init(rawValue:) in conformance TrialSmartAppSelectionConfigKey@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::TrialSmartAppSelectionConfigKey_optional *a2@<X8>)
{
  result.value = TrialSmartAppSelectionConfigKey.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance TrialSmartAppSelectionConfigKey@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = TrialSmartAppSelectionConfigKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t type metadata accessor for TRIClient()
{
  unint64_t result = lazy cache variable for type metadata for TRIClient;
  if (!lazy cache variable for type metadata for TRIClient)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___TRIClient);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TRIClient);
  }

  return result;
}

uint64_t specialized static FixedWidthInteger.random<A>(in:using:)(uint64_t a1, uint64_t a2)
{
  if (a2 - a1 != -1) {
    return specialized RandomNumberGenerator.next<A>(upperBound:)(a2 - a1 + 1) + a1;
  }
  uint64_t v3 = 0LL;
  swift_stdlib_random(&v3, 8LL);
  return v3;
}

unint64_t lazy protocol witness table accessor for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey()
{
  unint64_t result = lazy protocol witness table cache variable for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey;
  if (!lazy protocol witness table cache variable for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for TrialSmartAppSelectionConfigKey,  &type metadata for TrialSmartAppSelectionConfigKey);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type TrialSmartAppSelectionConfigKey and conformance TrialSmartAppSelectionConfigKey);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for TrialSmartAppSelectionConfigKey( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_29BECC + 4 * byte_33D22D[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_29BF00 + 4 * byte_33D228[v4]))();
}

uint64_t sub_29BF00(uint64_t result)
{
  *(_BYTE *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_29BF08(uint64_t result, int a2)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (a2) {
    JUMPOUT(0x29BF10LL);
  }
  return result;
}

uint64_t sub_29BF1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (!a2) {
    JUMPOUT(0x29BF24LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_29BF28(uint64_t result)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_29BF30(uint64_t result)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrialSmartAppSelectionConfigKey()
{
  return &type metadata for TrialSmartAppSelectionConfigKey;
}

uint64_t OUTLINED_FUNCTION_1_95(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain_n(v2, 2LL);
}

uint64_t OUTLINED_FUNCTION_2_86(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_3_116(uint64_t a1, uint64_t a2, unint64_t a3, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, (uint64_t *)va);
}

void OUTLINED_FUNCTION_4_100(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_8_81(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v7 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)va, va1, v5, a4);
}

uint64_t OUTLINED_FUNCTION_9_77( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  a10 = v11;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a10, &a11, a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_76()
{
  *(_WORD *)(v1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_11_82( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a10, v11, v10, a4);
}

uint64_t OUTLINED_FUNCTION_12_87( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return swift_arrayDestroy(a9, 2LL);
}

BOOL OUTLINED_FUNCTION_15_75(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t BurstNotificationSearchManager.init(sharedGlobals:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(v10, v2, v3);
  OUTLINED_FUNCTION_6_96();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  a2[8] = &type metadata for BurstVoicemailFinder;
  a2[9] = &protocol witness table for BurstVoicemailFinder;
  uint64_t v7 = swift_allocObject(&unk_414DA0, 96LL, 7LL);
  uint64_t v8 = v7 + 16;
  a2[5] = v7;
  v6(v2, v3);
  outlined init with take of AppSelectionSignalComponent(v10, v8);
  outlined init with take of AppSelectionSignalComponent(v11, (uint64_t)a2);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_29C0E8()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t BurstNotificationSearchManager.findIncomingNotifications(after:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v6 = (void *)swift_task_alloc(dword_43E744);
  *(void *)(v3 + 160) = v6;
  *uint64_t v6 = v3;
  v6[1] = BurstNotificationSearchManager.findIncomingNotifications(after:);
  return BurstNotificationSearchManager.submitNotificationsSearch(after:)(a1, a2);
}

uint64_t BurstNotificationSearchManager.findIncomingNotifications(after:)(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168LL) = a1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t BurstNotificationSearchManager.findIncomingNotifications(after:)()
{
  uint64_t v103 = (uint64_t)(v1 + 18);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = v1[21];
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = swift_bridgeObjectRetain_n(v2, 2LL);
  uint64_t v101 = v4;
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  int v8 = static os_log_type_t.debug.getter(v6, v7);
  BOOL v9 = os_log_type_enabled(v6, (os_log_type_t)v8);
  uint64_t v10 = v1[21];
  uint64_t v11 = (uint64_t)&unk_31F000;
  uint64_t v108 = v1;
  uint64_t v104 = v10;
  if (v9)
  {
    uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v13 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v109 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    if ((unint64_t)v10 >> 62)
    {
      OUTLINED_FUNCTION_6_3();
      uint64_t v14 = OUTLINED_FUNCTION_15_4();
      OUTLINED_FUNCTION_62();
    }

    else
    {
      uint64_t v14 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v11 = (uint64_t)_swiftEmptyArrayStorage;
    if (v14)
    {
      uint64_t v110 = _swiftEmptyArrayStorage;
      uint64_t v15 = specialized ContiguousArray.reserveCapacity(_:)(v14);
      if (v14 < 0)
      {
        __break(1u);
        JUMPOUT(0x29C9E8LL);
      }

      uint64_t v99 = v13;
      LODWORD(v10__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v8;
      uint64_t v23 = 0LL;
      uint64_t v24 = v1[21];
      unint64_t v25 = v104 & 0xC000000000000001LL;
      uint64_t v26 = v24 + 32;
      do
      {
        if (v25) {
          id v27 = (id)OUTLINED_FUNCTION_7_105( v15,  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v98,  v99,  v101,  v103,  v104,  v105,  (uint64_t)v108);
        }
        else {
          id v27 = *(id *)(v26 + 8 * v23);
        }
        uint64_t v28 = v27;
        ++v23;
        id v29 = [v27 dictionary];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        uint64_t v31 = v110[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
        uint64_t v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
        uint64_t v15 = specialized ContiguousArray._endMutation()(v32);
      }

      while (v14 != v23);
      uint64_t v11 = (uint64_t)v110;
      uint64_t v1 = v108;
      LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v105;
      uint64_t v13 = v99;
    }

    uint64_t v0 = (uint64_t)(v12 + 4);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSMutableDictionary?);
    uint64_t v34 = Array.description.getter(v11, v33);
    unint64_t v36 = v35;
    OUTLINED_FUNCTION_62();
    v1[18] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v103, v1 + 19, v12 + 4);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_12();
    OUTLINED_FUNCTION_57_0(&dword_0, v6, (os_log_type_t)v8, "#BurstNotificationSearchManager notifications: %s", v12);
    OUTLINED_FUNCTION_17_0(v13);
    OUTLINED_FUNCTION_0_2(v13);
    OUTLINED_FUNCTION_0_2((uint64_t)v12);

    uint64_t v10 = v104;
  }

  else
  {
    OUTLINED_FUNCTION_2_12();
  }

  unint64_t v37 = v1[21];
  uint64_t v110 = _swiftEmptyArrayStorage;
  uint64_t v100 = v37 >> 62;
  if (v37 >> 62)
  {
    if (v10 < 0) {
      uint64_t v11 = v37;
    }
    else {
      uint64_t v11 = v10 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter(v11);
    uint64_t v38 = v39;
    if (v39) {
      goto LABEL_18;
    }
LABEL_40:
    uint64_t v11 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_41;
  }

  uint64_t v38 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8LL));
  uint64_t v39 = swift_bridgeObjectRetain();
  if (!v38) {
    goto LABEL_40;
  }
LABEL_18:
  if (v38 < 1)
  {
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }

  uint64_t v0 = 0LL;
  unint64_t v47 = v104 & 0xC000000000000001LL;
  uint64_t v106 = v1[21] + 32LL;
  uint64_t v48 = SANotificationTypeIncomingVoiceMailNotificationValue;
  do
  {
    if (v47) {
      id v49 = (id)OUTLINED_FUNCTION_7_105( v39,  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v98,  v100,  v101,  v103,  v104,  v106,  (uint64_t)v108);
    }
    else {
      id v49 = *(id *)(v106 + 8 * v0);
    }
    uint64_t v50 = v49;
    uint64_t v51 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter( v49,  (SEL *)&selRef_announcementType);
    uint64_t v53 = v52;
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    if (!v53)
    {
      OUTLINED_FUNCTION_87_0();
LABEL_31:

      goto LABEL_34;
    }

    if (v51 == v54 && v53 == v55)
    {
      OUTLINED_FUNCTION_87_0();
      uint64_t v58 = OUTLINED_FUNCTION_62();
    }

    else
    {
      char v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v54, v55, 0LL);
      OUTLINED_FUNCTION_87_0();
      uint64_t v58 = OUTLINED_FUNCTION_62();
      if ((v57 & 1) == 0) {
        goto LABEL_31;
      }
    }

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v58);
    uint64_t v59 = v110[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v59);
    uint64_t v60 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v50);
    uint64_t v39 = specialized ContiguousArray._endMutation()(v60);
LABEL_34:
    ++v0;
  }

  while (v38 != v0);
  uint64_t v11 = (uint64_t)v110;
LABEL_41:
  swift_bridgeObjectRelease();
  if (v11 < 0 || (v11 & 0x4000000000000000LL) != 0)
  {
    uint64_t v73 = swift_retain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter(v73);
    if (!v38) {
      goto LABEL_58;
    }
LABEL_44:
    if (v38 >= 1)
    {
      uint64_t v61 = 0LL;
      uint64_t v62 = _swiftEmptyArrayStorage;
      do
      {
        if ((v11 & 0xC000000000000001LL) != 0) {
          id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v11);
        }
        else {
          id v63 = *(id *)(v11 + 8 * v61 + 32);
        }
        uint64_t v64 = v63;
        uint64_t v65 = outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter( v63,  (SEL *)&selRef_notificationId);
        uint64_t v67 = v66;

        if (v67)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v62) & 1) == 0)
          {
            OUTLINED_FUNCTION_13_85(0LL, v62[2] + 1LL);
            uint64_t v62 = v71;
          }

          unint64_t v69 = v62[2];
          unint64_t v68 = v62[3];
          if (v69 >= v68 >> 1)
          {
            OUTLINED_FUNCTION_13_85(v68 > 1, v69 + 1);
            uint64_t v62 = v72;
          }

          v62[2] = v69 + 1;
          uint64_t v70 = &v62[2 * v69];
          v70[4] = v65;
          void v70[5] = v67;
        }

        ++v61;
      }

      while (v38 != v61);
      goto LABEL_58;
    }

    goto LABEL_81;
  }

  uint64_t v38 = *(void *)(v11 + 16);
  swift_retain();
  if (v38) {
    goto LABEL_44;
  }
LABEL_58:
  char v74 = v108;
  uint64_t v75 = v108 + 2;
  uint64_t v76 = v108[19];
  OUTLINED_FUNCTION_34_0();
  swift_release_n(v11, 2LL);
  uint64_t v77 = outlined init with copy of BurstNotificationSearchManager(v76, (uint64_t)(v108 + 2));
  uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
  os_log_type_t v80 = static os_log_type_t.debug.getter(v78, v79);
  if (os_log_type_enabled(v78, v80))
  {
    uint64_t v102 = v108 + 17;
    uint64_t v81 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v107 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v110 = (void *)v107;
    *(_DWORD *)uint64_t v81 = 136315138;
    uint64_t v83 = v108[5];
    uint64_t v82 = v108[6];
    __swift_project_boxed_opaque_existential_1(v75, v83);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v82);
    uint64_t v84 = v108[15];
    uint64_t v85 = v108[16];
    OUTLINED_FUNCTION_9_78();
    uint64_t v86 = DeviceState.idiom.getter(v84, v85);
    switch((int)v86)
    {
      case 1:
        uint64_t v87 = @"PHONE";
        goto LABEL_69;
      case 2:
        uint64_t v87 = @"PAD";
        goto LABEL_69;
      case 3:
        uint64_t v87 = @"WATCH";
        goto LABEL_69;
      case 4:
        uint64_t v87 = @"HOME_POD";
        goto LABEL_69;
      case 5:
        uint64_t v87 = @"CARPLAY";
        goto LABEL_69;
      case 6:
        uint64_t v87 = @"APPLE_TV";
        goto LABEL_69;
      case 7:
        uint64_t v87 = @"MAC";
LABEL_69:
        int v88 = v87;
        break;
      default:
        uint64_t v87 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v86));
        break;
    }

    uint64_t v89 = v87;
    __swift_destroy_boxed_opaque_existential_1(v108 + 12);
    uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
    unint64_t v92 = v91;

    *uint64_t v102 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v92, (uint64_t *)&v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v102, v103, v81 + 4);
    OUTLINED_FUNCTION_87_0();
    outlined destroy of BurstNotificationSearchManager(v75);
    OUTLINED_FUNCTION_57_0( &dword_0,  v78,  v80,  "#BurstNotificationSearchManager No voicemail notifications, or unsupported platform. Idiom: %s",  v81);
    OUTLINED_FUNCTION_17_0(v107);
    OUTLINED_FUNCTION_0_2(v107);
    OUTLINED_FUNCTION_0_2((uint64_t)v81);
  }

  else
  {
    outlined destroy of BurstNotificationSearchManager(v75);
  }

  if (v100)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_34_0();
    swift_bridgeObjectRetain();
    uint64_t v38 = OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_34_0();
    if (!v38) {
      goto LABEL_78;
    }
LABEL_73:
    uint64_t v0 = v38 - 1;
    if (!__OFSUB__(v38, 1LL))
    {
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v0, (v104 & 0xC000000000000001LL) == 0, v108[21]);
      uint64_t v38 = v108[21];
      if ((v104 & 0xC000000000000001LL) == 0)
      {
        id v93 = *(id *)(v38 + 8 * v0 + 32);
        char v74 = v108;
LABEL_76:
        OUTLINED_FUNCTION_39();
        uint64_t v94 = outlined bridged method (ob) of @objc SANotificationObject.notificationId.getter(v93);
        uint64_t v96 = v95;
        return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))v74[1])( _swiftEmptyArrayStorage,  v11,  v94,  v96);
      }

uint64_t BurstNotificationSearchManager.submitNotificationsSearch(after:)(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  return swift_task_switch(BurstNotificationSearchManager.submitNotificationsSearch(after:), 0LL, 0LL);
}

uint64_t BurstNotificationSearchManager.submitNotificationsSearch(after:)(uint64_t a1)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = (void *)v1[11];
  uint64_t v4 = v1[9];
  OUTLINED_FUNCTION_49( a1,  &lazy cache variable for type metadata for SANotificationsSearch,  &OBJC_CLASS___SANotificationsSearch_ptr);
  OUTLINED_FUNCTION_6_3();
  SANotificationsSearch.init(after:isOnDeviceSearch:)(v4, v2, 1);
  uint64_t v6 = v5;
  v1[12] = v5;
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  OUTLINED_FUNCTION_9_78();
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to AceServiceInvokerAsync.submit<A>(_:)[1]);
  v1[13] = v11;
  uint64_t v12 = OUTLINED_FUNCTION_49( (uint64_t)v11,  &lazy cache variable for type metadata for SAOnDeviceNotificationsSearchCompleted,  &OBJC_CLASS___SAOnDeviceNotificationsSearchCompleted_ptr);
  *uint64_t v11 = v1;
  v11[1] = BurstNotificationSearchManager.submitNotificationsSearch(after:);
  return AceServiceInvokerAsync.submit<A>(_:)(v6, v9, v12, v10);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v3 = *v2;
  *(void *)(v3 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t BurstNotificationSearchManager.submitNotificationsSearch(after:)()
{
  uint64_t v1 = *(void **)(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  uint64_t result = outlined bridged method (pb) of @objc SAOnDeviceNotificationsSearchCompleted.notifications.getter(v1);
  if (result)
  {
    unint64_t v3 = result;

    uint64_t v4 = *(void *)(v0 + 120);
    if (v3 >> 62)
    {
      unint64_t v6 = OUTLINED_FUNCTION_6_3();
      specialized _copyCollectionToContiguousArray<A>(_:)(v6);
      uint64_t v5 = v7;
      OUTLINED_FUNCTION_62();
    }

    else
    {
      uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8LL;
      OUTLINED_FUNCTION_6_3();
    }

    uint64_t v8 = v5;
    specialized MutableCollection<>.sort(by:)(&v8);
    if (v4)
    {
      return swift_release(v8);
    }

    else
    {

      OUTLINED_FUNCTION_62();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_s *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18[2];
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  swift_errorRetain(v1);
  unint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  uint64_t v5 = static os_log_type_t.error.getter();
  unint64_t v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 120);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v9 = OUTLINED_FUNCTION_7_0(32LL);
    v18[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)(v0 + 56) = v7;
    swift_errorRetain(v7);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    uint64_t v11 = String.init<A>(describing:)(v0 + 56, v10);
    *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v8 + 4);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_57_0( &dword_0,  v4,  v5,  "#BurstNotificationSearchManager Encountered error submitting SANotificationsSearch: %s. Returning no notifications found.",  v8);
    OUTLINED_FUNCTION_17_0(v9);
    OUTLINED_FUNCTION_0_2(v9);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  else
  {
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_9_16();
  }

  swift_errorRelease(*(void *)(v0 + 120));
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = ((unint64_t)v13 >> 62) & 1;
  if (v13 < 0) {
    LOBYTE(v1__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  if ((v14 & 1) != 0)
  {
    specialized _copyCollectionToContiguousArray<A>(_:)((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v15 = v17;
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8LL;
  }

  v18[0] = v15;
  specialized MutableCollection<>.sort(by:)(v18);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18[0]);
}

uint64_t protocol witness for BurstNotificationSearchManagerProtocol.findIncomingNotifications(after:) in conformance BurstNotificationSearchManager( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_43E73C);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for BurstNotificationSearchManagerProtocol.findIncomingNotifications(after:) in conformance BurstNotificationSearchManager;
  return BurstNotificationSearchManager.findIncomingNotifications(after:)(a1, a2);
}

uint64_t protocol witness for BurstNotificationSearchManagerProtocol.findIncomingNotifications(after:) in conformance BurstNotificationSearchManager( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  swift_task_dealloc(*(void *)(*v4 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, a3, a4);
}

uint64_t outlined bridged method (pb) of @objc SAOnDeviceNotificationsSearchCompleted.notifications.getter( void *a1)
{
  id v1 = [a1 notifications];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = OUTLINED_FUNCTION_49( (uint64_t)v1,  &lazy cache variable for type metadata for SANotificationOnDeviceObject,  &OBJC_CLASS___SANotificationOnDeviceObject_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

ValueMetadata *type metadata accessor for BurstNotificationSearchManager()
{
  return &type metadata for BurstNotificationSearchManager;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew()()
{
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  *(void *)(a1 + 16),  0LL,  a1);
}

void *OUTLINED_FUNCTION_6_96()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_7_105( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(v15, *(void *)(a15 + 168));
}

void *OUTLINED_FUNCTION_9_78()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

void OUTLINED_FUNCTION_13_85(uint64_t a1, uint64_t a2)
{
}

uint64_t PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)@<X0>( void *a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = OUTLINED_FUNCTION_109_9(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 112));
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = CurrentRequest.executionRequestId.getter();
    uint64_t v13 = v12;
    swift_release(v10);
  }

  else
  {
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
  }

  v17[0] = v11;
  v17[1] = v13;
  __int128 v17[2] = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)&v17[3]);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  OUTLINED_FUNCTION_66(a1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 216))(&v17[8], v14, v15);
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)&v17[13]);
  memcpy(a4, v17, 0x90uLL);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

NSUUID __swiftcall PhoneAppResolutionLogger.CodePathId.uuid()()
{
  if ((v0 & 1) != 0) {
    uint64_t v1 = (void *)0x80000000003466D0LL;
  }
  else {
    uint64_t v1 = (void *)0x80000000003466A0LL;
  }
  OUTLINED_FUNCTION_49( v0,  (unint64_t *)&lazy cache variable for type metadata for NSUUID,  &OBJC_CLASS___NSUUID_ptr);
  v2._uint64_t countAndFlagsBits = 0xD000000000000024LL;
  v2._object = v1;
  result.super.Class isa = (Class)NSUUID.__allocating_init(uuidString:)(v2);
  if (result.super.isa) {
    OUTLINED_FUNCTION_2();
  }
  else {
    __break(1u);
  }
  return result;
}

unint64_t PhoneAppResolutionLogger.CodePathId.rawValue.getter()
{
  return 0xD000000000000024LL;
}

PhoneCallFlowDelegatePlugin::PhoneAppResolutionLogger::CodePathId_optional __swiftcall PhoneAppResolutionLogger.CodePathId.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneAppResolutionLogger.CodePathId.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneAppResolutionLogger_CodePathId_testing;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneAppResolutionLogger_CodePathId_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static PhoneAppResolutionLogger.CodePathId.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneAppResolutionLogger.CodePathId.allCases.getter;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneAppResolutionLogger.CodePathId( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneAppResolutionLogger.CodePathId()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneAppResolutionLogger.CodePathId()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneAppResolutionLogger.CodePathId( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneAppResolutionLogger::CodePathId_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneAppResolutionLogger.CodePathId@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneAppResolutionLogger::CodePathId_optional *a2@<X8>)
{
  result.value = PhoneAppResolutionLogger.CodePathId.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneAppResolutionLogger.CodePathId@<X0>( void *a1@<X8>)
{
  unint64_t result = PhoneAppResolutionLogger.CodePathId.rawValue.getter();
  *a1 = 0xD000000000000024LL;
  a1[1] = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneAppResolutionLogger.CodePathId( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneAppResolutionLogger.CodePathId.allCases.getter;
}

void one-time initialization function for namespaces()
{
  static PhoneAppResolutionLogger.namespaces = (uint64_t)&outlined read-only object #0 of one-time initialization function for namespaces;
}

uint64_t *PhoneAppResolutionLogger.namespaces.unsafeMutableAddressor()
{
  if (one-time initialization token for namespaces != -1) {
    swift_once(&one-time initialization token for namespaces, one-time initialization function for namespaces);
  }
  return &static PhoneAppResolutionLogger.namespaces;
}

uint64_t static PhoneAppResolutionLogger.namespaces.getter()
{
  if (one-time initialization token for namespaces != -1) {
    swift_once(&one-time initialization token for namespaces, one-time initialization function for namespaces);
  }
  return swift_bridgeObjectRetain();
}

uint64_t PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)( char a1, void *a2)
{
  char v3 = a1 & 1;
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  unint64_t v6 = __swift_project_boxed_opaque_existential_1(a2, v4);
  return specialized PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)( v3,  (uint64_t)v6,  v2,  v4,  v5);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(_BYTE *)(v7 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a7;
  *(void *)(v7 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a5;
  *(void *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  *(void *)(v7 + 56) = a4;
  return swift_task_switch( closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:),  0LL,  0LL);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)( uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 56);
  Swift::String v2 = *(void **)(v1 + 64);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_49( a1,  (unint64_t *)&lazy cache variable for type metadata for NSUUID,  &OBJC_CLASS___NSUUID_ptr);
  *(void *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v3;
  v5._object = v2;
  unint64_t v6 = (unint64_t)NSUUID.__allocating_init(uuidString:)(v5);
  *(void *)(v1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  if (v6)
  {
    char v7 = *(_BYTE *)(v1 + 144);
    uint64_t v8 = *(void **)(v1 + 72);
    uint64_t v9 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    if ((v7 & 1) != 0) {
      unint64_t v10 = 0x80000000003466D0LL;
    }
    else {
      unint64_t v10 = 0x80000000003466A0LL;
    }
    unint64_t v11 = 0xD000000000000024LL;
    uint64_t result = (unint64_t)NSUUID.__allocating_init(uuidString:)(*(Swift::String *)(&v10 - 1));
    *(void *)(v1 + 96) = result;
    if (result)
    {
      if (one-time initialization token for namespaces != -1) {
        swift_once(&one-time initialization token for namespaces, one-time initialization function for namespaces);
      }
      uint64_t v13 = (void *)swift_task_alloc(*(unsigned int *)(*(void *)(v9 + 8) + 4LL));
      *(void *)(v1 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v13;
      *uint64_t v13 = v1;
      v13[1] = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
      OUTLINED_FUNCTION_51_23();
      return OUTLINED_FUNCTION_14_28(v14, v15, v16, v17, v18);
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v19, (uint64_t)static Logger.siriPhone);
    os_log_type_t v20 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_27_1(v20))
    {
      uint64_t v21 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v21);
      OUTLINED_FUNCTION_5_13( &dword_0,  v22,  v23,  "#PhoneAppResolutionLogger emitTriggeredLog: Couldn't convert ID to a UUID, skipping triggered log");
      OUTLINED_FUNCTION_0_2(v3);
    }

    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  return result;
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc();
  if (!v0) {

  }
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v1 = *(void **)(v0 + 72);
  if ((*(_BYTE *)(v0 + 144) & 1) != 0) {
    uint64_t v2 = (void *)0x80000000003466D0LL;
  }
  else {
    uint64_t v2 = (void *)0x80000000003466A0LL;
  }
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4._uint64_t countAndFlagsBits = 0xD000000000000024LL;
  v4._object = v2;
  uint64_t result = (unint64_t)NSUUID.__allocating_init(uuidString:)(v4);
  *(void *)(v0 + 120) = result;
  if (result)
  {
    unint64_t v6 = *(unsigned int *)(*(void *)(v3 + 16) + 4LL);
    char v7 = *(id *)(v0 + 88);
    uint64_t v8 = (void *)swift_task_alloc(v6);
    *(void *)(v0 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v8;
    *uint64_t v8 = v0;
    v8[1] = closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:);
    OUTLINED_FUNCTION_51_23();
    return OUTLINED_FUNCTION_14_28(v9, v10, v11, v12, v13);
  }

  else
  {
    __break(1u);
  }

  return result;
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v3 = *(void **)(v2 + 88);
  }

  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;

  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  uint64_t v22;

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9_50();
  uint64_t v2 = OUTLINED_FUNCTION_9_50();
  uint64_t v3 = (void *)Logger.logObject.getter(v2);
  uint64_t v4 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_33_10(v4))
  {
    uint64_t v21 = *(void **)(v0 + 88);
    Swift::String v5 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
    OUTLINED_FUNCTION_18_63(4.8149e-34);
    unint64_t v6 = OUTLINED_FUNCTION_62_23();
    unint64_t v10 = OUTLINED_FUNCTION_61_24(v6, v7, v8, v9);
    OUTLINED_FUNCTION_23_58(v10, v11, v12, v13, v14, v15, v16, v17, v0 + 48);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_33_53( &dword_0,  v18,  v19,  "#PhoneAppResolutionLogger emitTriggeredLog: got %s while trying to emit triggered log; gave up without sending");
    OUTLINED_FUNCTION_17_0(v22);
    OUTLINED_FUNCTION_0_2(v22);
    OUTLINED_FUNCTION_0_2(v5);

    OUTLINED_FUNCTION_13_6();
  }

  else
  {

    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
  }

  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  uint64_t v22;

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9_50();
  uint64_t v2 = OUTLINED_FUNCTION_9_50();
  uint64_t v3 = (void *)Logger.logObject.getter(v2);
  uint64_t v4 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_33_10(v4))
  {
    uint64_t v21 = *(void **)(v0 + 88);
    Swift::String v5 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
    OUTLINED_FUNCTION_18_63(4.8149e-34);
    unint64_t v6 = OUTLINED_FUNCTION_62_23();
    unint64_t v10 = OUTLINED_FUNCTION_61_24(v6, v7, v8, v9);
    OUTLINED_FUNCTION_23_58(v10, v11, v12, v13, v14, v15, v16, v17, v0 + 48);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_33_53( &dword_0,  v18,  v19,  "#PhoneAppResolutionLogger emitTriggeredLog: got %s while trying to emit triggered log; gave up without sending");
    OUTLINED_FUNCTION_17_0(v22);
    OUTLINED_FUNCTION_0_2(v22);
    OUTLINED_FUNCTION_0_2(v5);

    OUTLINED_FUNCTION_13_6();
  }

  else
  {

    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
  }

  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a5;
  *(_BYTE *)(v5 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a4;
  unint64_t v6 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?)
                              - 8)
                  + 64LL)
      + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 56) = swift_task_alloc(v6);
  *(void *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for UUID(0LL);
  *(void *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v5 + 80) = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = swift_task_alloc(v9);
  *(void *)(v5 + 96) = swift_task_alloc(v9);
  *(void *)(v5 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = swift_task_alloc(v9);
  *(void *)(v5 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = swift_task_alloc(v9);
  *(void *)(v5 + 120) = swift_task_alloc(v9);
  return swift_task_switch(closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:), 0LL, 0LL);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)()
{
  uint64_t v2 = *(void **)(v1 + 48);
  uint64_t v3 = PhoneAppResolutionLogger.EvaluationResult.toSelfSchema()(*(_BYTE *)(v1 + 128));
  uint64_t v4 = v2[1];
  if (!v4) {
    goto LABEL_4;
  }
  uint64_t v5 = v3;
  uint64_t v0 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 72);
  OUTLINED_FUNCTION_124();
  uint64_t v7 = OUTLINED_FUNCTION_51_0();
  UUID.init(uuidString:)(v7, v8);
  if (__swift_getEnumTagSinglePayload(v0, 1LL, v6) == 1)
  {
    uint64_t v2 = *(void **)(v1 + 64);
    OUTLINED_FUNCTION_4_1();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v2,  (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_4:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v9 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v9, (uint64_t)static Logger.siriPhone);
    os_log_type_t v10 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v10))
    {
      unint64_t v11 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v11);
      OUTLINED_FUNCTION_5_13( &dword_0,  v12,  v13,  "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Skipping SELF message emission due to missing requestID");
      OUTLINED_FUNCTION_0_2(v0);
    }

    goto LABEL_34;
  }

  os_log_t log = (os_log_t)(v1 + 24);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 80) + 32LL);
  v14(*(void *)(v1 + 120), *(void *)(v1 + 64), *(void *)(v1 + 72));
  uint64_t v15 = (void *)objc_opt_self(&OBJC_CLASS___AssistantSiriAnalytics);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v17 = [v15 derivedIdentifierForComponentName:27 fromSourceIdentifier:isa];

  if (!v17)
  {
    OUTLINED_FUNCTION_29_1(*(void *)(v1 + 56), v18, v19, *(void *)(v1 + 72));
    goto LABEL_20;
  }

  uint64_t v20 = *(void *)(v1 + 104);
  uint64_t v21 = *(void *)(v1 + 72);
  uint64_t v22 = *(void *)(v1 + 56);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v14(v22, v20, v21);
  __swift_storeEnumTagSinglePayload(v22, 0LL, 1LL, v21);
  if (__swift_getEnumTagSinglePayload(v22, 1LL, v21) == 1)
  {
LABEL_20:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( *(void *)(v1 + 56),  (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v57 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v57, (uint64_t)static Logger.siriPhone);
    uint64_t v58 = OUTLINED_FUNCTION_124();
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.error.getter();
    BOOL v61 = os_log_type_enabled(v59, v60);
    uint64_t v62 = *(void *)(v1 + 120);
    uint64_t v63 = *(void *)(v1 + 72);
    uint64_t v64 = *(void *)(v1 + 80);
    if (v61)
    {
      uint64_t v106 = *(void *)(v1 + 80);
      uint64_t v103 = *(void *)(v1 + 120);
      uint64_t v65 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v108 = OUTLINED_FUNCTION_7_0(32LL);
      *(_DWORD *)uint64_t v65 = 136315138;
      OUTLINED_FUNCTION_124();
      uint64_t v66 = OUTLINED_FUNCTION_51_0();
      *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, log, v65 + 4);
      swift_bridgeObjectRelease_n(v4, 3LL);
      _os_log_impl( &dword_0,  v59,  v60,  "#PhoneAppResolutionLogger:emitAndLinkExecutionResultMessage Failed to create inferenceId with requestId: %s. Not logging to SELF",  v65,  0xCu);
      OUTLINED_FUNCTION_17_0(v108);
      OUTLINED_FUNCTION_0_2(v108);
      OUTLINED_FUNCTION_0_2((uint64_t)v65);

      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v103, v63);
    }

    else
    {

      OUTLINED_FUNCTION_28_16();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
    }

    goto LABEL_34;
  }

  uint64_t v23 = *(void *)(v1 + 112);
  uint64_t v24 = *(void *)(v1 + 56);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_68_26(v23, v24);
  unint64_t v25 = &CameraControlFlow + 64;
  id v26 = OUTLINED_FUNCTION_46_1(objc_allocWithZone(&OBJC_CLASS___INFERENCESchemaINFERENCEClientEvent));
  if (v26)
  {
    id v27 = v26;
    id v28 = OUTLINED_FUNCTION_46_1(objc_allocWithZone(&OBJC_CLASS___INFERENCESchemaINFERENCEClientEventMetadata));
    if (v28)
    {
      id v29 = v28;
      id v30 = OUTLINED_FUNCTION_46_1(objc_allocWithZone(&OBJC_CLASS___INFERENCESchemaINFERENCEABModelResultTriggered));
      if (v30)
      {
        uint64_t v31 = v30;
        unint64_t v25 = *(void **)(v1 + 48);
        uint64_t v32 = PhoneAppResolutionLogger.linkMessage(inferenceID:requestID:)(*(void *)(v1 + 112), *(void *)(v1 + 120));
        if (v32)
        {
          uint64_t v101 = v32;
          uint64_t v33 = *(void *)(v1 + 104);
          uint64_t v104 = *(void *)(v1 + 112);
          uint64_t v35 = *(void *)(v1 + 72);
          uint64_t v34 = *(void *)(v1 + 80);
          OUTLINED_FUNCTION_49( (uint64_t)v32,  (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID,  &OBJC_CLASS___SISchemaUUID_ptr);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v104, v35);
          id v36 = SISchemaUUID.__allocating_init(nsuuid:)();
          [v29 setInferenceId:v36];

          [v31 setTriggerReason:v5];
          [v31 setProjectIntent:5];
          uint64_t v102 = v31;
          [v27 setAbModelResultTriggered:v31];
          uint64_t v105 = v29;
          [v27 setEventMetadata:v29];
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v37 = *(void *)(v1 + 112);
          uint64_t v100 = *(void *)(v1 + 120);
          uint64_t v39 = *(void *)(v1 + 88);
          uint64_t v38 = *(void *)(v1 + 96);
          uint64_t v40 = OUTLINED_FUNCTION_15_1();
          __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
          OUTLINED_FUNCTION_68_26(v38, v37);
          uint64_t v41 = OUTLINED_FUNCTION_68_26(v39, v100);
          uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
          os_log_type_t v44 = static os_log_type_t.debug.getter(v42, v43);
          int v45 = v44;
          BOOL v46 = os_log_type_enabled(v42, v44);
          uint64_t v48 = *(void *)(v1 + 88);
          uint64_t v47 = *(void *)(v1 + 96);
          if (v46)
          {
            uint64_t v94 = v1 + 32;
            uint64_t v96 = *(void *)(v1 + 80);
            uint64_t v97 = v1 + 40;
            uint64_t v98 = *(void *)(v1 + 88);
            uint64_t v49 = OUTLINED_FUNCTION_7_0(32LL);
            uint64_t v100 = OUTLINED_FUNCTION_7_0(96LL);
            *(_DWORD *)uint64_t v49 = 136315650;
            HIDWORD(v9__swift_destroy_boxed_opaque_existential_1(v0 + 9) = v45;
            uint64_t v50 = INFERENCESchemaINFERENCEAppResolutionType.description.getter(v5);
            *(void *)os_log_t log = OUTLINED_FUNCTION_29_43(v50, v51);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(log, v1 + 32, v49 + 4);
            OUTLINED_FUNCTION_23_5();
            *(_WORD *)(v49 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
            uint64_t v93 = v49 + 14;
            lazy protocol witness table accessor for type UUID and conformance UUID();
            uint64_t v52 = OUTLINED_FUNCTION_72_27();
            *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_29_43(v52, v53);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v1 + 40, v49 + 14);
            OUTLINED_FUNCTION_23_5();
            uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
            OUTLINED_FUNCTION_50_24(v47);
            *(_WORD *)(v49 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
            uint64_t v95 = v49 + 24;
            uint64_t v55 = OUTLINED_FUNCTION_72_27();
            *(void *)(v1 + 40) = OUTLINED_FUNCTION_29_43(v55, v56);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v49 + 24);
            OUTLINED_FUNCTION_62();
            OUTLINED_FUNCTION_50_24(v98);
            _os_log_impl( &dword_0,  v42,  (os_log_type_t)v45,  "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Emitting message with reason %s, UUID %s and linking to %s",  (uint8_t *)v49,  0x20u);
            swift_arrayDestroy(v100, 3LL);
            OUTLINED_FUNCTION_0_2(v100);
            OUTLINED_FUNCTION_0_2(v49);
          }

          else
          {
            uint64_t v54 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 + 80) + 8LL);
            OUTLINED_FUNCTION_50_24(*(void *)(v1 + 96));
            OUTLINED_FUNCTION_50_24(v48);
          }

          uint64_t v80 = *(void *)(v1 + 112);
          uint64_t v81 = *(void *)(v1 + 120);
          uint64_t v82 = *(void *)(v1 + 72);
          uint64_t v83 = *(void **)(*(void *)(v1 + 48) + 16LL);
          [v83 emitMessage:v27];
          [v83 emitMessage:v101];

          OUTLINED_FUNCTION_22_58( v84,  v85,  v86,  v87,  v88,  v89,  v90,  v91,  v92,  v93,  v94,  v95,  v97,  v98,  v99,  v100,  (uint64_t)v101,  v102);
          v54(v80, v82);
          v54(v81, v82);
          goto LABEL_34;
        }

        id v27 = v29;
      }

      else
      {
        uint64_t v31 = v29;
      }

      id v27 = v31;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v69 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v69, (uint64_t)static Logger.siriPhone);
  os_log_type_t v70 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_27_1(v70))
  {
    uint64_t v71 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v71);
    OUTLINED_FUNCTION_5_13( &dword_0,  v72,  v73,  "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Unable to build top-level SELF messages");
    OUTLINED_FUNCTION_0_2((uint64_t)v14);
  }

  uint64_t v75 = *(void *)(v1 + 112);
  uint64_t v74 = *(void *)(v1 + 120);
  uint64_t v76 = *(void *)(v1 + 72);
  uint64_t v77 = *(void *)(v1 + 80);

  uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v78(v75, v76);
  v78(v74, v76);
LABEL_34:
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TaskPriority(0LL);
  OUTLINED_FUNCTION_20_63(v2);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_414E80, 184LL);
  v3[2] = 0LL;
  v3[3] = 0LL;
  OUTLINED_FUNCTION_49_30(v3 + 4);
  v3[22] = a1;
  uint64_t v4 = swift_retain();
  OUTLINED_FUNCTION_57_31( v4,  (uint64_t)&async function pointer to partial apply for closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:));
  OUTLINED_FUNCTION_6();
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  unint64_t v6 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?)
                              - 8)
                  + 64LL)
      + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[12] = swift_task_alloc(v6);
  v5[13] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for UUID(0LL);
  v5[14] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[15] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[16] = swift_task_alloc(v9);
  v5[17] = swift_task_alloc(v9);
  v5[18] = swift_task_alloc(v9);
  v5[19] = swift_task_alloc(v9);
  v5[20] = swift_task_alloc(v9);
  unint64_t v10 = (*(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?)
                               - 8)
                   + 64LL)
       + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[21] = swift_task_alloc(v10);
  v5[22] = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for AppResolverResult(0LL);
  v5[23] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  _BYTE v5[24] = v12;
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[25] = swift_task_alloc(v13);
  v5[26] = swift_task_alloc(v13);
  return swift_task_switch(closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:), 0LL, 0LL);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)()
{
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 80);
  uint64_t v4 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_109_9(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 208));
  (*(void (**)(void *))(*(void *)v5 + 88LL))(v5);
  OUTLINED_FUNCTION_38_1();
  if (__swift_getEnumTagSinglePayload(v2, 1LL, v1) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( *(void *)(v0 + 176),  &demangling cache variable for type metadata for AppResolverResult?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v6 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
    os_log_type_t v7 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v7))
    {
      uint64_t v8 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v8);
      OUTLINED_FUNCTION_5_13( &dword_0,  v9,  v10,  "#PhoneAppResolutionLogger emitAndLinkABEvaluationMessage: skipping emitting AB Evaluation message because no for ced disambiguation prediction is in state");
      OUTLINED_FUNCTION_0_2(v1);
    }

LABEL_15:
    swift_task_dealloc();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v11 = *(uint64_t **)(v0 + 80);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 192) + 32LL);
  v12(*(void *)(v0 + 208), *(void *)(v0 + 176), *(void *)(v0 + 184));
  uint64_t v13 = v11[1];
  if (!v13)
  {
LABEL_10:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v17, (uint64_t)static Logger.siriPhone);
    os_log_type_t v18 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v18))
    {
      uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v19 = 0;
      OUTLINED_FUNCTION_16_14( &dword_0,  v20,  v21,  "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Skipping SELF message emission due to missing requestID");
      OUTLINED_FUNCTION_0_2((uint64_t)v19);
    }

    uint64_t v22 = *(void *)(v0 + 208);
    uint64_t v23 = *(void *)(v0 + 184);
    uint64_t v24 = *(void *)(v0 + 192);

    uint64_t v25 = v3[6];
    uint64_t v26 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v25);
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 208))(v25, v26);
    OUTLINED_FUNCTION_15_76(v27);
    OUTLINED_FUNCTION_38_1();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    goto LABEL_15;
  }

  uint64_t v14 = *v11;
  uint64_t v16 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 112);
  OUTLINED_FUNCTION_48_0();
  UUID.init(uuidString:)(v14, v13);
  if (__swift_getEnumTagSinglePayload(v16, 1LL, v15) == 1)
  {
    uint64_t v11 = *(uint64_t **)(v0 + 104);
    OUTLINED_FUNCTION_34_0();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v11,  (uint64_t *)&demangling cache variable for type metadata for UUID?);
    goto LABEL_10;
  }

  uint64_t v103 = v14;
  (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 32LL))( *(void *)(v0 + 160),  *(void *)(v0 + 104),  *(void *)(v0 + 112));
  id v29 = (void *)objc_opt_self(&OBJC_CLASS___AssistantSiriAnalytics);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v31 = [v29 derivedIdentifierForComponentName:27 fromSourceIdentifier:isa];

  if (!v31)
  {
    OUTLINED_FUNCTION_29_1(*(void *)(v0 + 96), v32, v33, *(void *)(v0 + 112));
    goto LABEL_24;
  }

  uint64_t v34 = *(void *)(v0 + 112);
  uint64_t v35 = *(void *)(v0 + 96);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v31);

  OUTLINED_FUNCTION_82_21(v35);
  __swift_storeEnumTagSinglePayload(v35, 0LL, 1LL, v34);
  if (__swift_getEnumTagSinglePayload(v35, 1LL, v34) == 1)
  {
LABEL_24:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( *(void *)(v0 + 96),  (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v66 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
    uint64_t v67 = OUTLINED_FUNCTION_48_0();
    unint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v69 = static os_log_type_t.error.getter();
    BOOL v70 = os_log_type_enabled(v68, v69);
    uint64_t v71 = *(void *)(v0 + 208);
    uint64_t v73 = *(void *)(v0 + 184);
    uint64_t v72 = *(void *)(v0 + 192);
    uint64_t v74 = *(void *)(v0 + 160);
    uint64_t v75 = *(void *)(v0 + 112);
    uint64_t v76 = *(void *)(v0 + 120);
    if (v70)
    {
      uint64_t v99 = *(void *)(v0 + 112);
      uint64_t v96 = *(void *)(v0 + 160);
      uint64_t v77 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v94 = v72;
      uint64_t v78 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v107 = v78;
      *(_DWORD *)uint64_t v77 = 136315138;
      OUTLINED_FUNCTION_48_0();
      *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = OUTLINED_FUNCTION_64_25(v103, v79, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v77 + 4);
      OUTLINED_FUNCTION_149_0();
      _os_log_impl( &dword_0,  v68,  v69,  "#PhoneAppResolutionLogger:emitAndLinkABEvaluationMessage Failed to create inferenceId with requestId: %s. Not logging to SELF",  v77,  0xCu);
      OUTLINED_FUNCTION_17_0(v78);
      OUTLINED_FUNCTION_0_2(v78);
      OUTLINED_FUNCTION_0_2((uint64_t)v77);

      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v96, v99);
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v71, v73);
    }

    else
    {

      OUTLINED_FUNCTION_26_4();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v75);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
    }

    goto LABEL_15;
  }

  uint64_t v36 = *(void *)(v0 + 152);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_82_21(v36);
  uint64_t v37 = &CameraControlFlow + 64;
  id v38 = OUTLINED_FUNCTION_46_1(objc_allocWithZone(&OBJC_CLASS___INFERENCESchemaINFERENCEClientEvent));
  *(void *)(v0 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 16) = v38;
  if (!v38)
  {
LABEL_32:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v80 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v80, (uint64_t)static Logger.siriPhone);
    os_log_type_t v81 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_7(v81))
    {
      uint64_t v82 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      _WORD *v82 = 0;
      OUTLINED_FUNCTION_16_14( &dword_0,  v83,  v84,  "#PhoneAppResolutionLogger emitAndLinkExecutionResultMessage: Unable to build top-level SELF messages");
      OUTLINED_FUNCTION_0_2((uint64_t)v82);
    }

    uint64_t v85 = *(void *)(v0 + 184);
    uint64_t v102 = *(void *)(v0 + 192);
    uint64_t v106 = *(void *)(v0 + 208);
    uint64_t v97 = *(void *)(v0 + 152);
    uint64_t v100 = *(void *)(v0 + 160);
    uint64_t v87 = *(void *)(v0 + 112);
    uint64_t v86 = *(void *)(v0 + 120);

    uint64_t v88 = v0;
    uint64_t v90 = v3[6];
    uint64_t v89 = v3[7];
    __swift_project_boxed_opaque_existential_1(v3 + 3, v90);
    uint64_t v91 = v90;
    uint64_t v0 = v88;
    uint64_t v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 208))(v91, v89);
    OUTLINED_FUNCTION_15_76(v92);
    OUTLINED_FUNCTION_38_1();
    uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
    v93(v97, v87);
    v93(v100, v87);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v106, v85);
    goto LABEL_15;
  }

  uint64_t v39 = v38;
  id v40 = OUTLINED_FUNCTION_46_1(objc_allocWithZone(&OBJC_CLASS___INFERENCESchemaINFERENCEClientEventMetadata));
  *(void *)(v0 + 22__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v40;
  if (!v40)
  {
LABEL_31:

    goto LABEL_32;
  }

  id v41 = v40;
  id v42 = OUTLINED_FUNCTION_46_1(objc_allocWithZone(&OBJC_CLASS___INFERENCESchemaINFERENCEABModelEvaluated));
  *(void *)(v0 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v42;
  if (!v42)
  {
LABEL_30:

    uint64_t v39 = v41;
    goto LABEL_31;
  }

  id v43 = v42;
  uint64_t v37 = *(void **)(v0 + 80);
  os_log_type_t v44 = PhoneAppResolutionLogger.linkMessage(inferenceID:requestID:)(*(void *)(v0 + 152), *(void *)(v0 + 160));
  *(void *)(v0 + 240) = v44;
  if (!v44)
  {

    uint64_t v39 = v41;
    id v41 = v43;
    goto LABEL_30;
  }

  uint64_t v98 = *(void *)(v0 + 200);
  uint64_t v101 = *(void *)(v0 + 208);
  uint64_t v45 = *(void *)(v0 + 184);
  uint64_t v95 = *(void *)(v0 + 192);
  uint64_t v47 = *(void *)(v0 + 144);
  uint64_t v46 = *(void *)(v0 + 152);
  uint64_t v48 = *(void *)(v0 + 112);
  uint64_t v49 = *(void *)(v0 + 120);
  uint64_t v50 = *(void **)(v0 + 80);
  uint64_t v104 = *(void *)(v0 + 88);
  OUTLINED_FUNCTION_49( (uint64_t)v44,  (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID,  &OBJC_CLASS___SISchemaUUID_ptr);
  unint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
  *(void *)(v0 + 24__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v51;
  v51(v47, v46, v48);
  id v52 = SISchemaUUID.__allocating_init(nsuuid:)();
  OUTLINED_FUNCTION_6_69((uint64_t)v52, "setInferenceId:");

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v98, v101, v45);
  uint64_t v53 = type metadata accessor for ModelDecisionEvaluator(0LL);
  uint64_t v54 = swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  *(void *)(v0 + 256) = v54;
  v12( v54 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22ModelDecisionEvaluator_forcedDisambiguationPrediction,  v98,  v45);
  *(void *)(v54 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22ModelDecisionEvaluator_userChosenApp) = v104;
  uint64_t v55 = v50[16];
  uint64_t v56 = v50[17];
  __swift_project_boxed_opaque_existential_1(v50 + 13, v55);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v58 = OUTLINED_FUNCTION_8_2(v57, 64LL);
  *(void *)(v0 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v58;
  *(_OWORD *)(v58 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D880;
  id v59 = objc_allocWithZone(&OBJC_CLASS___INStartCallIntent);
  swift_retain();
  id v60 = [v59 init];
  id v61 = [v60 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
  OUTLINED_FUNCTION_54_24();
  *(void *)(v58 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v60;
  *(void *)(v58 + 40) = v104;
  id v62 = [objc_allocWithZone(INStartAudioCallIntent) init];
  id v63 = [v62 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
  OUTLINED_FUNCTION_54_24();
  *(void *)(v58 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v62;
  *(void *)(v58 + 56) = v104;
  uint64_t v64 = *(int **)(v56 + 16);
  uint64_t v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v64 + *v64);
  uint64_t v65 = (void *)swift_task_alloc(v64[1]);
  *(void *)(v0 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v65;
  *uint64_t v65 = v0;
  v65[1] = closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:);
  return v105(v58, v55, v56);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  Swift::String_optional v38;
  char v39;
  uint64_t i;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  Swift::Bool v48;
  Swift::Bool v49;
  Swift::Bool v50;
  void *v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  os_log_s *v67;
  uint64_t v68;
  os_log_type_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  os_log_s *v87;
  uint64_t v88;
  os_log_type_t v89;
  BOOL v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  void *v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v190;
  uint64_t v191;
  os_log_s *v192;
  uint64_t v193;
  os_log_type_t v194;
  BOOL v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void *v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  void *v296;
  uint64_t v297;
  void *v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void *v305;
  void *v306;
  uint64_t v307;
  void *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  void *type;
  void *typeb;
  void *typea;
  os_log_t log;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  uint64_t v3 = *(void *)(v0 + 280);
  v324 = _swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      uint64_t v16 = v3;
    }
    else {
      uint64_t v16 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    OUTLINED_FUNCTION_62();
    if (v4) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }

  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8LL));
  if (!v4) {
    goto LABEL_17;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_82;
  }

  uint64_t v5 = 0LL;
  uint64_t v6 = v3 & 0xC000000000000001LL;
  os_log_type_t v7 = *(void *)(v0 + 280) + 32LL;
  do
  {
    if (v6)
    {
      uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, *(void *)(v0 + 280));
    }

    else
    {
      uint64_t v8 = *(void *)(v7 + 8 * v5);
      swift_retain();
    }

    App.appIdentifier.getter();
    uint64_t v10 = v9;
    uint64_t v11 = swift_bridgeObjectRelease();
    if (v10)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v324[2]);
      uint64_t v12 = OUTLINED_FUNCTION_51_0();
      uint64_t v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v13);
      specialized ContiguousArray._endMutation()(v14);
    }

    else
    {
      swift_release(v8);
    }

    ++v5;
  }

  while (v4 != v5);
  swift_bridgeObjectRelease();
  uint64_t v15 = (unint64_t)v324;
LABEL_18:
  v323 = v0;
  if ((v15 & 0x8000000000000000LL) != 0 || (v15 & 0x4000000000000000LL) != 0)
  {
    char v225 = OUTLINED_FUNCTION_95();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v225);
  }

  else
  {
    uint64_t v17 = *(void *)(v15 + 16);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  if (!v17)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }

  if (v17 < 1)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }

  os_log_type_t v18 = 0LL;
  uint64_t v19 = _swiftEmptyArrayStorage;
  do
  {
    if ((v15 & 0xC000000000000001LL) != 0)
    {
      uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v15);
    }

    else
    {
      uint64_t v20 = *(void *)(v15 + 8 * v18 + 32);
      swift_retain();
    }

    uint64_t v21 = App.appIdentifier.getter();
    uint64_t v23 = v22;
    swift_release(v20);
    if (v23)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        OUTLINED_FUNCTION_24_50();
        uint64_t v19 = v27;
      }

      uint64_t v25 = v19[2];
      uint64_t v24 = v19[3];
      if (v25 >= v24 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v24 > 1,  v25 + 1,  1LL,  (uint64_t)v19);
        uint64_t v19 = v28;
      }

      __int128 v19[2] = v25 + 1;
      uint64_t v26 = &v19[2 * v25];
      v26[4] = v21;
      v26[5] = v23;
    }

    ++v18;
  }

  while (v17 != v18);
LABEL_36:
  OUTLINED_FUNCTION_77_0();
  id v29 = swift_bridgeObjectRetain();
  id v30 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
  {
    OUTLINED_FUNCTION_24_50();
    id v30 = v226;
  }

  uint64_t v32 = v30[2];
  id v31 = v30[3];
  if (v32 >= v31 >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v31 > 1,  v32 + 1,  1LL,  (uint64_t)v30);
    id v30 = v227;
  }

  uint64_t v2 = (uint64_t *)(v323 + 40);
  v30[2] = v32 + 1;
  uint64_t v33 = &v30[2 * v32];
  v33[4] = 0xD000000000000015LL;
  v33[5] = 0x8000000000348BF0LL;
  swift_bridgeObjectRelease();
  uint64_t v34 = App.appIdentifier.getter();
  if (v35 && (specialized Sequence<>.contains(_:)(v34, v35, v30), uint64_t v37 = v36, OUTLINED_FUNCTION_62(), (v37 & 1) != 0))
  {
    id v38 = ModelDecisionEvaluator.getPredictedApp()();
    v321 = v323 + 64;
    if (!v38.value._object) {
      goto LABEL_45;
    }
    specialized Sequence<>.contains(_:)(v38.value._countAndFlagsBits, (uint64_t)v38.value._object, v30);
    if ((v39 & 1) != 0)
    {
      OUTLINED_FUNCTION_34_0();
LABEL_45:
      OUTLINED_FUNCTION_4_1();
      v324 = _swiftEmptyArrayStorage;
      if (v17)
      {
        OUTLINED_FUNCTION_95();
        for (uint64_t i = 0LL; i != v17; ++i)
        {
          if ((v15 & 0xC000000000000001LL) != 0)
          {
            id v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
          }

          else
          {
            id v41 = *(void *)(v15 + 8 * i + 32);
            swift_retain();
          }

          id v42 = App.isFirstParty()();
          if (v42)
          {
            swift_release(v41);
          }

          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
            id v43 = v324[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
            os_log_type_t v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
            specialized ContiguousArray._endMutation()(v44);
          }
        }

        OUTLINED_FUNCTION_77_0();
        uint64_t v1 = (unint64_t)v324;
      }

      if ((v1 & 0x8000000000000000LL) == 0 && (v1 & 0x4000000000000000LL) == 0)
      {
        uint64_t v45 = *(void *)(v1 + 16);
        goto LABEL_58;
      }

uint64_t closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)(uint64_t a1)
{
  *(void *)(*(void *)v1 + 28OUTLINED_FUNCTION_25_0(v0 + 16, (uint64_t)v3, 0LL) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_62();
  return swift_task_switch(closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:), 0LL, 0LL);
}

LABEL_87:
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          goto LABEL_62;
        }

uint64_t outlined init with copy of PhoneAppResolutionLogger(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_29FAC0()
{
  return swift_deallocObject(v0, 184LL, 7LL);
}

uint64_t partial apply for closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)( uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + 40;
  char v7 = *(_BYTE *)(v1 + 32);
  uint64_t v8 = swift_task_alloc(dword_43E784);
  uint64_t v9 = (void *)OUTLINED_FUNCTION_53_2(v8);
  *uint64_t v9 = v2;
  v9[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)(a1, v4, v5, v7, v6);
}

uint64_t sub_29FB80()
{
  return swift_deallocObject(v0, 184LL, 7LL);
}

uint64_t partial apply for closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)( uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[22];
  uint64_t v8 = swift_task_alloc(dword_43E794);
  uint64_t v9 = (void *)OUTLINED_FUNCTION_53_2(v8);
  *uint64_t v9 = v2;
  v9[1] = UnsupportedFlowCATs.deleteVoicemail();
  return closure #1 in PhoneAppResolutionLogger.emitAndLinkABEvaluationMessage(chosenApp:)(a1, v4, v5, v6, v7);
}

unint64_t lazy protocol witness table accessor for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult;
  if (!lazy protocol witness table cache variable for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneAppResolutionLogger.EvaluationResult,  &type metadata for PhoneAppResolutionLogger.EvaluationResult);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneAppResolutionLogger.EvaluationResult and conformance PhoneAppResolutionLogger.EvaluationResult);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId;
  if (!lazy protocol witness table cache variable for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneAppResolutionLogger.CodePathId,  &type metadata for PhoneAppResolutionLogger.CodePathId);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneAppResolutionLogger.CodePathId and conformance PhoneAppResolutionLogger.CodePathId);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type [PhoneAppResolutionLogger.CodePathId] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [PhoneAppResolutionLogger.CodePathId] and conformance [A];
  if (!lazy protocol witness table cache variable for type [PhoneAppResolutionLogger.CodePathId] and conformance [A])
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhoneAppResolutionLogger.CodePathId]);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type [PhoneAppResolutionLogger.CodePathId] and conformance [A]);
  }

  return result;
}

uint64_t initializeWithCopy for PhoneAppResolutionLogger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v5;
  uint64_t v6 = a2 + 24;
  __int128 v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain(v4);
  swift_unknownObjectRetain(v5);
  v9(a1 + 24, v6, v8);
  __int128 v10 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 64, a2 + 64);
  __int128 v11 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 104, a2 + 104);
  return a1;
}

void *assignWithCopy for PhoneAppResolutionLogger(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  uint64_t v5 = a1[2];
  a1[2] = v4;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5);
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  __swift_assign_boxed_opaque_existential_1(a1 + 13, a2 + 13);
  return a1;
}

void *__swift_memcpy144_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t assignWithTake for PhoneAppResolutionLogger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease(v5);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 24));
  *(_OWORD *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 64));
  __int128 v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 104));
  *(_OWORD *)(a1 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneAppResolutionLogger(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 144))
    {
      LODWORD(OUTLINED_FUNCTION_2_18(v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(OUTLINED_FUNCTION_2_18(v1, v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(OUTLINED_FUNCTION_2_18(v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneAppResolutionLogger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0LL;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_OWORD *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for PhoneAppResolutionLogger()
{
}

uint64_t storeEnumTagSinglePayload for PhoneAppResolutionLogger.EvaluationResult( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_29FFFC + 4 * byte_33D3B5[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2A0030 + 4 * asc_33D3B0[v4]))();
}

uint64_t sub_2A0030(uint64_t result)
{
  *(_BYTE *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A0038(uint64_t result, int a2)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (a2) {
    JUMPOUT(0x2A0040LL);
  }
  return result;
}

uint64_t sub_2A004C(uint64_t result, int a2)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (!a2) {
    JUMPOUT(0x2A0054LL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_2A0058(uint64_t result)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A0060(uint64_t result)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

void type metadata accessor for PhoneAppResolutionLogger.EvaluationResult()
{
}

uint64_t storeEnumTagSinglePayload for PhoneAppResolutionLogger.CodePathId( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2A00C4 + 4 * byte_33D3BF[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2A00F8 + 4 * byte_33D3BA[v4]))();
}

uint64_t sub_2A00F8(uint64_t result)
{
  *(_BYTE *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A0100(uint64_t result, int a2)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (a2) {
    JUMPOUT(0x2A0108LL);
  }
  return result;
}

uint64_t sub_2A0114(uint64_t result, int a2)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (!a2) {
    JUMPOUT(0x2A011CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2A0120(uint64_t result)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A0128(uint64_t result)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

void type metadata accessor for PhoneAppResolutionLogger.CodePathId()
{
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    uint64_t v1 = type metadata accessor for UUID(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }

  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    uint64_t v1 = type metadata accessor for UUID(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }

  return result;
}

uint64_t partial apply for closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)()
{
  uint64_t v0 = swift_task_alloc(dword_43E7EC);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_13_75(v1);
  return OUTLINED_FUNCTION_8_82(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_12Tm()
{
  return swift_deallocObject(v0, 89LL, 7LL);
}

uint64_t closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)partial apply()
{
  uint64_t v0 = swift_task_alloc(dword_43E7EC);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_13_75(v1);
  return OUTLINED_FUNCTION_8_82(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t OUTLINED_FUNCTION_8_82( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)( a1,  a2,  a3,  a4,  a5,  a6,  a7);
}

uint64_t OUTLINED_FUNCTION_15_76(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96LL))(v2);
}

uint64_t OUTLINED_FUNCTION_16_59()
{
  return static TaskPriority.utility.getter();
}

uint64_t OUTLINED_FUNCTION_18_63(float a1)
{
  *uint64_t v3 = a1;
  return swift_getErrorValue(v1, v4, v2);
}

uint64_t OUTLINED_FUNCTION_19_65()
{
  return swift_release_n(v0, 2LL);
}

uint64_t OUTLINED_FUNCTION_20_63(uint64_t a1)
{
  return outlined init with copy of PhoneAppResolutionLogger(v1, v3 - 176);
}

void OUTLINED_FUNCTION_22_58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
}

uint64_t OUTLINED_FUNCTION_23_58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a9, v9 + 56, v10, v11);
}

void OUTLINED_FUNCTION_24_50()
{
}

id OUTLINED_FUNCTION_28_53(char a1, const char *a2)
{
  return objc_msgSend(v2, a2, a1 & 1);
}

uint64_t OUTLINED_FUNCTION_29_43(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 80));
}

void OUTLINED_FUNCTION_33_53(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

  ;
}

void *OUTLINED_FUNCTION_49_30(void *a1)
{
  return memcpy(a1, (const void *)(v1 - 176), 0x90uLL);
}

  ;
}

void OUTLINED_FUNCTION_52_29( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
}

uint64_t OUTLINED_FUNCTION_53_30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return swift_release(a15);
}

void OUTLINED_FUNCTION_54_24()
{
}

uint64_t OUTLINED_FUNCTION_61_24(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_62_23()
{
  return Error.localizedDescription.getter(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t OUTLINED_FUNCTION_68_26(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_72_27()
{
  return dispatch thunk of CustomStringConvertible.description.getter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_73_26()
{
  return swift_unknownObjectRelease(*(void *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_77_19()
{
  return dispatch thunk of CustomStringConvertible.description.getter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_82_21(uint64_t a1)
{
  return v1(a1, v2, v3);
}

uint64_t CallingFlowAbstraction.init(app:flowName:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)(v4 + *(void *)(*(void *)v4 + 288LL)) = a1;
  uint64_t v7 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 296LL));
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = one-time initialization token for siriPhone;
  swift_retain();
  swift_retain();
  if (v8 != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = OUTLINED_FUNCTION_15_1();
  uint64_t v10 = (os_log_s *)__swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = swift_retain();
  Logger.logObject.getter(v11);
  os_log_type_t v12 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v10, v12))
  {
    uint64_t v21 = a4;
    uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v14 = OUTLINED_FUNCTION_7_0(32LL);
    v23[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v16 = *v7;
    unint64_t v15 = v7[1];
    swift_bridgeObjectRetain();
    uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v15, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v13 + 4);
    OUTLINED_FUNCTION_6_8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_57_0(&dword_0, v10, v12, "%s.initialize", v13);
    OUTLINED_FUNCTION_17_0(v14);
    OUTLINED_FUNCTION_0_2(v14);
    uint64_t v17 = (uint64_t)v13;
    a4 = v21;
    OUTLINED_FUNCTION_0_2(v17);
  }

  else
  {

    OUTLINED_FUNCTION_6_8();
  }

  outlined init with copy of SignalProviding((uint64_t)a4, (uint64_t)v23);
  PhoneFlow.init(sharedGlobals:)();
  uint64_t v19 = v18;
  swift_release(a1);
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v19;
}

uint64_t CallingFlowAbstraction.deinit()
{
  uint64_t v1 = v0;
  swift_release(*(void *)(v0 + *(void *)(*(void *)v0 + 288LL)));
  OUTLINED_FUNCTION_2_87();
  swift_bridgeObjectRelease();
  return v1;
}

void CallingFlowAbstraction.__allocating_init(sharedGlobals:)()
{
}

void CallingFlowAbstraction.__allocating_init(state:sharedGlobals:)()
{
}

BOOL CallingFlowAbstraction.on(input:)()
{
  void (*v69)(uint64_t *__return_ptr, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  os_log_s *v76;
  int v77;
  uint64_t v78;
  void (*v79)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v80;
  os_log_s *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84[3];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[80];
  uint64_t v89;
  uint64_t v90;
  OUTLINED_FUNCTION_29_2();
  uint64_t v89 = v1;
  uint64_t v90 = v2;
  uint64_t v3 = v0;
  os_log_type_t v5 = (_BYTE *)v4;
  uint64_t v7 = OUTLINED_FUNCTION_7_14(v4, *(void *)(*v3 + 256), *(void *)(*v3 + 264), v6);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  os_log_type_t v12 = (char *)&v74 - v11;
  uint64_t v13 = OUTLINED_FUNCTION_3_4();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v17 = v16 - v15;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = OUTLINED_FUNCTION_15_1();
  uint64_t v19 = (os_log_s *)__swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
  uint64_t v79 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 16);
  uint64_t v80 = v5;
  v79(v17, v5, v13);
  uint64_t v20 = swift_retain();
  Logger.logObject.getter(v20);
  os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
  os_log_type_t v81 = v19;
  uint64_t v77 = v21;
  BOOL v22 = os_log_type_enabled(v19, v21);
  uint64_t v83 = v12;
  if (v22)
  {
    uint64_t v23 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v78 = v8;
    uint64_t v24 = v23;
    uint64_t v75 = OUTLINED_FUNCTION_7_0(96LL);
    v84[0] = v75;
    *(_DWORD *)uint64_t v24 = 136315650;
    OUTLINED_FUNCTION_2_87();
    uint64_t v76 = v19;
    uint64_t v82 = v13;
    swift_bridgeObjectRetain();
    uint64_t v25 = OUTLINED_FUNCTION_46_32();
    uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v27);
    OUTLINED_FUNCTION_14_0((uint64_t)&v87, (uint64_t)v88, v28, v24 + 12);
    uint64_t v29 = swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    (*(void (**)(uint64_t))(*v3 + 128))(v29);
    PhoneCallFlowState.description.getter(v7);
    uint64_t v31 = v30;
    OUTLINED_FUNCTION_28_54((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v78 + 8));
    uint64_t v87 = OUTLINED_FUNCTION_27_57(v31, v32, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, v88, v24 + 14);
    OUTLINED_FUNCTION_22();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    unint64_t v33 = lazy protocol witness table accessor for type Input and conformance Input();
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v82, v33);
    uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v84);
    uint64_t v13 = v82;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, v88, v24 + 24);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_51();
    uint64_t v36 = v81;
    _os_log_impl(&dword_0, v81, (os_log_type_t)v77, "%s.On for state:%s input:%s", (uint8_t *)v24, 0x20u);
    uint64_t v37 = v75;
    swift_arrayDestroy(v75, 3LL);
    OUTLINED_FUNCTION_0_2(v37);
    uint64_t v38 = v24;
    uint64_t v8 = v78;
    OUTLINED_FUNCTION_0_2(v38);
  }

  else
  {
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_24_51();
  }

  uint64_t v39 = *(void (**)(void))(*v3 + 128);
  v39();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v7);
  id v41 = *(void (**)(char *, uint64_t))(v8 + 8);
  v41(v10, v7);
  uint64_t v42 = swift_retain();
  id v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v45 = static os_log_type_t.debug.getter(v43, v44);
  BOOL v46 = os_log_type_enabled(v43, v45);
  if (EnumCaseMultiPayload == 5)
  {
    LODWORD(v8outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 5;
    if (v46)
    {
      uint64_t v47 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v48 = OUTLINED_FUNCTION_7_0(32LL);
      v84[0] = v48;
      uint64_t v82 = v13;
      *(_DWORD *)uint64_t v47 = 136315138;
      OUTLINED_FUNCTION_2_87();
      uint64_t v49 = v7;
      uint64_t v51 = *v50;
      unint64_t v52 = v50[1];
      swift_bridgeObjectRetain();
      uint64_t v53 = v51;
      uint64_t v7 = v49;
      uint64_t v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v52, v84);
      uint64_t v13 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, v88, v47 + 4);
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_57_0(&dword_0, v43, v45, "%s.On, updating state to runIntentConversion", v47);
      OUTLINED_FUNCTION_17_0(v48);
      OUTLINED_FUNCTION_0_2(v48);
      OUTLINED_FUNCTION_0_2((uint64_t)v47);
    }

    else
    {

      OUTLINED_FUNCTION_22();
    }

    uint64_t v66 = v83;
    v79((uint64_t)v66, v80, v13);
    uint64_t v68 = *v3;
    *(void *)&v66[v67] = *(uint64_t *)((char *)v3 + *(void *)(*v3 + 288));
    os_log_type_t v69 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v68 + 152);
    BOOL v70 = swift_retain();
    v69(v84, v70);
    uint64_t v71 = v85;
    uint64_t v72 = v86;
    __swift_project_boxed_opaque_existential_1(v84, v85);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
    swift_storeEnumTagMultiPayload(v66, v7, 1LL);
    (*(void (**)(char *))(*v3 + 136))(v66);
    OUTLINED_FUNCTION_18();
    int EnumCaseMultiPayload = (int)v81;
  }

  else
  {
    if (v46)
    {
      uint64_t v54 = OUTLINED_FUNCTION_7_0(22LL);
      LODWORD(v8outlined consume of AnnounceVoicemailFlow.State(v0, 1) = EnumCaseMultiPayload;
      uint64_t v55 = v54;
      uint64_t v82 = OUTLINED_FUNCTION_7_0(64LL);
      v84[0] = v82;
      *(_DWORD *)uint64_t v55 = 136315394;
      OUTLINED_FUNCTION_2_87();
      uint64_t v57 = *v56;
      swift_bridgeObjectRetain();
      uint64_t v87 = OUTLINED_FUNCTION_27_57(v57, v58, v84);
      uint64_t v80 = v88;
      OUTLINED_FUNCTION_14_0((uint64_t)&v87, (uint64_t)v88, v59, v55 + 12);
      uint64_t v60 = swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      id v61 = v83;
      ((void (*)(uint64_t))v39)(v60);
      PhoneCallFlowState.description.getter(v7);
      uint64_t v62 = ((uint64_t (*)(char *, uint64_t))v41)(v61, v7);
      uint64_t v87 = OUTLINED_FUNCTION_6_97(v62, v63, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, v80, v55 + 14);
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_33_6(&dword_0, v43, v45, "%s.on is stopped, state: %s", (uint8_t *)v55);
      uint64_t v64 = v82;
      OUTLINED_FUNCTION_12_24();
      OUTLINED_FUNCTION_0_2(v64);
      uint64_t v65 = v55;
      int EnumCaseMultiPayload = (int)v81;
      OUTLINED_FUNCTION_0_2(v65);
    }

    else
    {

      OUTLINED_FUNCTION_22();
      id v61 = v83;
    }

    swift_storeEnumTagMultiPayload(v61, v7, 7LL);
    OUTLINED_FUNCTION_14_73();
  }

  return EnumCaseMultiPayload == 5;
}

uint64_t CallingFlowAbstraction.execute()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a1;
  v5[9] = v4;
  uint64_t v6 = *v4;
  v5[10] = *v4;
  uint64_t v7 = *(void *)(v6 + 256);
  v5[11] = v7;
  uint64_t v8 = *(void *)(v6 + 264);
  v5[12] = v8;
  uint64_t v9 = OUTLINED_FUNCTION_7_14(a1, v7, v8, a4);
  v5[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[14] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[15] = swift_task_alloc(v11);
  v5[16] = swift_task_alloc(v11);
  return swift_task_switch(CallingFlowAbstraction.execute(), 0LL, 0LL);
}

void CallingFlowAbstraction.execute()()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
  if (os_log_type_enabled(v3, v5))
  {
    uint64_t v6 = v0[16];
    uint64_t v7 = v0[13];
    uint64_t v20 = v0[14];
    uint64_t v8 = v0[9];
    uint64_t v9 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v9 = 136315394;
    os_log_type_t v21 = v5;
    uint64_t v10 = *(void *)(v8 + *(void *)(*(void *)v8 + 296LL));
    swift_bridgeObjectRetain();
    v0[6] = OUTLINED_FUNCTION_27_57(v10, v11, &v23);
    OUTLINED_FUNCTION_14_0((uint64_t)(v0 + 6), (uint64_t)(v0 + 7), v12, v9 + 12);
    uint64_t v13 = swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    (*(void (**)(uint64_t))(*(void *)v8 + 128LL))(v13);
    OUTLINED_FUNCTION_44_31(v7);
    uint64_t v15 = v14;
    OUTLINED_FUNCTION_28_54(v6, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v0[7] = OUTLINED_FUNCTION_27_57(v15, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8, v9 + 14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_122();
    OUTLINED_FUNCTION_33_6(&dword_0, v3, v21, "%s.execute, state: %s", (uint8_t *)v9);
    OUTLINED_FUNCTION_12_24();
    OUTLINED_FUNCTION_0_2(v22);
    OUTLINED_FUNCTION_0_2(v9);
  }

  else
  {
    swift_release(v0[9]);
  }

  uint64_t v17 = v0[15];
  uint64_t v18 = v0[13];
  (*(void (**)(void))(*(void *)v0[9] + 128LL))();
  uint64_t v19 = (char *)&loc_2A0F3C + 4 * byte_33D5F0[swift_getEnumCaseMultiPayload(v17, v18)];
  __asm { BR              X10 }

void CallingFlowAbstraction.prepare(completion:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *v0;
  uint64_t v46 = OUTLINED_FUNCTION_3_4();
  uint64_t v49 = *(void *)(v46 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v42 = v7;
  __chkstk_darwin();
  uint64_t v48 = (char *)&v37 - v8;
  uint64_t v9 = *(void *)(type metadata accessor for PrepareResponse(0LL) - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = *(void *)(v6 + 256);
  uint64_t v11 = *(void *)(v6 + 264);
  uint64_t v43 = v6;
  uint64_t v45 = v10;
  uint64_t v41 = v11;
  uint64_t v55 = type metadata accessor for PhoneCallFlowState(0LL, v10, v11, v12);
  uint64_t v52 = *(void *)(v55 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v54 = v13;
  __chkstk_darwin();
  uint64_t v53 = (char *)&v37 - v14;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = OUTLINED_FUNCTION_15_1();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v17 = swift_retain();
  uint64_t v44 = v16;
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
  int v21 = v20;
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v22 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v51 = v3;
    uint64_t v23 = v22;
    uint64_t v40 = OUTLINED_FUNCTION_7_0(64LL);
    v57[0] = v40;
    OUTLINED_FUNCTION_29_44(4.8151e-34);
    uint64_t v47 = v5;
    int v39 = v21;
    uint64_t v25 = *v24;
    swift_bridgeObjectRetain();
    uint64_t v56 = OUTLINED_FUNCTION_242(v25, v26, v57);
    OUTLINED_FUNCTION_14_0((uint64_t)&v56, (uint64_t)v57, v27, v23 + 12);
    uint64_t v28 = OUTLINED_FUNCTION_87_0();
    *(_WORD *)(v23 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v38 = v23 + 14;
    (*(void (**)(uint64_t))(*v1 + 128LL))(v28);
    uint64_t v29 = v55;
    PhoneCallFlowState.description.getter(v55);
    uint64_t v50 = v9;
    uint64_t v30 = OUTLINED_FUNCTION_46_32();
    uint64_t v32 = v31(v30);
    uint64_t v56 = OUTLINED_FUNCTION_6_97(v32, v33, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v38);
    OUTLINED_FUNCTION_77_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_6(&dword_0, v18, (os_log_type_t)v39, "%s.prepare, state: %s", (uint8_t *)v23);
    uint64_t v34 = v40;
    OUTLINED_FUNCTION_12_24();
    OUTLINED_FUNCTION_0_2(v34);
    OUTLINED_FUNCTION_0_2(v23);
  }

  else
  {

    OUTLINED_FUNCTION_77_0();
    uint64_t v29 = v55;
  }

  uint64_t v35 = v54;
  (*(void (**)(void))(*v1 + 128LL))();
  uint64_t v36 = (char *)&loc_2A1530 + 4 * word_33D5F8[swift_getEnumCaseMultiPayload(v35, v29)];
  __asm { BR              X10 }

void CallingFlowAbstraction.processIntentConversionResult(exitValue:)()
{
  void (*v24)(__int128 *__return_ptr);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  int v39;
  os_log_s *v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_s *v56;
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_log_s *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  void (*v83)(uint64_t *);
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint8_t *v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint8_t *v117;
  uint64_t *v118;
  void *v119;
  uint64_t v120[3];
  uint64_t v121;
  uint64_t v122;
  __int128 v123[3];
  OUTLINED_FUNCTION_29_2();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)*v0;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3[33];
  uint64_t v117 = (uint8_t *)v3[32];
  unint64_t v115 = v6 - v5;
  unint64_t v116 = v4;
  uint64_t v8 = type metadata accessor for PhoneCallFlowState(0LL, (uint64_t)v117, v4, v7);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v118 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v109 - v11;
  uint64_t v13 = OUTLINED_FUNCTION_3_4();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = (void (*)(void))v3[16];
  uint64_t v119 = v0;
  v18();
  uint64_t v19 = OUTLINED_FUNCTION_46_32();
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
    uint64_t v22 = *(void *)&v12[*(int *)(v21 + 48)];
    uint64_t v23 = &v12[*(int *)(v21 + 64)];
    OUTLINED_FUNCTION_56_4(v17, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
    __swift_destroy_boxed_opaque_existential_1(v23);
    if (v2)
    {
      uint64_t v114 = v8;
      uint64_t v24 = *(void (**)(__int128 *__return_ptr))(*v119 + 152LL);
      uint64_t v25 = v2;
      v24(v123);
      OUTLINED_FUNCTION_23_59();
      uint64_t v26 = (*((uint64_t (**)(void *, char *))v12 + 7))(v2, v12);
      uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 224LL))(v26);
      swift_release(v26);
      OUTLINED_FUNCTION_18();
      uint64_t v113 = v25;
      if ((v27 & 1) != 0)
      {
        uint64_t v26 = (uint64_t)v25;
        if (((*(uint64_t (**)(uint8_t *))(v3[34] + 136LL))(v117) & 1) != 0)
        {
          v24(v123);
          OUTLINED_FUNCTION_23_59();
          (*((void (**)(uint64_t *__return_ptr, uint64_t, char *))v12 + 1))(v120, v27, v12);
          uint64_t v28 = v121;
          uint64_t v29 = v122;
          uint64_t v30 = __swift_project_boxed_opaque_existential_1(v120, v121);
          DeviceState.isGroupFaceTimeDeviceUnsupported(app:)( v22,  v28,  v29,  (uint64_t)v30,  v31,  v32,  v33,  v34,  (uint64_t)v109,  (uint64_t)v110,  v111,  v112,  (uint64_t)v113,  v114,  v115,  v116,  (uint64_t)v117,  (uint64_t)v118,  (uint64_t)v119,  v120[0]);
          uint64_t v26 = v35;
          __swift_destroy_boxed_opaque_existential_1(v120);
          OUTLINED_FUNCTION_18();
          if ((v26 & 1) != 0)
          {
            uint64_t v112 = v13;
            if (one-time initialization token for siriPhone != -1) {
              swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
            }
            uint64_t v36 = OUTLINED_FUNCTION_15_1();
            __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
            uint64_t v37 = OUTLINED_FUNCTION_20_64();
            Logger.logObject.getter(v37);
            uint64_t v38 = OUTLINED_FUNCTION_6_0();
            int v39 = v38;
            uint64_t v40 = (os_log_s *)v26;
            if (os_log_type_enabled((os_log_t)v26, v38))
            {
              uint64_t v41 = OUTLINED_FUNCTION_7_0(12LL);
              LODWORD(v1__swift_destroy_boxed_opaque_existential_1(v0 + 11) = v39;
              uint64_t v42 = (uint8_t *)v41;
              uint64_t v43 = OUTLINED_FUNCTION_7_0(32LL);
              *(void *)&v123[0] = v43;
              *(_DWORD *)uint64_t v42 = 136315138;
              uint64_t v109 = v42 + 4;
              uint64_t v110 = v42;
              OUTLINED_FUNCTION_2_87();
              uint64_t v45 = *v44;
              uint64_t v46 = v44[1];
              swift_bridgeObjectRetain();
              uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, (uint64_t *)v123);
              uint64_t v48 = OUTLINED_FUNCTION_69_6(v47);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, v49, v109);
              OUTLINED_FUNCTION_22();
              swift_bridgeObjectRelease();
              uint64_t v50 = v110;
              OUTLINED_FUNCTION_57_0( &dword_0,  v40,  (os_log_type_t)v111,  "%s.processIntentConversionResult returning unsupported device GroupFaceTime",  v110);
              OUTLINED_FUNCTION_17_0(v43);
              OUTLINED_FUNCTION_0_2(v43);
              OUTLINED_FUNCTION_0_2((uint64_t)v50);
            }

            else
            {

              uint64_t v51 = OUTLINED_FUNCTION_30_44();
            }

            uint64_t v72 = (uint64_t)v119;
            ((void (*)(__int128 *__return_ptr, uint64_t))v24)(v123, v51);
            uint64_t v73 = type metadata accessor for StartCallCATs(0LL);
            static CATOption.defaultMode.getter(v73);
            uint64_t v74 = OUTLINED_FUNCTION_42_10();
            type metadata accessor for StartCallCATsSimple(0LL);
            OUTLINED_FUNCTION_65();
            uint64_t v75 = OUTLINED_FUNCTION_5_45();
            type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
            OUTLINED_FUNCTION_65();
            uint64_t v76 = OUTLINED_FUNCTION_5_45();
            type metadata accessor for UnsupportedFlowCATs(0LL);
            OUTLINED_FUNCTION_65();
            uint64_t v77 = OUTLINED_FUNCTION_42_10();
            uint64_t v78 = type metadata accessor for UnsupportedFaceTimeOutputProvider();
            uint64_t v79 = swift_allocObject(v78, 136LL, 7LL);
            uint64_t v80 = specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( 9,  v123,  v74,  v75,  v76,  v77,  0LL,  0LL,  0LL,  0LL,  v79);
            os_log_type_t v81 = (*(uint64_t (**)(void))(*(void *)v80 + 144LL))();
            uint64_t v82 = v118;
            *uint64_t v118 = v81;
            swift_storeEnumTagMultiPayload(v82, v114, 4LL);
            uint64_t v83 = *(void (**)(uint64_t *))(*(void *)v72 + 136LL);
            swift_retain();
            uint64_t v84 = v82;
            uint64_t v26 = v72;
            v83(v84);
            OUTLINED_FUNCTION_122();
            swift_release(v81);
            uint64_t v13 = v112;
          }
        }
      }

      unint64_t v115 = v22;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v85 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v85, (uint64_t)static Logger.siriPhone);
      uint64_t v86 = OUTLINED_FUNCTION_20_64();
      Logger.logObject.getter(v86);
      uint64_t v87 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled((os_log_t)v26, v87))
      {
        uint64_t v112 = v13;
        uint64_t v88 = OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v111 = v17;
        uint64_t v89 = (uint8_t *)v88;
        uint64_t v90 = OUTLINED_FUNCTION_7_0(32LL);
        *(void *)&v123[0] = v90;
        *(_DWORD *)uint64_t v89 = 136315138;
        OUTLINED_FUNCTION_2_87();
        uint64_t v91 = v14;
        uint64_t v94 = *v92;
        uint64_t v93 = v92[1];
        swift_bridgeObjectRetain();
        uint64_t v95 = v94;
        uint64_t v14 = v91;
        uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v95, v93, (uint64_t *)v123);
        uint64_t v97 = OUTLINED_FUNCTION_69_6(v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, v98, v89 + 4);
        OUTLINED_FUNCTION_22();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v26,  v87,  "%s.processIntentConversionResult setting state to runRCH",  v89);
        OUTLINED_FUNCTION_17_0(v90);
        uint64_t v99 = v90;
        uint64_t v100 = v112;
        OUTLINED_FUNCTION_0_2(v99);
        uint64_t v101 = (uint64_t)v89;
        uint64_t v17 = v111;
        OUTLINED_FUNCTION_0_2(v101);
      }

      else
      {

        OUTLINED_FUNCTION_30_44();
        uint64_t v100 = v13;
      }

      uint64_t v102 = v113;
      uint64_t v103 = v115;
      uint64_t v104 = (*(uint64_t (**)(uint64_t, id, uint64_t))(*v119 + 328LL))(v17, v113, v115);
      *(void *)&v123[0] = v104;
      uint64_t v105 = type metadata accessor for RCHFlowResult(255LL, v117, v116);
      uint64_t v106 = OUTLINED_FUNCTION_37_40(v105);
      swift_getWitnessTable(&protocol conformance descriptor for AnyValueFlow<A>, v106);
      uint64_t v107 = Flow.eraseToAnyValueFlow()(v106);
      swift_release(v104);
      uint64_t v108 = v118;
      *uint64_t v118 = v107;
      swift_storeEnumTagMultiPayload(v108, v114, 2LL);
      OUTLINED_FUNCTION_14_73();

      swift_release(v103);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v100);
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v68 = OUTLINED_FUNCTION_15_1();
      os_log_type_t v69 = (os_log_s *)__swift_project_value_buffer(v68, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v69);
      BOOL v70 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v71 = 0;
        _os_log_impl(&dword_0, v69, v70, "Could not convert Intent, stopping", v71, 2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v71);
      }

      OUTLINED_FUNCTION_17_64();
      OUTLINED_FUNCTION_15_77();
      swift_release(v22);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
    }
  }

  else
  {
    uint64_t v52 = *(void (**)(uint64_t))(v9 + 8);
    uint64_t v53 = OUTLINED_FUNCTION_46_32();
    v52(v53);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v54 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v54, (uint64_t)static Logger.siriPhone);
    uint64_t v55 = OUTLINED_FUNCTION_20_64();
    uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
    uint64_t v58 = static os_log_type_t.debug.getter(v56, v57);
    if (os_log_type_enabled(v56, v58))
    {
      uint64_t v59 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v60 = OUTLINED_FUNCTION_7_0(32LL);
      id v61 = v118;
      uint64_t v62 = v60;
      *(void *)&v123[0] = v60;
      *(_DWORD *)uint64_t v59 = 136315138;
      uint64_t v117 = v59 + 4;
      v18();
      OUTLINED_FUNCTION_44_31(v8);
      uint64_t v63 = ((uint64_t (*)(uint64_t *, uint64_t))v52)(v61, v8);
      uint64_t v65 = OUTLINED_FUNCTION_6_97(v63, v64, (uint64_t *)v123);
      uint64_t v66 = OUTLINED_FUNCTION_69_6(v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v66, v67, v117);
      OUTLINED_FUNCTION_30_44();
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_57_0(&dword_0, v56, v58, "Unexpected state, stopping: %s", v59);
      OUTLINED_FUNCTION_17_0(v62);
      OUTLINED_FUNCTION_0_2(v62);
      OUTLINED_FUNCTION_0_2((uint64_t)v59);
    }

    else
    {

      OUTLINED_FUNCTION_30_44();
    }

    OUTLINED_FUNCTION_17_64();
    OUTLINED_FUNCTION_15_77();
  }

  OUTLINED_FUNCTION_7_5();
}

void CallingFlowAbstraction.__allocating_init(app:flowName:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
}

void CallingFlowAbstraction.__allocating_init(state:app:flowName:sharedGlobals:)()
{
}

uint64_t CallingFlowAbstraction.init(state:app:flowName:sharedGlobals:)()
{
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  OUTLINED_FUNCTION_51_1();
  uint64_t v8 = *v1;
  uint64_t v11 = OUTLINED_FUNCTION_7_14(v9, *(void *)(*v1 + 256), *(void *)(*v1 + 264), v10);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v19 - v13;
  *(uint64_t *)((char *)v1 + *(void *)(v8 + 28specialized Set.contains(_:)(intentTypeName._countAndFlagsBits, (uint64_t)intentTypeName._object, *(void *)(v1 + 8)) = v4;
  uint64_t v15 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 296));
  *uint64_t v15 = v3;
  v15[1] = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v5, v11);
  outlined init with copy of SignalProviding((uint64_t)v0, (uint64_t)&v20);
  PhoneFlow.init(state:sharedGlobals:)((uint64_t)v14);
  uint64_t v17 = v16;
  __swift_destroy_boxed_opaque_existential_1(v0);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v11);
  return v17;
}

uint64_t (*implicit closure #5 in CallingFlowAbstraction.prepare(completion:)(uint64_t a1))()
{
  return partial apply for implicit closure #6 in implicit closure #5 in CallingFlowAbstraction.prepare(completion:);
}

uint64_t (*implicit closure #5 in CallingFlowAbstraction.execute()(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = swift_allocObject(&unk_415260, 32LL, 7LL);
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = a2;
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  swift_retain();
  return partial apply for implicit closure #6 in implicit closure #5 in CallingFlowAbstraction.execute();
}

uint64_t CallingFlowAbstraction.makeRCHFlow(input:intent:app:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_15_1();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v5, v0);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v10 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v13 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020LL, 0x8000000000351440LL, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v9 + 4);
    OUTLINED_FUNCTION_57_0(&dword_0, v7, v8, "%s", v9);
    OUTLINED_FUNCTION_17_0(v10);
    OUTLINED_FUNCTION_0_2(v10);
    OUTLINED_FUNCTION_0_2((uint64_t)v9);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000020LL, 0x8000000000351440LL);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000020LL,  0x8000000000351440LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
  __break(1u);
  return result;
}

void CallingFlowAbstraction.init(sharedGlobals:)()
{
}

void CallingFlowAbstraction.init(state:sharedGlobals:)()
{
}

uint64_t CallingFlowAbstraction.__ivar_destroyer()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + *(void *)(*(void *)v0 + 296LL) + 8));
}

uint64_t CallingFlowAbstraction.__deallocating_deinit()
{
  uint64_t v0 = CallingFlowAbstraction.deinit();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_2A2638()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t type metadata completion function for CallingFlowAbstraction(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_33D648;
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 288);
}

uint64_t type metadata accessor for CallingFlowAbstraction(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CallingFlowAbstraction);
}

uint64_t sub_2A26B8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for implicit closure #6 in implicit closure #5 in CallingFlowAbstraction.execute()()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 216LL))();
}

  ;
}

uint64_t OUTLINED_FUNCTION_6_97(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_14_73()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)v0 + 136LL))(v1);
}

uint64_t OUTLINED_FUNCTION_15_77()
{
  return (*(uint64_t (**)(uint64_t))(**(void **)(v1 - 176) + 136LL))(v0);
}

uint64_t OUTLINED_FUNCTION_17_64()
{
  return swift_storeEnumTagMultiPayload(*(void *)(v1 - 184), v0, 7LL);
}

uint64_t OUTLINED_FUNCTION_20_64()
{
  return swift_retain(*(void *)(v0 - 176));
}

void *OUTLINED_FUNCTION_23_59()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 128), *(void *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_24_51()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_28_54@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

void OUTLINED_FUNCTION_29_44(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_30_44()
{
  return swift_release(*(void *)(v0 - 176));
}

uint64_t OUTLINED_FUNCTION_37_40(uint64_t a1)
{
  return type metadata accessor for AnyValueFlow(0LL, a1);
}

uint64_t OUTLINED_FUNCTION_41_37()
{
  return v1(v0);
}

void OUTLINED_FUNCTION_44_31(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_46_32()
{
  return v0;
}

uint64_t HandleIntentSubmitter.submit(app:intent:)(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = *v2;
  return swift_task_switch(HandleIntentSubmitter.submit(app:intent:), 0LL, 0LL);
}

uint64_t HandleIntentSubmitter.submit(app:intent:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = v0[14];
  uint64_t v3 = (void *)v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = type metadata accessor for Logger(0LL);
  v0[18] = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  swift_retain_n(v2, 2LL);
  swift_retain_n(v1, 2LL);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    uint64_t v8 = v0[16];
    uint64_t v9 = v0[17];
    uint64_t v10 = v0[14];
    id v38 = (id)v0[15];
    uint64_t v11 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v39 = OUTLINED_FUNCTION_7_0(96LL);
    uint64_t v40 = v39;
    *(_DWORD *)uint64_t v11 = 136315650;
    v0[9] = v8;
    uint64_t v13 = type metadata accessor for HandleIntentSubmitter(0LL, *(void *)(v9 + 80), *(void *)(v9 + 88), v12);
    swift_retain();
    uint64_t v14 = String.init<A>(describing:)(v0 + 9, v13);
    v0[10] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v11 + 4);
    OUTLINED_FUNCTION_31_1(v8);
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    v0[11] = v10;
    uint64_t v16 = type metadata accessor for App(0LL);
    unint64_t v17 = lazy protocol witness table accessor for type App and conformance App();
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter(v16, v17);
    v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 12, v0 + 13, v11 + 14);
    OUTLINED_FUNCTION_31_1(v10);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v11 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    id v20 = [v38 typeName];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    unint64_t v23 = v22;

    v0[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v11 + 24);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v7, "#%s Submitting single HandleIntent for app: %s, intent: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy(v39, 3LL);
    OUTLINED_FUNCTION_0_2(v39);
    OUTLINED_FUNCTION_0_2(v11);
  }

  else
  {
    uint64_t v25 = (void *)v0[15];
    uint64_t v24 = v0[16];
    uint64_t v26 = v0[14];

    OUTLINED_FUNCTION_31_1(v26);
    OUTLINED_FUNCTION_31_1(v24);
  }

  uint64_t v27 = (void *)v0[15];
  uint64_t v28 = (void *)v0[16];
  HandleIntentSubmitter.applyAppToIntent(app:intent:)(v0[14], v27);
  OUTLINED_FUNCTION_49( v29,  &lazy cache variable for type metadata for SAIntentGroupHandleIntent,  &OBJC_CLASS___SAIntentGroupHandleIntent_ptr);
  SAIntentGroupHandleIntent.init(intent:appIdentifier:)(v27, 0LL, 0LL);
  uint64_t v31 = v30;
  v0[19] = v30;
  uint64_t v32 = v28 + 2;
  uint64_t v33 = v28[5];
  uint64_t v34 = v28[6];
  __swift_project_boxed_opaque_existential_1(v32, v33);
  uint64_t v35 = (void *)swift_task_alloc(async function pointer to AceServiceInvokerAsync.submit<A>(_:)[1]);
  v0[20] = v35;
  uint64_t v36 = OUTLINED_FUNCTION_49( (uint64_t)v35,  &lazy cache variable for type metadata for SAIntentGroupHandleIntentCompleted,  &OBJC_CLASS___SAIntentGroupHandleIntentCompleted_ptr);
  *uint64_t v35 = v0;
  v35[1] = HandleIntentSubmitter.submit(app:intent:);
  return AceServiceInvokerAsync.submit<A>(_:)(v31, v33, v36, v34);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 152);
  uint64_t v3 = HandleIntentSubmitter.makeIntentResponse(from:)(v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_s *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v1 = *(void *)(v0 + 168);
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  uint64_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 168);
    os_log_type_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v32 = OUTLINED_FUNCTION_7_0(64LL);
    *(_DWORD *)uint64_t v8 = 136315394;
    *(void *)(v0 + 56) = v7;
    uint64_t v10 = type metadata accessor for HandleIntentSubmitter(0LL, *(void *)(v6 + 80), *(void *)(v6 + 88), v9);
    swift_retain();
    uint64_t v11 = String.init<A>(describing:)(v0 + 56, v10);
    *(void *)(v0 + 40) = OUTLINED_FUNCTION_5_100(v11, v12, v13, v14, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v8 + 4);
    OUTLINED_FUNCTION_31_1(v7);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v8 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    swift_getErrorValue(v5, v0 + 48, v0 + 16);
    uint64_t v16 = Error.localizedDescription.getter(*(void *)(v0 + 24), *(void *)(v0 + 32));
    *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_5_100(v16, v17, v18, v19, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v8 + 14);
    OUTLINED_FUNCTION_62();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v3, v4, "#%s makeIntentResponse threw an error: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v32, 2LL);
    OUTLINED_FUNCTION_0_2(v32);
    OUTLINED_FUNCTION_0_2(v8);
  }

  else
  {
    uint64_t v21 = *(void *)(v0 + 168);
    OUTLINED_FUNCTION_31_1(*(void *)(v0 + 128));
    swift_errorRelease(v21);
    swift_errorRelease(v21);
  }

  unint64_t v22 = *(void **)(v0 + 152);
  swift_willThrow(v23, v24, v25, v26, v27, v28, v29, v30);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HandleIntentSubmitter.submit(app:intent:)(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = HandleIntentSubmitter.submit(app:intent:);
  }

  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = HandleIntentSubmitter.submit(app:intent:);
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

void HandleIntentSubmitter.applyAppToIntent(app:intent:)(int a1, id a2)
{
  id v3 = [a2 _metadata];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 copy];

    _bridgeAnyObjectToAny(_:)(&v19, v5);
    uint64_t v6 = swift_unknownObjectRelease(v5);
    OUTLINED_FUNCTION_49( v6,  &lazy cache variable for type metadata for _INPBIntentMetadata,  &OBJC_CLASS____INPBIntentMetadata_ptr);
    else {
      os_log_type_t v7 = 0LL;
    }
  }

  else
  {
    os_log_type_t v7 = 0LL;
  }

  uint64_t v8 = App.appIdentifier.getter();
  if (v9)
  {
    uint64_t v10 = v9;
    if (!v7)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }

    uint64_t v11 = v8;
    unint64_t v19 = 0LL;
    unint64_t v20 = 0xE000000000000000LL;
    id v12 = v7;
    _StringGuts.grow(_:)(21LL);
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD000000000000013LL;
    unint64_t v20 = 0x8000000000347A90LL;
    v13._uint64_t countAndFlagsBits = v11;
    v13._object = v10;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_62();
    [v12 setLaunchId:v14];
  }

  else
  {
    if (!v7) {
      goto LABEL_16;
    }
    id v12 = v7;
  }

  id v15 = v12;
  App.systemExtensionBundleId.getter(v15);
  if (v16)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v17 = 0LL;
  }

  [v15 setSystemExtensionBundleId:v17];

LABEL_16:
  [a2 _setMetadata:v7];
}

id HandleIntentSubmitter.makeIntentResponse(from:)(void *a1)
{
  uint64_t v3 = *v1;
  id result = [a1 intentResponse];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }

  id v5 = result;
  id v6 = [result typeName];

  id result = [a1 intentResponse];
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }

  os_log_type_t v7 = result;
  id v8 = [result data];

  if (v8)
  {
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
    unint64_t v11 = v10;

    v12.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data._Representation(v9, v11);
  }

  else
  {
    v12.super.Class isa = 0LL;
  }

  id v13 = (id)INIntentResponseCreate(v6, v12.super.isa);

  if (v13)
  {
    id result = (id)swift_dynamicCastUnknownClass(v13, *(void *)(v3 + 88));
    if (result) {
      return result;
    }
  }

  return 0LL;
}

uint64_t type metadata accessor for HandleIntentSubmitter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HandleIntentSubmitter);
}

uint64_t type metadata completion function for HandleIntentSubmitter(uint64_t a1)
{
  uint64_t v2 = "(";
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + 96);
}

uint64_t AppDescription.init(id:appName:appBundleId:isFirstParty:rskeCommand:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16 = OUTLINED_FUNCTION_12();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a8, a1, v16);
  uint64_t v18 = (int *)OUTLINED_FUNCTION_0_102();
  unint64_t v19 = (void *)(a8 + v18[5]);
  *unint64_t v19 = a2;
  v19[1] = a3;
  unint64_t v20 = (void *)(a8 + v18[6]);
  void *v20 = a4;
  v20[1] = a5;
  *(_BYTE *)(a8 + v18[7]) = a6;
  unint64_t v21 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  CodableAceObject.init(wrappedValue:)(a7, v21);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
}

uint64_t type metadata accessor for AppDescription(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AppDescription;
  if (!type metadata singleton initialization cache for AppDescription) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppDescription);
  }
  return result;
}

unint64_t AppDisambiguationModel.responseViewId.getter()
{
  return 0xD000000000000011LL;
}

uint64_t AppDescription.id.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  return v1(v0);
}

void AppDescription.appName.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_0_102();
  OUTLINED_FUNCTION_33_43(*(int *)(v0 + 20));
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_2();
}

void AppDescription.appBundleId.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_0_102();
  OUTLINED_FUNCTION_33_43(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_2();
}

uint64_t AppDescription.isFirstParty.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_0_102() + 28));
}

void AppDescription.rskeCommand.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for AppDescription.rskeCommand : AppDescription(id *a1)
{
  return AppDescription.rskeCommand.setter((uint64_t)*a1);
}

uint64_t AppDescription.rskeCommand.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter(a1, v2);
}

void (*AppDescription.rskeCommand.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  OUTLINED_FUNCTION_0_102();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify(v2, v3);
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t static AppDescription.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(OUTLINED_FUNCTION_0_102() + 24);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  os_log_type_t v7 = (void *)(a2 + v4);
  uint64_t v8 = v7[1];
  if (v5 == *v7 && v6 == v8) {
    return 1LL;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, *v7, v8, 0LL);
  }
}

uint64_t AppDescription.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(OUTLINED_FUNCTION_0_102() + 24) + 8);
  swift_bridgeObjectRetain();
  uint64_t v2 = OUTLINED_FUNCTION_9_0();
  String.hash(into:)(v2, v3, v1);
  return swift_bridgeObjectRelease();
}

uint64_t AppDescription.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 25705 && a2 == 0xE200000000000000LL)
  {
    unint64_t v5 = 0xE200000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705LL, 0xE200000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x656D614E707061LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v8 = 0xE700000000000000LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656D614E707061LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x6C646E7542707061LL && a2 == 0xEB00000000644965LL)
  {
    unint64_t v10 = 0xEB00000000644965LL;
    goto LABEL_24;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C646E7542707061LL, 0xEB00000000644965LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2LL;
  }

  if (a1 == 0x5074737269467369LL && a2 == 0xEC00000079747261LL)
  {
    unint64_t v12 = 0xEC00000079747261LL;
    goto LABEL_32;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5074737269467369LL, 0xEC00000079747261LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3LL;
  }

  if (a1 == 0x6D6D6F43656B7372LL && a2 == 0xEB00000000646E61LL)
  {
    swift_bridgeObjectRelease(0xEB00000000646E61LL);
    return 4LL;
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D6D6F43656B7372LL, 0xEB00000000646E61LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

uint64_t AppDescription.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2A375C + 4 * byte_33D6A0[a1]))( 25705LL,  0xE200000000000000LL);
}

uint64_t sub_2A375C()
{
  return 0x656D614E707061LL;
}

uint64_t sub_2A3774()
{
  return 0x6C646E7542707061LL;
}

uint64_t sub_2A3794()
{
  return 0x5074737269467369LL;
}

uint64_t sub_2A37B4()
{
  return 0x6D6D6F43656B7372LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDescription.CodingKeys()
{
  return AppDescription.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDescription.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = AppDescription.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDescription.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDescription.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppDescription.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDescription.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  unint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  unint64_t v11 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_415558, &unk_415558, v11, v9, v10);
  v24[1] = 0;
  type metadata accessor for UUID(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UUID and conformance UUID,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  OUTLINED_FUNCTION_6_12();
  if (!v2)
  {
    unint64_t v12 = (int *)type metadata accessor for AppDescription(0LL);
    id v13 = (uint64_t *)(v3 + v12[5]);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    v24[0] = 1;
    OUTLINED_FUNCTION_1_8(v14, v15, (uint64_t)v24);
    uint64_t v16 = (uint64_t *)(v3 + v12[6]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v23 = 2;
    OUTLINED_FUNCTION_1_8(v17, v18, (uint64_t)&v23);
    uint64_t v19 = *(unsigned __int8 *)(v3 + v12[7]);
    char v22 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v19, &v22, v5);
    v21[11] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_6_12();
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppDescription.CodingKeys, &unk_415558);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppDescription.CodingKeys, &unk_415558);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable("=}\r", &unk_415558);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppDescription.CodingKeys, &unk_415558);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }

  return result;
}

Swift::Int AppDescription.hashValue.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_102();
  OUTLINED_FUNCTION_33_43(*(int *)(v2 + 24));
  String.hash(into:)(v4, v0, v1);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void AppDescription.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v28 = v4;
  uint64_t v29 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v29 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v30 = v6;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDescription.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v7 = (int *)type metadata accessor for AppDescription(0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  unint64_t v12 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  uint64_t v31 = v2;
  uint64_t v13 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_415558, &unk_415558, v12, v11, v10);
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  else
  {
    uint64_t v14 = (uint64_t)v9;
    char v38 = 0;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UUID and conformance UUID,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = v29;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v29, &v38, v32, v29, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v14, v30, v15);
    char v37 = 1;
    uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v32);
    uint64_t v18 = (uint64_t *)(v14 + v7[5]);
    uint64_t *v18 = v17;
    v18[1] = v19;
    char v36 = 2;
    uint64_t v20 = KeyedDecodingContainer.decode(_:forKey:)(&v36, v32);
    unint64_t v21 = (uint64_t *)(v14 + v7[6]);
    *unint64_t v21 = v20;
    v21[1] = v22;
    char v35 = 3;
    *(_BYTE *)(v14 + v7[7]) = KeyedDecodingContainer.decode(_:forKey:)(&v35, v32) & 1;
    char v34 = 4;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v27, &v34, v32, v27, v23);
    OUTLINED_FUNCTION_1_96();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v14 + v7[8], v28, v27);
    outlined init with copy of AppDescription(v14, v26);
    __swift_destroy_boxed_opaque_existential_1(a1);
    outlined destroy of AppDescription(v14);
  }

  OUTLINED_FUNCTION_7_1();
}

void protocol witness for Decodable.init(from:) in conformance AppDescription( void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppDescription(void *a1)
{
  return AppDescription.encode(to:)(a1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AppDescription( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(a2 + 24));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

uint64_t outlined init with copy of AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppDescription(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of AppDescription(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppDescription(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void AppDisambiguationModel.prompt.getter()
{
}

uint64_t AppDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x7263736544707061LL && a2 == 0xEF736E6F69747069LL)
  {
    unint64_t v5 = 0xEF736E6F69747069LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7263736544707061LL, 0xEF736E6F69747069LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x74706D6F7270LL && a2 == 0xE600000000000000LL)
  {
    swift_bridgeObjectRelease(0xE600000000000000LL);
    return 1LL;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x74706D6F7270LL, 0xE600000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t AppDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x74706D6F7270LL;
  }
  else {
    return 0x7263736544707061LL;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDisambiguationModel.CodingKeys()
{
  return AppDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDisambiguationModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = AppDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDisambiguationModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDisambiguationModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void AppDisambiguationModel.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDisambiguationModel.CodingKeys>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  unint64_t v13 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_4154C8, &unk_4154C8, v13, v11, v12);
  uint64_t v19 = a2;
  char v18 = 0;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
  uint64_t v15 = lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A]( &lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A],  &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription,  (uint64_t)&protocol conformance descriptor for AppDescription,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v19, &v18, v9, v14, v15);
  if (!v4)
  {
    char v17 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(a3, a4, &v17, v9);
  }

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v9);
  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_4154C8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_4154C8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_4154C8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppDisambiguationModel.CodingKeys, &unk_4154C8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }

  return result;
}

uint64_t AppDisambiguationModel.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDisambiguationModel.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  unint64_t v6 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_4154C8, &unk_4154C8, v6, v4, v5);
  if (v1)
  {
    OUTLINED_FUNCTION_11_12();
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
    char v11 = 0;
    uint64_t v8 = lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A]( &lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A],  &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription,  (uint64_t)&protocol conformance descriptor for AppDescription,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v7, &v11, v3, v7, v8);
    uint64_t v4 = v12;
    char v10 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v10, v3);
    OUTLINED_FUNCTION_0_54();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_12();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_5();
  }

  return v4;
}

uint64_t lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A]( unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [AppDescription]);
    lazy protocol witness table accessor for type UUID and conformance UUID( a2,  type metadata accessor for AppDescription);
    uint64_t result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }

  return result;
}

void base witness table accessor for Equatable in AppDescription()
{
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance AppDisambiguationModel()
{
  return 0xD000000000000011LL;
}

unint64_t instantiation function for generic protocol witness table for AppDisambiguationModel( uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppDisambiguationModel@<X0>( void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = AppDisambiguationModel.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }

  return result;
}

void protocol witness for Encodable.encode(to:) in conformance AppDisambiguationModel(void *a1)
{
}

void sub_2A4594(void *a1@<X8>)
{
  *a1 = v2;
}

void *initializeBufferWithCopyOfBuffer for AppDescription(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = type metadata accessor for UUID(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (void *)((char *)a1 + v8);
    char v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    unint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    char v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
  }

  return a1;
}

uint64_t destroy for AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
}

uint64_t initializeWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16LL))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24LL))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40LL))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2A4A28);
}

uint64_t sub_2A4A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_12();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }

  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v8 = a1 + *(int *)(a3 + 32);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }

  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 9) = -1;
  }
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AppDescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2A4AD4);
}

uint64_t sub_2A4AD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = OUTLINED_FUNCTION_12();
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = a1;
  }

  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20) + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = (a2 - 1);
      return result;
    }

    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v10 = a1 + *(int *)(a4 + 32);
  }

  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void type metadata completion function for AppDescription(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = &unk_33D870;
    __int128 v6[2] = &unk_33D870;
    void v6[3] = &unk_33D888;
    type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>(319LL);
    if (v5 <= 0x3F)
    {
      v6[4] = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 5LL, v6, a1 + 16);
    }
  }

uint64_t destroy for AppDisambiguationModel(void *a1)
{
  return swift_bridgeObjectRelease(a1[2]);
}

void initializeBufferWithCopyOfBuffer for AppDisambiguationModel(void *a1, void *a2)
{
  uint64_t v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_2();
}

uint64_t *assignWithCopy for AppDisambiguationModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for AppDisambiguationModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  uint64_t v5 = a2[2];
  uint64_t v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for AppDisambiguationModel()
{
  return &type metadata for AppDisambiguationModel;
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2A4D70 + 4 * byte_33D6AA[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2A4DA4 + 4 * byte_33D6A5[v4]))();
}

uint64_t sub_2A4DA4(uint64_t result)
{
  *(_BYTE *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A4DAC(uint64_t result, int a2)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (a2) {
    JUMPOUT(0x2A4DB4LL);
  }
  return result;
}

uint64_t sub_2A4DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (!a2) {
    JUMPOUT(0x2A4DC8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2A4DCC(uint64_t result)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A4DD4(uint64_t result)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

void *type metadata accessor for AppDisambiguationModel.CodingKeys()
{
  return &unk_4154C8;
}

uint64_t storeEnumTagSinglePayload for AppDescription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_2A4E3C + 4 * byte_33D6B4[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2A4E70 + 4 * byte_33D6AF[v4]))();
}

uint64_t sub_2A4E70(uint64_t result)
{
  *(_BYTE *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A4E78(uint64_t result, int a2)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (a2) {
    JUMPOUT(0x2A4E80LL);
  }
  return result;
}

uint64_t sub_2A4E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (!a2) {
    JUMPOUT(0x2A4E94LL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_2A4E98(uint64_t result)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A4EA0(uint64_t result)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

void *type metadata accessor for AppDescription.CodingKeys()
{
  return &unk_415558;
}

uint64_t OUTLINED_FUNCTION_0_102()
{
  return type metadata accessor for AppDescription(0LL);
}

uint64_t OUTLINED_FUNCTION_1_96()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v1 - 104), *(void *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_14_74@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(v1 + a1 + 8));
}

Swift::Void __swiftcall SiriKitEventSending.sendCallStateEvent(hangUpIntentResponse:)( INHangUpCallIntentResponse hangUpIntentResponse)
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  uint64_t v65 = (char *)type metadata accessor for ActivityType(0LL);
  uint64_t v7 = *((void *)v65 - 1);
  __chkstk_darwin();
  BOOL v70 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriKitReliabilityCodes?);
  __chkstk_darwin();
  uint64_t v66 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = *(void *)(type metadata accessor for SiriKitReliabilityCodes(0LL) - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v65 - v15;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v65 - v17;
  Class isa = hangUpIntentResponse.super.super.isa;
  uint64_t v21 = v20;
  uint64_t v67 = v5;
  uint64_t v68 = v3;
  uint64_t v69 = v4;
  SiriKitEventSending.makeIntentResponseToCallState(hangUpIntentResponse:)(isa, (uint64_t)v11);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, v21) == 1)
  {
    outlined destroy of SiriKitReliabilityCodes?((uint64_t)v11);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl( &dword_0,  v24,  v25,  "#SiriKitEventSending Could not map IntentResponse to a loggable call state",  v26,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }

    return;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, v21);
  if (one-time initialization token for kUnsupportedCallStates != -1) {
    swift_once( &one-time initialization token for kUnsupportedCallStates,  one-time initialization function for kUnsupportedCallStates);
  }
  specialized Set.contains(_:)((uint64_t)v18, (void *)kUnsupportedCallStates);
  char v28 = v27;
  OUTLINED_FUNCTION_129_3((uint64_t)v16, (uint64_t)v18);
  uint64_t v29 = v70;
  if ((v28 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_88();
LABEL_20:
    uint64_t v51 = v18;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v52 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
    uint64_t v53 = OUTLINED_FUNCTION_129_3((uint64_t)v14, (uint64_t)v18);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v57 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v65 = v18;
      uint64_t v58 = v57;
      uint64_t v71 = v57;
      *(_DWORD *)uint64_t v56 = 136315138;
      uint64_t v59 = SiriKitReliabilityCodes.rawValue.getter();
      uint64_t v61 = OUTLINED_FUNCTION_89(v59, v60);
      uint64_t v62 = OUTLINED_FUNCTION_10_4(v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v62, v63, v56 + 4);
      swift_bridgeObjectRelease();
      uint64_t v64 = v65;
      ((void (*)(char *, uint64_t))v65)(v14, v21);
      _os_log_impl( &dword_0,  v54,  v55,  "#SiriKitEventSending callState %s could not be logged because it is not supported. Sending calls and held calls should be treated as active.",  v56,  0xCu);
      swift_arrayDestroy(v58, 1LL);
      OUTLINED_FUNCTION_0_2(v58);
      OUTLINED_FUNCTION_0_2((uint64_t)v56);

      ((void (*)(char *, uint64_t))v64)(v51, v21);
    }

    else
    {

      ((void (*)(char *, uint64_t))v18)(v14, v21);
      ((void (*)(char *, uint64_t))v18)(v18, v21);
    }

    return;
  }

  if (one-time initialization token for kSupportedCallStates != -1) {
    swift_once( &one-time initialization token for kSupportedCallStates,  one-time initialization function for kSupportedCallStates);
  }
  specialized Set.contains(_:)((uint64_t)v16, (void *)kSupportedCallStates);
  char v31 = v30;
  OUTLINED_FUNCTION_2_88();
  if ((v31 & 1) == 0) {
    goto LABEL_20;
  }
  type metadata accessor for SiriKitEvent(0LL);
  (*(void (**)(char *, void, char *))(v7 + 104))( v29,  enum case for ActivityType.getCallBackgroundState(_:),  v65);
  uint64_t v32 = v18;
  if (one-time initialization token for emptyHangUpCallIntent != -1) {
    swift_once( &one-time initialization token for emptyHangUpCallIntent,  one-time initialization function for emptyHangUpCallIntent);
  }
  id v33 = objc_msgSend((id)static PhoneCallIntentClassNames.emptyHangUpCallIntent, "typeName", v18);
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  uint64_t v36 = v35;

  uint64_t v37 = v66;
  OUTLINED_FUNCTION_129_3(v66, (uint64_t)v18);
  __swift_storeEnumTagSinglePayload(v37, 0LL, 1LL, v21);
  uint64_t v38 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)( v29,  v34,  v36,  v37,  closure #1 in SiriKitEventSending.sendCallStateEvent(hangUpIntentResponse:),  0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v39 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v39, (uint64_t)static Logger.siriPhone);
  uint64_t v40 = swift_retain_n(v38, 2LL);
  uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v43 = static os_log_type_t.debug.getter(v41, v42);
  if (os_log_type_enabled(v41, v43))
  {
    uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v45 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v71 = v45;
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v46 = SiriKitEvent.debugDescription.getter();
    uint64_t v48 = OUTLINED_FUNCTION_89(v46, v47);
    uint64_t v49 = OUTLINED_FUNCTION_10_4(v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v49, v50, v44 + 4);
    OUTLINED_FUNCTION_29_18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v41, v43, "#SiriKitEventSending logging GetCallBackgroundState: %s", v44, 0xCu);
    swift_arrayDestroy(v45, 1LL);
    OUTLINED_FUNCTION_0_2(v45);
    OUTLINED_FUNCTION_0_2((uint64_t)v44);
  }

  else
  {

    OUTLINED_FUNCTION_29_18();
  }

  dispatch thunk of SiriKitEventSending.send(_:)(v38, v67, v69);
  swift_release(v38);
  ((void (*)(char *, uint64_t))v65)(v32, v21);
}

void one-time initialization function for kSupportedCallStates()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SiriKitReliabilityCodes>);
  uint64_t v1 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = swift_allocObject(v0, v5 + 3 * v3, v4 | 7);
  *(_OWORD *)(v6 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_320080;
  uint64_t v7 = v6 + v5;
  uint64_t v8 = *(void (**)(uint64_t, void, uint64_t))(v2 + 104);
  v8(v7, enum case for SiriKitReliabilityCodes.callStateActive(_:), v1);
  v8(v7 + v3, enum case for SiriKitReliabilityCodes.callStateRingIncoming(_:), v1);
  v8(v7 + 2 * v3, enum case for SiriKitReliabilityCodes.callStateDisconnected(_:), v1);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  kSupportedCallStates = v9;
}

void one-time initialization function for kUnsupportedCallStates()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SiriKitReliabilityCodes>);
  uint64_t v1 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = swift_allocObject(v0, v5 + 2 * v3, v4 | 7);
  *(_OWORD *)(v6 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D880;
  uint64_t v7 = v6 + v5;
  uint64_t v8 = *(void (**)(uint64_t, void, uint64_t))(v2 + 104);
  v8(v7, enum case for SiriKitReliabilityCodes.callStateRingOutgoing(_:), v1);
  v8(v7 + v3, enum case for SiriKitReliabilityCodes.callStateHeld(_:), v1);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  kUnsupportedCallStates = v9;
}

uint64_t SiriKitEventSending.makeIntentResponseToCallState(hangUpIntentResponse:)@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  if ([a1 code] == (char *)&dword_4 + 2)
  {
    uint64_t v4 = (unsigned int *)&enum case for SiriKitReliabilityCodes.callStateDisconnected(_:);
  }

  else if ([a1 hungUpCallType] == (char *)&dword_4 + 3)
  {
    uint64_t v4 = (unsigned int *)&enum case for SiriKitReliabilityCodes.callStateActive(_:);
  }

  else
  {
    if ([a1 hungUpCallType] != (char *)&dword_4 + 2)
    {
      uint64_t v9 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v7 = a2;
      uint64_t v8 = 1LL;
      return __swift_storeEnumTagSinglePayload(v7, v8, 1LL, v9);
    }

    uint64_t v4 = (unsigned int *)&enum case for SiriKitReliabilityCodes.callStateRingIncoming(_:);
  }

  uint64_t v5 = *v4;
  uint64_t v6 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104LL))(a2, v5, v6);
  uint64_t v7 = a2;
  uint64_t v8 = 0LL;
  uint64_t v9 = v6;
  return __swift_storeEnumTagSinglePayload(v7, v8, 1LL, v9);
}

uint64_t outlined destroy of SiriKitReliabilityCodes?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriKitReliabilityCodes?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t closure #1 in SiriKitEventSending.sendCallStateEvent(hangUpIntentResponse:)()
{
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.parameterName.setter(0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_2_88()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void PreferredCallProviderSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)()
{
}

uint64_t PreferredCallProviderSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v15 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)(v29, v15);
  swift_unknownObjectRelease(v15);
  type metadata accessor for INPreferredCallProvider(0LL);
  else {
    uint64_t v16 = (*(uint64_t (**)(void))(*(void *)(*(void *)(*(void *)(a9 + 32) + 8LL) + 16LL) + 8LL))(*(void *)(a9 + 16));
  }
  uint64_t v17 = *(void **)(v9 + 40);
  if (v16)
  {
    uint64_t v18 = INPreferredCallProviderGetBackingType(v16);
    switch((_DWORD)v18)
    {
      case 4:
        uint64_t v19 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v19 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v19 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v19 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v18));
        goto LABEL_14;
    }

    uint64_t v22 = v19;
LABEL_14:
    uint64_t v23 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    unint64_t v20 = v24;

    goto LABEL_15;
  }

  unint64_t v20 = 0xE700000000000000LL;
  uint64_t v21 = 0x4E574F4E4B4E55LL;
LABEL_15:
  SpeakableString.init(print:speak:)(v21, v20, 0LL, 0LL);
  uint64_t v25 = type metadata accessor for SpeakableString(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0LL, 1LL, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v17 + 128))( v14,  a7,  a8);
  return outlined destroy of SpeakableString?((uint64_t)v14);
}

void PreferredCallProviderSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)()
{
}

uint64_t PreferredCallProviderSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( int a1, int a2, int a3, id a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  switch((unint64_t)[a4 unsupportedReason])
  {
    case 1uLL:
      uint64_t v14 = *(void **)(v10 + 40);
      type metadata accessor for SirikitDeviceState(0LL);
      outlined init with copy of SignalProviding(v10, (uint64_t)v30);
      uint64_t v15 = SirikitDeviceState.__allocating_init(from:)(v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                + *v14
                                                                + 2144))( v15,  0LL,  a8,  a9);
      uint64_t v16 = v15;
      return swift_release(v16);
    case 3uLL:
      OUTLINED_FUNCTION_7_106();
      return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v21 + 2048))( a8,  a9);
    case 4uLL:
      OUTLINED_FUNCTION_5_101();
      id v23 = OUTLINED_FUNCTION_1_97();
      OUTLINED_FUNCTION_0_103(v23);
      uint64_t v24 = OUTLINED_FUNCTION_3_117();
      uint64_t v25 = OUTLINED_FUNCTION_2_89(v24);
      uint64_t v20 = OUTLINED_FUNCTION_4_101(v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + *v11
                                                                 + 2112))( a5,  v20,  a8,  a9);
      goto LABEL_7;
    case 5uLL:
      OUTLINED_FUNCTION_5_101();
      id v26 = OUTLINED_FUNCTION_1_97();
      OUTLINED_FUNCTION_0_103(v26);
      uint64_t v27 = OUTLINED_FUNCTION_3_117();
      uint64_t v28 = OUTLINED_FUNCTION_2_89(v27);
      uint64_t v20 = OUTLINED_FUNCTION_4_101(v28);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + *v11
                                                                 + 2016))( a5,  v20,  a8,  a9);
      goto LABEL_7;
    case 6uLL:
      OUTLINED_FUNCTION_7_106();
      return (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v29 + 2080))( a8,  a9);
    default:
      OUTLINED_FUNCTION_5_101();
      id v17 = OUTLINED_FUNCTION_1_97();
      OUTLINED_FUNCTION_0_103(v17);
      uint64_t v18 = OUTLINED_FUNCTION_3_117();
      uint64_t v19 = OUTLINED_FUNCTION_2_89(v18);
      uint64_t v20 = OUTLINED_FUNCTION_4_101(v19);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + *v11
                                                                 + 1984))( a5,  v20,  a8,  a9);
LABEL_7:
      swift_release(a5);
      uint64_t v16 = v20;
      return swift_release(v16);
  }

uint64_t protocol witness for SlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:) in conformance PreferredCallProviderSlotTemplating<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return PreferredCallProviderSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

void protocol witness for SlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:) in conformance PreferredCallProviderSlotTemplating<A, B>()
{
}

uint64_t protocol witness for SlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:) in conformance PreferredCallProviderSlotTemplating<A, B>( int a1, int a2, int a3, id a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return PreferredCallProviderSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10);
}

uint64_t type metadata accessor for PreferredCallProviderSlotTemplating( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for PreferredCallProviderSlotTemplating);
}

void OUTLINED_FUNCTION_0_103(void *a1)
{
}

id OUTLINED_FUNCTION_1_97()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_89(uint64_t a1, ...)
{
  return outlined init with copy of SignalProviding(v1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_3_117()
{
  return type metadata accessor for SirikitDeviceState(0LL);
}

uint64_t OUTLINED_FUNCTION_4_101(uint64_t a1, ...)
{
  return SirikitDeviceState.__allocating_init(from:)(va);
}

  ;
}

uint64_t RedirectToServerFlow.__allocating_init(to:sharedGlobals:isSentinelFlow:)( char a1, __int128 *a2, char a3)
{
  uint64_t v7 = swift_allocObject(v3, 65LL, 7LL);
  RedirectToServerFlow.init(to:sharedGlobals:isSentinelFlow:)(a1, a2, a3);
  return v7;
}

uint64_t RedirectToServerFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedirectToServerFlow();
  uint64_t v5 = lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow( &lazy protocol witness table cache variable for type RedirectToServerFlow and conformance RedirectToServerFlow,  (uint64_t)&protocol conformance descriptor for RedirectToServerFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance RedirectToServerFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RedirectToServerFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t base witness table accessor for Flow in RedirectToServerFlow()
{
  return lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow( &lazy protocol witness table cache variable for type RedirectToServerFlow and conformance RedirectToServerFlow,  (uint64_t)&protocol conformance descriptor for RedirectToServerFlow);
}

uint64_t base witness table accessor for SiriEnvironmentLocating in RedirectToServerFlow()
{
  return lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow( &lazy protocol witness table cache variable for type RedirectToServerFlow and conformance RedirectToServerFlow,  (uint64_t)&protocol conformance descriptor for RedirectToServerFlow);
}

uint64_t lazy protocol witness table accessor for type RedirectToServerFlow and conformance RedirectToServerFlow( unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for RedirectToServerFlow();
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_3_118()
{
  return (*(uint64_t (**)(void, void))(v0[25] + 8LL))(v0[26], v0[24]);
}

uint64_t OUTLINED_FUNCTION_6_98()
{
  return static ExecuteResponse.unhandled(reason:isComplete:)(v0, *(unsigned __int8 *)(v1 + 64));
}

uint64_t OUTLINED_FUNCTION_7_107(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

BOOL SIRINLUUserDialogAct.isAccepted.getter(uint64_t a1)
{
  return SIRINLUUserDialogAct.isAccepted.getter(a1, &OBJC_CLASS___SIRINLUUserAccepted_ptr);
}

BOOL SIRINLUUserDialogAct.isRejected.getter(uint64_t a1)
{
  return SIRINLUUserDialogAct.isAccepted.getter(a1, &OBJC_CLASS___SIRINLUUserRejected_ptr);
}

BOOL SIRINLUUserDialogAct.isCancelled.getter(uint64_t a1)
{
  return SIRINLUUserDialogAct.isAccepted.getter(a1, &OBJC_CLASS___SIRINLUUserCancelled_ptr);
}

BOOL SIRINLUUserDialogAct.isAccepted.getter(uint64_t a1, void *a2)
{
  uint64_t v3 = objc_opt_self(*a2);
  return swift_dynamicCastObjCClass(v2, v3) != 0;
}

BOOL SIRINLUUserDialogAct.isRejectedOrCancelled.getter(uint64_t a1)
{
  BOOL v1 = SIRINLUUserDialogAct.isRejected.getter(a1);
  return v1 || SIRINLUUserDialogAct.isCancelled.getter(v1);
}

void BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for AudioSource(0LL);
  uint64_t v74 = *(void *)(v8 - 8);
  __chkstk_darwin();
  BOOL v70 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (AudioSource?, AudioSource?));
  __chkstk_darwin();
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioSource?);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v78 = (os_log_s *)((char *)&v65 - v13);
  __chkstk_darwin();
  uint64_t v77 = (char *)&v65 - v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = *(void *)(type metadata accessor for InputOrigin(0LL) - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin();
  uint64_t v22 = (char *)&v65 - v21;
  if (a1)
  {
    uint64_t v75 = v20;
    uint64_t v76 = v8;
    uint64_t v72 = v11;
    uint64_t v23 = one-time initialization token for siriPhone;
    swift_retain();
    if (v23 != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v24 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = swift_retain_n(a1, 4LL);
    id v26 = (os_log_s *)Logger.logObject.getter(v25);
    int v28 = static os_log_type_t.debug.getter(v26, v27);
    if (os_log_type_enabled(v26, (os_log_type_t)v28))
    {
      int v66 = v28;
      uint64_t v67 = a2;
      uint64_t v68 = a3;
      uint64_t v69 = v4;
      uint64_t v29 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v65 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v79 = v65;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v30 = ((uint64_t (*)(void))CurrentRequest.inputOrigin.getter)();
      uint64_t v31 = InputOrigin.rawValue.getter(v30);
      unint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v75);
      uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, &v79);
      uint64_t v35 = OUTLINED_FUNCTION_10_4(v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v35, v36, v29 + 4);
      OUTLINED_FUNCTION_0_3();
      uint64_t v37 = swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      CurrentRequest.audioSource.getter(v37);
      uint64_t v38 = v76;
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1LL, v76) == 1)
      {
        outlined destroy of SpeakableString?( (uint64_t)v16,  &demangling cache variable for type metadata for AudioSource?);
        unint64_t v39 = 0xE300000000000000LL;
        uint64_t v40 = 6369134LL;
      }

      else
      {
        uint64_t v40 = AudioSource.aceValue.getter();
        unint64_t v39 = v46;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v16, v38);
      }

      uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v39, &v79);
      uint64_t v48 = OUTLINED_FUNCTION_10_4(v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, v49, v29 + 14);
      OUTLINED_FUNCTION_0_3();
      swift_bridgeObjectRelease();
      _os_log_impl( &dword_0,  v26,  (os_log_type_t)v66,  "#TipKitDiscoverabilitySending InputOrigin: %s, AudioSource: %s",  (uint8_t *)v29,  0x16u);
      uint64_t v50 = v65;
      swift_arrayDestroy(v65, 2LL);
      OUTLINED_FUNCTION_0_2(v50);
      OUTLINED_FUNCTION_0_2(v29);

      a3 = v68;
      uint64_t v4 = v69;
      a2 = v67;
    }

    else
    {

      uint64_t v45 = swift_release_n(a1, 4LL);
    }

    CurrentRequest.inputOrigin.getter(v45);
    char v51 = InputOrigin.isVoiceTrigger.getter();
    uint64_t v52 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v75);
    uint64_t v54 = v76;
    uint64_t v53 = (uint64_t)v77;
    uint64_t v55 = (uint64_t)v72;
    uint64_t v56 = v78;
    if ((v51 & 1) == 0) {
      goto LABEL_27;
    }
    uint64_t v57 = CurrentRequest.audioSource.getter(v52);
    static AudioSource.bluetoothDoAPDevice.getter(v57);
    __swift_storeEnumTagSinglePayload((uint64_t)v56, 0LL, 1LL, v54);
    uint64_t v58 = v55 + *(int *)(v73 + 48);
    outlined init with copy of AudioSource?(v53, v55);
    outlined init with copy of AudioSource?((uint64_t)v56, v58);
    OUTLINED_FUNCTION_34_5(v55);
    if (v60)
    {
      OUTLINED_FUNCTION_58_7((uint64_t)v56);
      OUTLINED_FUNCTION_58_7(v53);
      OUTLINED_FUNCTION_34_5(v58);
      if (v60)
      {
        outlined destroy of SpeakableString?(v55, &demangling cache variable for type metadata for AudioSource?);
LABEL_26:
        (*(void (**)(void, uint64_t, uint64_t))(a3 + 8))(0LL, a2, a3);
        goto LABEL_27;
      }
    }

    else
    {
      uint64_t v59 = (uint64_t)v71;
      outlined init with copy of AudioSource?(v55, (uint64_t)v71);
      OUTLINED_FUNCTION_34_5(v58);
      if (!v60)
      {
        uint64_t v69 = v4;
        uint64_t v61 = v74;
        uint64_t v62 = v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v70, v58, v54);
        lazy protocol witness table accessor for type AudioSource and conformance AudioSource();
        LODWORD(v7__swift_destroy_boxed_opaque_existential_1(v0 + 5) = dispatch thunk of static Equatable.== infix(_:_:)(v59, v62, v54);
        uint64_t v63 = v53;
        uint64_t v64 = *(void (**)(char *, uint64_t))(v61 + 8);
        v64(v62, v54);
        OUTLINED_FUNCTION_58_7((uint64_t)v78);
        OUTLINED_FUNCTION_58_7(v63);
        v64(v71, v54);
        OUTLINED_FUNCTION_58_7(v55);
        if ((v75 & 1) == 0) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }

      outlined destroy of SpeakableString?((uint64_t)v56, &demangling cache variable for type metadata for AudioSource?);
      outlined destroy of SpeakableString?(v53, &demangling cache variable for type metadata for AudioSource?);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v59, v54);
    }

    outlined destroy of SpeakableString?( v55,  &demangling cache variable for type metadata for (AudioSource?, AudioSource?));
LABEL_27:
    swift_release(a1);
    return;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v41 = OUTLINED_FUNCTION_15_1();
  uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
  uint64_t v78 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v78, v43))
  {
    uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl( &dword_0,  v78,  v43,  "#TipKitDiscoverabilitySending Cannot find CurrentRequest, not donating to Biome",  v44,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v44);
  }
}

void BiomeEventSending.logEventForHangUp(intentResponse:device:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (char *)[a1 code];
  if (v7 != (_BYTE *)&dword_0 + 3)
  {
    OUTLINED_FUNCTION_7_108((uint64_t)v7);
    goto LABEL_6;
  }

  uint64_t v8 = (char *)[a1 hungUpCallType];
  OUTLINED_FUNCTION_7_108((uint64_t)v8);
  if (v8 != (_BYTE *)&dword_4 + 3)
  {
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(v17);
    goto LABEL_7;
  }

  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  DeviceState.isStandaloneIOS.getter();
  char v10 = v9;
  __swift_destroy_boxed_opaque_existential_1(v17);
  if ((v10 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(1LL, a3, a4);
    return;
  }

uint64_t OUTLINED_FUNCTION_7_108(uint64_t a1, ...)
{
  return outlined init with copy of SignalProviding(v1, (uint64_t)va);
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter@<X0>(uint64_t a1@<X8>)
{
  if ((specialized PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #0 of specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter) & 1) != 0)
  {
    uint64_t v2 = 1836020326LL;
LABEL_6:
    unint64_t v3 = 0xE400000000000000LL;
    goto LABEL_7;
  }

  if ((specialized PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #1 of specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter) & 1) == 0)
  {
    uint64_t v2 = 1752459639LL;
    goto LABEL_6;
  }

  uint64_t v2 = 28532LL;
  unint64_t v3 = 0xE200000000000000LL;
LABEL_7:
  SpeakableString.init(print:speak:)(v2, v3, 0LL, 0LL);
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v4);
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)( uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  uint64_t v48 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v49 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    char v10 = (uint64_t *)(a1 + 32);
    char v9 = v49;
    do
    {
      uint64_t v12 = *v10++;
      uint64_t v11 = v12;
      if (v12)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType(v11);
        switch((int)BackingType)
        {
          case 2:
            uint64_t v14 = @"OUTGOING";
            goto LABEL_15;
          case 3:
            uint64_t v14 = @"MISSED";
            goto LABEL_15;
          case 4:
            uint64_t v14 = @"RECEIVED";
            goto LABEL_15;
          case 5:
            uint64_t v14 = @"LATEST";
            goto LABEL_15;
          case 7:
            uint64_t v14 = @"VOICEMAIL";
            goto LABEL_15;
          case 8:
            uint64_t v14 = @"RINGING";
            goto LABEL_15;
          case 9:
            uint64_t v14 = @"IN_PROGRESS";
            goto LABEL_15;
          case 10:
            uint64_t v14 = @"ON_HOLD";
LABEL_15:
            uint64_t v18 = v14;
            uint64_t v17 = v14;
            break;
          default:
            uint64_t v17 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
            break;
        }

        uint64_t v19 = v17;
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        unint64_t v15 = v20;
      }

      else
      {
        unint64_t v15 = 0xE700000000000000LL;
        uint64_t v16 = 0x4E574F4E4B4E55LL;
      }

      uint64_t v49 = v9;
      unint64_t v21 = v9[2];
      if (v21 >= v9[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        char v9 = v49;
      }

      v9[2] = v21 + 1;
      uint64_t v22 = &v9[2 * v21];
      v22[4] = v16;
      v22[5] = v15;
      --v8;
    }

    while (v8);
  }

  uint64_t v23 = specialized Set.init<A>(_:)((uint64_t)v9);
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v2 + 24);
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (v26)
  {
    uint64_t v46 = v23;
    uint64_t v49 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    unint64_t v28 = (*(unsigned __int8 *)(v48 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v45[1] = v25;
    uint64_t v29 = v25 + v28;
    uint64_t v30 = *(void *)(v48 + 72);
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 16);
    do
    {
      uint64_t v32 = v47;
      uint64_t v33 = v31(v7, v29, v47);
      uint64_t v34 = SpeakableString.print.getter(v33);
      uint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v32);
      uint64_t v27 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v27 = v49;
      }

      unint64_t v37 = v27[2];
      if (v37 >= v27[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v27 = v49;
      }

      __int128 v27[2] = v37 + 1;
      uint64_t v38 = &v27[2 * v37];
      v38[4] = v34;
      void v38[5] = v36;
      v29 += v30;
      --v26;
    }

    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v24 = v46;
  }

  uint64_t v39 = specialized Set.init<A>(_:)((uint64_t)v27);
  if (*(void *)(v39 + 16))
  {
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = specialized Set.union<A>(_:)(v40, v39);
    specialized static Set.== infix(_:_:)(v41, v24);
    char v43 = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v43 = 0;
  }

  return v43 & 1;
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    uint64_t v28 = *(void *)(v1 + 24);
    uint64_t v29 = v10;
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain_n(v7, 2LL);
    uint64_t v11 = v8 - 1;
    uint64_t v30 = v4;
    while (1)
    {
      uint64_t v12 = v11;
      uint64_t v13 = v31(v6, v9, v3);
      uint64_t v14 = SpeakableString.print.getter(v13);
      uint64_t v16 = v15;
      if (a1)
      {
        uint64_t BackingType = INCallRecordTypeGetBackingType(a1);
        switch((int)BackingType)
        {
          case 2:
            uint64_t v18 = @"OUTGOING";
            goto LABEL_15;
          case 3:
            uint64_t v18 = @"MISSED";
            goto LABEL_15;
          case 4:
            uint64_t v18 = @"RECEIVED";
            goto LABEL_15;
          case 5:
            uint64_t v18 = @"LATEST";
            goto LABEL_15;
          case 7:
            uint64_t v18 = @"VOICEMAIL";
            goto LABEL_15;
          case 8:
            uint64_t v18 = @"RINGING";
            goto LABEL_15;
          case 9:
            uint64_t v18 = @"IN_PROGRESS";
            goto LABEL_15;
          case 10:
            uint64_t v18 = @"ON_HOLD";
LABEL_15:
            uint64_t v22 = v18;
            unint64_t v21 = v18;
            break;
          default:
            unint64_t v21 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
            break;
        }

        uint64_t v23 = v21;
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        unint64_t v19 = v24;
      }

      else
      {
        unint64_t v19 = 0xE700000000000000LL;
        uint64_t v20 = 0x4E574F4E4B4E55LL;
      }

      if (v14 == v20 && v16 == v19) {
        break;
      }
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v20, v19, 0LL);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v3);
      if ((v26 & 1) == 0)
      {
        uint64_t v11 = v12 - 1;
        v9 += v29;
        if (v12) {
          continue;
        }
      }

      goto LABEL_26;
    }

    swift_bridgeObjectRelease_n(v16, 2LL);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v3);
    char v26 = 1;
LABEL_26:
    swift_bridgeObjectRelease_n(v28, 2LL);
  }

  else
  {
    char v26 = 0;
  }

  return v26 & 1;
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter()
{
  return specialized PhoneSearchCallHistoryIntentProperties.isRequestContainingOnlyCallTypes(callRecordTypes:)((uint64_t)&outlined read-only object #0 of specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter);
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestForFaceTime.getter()
{
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider,  (uint64_t)v2);
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v2, 1LL, v3);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v2);
    uint64_t v5 = 0LL;
    uint64_t v6 = 0LL;
  }

  else
  {
    uint64_t v5 = SpeakableString.print.getter(EnumTagSinglePayload);
    uint64_t v6 = v7;
    (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
  }

  uint64_t v8 = INPreferredCallProviderGetBackingType(2LL);
  switch((_DWORD)v8)
  {
    case 4:
      uint64_t v9 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_10;
    case 3:
      uint64_t v9 = @"FACETIME_PROVIDER";
      goto LABEL_10;
    case 2:
      uint64_t v9 = @"TELEPHONY_PROVIDER";
LABEL_10:
      uint64_t v10 = v9;
      goto LABEL_12;
  }

  uint64_t v9 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v8));
LABEL_12:
  uint64_t v11 = v9;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v14 = v13;

  if (v6)
  {
    if (v5 == v12 && v6 == v14) {
      char v16 = 1;
    }
    else {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v12, v14, 0LL);
    }
    swift_bridgeObjectRelease();
  }

  else
  {
    char v16 = 0;
  }

  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t specialized PhoneSearchCallHistoryIntentProperties.isRequestForVideo.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SpeakableString(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities);
  if (*(void *)(v6 + 16) != 1LL)
  {
    char v13 = 0;
    return v13 & 1;
  }

  (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))( v5,  v6 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)),  v2);
  uint64_t v7 = swift_retain();
  uint64_t v8 = SpeakableString.print.getter(v7);
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t BackingType = INCallCapabilityGetBackingType(2LL);
  if ((_DWORD)BackingType == 2)
  {
    uint64_t v12 = @"VIDEO_CALL";
  }

  else
  {
    if ((_DWORD)BackingType != 1)
    {
      uint64_t v12 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
      goto LABEL_9;
    }

    uint64_t v12 = @"AUDIO_CALL";
  }

  uint64_t v14 = v12;
LABEL_9:
  uint64_t v15 = v12;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  if (v8 == v16 && v10 == v18) {
    char v13 = 1;
  }
  else {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v16, v18, 0LL);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(v1);
  return v13 & 1;
}

uint64_t specialized Set.union<A>(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0LL;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1LL << *(_BYTE *)(result + 32);
  uint64_t v6 = -1LL;
  if (v5 < 64) {
    uint64_t v6 = ~(-1LL << v5);
  }
  uint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  for (v7 &= v7 - 1; ; uint64_t v7 = (v10 - 1) & v10)
  {
    swift_bridgeObjectRetain();
    specialized Set._Variant.insert(_:)();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1LL))
    {
      __break(1u);
      goto LABEL_25;
    }

    if (v9 >= v8) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v4 + 8 * v9);
    ++v3;
    if (!v10)
    {
      int64_t v3 = v9 + 1;
      if (v9 + 1 >= v8) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v4 + 8 * v3);
      if (!v10)
      {
        int64_t v3 = v9 + 2;
        if (v9 + 2 >= v8) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v4 + 8 * v3);
        if (!v10)
        {
          int64_t v3 = v9 + 3;
          if (v9 + 3 >= v8) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v4 + 8 * v3);
          if (!v10) {
            break;
          }
        }
      }
    }

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.callTypes : PhoneSearchCallHistoryIntent.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 120LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.preferredCallProvider : PhoneSearchCallHistoryIntent.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 144LL))(v5);
}

void PhoneSearchCallHistoryIntent.Builder.preferredCallProvider.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  OUTLINED_FUNCTION_25_0(v3, (uint64_t)v4, 0LL);
  outlined init with copy of SpeakableString?(v3, a1);
  OUTLINED_FUNCTION_60_2();
}

void PhoneSearchCallHistoryIntent.Builder.preferredCallProvider.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  OUTLINED_FUNCTION_25_0(v3, (uint64_t)v4, 33LL);
  outlined assign with take of SpeakableString?(a1, v3);
  swift_endAccess(v4);
  OUTLINED_FUNCTION_60_2();
}

void PhoneSearchCallHistoryIntent.Builder.preferredCallProvider.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.callCapabilities : PhoneSearchCallHistoryIntent.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 168LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

void PhoneSearchCallHistoryIntent.Builder.callCapabilities.getter()
{
}

void PhoneSearchCallHistoryIntent.Builder.callCapabilities.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1
                + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_callCapabilities);
  OUTLINED_FUNCTION_25_0((uint64_t)v3, (uint64_t)v4, 1LL);
  *uint64_t v3 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_2();
}

void PhoneSearchCallHistoryIntent.Builder.callCapabilities.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.Builder.recipient : PhoneSearchCallHistoryIntent.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 192LL);
  uint64_t v3 = swift_retain(*a1);
  return v2(v3);
}

void PhoneSearchCallHistoryIntent.Builder.recipient.getter()
{
}

void PhoneSearchCallHistoryIntent.Builder.recipient.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient);
  OUTLINED_FUNCTION_25_0((uint64_t)v3, (uint64_t)v5, 1LL);
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  swift_release(v4);
  OUTLINED_FUNCTION_60_2();
}

void PhoneSearchCallHistoryIntent.Builder.recipient.modify(uint64_t a1)
{
}

void PhoneSearchCallHistoryIntent.Builder.__allocating_init()()
{
}

void PhoneSearchCallHistoryIntent.Builder.init()()
{
  *(void *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  uint64_t v2 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_callCapabilities) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient) = 0LL;
  OUTLINED_FUNCTION_6();
}

void PhoneSearchCallHistoryIntent.Builder.__allocating_init(preferredCallProvider:recipient:)( uint64_t a1, uint64_t a2)
{
}

void PhoneSearchCallHistoryIntent.Builder.init(preferredCallProvider:recipient:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v6 = v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_preferredCallProvider;
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_34_13(v6, 1LL);
  *(void *)(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_callCapabilities) = _swiftEmptyArrayStorage;
  int64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient);
  *(void *)(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient) = 0LL;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(v3, a1, v7);
  OUTLINED_FUNCTION_34_13(v3, 0LL);
  OUTLINED_FUNCTION_25_0(v6, (uint64_t)v10, 33LL);
  outlined assign with take of SpeakableString?(v3, v6);
  swift_endAccess(v10);
  OUTLINED_FUNCTION_25_0((uint64_t)v8, (uint64_t)v10, 1LL);
  uint64_t v9 = *v8;
  *int64_t v8 = a2;
  swift_release(v9);
  OUTLINED_FUNCTION_58();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withCallTypes(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 120LL);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

void PhoneSearchCallHistoryIntent.Builder.withPreferredCallProvider(_:)(uint64_t a1)
{
  uint64_t v5 = v4 - v3;
  outlined init with copy of SpeakableString?(a1, v4 - v3);
  (*(void (**)(uint64_t))(*(void *)v1 + 144LL))(v5);
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_6();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withPreferredCallProvider(print:speak:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = v10 - v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SpeakableString.init(print:speak:)(a1, a2, a3, a4);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload(v11, 0LL, 1LL, v12);
  (*(void (**)(uint64_t))(*(void *)v4 + 144LL))(v11);
  return UsoEntity_common_Person.usoPerson.getter();
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withCallCapabilities(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 168LL);
  uint64_t v2 = swift_bridgeObjectRetain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withRecipient(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 192LL);
  uint64_t v2 = swift_retain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.withRecipient(_:)(uint64_t a1)
{
  if (a1) {
    a1 = (*(uint64_t (**)(void))(*(void *)a1 + 128LL))();
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 192LL))(a1);
  return OUTLINED_FUNCTION_27_0(v1);
}

void PhoneSearchCallHistoryIntent.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhoneSearchCallHistoryIntent(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = UsoEntity_common_Person.usoPerson.getter();
  PhoneSearchCallHistoryIntent.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

void PhoneSearchCallHistoryIntent.__allocating_init(builder:)(uint64_t a1)
{
}

uint64_t type metadata accessor for PhoneSearchCallHistoryIntent(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneSearchCallHistoryIntent,  (uint64_t)&nominal type descriptor for PhoneSearchCallHistoryIntent);
}

uint64_t PhoneSearchCallHistoryIntent.Builder.deinit()
{
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent7Builder_recipient));
  return v0;
}

uint64_t PhoneSearchCallHistoryIntent.Builder.__deallocating_deinit()
{
  return PhoneCallProvider.Builder.__deallocating_deinit((void (*)(void))PhoneSearchCallHistoryIntent.Builder.deinit);
}

unint64_t static PhoneSearchCallHistoryIntent.catTypeName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t key path setter for PhoneSearchCallHistoryIntent.mockGlobals : PhoneSearchCallHistoryIntent( id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 144LL);
  id v4 = *a1;
  return v3(v2);
}

uint64_t PhoneSearchCallHistoryIntent.preferredCallProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider,  a1);
}

uint64_t PhoneSearchCallHistoryIntent.callCapabilities.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0
                                            + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities));
}

uint64_t PhoneSearchCallHistoryIntent.recipient.getter()
{
  return swift_retain(*(void *)(v0
                                + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient));
}

void PhoneSearchCallHistoryIntent.init(builder:)(uint64_t a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  v1[2] = 0LL;
  v1[3] = (*(uint64_t (**)(void))(*(void *)a1 + 112LL))();
  (*(void (**)(void))(*(void *)a1 + 136LL))();
  uint64_t v5 = outlined init with take of SpeakableString?( v2,  (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider);
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(v5);
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient) = (*(uint64_t (**)(void))(*(void *)a1 + 184LL))();
  if (((*(uint64_t (**)(void))(*v1 + 168))() & 1) == 0)
  {
    uint64_t v6 = (void *)static Log.siriDialogEngine.getter();
    static os_log_type_t.error.getter();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v8 = swift_allocObject(v7, 72LL, 7LL);
    *(_OWORD *)(v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = xmmword_31D870;
    uint64_t v14 = *v3;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneSearchCallHistoryIntent.Type);
    uint64_t v10 = String.init<A>(describing:)(&v14, v9);
    uint64_t v12 = v11;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    *(void *)(v8 + 40) = v12;
    os_log(_:dso:log:type:_:)("Building an instance of %s without all required inputs", v13);

    swift_bridgeObjectRelease();
  }

  swift_release(a1);
  OUTLINED_FUNCTION_58();
}

void PhoneSearchCallHistoryIntent.__allocating_init(callTypes:preferredCallProvider:callCapabilities:recipient:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent.Builder(0LL);
  uint64_t v11 = OUTLINED_FUNCTION_15_2(v10);
  PhoneSearchCallHistoryIntent.Builder.init()();
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 224LL))(a1);
  OUTLINED_FUNCTION_38_1();
  swift_bridgeObjectRelease();
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 232LL))(a2);
  swift_release(v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 248LL))(a3);
  OUTLINED_FUNCTION_38_1();
  swift_bridgeObjectRelease();
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 256LL))(a4);
  swift_release(v14);
  (*(void (**)(uint64_t))(v5 + 160))(v15);
  swift_release(a4);
  outlined destroy of SpeakableString?(a2);
  OUTLINED_FUNCTION_58();
}

uint64_t type metadata accessor for PhoneSearchCallHistoryIntent.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneSearchCallHistoryIntent.Builder,  (uint64_t)&nominal type descriptor for PhoneSearchCallHistoryIntent.Builder);
}

Swift::Bool __swiftcall PhoneSearchCallHistoryIntent.allRequiredInputsHaveValues()()
{
  uint64_t v3 = v2 - v1;
  outlined init with copy of SpeakableString?( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider,  v2 - v1);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1LL, v4);
  outlined destroy of SpeakableString?(v3);
  return EnumTagSinglePayload != 1
      && *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient) != 0LL;
}

uint64_t PhoneSearchCallHistoryIntent.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v36 - v9;
  BOOL v11 = a1 == 0x657079546C6C6163LL && a2 == 0xE900000000000073LL;
  if (v11 || (OUTLINED_FUNCTION_7_22(0x657079546C6C6163LL, 0xE900000000000073LL) & 1) != 0)
  {
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
    OUTLINED_FUNCTION_60(v12);
    return swift_bridgeObjectRetain();
  }

  uint64_t v14 = "preferredCallProvider";
  if (a1 == 0xD000000000000015LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(0xD000000000000015LL, (unint64_t)(v14 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    outlined init with copy of SpeakableString?( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider,  (uint64_t)v10);
    uint64_t v15 = OUTLINED_FUNCTION_26_0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v15) == 1)
    {
      uint64_t v16 = (uint64_t)v10;
LABEL_12:
      uint64_t result = outlined destroy of SpeakableString?(v16);
LABEL_13:
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0u;
      return result;
    }

    uint64_t v17 = OUTLINED_FUNCTION_23_10();
    return (*(uint64_t (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v17, v10, v15);
  }

  uint64_t v18 = 0xD000000000000010LL;
  unint64_t v19 = "callCapabilities";
  if (a1 == 0xD000000000000010LL)
  {
    OUTLINED_FUNCTION_2_90();
    if (v11) {
      goto LABEL_6;
    }
  }

  uint64_t result = OUTLINED_FUNCTION_7_22(v18, (unint64_t)(v19 - 32) | 0x8000000000000000LL);
  if ((result & 1) != 0) {
    goto LABEL_6;
  }
  BOOL v20 = a1 == 0x6E65697069636572LL && a2 == 0xE900000000000074LL;
  if (v20 || (uint64_t result = OUTLINED_FUNCTION_7_22(0x6E65697069636572LL, 0xE900000000000074LL), (result & 1) != 0))
  {
    if (!*(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient)) {
      goto LABEL_13;
    }
    uint64_t v21 = type metadata accessor for PhonePersonList();
    OUTLINED_FUNCTION_60(v21);
    return swift_retain();
  }

  uint64_t v22 = "isRequestForLatest";
  if (a1 == 0xD000000000000012LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(0xD000000000000012LL, (unint64_t)(v22 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    uint64_t v23 = 4LL;
LABEL_31:
    char v24 = specialized PhoneSearchCallHistoryIntentProperties.isRequestForCallType(callRecordType:)(v23);
LABEL_32:
    char v25 = v24;
    uint64_t result = OUTLINED_FUNCTION_38_1();
    *(void *)(a3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for Bool;
    *(_BYTE *)a3 = v25 & 1;
    return result;
  }

  char v26 = "isRequestForMissed";
  if (a1 == 0xD000000000000012LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(0xD000000000000012LL, (unint64_t)(v26 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    char v24 = specialized PhoneSearchCallHistoryIntentProperties.isRequestForMissed.getter();
    goto LABEL_32;
  }

  uint64_t v27 = "isRequestForFaceTime";
  if (a1 == 0xD000000000000014LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(0xD000000000000014LL, (unint64_t)(v27 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    char v24 = specialized PhoneSearchCallHistoryIntentProperties.isRequestForFaceTime.getter();
    goto LABEL_32;
  }

  uint64_t v28 = 0xD000000000000011LL;
  uint64_t v29 = "isRequestForVideo";
  if (a1 == 0xD000000000000011LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(v28, (unint64_t)(v29 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    char v24 = specialized PhoneSearchCallHistoryIntentProperties.isRequestForVideo.getter();
    goto LABEL_32;
  }

  uint64_t v30 = "isRequestForVoicemail";
  if (a1 == 0xD000000000000015LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(0xD000000000000015LL, (unint64_t)(v30 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    uint64_t v23 = 5LL;
    goto LABEL_31;
  }

  uint64_t v31 = "isRequestForReceived";
  if (a1 == 0xD000000000000014LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(0xD000000000000014LL, (unint64_t)(v31 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    uint64_t v23 = 3LL;
    goto LABEL_31;
  }

  uint64_t v32 = "isRequestForOutgoing";
  if (a1 == 0xD000000000000014LL && (OUTLINED_FUNCTION_2_90(), v11)
    || (OUTLINED_FUNCTION_7_22(0xD000000000000014LL, (unint64_t)(v32 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    uint64_t v23 = 1LL;
    goto LABEL_31;
  }

  if (a1 != 0x61746E6F43746567LL || a2 != 0xEE00656C6F527463LL)
  {
    uint64_t result = OUTLINED_FUNCTION_7_22(0x61746E6F43746567LL, 0xEE00656C6F527463LL);
    if ((result & 1) == 0) {
      goto LABEL_13;
    }
  }

  UsoEntity_common_Person.usoPerson.getter();
  specialized PhoneSearchCallHistoryIntentProperties.getContactRole.getter((uint64_t)v8);
  OUTLINED_FUNCTION_38_1();
  uint64_t v34 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v34) == 1)
  {
    uint64_t v16 = (uint64_t)v8;
    goto LABEL_12;
  }

  uint64_t v35 = OUTLINED_FUNCTION_23_10();
  return (*(uint64_t (**)(void *, char *, uint64_t))(*(void *)(v34 - 8) + 32LL))(v35, v8, v34);
}

PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional __swiftcall PhoneSearchCallHistoryIntent.CodingKeys.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneSearchCallHistoryIntent.CodingKeys.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional)v3;
  }
}

uint64_t PhoneSearchCallHistoryIntent.CodingKeys.rawValue.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_25_55();
  return ((uint64_t (*)(uint64_t))((char *)sub_2A84D8 + 4 * byte_33DC50[v1]))(v0);
}

void sub_2A84D8()
{
}

unint64_t sub_2A84F4()
{
  return OUTLINED_FUNCTION_17_8();
}

uint64_t sub_2A8500()
{
  return 0x6E65697069636572LL;
}

uint64_t PhoneSearchCallHistoryIntent.CodingKeys.stringValue.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_25_55();
  return ((uint64_t (*)(uint64_t))((char *)sub_2A853C + 4 * byte_33DC54[v1]))(v0);
}

void sub_2A853C()
{
}

unint64_t sub_2A8558()
{
  return OUTLINED_FUNCTION_17_8();
}

uint64_t sub_2A8564()
{
  return 0x6E65697069636572LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneSearchCallHistoryIntent.CodingKeys( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneSearchCallHistoryIntent.CodingKeys@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneSearchCallHistoryIntent.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys( uint64_t *a1@<X8>)
{
  *a1 = PhoneSearchCallHistoryIntent.CodingKeys.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
  return PhoneSearchCallHistoryIntent.CodingKeys.stringValue.getter();
}

PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneSearchCallHistoryIntent.CodingKeys@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneSearchCallHistoryIntent::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneSearchCallHistoryIntent.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneSearchCallHistoryIntent.CodingKeys( _BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSearchCallHistoryIntent.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneSearchCallHistoryIntent.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of SpeakableString?(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider);
  swift_bridgeObjectRelease();
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient));
  return v0;
}

uint64_t PhoneSearchCallHistoryIntent.__deallocating_deinit()
{
  return PhoneCallProvider.Builder.__deallocating_deinit((void (*)(void))PhoneSearchCallHistoryIntent.deinit);
}

uint64_t PhoneSearchCallHistoryIntent.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSearchCallHistoryIntent.CodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for PhoneSearchCallHistoryIntent.CodingKeys,  &type metadata for PhoneSearchCallHistoryIntent.CodingKeys,  v10,  v8,  v9);
  uint64_t v18 = *(void *)(v4 + 24);
  char v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A]( &lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A],  &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  OUTLINED_FUNCTION_10_77();
  if (!v2)
  {
    uint64_t v11 = v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider;
    LOBYTE(v1__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1;
    uint64_t v12 = type metadata accessor for SpeakableString(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
    OUTLINED_FUNCTION_29_45(v11, (uint64_t)&v18, v6, v12, v13);
    uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities);
    char v17 = 2;
    OUTLINED_FUNCTION_10_77();
    uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient);
    char v17 = 3;
    uint64_t v14 = type metadata accessor for PhonePersonList();
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhonePersonList and conformance PhonePersonList,  (uint64_t (*)(uint64_t))type metadata accessor for PhonePersonList,  (uint64_t)&protocol conformance descriptor for PhonePersonList);
    OUTLINED_FUNCTION_29_45((uint64_t)&v18, (uint64_t)&v17, v6, v14, v15);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

unint64_t lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneSearchCallHistoryIntent.CodingKeys,  &type metadata for PhoneSearchCallHistoryIntent.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneSearchCallHistoryIntent.CodingKeys,  &type metadata for PhoneSearchCallHistoryIntent.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneSearchCallHistoryIntent.CodingKeys,  &type metadata for PhoneSearchCallHistoryIntent.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneSearchCallHistoryIntent.CodingKeys,  &type metadata for PhoneSearchCallHistoryIntent.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys);
  }

  return result;
}

uint64_t PhoneSearchCallHistoryIntent.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  PhoneSearchCallHistoryIntent.init(from:)(a1);
  return v3;
}

uint64_t PhoneSearchCallHistoryIntent.init(from:)(void *a1)
{
  uint64_t v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSearchCallHistoryIntent.CodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = 0LL;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type PhoneSearchCallHistoryIntent.CodingKeys and conformance PhoneSearchCallHistoryIntent.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for PhoneSearchCallHistoryIntent.CodingKeys,  &type metadata for PhoneSearchCallHistoryIntent.CodingKeys,  v10,  v8,  v9);
  if (v2)
  {

    uint64_t v13 = type metadata accessor for PhoneSearchCallHistoryIntent(0LL);
    swift_deallocPartialClassInstance( v4,  v13,  *(unsigned int *)(*(void *)v4 + 48LL),  *(unsigned __int16 *)(*(void *)v4 + 52LL));
  }

  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
    char v21 = 0;
    uint64_t v12 = lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A]( &lazy protocol witness table cache variable for type [SpeakableString] and conformance <A> [A],  &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, &v21, v6, v11, v12);
    *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v22;
    type metadata accessor for SpeakableString(0LL);
    LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
    OUTLINED_FUNCTION_11_83(v15, (uint64_t)&v22, v16, v17, v15);
    outlined init with take of SpeakableString?( v3,  v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider);
    char v21 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, &v21, v6, v11, v12);
    *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities) = v22;
    type metadata accessor for PhonePersonList();
    char v21 = 3;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhonePersonList and conformance PhonePersonList,  (uint64_t (*)(uint64_t))type metadata accessor for PhonePersonList,  (uint64_t)&protocol conformance descriptor for PhonePersonList);
    OUTLINED_FUNCTION_11_83(v18, (uint64_t)&v21, v19, v20, v18);
    OUTLINED_FUNCTION_4_102(v7);
    *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient) = v22;
  }

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v4;
}

uint64_t lazy protocol witness table accessor for type [SpeakableString] and conformance <A> [A]( unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SpeakableString]);
    lazy protocol witness table accessor for type UUID and conformance UUID( a2,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

void base witness table accessor for Decodable in PhoneSearchCallHistoryIntent()
{
}

void base witness table accessor for Encodable in PhoneSearchCallHistoryIntent()
{
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhoneSearchCallHistoryIntent()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneSearchCallHistoryIntent( void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 152LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for PhoneSearchCallHistoryIntentProperties.preferredCallProvider.getter in conformance PhoneSearchCallHistoryIntent@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( *v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_preferredCallProvider,  a1);
}

uint64_t protocol witness for PhoneSearchCallHistoryIntentProperties.callCapabilities.getter in conformance PhoneSearchCallHistoryIntent()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_callCapabilities));
}

uint64_t protocol witness for PhoneSearchCallHistoryIntentProperties.recipient.getter in conformance PhoneSearchCallHistoryIntent()
{
  return swift_retain(*(void *)(*v0
                                + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin28PhoneSearchCallHistoryIntent_recipient));
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneSearchCallHistoryIntent@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 192))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void sub_2A8EE4()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 112))();
  OUTLINED_FUNCTION_2();
}

void sub_2A8F0C(uint64_t a1)
{
}

void sub_2A8F34()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 160))();
  OUTLINED_FUNCTION_2();
}

void sub_2A8F5C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 184))();
  OUTLINED_FUNCTION_2();
}

void sub_2A8F84()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 136))();
  OUTLINED_FUNCTION_2();
}

uint64_t ObjC metadata update function for PhoneSearchCallHistoryIntent()
{
  return type metadata accessor for PhoneSearchCallHistoryIntent(0LL);
}

void type metadata completion function for PhoneSearchCallHistoryIntent(uint64_t a1)
{
  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(v2 - 8) + 64LL;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
  }

uint64_t ObjC metadata update function for PhoneSearchCallHistoryIntent.Builder()
{
  return type metadata accessor for PhoneSearchCallHistoryIntent.Builder(0LL);
}

void type metadata completion function for PhoneSearchCallHistoryIntent.Builder(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    void v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
  }

uint64_t storeEnumTagSinglePayload for PhoneSearchCallHistoryIntent.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_2A9120 + 4 * byte_33DC5D[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2A9154 + 4 * byte_33DC58[v4]))();
}

uint64_t sub_2A9154(uint64_t result)
{
  *(_BYTE *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A915C(uint64_t result, int a2)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (a2) {
    JUMPOUT(0x2A9164LL);
  }
  return result;
}

uint64_t sub_2A9170(uint64_t result, int a2)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (!a2) {
    JUMPOUT(0x2A9178LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_2A917C(uint64_t result)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2A9184(uint64_t result)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneSearchCallHistoryIntent.CodingKeys()
{
  return &type metadata for PhoneSearchCallHistoryIntent.CodingKeys;
}

  ;
}

uint64_t OUTLINED_FUNCTION_4_102@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_77()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)(v3 - 72, v3 - 81, v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_11_83(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v5, a2, v6, v5, a5);
}

uint64_t OUTLINED_FUNCTION_29_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t Parse.usoTask.getter()
{
  uint64_t v66 = type metadata accessor for Logger(0LL);
  uint64_t v61 = *(void *)(v66 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v62 = v2 - v1;
  uint64_t v3 = type metadata accessor for USOParse(0LL);
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  uint64_t v7 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  unint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v60 - v11;
  uint64_t v13 = type metadata accessor for Parse(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v17 = (uint64_t *)(v16 - v15);
  uint64_t v18 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v65 = v0;
  v18(v17, v0, v13);
  int v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 88))(v17, v13);
  if (v19 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v17, v13);
  }

  else
  {
    if (v19 != enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      if (v19 == enum case for Parse.NLv4IntentOnly(_:))
      {
        OUTLINED_FUNCTION_1_98();
        uint64_t v20 = *v17;
        static ConversionUtils.toUserParse(from:)(v20);
        if (__swift_getEnumTagSinglePayload(v0, 1LL, v7) == 1)
        {
          outlined destroy of SpeakableString?( v0,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
          uint64_t v21 = OUTLINED_FUNCTION_9_79();
          uint64_t v23 = swift_unknownObjectRetain_n(v21, v22);
          char v24 = (os_log_s *)Logger.logObject.getter(v23);
          os_log_type_t v25 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v24, v25))
          {
            uint64_t v26 = OUTLINED_FUNCTION_7_0(22LL);
            uint64_t v27 = OUTLINED_FUNCTION_7_0(64LL);
            *(_DWORD *)uint64_t v26 = 136315394;
            uint64_t v67 = 0LL;
            unint64_t v68 = 0xE000000000000000LL;
            uint64_t v69 = v27;
            OUTLINED_FUNCTION_91_2( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of Parse.usoTask.getter);
            uint64_t v67 = OUTLINED_FUNCTION_8_20();
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v26 + 4);
            swift_bridgeObjectRelease();
            *(_WORD *)(v26 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
            uint64_t v67 = v20;
            swift_unknownObjectRetain(v20);
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIRINLUUserDialogAct);
            uint64_t v29 = String.init<A>(describing:)(&v67, v28);
            uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v69);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v26 + 14);
            uint64_t v31 = OUTLINED_FUNCTION_9_79();
            swift_unknownObjectRelease_n(v31, v32);
            swift_bridgeObjectRelease();
            _os_log_impl( &dword_0,  v24,  v25,  "%s couldn't transform UserDialogAct %s into UserParse to get the UDAs.",  (uint8_t *)v26,  0x16u);
            swift_arrayDestroy(v27, 2LL);
            OUTLINED_FUNCTION_0_2(v27);
            OUTLINED_FUNCTION_0_2(v26);
            swift_unknownObjectRelease(v20);
          }

          else
          {

            swift_unknownObjectRelease_n(v20, 3LL);
          }

          return 0LL;
        }

        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v12, v0, v7);
        uint64_t v37 = Parse.transform(userParse:)();
        swift_unknownObjectRelease(v20);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      }

      else
      {
        if (v19 != enum case for Parse.uso(_:))
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v38 = __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
          uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
          os_log_type_t v40 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v39, v40))
          {
            uint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
            uint64_t v42 = OUTLINED_FUNCTION_7_0(32LL);
            *(_DWORD *)uint64_t v41 = 136315138;
            uint64_t v67 = 0LL;
            unint64_t v68 = 0xE000000000000000LL;
            uint64_t v69 = v42;
            OUTLINED_FUNCTION_91_2( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of Parse.usoTask.getter);
            uint64_t v67 = OUTLINED_FUNCTION_8_20();
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v41 + 4);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_0, v39, v40, "%s Direct Invocation parse in Parse.usoTask", v41, 0xCu);
            swift_arrayDestroy(v42, 1LL);
            OUTLINED_FUNCTION_0_2(v42);
            OUTLINED_FUNCTION_0_2((uint64_t)v41);
          }

          (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v17, v13);
          return 0LL;
        }

        OUTLINED_FUNCTION_1_98();
        uint64_t v33 = v63;
        uint64_t v34 = v17;
        uint64_t v35 = v64;
        uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v63 + 32))(v6, v34, v64);
        USOParse.userParse.getter(v36);
        uint64_t v37 = Parse.transform(userParse:)();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v6, v35);
      }

      return v37;
    }

    OUTLINED_FUNCTION_1_98();
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NLIntent, Parse.ServerConversion));
    swift_release(*(uint64_t *)((char *)v17 + *(int *)(v44 + 48)));
    uint64_t v45 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v45 - 8) + 8LL))(v17, v45);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v46 = v66;
  uint64_t v47 = __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v62, v47, v46);
  uint64_t v67 = 0LL;
  unint64_t v68 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(39LL);
  OUTLINED_FUNCTION_91_2( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of Parse.usoTask.getter);
  v48._object = (void *)0x80000000003516A0LL;
  v48._uint64_t countAndFlagsBits = 0xD000000000000025LL;
  String.append(_:)(v48);
  uint64_t v49 = v67;
  unint64_t v50 = v68;
  uint64_t v51 = OUTLINED_FUNCTION_9_79();
  uint64_t v53 = swift_bridgeObjectRetain_n(v51, v52);
  uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
  os_log_type_t v55 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v57 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v67 = v57;
    *(_DWORD *)uint64_t v56 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v56 + 4);
    swift_bridgeObjectRelease_n(v50, 3LL);
    _os_log_impl(&dword_0, v54, v55, "%s", v56, 0xCu);
    swift_arrayDestroy(v57, 1LL);
    OUTLINED_FUNCTION_0_2(v57);
    OUTLINED_FUNCTION_0_2((uint64_t)v56);
  }

  else
  {
    uint64_t v58 = OUTLINED_FUNCTION_9_79();
    swift_bridgeObjectRelease_n(v58, v59);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(v49, v50);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v49,  v50,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
  __break(1u);
  return result;
}

PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional __swiftcall ParseTypeLogging.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of ParseTypeLogging.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional)v3;
  }
}

uint64_t ParseTypeLogging.rawValue.getter(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_4_103();
  }
  if (a1 == 1) {
    return 7304053LL;
  }
  return 0xD000000000000012LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ParseTypeLogging( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ParseTypeLogging()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ParseTypeLogging(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ParseTypeLogging(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ParseTypeLogging@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ParseTypeLogging_optional *a2@<X8>)
{
  result.value = ParseTypeLogging.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ParseTypeLogging@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = ParseTypeLogging.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t Parse.transform(userParse:)()
{
  void (*v57)(uint64_t *__return_ptr, char *);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  int v63;
  char *v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  os_log_s *v68;
  uint64_t (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81[2];
  uint64_t v78 = type metadata accessor for Parse(0LL);
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v62 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v70 = (char *)&v62 - v2;
  __chkstk_darwin();
  uint64_t v74 = (char *)&v62 - v3;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v75 = (char *)&v62 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin();
  unint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v72 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v62 - v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v62 - v15;
  uint64_t v17 = __chkstk_darwin();
  int v19 = (char *)&v62 - v18;
  Siri_Nlu_External_UserParse.userDialogActs.getter(v17);
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v11) == 1)
  {
    outlined destroy of SpeakableString?( (uint64_t)v10,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v20 = v4;
    uint64_t v21 = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = v5;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v21, v20);
    uint64_t v23 = v76;
    uint64_t v24 = v78;
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 16))(v1, v77, v78);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc(22LL, -1LL);
      uint64_t v67 = v20;
      uint64_t v29 = v28;
      uint64_t v30 = swift_slowAlloc(64LL, -1LL);
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v79 = 0LL;
      uint64_t v80 = 0xE000000000000000LL;
      v81[0] = v30;
      uint64_t v73 = v22;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of Parse.transform(userParse:),  0LL,  0LL);
      uint64_t v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v29 + 4);
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      Swift::String v31 = Parse.typeForLogging()();
      uint64_t v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v31._countAndFlagsBits,  (unint64_t)v31._object,  v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v29 + 14);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v1, v24);
      _os_log_impl(&dword_0, v26, v27, "%s %s: No user dialog act found in userParse", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy(v30, 2LL);
      swift_slowDealloc(v30, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v7, v67);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v1, v24);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v20);
    }

    return 0LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v10, v11);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = v4;
    uint64_t v33 = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
    uint64_t v73 = v5;
    uint64_t v34 = *(void (**)(char *))(v5 + 16);
    uint64_t v35 = v75;
    uint64_t v66 = v33;
    v34(v75);
    uint64_t v36 = v76;
    uint64_t v37 = v74;
    uint64_t v38 = v78;
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
    v65(v74, v77, v78);
    uint64_t v69 = *(uint64_t (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v39 = v69(v16, v19, v11);
    os_log_type_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v42 = static os_log_type_t.debug.getter(v40, v41);
    unint64_t v68 = v40;
    uint64_t v63 = v42;
    if (os_log_type_enabled(v40, v42))
    {
      uint64_t v43 = swift_slowAlloc(32LL, -1LL);
      uint64_t v64 = v19;
      uint64_t v44 = v43;
      uint64_t v45 = swift_slowAlloc(96LL, -1LL);
      uint64_t v62 = v45;
      *(_DWORD *)uint64_t v44 = 136315650;
      uint64_t v67 = v32;
      uint64_t v79 = 0LL;
      uint64_t v80 = 0xE000000000000000LL;
      v81[0] = v45;
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of Parse.transform(userParse:),  0LL,  0LL);
      uint64_t v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v44 + 4);
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      Swift::String v46 = Parse.typeForLogging()();
      uint64_t v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v46._countAndFlagsBits,  (unint64_t)v46._object,  v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v44 + 14);
      swift_bridgeObjectRelease();
      uint64_t v76 = *(void *)(v36 + 8);
      ((void (*)(char *, uint64_t))v76)(v37, v78);
      *(_WORD *)(v44 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v47 = (uint64_t)v71;
      v69(v71, v16, v11);
      uint64_t v48 = specialized String.init(describing:)(v47);
      uint64_t v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v44 + 24);
      swift_bridgeObjectRelease();
      unint64_t v50 = v16;
      uint64_t v51 = *(void (**)(char *, uint64_t))(v12 + 8);
      v51(v50, v11);
      uint64_t v52 = v68;
      _os_log_impl( &dword_0,  v68,  (os_log_type_t)v63,  "%s %s: Attempting to transform %s into UsoTask.",  (uint8_t *)v44,  0x20u);
      uint64_t v53 = v62;
      swift_arrayDestroy(v62, 3LL);
      swift_slowDealloc(v53, -1LL, -1LL);
      uint64_t v54 = v44;
      int v19 = v64;
      swift_slowDealloc(v54, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v35, v67);
    }

    else
    {
      uint64_t v76 = *(void *)(v36 + 8);
      ((void (*)(char *, uint64_t))v76)(v37, v38);
      os_log_type_t v55 = v16;
      uint64_t v51 = *(void (**)(char *, uint64_t))(v12 + 8);
      v51(v55, v11);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v35, v32);
    }

    if (one-time initialization token for transformer != -1) {
      swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
    }
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>);
    __swift_project_value_buffer(v56, (uint64_t)&static Transformer<>.transformer);
    uint64_t v57 = (void (*)(uint64_t *__return_ptr, char *))Transformer.transform.getter(v56);
    uint64_t v59 = v58;
    v57(&v79, v19);
    swift_release(v59);
    v51(v19, v11);
    uint64_t v60 = v79;
    swift_bridgeObjectRelease();
  }

  return v60;
}

unint64_t lazy protocol witness table accessor for type ParseTypeLogging and conformance ParseTypeLogging()
{
  unint64_t result = lazy protocol witness table cache variable for type ParseTypeLogging and conformance ParseTypeLogging;
  if (!lazy protocol witness table cache variable for type ParseTypeLogging and conformance ParseTypeLogging)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ParseTypeLogging,  &type metadata for ParseTypeLogging);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ParseTypeLogging and conformance ParseTypeLogging);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for ParseTypeLogging(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_2AA590 + 4 * byte_33DF15[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2AA5C4 + 4 * asc_33DF10[v4]))();
}

uint64_t sub_2AA5C4(uint64_t result)
{
  *(_BYTE *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2AA5CC(uint64_t result, int a2)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (a2) {
    JUMPOUT(0x2AA5D4LL);
  }
  return result;
}

uint64_t sub_2AA5E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = 0;
  if (!a2) {
    JUMPOUT(0x2AA5E8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_2AA5EC(uint64_t result)
{
  *(_DWORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

uint64_t sub_2AA5F4(uint64_t result)
{
  *(_WORD *)(result + outlined consume of AnnounceVoicemailFlow.State(v0, 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParseTypeLogging()
{
  return &type metadata for ParseTypeLogging;
}

uint64_t OUTLINED_FUNCTION_1_98()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_4_103()
{
  return 0x65746E4934764C4ELL;
}

uint64_t OUTLINED_FUNCTION_9_79()
{
  return v0;
}

uint64_t specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = &__src[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1LL, 1LL, v7);
  outlined init with copy of PhoneContactDisambiguationItemFactory(v2, (uint64_t)__src);
  uint64_t v8 = (void *)swift_allocObject(&unk_415A98, 208LL, 7LL);
  __int128 v8[2] = 0LL;
  v8[3] = 0LL;
  uint64_t v8[4] = a1;
  void v8[5] = a2;
  memcpy(v8 + 6, __src, 0xA0uLL);
  swift_retain();
  uint64_t v9 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( (uint64_t)v6,  (uint64_t)&async function pointer to partial apply for specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:),  (uint64_t)v8);
  return swift_release(v9);
}

uint64_t specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  _OWORD v5[3] = a5;
  uint64_t v6 = (void *)swift_task_alloc(unk_43EEF4);
  v5[4] = v6;
  *uint64_t v6 = v5;
  v6[1] = specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:);
  return v8();
}

uint64_t specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_5_7();
}

uint64_t specialized DisambiguationItemFactory.buildDisambiguationItemList()()
{
  *(void *)(v1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  uint64_t v2 = (void *)swift_task_alloc(dword_43EEFC);
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *uint64_t v2 = v1;
  v2[1] = specialized DisambiguationItemFactory.buildDisambiguationItemList();
  return specialized DisambiguationItemFactory.buildDisambiguationItems()();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_s *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v2 = *(void *)(v1 + 24);
  int v3 = swift_bridgeObjectRetain();
  specialized _arrayForceCast<A, B>(_:)(v3);
  OUTLINED_FUNCTION_11_84();
  uint64_t v4 = *(void *)(v2 + 8);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v23 = *(void *)(v2 + 8);
    }
    else {
      uint64_t v23 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v23);
  }

  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  if (v5 < 6 || (PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v4), (v6 & 1) != 0))
  {
    else {
      uint64_t v7 = 1;
    }
  }

  else
  {
    uint64_t v7 = 0;
  }

  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = type metadata accessor for SiriKitDisambiguationList(0LL);
  OUTLINED_FUNCTION_15_2(v9);
  unint64_t v10 = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v0,  v8,  v7 & 1,  1LL);
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = swift_retain_n(v10, 2LL);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  uint64_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v17 = OUTLINED_FUNCTION_7_0(32LL);
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v24 = v17;
    swift_retain();
    SiriKitDisambiguationList.description.getter();
    int v19 = v18;
    uint64_t v21 = v20;
    swift_release(v10);
    *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v16 + 4);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_17_30();
    _os_log_impl(&dword_0, v13, v15, "Finished building SiriKitDisambiguationList: %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1LL);
    OUTLINED_FUNCTION_0_2(v17);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  else
  {
    OUTLINED_FUNCTION_17_30();
  }

  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v10);
}

uint64_t specialized DisambiguationItemFactory.buildDisambiguationItemList()(uint64_t a1)
{
  return OUTLINED_FUNCTION_5_7();
}

uint64_t specialized DisambiguationItemFactory.buildDisambiguationItems()()
{
  *(void *)(v1 + 40) = v0;
  return swift_task_switch(specialized DisambiguationItemFactory.buildDisambiguationItems(), 0LL, 0LL);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = _swiftEmptyArrayStorage;
  int v3 = **(void **)(v1 + 40);
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      unint64_t v10 = v3;
    }
    else {
      unint64_t v10 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_3();
    unint64_t result = _CocoaArrayWrapper.endIndex.getter(v10);
    uint64_t v4 = result;
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8LL));
    unint64_t result = OUTLINED_FUNCTION_6_3();
  }

  *(void *)(v1 + 56) = v4;
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
    }

    else
    {
      *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
      uint64_t v6 = *(void *)(v1 + 48);
      if ((v6 & 0xC000000000000001LL) != 0) {
        uint64_t v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v6);
      }
      else {
        uint64_t v7 = *(id *)(v6 + 32);
      }
      uint64_t v8 = OUTLINED_FUNCTION_3_119((uint64_t)v7);
      *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
      *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v0;
      *(void *)(v8 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
      uint64_t v9 = swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      OUTLINED_FUNCTION_8_83(v9);
      *uint64_t v0 = v1;
      v0[1] = specialized DisambiguationItemFactory.buildDisambiguationItems();
      OUTLINED_FUNCTION_10_78();
      return OUTLINED_FUNCTION_6_99();
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_61((uint64_t)_swiftEmptyArrayStorage, *(uint64_t (**)(void))(v1 + 8));
  }

  return result;
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();

  return swift_task_switch(specialized DisambiguationItemFactory.buildDisambiguationItems(), 0LL, 0LL);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v2);
  uint64_t v4 = *(void *)((char *)&dword_10 + (*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8LL));
  int v3 = *(void *)((char *)&dword_18 + (*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8LL));
  if (v4 >= v3 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1LL);
  }
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64) + 1LL;
  uint64_t v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v1);
  specialized Array._endMutation()(v7, v8, v9, v10);
  swift_release(v1);
  if (v6 == v5)
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_61(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 8));
  }

  else
  {
    uint64_t v12 = *(void *)(v0 + 64) + 1LL;
    *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v12;
    uint64_t v13 = *(void *)(v0 + 48);
    if ((v13 & 0xC000000000000001LL) != 0) {
      uint64_t v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v13);
    }
    else {
      uint64_t v14 = *(id *)(v13 + 8 * v12 + 32);
    }
    uint64_t v15 = OUTLINED_FUNCTION_3_119((uint64_t)v14);
    *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
    *(void *)(v15 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v1;
    *(void *)(v15 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v4;
    uint64_t v16 = swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    OUTLINED_FUNCTION_8_83(v16);
    *uint64_t v1 = v0;
    v1[1] = specialized DisambiguationItemFactory.buildDisambiguationItems();
    OUTLINED_FUNCTION_10_78();
    return OUTLINED_FUNCTION_6_99();
  }

uint64_t specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationItem, Never>);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL), a1, v2);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 16) & ~v5;
  uint64_t v7 = swift_allocObject(&unk_415AC0, v6 + v4, v5 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))( v7 + v6,  (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v2);
  swift_retain();
  _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV05buildgH04item_ySo8INPersonC_y07SiriKitC00mngH0CctF04_s11mn9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n();
  return swift_release(v7);
}

{
  return specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()(a1);
}

void *CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)( int a1, int a2, uint64_t a3, void *a4, id a5, uint64_t *a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = *a6;
  id v15 = [a5 disambiguationItems];
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for Any[1]);

  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  uint64_t v18 = &selRef_alternatives;
  if (v17) {
    uint64_t v18 = &selRef_disambiguationItems;
  }
  id v19 = [a5 *v18];
  uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for Any[1]);

  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = a3;
  v21._object = a4;
  if ((PhoneCallSlotNames.init(rawValue:)(v21).value & 0xFE) == 4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "#CallingIntentRCHFlowDelegate Building contacts disambiguation list", v26, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }

    specialized _arrayConditionalCast<A, B>(_:)(v20);
    OUTLINED_FUNCTION_11_84();
    if (v24) {
      os_log_type_t v27 = v24;
    }
    else {
      os_log_type_t v27 = (os_log_s *)_swiftEmptyArrayStorage;
    }
    uint64_t v28 = *(void *)(v14 + class metadata base offset for PhoneCallBaseCatTemplatingService);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a10, a9, v28);
    uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8LL) + 8LL))(v28);
    if (!v30) {
      goto LABEL_28;
    }
    uint64_t v32 = v30;
    if ((unint64_t)v30 >> 62)
    {
      if (v30 >= 0) {
        v30 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v30)) {
        goto LABEL_14;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_14:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v32 & 0xC000000000000001LL) == 0, v32);
      if ((v32 & 0xC000000000000001LL) != 0) {
        id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v32);
      }
      else {
        id v33 = *(id *)(v32 + 32);
      }
      uint64_t v34 = v33;
      OUTLINED_FUNCTION_39();
      id v35 = [v34 relationship];

      if (v35)
      {
        id v36 = v35;
        specialized Sequence.forEach(_:)((uint64_t)v27, v36);
      }

      goto LABEL_28;
    }

    OUTLINED_FUNCTION_39();
LABEL_28:
    uint64_t v65 = type metadata accessor for PhoneCallBaseCatTemplatingService( 0LL,  v28,  *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v14 + 8),  v31);
    uint64_t v66 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
    *(void *)&__int128 v64 = a6;
    swift_retain();
    uint64_t v46 = App.appIdentifier.getter();
    if (v47) {
      uint64_t v48 = v46;
    }
    else {
      uint64_t v48 = 0LL;
    }
    if (v47) {
      unint64_t v49 = v47;
    }
    else {
      unint64_t v49 = 0xE000000000000000LL;
    }
    v67[0] = v54;
    OUTLINED_FUNCTION_9_80();
    uint64_t v50 = v62;
    uint64_t v51 = v63;
    __swift_project_boxed_opaque_existential_1(v61, v62);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v51 + 184))(v60, v50, v51);
    v67[0] = v54;
    OUTLINED_FUNCTION_9_80();
    uint64_t v52 = v58;
    uint64_t v53 = v59;
    __swift_project_boxed_opaque_existential_1(v57, v58);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v53 + 8))(v72, v52, v53);
    v67[0] = (uint64_t)v27;
    v67[1] = (uint64_t)v27;
    outlined init with take of AppSelectionSignalComponent(&v64, (uint64_t)&v73);
    outlined init with take of AppSelectionSignalComponent(v60, (uint64_t)&v71);
    char v68 = 1;
    uint64_t v69 = v48;
    unint64_t v70 = v49;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(v57);
    __swift_destroy_boxed_opaque_existential_1(v61);
    specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)((uint64_t)a7, a8);
    return outlined destroy of PhoneContactDisambiguationItemFactory(v67);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v37 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
  uint64_t v38 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v42 = OUTLINED_FUNCTION_7_0(32LL);
    v67[0] = v42;
    *(_DWORD *)uint64_t v41 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&__int128 v64 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a3, (unint64_t)a4, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, (char *)&v64 + 8, v41 + 4);
    swift_bridgeObjectRelease_n(a4, 3LL);
    _os_log_impl( &dword_0,  v39,  v40,  "#CallingIntentRCHFlowDelegate Disambiguating %s, no disambiguation snippet",  v41,  0xCu);
    swift_arrayDestroy(v42, 1LL);
    OUTLINED_FUNCTION_0_2(v42);
    OUTLINED_FUNCTION_0_2((uint64_t)v41);
  }

  else
  {

    swift_bridgeObjectRelease_n(a4, 2LL);
  }

  uint64_t v43 = type metadata accessor for SiriKitDisambiguationList(0LL);
  OUTLINED_FUNCTION_15_2(v43);
  uint64_t v44 = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v20,  _swiftEmptyArrayStorage,  0LL,  0LL);
  a7();
  return (void *)swift_release(v44);
}

uint64_t sub_2AB4B0()
{
  return swift_deallocObject(v0, 208LL, 7LL);
}

uint64_t partial apply for specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)( uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_43EEE4);
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItemList(_:)(a1, v4, v5, v6, v7);
}

uint64_t partial apply for specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()( uint64_t a1)
{
  return specialized closure #1 in DisambiguationItemFactory.buildDisambiguationItems()(a1);
}

uint64_t sub_2AB59C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationItem, Never>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t OUTLINED_FUNCTION_0_104(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 - __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *v1;
  uint64_t v4 = *(void *)(v3 + 32);
  *(void *)(v2 - __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *v1;
  *(void *)(v3 + 40) = a1;
  return swift_task_dealloc(v4);
}

uint64_t OUTLINED_FUNCTION_3_119(uint64_t a1)
{
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return swift_task_alloc(32LL);
}

uint64_t OUTLINED_FUNCTION_6_99()
{
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t OUTLINED_FUNCTION_8_83(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return type metadata accessor for SiriKitDisambiguationItem(0LL);
}

uint64_t OUTLINED_FUNCTION_9_80()
{
  return v1(v2, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_11_84()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t static CallRecordViewUtils.generatedDisplayTextColor(callRecordType:forCallHistoryDisplay:)( uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 4474194LL;
  uint64_t v3 = 0xE300000000000000LL;
  BOOL v4 = a1 == 0x44455353494DLL && a2 == 0xE600000000000000LL;
  if (!v4
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x44455353494DLL, 0xE600000000000000LL, 0LL) & 1) == 0)
  {
    uint64_t v2 = 0x544C5541464544LL;
    uint64_t v3 = 0xE700000000000000LL;
  }

  OUTLINED_FUNCTION_1_34(v2, v3);
  OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_58_8();
  return OUTLINED_FUNCTION_32_6(v5, v6, v7, v8);
}

uint64_t static CallRecordViewUtils.generatedDisplaySymbolIcon(callRecordType:forCallHistoryDisplay:)( uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x474E494F4754554FLL && a2 == 0xE800000000000000LL;
  if (v2
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x474E494F4754554FLL, 0xE800000000000000LL, 0LL) & 1) != 0)
  {
    uint64_t v3 = 0x80000000003516D0LL;
    uint64_t v4 = 0xD000000000000014LL;
  }

  else
  {
    uint64_t v4 = 0LL;
    uint64_t v3 = 0xE000000000000000LL;
  }

  OUTLINED_FUNCTION_1_34(v4, v3);
  OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_58_8();
  return __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
}