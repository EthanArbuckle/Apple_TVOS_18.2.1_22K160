uint64_t getEnumTagSinglePayload for StartCallPromptForContactsParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CC3F0);
}

void __swift_get_extra_inhabitant_index_75Tm()
{
  if (v0)
  {
    uint64_t v1 = OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_9_3(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_6();
  }

uint64_t storeEnumTagSinglePayload for StartCallPromptForContactsParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CC464);
}

void __swift_store_extra_inhabitant_index_76Tm()
{
  if (v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_32_6(v4, v5, v6, v7);
  }

  else
  {
    *(_BYTE *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
    OUTLINED_FUNCTION_6();
  }

void type metadata completion function for StartCallPromptForContactsParameters(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = &unk_323970;
    v4[2] = &unk_323970;
    v4[3] = "\t";
    v4[4] = &unk_323970;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
  }

uint64_t *initializeBufferWithCopyOfBuffer for StartCallSimpleDisambiguateContactsParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain();
  }

  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for SpeakableString(0LL);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v9);
    }
  }

  return v5;
}

void destroy for StartCallSimpleDisambiguateContactsParameters(void *a1, uint64_t a2)
{
}

void *initializeWithCopy for StartCallSimpleDisambiguateContactsParameters( void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for SpeakableString(0LL);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1LL, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0LL, 1LL, v7);
  }

  return a1;
}

void *assignWithCopy for StartCallSimpleDisambiguateContactsParameters(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }

  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v9);
  return a1;
}

void *assignWithTake for StartCallSimpleDisambiguateContactsParameters(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }

  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartCallSimpleDisambiguateContactsParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CC90C);
}

void sub_CC90C(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_6();
  }

  else
  {
    OUTLINED_FUNCTION_201();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    uint64_t v2 = OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_9_3(v2, v3, v4);
  }

uint64_t storeEnumTagSinglePayload for StartCallSimpleDisambiguateContactsParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CC970);
}

void sub_CC970(void *a1, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_110_2();
    OUTLINED_FUNCTION_32_6(v3, v4, v5, v6);
  }

void type metadata completion function for StartCallSimpleDisambiguateContactsParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t destroy for StartCallSimpleDisambiguateContactsHandlesParameters(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 16));
}

void initializeBufferWithCopyOfBuffer for StartCallSimpleDisambiguateContactsHandlesParameters( uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v2 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v2;
  swift_bridgeObjectRetain();
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_2();
}

uint64_t assignWithCopy for StartCallSimpleDisambiguateContactsHandlesParameters(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

uint64_t assignWithTake for StartCallSimpleDisambiguateContactsHandlesParameters(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  swift_bridgeObjectRelease(*(void *)(a1 + 8));
  uint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  return a1;
}

void type metadata accessor for StartCallSimpleDisambiguateContactsHandlesParameters()
{
}

uint64_t getEnumTagSinglePayload for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CCB20);
}

uint64_t sub_CCB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CCB64);
}

uint64_t sub_CCB64()
{
  uint64_t v0 = OUTLINED_FUNCTION_91_3();
  return OUTLINED_FUNCTION_16_0(v0, v1, v2, v3);
}

void initializeBufferWithCopyOfBuffer for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters( void *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?)
                 - 8);
  if ((*(_DWORD *)(v4 + 80) & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_129_0(*a2);
  }

  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_26_0();
    if (OUTLINED_FUNCTION_64_2())
    {
      memcpy(a1, a2, *(void *)(v4 + 64));
    }

    else
    {
      OUTLINED_FUNCTION_45_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL));
      OUTLINED_FUNCTION_44_2((uint64_t)a1, 0LL);
    }
  }

  OUTLINED_FUNCTION_6();
}

void initializeWithCopy for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_64_2())
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v3);
  }

  else
  {
    OUTLINED_FUNCTION_45_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL));
    OUTLINED_FUNCTION_44_2(a1, 0LL);
  }

  OUTLINED_FUNCTION_6();
}

void assignWithCopy for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_26_0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1LL, v2);
  int v4 = OUTLINED_FUNCTION_64_2();
  if (!EnumTagSinglePayload)
  {
    uint64_t v5 = *(void *)(v2 - 8);
    if (!v4)
    {
      OUTLINED_FUNCTION_45_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24));
      goto LABEL_7;
    }

    OUTLINED_FUNCTION_157_0(v5);
    goto LABEL_6;
  }

  if (v4)
  {
LABEL_6:
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v6);
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_45_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL));
  OUTLINED_FUNCTION_44_2(a1, 0LL);
LABEL_7:
  OUTLINED_FUNCTION_6();
}

void initializeWithTake for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_64_2())
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v3);
  }

  else
  {
    OUTLINED_FUNCTION_45_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL));
    OUTLINED_FUNCTION_44_2(a1, 0LL);
  }

  OUTLINED_FUNCTION_6();
}

void assignWithTake for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_26_0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1LL, v2);
  int v4 = OUTLINED_FUNCTION_64_2();
  if (!EnumTagSinglePayload)
  {
    uint64_t v5 = *(void *)(v2 - 8);
    if (!v4)
    {
      OUTLINED_FUNCTION_45_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 40));
      goto LABEL_7;
    }

    OUTLINED_FUNCTION_157_0(v5);
    goto LABEL_6;
  }

  if (v4)
  {
LABEL_6:
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v6);
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_45_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL));
  OUTLINED_FUNCTION_44_2(a1, 0LL);
LABEL_7:
  OUTLINED_FUNCTION_6();
}

uint64_t getEnumTagSinglePayload for StartCallUnsupportedCallCapabilityMicrophoneNotAccessibleParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CF46C);
}

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedCallCapabilityMicrophoneNotAccessibleParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CF470);
}

void type metadata completion function for StartCallUnsupportedCallCapabilityCameraNotAccessibleParameters( uint64_t a1)
{
  if (v2 <= 0x3F)
  {
    OUTLINED_FUNCTION_202();
    swift_initStructMetadata(a1, 256LL, 1LL, v4, v3);
    OUTLINED_FUNCTION_1();
  }

  OUTLINED_FUNCTION_4();
}

uint64_t *initializeBufferWithCopyOfBuffer for StartCallUnsupportedContactsInvalidHandleParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain();
  }

  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for SpeakableString(0LL);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v9);
    }
  }

  return v5;
}

void destroy for StartCallUnsupportedContactsInvalidHandleParameters(void *a1, uint64_t a2)
{
}

void destroy for StartCallSimpleDisambiguateContactsParameters( void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = (uint64_t)a1 + *(int *)(a2 + 20);
  OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_14_25(v5))
  {
    OUTLINED_FUNCTION_2();
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_154(v6, v7, v8);
  }

void *initializeWithCopy for StartCallUnsupportedContactsInvalidHandleParameters( void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for SpeakableString(0LL);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1LL, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0LL, 1LL, v7);
  }

  return a1;
}

uint64_t *assignWithCopy for StartCallUnsupportedContactsInvalidHandleParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v10);
  if (!EnumTagSinglePayload)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }

  if (v12)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v10);
  return a1;
}

void initializeWithTake for StartCallSimpleDisambiguateContactsParameters( void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v4, v5, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_86_3((uint64_t)v4, (uint64_t)v5, v8);
    OUTLINED_FUNCTION_11_21((uint64_t)v4, 0LL);
  }

  OUTLINED_FUNCTION_6();
}

uint64_t *assignWithTake for StartCallUnsupportedContactsInvalidHandleParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v10);
  if (!EnumTagSinglePayload)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }

  if (v12)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartCallUnsupportedContactsInvalidHandleParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_81Tm_0);
}

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedContactsInvalidHandleParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_82Tm_0);
}

void type metadata completion function for StartCallUnsupportedContactsInvalidHandleParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void type metadata completion function for StartCallSimpleDisambiguateContactsParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a4;
  OUTLINED_FUNCTION_174();
  if (v5 <= 0x3F)
  {
    OUTLINED_FUNCTION_202();
    swift_initStructMetadata(a1, 256LL, 2LL, &v7, v6);
    OUTLINED_FUNCTION_1();
  }

  OUTLINED_FUNCTION_4();
}

uint64_t *initializeBufferWithCopyOfBuffer for StartCallUnsupportedContactsNoContactFoundParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v7);
    }

    uint64_t v10 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  }

  swift_retain();
  return a1;
}

char *initializeWithCopy for StartCallUnsupportedContactsNoContactFoundParameters( char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  a1[v8] = a2[v8];
  swift_retain();
  return a1;
}

char *assignWithCopy for StartCallUnsupportedContactsNoContactFoundParameters( char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(void *)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_retain();
  swift_release(v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for StartCallUnsupportedContactsNoContactFoundParameters( char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  a1[v8] = a2[v8];
  return a1;
}

char *assignWithTake for StartCallUnsupportedContactsNoContactFoundParameters( char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(void *)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_release(v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for StartCallUnsupportedContactsNoContactFoundParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CD800);
}

void __swift_get_extra_inhabitant_index_83Tm()
{
  if (v2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_9_3(v3, v4, v5);
  }

  else
  {
    OUTLINED_FUNCTION_35_14(*(void *)(v0 + *(int *)(v1 + 20)));
    OUTLINED_FUNCTION_6();
  }

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedContactsNoContactFoundParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CD858);
}

void __swift_store_extra_inhabitant_index_84Tm()
{
  if (v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_32_6(v4, v5, v6, v7);
  }

  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = v0;
    OUTLINED_FUNCTION_6();
  }

void type metadata completion function for StartCallUnsupportedContactsNoContactFoundParameters(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    v4[2] = &unk_323970;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
  }

uint64_t *initializeBufferWithCopyOfBuffer for StartCallUnsupportedContactsNoHandleForLabelParameters( uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain();
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SpeakableString(0LL);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v11);
    }

    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[8];
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    swift_retain();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1LL, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v15, v16, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0LL, 1LL, v11);
    }
  }

  return v7;
}

uint64_t destroy for StartCallUnsupportedContactsNoHandleForLabelParameters(void *a1, int *a2)
{
  uint64_t v4 = (uint64_t)a1 + a2[5];
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  swift_release(*(void *)((char *)a1 + a2[6]));
  swift_release(*(void *)((char *)a1 + a2[7]));
  uint64_t v6 = (uint64_t)a1 + a2[8];
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1LL, v5);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v6, v5);
  }
  return result;
}

void *initializeWithCopy for StartCallUnsupportedContactsNoHandleForLabelParameters( void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v9);
  }

  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  swift_retain();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1LL, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL))(v13, v14, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v9);
  }

  return a1;
}

uint64_t *assignWithCopy for StartCallUnsupportedContactsNoHandleForLabelParameters( uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = *(uint64_t *)((char *)a1 + v15);
  *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  swift_retain();
  swift_release(v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = *(uint64_t *)((char *)a1 + v17);
  *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  swift_retain();
  swift_release(v18);
  uint64_t v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  LODWORD(v18) = __swift_getEnumTagSinglePayload((uint64_t)a1 + v19, 1LL, v10);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1LL, v10);
  if (!(_DWORD)v18)
  {
    uint64_t v23 = *(void *)(v10 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v10);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v10);
    goto LABEL_12;
  }

  if (v22)
  {
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v20, v21, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0LL, 1LL, v10);
  return a1;
}

void *initializeWithTake for StartCallUnsupportedContactsNoHandleForLabelParameters( void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v9);
  }

  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1LL, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v13, v14, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v9);
  }

  return a1;
}

uint64_t *assignWithTake for StartCallUnsupportedContactsNoHandleForLabelParameters( uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = *(uint64_t *)((char *)a1 + v15);
  *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  swift_release(v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = *(uint64_t *)((char *)a1 + v17);
  *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
  swift_release(v18);
  uint64_t v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v19, 1LL, v10);
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1LL, v10);
  if (!v22)
  {
    uint64_t v24 = *(void *)(v10 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v20, v21, v10);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v10);
    goto LABEL_12;
  }

  if (v23)
  {
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v20, v21, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0LL, 1LL, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartCallUnsupportedContactsNoHandleForLabelParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_81Tm_1);
}

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedContactsNoHandleForLabelParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_82Tm_1);
}

void type metadata completion function for StartCallUnsupportedContactsNoHandleForLabelParameters( uint64_t a1)
{
  uint64_t v4 = "\b";
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = "\b";
    uint64_t v7 = "\b";
    uint64_t v8 = v5;
    swift_initStructMetadata(a1, 256LL, 5LL, &v4, a1 + 16);
  }

uint64_t getEnumTagSinglePayload for StartCallUnsupportedDeviceFaceTimeLinkParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_81Tm_2);
}

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedDeviceFaceTimeLinkParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_82Tm_2);
}

void initializeBufferWithCopyOfBuffer for StartCallUnsupportedDeviceFaceTimeLinkParameters()
{
  int v4 = *(_DWORD *)(*(void *)(v3 - 8) + 80LL);
  *uint64_t v6 = *v5;
  if ((v4 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_59();
  }

  else
  {
    OUTLINED_FUNCTION_94_2();
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v10 = v9 + v8;
    uint64_t v12 = v11 + v8;
    uint64_t v13 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_59();
    if (OUTLINED_FUNCTION_14_25(v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      OUTLINED_FUNCTION_48_5(v14);
    }

    else
    {
      OUTLINED_FUNCTION_25_25( v10,  v12,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16LL));
      OUTLINED_FUNCTION_7_43(v10);
    }

    uint64_t v15 = *(int *)(v2 + 24);
    uint64_t v16 = v0 + v15;
    if (OUTLINED_FUNCTION_14_25(v1 + v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      OUTLINED_FUNCTION_18_25(v17);
    }

    else
    {
      OUTLINED_FUNCTION_17_31(v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16LL));
      OUTLINED_FUNCTION_7_43(v16);
    }
  }

  OUTLINED_FUNCTION_58();
}

void destroy for StartCallUnsupportedDeviceFaceTimeLinkParameters(void *a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_10_26(v2 + *(int *)(a2 + 24)))
  {
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_180();
    OUTLINED_FUNCTION_119_0(v6, v7, v8);
  }

void initializeWithCopy for StartCallUnsupportedDeviceFaceTimeLinkParameters()
{
  *uint64_t v4 = *v3;
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (uint64_t)v4 + v6;
  uint64_t v8 = (uint64_t)v3 + v6;
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_59();
  if (OUTLINED_FUNCTION_14_25(v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_5(v10);
  }

  else
  {
    OUTLINED_FUNCTION_25_25(v7, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16LL));
    OUTLINED_FUNCTION_7_43(v7);
  }

  uint64_t v11 = *(int *)(v2 + 24);
  uint64_t v12 = v0 + v11;
  if (OUTLINED_FUNCTION_14_25(v1 + v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_18_25(v13);
  }

  else
  {
    OUTLINED_FUNCTION_17_31(v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16LL));
    OUTLINED_FUNCTION_7_43(v12);
  }

  OUTLINED_FUNCTION_58();
}

void assignWithCopy for StartCallUnsupportedDeviceFaceTimeLinkParameters()
{
  *uint64_t v0 = *v3;
  swift_retain();
  OUTLINED_FUNCTION_38_1();
  uint64_t v4 = *(int *)(v2 + 20);
  uint64_t v5 = (uint64_t)v0 + v4;
  uint64_t v6 = v1 + v4;
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1LL, v7);
  int v9 = OUTLINED_FUNCTION_14_25(v6);
  if (EnumTagSinglePayload)
  {
    if (!v9)
    {
      OUTLINED_FUNCTION_25_25(v5, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16LL));
      OUTLINED_FUNCTION_7_43(v5);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v10 = *(void *)(v7 - 8);
  if (v9)
  {
    OUTLINED_FUNCTION_100_0(v5, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_5(v11);
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_25_25(v5, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24));
LABEL_7:
  uint64_t v12 = *(int *)(v2 + 24);
  uint64_t v13 = (uint64_t)v0 + v12;
  uint64_t v14 = v1 + v12;
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v0 + v12, 1LL, v7);
  int v16 = OUTLINED_FUNCTION_14_25(v14);
  if (!v15)
  {
    uint64_t v17 = *(void *)(v7 - 8);
    if (!v16)
    {
      OUTLINED_FUNCTION_17_31(v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 24));
      goto LABEL_13;
    }

    OUTLINED_FUNCTION_74_4(v17);
    goto LABEL_12;
  }

  if (v16)
  {
LABEL_12:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_18_25(v18);
    goto LABEL_13;
  }

  OUTLINED_FUNCTION_17_31(v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16LL));
  OUTLINED_FUNCTION_7_43(v13);
LABEL_13:
  OUTLINED_FUNCTION_58();
}

void initializeWithTake for StartCallUnsupportedDeviceFaceTimeLinkParameters()
{
  *uint64_t v4 = *v3;
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (uint64_t)v4 + v6;
  uint64_t v8 = (uint64_t)v3 + v6;
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_14_25(v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_5(v10);
  }

  else
  {
    OUTLINED_FUNCTION_25_25(v7, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL));
    OUTLINED_FUNCTION_7_43(v7);
  }

  uint64_t v11 = *(int *)(v2 + 24);
  uint64_t v12 = v0 + v11;
  if (OUTLINED_FUNCTION_14_25(v1 + v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_18_25(v13);
  }

  else
  {
    OUTLINED_FUNCTION_17_31(v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL));
    OUTLINED_FUNCTION_7_43(v12);
  }

  OUTLINED_FUNCTION_16();
}

void assignWithTake for StartCallUnsupportedDeviceFaceTimeLinkParameters()
{
  uint64_t v4 = *v3;
  *uint64_t v0 = *v5;
  swift_release(v4);
  uint64_t v6 = *(int *)(v2 + 20);
  uint64_t v7 = (uint64_t)v0 + v6;
  uint64_t v8 = v1 + v6;
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1LL, v9);
  int v11 = OUTLINED_FUNCTION_14_25(v8);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      OUTLINED_FUNCTION_25_25(v7, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL));
      OUTLINED_FUNCTION_7_43(v7);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    OUTLINED_FUNCTION_100_0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_48_5(v13);
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_25_25(v7, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 40));
LABEL_7:
  uint64_t v14 = *(int *)(v2 + 24);
  uint64_t v15 = (uint64_t)v0 + v14;
  uint64_t v16 = v1 + v14;
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v0 + v14, 1LL, v9);
  int v18 = OUTLINED_FUNCTION_14_25(v16);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      OUTLINED_FUNCTION_17_31(v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40));
      goto LABEL_13;
    }

    OUTLINED_FUNCTION_74_4(v19);
    goto LABEL_12;
  }

  if (v18)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_18_25(v20);
    goto LABEL_13;
  }

  OUTLINED_FUNCTION_17_31(v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL));
  OUTLINED_FUNCTION_7_43(v15);
LABEL_13:
  OUTLINED_FUNCTION_58();
}

uint64_t getEnumTagSinglePayload for StartCallUnsupportedDeviceGroupFaceTimeParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CE838);
}

void __swift_get_extra_inhabitant_index_81Tm()
{
  if (v1)
  {
    OUTLINED_FUNCTION_35_14(*v0);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    OUTLINED_FUNCTION_201();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    uint64_t v2 = OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_9_3(v2, v3, v4);
  }

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedDeviceGroupFaceTimeParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CE88C);
}

void __swift_store_extra_inhabitant_index_82Tm()
{
  if (v2)
  {
    *char v1 = v0;
    OUTLINED_FUNCTION_6();
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_110_2();
    OUTLINED_FUNCTION_32_6(v3, v4, v5, v6);
  }

void type metadata completion function for StartCallUnsupportedDeviceFaceTimeLinkParameters(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    OUTLINED_FUNCTION_148_0(v2, v3, v4, v5, a1 + 16, v6);
    OUTLINED_FUNCTION_1();
  }

  OUTLINED_FUNCTION_60_2();
}

void initializeBufferWithCopyOfBuffer for StartCallErrorWithCodeDownTimeRestrictionEnabledParameters( void *a1, void *a2)
{
  uint64_t v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_2();
}

void assignWithCopy for StartCallErrorWithCodeDownTimeRestrictionEnabledParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  uint64_t v5 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v5);
  OUTLINED_FUNCTION_6();
}

void assignWithTake for StartCallErrorWithCodeDownTimeRestrictionEnabledParameters(void *a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)(v2 + 8);
  *(_OWORD *)uint64_t v2 = *a2;
  swift_release(v4);
  OUTLINED_FUNCTION_2();
}

uint64_t getEnumTagSinglePayload for StartCallErrorWithCodeDownTimeRestrictionEnabledParameters( uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      uint64_t v3 = *a1;
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

void *storeEnumTagSinglePayload for StartCallErrorWithCodeDownTimeRestrictionEnabledParameters( void *result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = a2 - 0x7FFFFFFF;
    result[1] = 0LL;
    if (a3 >= 0x7FFFFFFF) {
      *((_BYTE *)result + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *((_BYTE *)result + 16) = 0;
    }
    if (a2) {
      return OUTLINED_FUNCTION_200(result, a2);
    }
  }

  return result;
}

void type metadata accessor for StartCallUnsupportedPreferredCallProviderParameters()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain();
  }

  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SpeakableString(0LL);
    swift_retain();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v11);
    }

    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1LL, v11))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v14, v15, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0LL, 1LL, v11);
    }
  }

  return v7;
}

uint64_t destroy for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  uint64_t v6 = (uint64_t)a1 + *(int *)(a2 + 28);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1LL, v5);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v6, v5);
  }
  return result;
}

void *initializeWithCopy for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  swift_retain();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v10);
  }

  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1LL, v10))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v10);
  }

  return a1;
}

uint64_t *assignWithCopy for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  uint64_t v7 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v7);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v11);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  int v17 = (char *)a1 + v16;
  int v18 = (char *)a2 + v16;
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v16, 1LL, v11);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1LL, v11);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v11 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v17, v18, v11);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v11);
    goto LABEL_12;
  }

  if (v20)
  {
LABEL_12:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v17, v18, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0LL, 1LL, v11);
  return a1;
}

_OWORD *initializeWithTake for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( _OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v9);
  }

  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  int v13 = (char *)a2 + v11;
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v9))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0LL, 1LL, v9);
  }

  return a1;
}

uint64_t *assignWithTake for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  uint64_t v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v11);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  int v17 = (char *)a1 + v16;
  int v18 = (char *)a2 + v16;
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v16, 1LL, v11);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1LL, v11);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v11 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v17, v18, v11);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v11);
    goto LABEL_12;
  }

  if (v20)
  {
LABEL_12:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v17, v18, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0LL, 1LL, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CF2F8);
}

void sub_CF2F8()
{
  if (v3)
  {
    OUTLINED_FUNCTION_35_14(*v1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    OUTLINED_FUNCTION_201();
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_9_3((uint64_t)v1 + *(int *)(v2 + 24), v0, v4);
  }

uint64_t storeEnumTagSinglePayload for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CF354);
}

void sub_CF354()
{
  if (v2)
  {
    *char v1 = v0;
    OUTLINED_FUNCTION_6();
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_110_2();
    OUTLINED_FUNCTION_32_6(v3, v4, v5, v6);
  }

void type metadata completion function for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters( uint64_t a1)
{
  v4[0] = "\b";
  v4[1] = "\b";
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
  }

uint64_t type metadata completion function for StartCallCATPatternsExecutor(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for StartCallCATPatternsExecutor);
}

uint64_t ObjC metadata update function for StartCallCATPatternsExecutor()
{
  return type metadata accessor for StartCallCATPatternsExecutor(0LL);
}

uint64_t OUTLINED_FUNCTION_7_43(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_10_31@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *v3;
  *(void *)(v4 + 72) = v2;
  return swift_task_dealloc(a1);
}

uint64_t OUTLINED_FUNCTION_14_25(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_17_31@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v3, v2);
}

void *OUTLINED_FUNCTION_18_25(uint64_t a1)
{
  return memcpy(v2, v1, *(void *)(*(void *)(a1 - 8) + 64LL));
}

void OUTLINED_FUNCTION_22_19(uint64_t a1, uint64_t (*a2)(void))
{
}

uint64_t AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.confirmAction.setter(uint64_t a1)
{
  return outlined assign with take of SpeakableString?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_28_18(uint64_t a1)
{
  *(_BYTE *)(v1 + *(int *)(v2 + 20)) = v4;
  return v3(v1);
}

uint64_t OUTLINED_FUNCTION_32_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_35_14@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  int v1 = a1 - 1;
  if (v1 < 0) {
    int v1 = -1;
  }
  return (v1 + 1);
}

  ;
}

void OUTLINED_FUNCTION_42_8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
}

void OUTLINED_FUNCTION_43_6(uint64_t a1)
{
  *(void *)(a1 + 32) = 0x656D614E707061LL;
  *(void *)(a1 + 40) = 0xE700000000000000LL;
  outlined init with copy of Result<TemplatingResult, Error>(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_45_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2, v3);
}

void *OUTLINED_FUNCTION_47_6(uint64_t a1)
{
  return memcpy(v1, v2, *(void *)(*(void *)(a1 - 8) + 64LL));
}

void *OUTLINED_FUNCTION_48_5(uint64_t a1)
{
  return memcpy(v1, v2, *(void *)(*(void *)(a1 - 8) + 64LL));
}

uint64_t OUTLINED_FUNCTION_49_6@<X0>(uint64_t a1@<X8>)
{
  return v3(v1);
}

uint64_t OUTLINED_FUNCTION_51_7()
{
  *(void *)(v0 + 16) = 0LL;
  return (*(uint64_t (**)(uint64_t))(v0 + 24))(v0 + 16);
}

unint64_t OUTLINED_FUNCTION_52_7(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

void *OUTLINED_FUNCTION_53_7@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *uint64_t result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_60_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_61_5(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

void *OUTLINED_FUNCTION_62_3(uint64_t a1)
{
  return memcpy(v1, v2, *(void *)(*(void *)(a1 - 8) + 64LL));
}

void OUTLINED_FUNCTION_67_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t OUTLINED_FUNCTION_69_5(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_71_4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_72_5(uint64_t a1, uint64_t a2)
{
  return outlined init with take of SpeakableString?(a1, a2);
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return type metadata accessor for StartCallConfirmContactsParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_74_4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_75_3()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 56) = 0LL;
  *(void *)(v0 + 64) = 0LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_76_5(uint64_t (*a1)(void))
{
  return a1(0LL);
}

uint64_t OUTLINED_FUNCTION_77_4(char a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 16) = a4;
  *(_BYTE *)(v6 + 90) = a3;
  *(_BYTE *)(v6 + 89) = a2;
  *(_BYTE *)(v6 + 88) = a1;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_78_4()
{
  uint64_t v3 = *v1;
  char v4 = (uint64_t *)(v2 - 8);
  *char v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 80);
  *char v4 = *v1;
  *(void *)(v3 + 88) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_80_3()
{
  return type metadata accessor for StartCallIntentHandledResponseParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_83_2(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 88) = a1;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_84_3(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_86_3@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_87_3()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 56);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 64) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_88_3()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 72);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 80) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_89_3@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_91_3()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_98_3()
{
  return type metadata accessor for StartCallIntentConfirmationWithRestrictedContactsParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_99_1()
{
  return type metadata accessor for StartCallUnsupportedContactsNoHandleForLabelParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_100_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_101_1()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_103_1(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_105_1(uint64_t result)
{
  *(void *)(v2 + 56) = v1;
  *(void *)(v3 + 48) = v1;
  *(void *)(v3 + 72) = result;
  return result;
}

  ;
}

  ;
}

void *OUTLINED_FUNCTION_112_0()
{
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_113_1(uint64_t a1)
{
  uint64_t result = __swift_storeEnumTagSinglePayload(v2, 1LL, 1LL, a1);
  *(void *)(v1 + *(int *)(v3 + 24)) = 0LL;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_115_0(uint64_t a1)
{
  uint64_t result = __swift_storeEnumTagSinglePayload(v3, 1LL, 1LL, a1);
  *(void *)(v1 + *(int *)(v2 + 24)) = 0LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_118_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x746E65746E69LL;
  v2[11] = 0xE600000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_120_2()
{
  return swift_release(*(void *)(v0 + v1));
}

  ;
}

uint64_t OUTLINED_FUNCTION_122_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_123_0(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t OUTLINED_FUNCTION_124_0()
{
  return type metadata accessor for StartCallUnsupportedPreferredCallProviderAccountSetupRequiredParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_125_1()
{
  return type metadata accessor for PhonePersonList();
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_127_0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = (a1 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_129_0(uint64_t a1)
{
  *uint64_t v1 = a1;
  return swift_retain(a1);
}

uint64_t OUTLINED_FUNCTION_132_1(uint64_t a1)
{
  return outlined init with take of SpeakableString?(v1, v2 + *(int *)(a1 + 20));
}

void *OUTLINED_FUNCTION_133_0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *uint64_t result = v2;
  result[1] = a2;
  return result;
}

double OUTLINED_FUNCTION_134_1()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_135_1(uint64_t result)
{
  *(void *)(result + 32) = 0x656D614E707061LL;
  *(void *)(result + 40) = 0xE700000000000000LL;
  return result;
}

__n128 *OUTLINED_FUNCTION_136_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x746E65746E69LL;
  result[2].n128_u64[1] = 0xE600000000000000LL;
  return result;
}

void *OUTLINED_FUNCTION_137_0()
{
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_140_0()
{
  return type metadata accessor for DialogPerson(0LL);
}

uint64_t OUTLINED_FUNCTION_148_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return swift_initStructMetadata(v6, 256LL, 3LL, va, a5);
}

void OUTLINED_FUNCTION_150(uint64_t a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_152(uint64_t a1)
{
  return v2(v1);
}

uint64_t OUTLINED_FUNCTION_153_0(uint64_t a1, uint64_t a2)
{
  return outlined init with take of SpeakableString?(a1, a2);
}

uint64_t OUTLINED_FUNCTION_154(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void OUTLINED_FUNCTION_165(uint64_t a1, uint64_t *a2)
{
}

  ;
}

  ;
}

  ;
}

unint64_t OUTLINED_FUNCTION_172(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

void OUTLINED_FUNCTION_173(uint64_t a1@<X8>)
{
  *(void *)(v1 + 184) = (a1 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_174()
{
}

  ;
}

  ;
}

  ;
}

  ;
}

void *OUTLINED_FUNCTION_183()
{
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

double OUTLINED_FUNCTION_184()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

void *OUTLINED_FUNCTION_186()
{
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_187()
{
  return swift_release(*(void *)(v0 + 72));
}

  ;
}

uint64_t OUTLINED_FUNCTION_194@<X0>(uint64_t a1@<X8>)
{
  return outlined init with take of SpeakableString?(v1, v2 + a1);
}

  ;
}

void *OUTLINED_FUNCTION_200(void *result, unsigned int a2)
{
  *double result = a2;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_203()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_206(void *a1)
{
  return swift_release(*a1);
}

uint64_t _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lF@<X0>( void (*a1)(char *)@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, v16);
  if (swift_getEnumCaseMultiPayload(v14, a2) == 1)
  {
    uint64_t v17 = a2[3];
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32LL))(a4, v14, v17);
    uint64_t v18 = 1LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v14, v8);
    a1(v12);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v18 = 0LL;
    uint64_t v17 = a2[3];
  }

  uint64_t v19 = type metadata accessor for Result(0LL, a3, v17, a2[4]);
  return swift_storeEnumTagMultiPayload(a4, v19, v18);
}

uint64_t Result<>.merge(with:behaviorAfterSpeaking:)@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  return _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF( (void (*)(char *))partial apply for closure #1 in Result<>.merge(with:behaviorAfterSpeaking:),  a1,  a1[2],  a2);
}

uint64_t closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for TemplatingResult(255LL);
  uint64_t v9 = (void *)type metadata accessor for Result(0LL, v8, a2, a3);
  __chkstk_darwin();
  uint64_t v16 = a1;
  _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lF( (void (*)(char *))partial apply for closure #1 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:),  v9,  v8,  (uint64_t)&v12[-v10]);
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v15 = a1;
  return _ss6ResultOsRi_zrlE12flatMapErroryAByxqd__GADq_XEs0D0Rd__lF( (void (*)(char *))partial apply for closure #2 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:),  (uint64_t)v9,  a2,  a3,  a4);
}

uint64_t partial apply for closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t closure #1 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for BehaviorAfterSpeaking(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1LL, 1LL, v6);
  TemplatingResult.merge(with:behaviorAfterSpeaking:)(a1, (uint64_t)v5, a2);
  return outlined destroy of BehaviorAfterSpeaking?((uint64_t)v5);
}

uint64_t closure #2 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for Result(0LL, v8, a2, a3);
  return swift_storeEnumTagMultiPayload(a4, v9, 0LL);
}

uint64_t _ss6ResultOsRi_zrlE12flatMapErroryAByxqd__GADq_XEs0D0Rd__lF@<X0>( void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (swift_getEnumCaseMultiPayload(v6, v16) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v15, v6, v12);
    a1(v15);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  else
  {
    uint64_t v18 = *(void *)(a2 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(a5, v6, v18);
    uint64_t v19 = type metadata accessor for Result(0LL, v18, a3, a4);
    return swift_storeEnumTagMultiPayload(a5, v19, 0LL);
  }

uint64_t _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF@<X0>( void (*a1)(char *)@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, v16);
  if (swift_getEnumCaseMultiPayload(v14, a2) == 1)
  {
    uint64_t v17 = a2[3];
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32LL))(a4, v14, v17);
    uint64_t v18 = type metadata accessor for Result(0LL, a3, v17, a2[4]);
    return swift_storeEnumTagMultiPayload(a4, v18, 1LL);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v14, v8);
    a1(v12);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }

uint64_t Result.zip<A>(with:)@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0LL, a1[2], a2, 0LL, 0LL);
  return _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF( (void (*)(char *))partial apply for closure #1 in Result.zip<A>(with:),  a1,  TupleTypeMetadata2,  a3);
}

uint64_t closure #1 in Result.zip<A>(with:)@<X0>( uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8 = (void *)type metadata accessor for Result(0LL, a3, a2, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0LL, a1, a3, 0LL, 0LL);
  return _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lF( (void (*)(char *))partial apply for closure #1 in closure #1 in Result.zip<A>(with:),  v8,  TupleTypeMetadata2,  a5);
}

uint64_t partial apply for closure #1 in Result.zip<A>(with:)(uint64_t a1)
{
  return partial apply for closure #1 in Result.zip<A>(with:)( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void))closure #1 in Result.zip<A>(with:));
}

uint64_t outlined destroy of BehaviorAfterSpeaking?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BehaviorAfterSpeaking?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t closure #1 in closure #1 in Result.zip<A>(with:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = a5 + *(int *)(swift_getTupleTypeMetadata2(0LL, a3, a4, 0LL, 0LL) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16LL))(a5, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16LL))(v10, a1, a4);
}

uint64_t partial apply for closure #1 in closure #1 in Result.zip<A>(with:)(uint64_t a1)
{
  return partial apply for closure #1 in Result.zip<A>(with:)( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void))closure #1 in closure #1 in Result.zip<A>(with:));
}

uint64_t partial apply for closure #1 in Result.zip<A>(with:)( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t partial apply for closure #1 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)(a1, a2);
}

uint64_t partial apply for closure #2 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)(v1[4], v1[2], v1[3], a1);
}

id SKIDirectInvocationPayload.toStartLocalRequest(deviceState:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = (void *)DeviceState.asInvocationContext.getter(v3, v4);
  uint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  id v7 = [v6 runSiriKitExecutorCommandWithContext:v5 payload:v2];
  id v8 = [v6 wrapCommandInStartLocalRequest:v7];

  return v8;
}

id static SKIDirectInvocationPayload.contactDisambiguation(contact:)(void *a1)
{
  uint64_t v2 = type metadata accessor for CommonDirectAction(0LL);
  __chkstk_darwin();
  uint64_t v4 = (void *)((char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  id v7 = a1;
  id v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v10 = static os_log_type_t.debug.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v31[0] = v2;
    uint64_t v11 = OUTLINED_FUNCTION_7_0(12LL);
    v31[1] = v6;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    uint64_t v33 = (uint64_t)v7;
    id v14 = v7;
    uint64_t v2 = v31[0];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v12 + 4);
    *uint64_t v13 = v7;

    _os_log_impl(&dword_0, v8, v10, "#DirectInvocationPayload Building disambiguation item for contact: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v13, 1LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v13);
    OUTLINED_FUNCTION_0_2((uint64_t)v12);
  }

  else
  {
  }

  *uint64_t v4 = v7;
  swift_storeEnumTagMultiPayload(v4, v2, 1LL);
  type metadata accessor for SKIDirectInvocationPayload();
  id v15 = v7;
  CommonDirectAction.identifier.getter();
  SKIDirectInvocationPayload.__allocating_init(identifier:)();
  uint64_t v17 = v16;
  CommonDirectAction.userData.getter();
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v18);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v20, v17);
  id v21 = v17;
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v24 = static os_log_type_t.debug.getter(v22, v23);
  if (os_log_type_enabled(v22, v24))
  {
    uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v26 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v33 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v32 = outlined bridged method (pb) of @objc SKIDirectInvocationPayload.userData.getter(v21);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AnyHashable : Any]?);
    uint64_t v28 = String.init<A>(describing:)(&v32, v27);
    uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v25 + 4);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v22, v24, "#DirectInvocationPayload built payload: %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1LL);
    OUTLINED_FUNCTION_0_2(v26);
    OUTLINED_FUNCTION_0_2((uint64_t)v25);
  }

  else
  {
  }

  outlined destroy of CommonDirectAction((uint64_t)v4);
  return v21;
}

unint64_t type metadata accessor for SKIDirectInvocationPayload()
{
  unint64_t result = lazy cache variable for type metadata for SKIDirectInvocationPayload;
  if (!lazy cache variable for type metadata for SKIDirectInvocationPayload)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SKIDirectInvocationPayload);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SKIDirectInvocationPayload);
  }

  return result;
}

uint64_t outlined bridged method (pb) of @objc SKIDirectInvocationPayload.userData.getter(void *a1)
{
  id v1 = [a1 userData];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v1,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  return v3;
}

void static LocalizedStringsUtils.getPicsStringCallHistory(sharedGlobals:)(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  id v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 176))(v6, v7);
  type metadata accessor for PhoneCallFlowDelegatePlugin();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  uint64_t v11 = static Locale.current.getter();
  uint64_t v12 = Locale.identifier.getter(v11);
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v19[2] = v12;
  v19[3] = v14;
  v19[0] = 45LL;
  v19[1] = 0xE100000000000000LL;
  v18[0] = 95LL;
  v18[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v15 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v19,  v18,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  outlined bridged method (mbbnbnb) of @objc AFLocalization.localizedString(forKey:table:bundle:languageCode:)( 0xD000000000000011LL,  0x8000000000349350LL,  1396918608LL,  0xE400000000000000LL,  (uint64_t)v10,  v15,  v17,  v8);

  OUTLINED_FUNCTION_58();
}

void outlined bridged method (mbbnbnb) of @objc AFLocalization.localizedString(forKey:table:bundle:languageCode:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [a8 localizedStringForKey:v10 table:v11 bundle:a5 languageCode:v12];

  if (v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  }

  OUTLINED_FUNCTION_58();
}

ValueMetadata *type metadata accessor for LocalizedStringsUtils()
{
  return &type metadata for LocalizedStringsUtils;
}

uint64_t PhonePersonList.__allocating_init(list:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PhonePersonList.Builder();
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 24LL);
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
  OUTLINED_FUNCTION_25_0(v4 + 16, (uint64_t)v6, 1LL);
  *(void *)(v4 + 16) = a1;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v1 + 136))(v4);
}

uint64_t key path setter for PhonePersonList.Builder.list : PhonePersonList.Builder(void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 96LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

void PhoneSearchCallHistoryIntent.Builder.callTypes.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_2();
}

uint64_t (*PhonePersonList.Builder.list.modify(uint64_t a1))()
{
  return PhoneFlow.state.modify;
}

uint64_t PhonePersonWithAliasesList.Builder.__allocating_init()()
{
  uint64_t result = OUTLINED_FUNCTION_8_2(v0, 24LL);
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t type metadata accessor for PhonePersonList.Builder()
{
  return objc_opt_self(&OBJC_CLASS____TtCC27PhoneCallFlowDelegatePlugin15PhonePersonList7Builder);
}

uint64_t PhonePersonWithAliasesList.Builder.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t PhonePersonList.Builder.withList(_:)(uint64_t a1)
{
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)v1 + 96LL);
  uint64_t v3 = swift_bridgeObjectRetain(a1);
  v2(v3);
  return swift_retain(v1);
}

void PhonePersonList.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhonePersonList();
  OUTLINED_FUNCTION_8_2(v0, 32LL);
  uint64_t v1 = UsoEntity_common_Person.usoPerson.getter();
  PhonePersonList.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

void PhonePersonList.__allocating_init(builder:)(uint64_t a1)
{
}

uint64_t type metadata accessor for PhonePersonList()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin15PhonePersonList);
}

uint64_t SharedConfirmationRepromptContext.deinit()
{
  return v0;
}

uint64_t SharedConfirmationRepromptContext.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

unint64_t static PhonePersonList.catTypeName.getter()
{
  return 0xD000000000000010LL;
}

uint64_t key path setter for PhonePersonList.mockGlobals : PhonePersonList(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 120LL);
  id v4 = *a1;
  return v3(v2);
}

uint64_t (*PhonePersonList.mockGlobals.modify(uint64_t a1))()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t PhoneSearchCallHistoryIntent.callTypes.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 24));
}

uint64_t PhonePersonList.init(builder:)(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + 16) = 0LL;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88LL))(a1);
  swift_release(a1);
  *(void *)(v2 + 24) = v4;
  return v2;
}

double PhonePersonList.getProperty(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = a1 == 1953720684 && a2 == 0xE400000000000000LL;
  if (v5 || (OUTLINED_FUNCTION_1_3(1953720684LL, 0xE400000000000000LL) & 1) != 0)
  {
    uint64_t v8 = *(void *)(v3 + 24);
    *(void *)(a3 + 24) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    *(void *)a3 = v8;
    swift_bridgeObjectRetain();
    return result;
  }

  NSString v10 = "allSameGivenName";
  if (a1 == 0xD000000000000010LL && (OUTLINED_FUNCTION_32_8(), v5)
    || (OUTLINED_FUNCTION_1_3(0xD000000000000010LL, (unint64_t)(v10 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    char v11 = specialized PhonePersonListProperties.allSameGivenName.getter();
LABEL_11:
    char v12 = v11;
    swift_release(v3);
    *(void *)(a3 + 24) = &type metadata for Bool;
    *(_BYTE *)a3 = v12 & 1;
    return result;
  }

  uint64_t v13 = 0xD000000000000014LL;
  uint64_t v14 = "isUnnamedPhoneNumber";
  if (a1 == 0xD000000000000014LL && (OUTLINED_FUNCTION_32_8(), v5)
    || (OUTLINED_FUNCTION_1_3(v13, (unint64_t)(v14 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    char v11 = specialized PhonePersonListProperties.isUnnamedPhoneNumber.getter();
    goto LABEL_11;
  }

  BOOL v15 = a1 == 0x6C646E6148736168LL && a2 == 0xEF736C6562614C65LL;
  if (v15 || (OUTLINED_FUNCTION_1_3(0x6C646E6148736168LL, 0xEF736C6562614C65LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    char v11 = specialized PhonePersonListProperties.hasHandleLabels.getter();
    goto LABEL_11;
  }

  uint64_t v16 = 0xD000000000000018LL;
  uint64_t v17 = "hasDifferentNameAndLabel";
  if (a1 == 0xD000000000000018LL && (OUTLINED_FUNCTION_32_8(), v5)
    || (OUTLINED_FUNCTION_1_3(v16, (unint64_t)(v17 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    UsoEntity_common_Person.usoPerson.getter();
    char v11 = specialized PhonePersonListProperties.hasDifferentNameAndLabel.getter();
    goto LABEL_11;
  }

  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t specialized PhonePersonListProperties.allSameGivenName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  void v4[2] = &v5;
  swift_bridgeObjectRetain();
  char v2 = specialized Sequence.allSatisfy(_:)( partial apply for specialized closure #1 in PhonePersonListProperties.allSameGivenName.getter,  (uint64_t)v4,  v1);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t specialized PhonePersonListProperties.isUnnamedPhoneNumber.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL));
  if (v3)
  {
    swift_bridgeObjectRetain_n(*(void *)(v0 + 24), 2LL);
    swift_retain();
    while (1)
    {
      unint64_t v4 = v2 & 0xC000000000000001LL;
      if ((v2 & 0xC000000000000001LL) != 0)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
      }

      else
      {
        uint64_t v5 = *(void *)(v2 + 32);
        swift_retain();
      }

      char v6 = specialized PhonePersonProperties<>.isUnnamedPhoneNumber.getter();
      swift_release(v5);
      if ((v6 & 1) == 0) {
        break;
      }
      if (v3 == 1) {
        goto LABEL_8;
      }
      if (v4)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v2);
      }

      else
      {
        uint64_t v8 = *(void *)(v2 + 40);
        swift_retain();
      }

      char v9 = specialized PhonePersonProperties<>.isUnnamedPhoneNumber.getter();
      swift_release(v8);
      if ((v9 & 1) == 0) {
        break;
      }
      if (v3 != 2)
      {
        uint64_t v10 = 6LL;
        while (1)
        {
          if (v4)
          {
            uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v2);
          }

          else
          {
            uint64_t v11 = *(void *)(v2 + 8 * v10);
            swift_retain();
          }

          uint64_t v12 = v10 - 3;
          if (__OFADD__(v10 - 4, 1LL)) {
            break;
          }
          char v7 = specialized PhonePersonProperties<>.isUnnamedPhoneNumber.getter();
          swift_release(v11);
          if ((v7 & 1) != 0)
          {
            ++v10;
            if (v12 != v3) {
              continue;
            }
          }

          goto LABEL_23;
        }

        __break(1u);
LABEL_25:
        if (v2 < 0) {
          uint64_t v13 = v2;
        }
        else {
          uint64_t v13 = v2 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain();
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (!v14) {
          goto LABEL_31;
        }
        swift_bridgeObjectRetain_n(v2, 2LL);
        swift_retain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v13);
        if (v3) {
          continue;
        }
      }

uint64_t specialized PhonePersonListProperties.hasHandleLabels.getter()
{
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain_n(*(void *)(v0 + 24), 2LL);
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    uint64_t v5 = 4LL;
    while (1)
    {
      if ((v3 & 0xC000000000000001LL) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3);
        uint64_t v7 = v6;
      }

      else
      {
        uint64_t v7 = *(void *)(v3 + 8 * v5);
        uint64_t v6 = swift_retain();
      }

      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1LL)) {
        break;
      }
      uint64_t v9 = DialogPerson.personHandle.getter(v6);
      if (!v9) {
        goto LABEL_17;
      }
      uint64_t v10 = v9;
      DialogPersonHandle.label.getter(v9);
      swift_release(v10);
      uint64_t v11 = type metadata accessor for SpeakableString(0LL);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v2, 1LL, v11);
      if ((_DWORD)EnumTagSinglePayload == 1)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v2,  &demangling cache variable for type metadata for SpeakableString?);
LABEL_17:
        swift_bridgeObjectRelease_n(v3, 2LL);
        swift_release(v7);
        return 0LL;
      }

      uint64_t v13 = SpeakableString.print.getter(EnumTagSinglePayload);
      unint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8LL))(v2, v11);
      if (!v15) {
        goto LABEL_17;
      }
      swift_release(v7);
      swift_bridgeObjectRelease();
      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000LL) == 0) {
        uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
      }
      if (!v16)
      {
        swift_bridgeObjectRelease_n(v3, 2LL);
        return 0LL;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_15;
      }
    }

    __break(1u);
LABEL_21:
    if (v3 < 0) {
      uint64_t v18 = v3;
    }
    else {
      uint64_t v18 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(v3, 2LL);
  }

uint64_t specialized PhonePersonListProperties.hasDifferentNameAndLabel.getter()
{
  uint64_t v25 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v25 - v2;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain_n(*(void *)(v0 + 24), 2LL);
  while (v5)
  {
    uint64_t v27 = v4;
    unint64_t v28 = v4 & 0xC000000000000001LL;
    uint64_t v6 = 4LL;
    uint64_t v26 = v5;
    while (1)
    {
      if (v28)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v4);
      }

      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * v6);
        swift_retain();
      }

      uint64_t v8 = v6 - 3;
      if (__OFADD__(v6 - 4, 1LL)) {
        break;
      }
      dispatch thunk of DialogPerson.toString.getter();
      uint64_t v9 = type metadata accessor for SpeakableString(0LL);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v3, 1LL, v9);
      if ((_DWORD)EnumTagSinglePayload == 1)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v3,  &demangling cache variable for type metadata for SpeakableString?);
        uint64_t countAndFlagsBits = 0LL;
        object = 0LL;
      }

      else
      {
        SpeakableString.print.getter(EnumTagSinglePayload);
        (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8LL))(v3, v9);
        Swift::String v14 = String.lowercased()();
        uint64_t countAndFlagsBits = v14._countAndFlagsBits;
        object = v14._object;
        uint64_t v11 = swift_bridgeObjectRelease();
      }

      uint64_t v15 = DialogPerson.personHandle.getter(v11);
      uint64_t v16 = (void *)v15;
      if (v15)
      {
        uint64_t v17 = (uint64_t)v25;
        DialogPersonHandle.label.getter(v15);
        swift_release(v16);
        uint64_t v18 = __swift_getEnumTagSinglePayload(v17, 1LL, v9);
        if ((_DWORD)v18 == 1)
        {
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v17,  &demangling cache variable for type metadata for SpeakableString?);
          uint64_t v19 = 0LL;
          uint64_t v16 = 0LL;
          if (!object) {
            goto LABEL_24;
          }
        }

        else
        {
          SpeakableString.print.getter(v18);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v17, v9);
          Swift::String v22 = String.lowercased()();
          uint64_t v19 = v22._countAndFlagsBits;
          uint64_t v16 = v22._object;
          swift_bridgeObjectRelease();
          if (!object)
          {
LABEL_24:
            if (!v16)
            {
              swift_bridgeObjectRelease_n(v27, 2LL);
              swift_release(v7);
              return 0LL;
            }

BOOL PhonePersonList.CodingKeys.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhonePersonList.CodingKeys.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhonePersonList.CodingKeys@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = PhonePersonList.CodingKeys.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhonePersonList.CodingKeys( void *a1@<X8>)
{
  *a1 = 1953720684LL;
  a1[1] = 0xE400000000000000LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhonePersonList.CodingKeys()
{
  return 1953720684LL;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhonePersonList.CodingKeys@<X0>( BOOL *a1@<X8>)
{
  uint64_t result = PhonePersonList.CodingKeys.init(stringValue:)();
  *a1 = result != 0;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhonePersonList.CodingKeys( _BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhonePersonList.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhonePersonList.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t EligibleAppFinder.deinit()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  return v0;
}

uint64_t PhonePersonList.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t PhonePersonList.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhonePersonList.CodingKeys>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for PhonePersonList.CodingKeys,  &type metadata for PhonePersonList.CodingKeys,  v10,  v8,  v9);
  uint64_t v16 = *(void *)(v2 + 24);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  uint64_t v12 = lazy protocol witness table accessor for type [PhonePerson] and conformance <A> [A]( &lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A],  &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  (uint64_t)&protocol conformance descriptor for DialogPerson,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v16, v13, v4, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t lazy protocol witness table accessor for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonList.CodingKeys,  &type metadata for PhonePersonList.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonList.CodingKeys,  &type metadata for PhonePersonList.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonList.CodingKeys,  &type metadata for PhonePersonList.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonList.CodingKeys,  &type metadata for PhonePersonList.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys);
  }

  return result;
}

uint64_t PhonePersonList.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, 32LL, 7LL);
  PhonePersonList.init(from:)(a1);
  return v3;
}

uint64_t PhonePersonList.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhonePersonList.CodingKeys>);
  __chkstk_darwin();
  *(void *)(v1 + 16) = 0LL;
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  unint64_t v8 = lazy protocol witness table accessor for type PhonePersonList.CodingKeys and conformance PhonePersonList.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for PhonePersonList.CodingKeys,  &type metadata for PhonePersonList.CodingKeys,  v8,  v6,  v7);
  if (v2)
  {

    uint64_t v12 = type metadata accessor for PhonePersonList();
    swift_deallocPartialClassInstance(v1, v12, 32LL, 7LL);
  }

  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    uint64_t v10 = lazy protocol witness table accessor for type [PhonePerson] and conformance <A> [A]( &lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A],  &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  (uint64_t)&protocol conformance descriptor for DialogPerson,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v9, v11, v5, v9, v10);
    OUTLINED_FUNCTION_8_4();
    *(void *)(v3 + 24) = v14;
  }

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

uint64_t lazy protocol witness table accessor for type [PhonePerson] and conformance <A> [A]( unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhonePerson]);
    lazy protocol witness table accessor for type PlayVoiceMailAction and conformance PlayVoiceMailAction( a2,  255LL,  type metadata accessor for PhonePerson,  a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

void base witness table accessor for Decodable in PhonePersonList(uint64_t a1, uint64_t a2)
{
}

void base witness table accessor for Encodable in PhonePersonList(uint64_t a1, uint64_t a2)
{
}

uint64_t protocol witness for static CATType.catTypeName.getter in conformance PhonePersonList()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t protocol witness for static CATType.isDialogType.getter in conformance PhonePersonList()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t protocol witness for CATType.mockGlobals.setter in conformance PhonePersonList()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120LL))();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhonePersonList( void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 128LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for PhonePersonListProperties.list.getter in conformance PhonePersonList()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 24LL));
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhonePersonList@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 168))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhonePersonList()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160LL))();
}

uint64_t sub_D1E60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 88LL))();
  *a2 = result;
  return result;
}

uint64_t sub_D1E94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 112LL))();
  *a2 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for PhonePersonList.CodingKeys(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_D1F08 + 4 * asc_323FC0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_D1F28 + 4 * byte_323FC5[v4]))();
  }
}

_BYTE *sub_D1F08(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_D1F28(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_D1F30(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_D1F38(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_D1F40(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_D1F48(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PhonePersonList.CodingKeys()
{
  return &type metadata for PhonePersonList.CodingKeys;
}

uint64_t specialized closure #1 in PhonePersonListProperties.allSameGivenName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SpeakableString?, SpeakableString?));
  __chkstk_darwin();
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = __chkstk_darwin();
  uint64_t v15 = (char *)&v27 - v14;
  DialogPerson.givenName.getter(v13);
  uint64_t v16 = *(void *)(a2 + 24);
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v26 = *(void *)(a2 + 24);
    }
    else {
      uint64_t v26 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v26);
  }

  else
  {
    uint64_t v17 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  if (v17 <= 0)
  {
    swift_bridgeObjectRelease();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1LL, 1LL, v3);
  }

  else
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v16 & 0xC000000000000001LL) == 0, v16);
    if ((v16 & 0xC000000000000001LL) != 0)
    {
      uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v16);
    }

    else
    {
      uint64_t v18 = *(void *)(v16 + 32);
      swift_retain();
    }

    uint64_t v19 = swift_bridgeObjectRelease();
    DialogPerson.givenName.getter(v19);
    swift_release(v18);
  }

  uint64_t v20 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of SpeakableString?((uint64_t)v15, (uint64_t)v8);
  outlined init with copy of SpeakableString?((uint64_t)v12, v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v3) == 1)
  {
    char v21 = &demangling cache variable for type metadata for SpeakableString?;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v15,  &demangling cache variable for type metadata for SpeakableString?);
    if (__swift_getEnumTagSinglePayload(v20, 1LL, v3) == 1)
    {
      char v22 = -1;
    }

    else
    {
      char v21 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
      char v22 = 0;
    }
  }

  else
  {
    outlined init with copy of SpeakableString?((uint64_t)v8, (uint64_t)v10);
    if (__swift_getEnumTagSinglePayload(v20, 1LL, v3) == 1)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v15,  &demangling cache variable for type metadata for SpeakableString?);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v3);
      char v22 = 0;
      char v21 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
    }

    else
    {
      uint64_t v23 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v5, v20, v3);
      lazy protocol witness table accessor for type PlayVoiceMailAction and conformance PlayVoiceMailAction( (unint64_t *)&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v3);
      uint64_t v24 = *(void (**)(char *, uint64_t))(v23 + 8);
      v24(v5, v3);
      char v21 = &demangling cache variable for type metadata for SpeakableString?;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v15,  &demangling cache variable for type metadata for SpeakableString?);
      v24(v10, v3);
    }
  }

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v8,  v21);
  return v22 & 1;
}

uint64_t specialized closure #1 in PhonePersonListProperties.allSameGivenName.getter( uint64_t *a1, uint64_t *a2)
{
  return specialized closure #1 in PhonePersonListProperties.allSameGivenName.getter(*a1, *a2) & 1;
}

uint64_t partial apply for specialized closure #1 in PhonePersonListProperties.allSameGivenName.getter( uint64_t *a1)
{
  return specialized closure #1 in PhonePersonListProperties.allSameGivenName.getter(a1, *(uint64_t **)(v1 + 16)) & 1;
}

PhoneCallFlowDelegatePlugin::AnswerCallCATs::Properties_optional __swiftcall AnswerCallCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AnswerCallCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_AnswerCallCATs_Properties_offerFollowUpIntent;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_AnswerCallCATs_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t AnswerCallCATs.Properties.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD00000000000001ELL;
  }
  else {
    return 0xD000000000000020LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnswerCallCATs.Properties( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AnswerCallCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnswerCallCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerCallCATs.Properties(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnswerCallCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerCallCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnswerCallCATs::Properties_optional *a2@<X8>)
{
  result.value = AnswerCallCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnswerCallCATs.Properties@<X0>( unint64_t *a1@<X8>)
{
  unint64_t result = AnswerCallCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnswerCallCATs.intentHandledResponse(incomingCallConcept:completion:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  *(void *)(v3 + 32) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 72) = v4;
  swift_retain();
  OUTLINED_FUNCTION_23_19(0xD000000000000020LL);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t AnswerCallCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnswerCallCATs.intentHandledResponse(incomingCallConcept:));
}

uint64_t AnswerCallCATs.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v2 = v1[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[5] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 72) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[6] = v6;
  *uint64_t v6 = v1;
  v6[1] = PhoneCallCommonCATs.orList(items:);
  return v8(v1[2], 0xD000000000000020LL, 0x8000000000342A40LL, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t);
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 72) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *uint64_t v6 = v1;
  v6[1] = UnsupportedFlowCATs.unsupportedOnDeviceType(device:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD000000000000020LL);
  return v9(v7);
}

uint64_t AnswerCallCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnswerCallCATs.intentHandledResponse(incomingCallConcept:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  *(void *)(v3 + 32) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 72) = v4;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000020LL, 0x8000000000342A40LL, v3);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t AnswerCallCATs.offerFollowUpIntent(followUpOfferType:completion:)(uint64_t a1)
{
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 32) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1LL, v8);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_1(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 72) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  OUTLINED_FUNCTION_23_19(0xD00000000000001ELL);
  return swift_bridgeObjectRelease();
}

uint64_t AnswerCallCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AnswerCallCATs.offerFollowUpIntent(followUpOfferType:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  v0[6] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  *(void *)(v2 + 32) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = AnswerCallCATs.offerFollowUpIntent(followUpOfferType:);
  return v9(v0[2], 0xD00000000000001ELL, 0x8000000000342A70LL, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v5 = *v1;
  uint64_t v2 = v5;
  OUTLINED_FUNCTION_39_0(&v5);
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_16_1((uint64_t (*)(void))v1[1]);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  *(void *)(v2 + 32) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v7;
  *uint64_t v7 = v0;
  v7[1] = UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:);
  uint64_t v8 = OUTLINED_FUNCTION_21_19(0xD00000000000001ELL);
  return v10(v8);
}

uint64_t AnswerCallCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *boxed_opaque_existential_1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 32) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v4, 1LL, v8) == 1)
  {
    outlined destroy of SpeakableString?(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 72) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000001ELL, 0x8000000000342A70LL, v6);
  return swift_bridgeObjectRelease();
}

uint64_t AnnounceGroupFaceTimeInviteCATs.__allocating_init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AnnounceGroupFaceTimeInviteCATs.init(templateDir:options:globals:)(a1, a2, a3);
}

uint64_t AnnounceGroupFaceTimeInviteCATs.init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  outlined init with copy of SpeakableString?( a1,  v12 - v11,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  uint64_t v14 = CATWrapper.init(templateDir:options:globals:)(v13, v10, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  outlined destroy of SpeakableString?(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v14;
}

unint64_t lazy protocol witness table accessor for type AnswerCallCATs.Properties and conformance AnswerCallCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATs.Properties and conformance AnswerCallCATs.Properties;
  if (!lazy protocol witness table cache variable for type AnswerCallCATs.Properties and conformance AnswerCallCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnswerCallCATs.Properties,  &type metadata for AnswerCallCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATs.Properties and conformance AnswerCallCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnswerCallCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnswerCallCATs;
  if (!type metadata singleton initialization cache for AnswerCallCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnswerCallCATs);
  }
  return result;
}

uint64_t type metadata completion function for AnswerCallCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnswerCallCATs);
}

uint64_t ObjC metadata update function for AnswerCallCATs()
{
  return type metadata accessor for AnswerCallCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for AnswerCallCATs.Properties(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_D2F14 + 4 * byte_324245[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_D2F48 + 4 * asc_324240[v4]))();
}

uint64_t sub_D2F48(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D2F50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xD2F58LL);
  }
  return result;
}

uint64_t sub_D2F64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xD2F6CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_D2F70(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D2F78(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnswerCallCATs.Properties()
{
  return &type metadata for AnswerCallCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_1_41(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t OUTLINED_FUNCTION_23_19(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1);
}

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::Properties_optional __swiftcall AnnounceIncomingCallCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of AnnounceIncomingCallCATsSimple.Properties.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

unint64_t AnnounceIncomingCallCATs.Properties.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000028LL;
  }
  else {
    return 0xD00000000000002ALL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceIncomingCallCATsSimple.Properties( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceIncomingCallCATsSimple.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceIncomingCallCATsSimple.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceIncomingCallCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceIncomingCallCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = AnnounceIncomingCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceIncomingCallCATsSimple.Properties( unint64_t *a1@<X8>)
{
  *a1 = AnnounceIncomingCallCATs.Properties.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t AnnounceIncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceIncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:));
}

uint64_t AnnounceIncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 72) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *uint64_t v6 = v1;
  v6[1] = AnnounceIncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD00000000000002ALL);
  return v9(v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_3_5();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_0_39(v0, *(uint64_t (**)(void))(v2 + 8));
  }

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_D3240 + 4 * byte_324320[a1]))( 0x656D695465636146LL,  0xED00006F69647541LL);
}

  ;
}

uint64_t sub_D3254()
{
  return 0x636972656E6547LL;
}

uint64_t sub_D326C()
{
  return 0x656E6F6850LL;
}

uint64_t sub_D3280()
{
  return 0x7261506472696854LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds()
{
}

void protocol witness for Hashable.hash(into:) in conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds( uint64_t *a1@<X8>)
{
  *a1 = AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t AnnounceIncomingCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceIncomingCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:));
}

uint64_t AnnounceIncomingCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)()
{
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 72) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  unint64_t v7 = lazy protocol witness table accessor for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds();
  *uint64_t v6 = v1;
  v6[1] = AnnounceIncomingCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:);
  return v9( 0xD00000000000002ALL,  0x8000000000342A90LL,  v4,  &type metadata for AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds,  v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_3_5();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_0_39(v0, *(uint64_t (**)(void))(v2 + 8));
  }

unint64_t lazy protocol witness table accessor for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds and conformance AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

uint64_t AnnounceIncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AnnounceIncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_3_22(v6);
  if (v7)
  {
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  *uint64_t v9 = v0;
  v9[1] = AnnounceIncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:);
  uint64_t v10 = OUTLINED_FUNCTION_21_19(v2 + 23);
  return v12(v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_0();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_0_39(v0, *(uint64_t (**)(void))(v2 + 8));
  }

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::OfferFollowUpIntentDialogIds_optional __swiftcall AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

unint64_t SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds.rawValue.getter( unsigned __int8 a1)
{
  return ((unint64_t)a1 << 48) + 0x31676F6C616964LL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::OfferFollowUpIntentDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATsSimple::OfferFollowUpIntentDialogIds_optional *a2@<X8>)
{
  result.value = AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds( unint64_t *a1@<X8>)
{
  *a1 = SearchCallHistoryCATsSimple.ReadSingleVoiceMailRecordDialogIds.rawValue.getter(*v1);
  a1[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t AnnounceIncomingCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AnnounceIncomingCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_3_22(v6);
  if (v7)
  {
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  unint64_t v10 = lazy protocol witness table accessor for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds();
  *uint64_t v9 = v0;
  v9[1] = AnnounceIncomingCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  return v12( v2 + 23,  0x8000000000342AC0LL,  v4,  &type metadata for AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds,  v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_0();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_0_39(v0, *(uint64_t (**)(void))(v2 + 8));
  }

unint64_t lazy protocol witness table accessor for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds,  &type metadata for AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds,  &type metadata for AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type AnnounceIncomingCallCATsSimple.Properties and conformance AnnounceIncomingCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.Properties and conformance AnnounceIncomingCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.Properties and conformance AnnounceIncomingCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceIncomingCallCATsSimple.Properties,  &type metadata for AnnounceIncomingCallCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceIncomingCallCATsSimple.Properties and conformance AnnounceIncomingCallCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceIncomingCallCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceIncomingCallCATsSimple;
  if (!type metadata singleton initialization cache for AnnounceIncomingCallCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceIncomingCallCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for AnnounceIncomingCallCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnnounceIncomingCallCATsSimple);
}

uint64_t ObjC metadata update function for AnnounceIncomingCallCATsSimple()
{
  return type metadata accessor for AnnounceIncomingCallCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for AnnounceIncomingCallCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_D3A74 + 4 * byte_32432C[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_D3AA8 + 4 * byte_324327[v4]))();
}

uint64_t sub_D3AA8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D3AB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xD3AB8LL);
  }
  return result;
}

uint64_t sub_D3AC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xD3ACCLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_D3AD0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D3AD8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnnounceIncomingCallCATsSimple.Properties()
{
}

uint64_t storeEnumTagSinglePayload for AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_D3B3C + 4 * byte_324336[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_D3B70 + 4 * byte_324331[v4]))();
}

uint64_t sub_D3B70(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D3B78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xD3B80LL);
  }
  return result;
}

uint64_t sub_D3B8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xD3B94LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_D3B98(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D3BA0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_D3C04 + 4 * byte_324340[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_D3C38 + 4 * byte_32433B[v4]))();
}

uint64_t sub_D3C38(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D3C40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xD3C48LL);
  }
  return result;
}

uint64_t sub_D3C54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xD3C5CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_D3C60(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D3C68(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnnounceIncomingCallCATsSimple.OfferFollowUpIntentDialogIds()
{
}

uint64_t protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnnounceIncomingCallCATsSimple()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(**v0 + class metadata base offset for AnnounceIncomingCallCATsSimple));
  *(void *)(v1 + 16) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_28_1(v2, (uint64_t)SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels());
  return OUTLINED_FUNCTION_0_39(v3, v4);
}

uint64_t protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance AnnounceIncomingCallCATsSimple()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for AnnounceIncomingCallCATsSimple
                                                 + **v0
                                                 + 16));
  *(void *)(v1 + 16) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_28_1(v2, (uint64_t)SuggestionsCATsSimple.phoneCall_StartGFTCall());
  return OUTLINED_FUNCTION_0_39(v3, v4);
}

uint64_t OUTLINED_FUNCTION_0_39(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t static Transformer<>.transformer(sharedGlobals:previousIntent:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallRecordType(0LL);
  return Transformer.init(transform:)( closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:),  0LL,  v0);
}

{
  uint64_t v0;
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallDestinationType(0LL);
  return Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:),  0LL,  v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  uint64_t v0 = OUTLINED_FUNCTION_32_43();
  return OUTLINED_FUNCTION_26_51(v0, v1, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INAudioCallTTYType(0LL);
  uint64_t v0 = OUTLINED_FUNCTION_32_43();
  return OUTLINED_FUNCTION_26_51(v0, v1, v2);
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:)( void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  PhoneCallNLIntent.getCallRecordType()(v3, v4);
  *a2 = v5;
}

void specialized ContactNeedsValueGuardFlow.init(flow:state:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t *a4)
{
  *(void *)(v4 + *(void *)(*(void *)v4 + 104LL)) = a1;
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( a2,  v4 + *(void *)(*(void *)v4 + 96LL),  a4);
  outlined init with take of AppSelectionSignalComponent(a3, v4 + *(void *)(*(void *)v4 + 112LL));
  OUTLINED_FUNCTION_2();
}

void specialized ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)()
{
  unint64_t v29 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  uint64_t v14 = OUTLINED_FUNCTION_99_2();
  outlined init with copy of SharedGlobalsProviding(v14, v15);
  OUTLINED_FUNCTION_132(v16, (uint64_t)(v13 + 5));
  outlined init with copy of SharedGlobalsProviding((uint64_t)v9, (uint64_t)(v13 + 10));
  OUTLINED_FUNCTION_129_1(v17, (uint64_t)(v13 + 15));
  v13[20] = v5;
  v13[21] = v3;
  OUTLINED_FUNCTION_29_0(v18, (uint64_t)v31);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v9, (uint64_t)v30);
  uint64_t v19 = OUTLINED_FUNCTION_69_1();
  uint64_t v20 = OUTLINED_FUNCTION_8_2(v19, 16LL);
  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_44_1();
  uint64_t v21 = OUTLINED_FUNCTION_59();
  static CATOption.defaultMode.getter(v21);
  uint64_t v22 = OUTLINED_FUNCTION_18_26(v0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(v29);
  uint64_t v24 = OUTLINED_FUNCTION_15_2(v23);
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000010LL,  0x8000000000342230LL,  (uint64_t)v31,  v5,  v3,  v20,  (uint64_t)v30,  v22,  v24,  v27,  v28,  (uint64_t)v29,  v30[0],  v30[1],  v30[2],  v30[3],  v30[4],  v31[0],  v31[1],  v31[2],  (void *)v31[3]);
  uint64_t v26 = v25;
  __swift_destroy_boxed_opaque_existential_1(v7);
  __swift_destroy_boxed_opaque_existential_1(v9);
  __swift_destroy_boxed_opaque_existential_1(v11);
  OUTLINED_FUNCTION_90();
  v13[22] = v26;
  OUTLINED_FUNCTION_7_5();
}

void static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v64 = v6;
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v63 = *(void *)(v7 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v62 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_5();
  uint64_t v10 = OUTLINED_FUNCTION_49( v9,  (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent,  &OBJC_CLASS___INAddCallParticipantIntent_ptr);
  uint64_t v11 = OUTLINED_FUNCTION_49( v10,  &lazy cache variable for type metadata for INAddCallParticipantIntentResponse,  &OBJC_CLASS___INAddCallParticipantIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v10, v11);
  static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v5, v10, v11);
  OUTLINED_FUNCTION_154_0();
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v12, v13, v14);
  OUTLINED_FUNCTION_26_22();
  type metadata accessor for AddCallParticipantCATsSimple(0LL);
  OUTLINED_FUNCTION_45_7();
  uint64_t v15 = OUTLINED_FUNCTION_9_36(v1);
  uint64_t v16 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
  uint64_t v17 = OUTLINED_FUNCTION_8_2(v16, 64LL);
  OUTLINED_FUNCTION_62_4(v17);
  *(void *)(v17 + 56) = v15;
  v65[0] = v17;
  OUTLINED_FUNCTION_26_22();
  uint64_t v18 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FC838, 64LL);
  *(void *)(v18 + 16) = v5;
  OUTLINED_FUNCTION_150_0(v18);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AddCallParticipantHandleIntentFlowStrategy and conformance AddCallParticipantHandleIntentFlowStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for AddCallParticipantHandleIntentFlowStrategy);
  uint64_t v20 = v19;
  OUTLINED_FUNCTION_3_8();
  static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:responseFlowProducer:)( v65,  &async function pointer to partial apply for closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:),  v18,  v16,  v20);
  OUTLINED_FUNCTION_16_3();
  swift_release(v65[0]);
  OUTLINED_FUNCTION_175_1();
  OUTLINED_FUNCTION_154_0();
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter(v21, v22, v23);
  type metadata accessor for ParticipantOutputProvider();
  OUTLINED_FUNCTION_26_22();
  type metadata accessor for AddCallParticipantCATs(0LL);
  uint64_t v24 = OUTLINED_FUNCTION_3_8();
  static CATOption.defaultMode.getter(v24);
  OUTLINED_FUNCTION_18_26(v1);
  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_45_7();
  OUTLINED_FUNCTION_18_26(v1);
  ParticipantOutputProvider.__allocating_init(sharedGlobals:app:cats:startCallCats:)();
  uint64_t v26 = v25;
  OUTLINED_FUNCTION_166();
  v66[0] = v26;
  OUTLINED_FUNCTION_44_1();
  uint64_t v27 = OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type ContactNeedsValueFlowStrategy<ParticipantOutputProvider> and conformance ContactNeedsValueFlowStrategy<A>);
  static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)(v66, v27, v28);
  OUTLINED_FUNCTION_9_19((uint64_t)v66);
  OUTLINED_FUNCTION_154_0();
  RCHChildFlowProducersAsync.needsValueFlowProducer.setter(v29, v30, v31);
  OUTLINED_FUNCTION_166();
  v66[0] = v26;
  OUTLINED_FUNCTION_44_1();
  uint64_t v32 = OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type ContactNeedsConfirmationFlowStrategy<ParticipantOutputProvider> and conformance ContactNeedsConfirmationFlowStrategy<A>);
  static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(v66, v32, v33);
  OUTLINED_FUNCTION_9_19((uint64_t)v66);
  uint64_t v34 = OUTLINED_FUNCTION_98_0();
  uint64_t v35 = v0;
  RCHChildFlowProducersAsync.needsConfirmationFlowProducer.setter(v34, v36, v7);
  OUTLINED_FUNCTION_26_22();
  uint64_t v37 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FC860, 64LL);
  OUTLINED_FUNCTION_62_4(v37);
  *(void *)(v37 + 56) = v26;
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_154_0();
  RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter(v38, v39, v40);
  OUTLINED_FUNCTION_26_22();
  uint64_t v41 = OUTLINED_FUNCTION_44_1();
  v66[0] = specialized ContactNeedsDisambiguationFlowStrategy.__allocating_init(promptProvider:sharedGlobals:)(v41, v66);
  uint64_t v42 = OUTLINED_FUNCTION_172_0();
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactNeedsDisambiguationFlowStrategy<ParticipantOutputProvider> and conformance ContactNeedsDisambiguationFlowStrategy<A>,  &demangling cache variable for type metadata for ContactNeedsDisambiguationFlowStrategy<ParticipantOutputProvider>);
  static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(v66, v42, v43);
  OUTLINED_FUNCTION_38_1();
  uint64_t v44 = OUTLINED_FUNCTION_98_0();
  uint64_t v45 = v7;
  uint64_t v59 = v35;
  RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter(v44, v46, v7);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v47 = OUTLINED_FUNCTION_98_0();
  v48(v47);
  uint64_t v49 = v68;
  uint64_t v61 = v67;
  v60 = __swift_project_boxed_opaque_existential_1(v66, v67);
  OUTLINED_FUNCTION_33_20((uint64_t)v60, (uint64_t)v65);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneIntentRCHFlowStrategy<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v51 = OUTLINED_FUNCTION_8_2(v50, 64LL);
  OUTLINED_FUNCTION_87_4(v51);
  *(void *)(v51 + 56) = v5;
  v65[0] = v51;
  uint64_t v52 = v35;
  uint64_t v53 = v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v62, v52, v45);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  OUTLINED_FUNCTION_15_2(v54);
  uint64_t v55 = v5;
  swift_retain();
  uint64_t v56 = RCHChildFlowFactory.init(producers:)(v62);
  v57 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneIntentRCHFlowStrategy<INAddCallParticipantIntent, INAddCallParticipantIntentResponse> and conformance PhoneIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneIntentRCHFlowStrategy<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  v57(v65, v56, v55, v64, v50, v58, v61, v49);
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_31_2();
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v59, v53);
  __swift_destroy_boxed_opaque_existential_1(v66);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

void *specialized CallingIntentContinueInAppFlow.init(factory:rchRecord:sharedGlobals:deviceStateConnection:)( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  void v4[2] = a1;
  uint64_t v8 = (char *)v4 + *(void *)(*v4 + 112LL);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))(v8, a2, v9);
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)v4 + *(void *)(*v4 + 120LL));
  *(void *)((char *)v4 + *(void *)(*v4 + 128LL)) = a4;
  return v4;
}

uint64_t specialized closure #1 in static CallingIntentContinueInAppFlow.makeProducer(sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = objc_allocWithZone(&OBJC_CLASS___AFDeviceStateConnection);
  OUTLINED_FUNCTION_3_8();
  id v9 = [v8 init];
  uint64_t v10 = OUTLINED_FUNCTION_172_0();
  OUTLINED_FUNCTION_15_2(v10);
  *(void *)&v13[0] = specialized CallingIntentContinueInAppFlow.init(factory:rchRecord:sharedGlobals:deviceStateConnection:)( a1,  v3,  v13,  (uint64_t)v9);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentContinueInAppFlow<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentContinueInAppFlow<A, B>,  &demangling cache variable for type metadata for CallingIntentContinueInAppFlow<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v11 = OUTLINED_FUNCTION_97_3();
  OUTLINED_FUNCTION_22();
  return v11;
}

void static PhoneCallFlowFactoryProtocol.makeIncomingCallFlow<A, B>(strategy:intent:app:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v15[0] = a6;
  v15[1] = a7;
  v15[2] = a9;
  v15[3] = a10;
  uint64_t v12 = type metadata accessor for IncomingCallFlow(0LL, (uint64_t)v15);
  OUTLINED_FUNCTION_129_1(v12, (uint64_t)v15);
  OUTLINED_FUNCTION_132(v13, (uint64_t)v14);
  OUTLINED_FUNCTION_95_1();
  IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)();
}

void static PhoneCallFlowFactory.makeMainFlow(parse:sharedGlobals:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v4;
  uint64_t v37 = type metadata accessor for MainFlow(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v9 = (char *)&v36 - v8;
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  uint64_t v10 = type metadata accessor for Parse(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = OUTLINED_FUNCTION_8_2(v12, 48LL);
  *(_OWORD *)(v13 + 16) = xmmword_31FBC0;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  uint64_t v15 = v14(v1, v5, v10);
  OUTLINED_FUNCTION_132(v15, (uint64_t)&v39);
  uint64_t v16 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
  uint64_t v18 = type metadata accessor for RestrictionCheckGuardFlow(0LL);
  OUTLINED_FUNCTION_15_2(v18);
  *(void *)&__int128 v39 = RestrictionCheckGuardFlow.init(parse:sharedGlobals:phoneCallCommonCATsSimple:)(v1, &v39, v17);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type RestrictionCheckGuardFlow and conformance RestrictionCheckGuardFlow,  type metadata accessor for RestrictionCheckGuardFlow);
  uint64_t v19 = Flow.eraseToAnyValueFlow()(v18);
  OUTLINED_FUNCTION_164_0();
  *(void *)(v13 + 32) = v19;
  uint64_t v20 = v3[3];
  uint64_t v21 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v20);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v21 + 104))(&v39, v20, v21);
  uint64_t v22 = v40;
  uint64_t v23 = v41;
  __swift_project_boxed_opaque_existential_1(&v39, v40);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v23);
  *(void *)(v13 + 40) = v24;
  uint64_t v38 = v13;
  specialized Array._endMutation()(v24, v25, v26, v27);
  uint64_t v28 = v38;
  __swift_destroy_boxed_opaque_existential_1(&v39);
  uint64_t v29 = type metadata accessor for GuardFlow(0LL);
  OUTLINED_FUNCTION_15_2(v29);
  GuardFlow.init(preconditionFlows:)(v28);
  uint64_t v30 = v14((uint64_t)v9, v36, v10);
  OUTLINED_FUNCTION_132(v30, (uint64_t)&v9[*(int *)(v37 + 20)]);
  uint64_t v31 = OUTLINED_FUNCTION_99_2();
  outlined init with copy of MainFlow(v31, v32);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SentinelConditionalFlow<()>);
  OUTLINED_FUNCTION_8_2(v33, 24LL);
  uint64_t v34 = OUTLINED_FUNCTION_44_1();
  uint64_t v35 = specialized SentinelConditionalFlow.init<A, B>(preconditionFlow:executableFlow:)(v34, (uint64_t)v7);
  outlined destroy of MainFlow((uint64_t)v9);
  *(void *)&__int128 v39 = v35;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type SentinelConditionalFlow<()> and conformance SentinelConditionalFlow<A>,  &demangling cache variable for type metadata for SentinelConditionalFlow<()>);
  OUTLINED_FUNCTION_97_3();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

void static PhoneCallFlowFactory.makeRCHFlow(input:app:intent:sharedGlobals:)(uint64_t a1)
{
  if (v2)
  {
    UsoEntity_common_Person.usoPerson.getter();
    dispatch thunk of AnyFlow.on(input:)(a1);
    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_2();
}

void static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)()
{
  uint64_t v132 = v3;
  v133 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v105 = *(void *)(v7 - 8);
  uint64_t v106 = v7;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v107 = v8;
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v113 = *(void *)(v103 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v104 = v9;
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v108 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  uint64_t v122 = *(void *)(v16 - 8);
  uint64_t v124 = v16;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v127 = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v119 = v18;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v121 = v19;
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v134 = v20;
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v129 = v21;
  uint64_t v22 = objc_opt_self(&OBJC_CLASS___INStartAudioCallIntent);
  uint64_t v23 = swift_dynamicCastObjCClass(v6, v22);
  if (v23)
  {
    uint64_t v112 = v23;
    OUTLINED_FUNCTION_20_19(v23, (uint64_t)v137);
    uint64_t v24 = one-time initialization token for instance;
    id v114 = v6;
    if (v24 != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    uint64_t v25 = (void *)static BiomeEventSender.instance;
    uint64_t v26 = type metadata accessor for StartAudioCallRCHFlowDelegate(0LL);
    uint64_t v27 = OUTLINED_FUNCTION_15_2(v26);
    id v28 = v25;
    OUTLINED_FUNCTION_59();
    uint64_t v109 = specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( v137,  v132,  (uint64_t)v28,  v27,  &direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals,  &direct field offset for StartAudioCallRCHFlowDelegate.appResolved,  &direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender);
    OUTLINED_FUNCTION_20_19(v109, (uint64_t)v137);
    OUTLINED_FUNCTION_78_5();
    OUTLINED_FUNCTION_110_3();
    uint64_t v29 = OUTLINED_FUNCTION_9_36(v129);
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_110_3();
    uint64_t v30 = OUTLINED_FUNCTION_9_36(v129);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
    uint64_t v32 = (void *)OUTLINED_FUNCTION_8_2(v31, 80LL);
    OUTLINED_FUNCTION_86_4((uint64_t)v32);
    v32[7] = v132;
    v32[8] = v29;
    v32[9] = v30;
    OUTLINED_FUNCTION_59();
    specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)();
    uint64_t v33 = v133[3];
    uint64_t v34 = v133[4];
    OUTLINED_FUNCTION_163_0();
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 104))(v137, v33, v34);
    uint64_t v35 = (uint64_t)v138;
    uint64_t v36 = v139;
    __swift_project_boxed_opaque_existential_1(v137, (uint64_t)v138);
    v136[0] = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 16))(v121, v134 + *(int *)(v116 + 36), v119);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v127, v134, v124);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
    OUTLINED_FUNCTION_15_2(v37);
    uint64_t v38 = RCHChildFlowFactory.init(producers:withFallbacks:)(v121, v127);
    __int128 v39 = (uint64_t (*)(void, void, void, void, void, void, void, void))v36[1];
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
    uint64_t v41 = v39(v136, v38, v132, v112, v31, v40, v35, v36);
    OUTLINED_FUNCTION_31_2();
    v136[0] = v41;
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartAudioCallIntent, INStartAudioCallIntentResponse>> and conformance AnyValueFlow<A>);
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_16_3();

    swift_release(v109);
    OUTLINED_FUNCTION_77_0();
    uint64_t v42 = &demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>;
    uint64_t v43 = v134;
    goto LABEL_9;
  }

  uint64_t v118 = v14;
  uint64_t v120 = v13;
  uint64_t v123 = v12;
  uint64_t v125 = v11;
  uint64_t v128 = v2;
  uint64_t v44 = v113;
  uint64_t v45 = objc_opt_self(&OBJC_CLASS___INStartVideoCallIntent);
  uint64_t v46 = swift_dynamicCastObjCClass(v6, v45);
  if (v46)
  {
    OUTLINED_FUNCTION_20_19(v46, (uint64_t)v137);
    uint64_t v47 = one-time initialization token for instance;
    id v115 = v6;
    if (v47 != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    v48 = (void *)static BiomeEventSender.instance;
    uint64_t v49 = type metadata accessor for StartVideoCallRCHFlowDelegate(0LL);
    uint64_t v50 = OUTLINED_FUNCTION_15_2(v49);
    OUTLINED_FUNCTION_29_3();
    uint64_t v110 = specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( v137,  v132,  (uint64_t)v48,  v50,  &direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals,  &direct field offset for StartVideoCallRCHFlowDelegate.appResolved,  &direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender);
    OUTLINED_FUNCTION_20_19(v110, (uint64_t)v137);
    OUTLINED_FUNCTION_78_5();
    OUTLINED_FUNCTION_126_1();
    uint64_t v51 = OUTLINED_FUNCTION_9_36(v44);
    uint64_t v52 = OUTLINED_FUNCTION_68_0();
    static CATOption.defaultMode.getter(v52);
    uint64_t v53 = OUTLINED_FUNCTION_9_36(v44);
    uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
    uint64_t v54 = (void *)OUTLINED_FUNCTION_8_2(v130, 80LL);
    OUTLINED_FUNCTION_86_4((uint64_t)v54);
    v54[7] = v132;
    v54[8] = v51;
    v54[9] = v53;
    OUTLINED_FUNCTION_29_3();
    specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)();
    OUTLINED_FUNCTION_76_6(v133);
    uint64_t v55 = v139;
    OUTLINED_FUNCTION_149_1();
    v136[0] = v54;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v1, v0 + *(int *)(v15 + 36), v120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v128, v0, v125);
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
    OUTLINED_FUNCTION_15_2(v56);
    RCHChildFlowFactory.init(producers:withFallbacks:)(v1, v128);
    v57 = (uint64_t (*)(uint64_t))v55[1];
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
    uint64_t v58 = OUTLINED_FUNCTION_145_1();
    uint64_t v59 = v57(v58);
    OUTLINED_FUNCTION_50_2();
    v136[0] = v59;
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartVideoCallIntent, INStartVideoCallIntentResponse>> and conformance AnyValueFlow<A>);
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_16_3();

    swift_release(v110);
    OUTLINED_FUNCTION_77_0();
    uint64_t v42 = &demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>;
    uint64_t v43 = v0;
    goto LABEL_9;
  }

  uint64_t v60 = objc_opt_self(&OBJC_CLASS___INAnswerCallIntent);
  if (OUTLINED_FUNCTION_33_4(v60))
  {
    uint64_t v61 = v133[3];
    uint64_t v62 = v133[4];
    uint64_t v63 = OUTLINED_FUNCTION_163_0();
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
    id v65 = v6;
    v64(v61, v62);
    type metadata accessor for AnswerCallCATsSimple(0LL);
    OUTLINED_FUNCTION_126_1();
    uint64_t v66 = OUTLINED_FUNCTION_9_36(v61);
    v140 = &type metadata for AudioSessionManager;
    v141 = &protocol witness table for AudioSessionManager;
    v142 = &type metadata for EntitlementChecker;
    v143 = &protocol witness table for EntitlementChecker;
    v138 = v63;
    v139 = &protocol witness table for AnswerCallCATsSimple;
    OUTLINED_FUNCTION_82_4(v66);
    specialized static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)();
    OUTLINED_FUNCTION_29_0(v67, (uint64_t)v144);
    outlined init with copy of AnswerCallOutputStrategy((uint64_t)v137, (uint64_t)v136);
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_175_1();
    specialized IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)();
    v136[0] = v68;
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance PhoneFlow<A, B>);
    OUTLINED_FUNCTION_97_3();

    outlined destroy of AnswerCallOutputStrategy((uint64_t)v137);
LABEL_15:
    OUTLINED_FUNCTION_31_2();
    goto LABEL_10;
  }

  uint64_t v69 = objc_opt_self(&OBJC_CLASS___INHangUpCallIntent);
  uint64_t v70 = OUTLINED_FUNCTION_33_4(v69);
  if (v70)
  {
    OUTLINED_FUNCTION_20_19(v70, (uint64_t)v137);
    uint64_t v71 = type metadata accessor for HangUpCallRCHFlowDelegate(0LL);
    uint64_t v72 = OUTLINED_FUNCTION_15_2(v71);
    outlined init with copy of SharedGlobalsProviding( (uint64_t)v137,  v72 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals);
    id v73 = v6;
    BaseRCHFlowDelegate.init()();
    __swift_destroy_boxed_opaque_existential_1(v137);
    static PhoneCallFlowFactory.makeHangUpCallRCHFlow(delegate:intent:app:sharedGlobals:)();
    v137[0] = v74;
    uint64_t v75 = OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20((unint64_t *)&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>);
    Flow.eraseToAnyFlow()(v75);
    OUTLINED_FUNCTION_16_3();

    goto LABEL_15;
  }

  uint64_t v76 = objc_opt_self(&OBJC_CLASS___INIdentifyIncomingCallerIntent);
  if (OUTLINED_FUNCTION_33_4(v76))
  {
    uint64_t v77 = type metadata accessor for IdentifyIncomingCallerCATsSimple(0LL);
    id v78 = v6;
    static CATOption.defaultMode.getter(v78);
    uint64_t v79 = CATWrapperSimple.__allocating_init(options:globals:)(v129, 0LL);
    v138 = (void *)v77;
    v139 = &protocol witness table for IdentifyIncomingCallerCATsSimple;
    uint64_t v80 = OUTLINED_FUNCTION_82_4(v79);
    uint64_t v83 = specialized static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)( v80,  v81,  v82,  v133);
    OUTLINED_FUNCTION_20_19(v83, (uint64_t)v144);
    outlined init with copy of IdentifyIncomingCallerOutputStrategy((uint64_t)v137, (uint64_t)v136);
    OUTLINED_FUNCTION_29_3();
    uint64_t v84 = OUTLINED_FUNCTION_175_1();
    uint64_t v88 = specialized IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)(v84, v85, v86, v87);
    outlined destroy of IdentifyIncomingCallerOutputStrategy((uint64_t)v137);
    v137[0] = v88;
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneFlow<A, B>);
    OUTLINED_FUNCTION_97_3();
    OUTLINED_FUNCTION_31_2();

    goto LABEL_10;
  }

  uint64_t v89 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
  if (OUTLINED_FUNCTION_33_4(v89))
  {
    uint64_t v90 = type metadata accessor for StartCallRCHFlowDelegate(0LL);
    OUTLINED_FUNCTION_20_19(v90, (uint64_t)v137);
    id v126 = v6;
    OUTLINED_FUNCTION_29_3();
    uint64_t v135 = StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)(v137, v132);
    OUTLINED_FUNCTION_20_19(v135, (uint64_t)v137);
    OUTLINED_FUNCTION_78_5();
    OUTLINED_FUNCTION_110_3();
    uint64_t v91 = OUTLINED_FUNCTION_9_36(v129);
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_110_3();
    uint64_t v92 = OUTLINED_FUNCTION_9_36(v129);
    uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
    v93 = (void *)OUTLINED_FUNCTION_8_2(v131, 80LL);
    OUTLINED_FUNCTION_86_4((uint64_t)v93);
    v93[7] = v132;
    v93[8] = v91;
    v93[9] = v92;
    OUTLINED_FUNCTION_29_3();
    static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)();
    OUTLINED_FUNCTION_76_6(v133);
    v94 = v139;
    OUTLINED_FUNCTION_149_1();
    v136[0] = v93;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v104, v108 + *(int *)(v111 + 36), v103);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16))(v107, v108, v106);
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartCallIntent, INStartCallIntentResponse>);
    OUTLINED_FUNCTION_15_2(v95);
    RCHChildFlowFactory.init(producers:withFallbacks:)(v104, v107);
    v96 = (uint64_t (*)(uint64_t))v94[1];
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
    uint64_t v97 = OUTLINED_FUNCTION_145_1();
    uint64_t v98 = v96(v97);
    OUTLINED_FUNCTION_50_2();
    v136[0] = v98;
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>);
    OUTLINED_FUNCTION_97_3();
    OUTLINED_FUNCTION_16_3();

    swift_release(v135);
    OUTLINED_FUNCTION_118();
    uint64_t v42 = &demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>;
    uint64_t v43 = v108;
LABEL_9:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v43,  v42);
    __swift_destroy_boxed_opaque_existential_1(v137);
    goto LABEL_10;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v99 = OUTLINED_FUNCTION_15_1();
  v100 = (os_log_s *)OUTLINED_FUNCTION_12_1(v99, (uint64_t)static Logger.siriPhone);
  os_log_type_t v101 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v100, v101))
  {
    v102 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)v102 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v100,  v101,  "#PhoneCallFlowFactory Failed to retrieve a recognized phone domain SiriKitIntent",  v102);
    OUTLINED_FUNCTION_0_2((uint64_t)v102);
  }

LABEL_10:
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

uint64_t specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = a3;
  specialized static PhoneCallFlowFactory.getProducers<A>(delegate:app:)(a1, a2, a3);
  outlined init with copy of SharedGlobalsProviding( a1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v71);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v71, (uint64_t)v70);
  uint64_t v8 = swift_allocObject(&unk_3FCA30, 64LL, 7LL);
  *(void *)(v8 + 16) = a2;
  outlined init with take of AppSelectionSignalComponent(v70, v8 + 24);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1(v71);
  uint64_t v65 = a3
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  RCHChildFlowProducersAsync.appResolutionBeforeNextResolveFlowProducer.setter( partial apply for specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:),  v8,  v64);
  uint64_t v69 = type metadata accessor for StartCallCATs(0LL);
  uint64_t v9 = swift_retain();
  static CATOption.defaultMode.getter(v9);
  uint64_t v58 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v68 = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v68);
  uint64_t v57 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v67 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v67);
  uint64_t v56 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v66 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v66);
  uint64_t v55 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v63 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v63);
  uint64_t v10 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v62 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v62);
  uint64_t v11 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v61 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v61);
  uint64_t v12 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v13 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v14 = ResponseFactory.init()();
  static SiriKitEventSender.current.getter(v71, v14);
  uint64_t v60 = type metadata accessor for AppInfoBuilder();
  uint64_t v15 = swift_allocObject(v60, 16LL, 7LL);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentContactNeedsDisambiguationFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v18 = specialized CallingIntentContactNeedsDisambiguationFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  v58,  v57,  v56,  v55,  v10,  v11,  v12,  v14,  v71,  v15,  v17,  &direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  v71[0] = v18;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentContactNeedsDisambiguationFlowStrategy<StartCallRCHFlowDelegate> and conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentContactNeedsDisambiguationFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v20 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(v71, v16, v19);
  uint64_t v22 = v21;
  swift_release(v18);
  RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter(v20, v22, v64);
  uint64_t v23 = swift_retain();
  static CATOption.defaultMode.getter(v23);
  uint64_t v58 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v58);
  uint64_t v57 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v57);
  uint64_t v56 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v56);
  uint64_t v55 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v55);
  uint64_t v24 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v24);
  uint64_t v25 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v25);
  uint64_t v26 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v27 = ResponseFactory.init()();
  static SiriKitEventSender.current.getter(v71, v27);
  uint64_t v28 = swift_allocObject(v60, 16LL, 7LL);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentConfirmationFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  uint64_t v31 = specialized CallingIntentConfirmationFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  v58,  v57,  v56,  v55,  v24,  v25,  v26,  v27,  v71,  v28,  v30,  &direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  v71[0] = v31;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentConfirmationFlowStrategy<StartCallRCHFlowDelegate> and conformance CallingIntentConfirmationFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentConfirmationFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v33 = static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(v71, v29, v32);
  uint64_t v35 = v34;
  swift_release(v31);
  uint64_t v36 = v35;
  uint64_t v37 = v64;
  RCHChildFlowProducersAsync.needsConfirmationFlowProducer.setter(v33, v36, v64);
  swift_retain();
  RCHChildFlowProducersAsync.needsValueFlowProducer.setter( partial apply for specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:),  a1,  v37);
  swift_retain();
  RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter( partial apply for specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:),  a1,  v37);
  uint64_t v38 = swift_retain();
  static CATOption.defaultMode.getter(v38);
  uint64_t v69 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v69);
  uint64_t v68 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v68);
  uint64_t v39 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v39);
  uint64_t v40 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v40);
  uint64_t v41 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v41);
  uint64_t v42 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  static CATOption.defaultMode.getter(v42);
  uint64_t v43 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v44 = ResponseFactory.init()();
  static SiriKitEventSender.current.getter(v71, v44);
  uint64_t v45 = swift_allocObject(v60, 16LL, 7LL);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentHandleIntentFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v47 = swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  uint64_t v48 = specialized CallingIntentHandleIntentFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  v69,  v68,  v39,  v40,  v41,  v42,  v43,  v44,  v71,  v45,  v47,  &direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  v71[0] = v48;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentHandleIntentFlowStrategy<StartCallRCHFlowDelegate> and conformance CallingIntentHandleIntentFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentHandleIntentFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v50 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v71, v46, v49);
  uint64_t v52 = v51;
  swift_release(v48);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  return RCHChildFlowProducers.handleIntentFlowCompletion.setter(v50, v52, v53);
}

void specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)()
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v3 = OUTLINED_FUNCTION_55_6();
  specialized static PhoneCallFlowFactory.getProducers<A>(delegate:app:)(v3, v4, v5);
  OUTLINED_FUNCTION_161_0(direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_152_0();
  uint64_t v6 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FCAF8, 64LL);
  *(void *)(v6 + 16) = v2;
  outlined init with take of AppSelectionSignalComponent(&v25, v6 + 24);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  RCHChildFlowProducersAsync.appResolutionBeforeNextResolveFlowProducer.setter( partial apply for specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:),  v6,  v24);
  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_2_35();
  uint64_t v7 = OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_117_1(v7);
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_2_35();
  uint64_t v8 = OUTLINED_FUNCTION_9_36(v0);
  OUTLINED_FUNCTION_116_2(v8);
  OUTLINED_FUNCTION_2_35();
  uint64_t v9 = OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_115_1(v9);
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_9_36(v0);
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_78_5();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_9_36(v0);
  uint64_t v10 = OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_15_2(v10);
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_28_19();
  uint64_t v23 = OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_8_2(v23, 16LL);
  uint64_t v11 = OUTLINED_FUNCTION_91_4();
  uint64_t v12 = OUTLINED_FUNCTION_15_2(v11);
  uint64_t v13 = OUTLINED_FUNCTION_11_33(v12, (uint64_t)&direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_73_4(v13);
  OUTLINED_FUNCTION_85_3(&lazy protocol witness table cache variable for type CallingIntentContactNeedsDisambiguationFlowStrategy<StartAudioCallRCHFlowDelegate> and conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>);
  OUTLINED_FUNCTION_108_1(v14);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_141_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_34_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_37_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_39_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_35_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_38_14();
  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_8_2(v23, 16LL);
  uint64_t v15 = OUTLINED_FUNCTION_91_4();
  uint64_t v16 = OUTLINED_FUNCTION_15_2(v15);
  uint64_t v17 = OUTLINED_FUNCTION_10_32(v16, (uint64_t)&direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_73_4(v17);
  OUTLINED_FUNCTION_85_3(&lazy protocol witness table cache variable for type CallingIntentConfirmationFlowStrategy<StartAudioCallRCHFlowDelegate> and conformance CallingIntentConfirmationFlowStrategy<A>);
  OUTLINED_FUNCTION_109_3(v18);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_155((uint64_t)partial apply for specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:));
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_156_0((uint64_t)partial apply for specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:));
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_34_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_37_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_39_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_35_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_38_14();
  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_8_2(v23, 16LL);
  uint64_t v19 = OUTLINED_FUNCTION_177_0();
  uint64_t v20 = OUTLINED_FUNCTION_15_2(v19);
  uint64_t v26 = OUTLINED_FUNCTION_22_20(v20, (uint64_t)&direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_170(&lazy protocol witness table cache variable for type CallingIntentHandleIntentFlowStrategy<StartAudioCallRCHFlowDelegate> and conformance CallingIntentHandleIntentFlowStrategy<A>);
  OUTLINED_FUNCTION_107_1(v21);
  OUTLINED_FUNCTION_38_1();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  OUTLINED_FUNCTION_84_4(v22);
  OUTLINED_FUNCTION_7_5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  OUTLINED_FUNCTION_29_2();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v3 = OUTLINED_FUNCTION_55_6();
  specialized static PhoneCallFlowFactory.getProducers<A>(delegate:app:)(v3, v4, v5);
  OUTLINED_FUNCTION_161_0(direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_152_0();
  uint64_t v6 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FCB20, 64LL);
  *(void *)(v6 + 16) = v2;
  outlined init with take of AppSelectionSignalComponent(&v25, v6 + 24);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  RCHChildFlowProducersAsync.appResolutionBeforeNextResolveFlowProducer.setter( partial apply for specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:),  v6,  v24);
  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_2_35();
  uint64_t v7 = OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_117_1(v7);
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_2_35();
  uint64_t v8 = OUTLINED_FUNCTION_9_36(v0);
  OUTLINED_FUNCTION_116_2(v8);
  OUTLINED_FUNCTION_2_35();
  uint64_t v9 = OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_115_1(v9);
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_9_36(v0);
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_78_5();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_9_36(v0);
  uint64_t v10 = OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_15_2(v10);
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_28_19();
  uint64_t v23 = OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_8_2(v23, 16LL);
  uint64_t v11 = OUTLINED_FUNCTION_91_4();
  uint64_t v12 = OUTLINED_FUNCTION_15_2(v11);
  uint64_t v13 = OUTLINED_FUNCTION_11_33(v12, (uint64_t)&direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_73_4(v13);
  OUTLINED_FUNCTION_85_3(&lazy protocol witness table cache variable for type CallingIntentContactNeedsDisambiguationFlowStrategy<StartVideoCallRCHFlowDelegate> and conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>);
  OUTLINED_FUNCTION_108_1(v14);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_141_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_34_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_37_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_39_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_35_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_38_14();
  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_8_2(v23, 16LL);
  uint64_t v15 = OUTLINED_FUNCTION_91_4();
  uint64_t v16 = OUTLINED_FUNCTION_15_2(v15);
  uint64_t v17 = OUTLINED_FUNCTION_10_32(v16, (uint64_t)&direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_73_4(v17);
  OUTLINED_FUNCTION_85_3(&lazy protocol witness table cache variable for type CallingIntentConfirmationFlowStrategy<StartVideoCallRCHFlowDelegate> and conformance CallingIntentConfirmationFlowStrategy<A>);
  OUTLINED_FUNCTION_109_3(v18);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_103_2();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_155((uint64_t)partial apply for specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:));
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_156_0((uint64_t)partial apply for specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:));
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_34_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_37_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_39_9();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_35_15();
  OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_38_14();
  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_28_19();
  OUTLINED_FUNCTION_8_2(v23, 16LL);
  uint64_t v19 = OUTLINED_FUNCTION_177_0();
  uint64_t v20 = OUTLINED_FUNCTION_15_2(v19);
  uint64_t v26 = OUTLINED_FUNCTION_22_20(v20, (uint64_t)&direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  OUTLINED_FUNCTION_170(&lazy protocol witness table cache variable for type CallingIntentHandleIntentFlowStrategy<StartVideoCallRCHFlowDelegate> and conformance CallingIntentHandleIntentFlowStrategy<A>);
  OUTLINED_FUNCTION_107_1(v21);
  OUTLINED_FUNCTION_38_1();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  OUTLINED_FUNCTION_84_4(v22);
  OUTLINED_FUNCTION_7_5();
}

uint64_t static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a4 + 8);
  static PhoneCallFlowFactory.getProducers<A>(delegate:app:)(a1, a2, a3, v7, a5);
  v150[5] = a1;
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v7 + 8) + 8LL))(v151, a3);
  uint64_t v9 = OUTLINED_FUNCTION_99_2();
  uint64_t v12 = static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)( v9,  v10,  v11,  a3,  v7);
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_18();
  uint64_t v146 = OUTLINED_FUNCTION_83_3();
  uint64_t v142 = OUTLINED_FUNCTION_83_3();
  uint64_t v139 = a5 + *(int *)(type metadata accessor for PhoneCallFlowFactory.PhoneRCHFlowProducers(0LL, v146, v142, v15) + 36);
  uint64_t v147 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v146, v142);
  RCHChildFlowProducersAsync.appResolutionBeforeNextResolveFlowProducer.setter(v12, v14, v147);
  uint64_t v16 = OUTLINED_FUNCTION_140_1();
  type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy(v16, v17, v18, v19);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_60_8();
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_74_5();
  OUTLINED_FUNCTION_63_4();
  OUTLINED_FUNCTION_43_7();
  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_59_6();
  uint64_t v28 = OUTLINED_FUNCTION_58_5(v20, v21, v22, v23, v24, v25, v26, v27, v124, v129, v134, v139, v142);
  OUTLINED_FUNCTION_57_5((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35);
  OUTLINED_FUNCTION_127_1();
  uint64_t v44 = CallingIntentContactNeedsDisambiguationFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43,  v150,  v149,  v148);
  OUTLINED_FUNCTION_73_4((uint64_t)v44);
  OUTLINED_FUNCTION_75_4((uint64_t)&protocol conformance descriptor for CallingIntentContactNeedsDisambiguationFlowStrategy<A>);
  uint64_t v45 = OUTLINED_FUNCTION_50_10();
  uint64_t v48 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(v45, v46, v47);
  uint64_t v50 = v49;
  OUTLINED_FUNCTION_22();
  RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter(v48, v50, v147);
  uint64_t v51 = OUTLINED_FUNCTION_140_1();
  type metadata accessor for CallingIntentConfirmationFlowStrategy(v51, v52, v53, v54);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_60_8();
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_74_5();
  OUTLINED_FUNCTION_63_4();
  OUTLINED_FUNCTION_43_7();
  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_59_6();
  uint64_t v63 = OUTLINED_FUNCTION_58_5(v55, v56, v57, v58, v59, v60, v61, v62, v125, v130, v135, v140, v143);
  OUTLINED_FUNCTION_57_5((uint64_t)v63, v64, v65, v66, v67, v68, v69, v70);
  OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_127_1();
  CallingIntentConfirmationFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v71,  v72,  v73,  v74,  v75,  v76,  v77,  v78,  v126,  v131,  v136);
  OUTLINED_FUNCTION_73_4(v79);
  OUTLINED_FUNCTION_75_4((uint64_t)&protocol conformance descriptor for CallingIntentConfirmationFlowStrategy<A>);
  uint64_t v80 = OUTLINED_FUNCTION_50_10();
  uint64_t v83 = static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(v80, v81, v82);
  uint64_t v85 = v84;
  OUTLINED_FUNCTION_22();
  RCHChildFlowProducersAsync.needsConfirmationFlowProducer.setter(v83, v85, v147);
  uint64_t v86 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FC888, 40LL);
  OUTLINED_FUNCTION_104_2(v86);
  RCHChildFlowProducersAsync.needsValueFlowProducer.setter( partial apply for closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:),  v12,  v147);
  v87 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FC8B0, 40LL);
  OUTLINED_FUNCTION_104_2(v87);
  RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter( partial apply for closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:),  v12,  v147);
  uint64_t v88 = OUTLINED_FUNCTION_140_1();
  type metadata accessor for CallingIntentHandleIntentFlowStrategy(v88, v89, v90, v91);
  OUTLINED_FUNCTION_92_3();
  OUTLINED_FUNCTION_96_1();
  uint64_t v93 = v92;
  OUTLINED_FUNCTION_60_8();
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_74_5();
  OUTLINED_FUNCTION_63_4();
  OUTLINED_FUNCTION_43_7();
  OUTLINED_FUNCTION_95_2();
  uint64_t v95 = v94;
  OUTLINED_FUNCTION_59_6();
  uint64_t v104 = OUTLINED_FUNCTION_58_5(v96, v97, v98, v99, v100, v101, v102, v103, v127, v132, v137, v141, v144);
  OUTLINED_FUNCTION_57_5((uint64_t)v104, v105, v106, v107, v108, v109, v110, v111);
  uint64_t v112 = OUTLINED_FUNCTION_49_7();
  id v115 = CallingIntentHandleIntentFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v112,  v93,  v113,  (uint64_t)v12,  v85,  v147,  v114,  v95,  v128,  v133,  v138);
  OUTLINED_FUNCTION_73_4((uint64_t)v115);
  OUTLINED_FUNCTION_75_4((uint64_t)&protocol conformance descriptor for CallingIntentHandleIntentFlowStrategy<A>);
  uint64_t v116 = OUTLINED_FUNCTION_50_10();
  uint64_t v119 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v116, v117, v118);
  uint64_t v121 = v120;
  OUTLINED_FUNCTION_22();
  uint64_t v122 = type metadata accessor for RCHChildFlowProducers(0LL, v146, v145);
  return RCHChildFlowProducers.handleIntentFlowCompletion.setter(v119, v121, v122);
}

void static PhoneCallFlowFactory.makeHangUpCallRCHFlow(delegate:intent:app:sharedGlobals:)()
{
  uint64_t v38 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INHangUpCallIntent, INHangUpCallIntentResponse>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v47 = v8;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INHangUpCallIntent, INHangUpCallIntentResponse>);
  uint64_t v43 = *(void *)(v44 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v45 = v9;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INHangUpCallIntent, INHangUpCallIntentResponse>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v48 = v5;
  char v40 = dispatch thunk of BaseRCHFlowDelegate.canUseServerTTS(intent:)(v5);
  uint64_t v10 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  uint64_t v39 = dispatch thunk of BaseRCHFlowDelegate.makeNLContextProvider()();
  uint64_t v49 = dispatch thunk of BaseRCHFlowDelegate.makeAceViewProvider()();
  OUTLINED_FUNCTION_29_0(v49, (uint64_t)&v51);
  type metadata accessor for HangUpCallCATsSimple(0LL);
  uint64_t v11 = OUTLINED_FUNCTION_23_1();
  static CATOption.defaultMode.getter(v11);
  uint64_t v12 = OUTLINED_FUNCTION_128_1();
  uint64_t v13 = OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_15_2(v13);
  uint64_t v14 = OUTLINED_FUNCTION_105();
  uint64_t v41 = type metadata accessor for HangUpCallIntentRCHFlowStrategy();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_8_2(v41, 112LL);
  v15[12] = v13;
  v15[13] = &protocol witness table for ResponseFactory;
  v15[9] = v14;
  v15[2] = v3;
  OUTLINED_FUNCTION_150_0((uint64_t)v15);
  v15[8] = v12;
  uint64_t v16 = specialized static PhoneCallFlowFactory.getProducers<A>(delegate:app:)(v7, v3, v0);
  OUTLINED_FUNCTION_20_19(v16, (uint64_t)&v51);
  swift_retain();
  OUTLINED_FUNCTION_29_3();
  uint64_t v17 = OUTLINED_FUNCTION_23_1();
  static CATOption.defaultMode.getter(v17);
  uint64_t v18 = OUTLINED_FUNCTION_128_1();
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v19 = OUTLINED_FUNCTION_105();
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v20 = (void *)static BiomeEventSender.instance;
  uint64_t v21 = OUTLINED_FUNCTION_43_3();
  uint64_t v22 = OUTLINED_FUNCTION_15_2(v21);
  uint64_t v23 = specialized InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)( &v51,  v10,  v49,  v39,  v40 & 1,  0,  v18,  v19,  (uint64_t)v20,  v22);
  OUTLINED_FUNCTION_73_4(v23);
  OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type InCallActionHandleIntentFlowStrategy<INHangUpCallIntent, INHangUpCallIntentResponse> and conformance InCallActionHandleIntentFlowStrategy<A, B>);
  uint64_t v25 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(&v51, v21, v24);
  uint64_t v27 = v26;
  OUTLINED_FUNCTION_22();
  RCHChildFlowProducers.handleIntentFlowCompletion.setter(v25, v27, v46);
  uint64_t v28 = v38[3];
  uint64_t v29 = v38[4];
  OUTLINED_FUNCTION_49_0(v38);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v29 + 104))(&v51, v28, v29);
  uint64_t v30 = v52;
  uint64_t v31 = v53;
  OUTLINED_FUNCTION_49_0(&v51);
  uint64_t v50 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v45, v0 + *(int *)(v42 + 36), v44);
  uint64_t v32 = OUTLINED_FUNCTION_98_0();
  v33(v32);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INHangUpCallIntent, INHangUpCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v34);
  uint64_t v35 = RCHChildFlowFactory.init(producers:withFallbacks:)(v45, v47);
  uint64_t v36 = *(void (**)(void **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type HangUpCallIntentRCHFlowStrategy and conformance HangUpCallIntentRCHFlowStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for HangUpCallIntentRCHFlowStrategy);
  v36(&v50, v35, v3, v48, v41, v37, v30, v31);
  swift_release(v10);
  swift_release(v49);
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_16_3();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  &demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INHangUpCallIntent, INHangUpCallIntentResponse>);
  OUTLINED_FUNCTION_76();
  __swift_destroy_boxed_opaque_existential_1(&v51);
  OUTLINED_FUNCTION_7_5();
}

void static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v80 = v8;
  uint64_t v10 = v9;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v73 = *(void *)(v74 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v76 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v71 = *(void *)(v12 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v72 = v13;
  uint64_t v14 = type metadata accessor for ResponseMode(0LL);
  uint64_t v70 = *(void *)(v14 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v69 = v15;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ResponseMode?, ResponseMode?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResponseMode?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v79 = v16;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v18 = (char *)&v69 - v17;
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_5();
  uint64_t v19 = specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)(v7, v5, v10);
  OUTLINED_FUNCTION_29_0(v19, (uint64_t)v84);
  uint64_t v20 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FC8D8, 56LL);
  OUTLINED_FUNCTION_62_4(v20);
  uint64_t v75 = v10;
  uint64_t v22 = v10 + v21;
  uint64_t v23 = RCHChildFlowProducersAsync.continueInAppFlowProducer.setter( partial apply for specialized closure #1 in static CallingIntentContinueInAppFlow.makeProducer(sharedGlobals:),  v20,  v12);
  OUTLINED_FUNCTION_29_0(v23, (uint64_t)v84);
  uint64_t v24 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FC900, 64LL);
  OUTLINED_FUNCTION_62_4(v24);
  *(void *)(v24 + 56) = v7;
  OUTLINED_FUNCTION_44_1();
  uint64_t v77 = v12;
  RCHChildFlowProducersAsync.confirmIntentFlowProducer.setter( partial apply for closure #1 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:),  v24,  v12);
  uint64_t v25 = v3[4];
  OUTLINED_FUNCTION_49_0(v3);
  uint64_t v26 = (os_log_s *)OUTLINED_FUNCTION_66_3(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 56));
  LOBYTE(v24) = (*(uint64_t (**)(os_log_s *))(*(void *)v26 + 136LL))(v26);
  uint64_t v27 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_29_0(v27, (uint64_t)v84);
  if ((v24 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0(v84);
    OUTLINED_FUNCTION_125_2();
    OUTLINED_FUNCTION_49_0(&v82);
    OUTLINED_FUNCTION_125_2();
    uint64_t v28 = v81[4];
    OUTLINED_FUNCTION_49_0(v81);
    os_log_type_t v29 = OUTLINED_FUNCTION_66_3(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    __swift_destroy_boxed_opaque_existential_1(v81);
    __swift_destroy_boxed_opaque_existential_1(&v82);
    OUTLINED_FUNCTION_18();
    if ((v29 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v30 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
      os_log_type_t v31 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v31))
      {
        uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v32 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v26,  v29,  "#PhoneCallFlowFactory: detected ongoing call, adding RCHChildFlowProducers for ongoing call",  v32);
        OUTLINED_FUNCTION_0_2((uint64_t)v32);
      }

      static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)(v22);
    }
  }

  else
  {
    OUTLINED_FUNCTION_18();
  }

  uint64_t v33 = v3[4];
  OUTLINED_FUNCTION_49_0(v3);
  if (OUTLINED_FUNCTION_66_3(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 112)))
  {
    CurrentRequest.responseMode.getter();
    OUTLINED_FUNCTION_38_1();
    uint64_t v34 = 0LL;
  }

  else
  {
    uint64_t v34 = 1LL;
  }

  uint64_t v35 = v79;
  uint64_t v36 = OUTLINED_FUNCTION_157_1(v0, v34);
  static ResponseMode.voiceOnly.getter(v36);
  OUTLINED_FUNCTION_157_1((uint64_t)v18, 0LL);
  uint64_t v37 = (os_log_s *)(v1 + *(int *)(v78 + 48));
  outlined init with copy of ResponseMode?(v0, v1);
  outlined init with copy of ResponseMode?((uint64_t)v18, (uint64_t)v37);
  OUTLINED_FUNCTION_113_2(v1);
  if (!v40)
  {
    outlined init with copy of ResponseMode?(v1, v35);
    OUTLINED_FUNCTION_113_2((uint64_t)v37);
    if (!v40)
    {
      uint64_t v41 = v70;
      uint64_t v38 = v69;
      (*(void (**)(uint64_t *, os_log_s *, uint64_t))(v70 + 32))(v69, v37, v14);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type ResponseMode and conformance ResponseMode,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode);
      LODWORD(v78) = dispatch thunk of static Equatable.== infix(_:_:)(v35, v38, v14);
      uint64_t v79 = v22;
      uint64_t v42 = *(void (**)(uint64_t *, uint64_t))(v41 + 8);
      v42(v38, v14);
      uint64_t v37 = (os_log_s *)&demangling cache variable for type metadata for ResponseMode?;
      OUTLINED_FUNCTION_9_19((uint64_t)v18);
      OUTLINED_FUNCTION_9_19(v0);
      v42((uint64_t *)v35, v14);
      uint64_t v22 = v79;
      OUTLINED_FUNCTION_9_19(v1);
      uint64_t v39 = v80;
      if ((v78 & 1) == 0) {
        goto LABEL_28;
      }
      goto LABEL_22;
    }

    OUTLINED_FUNCTION_133_1((uint64_t)v18);
    OUTLINED_FUNCTION_133_1(v0);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v35, v14);
LABEL_20:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for (ResponseMode?, ResponseMode?));
    uint64_t v39 = v80;
    goto LABEL_28;
  }

  uint64_t v38 = &demangling cache variable for type metadata for ResponseMode?;
  OUTLINED_FUNCTION_133_1((uint64_t)v18);
  OUTLINED_FUNCTION_133_1(v0);
  OUTLINED_FUNCTION_113_2((uint64_t)v37);
  if (!v40) {
    goto LABEL_20;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for ResponseMode?);
  uint64_t v39 = v80;
LABEL_22:
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v39, 0LL);
  if ((v43 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v44 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v44, (uint64_t)static Logger.siriPhone);
    os_log_type_t v45 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v45))
    {
      uint64_t v46 = v22;
      uint64_t v47 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v47 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v37,  (os_log_type_t)v38,  "#PhoneCallFlowFactory making confirmation producer for voice only emergency call request",  v47);
      uint64_t v48 = (uint64_t)v47;
      uint64_t v22 = v46;
      OUTLINED_FUNCTION_0_2(v48);
    }

    OUTLINED_FUNCTION_29_0(v49, (uint64_t)&v82);
    uint64_t v50 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FC950, 64LL);
    OUTLINED_FUNCTION_87_4(v50);
    *(void *)(v50 + 56) = v39;
    id v51 = v39;
    RCHChildFlowProducersAsync.confirmIntentFlowProducer.setter( partial apply for closure #2 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:),  v50,  v77);
  }

void static PhoneCallFlowFactory.makeVoiceCommandsParityFlow(app:intent:sharedGlobals:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v31 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v13 = type metadata accessor for StartCallRCHFlowDelegate(0LL);
  OUTLINED_FUNCTION_129_1(v13, (uint64_t)&v35);
  OUTLINED_FUNCTION_25_1();
  uint64_t v27 = StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)(&v35, v7);
  OUTLINED_FUNCTION_129_1(v27, (uint64_t)&v35);
  OUTLINED_FUNCTION_78_5();
  OUTLINED_FUNCTION_45_7();
  uint64_t v14 = OUTLINED_FUNCTION_9_36(v1);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_45_7();
  uint64_t v15 = OUTLINED_FUNCTION_9_36(v1);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v17 = (void *)OUTLINED_FUNCTION_8_2(v16, 80LL);
  outlined init with take of AppSelectionSignalComponent(&v35, (uint64_t)(v17 + 2));
  v17[7] = v7;
  v17[8] = v14;
  v17[9] = v15;
  OUTLINED_FUNCTION_25_1();
  static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v0, &v12[*(int *)(v28 + 36)], v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v31, v12, v33);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v18);
  uint64_t v19 = OUTLINED_FUNCTION_124_1();
  uint64_t v20 = v3[3];
  uint64_t v21 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v20);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v21 + 104))(&v35, v20, v21);
  uint64_t v22 = v36;
  uint64_t v23 = v37;
  __swift_project_boxed_opaque_existential_1(&v35, v36);
  uint64_t v34 = v17;
  uint64_t v24 = *(void (**)(void **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 64);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  v24(&v34, v19, v7, v5, v16, v25, v22, v23);
  swift_release(v27);
  OUTLINED_FUNCTION_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v12,  &demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_50_2();
  __swift_destroy_boxed_opaque_existential_1(&v35);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

uint64_t PhoneCallFlowFactory.PhoneRCHFlowProducers.completionProducers.getter(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_105_2();
  return OUTLINED_FUNCTION_55_1(v1, v2, v3, v4);
}

uint64_t PhoneCallFlowFactory.PhoneRCHFlowProducers.completionProducers.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_106_1();
  return OUTLINED_FUNCTION_55_1(v2, v3, v4, v5);
}

uint64_t PhoneCallFlowFactory.PhoneRCHFlowProducers.asyncProducers.getter(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_105_2();
  return OUTLINED_FUNCTION_55_1(v1, v2, v3, v4);
}

uint64_t PhoneCallFlowFactory.PhoneRCHFlowProducers.asyncProducers.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_106_1();
  return OUTLINED_FUNCTION_55_1(v2, v3, v4, v5);
}

Swift::Void (__swiftcall *PhoneCallFlowFactory.PhoneRCHFlowProducers.asyncProducers.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallFlowFactory.PhoneRCHFlowProducers.init(completionProducers:asyncProducers:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for RCHChildFlowProducers(0LL, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(a5, a1, v10);
  uint64_t v12 = a5 + *(int *)(type metadata accessor for PhoneCallFlowFactory.PhoneRCHFlowProducers(0LL, a3, a4, v11) + 36);
  uint64_t v13 = type metadata accessor for RCHChildFlowProducersAsync(0LL, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32LL))(v12, a2, v13);
}

uint64_t specialized static PhoneCallFlowFactory.getProducers<A>(delegate:app:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a2;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INHangUpCallIntent, INHangUpCallIntentResponse>);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals;
  uint64_t v11 = *(void *)(a1 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v12 = *(void *)(a1 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(a1 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals),  v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 104))(v43, v11, v12);
  uint64_t v13 = v44;
  uint64_t v14 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = type metadata accessor for HangUpCallRCHFlowDelegate(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type HangUpCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  type metadata accessor for HangUpCallRCHFlowDelegate);
  v15(a1, v16, v17, v13, v14);
  __swift_destroy_boxed_opaque_existential_1(v43);
  uint64_t v18 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INHangUpCallIntent, INHangUpCallIntentResponse>);
  uint64_t v19 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INHangUpCallIntent,  &OBJC_CLASS___INHangUpCallIntent_ptr);
  uint64_t v20 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INHangUpCallIntentResponse,  &OBJC_CLASS___INHangUpCallIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v19, v20);
  uint64_t v21 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v40, v19, v20);
  uint64_t v23 = v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INHangUpCallIntent, INHangUpCallIntentResponse>);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v21, v23, v24);
  outlined init with copy of SharedGlobalsProviding(v10, (uint64_t)v43);
  uint64_t v25 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v25);
  uint64_t v26 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v27 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v27);
  uint64_t v28 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v29 = type metadata accessor for AppInfoBuilder();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneTCCFlowStrategy<INHangUpCallIntent, INHangUpCallIntentResponse>);
  uint64_t v32 = swift_allocObject(v31, 312LL, 7LL);
  specialized PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( (uint64_t)v43,  v26,  v28,  0LL,  0LL,  0LL,  0LL,  v30,  v32,  (uint64_t)specialized PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:),  v40,  v41,  v42,  v43[0],  v43[1],  v43[2],  v44,  v45,  v46,  v47,  v48,  v49);
  uint64_t v34 = v33;
  v43[0] = v33;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneTCCFlowStrategy<INHangUpCallIntent, INHangUpCallIntentResponse> and conformance PhoneTCCFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneTCCFlowStrategy<INHangUpCallIntent, INHangUpCallIntentResponse>);
  uint64_t v36 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(v43, v31, v20, v35);
  uint64_t v38 = v37;
  swift_release(v34);
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v36, v38, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v18, v9, v42);
}

{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t *, void *, uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _UNKNOWN **);
  uint64_t v40 = a2;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals;
  uint64_t v11 = *(void *)(a1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v12 = *(void *)(a1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(a1 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals),  v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 104))(v43, v11, v12);
  uint64_t v13 = v44;
  uint64_t v14 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = type metadata accessor for StartCallRCHFlowDelegate(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  type metadata accessor for StartCallRCHFlowDelegate);
  v15(a1, v16, v17, v13, v14);
  __swift_destroy_boxed_opaque_existential_1(v43);
  uint64_t v18 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v19 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  uint64_t v20 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartCallIntentResponse,  &OBJC_CLASS___INStartCallIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v19, v20);
  uint64_t v21 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v40, v19, v20);
  uint64_t v23 = v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v21, v23, v24);
  outlined init with copy of SharedGlobalsProviding(v10, (uint64_t)v43);
  uint64_t v25 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v25);
  uint64_t v26 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v27 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v27);
  uint64_t v28 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v29 = type metadata accessor for AppInfoBuilder();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneTCCFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v32 = swift_allocObject(v31, 312LL, 7LL);
  specialized PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( (uint64_t)v43,  v26,  v28,  0LL,  0LL,  0LL,  0LL,  v30,  v32,  (uint64_t)specialized PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:),  v40,  v41,  v42,  v43[0],  v43[1],  v43[2],  v44,  v45,  v46,  v47,  v48,  v49);
  uint64_t v34 = v33;
  v43[0] = v33;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneTCCFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance PhoneTCCFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneTCCFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v36 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(v43, v31, v20, v35);
  uint64_t v38 = v37;
  swift_release(v34);
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v36, v38, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v18, v9, v42);
}

{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t *, void *, uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _UNKNOWN **);
  uint64_t v40 = a2;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals;
  uint64_t v11 = *(void *)(a1 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v12 = *(void *)(a1 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(a1 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals),  v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 104))(v43, v11, v12);
  uint64_t v13 = v44;
  uint64_t v14 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = type metadata accessor for StartVideoCallRCHFlowDelegate(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartVideoCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  type metadata accessor for StartVideoCallRCHFlowDelegate);
  v15(a1, v16, v17, v13, v14);
  __swift_destroy_boxed_opaque_existential_1(v43);
  uint64_t v18 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v19 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartVideoCallIntent,  &OBJC_CLASS___INStartVideoCallIntent_ptr);
  uint64_t v20 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartVideoCallIntentResponse,  &OBJC_CLASS___INStartVideoCallIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v19, v20);
  uint64_t v21 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v40, v19, v20);
  uint64_t v23 = v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v21, v23, v24);
  outlined init with copy of SharedGlobalsProviding(v10, (uint64_t)v43);
  uint64_t v25 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v25);
  uint64_t v26 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v27 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v27);
  uint64_t v28 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v29 = type metadata accessor for AppInfoBuilder();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneTCCFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v32 = swift_allocObject(v31, 312LL, 7LL);
  specialized PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( (uint64_t)v43,  v26,  v28,  0LL,  0LL,  0LL,  0LL,  v30,  v32,  (uint64_t)specialized PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:),  v40,  v41,  v42,  v43[0],  v43[1],  v43[2],  v44,  v45,  v46,  v47,  v48,  v49);
  uint64_t v34 = v33;
  v43[0] = v33;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneTCCFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance PhoneTCCFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneTCCFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v36 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(v43, v31, v20, v35);
  uint64_t v38 = v37;
  swift_release(v34);
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v36, v38, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v18, v9, v42);
}

{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t *, void *, uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _UNKNOWN **);
  uint64_t v40 = a2;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals;
  uint64_t v11 = *(void *)(a1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 24);
  uint64_t v12 = *(void *)(a1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(a1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals),  v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 104))(v43, v11, v12);
  uint64_t v13 = v44;
  uint64_t v14 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = type metadata accessor for StartAudioCallRCHFlowDelegate(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartAudioCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  type metadata accessor for StartAudioCallRCHFlowDelegate);
  v15(a1, v16, v17, v13, v14);
  __swift_destroy_boxed_opaque_existential_1(v43);
  uint64_t v18 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  uint64_t v19 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartAudioCallIntent,  &OBJC_CLASS___INStartAudioCallIntent_ptr);
  uint64_t v20 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartAudioCallIntentResponse,  &OBJC_CLASS___INStartAudioCallIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v19, v20);
  uint64_t v21 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v40, v19, v20);
  uint64_t v23 = v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v21, v23, v24);
  outlined init with copy of SharedGlobalsProviding(v10, (uint64_t)v43);
  uint64_t v25 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v25);
  uint64_t v26 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v27 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v27);
  uint64_t v28 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v29 = type metadata accessor for AppInfoBuilder();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneTCCFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  uint64_t v32 = swift_allocObject(v31, 312LL, 7LL);
  specialized PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( (uint64_t)v43,  v26,  v28,  0LL,  0LL,  0LL,  0LL,  v30,  v32,  (uint64_t)specialized PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:),  v40,  v41,  v42,  v43[0],  v43[1],  v43[2],  v44,  v45,  v46,  v47,  v48,  v49);
  uint64_t v34 = v33;
  v43[0] = v33;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneTCCFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse> and conformance PhoneTCCFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneTCCFlowStrategy<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  uint64_t v36 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(v43, v31, v20, v35);
  uint64_t v38 = v37;
  swift_release(v34);
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v36, v38, v24);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v18, v9, v42);
}

uint64_t static PhoneCallFlowFactory.getProducers<A>(delegate:app:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v35)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void v40[5];
  void v41[5];
  void v42[5];
  void v43[3];
  uint64_t v44;
  uint64_t v45;
  void v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v37 = a2;
  uint64_t v39 = a5;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v10 = swift_getAssociatedTypeWitness(255LL);
  uint64_t v36 = type metadata accessor for RCHChildFlowProducersAsync(0LL, AssociatedTypeWitness, v10);
  __chkstk_darwin();
  uint64_t v34 = (char *)&v34 - v11;
  type metadata accessor for RCHChildFlowProducers(0LL, AssociatedTypeWitness, v10);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t)&v34 - v12;
  v43[0] = a1;
  uint64_t v13 = *(void *)(a4 + 8);
  uint64_t v35 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8);
  v35(v46, a3, v13);
  uint64_t v14 = v47;
  uint64_t v15 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 104))(v43, v14, v15);
  uint64_t v16 = v44;
  uint64_t v17 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v18 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, a3, v8, v16, v17);
  __swift_destroy_boxed_opaque_existential_1(v43);
  __swift_destroy_boxed_opaque_existential_1(v46);
  uint64_t v19 = v34;
  RCHChildFlowProducersAsync.init()(AssociatedTypeWitness, v10);
  uint64_t v20 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v37, AssociatedTypeWitness, v10);
  uint64_t v21 = v36;
  uint64_t v22 = (uint64_t)v19;
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v20, v23, v36);
  uint64_t v25 = type metadata accessor for PhoneTCCFlowStrategy(0LL, AssociatedTypeWitness, v10, v24);
  v43[0] = v18;
  v35(v46, a3, v13);
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v27 = v26;
  default argument 2 of PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)();
  default argument 6 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( v42,  AssociatedTypeWitness,  v10);
  default argument 4 of PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)((uint64_t)v41);
  default argument 4 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( v40,  AssociatedTypeWitness,  v10);
  uint64_t v28 = PhoneTCCFlowStrategy.__allocating_init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( v46,  v27,  v43,  v42,  v41,  v40);
  v46[0] = v28;
  uint64_t WitnessTable = swift_getWitnessTable("\tt\r", v25);
  uint64_t v30 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(v46, v25, v10, WitnessTable);
  uint64_t v32 = v31;
  swift_release(v28);
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v30, v32, v21);
  return PhoneCallFlowFactory.PhoneRCHFlowProducers.init(completionProducers:asyncProducers:)( v38,  v22,  AssociatedTypeWitness,  v10,  v39);
}

void (*static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v8 = (void *)swift_allocObject(&unk_3FCAD0, 80LL, 7LL);
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = a2;
  outlined init with take of AppSelectionSignalComponent(v10, (uint64_t)(v8 + 5));
  swift_retain();
  return partial apply for closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:);
}

uint64_t closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v47)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  os_log_s *v56;
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t (*v61)(void *, uint64_t);
  void *v62;
  void *v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71[5];
  void v72[5];
  uint64_t v73[5];
  uint64_t v74[5];
  uint64_t v75[6];
  uint64_t v66 = a2;
  uint64_t v70 = a1;
  uint64_t v67 = *a1;
  uint64_t v69 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = type metadata accessor for CallingIntentNeedsValueFlowStrategy(0LL, a4, a5, v10);
  swift_unknownObjectRetain(a3);
  default argument 6 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v12 = v11;
  default argument 2 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)(v75);
  default argument 5 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)();
  uint64_t v14 = v13;
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v16 = v15;
  default argument 5 of CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)();
  uint64_t v18 = v17;
  default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)(v74);
  default argument 6 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)();
  uint64_t v20 = v19;
  default argument 7 of InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)();
  default argument 7 of static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)( v72,  a4,  a5);
  SharedGlobalsProviding.appInfoBuilder.getter(v71);
  uint64_t v21 = v66;
  uint64_t v22 = v20;
  uint64_t v23 = v65;
  uint64_t v24 = CallingIntentNeedsValueFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a3,  v12,  v75,  v14,  v16,  v18,  v74,  v22,  v73,  v72,  v71);
  uint64_t v25 = *(void *)(v67 + class metadata base offset for RCHChildFlowFactory);
  uint64_t v26 = type metadata accessor for ParameterResolutionRecord(0LL, v25);
  uint64_t v27 = ParameterResolutionRecord.parameter.getter(v26);
  uint64_t v28 = ParameterIdentifier.name.getter(v27);
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v9, v69);
  v31._uint64_t countAndFlagsBits = v28;
  v31._object = v30;
  if ((PhoneCallSlotNames.init(rawValue:)(v31).value & 0xFE) == 4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v36 = static os_log_type_t.debug.getter(v34, v35);
    if (os_log_type_enabled(v34, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl( &dword_0,  v34,  v36,  "#PhoneCallFlowFactory Contact slot needs value. Wrapping needsValueStrategy in NeedsValueGuardFlow.",  v37,  2u);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    v75[0] = (uint64_t)v24;
    uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for CallingIntentNeedsValueFlowStrategy<A>,  v23);
    uint64_t v39 = (uint64_t (*)(void *, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v23,  WitnessTable);
    uint64_t v41 = v40;
    uint64_t v42 = v39(v70, v21);
    swift_release(v41);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, a4, v25);
    uint64_t v45 = type metadata accessor for ContactNeedsValueGuardFlow(0LL, v25, AssociatedConformanceWitness, v44);
    v74[0] = a3;
    uint64_t v46 = *(void *)(*(void *)(a5 + 8) + 8LL);
    uint64_t v47 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v46 + 8);
    swift_retain();
    v47(v75, a4, v46);
    ContactNeedsValueGuardFlow.__allocating_init(_:_:)(v42, v75, v48, v49);
    id v51 = v50;
    v75[0] = v50;
    swift_getWitnessTable(&protocol conformance descriptor for ContactNeedsValueGuardFlow<A>, v45);
    uint64_t v52 = Flow.eraseToAnyValueFlow()(v45);
    swift_release(v51);
    swift_release(v42);
    uint64_t v53 = v24;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    id v54 = type metadata accessor for Logger(0LL);
    os_log_type_t v55 = __swift_project_value_buffer(v54, (uint64_t)static Logger.siriPhone);
    uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
    uint64_t v58 = static os_log_type_t.debug.getter(v56, v57);
    if (os_log_type_enabled(v56, v58))
    {
      id v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v59 = 0;
      _os_log_impl( &dword_0,  v56,  v58,  "#PhoneCallFlowFactory Needs value for non contact slot. Appending needsValueStrategy only.",  v59,  2u);
      swift_slowDealloc(v59, -1LL, -1LL);
    }

    v75[0] = (uint64_t)v24;
    uint64_t v60 = swift_getWitnessTable(&protocol conformance descriptor for CallingIntentNeedsValueFlowStrategy<A>, v23);
    uint64_t v61 = (uint64_t (*)(void *, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v23,  v60);
    uint64_t v63 = v62;
    uint64_t v52 = v61(v70, v21);
    swift_release(v24);
    uint64_t v53 = v63;
  }

  swift_release(v53);
  return v52;
}

uint64_t closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a1;
  uint64_t v60 = *a1;
  uint64_t v9 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v58 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for CallingIntentUnsupportedValueFlowStrategy(0LL, a4, a5, v12);
  swift_unknownObjectRetain(a3);
  default argument 6 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v61 = v14;
  default argument 2 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)(v63);
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v57 = v15;
  default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)(v66);
  default argument 5 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)();
  uint64_t v17 = v16;
  default argument 6 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)();
  uint64_t v19 = v18;
  default argument 2 of static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)( v65,  a4,  a5);
  SharedGlobalsProviding.appInfoBuilder.getter(v64);
  uint64_t v55 = a3;
  uint64_t v20 = v57;
  uint64_t v57 = v13;
  uint64_t v21 = CallingIntentUnsupportedValueFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( a3,  v61,  (uint64_t)v63,  v20,  v66,  v17,  v19,  v65,  v64);
  uint64_t v22 = *(void *)(v60 + class metadata base offset for RCHChildFlowFactory);
  uint64_t v23 = type metadata accessor for ParameterResolutionRecord(0LL, v22);
  uint64_t v61 = a2;
  uint64_t v24 = ParameterResolutionRecord.parameter.getter(v23);
  uint64_t v25 = ParameterIdentifier.name.getter(v24);
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v59);
  v28._uint64_t countAndFlagsBits = v25;
  v28._object = v27;
  if ((PhoneCallSlotNames.init(rawValue:)(v28).value & 0xFE) == 4)
  {
    uint64_t v29 = v57;
    uint64_t v30 = v55;
    uint64_t v59 = (uint64_t)v21;
    uint64_t v31 = *(void *)(swift_getAssociatedConformanceWitness(a5, a4, v22) + 8);
    char v32 = ParameterResolutionRecord<>.isUnsetRelationship.getter(v23, v31);
    uint64_t v33 = v56;
    if ((v32 & 1) != 0)
    {
      v63[0] = v30;
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(*(void *)(a5 + 8) + 8LL) + 8LL))(v66, a4);
      default argument 1 of ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)(v65);
      default argument 2 of ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)((uint64_t)v64);
      default argument 3 of ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)(v62);
      default argument 2 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
      uint64_t v35 = v34;
      default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
      ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)( (uint64_t)v66,  v65,  (uint64_t)v64,  v62,  v35,  v36,  v22,  v63);
      uint64_t v38 = type metadata accessor for ContactUnsetRelationshipFlowStrategy(0LL, v22, v31, v37);
      uint64_t v39 = *(void *)(class metadata base offset for RCHChildFlowFactory + v60 + 8);
      uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for ContactUnsetRelationshipFlowStrategy<A>,  v38);
      uint64_t v41 = (uint64_t (*)(void *, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)( v63,  v38,  v39,  WitnessTable);
      uint64_t v43 = v42;
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v38 - 8) + 8LL))(v63, v38);
      uint64_t v21 = (void *)v59;
      uint64_t v44 = v41(v33, v61);
    }

    else
    {
      uint64_t v21 = (void *)v59;
      v63[0] = v59;
      uint64_t v49 = swift_getWitnessTable( &protocol conformance descriptor for CallingIntentUnsupportedValueFlowStrategy<A>,  v29);
      uint64_t v50 = (uint64_t (*)(void *, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)( v63,  v29,  v49);
      uint64_t v43 = v51;
      uint64_t v44 = v50(v33, v61);
    }
  }

  else
  {
    v63[0] = (uint64_t)v21;
    uint64_t v45 = v57;
    uint64_t v46 = swift_getWitnessTable(&protocol conformance descriptor for CallingIntentUnsupportedValueFlowStrategy<A>, v57);
    uint64_t v47 = (uint64_t (*)(void *, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)( v63,  v45,  v46);
    uint64_t v43 = v48;
    uint64_t v44 = v47(v56, v61);
  }

  uint64_t v52 = v44;
  swift_release(v21);
  swift_release(v43);
  return v52;
}

uint64_t closure #1 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( uint64_t a1, uint64_t a2, __objc2_prop_list **p_base_props, uint64_t a4)
{
  uint64_t v121 = a4;
  uint64_t v122 = a1;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v127 = type metadata accessor for ResponseMode(0LL);
  uint64_t v119 = *(void *)(v127 - 8);
  __chkstk_darwin();
  uint64_t v118 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ResponseMode?, ResponseMode?));
  __chkstk_darwin();
  id v126 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResponseMode?);
  __chkstk_darwin();
  uint64_t v125 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v123 = (char *)&v113 - v12;
  __chkstk_darwin();
  uint64_t v124 = (char *)&v113 - v13;
  uint64_t v14 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v15 = *(v14 - 1);
  uint64_t v16 = __chkstk_darwin();
  uint64_t v18 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = (void *)IntentResolutionRecord.intentResponse.getter(v16);
  uint64_t v20 = (int *)[v19 _intentResponseCode];

  if (v20 != &dword_8)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v33 = type metadata accessor for Logger(0LL);
    uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v37 = static os_log_type_t.debug.getter(v35, v36);
    if (os_log_type_enabled(v35, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_0, v35, v37, "#PhoneCallFlowFactory skipping confirmation", v38, 2u);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

uint64_t closure #2 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v19);
  type metadata accessor for StartCallCATsSimple(0LL);
  id v8 = a4;
  static CATOption.defaultMode.getter(v8);
  uint64_t v9 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v10 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v11 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v12 = type metadata accessor for VoiceOnlyEmergencyConfirmationFlow();
  swift_allocObject(v12, 82LL, 7LL);
  v19[0] = VoiceOnlyEmergencyConfirmationFlow.init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)( v19,  v8,  v9,  v11);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow and conformance VoiceOnlyEmergencyConfirmationFlow,  (uint64_t (*)(uint64_t))type metadata accessor for VoiceOnlyEmergencyConfirmationFlow);
  uint64_t v15 = AnyConfirmIntentFlow.init<A>(_:)(v19, v12, v14);
  v19[0] = v15;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyConfirmIntentFlow<INStartCallIntent> and conformance AnyConfirmIntentFlow<A>,  &demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  uint64_t v16 = Flow.eraseToAnyValueFlow()(v13);
  swift_release(v15);
  return v16;
}

uint64_t closure #3 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v55 = a6;
  uint64_t v56 = a3;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v16 = (void *)IntentResolutionRecord.intent.getter(v15);
  uint64_t v17 = outlined bridged method (ob) of @objc INStartCallIntent.faceTimeLink.getter(v16);
  char v19 = specialized Optional<A>.isNilOrEmpty.getter(v17, v18);
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v31 = __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    char v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v34 = static os_log_type_t.debug.getter(v32, v33);
    if (os_log_type_enabled(v32, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl( &dword_0,  v32,  v34,  "#PhoneCallFlowFactory Received FaceTime request and has FaceTimeLink set",  v35,  2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    uint64_t v36 = IntentResolutionRecord.app.getter(v15);
    uint64_t v37 = IntentResolutionRecord.intent.getter(v15);
    uint64_t v38 = IntentResolutionRecord.intentResponse.getter(v15);
    outlined init with copy of SharedGlobalsProviding(v56, (uint64_t)v58);
    uint64_t v39 = type metadata accessor for StartCallCATs(0LL);
    static CATOption.defaultMode.getter(v39);
    uint64_t v40 = CATWrapper.__allocating_init(options:globals:)(v14, 0LL);
    uint64_t v41 = type metadata accessor for FlowFinder();
    uint64_t v42 = swift_allocObject(v41, 16LL, 7LL);
    static SiriKitEventSender.current.getter(v57, v42);
    uint64_t v43 = type metadata accessor for FaceTimeMessageControllerFlow();
    uint64_t v44 = swift_allocObject(v43, 169LL, 7LL);
    *(void *)&v58[0] = specialized FaceTimeMessageControllerFlow.init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)( v36,  v37,  v38,  v58,  0,  v40,  v42,  v57,  v44);
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
    swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type FaceTimeMessageControllerFlow and conformance FaceTimeMessageControllerFlow,  (uint64_t (*)(uint64_t))type metadata accessor for FaceTimeMessageControllerFlow);
    uint64_t v47 = AnyConfirmIntentFlow.init<A>(_:)(v58, v43, v46);
    *(void *)&v58[0] = v47;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyConfirmIntentFlow<INStartCallIntent> and conformance AnyConfirmIntentFlow<A>,  &demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
    uint64_t v29 = Flow.eraseToAnyValueFlow()(v45);
    uint64_t v30 = v47;
    goto LABEL_14;
  }

  if (a4)
  {
    uint64_t v20 = one-time initialization token for siriPhone;
    swift_retain();
    if (v20 != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v24 = static os_log_type_t.debug.getter(v22, v23);
    if (os_log_type_enabled(v22, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v22, v24, "#PhoneCallFlowFactory using default confirmIntentFlowCompletion", v25, 2u);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    uint64_t v26 = a4(v55, a2);
    if (!v26)
    {
      outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)a4, a5);
      return 0LL;
    }

    uint64_t v27 = v26;
    *(void *)&v58[0] = v26;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<PromptResult<ConfirmIntentAnswer<INStartCallIntent>>>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyValueFlow<PromptResult<ConfirmIntentAnswer<INStartCallIntent>>> and conformance AnyValueFlow<A>,  &demangling cache variable for type metadata for AnyValueFlow<PromptResult<ConfirmIntentAnswer<INStartCallIntent>>>);
    uint64_t v29 = Flow.eraseToAnyValueFlow()(v28);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)a4, a5);
    uint64_t v30 = v27;
LABEL_14:
    swift_release(v30);
    return v29;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v49 = __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v49, v9);
  uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
  os_log_type_t v52 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v54 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v58[0] = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    *(void *)&v57[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000048LL,  0x8000000000349540LL,  (uint64_t *)v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v57, (char *)v57 + 8, v53 + 4);
    _os_log_impl(&dword_0, v51, v52, "%s", v53, 0xCu);
    swift_arrayDestroy(v54, 1LL);
    swift_slowDealloc(v54, -1LL, -1LL);
    swift_slowDealloc(v53, -1LL, -1LL);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000048LL, 0x8000000000349540LL);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000048LL,  0x8000000000349540LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
  __break(1u);
  return result;
}

void static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)()
{
  void (*v70)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t WitnessTable;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[5];
  uint64_t v89[5];
  void v90[5];
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v86 = v6;
  uint64_t v83 = v7;
  uint64_t v9 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v8, v0);
  uint64_t v85 = *(void *)(v9 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v84 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v12 = (char *)&v81 - v11;
  uint64_t v13 = OUTLINED_FUNCTION_90_2();
  RCHChildFlowProducersAsync.init()(v13, v14);
  OUTLINED_FUNCTION_111_1();
  uint64_t v18 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v15, v16, v17);
  char v19 = v12;
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v18, v20, v9);
  OUTLINED_FUNCTION_111_1();
  uint64_t v25 = type metadata accessor for PhoneTCCFlowStrategy(v21, v22, v23, v24);
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_90_2();
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v27 = v26;
  OUTLINED_FUNCTION_90_2();
  default argument 2 of PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)();
  uint64_t v28 = OUTLINED_FUNCTION_90_2();
  default argument 6 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( v30,  v28,  v29);
  OUTLINED_FUNCTION_90_2();
  default argument 4 of PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)(v31);
  uint64_t v32 = OUTLINED_FUNCTION_90_2();
  default argument 4 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( v34,  v32,  v33);
  *(void *)&uint64_t v91 = PhoneTCCFlowStrategy.__allocating_init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( &v91,  v27,  v90,  v89,  v88,  &v87);
  uint64_t v35 = OUTLINED_FUNCTION_75_4((uint64_t)"\tt\r");
  static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(&v91, v25, v1, v35);
  OUTLINED_FUNCTION_16_3();
  uint64_t v36 = OUTLINED_FUNCTION_176_0();
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v36, v37, v38);
  uint64_t v39 = OUTLINED_FUNCTION_174_0();
  type metadata accessor for IncomingCallActionHandleIntentFlowStrategy(v39, v40, v41, v42);
  outlined init with copy of SharedGlobalsProviding(v83, (uint64_t)&v91);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v3, (uint64_t)v90);
  OUTLINED_FUNCTION_123_1();
  default argument 2 of IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)();
  OUTLINED_FUNCTION_123_1();
  default argument 3 of IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)(v43);
  OUTLINED_FUNCTION_123_1();
  default argument 4 of IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)(v44);
  IncomingCallActionHandleIntentFlowStrategy.__allocating_init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)();
  *(void *)&uint64_t v91 = v45;
  OUTLINED_FUNCTION_75_4((uint64_t)&protocol conformance descriptor for IncomingCallActionHandleIntentFlowStrategy<A, B>);
  uint64_t v46 = OUTLINED_FUNCTION_50_10();
  uint64_t v49 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v46, v47, v48);
  uint64_t v51 = v50;
  OUTLINED_FUNCTION_16_3();
  os_log_type_t v82 = v9;
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter(v49, v51, v9);
  uint64_t v52 = OUTLINED_FUNCTION_174_0();
  type metadata accessor for IncomingCallActionContinueInAppStrategy(v52, v53, v54, v55);
  *(void *)&uint64_t v91 = UnsetRelationshipTemplatesWrapper.__allocating_init()();
  OUTLINED_FUNCTION_75_4((uint64_t)&protocol conformance descriptor for IncomingCallActionContinueInAppStrategy<A, B>);
  uint64_t v56 = OUTLINED_FUNCTION_50_10();
  static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)(v56, v57, v58);
  OUTLINED_FUNCTION_16_3();
  uint64_t v59 = OUTLINED_FUNCTION_176_0();
  RCHChildFlowProducersAsync.continueInAppFlowProducer.setter(v59, v60, v61);
  OUTLINED_FUNCTION_111_1();
  uint64_t v66 = type metadata accessor for PhoneIntentRCHFlowStrategy(v62, v63, v64, v65);
  OUTLINED_FUNCTION_153_1();
  uint64_t v81 = v5;
  uint64_t v67 = PhoneIntentRCHFlowStrategy.__allocating_init(sharedGlobals:app:)(&v91, v5);
  uint64_t v83 = v67;
  uint64_t v69 = v3[3];
  uint64_t v68 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v69);
  uint64_t v70 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v68 + 104);
  OUTLINED_FUNCTION_3_8();
  v70(&v91, v69, v68);
  uint64_t v71 = v92;
  uint64_t v72 = v93;
  __swift_project_boxed_opaque_existential_1(&v91, v92);
  v90[0] = v67;
  OUTLINED_FUNCTION_111_1();
  type metadata accessor for RCHChildFlowFactory();
  char v73 = v85;
  uint64_t v74 = v84;
  uint64_t v75 = v19;
  uint64_t v76 = v19;
  char v77 = v82;
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v84, v75, v82);
  char v78 = RCHChildFlowFactory.__allocating_init(producers:)(v74);
  uint64_t v79 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PhoneIntentRCHFlowStrategy<A, B>, v66);
  v79(v90, v78, v81, v86, v66, WitnessTable, v71, v72);
  OUTLINED_FUNCTION_77_0();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v77);
  swift_release(v83);
  __swift_destroy_boxed_opaque_existential_1(&v91);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  _BYTE v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = type metadata accessor for CATOption(0LL);
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  v4[13] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[14] = v7;
  v4[15] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:),  0LL,  0LL);
}

uint64_t closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)( uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v17 = *(void *)(v1 + 112);
  uint64_t v18 = *(void *)(v1 + 104);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v7 = *(void **)(v1 + 64);
  uint64_t v6 = *(void **)(v1 + 72);
  uint64_t v8 = OUTLINED_FUNCTION_49( a1,  (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent,  &OBJC_CLASS___INAddCallParticipantIntent_ptr);
  uint64_t v9 = OUTLINED_FUNCTION_49( v8,  &lazy cache variable for type metadata for INAddCallParticipantIntentResponse,  &OBJC_CLASS___INAddCallParticipantIntentResponse_ptr);
  OUTLINED_FUNCTION_59();
  IntentResolutionRecord.init(app:intent:intentResponse:)(v5, v7, v6, v8, v9);
  outlined init with copy of SharedGlobalsProviding(v4, v1 + 16);
  uint64_t v10 = type metadata accessor for AddCallParticipantCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v11 = OUTLINED_FUNCTION_18_26(v3);
  uint64_t v12 = type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow(0LL);
  uint64_t v13 = OUTLINED_FUNCTION_15_2(v12);
  uint64_t v14 = (uint64_t *)(v13
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns);
  v14[3] = v10;
  v14[4] = (uint64_t)&protocol witness table for AddCallParticipantCATPatternsExecutor;
  *uint64_t v14 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))( v13 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_rchRecord,  v2,  v18);
  outlined init with take of AppSelectionSignalComponent( (__int128 *)(v1 + 16),  v13 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
  *(void *)(v1 + 56) = v13;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AddCallParticipantHandleIntentFollowUpFlow and conformance AddCallParticipantHandleIntentFollowUpFlow,  type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow);
  uint64_t v15 = Flow.eraseToAnyFlow()(v12);
  OUTLINED_FUNCTION_118();
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v15);
}

uint64_t closure #2 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INAddCallParticipantIntent>);
  uint64_t v11 = (void *)ParameterResolutionRecord.result.getter(v10);
  uint64_t v12 = (char *)[v11 unsupportedReason];

  if ((unint64_t)(v12 - 5) > 1)
  {
    if ((specialized ParameterResolutionRecord<>.isUnsetRelationship.getter() & 1) != 0)
    {
      outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)&v33);
      id v15 = [objc_allocWithZone(CNContactStore) init];
      v32[14] = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for CNContactStore,  &OBJC_CLASS___CNContactStore_ptr);
      v32[15] = &protocol witness table for CNContactStore;
      v32[11] = v15;
      v32[9] = &type metadata for LabelTemplatesProvider;
      v32[10] = &protocol witness table for LabelTemplatesProvider;
      uint64_t v16 = swift_allocObject(&unk_3FCA58, 48LL, 7LL);
      v32[6] = v16;
      *(_OWORD *)(v16 + 16) = 0u;
      *(_OWORD *)(v16 + 32) = 0u;
      uint64_t v17 = type metadata accessor for UnsetRelationshipTemplatesWrapper();
      uint64_t v18 = swift_allocObject(v17, 16LL, 7LL);
      v32[4] = v17;
      v32[5] = &protocol witness table for UnsetRelationshipTemplatesWrapper;
      v32[1] = v18;
      uint64_t v19 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
      static CATOption.defaultMode.getter(v19);
      CATWrapper.__allocating_init(options:globals:)(v9, 0LL);
      uint64_t v20 = type metadata accessor for PhoneCallCommonCATs(0LL);
      static CATOption.defaultMode.getter(v20);
      CATWrapper.__allocating_init(options:globals:)(v9, 0LL);
      specialized ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)();
      uint64_t v21 = &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INAddCallParticipantIntent>;
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INAddCallParticipantIntent>);
      uint64_t v23 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INAddCallParticipantIntentResponse,  &OBJC_CLASS___INAddCallParticipantIntentResponse_ptr);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactUnsetRelationshipFlowStrategy<INAddCallParticipantIntent> and conformance ContactUnsetRelationshipFlowStrategy<A>,  &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INAddCallParticipantIntent>);
      uint64_t v25 = static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)( v34,  v22,  v23,  v24);
    }

    else
    {
      outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v34 + 8);
      *(void *)&v34[0] = a4;
      swift_retain();
      uint64_t v21 = &demangling cache variable for type metadata for ContactUnsupportedFlowStrategy<ParticipantOutputProvider>;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactUnsupportedFlowStrategy<ParticipantOutputProvider>);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactUnsupportedFlowStrategy<ParticipantOutputProvider> and conformance ContactUnsupportedFlowStrategy<A>,  &demangling cache variable for type metadata for ContactUnsupportedFlowStrategy<ParticipantOutputProvider>);
      uint64_t v25 = static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)(v34, v27, v28);
    }

    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))v25;
    uint64_t v13 = v26;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v34,  v21);
    uint64_t v14 = v29(a1, a2);
  }

  else
  {
    outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v34);
    uint64_t v13 = swift_allocObject(&unk_3FCB98, 56LL, 7LL);
    outlined init with take of AppSelectionSignalComponent(v34, v13 + 16);
    uint64_t v14 = partial apply for specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( a1,  a2);
  }

  uint64_t v30 = v14;
  swift_release(v13);
  return v30;
}

uint64_t specialized ContactNeedsDisambiguationFlowStrategy.__allocating_init(promptProvider:sharedGlobals:)( uint64_t a1, void *a2)
{
  uint64_t v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v23);
  uint64_t v6 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  static CATOption.defaultMode.getter(v6);
  uint64_t v7 = CATWrapper.__allocating_init(options:globals:)(v5, 0LL);
  uint64_t v8 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v8);
  uint64_t v9 = CATWrapper.__allocating_init(options:globals:)(v5, 0LL);
  uint64_t v10 = type metadata accessor for AppInfoBuilder();
  uint64_t v11 = swift_allocObject(v10, 16LL, 7LL);
  uint64_t v12 = type metadata accessor for StartCallCATs(0LL);
  static CATOption.defaultMode.getter(v12);
  uint64_t v13 = CATWrapper.__allocating_init(options:globals:)(v5, 0LL);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v15 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000010LL,  0x8000000000342230LL,  (uint64_t)v23,  v7,  v9,  v11,  0LL,  0LL,  0LL,  0LL,  v13,  v15,  v22,  v23[0],  v23[1],  v23[2],  v23[3],  v23[4],  v23[5],  v23[6],  v23[7],  v23[8],  v23[9],  (void *)v23[10]);
  uint64_t v17 = v16;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v23);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactNeedsDisambiguationFlowStrategy<ParticipantOutputProvider>);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v19 = swift_retain();
  uint64_t v20 = specialized ContactNeedsDisambiguationFlowStrategy.init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)( v19,  v23,  v17,  0LL,  255);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_release(a1);
  return v20;
}

uint64_t closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((specialized Sequence<>.contains(_:)( a6,  (uint64_t)&outlined read-only object #0 of closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)) & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
    if (os_log_type_enabled(v17, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( &dword_0,  v17,  v19,  "#PhoneCallFlowFactory makeAppResolutionFlowBeforeNextResolveFlowProducer: resolutionResultCode is needsDisambigu ation or needsConfirmation, don't start app resolution again",  v20,  2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    return 0LL;
  }

  else
  {
    uint64_t v51 = a7;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    swift_retain_n(a2, 2LL);
    id v23 = a3;
    swift_bridgeObjectRetain_n(a5, 2LL);
    id v24 = v23;
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
    if (os_log_type_enabled(v25, v27))
    {
      uint64_t v48 = a4;
      uint64_t v28 = swift_slowAlloc(42LL, -1LL);
      uint64_t v49 = swift_slowAlloc(96LL, -1LL);
      *(void *)&v56[0] = v49;
      *(_DWORD *)uint64_t v28 = 136315906;
      uint64_t v50 = a8;
      uint64_t v29 = type metadata accessor for App(0LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App);
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v29, v30);
      uint64_t v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, (uint64_t *)v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v28 + 4);
      swift_release_n(a2, 2LL);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      uint64_t v52 = a6;
      uint64_t v33 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v28 + 14);
      *(_WORD *)(v28 + 22) = 2080;
      uint64_t v34 = INIntent.debugDescriptionLite.getter(v33);
      uint64_t v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, (uint64_t *)v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v28 + 24);

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 32) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, a5, (uint64_t *)v56);
      a8 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v28 + 34);
      swift_bridgeObjectRelease_n(a5, 3LL);
      _os_log_impl( &dword_0,  v25,  v27,  "#PhoneCallFlowFactory makeAppResolutionFlowBeforeNextResolveFlowProducer: app:%s resolutionResultCode:%ld intent :%s parameterName: %s ",  (uint8_t *)v28,  0x2Au);
      swift_arrayDestroy(v49, 3LL);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a5, 2LL);
      swift_release_n(a2, 2LL);
    }

    outlined init with copy of SharedGlobalsProviding(a8, (uint64_t)v56);
    uint64_t v36 = v51;
    uint64_t v37 = swift_retain();
    default argument 2 of PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)(&v52, v37);
    uint64_t v38 = type metadata accessor for AppResolutionBeforeResolveFlow(0LL);
    uint64_t v39 = (void *)swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    uint64_t v40 = v54;
    uint64_t v41 = v55;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v52, v54);
    __chkstk_darwin();
    uint64_t v43 = (char *)&v48 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v44 + 16))(v43);
    uint64_t v45 = specialized AppResolutionBeforeResolveFlow.init(previousTurnIntent:previouslyResolvedApp:sharedGlobals:appFinder:)( v24,  v36,  v56,  (uint64_t)v43,  v39,  v40,  v41);
    id v46 = v24;
    __swift_destroy_boxed_opaque_existential_1(&v52);
    *(void *)&v56[0] = v45;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AppResolutionBeforeResolveFlow and conformance AppResolutionBeforeResolveFlow,  type metadata accessor for AppResolutionBeforeResolveFlow);
    uint64_t v21 = Flow.eraseToAnyValueFlow()(v38);
    swift_release(v45);
  }

  return v21;
}

uint64_t specialized SentinelConditionalFlow.init<A, B>(preconditionFlow:executableFlow:)( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v10 = a1;
  uint64_t v5 = type metadata accessor for MainFlow(0LL);
  uint64_t v6 = type metadata accessor for GuardFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type MainFlow and conformance MainFlow,  type metadata accessor for MainFlow);
  uint64_t v8 = Flow.guarded<A>(by:)(&v10, v5, v6, v7);
  outlined destroy of MainFlow(a2);
  swift_release(v10);
  *(void *)(v3 + 16) = v8;
  return v3;
}

void *CallingIntentRCHFlowStrategy.init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)( __int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a2;
  _BYTE v4[8] = a3;
  v4[9] = a4;
  return v4;
}

uint64_t specialized ContactNeedsDisambiguationFlowStrategy.init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  static UnlockDevicePolicy.default.getter(a1);
  *(void *)(v6 + direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate) = _swiftEmptyArrayStorage;
  uint64_t v12 = v6 + *(void *)(*(void *)v6 + 144LL);
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = -1;
  *(void *)(v6 + *(void *)(*(void *)v6 + 112LL)) = a1;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, v6 + *(void *)(*(void *)v6 + 120LL));
  *(void *)(v6 + *(void *)(*(void *)v6 + 128LL)) = a3;
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 72))(v13, v14);
  outlined init with copy of SharedGlobalsProviding(v15 + 120, (uint64_t)v20);
  swift_release(v15);
  outlined init with take of AppSelectionSignalComponent(v20, v6 + *(void *)(*(void *)v6 + 136LL));
  uint64_t v16 = v6 + *(void *)(*(void *)v6 + 144LL);
  swift_beginAccess(v16, v20, 1LL, 0LL);
  uint64_t v17 = *(void **)v16;
  *(void *)uint64_t v16 = a4;
  unsigned __int8 v18 = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(v16 + 8) = a5;
  outlined consume of ContactDisambiguationPromptResponse?(v17, v18);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v6;
}

uint64_t partial apply for closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc(dword_4305BC);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = partial apply for closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:);
  uint64_t v4 = OUTLINED_FUNCTION_99_2();
  return closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)( v4,  v5,  v2,  v0 + 24);
}

uint64_t partial apply for closure #1 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)( uint64_t a1)
{
  uint64_t v4 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t partial apply for closure #2 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #2 in static PhoneCallFlowFactory.makeAddCallParticipantRCHFlow(intent:app:sharedGlobals:)( a1,  a2,  v2 + 16,  *(void *)(v2 + 56));
}

uint64_t outlined init with copy of MainFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainFlow(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of MainFlow(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainFlow(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t outlined bridged method (ob) of @objc PBCodable.dictionaryRepresentation()(void *a1)
{
  id v2 = [a1 dictionaryRepresentation];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v2,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  return v3;
}

uint64_t outlined bridged method (ob) of @objc INStartCallIntent.faceTimeLink.getter(void *a1)
{
  id v2 = [a1 faceTimeLink];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t specialized InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)( __int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v21 = a7;
  type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin();
  unsigned __int8 v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for ResponseFactory(0LL);
  os_log_type_t v27 = &protocol witness table for ResponseFactory;
  *(void *)&__int128 v25 = a8;
  id v23 = &type metadata for BiomeEventSender;
  id v24 = &protocol witness table for BiomeEventSender;
  *(void *)&__int128 v22 = a9;
  static DialogPhase.completion.getter(v26);
  OutputGenerationManifest.init(dialogPhase:_:)( v18,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  *(void *)(a10 + direct field offset for InCallActionHandleIntentFlowStrategy.cancellable) = 0LL;
  outlined init with take of AppSelectionSignalComponent(a1, a10 + 16);
  *(void *)(a10 + direct field offset for InCallActionHandleIntentFlowStrategy.phoneCallBaseCatTemplatingService) = a2;
  *(void *)(a10 + direct field offset for InCallActionHandleIntentFlowStrategy.nlContextProvider) = a4;
  *(_BYTE *)(a10 + direct field offset for InCallActionHandleIntentFlowStrategy.canUseServerTTS) = a5;
  *(_BYTE *)(a10 + direct field offset for InCallActionHandleIntentFlowStrategy.shouldShowDialogAfterIntentHandled) = a6;
  *(void *)(a10 + direct field offset for InCallActionHandleIntentFlowStrategy.aceViewProvider) = a3;
  *(void *)(a10 + 56) = v21;
  outlined init with take of AppSelectionSignalComponent(&v25, a10 + 64);
  outlined init with take of AppSelectionSignalComponent(&v22, a10 + 104);
  return a10;
}

void *specialized AppResolutionBeforeResolveFlow.init(previousTurnIntent:previouslyResolvedApp:sharedGlobals:appFinder:)( void *a1, uint64_t a2, __int128 *a3, _OWORD *a4, void *a5)
{
  a5[7] = &type metadata for AnnotatedAppFinder;
  a5[8] = &protocol witness table for AnnotatedAppFinder;
  uint64_t v10 = (_OWORD *)swift_allocObject(&unk_3FCAA8, 80LL, 7LL);
  a5[3] = a2;
  a5[4] = v10;
  __int128 v11 = a4[1];
  v10[1] = *a4;
  __int128 v10[2] = v11;
  __int128 v12 = a4[3];
  v10[3] = a4[2];
  v10[4] = v12;
  a5[2] = a1;
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)(a5 + 9));
  uint64_t v13 = (void *)((char *)a5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state);
  *uint64_t v13 = a1;
  v13[1] = a2;
  uint64_t v14 = type metadata accessor for AppResolutionBeforeResolveFlow.State(0LL);
  swift_storeEnumTagMultiPayload(v13, v14, 0LL);
  id v15 = a1;
  swift_retain();
  return a5;
}

void specialized PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void (*a22)(uint64_t, uint64_t *, void *, uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _UNKNOWN **))
{
  uint64_t v51 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v50 = v31;
  uint64_t v52 = v32;
  uint64_t v34 = v33;
  v60[8] = &type metadata for LabelTemplatesProvider;
  v60[9] = &protocol witness table for LabelTemplatesProvider;
  unint64_t v35 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FCA58, 48LL);
  v60[5] = v35;
  v35[2] = v30;
  v35[3] = v28;
  v35[4] = v26;
  v35[5] = v24;
  v60[3] = &type metadata for TCCTemplatesProvider;
  v60[4] = &protocol witness table for TCCTemplatesProvider;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v34, a21 + 272);
  OUTLINED_FUNCTION_151_0(v36, a21 + 192);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v60, a21 + 232);
  uint64_t v37 = v34[3];
  uint64_t v38 = v34[4];
  __swift_project_boxed_opaque_existential_1(v34, v37);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v38 + 136))(v57, v37, v38);
  uint64_t v40 = v58;
  uint64_t v39 = v59;
  uint64_t v41 = __swift_project_boxed_opaque_existential_1(v57, v58);
  v56[3] = v40;
  uint64_t v42 = *(void *)(v39 + 8);
  v56[4] = v42;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v56);
  uint64_t v44 = *(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16LL);
  v44(boxed_opaque_existential_1, v41, v40);
  uint64_t v45 = v34[3];
  uint64_t v46 = v34[4];
  uint64_t v47 = __swift_project_boxed_opaque_existential_1(v34, v45);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v46 + 8))(v55, v45, v46);
  uint64_t v54 = v50;
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  v44(v47, boxed_opaque_existential_1, v40);
  uint64_t v53 = v51;
  uint64_t v48 = OUTLINED_FUNCTION_100_1();
  uint64_t v49 = OUTLINED_FUNCTION_69_1();
  swift_retain();
  OUTLINED_FUNCTION_25_1();
  a22( v52,  &v54,  v47,  &v53,  v55,  a21,  v40,  v48,  v49,  v42,  &protocol witness table for PhoneCallCommonCATPatternsExecutor,  &protocol witness table for AppInfoBuilder);
  __swift_destroy_boxed_opaque_existential_1(v56);
  OUTLINED_FUNCTION_16_3();
  __swift_destroy_boxed_opaque_existential_1(v60);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_118();
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(v34);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

void specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21)
{
  uint64_t v77 = v22;
  uint64_t v70 = v23;
  uint64_t v25 = v24;
  uint64_t v75 = v26;
  uint64_t v76 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v74 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v73 = v33;
  uint64_t v72 = type metadata accessor for Locale(0LL);
  uint64_t v71 = *(void *)(v72 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  v81[3] = OUTLINED_FUNCTION_69_1();
  v81[4] = &protocol witness table for AppInfoBuilder;
  v81[0] = v25;
  uint64_t v34 = (void *)((char *)a21
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a21 + 16));
  *uint64_t v34 = 0x3D65737561705C1BLL;
  v34[1] = 0xEC0000005C303532LL;
  OUTLINED_FUNCTION_17_32();
  uint64_t v36 = (char *)a21 + *(void *)(v35 + 56);
  *(_OWORD *)uint64_t v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  *((void *)v36 + 4) = 0LL;
  OUTLINED_FUNCTION_17_32();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v31, (uint64_t)a21 + *(void *)(v37 + 72));
  uint64_t v38 = v31[4];
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  uint64_t v39 = *(void (**)(uint64_t))(v38 + 8);
  OUTLINED_FUNCTION_59();
  uint64_t v40 = OUTLINED_FUNCTION_98_0();
  v39(v40);
  OUTLINED_FUNCTION_17_32();
  uint64_t v42 = (uint64_t)a21 + *(void *)(v41 + 40);
  outlined init with take of AppSelectionSignalComponent(v80, v42);
  OUTLINED_FUNCTION_17_32();
  uint64_t v69 = v29;
  *(void *)((char *)a21 + *(void *)(v43 + 24)) = v29;
  OUTLINED_FUNCTION_17_32();
  *(void *)((char *)a21 + *(void *)(v44 + 32)) = v76;
  OUTLINED_FUNCTION_17_32();
  OUTLINED_FUNCTION_151_0(v46, (uint64_t)a21 + *(void *)(v45 + 48));
  OUTLINED_FUNCTION_17_32();
  OUTLINED_FUNCTION_20_19(v48, (uint64_t)a21 + *(void *)(v47 + 64));
  OUTLINED_FUNCTION_17_32();
  *(void *)((char *)a21 + *(void *)(v49 + 80)) = v77;
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_95();
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_122();
  uint64_t v50 = *(void *)(v42 + 24);
  uint64_t v51 = *(void *)(v42 + 32);
  uint64_t v52 = (void *)OUTLINED_FUNCTION_98_0();
  __swift_project_boxed_opaque_existential_1(v52, v53);
  uint64_t v54 = dispatch thunk of DeviceState.siriLocale.getter(v50, v51);
  *(void *)&v80[0] = Locale.identifier.getter(v54);
  *((void *)&v80[0] + 1) = v55;
  v78[0] = 45LL;
  v78[1] = 0xE100000000000000LL;
  v79[0] = 95LL;
  v79[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v56 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v78,  v79,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v21, v72);
  type metadata accessor for INIntentSlotValueType(0LL);
  uint64_t v60 = v59;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType);
  uint64_t v62 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v60, &type metadata for String, v61);
  uint64_t v63 = v31[3];
  uint64_t v64 = v31[4];
  __swift_project_boxed_opaque_existential_1(v31, v63);
  uint64_t v65 = (*(void *(**)(__int128 *__return_ptr, uint64_t, uint64_t))(v64 + 24))(v80, v63, v64);
  OUTLINED_FUNCTION_29_0((uint64_t)v65, (uint64_t)v78);
  uint64_t v66 = type metadata accessor for DucTemplatingLocalContext(0LL);
  OUTLINED_FUNCTION_29_1(v73, v67, v68, v66);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( v74,  v75,  v56,  v58,  v62,  v80,  v78,  v73);
  swift_release(v69);
  swift_release(v76);
  swift_release(v77);
  __swift_destroy_boxed_opaque_existential_1(v70);
  __swift_destroy_boxed_opaque_existential_1(v81);
  __swift_destroy_boxed_opaque_existential_1(v31);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

void specialized CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, void *a24, void *a25)
{
  uint64_t v48 = v26;
  uint64_t v28 = v27;
  uint64_t v47 = v29;
  uint64_t v46 = v30;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  type metadata accessor for DialogPhase(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  v56[8] = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  v56[9] = &protocol witness table for StartCallCATPatternsExecutor;
  void v56[5] = v34;
  v56[3] = OUTLINED_FUNCTION_100_1();
  v56[4] = &protocol witness table for PhoneCallCommonCATPatternsExecutor;
  v56[0] = v28;
  uint64_t v54 = OUTLINED_FUNCTION_69_1();
  uint64_t v55 = &protocol witness table for AppInfoBuilder;
  *(void *)&__int128 v53 = a23;
  uint64_t v51 = OUTLINED_FUNCTION_101_2();
  uint64_t v52 = &protocol witness table for ResponseFactory;
  v50[0] = a21;
  static DialogPhase.completion.getter(v51);
  OutputGenerationManifest.init(dialogPhase:_:)( v25,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  a24[2] = v38;
  outlined init with copy of SharedGlobalsProviding(v38 + *a25, (uint64_t)(a24 + 3));
  a24[8] = v36;
  OUTLINED_FUNCTION_151_0(v39, (uint64_t)(a24 + 9));
  a24[14] = v32;
  a24[15] = v46;
  a24[16] = v47;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v56, (uint64_t)(a24 + 17));
  a24[22] = v48;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v50, (uint64_t)(a24 + 23));
  outlined init with copy of SharedGlobalsProviding((uint64_t)a22, (uint64_t)(a24 + 28));
  uint64_t v40 = a24[6];
  uint64_t v41 = a24[7];
  uint64_t v42 = (void *)OUTLINED_FUNCTION_175_1();
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 72);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_95_1();
  uint64_t v44 = v45(v40, v41);
  OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76();
  __swift_destroy_boxed_opaque_existential_1(a22);
  __swift_destroy_boxed_opaque_existential_1(v50);
  __swift_destroy_boxed_opaque_existential_1(v56);
  OUTLINED_FUNCTION_18();
  outlined init with copy of SharedGlobalsProviding(v44 + 120, (uint64_t)v49);
  OUTLINED_FUNCTION_38_1();
  outlined init with take of AppSelectionSignalComponent(v49, (uint64_t)(a24 + 33));
  outlined init with take of AppSelectionSignalComponent(&v53, (uint64_t)(a24 + 38));
  OUTLINED_FUNCTION_7_5();
}

#error "DC148: call analysis failed (funcsize=68)"
#error "DC204: call analysis failed (funcsize=43)"
#error "DC2CC: call analysis failed (funcsize=48)"
#error "DC394: call analysis failed (funcsize=50)"
#error "DC434: call analysis failed (funcsize=39)"
uint64_t specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( void *a1,  uint64_t a2,  uint64_t a3,  uint64_t a4)
{
  return specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( a1,  a2,  a3,  a4,  &direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals,  &direct field offset for StartAudioCallRCHFlowDelegate.appResolved,  &direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender);
}

uint64_t specialized StartVideoCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( a1,  a2,  a3,  a4,  &direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals,  &direct field offset for StartVideoCallRCHFlowDelegate.appResolved,  &direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender);
}

uint64_t specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  v14[3] = &type metadata for BiomeEventSender;
  v14[4] = &protocol witness table for BiomeEventSender;
  v14[0] = a3;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, a4 + *a5);
  *(void *)(a4 + *a6) = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v14, a4 + *a7);
  uint64_t v12 = BaseRCHFlowDelegate.init()();
  __swift_destroy_boxed_opaque_existential_1(v14);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v12;
}

void specialized static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)()
{
  void (*v44)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t *, void *, uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _UNKNOWN **);
  __int128 v67[3];
  OUTLINED_FUNCTION_29_2();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v60 = v6;
  __int128 v53 = v7;
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INAnswerCallIntent, INAnswerCallIntentResponse>);
  uint64_t v58 = *(void *)(v8 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v56 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_5();
  uint64_t v11 = OUTLINED_FUNCTION_49( v10,  &lazy cache variable for type metadata for INAnswerCallIntent,  &OBJC_CLASS___INAnswerCallIntent_ptr);
  uint64_t v12 = OUTLINED_FUNCTION_49( v11,  &lazy cache variable for type metadata for INAnswerCallIntentResponse,  &OBJC_CLASS___INAnswerCallIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v11, v12);
  static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v5, v11, v12);
  OUTLINED_FUNCTION_148_1();
  uint64_t v16 = RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v13, v14, v15);
  OUTLINED_FUNCTION_33_20(v16, (uint64_t)&v62);
  type metadata accessor for PhoneCallCommonCATs(0LL);
  OUTLINED_FUNCTION_168_0();
  uint64_t v17 = OUTLINED_FUNCTION_18_26(v1);
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_168_0();
  uint64_t v18 = OUTLINED_FUNCTION_18_26(v1);
  uint64_t v19 = OUTLINED_FUNCTION_69_1();
  uint64_t v20 = OUTLINED_FUNCTION_8_2(v19, 16LL);
  uint64_t v21 = OUTLINED_FUNCTION_91_4();
  uint64_t v22 = OUTLINED_FUNCTION_8_2(v21, 312LL);
  specialized PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( (uint64_t)&v62,  v17,  v18,  0LL,  0LL,  0LL,  0LL,  v20,  v22,  (uint64_t)specialized PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:),  v51,  v52,  v53,  v56,  v58,  v60,  v62,  *((uint64_t *)&v62 + 1),  v63,  v64,  v65,  v66);
  *(void *)&uint64_t v62 = v23;
  OUTLINED_FUNCTION_85_3(&lazy protocol witness table cache variable for type PhoneTCCFlowStrategy<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance PhoneTCCFlowStrategy<A, B>);
  static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(&v62, v21, v12, v24);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_148_1();
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v25, v26, v27);
  OUTLINED_FUNCTION_26_22();
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v28 = static CallStateNotificationManager.instance;
  uint64_t v29 = OUTLINED_FUNCTION_43_3();
  uint64_t v30 = (void *)OUTLINED_FUNCTION_8_2(v29, 216LL);
  outlined init with copy of AnswerCallOutputStrategy(v54, (uint64_t)&v62);
  *(void *)&uint64_t v62 = specialized IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)( &v62,  v67,  v28,  v30);
  OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type IncomingCallActionHandleIntentFlowStrategy<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance IncomingCallActionHandleIntentFlowStrategy<A, B>);
  uint64_t v32 = v31;
  OUTLINED_FUNCTION_3_8();
  static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(&v62, v29, v32);
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_148_1();
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter();
  uint64_t v33 = OUTLINED_FUNCTION_177_0();
  *(void *)&uint64_t v62 = OUTLINED_FUNCTION_8_2(v33, 16LL);
  OUTLINED_FUNCTION_170(&lazy protocol witness table cache variable for type IncomingCallActionContinueInAppStrategy<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance IncomingCallActionContinueInAppStrategy<A, B>);
  static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)(&v62, v33, v34);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_148_1();
  uint64_t v38 = RCHChildFlowProducersAsync.continueInAppFlowProducer.setter(v35, v36, v37);
  OUTLINED_FUNCTION_33_20(v38, (uint64_t)&v62);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneIntentRCHFlowStrategy<INAnswerCallIntent, INAnswerCallIntentResponse>);
  uint64_t v39 = OUTLINED_FUNCTION_8_2(v55, 64LL);
  outlined init with take of AppSelectionSignalComponent(&v62, v39 + 16);
  *(void *)(v39 + 56) = v5;
  uint64_t v40 = v3[3];
  uint64_t v41 = v3[4];
  OUTLINED_FUNCTION_49_0(v3);
  uint64_t v42 = v8;
  uint64_t v43 = v5;
  uint64_t v44 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v41 + 104);
  OUTLINED_FUNCTION_29_3();
  v44(&v62, v40, v41);
  uint64_t v45 = v64;
  uint64_t v46 = v65;
  OUTLINED_FUNCTION_49_0(&v62);
  *(void *)&v67[0] = v39;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v0, v42);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INAnswerCallIntent, INAnswerCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v47);
  uint64_t v48 = RCHChildFlowFactory.init(producers:)(v57);
  uint64_t v49 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneIntentRCHFlowStrategy<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance PhoneIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneIntentRCHFlowStrategy<INAnswerCallIntent, INAnswerCallIntentResponse>);
  v49(v67, v48, v43, v61, v55, v50, v45, v46);
  OUTLINED_FUNCTION_16_3();
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v0, v42);
  OUTLINED_FUNCTION_50_2();
  __swift_destroy_boxed_opaque_existential_1(&v62);
  OUTLINED_FUNCTION_7_5();
}

void specialized IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)()
{
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INAnswerCallIntent, INAnswerCallIntentResponse>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_88_4(v9);
  v7[0] = v2;
  uint64_t v4 = OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INAnswerCallIntent, INAnswerCallIntentResponse>> and conformance AnyValueFlow<A>);
  *uint64_t v0 = Flow.eraseToAnyValueFlow()(v4);
  uint64_t v5 = swift_storeEnumTagMultiPayload(v0, v3, 2LL);
  OUTLINED_FUNCTION_29_0(v5, (uint64_t)&v8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v6);
  outlined init with copy of AnswerCallOutputStrategy((uint64_t)v9, (uint64_t)v7);
  specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)();
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_90();
  outlined destroy of AnswerCallOutputStrategy((uint64_t)v9);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

uint64_t specialized static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v50)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t *, void *, uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, _UNKNOWN **);
  __int128 v72[2];
  uint64_t v66 = a2;
  uint64_t v63 = a1;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v65 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v64 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent,  &OBJC_CLASS___INIdentifyIncomingCallerIntent_ptr);
  uint64_t v13 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntentResponse,  &OBJC_CLASS___INIdentifyIncomingCallerIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v12, v13);
  uint64_t v14 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(a3, v12, v13);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v14, v15, v8);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a4, (uint64_t)&v67);
  uint64_t v16 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v18 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v18);
  uint64_t v19 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v20 = type metadata accessor for AppInfoBuilder();
  uint64_t v21 = swift_allocObject(v20, 16LL, 7LL);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneTCCFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v23 = swift_allocObject(v22, 312LL, 7LL);
  specialized PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( (uint64_t)&v67,  v17,  v19,  0LL,  0LL,  0LL,  0LL,  v21,  v23,  (uint64_t)specialized PhoneCallStrategy.init(catFamily:catPatternFamily:responseGenerator:appInfoBuilder:deviceState:),  v61,  (uint64_t)v62,  v63,  v64,  v65,  v66,  v67,  *((uint64_t *)&v67 + 1),  v68,  v69,  v70,  v71);
  uint64_t v25 = v24;
  *(void *)&uint64_t v67 = v24;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneTCCFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneTCCFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneTCCFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v27 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(&v67, v22, v13, v26);
  uint64_t v29 = v28;
  swift_release(v25);
  RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.setter(v27, v29, v8);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a4, (uint64_t)v72);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v30 = static CallStateNotificationManager.instance;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallActionHandleIntentFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v32 = (void *)swift_allocObject(v31, 216LL, 7LL);
  outlined init with copy of IdentifyIncomingCallerOutputStrategy(v63, (uint64_t)&v67);
  uint64_t v33 = specialized IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)( (uint64_t)&v67,  v72,  v30,  v32);
  *(void *)&uint64_t v67 = v33;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type IncomingCallActionHandleIntentFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallActionHandleIntentFlowStrategy<A, B>,  &demangling cache variable for type metadata for IncomingCallActionHandleIntentFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v35 = v34;
  swift_retain();
  uint64_t v36 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(&v67, v31, v35);
  uint64_t v38 = v37;
  swift_release(v33);
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter(v36, v38, v8);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallActionContinueInAppStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v40 = swift_allocObject(v39, 16LL, 7LL);
  *(void *)&uint64_t v67 = v40;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type IncomingCallActionContinueInAppStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallActionContinueInAppStrategy<A, B>,  &demangling cache variable for type metadata for IncomingCallActionContinueInAppStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v42 = static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)( &v67,  v39,  v41);
  uint64_t v44 = v43;
  swift_release(v40);
  RCHChildFlowProducersAsync.continueInAppFlowProducer.setter(v42, v44, v8);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a4, (uint64_t)&v67);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneIntentRCHFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v45 = swift_allocObject(v63, 64LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(&v67, v45 + 16);
  *(void *)(v45 + 56) = a3;
  uint64_t v46 = a4[3];
  uint64_t v47 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v46);
  uint64_t v48 = v8;
  uint64_t v49 = a3;
  uint64_t v50 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v47 + 104);
  swift_retain();
  v50(&v67, v46, v47);
  uint64_t v51 = v69;
  uint64_t v52 = v70;
  uint64_t v62 = __swift_project_boxed_opaque_existential_1(&v67, v69);
  *(void *)&v72[0] = v45;
  __int128 v53 = v64;
  uint64_t v54 = v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v64, v11, v48);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
  uint64_t v56 = RCHChildFlowFactory.init(producers:)(v53);
  uint64_t v57 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PhoneIntentRCHFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for PhoneIntentRCHFlowStrategy<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  uint64_t v59 = v57(v72, v56, v49, v66, v63, v58, v51, v52);
  swift_release(v56);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v48);
  swift_release(v45);
  __swift_destroy_boxed_opaque_existential_1(&v67);
  return v59;
}

uint64_t outlined init with copy of IdentifyIncomingCallerOutputStrategy(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t specialized IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  __chkstk_darwin();
  uint64_t v9 = (void *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __int128 v10 = *(_OWORD *)(a3 + 16);
  v18[0] = *(_OWORD *)a3;
  v18[1] = v10;
  void v18[2] = *(_OWORD *)(a3 + 32);
  char v19 = *(_BYTE *)(a3 + 48);
  v16[0] = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>> and conformance AnyValueFlow<A>,  &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>>);
  *uint64_t v9 = Flow.eraseToAnyValueFlow()(v11);
  swift_storeEnumTagMultiPayload(v9, v7, 2LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a4, (uint64_t)v17);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  outlined init with copy of IdentifyIncomingCallerOutputStrategy((uint64_t)v18, (uint64_t)v16);
  specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)();
  uint64_t v14 = v13;
  swift_release(a1);
  __swift_destroy_boxed_opaque_existential_1(a4);
  outlined destroy of IdentifyIncomingCallerOutputStrategy((uint64_t)v18);
  return v14;
}

uint64_t outlined destroy of IdentifyIncomingCallerOutputStrategy(uint64_t a1)
{
  return a1;
}

uint64_t outlined init with copy of AnswerCallOutputStrategy(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined destroy of AnswerCallOutputStrategy(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for PhoneCallFlowFactory.PhoneRCHFlowProducers( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for PhoneCallFlowFactory.PhoneRCHFlowProducers);
}

uint64_t sub_DD1C8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t partial apply for closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( void *a1, uint64_t a2)
{
  return closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2[4],  v2[2],  v2[3]);
}

uint64_t partial apply for closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( void *a1, uint64_t a2)
{
  return closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2[4],  v2[2],  v2[3]);
}

uint64_t sub_DD204()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t partial apply for specialized closure #1 in static CallingIntentContinueInAppFlow.makeProducer(sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return specialized closure #1 in static CallingIntentContinueInAppFlow.makeProducer(sharedGlobals:)(a1, a2, v2 + 16);
}

uint64_t partial apply for closure #1 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #1 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( a1,  a2,  (__objc2_prop_list **)(v2 + 16),  *(void *)(v2 + 56));
}

uint64_t outlined init with copy of ResponseMode?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResponseMode?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_DD288()
{
  if (v0[7]) {
    swift_release(v0[8]);
  }
  swift_release(v0[9]);
  uint64_t v1 = OUTLINED_FUNCTION_142_1();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t partial apply for closure #3 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #3 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( a1,  a2,  v2 + 16,  *(uint64_t (**)(uint64_t, uint64_t))(v2 + 56),  *(void *)(v2 + 64),  *(void *)(v2 + 72));
}

uint64_t sub_DD2CC()
{
  return objectdestroy_21Tm_0(64LL);
}

uint64_t partial apply for closure #2 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #2 in static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)( a1,  a2,  v2 + 16,  *(void **)(v2 + 56));
}

ValueMetadata *type metadata accessor for PhoneCallFlowFactory()
{
  return &type metadata for PhoneCallFlowFactory;
}

uint64_t type metadata completion function for PhoneCallFlowFactory.PhoneRCHFlowProducers(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = type metadata accessor for RCHChildFlowProducers(319LL, v2, v3);
  if (v5 <= 0x3F)
  {
    v7[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for RCHChildFlowProducersAsync(319LL, v2, v3);
    if (v6 <= 0x3F)
    {
      v7[1] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 0LL, 2LL, v7, a1 + 32);
      return 0LL;
    }
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneCallFlowFactory.PhoneRCHFlowProducers( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v14);
  }

  else
  {
    uint64_t v7 = *(void *)(a3 + 16);
    uint64_t v8 = *(void *)(a3 + 24);
    uint64_t v9 = type metadata accessor for RCHChildFlowProducers(0LL, v7, v8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16LL))(a1, a2, v9);
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16LL))(v11, v12, v13);
  }

  return a1;
}

uint64_t destroy for PhoneCallFlowFactory.PhoneRCHFlowProducers(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = type metadata accessor for RCHChildFlowProducers(0LL, v4, v5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t v8 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v4, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
}

uint64_t initializeWithCopy for PhoneCallFlowFactory.PhoneRCHFlowProducers( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = type metadata accessor for RCHChildFlowProducers(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for PhoneCallFlowFactory.PhoneRCHFlowProducers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = type metadata accessor for RCHChildFlowProducers(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24LL))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24LL))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for PhoneCallFlowFactory.PhoneRCHFlowProducers( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = type metadata accessor for RCHChildFlowProducers(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PhoneCallFlowFactory.PhoneRCHFlowProducers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = type metadata accessor for RCHChildFlowProducers(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40LL))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for RCHChildFlowProducersAsync(0LL, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40LL))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneCallFlowFactory.PhoneRCHFlowProducers( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DD738);
}

uint64_t sub_DD738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_138_0();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_139_0();
    uint64_t v8 = a1 + *(int *)(a3 + 36);
  }

  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for PhoneCallFlowFactory.PhoneRCHFlowProducers( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DD7B0);
}

uint64_t sub_DD7B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_138_0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_139_0();
    uint64_t v10 = a1 + *(int *)(a4 + 36);
  }

  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void *specialized IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)( uint64_t a1, __int128 *a2, uint64_t a3, void *a4)
{
  a4[5] = &type metadata for IdentifyIncomingCallerOutputStrategy;
  a4[6] = &protocol witness table for IdentifyIncomingCallerOutputStrategy;
  uint64_t v8 = swift_allocObject(&unk_3FCB70, 65LL, 7LL);
  a4[2] = v8;
  __int128 v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(a1 + 48);
  a4[10] = type metadata accessor for CallStateNotificationManager();
  a4[11] = &protocol witness table for CallStateNotificationManager;
  a4[7] = a3;
  a4[20] = &type metadata for AudioSessionManager;
  a4[21] = &protocol witness table for AudioSessionManager;
  a4[25] = &type metadata for SpringBoardServicesManager;
  a4[26] = &protocol witness table for SpringBoardServicesManager;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a4 + 12));
  return a4;
}

void *specialized IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)( const void *a1, __int128 *a2, uint64_t a3, void *a4)
{
  a4[5] = &type metadata for AnswerCallOutputStrategy;
  a4[6] = &protocol witness table for AnswerCallOutputStrategy;
  uint64_t v8 = swift_allocObject(&unk_3FCB48, 192LL, 7LL);
  a4[2] = v8;
  memcpy((void *)(v8 + 16), a1, 0xB0uLL);
  a4[10] = type metadata accessor for CallStateNotificationManager();
  a4[11] = &protocol witness table for CallStateNotificationManager;
  a4[7] = a3;
  a4[20] = &type metadata for AudioSessionManager;
  a4[21] = &protocol witness table for AudioSessionManager;
  a4[25] = &type metadata for SpringBoardServicesManager;
  a4[26] = &protocol witness table for SpringBoardServicesManager;
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a4 + 12));
  return a4;
}

uint64_t specialized FaceTimeMessageControllerFlow.init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, char a5, uint64_t a6, uint64_t a7, __int128 *a8, uint64_t a9)
{
  *(void *)(a9 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = type metadata accessor for FlowFinder();
  *(void *)(a9 + 120) = &protocol witness table for FlowFinder;
  *(void *)(a9 + 88) = a7;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  outlined init with take of AppSelectionSignalComponent(a4, a9 + 40);
  *(_BYTE *)(a9 + 168) = a5;
  *(void *)(a9 + 80) = a6;
  outlined init with take of AppSelectionSignalComponent(a8, a9 + 128);
  return a9;
}

uint64_t sub_DDA4C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_DDA78()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

uint64_t sub_DDB1C()
{
  uint64_t v1 = OUTLINED_FUNCTION_142_1();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_DDB48()
{
  uint64_t v1 = OUTLINED_FUNCTION_142_1();
  return swift_deallocObject(v1, v2, v3);
}

void partial apply for closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
}

uint64_t objectdestroyTm_4()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

void outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  OUTLINED_FUNCTION_2();
}

uint64_t sub_DDC08()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 72));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 112));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 152));
  return swift_deallocObject(v0, 192LL, 7LL);
}

uint64_t sub_DDC4C()
{
  return objectdestroy_21Tm_0(65LL);
}

uint64_t objectdestroy_21Tm_0(uint64_t a1)
{
  return swift_deallocObject(v1, a1, 7LL);
}

uint64_t partial apply for specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( a1,  a2,  v2 + 16);
}

{
  uint64_t v2;
  return specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( a1,  a2,  v2 + 16);
}

uint64_t OUTLINED_FUNCTION_2_35()
{
  return static CATOption.defaultMode.getter();
}

  ;
}

uint64_t OUTLINED_FUNCTION_9_36(uint64_t a1)
{
  return CATWrapperSimple.__allocating_init(options:globals:)(a1, 0LL);
}

uint64_t OUTLINED_FUNCTION_10_32@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized CallingIntentConfirmationFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v4,  *(void *)(v8 - 264),  *(void *)(v8 - 272),  *(void *)(v8 - 280),  *(void *)(v8 - 288),  v5,  v7,  v2,  v3,  v8 - 128,  v6,  a1,  a2);
}

uint64_t OUTLINED_FUNCTION_11_33@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized CallingIntentContactNeedsDisambiguationFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v4,  *(void *)(v8 - 264),  *(void *)(v8 - 272),  *(void *)(v8 - 280),  *(void *)(v8 - 288),  v2,  v6,  v5,  v3,  v8 - 128,  v7,  a1,  a2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_18_26(uint64_t a1)
{
  return CATWrapper.__allocating_init(options:globals:)(a1, 0LL);
}

void OUTLINED_FUNCTION_20_19(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_22_20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized CallingIntentHandleIntentFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v3,  *(void *)(v10 - 176),  *(void *)(v10 - 184),  v5,  v6,  v7,  v9,  v4,  v2,  v10 - 128,  v8,  a1,  a2);
}

void OUTLINED_FUNCTION_26_22()
{
}

uint64_t OUTLINED_FUNCTION_28_19()
{
  return static SiriKitEventSender.current.getter();
}

uint64_t OUTLINED_FUNCTION_32_17()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

void OUTLINED_FUNCTION_33_20(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_34_15()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_35_15()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_36_10()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_37_15()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_38_14()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_39_9()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

void OUTLINED_FUNCTION_43_7()
{
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_49_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_50_10()
{
  return v0 - 128;
}

  ;
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  *(void *)(v2 - 256) = v0;
  return v1;
}

void *OUTLINED_FUNCTION_58_5( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  return default argument 7 of static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)( (uint64_t *)va,  v14,  v13);
}

void OUTLINED_FUNCTION_59_6()
{
}

void OUTLINED_FUNCTION_60_8()
{
}

uint64_t OUTLINED_FUNCTION_62_4(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 128), a1 + 16);
}

void OUTLINED_FUNCTION_63_4()
{
}

void OUTLINED_FUNCTION_72_6( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, void *a24, void *a25)
{
}

uint64_t OUTLINED_FUNCTION_73_4(uint64_t result)
{
  *(void *)(v1 - outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = result;
  return result;
}

void OUTLINED_FUNCTION_74_5()
{
}

uint64_t OUTLINED_FUNCTION_75_4(uint64_t a1)
{
  return swift_getWitnessTable(a1, v1);
}

uint64_t OUTLINED_FUNCTION_76_6(void *a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_78_5()
{
  return type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
}

uint64_t OUTLINED_FUNCTION_82_4(uint64_t a1)
{
  *(void *)(v1 + 336) = a1;
  *(void *)(v1 + 376) = 0LL;
  *(_BYTE *)(v1 + 384) = 0;
  return v1 + 336;
}

uint64_t OUTLINED_FUNCTION_83_3()
{
  return swift_getAssociatedTypeWitness(255LL);
}

uint64_t OUTLINED_FUNCTION_84_4(uint64_t a1)
{
  return RCHChildFlowProducers.handleIntentFlowCompletion.setter(v1, v2, a1);
}

void OUTLINED_FUNCTION_85_3(unint64_t *a1)
{
}

uint64_t OUTLINED_FUNCTION_86_4(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 + 336), a1 + 16);
}

uint64_t OUTLINED_FUNCTION_87_4(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 168), a1 + 16);
}

void *OUTLINED_FUNCTION_88_4(void *a1)
{
  return memcpy(a1, v1, 0xB0uLL);
}

uint64_t OUTLINED_FUNCTION_90_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_91_4()
{
  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_92_3()
{
  return swift_unknownObjectRetain(v0);
}

void OUTLINED_FUNCTION_94_3()
{
}

uint64_t OUTLINED_FUNCTION_97_3()
{
  return Flow.eraseToAnyFlow()(v0);
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_100_1()
{
  return type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  return type metadata accessor for ResponseFactory(0LL);
}

uint64_t OUTLINED_FUNCTION_103_2()
{
  return RCHChildFlowProducersAsync.needsConfirmationFlowProducer.setter(v0, v1, *(void *)(v2 - 216));
}

uint64_t OUTLINED_FUNCTION_104_2(void *a1)
{
  a1[2] = v3;
  a1[3] = v2;
  a1[4] = v1;
  return swift_unknownObjectRetain(v1);
}

uint64_t OUTLINED_FUNCTION_105_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_106_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_110_3()
{
  return static CATOption.defaultMode.getter();
}

  ;
}

uint64_t OUTLINED_FUNCTION_113_2(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_115_1(uint64_t a1)
{
  *(void *)(v1 - 288) = a1;
  return type metadata accessor for PhoneCallCommonCATsSimple(0LL);
}

uint64_t OUTLINED_FUNCTION_116_2(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return type metadata accessor for PhoneCallCommonCATs(0LL);
}

uint64_t OUTLINED_FUNCTION_117_1(uint64_t a1)
{
  *(void *)(v1 - 264) = a1;
  return type metadata accessor for StartCallCATPatternsExecutor(0LL);
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_124_1()
{
  return RCHChildFlowFactory.init(producers:withFallbacks:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_125_2()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_126_1()
{
  return static CATOption.defaultMode.getter();
}

  ;
}

void OUTLINED_FUNCTION_129_1(uint64_t a1, uint64_t a2)
{
}

void OUTLINED_FUNCTION_133_1(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_137_1()
{
  return type metadata accessor for StartCallCATs(0LL);
}

uint64_t OUTLINED_FUNCTION_138_0()
{
  return type metadata accessor for RCHChildFlowProducers(0LL, v0, v1);
}

uint64_t OUTLINED_FUNCTION_139_0()
{
  return type metadata accessor for RCHChildFlowProducersAsync(0LL, v0, v1);
}

uint64_t OUTLINED_FUNCTION_140_1()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_141_1()
{
  return RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter(v0, v1, *(void *)(v2 - 216));
}

uint64_t OUTLINED_FUNCTION_143_0()
{
  return Flow.eraseToAnyFlow()(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_145_1()
{
  return v0 + 160;
}

char *OUTLINED_FUNCTION_147( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21)
{
  return &a21;
}

  ;
}

void *OUTLINED_FUNCTION_149_1()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 + 336), v1);
}

uint64_t OUTLINED_FUNCTION_150_0(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 128), a1 + 24);
}

void OUTLINED_FUNCTION_152_0()
{
}

void OUTLINED_FUNCTION_153_1()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_155(uint64_t a1)
{
  return RCHChildFlowProducersAsync.needsValueFlowProducer.setter(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_156_0(uint64_t a1)
{
  return RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  return swift_release_n(v0, 2LL);
}

void OUTLINED_FUNCTION_166()
{
}

uint64_t OUTLINED_FUNCTION_168_0()
{
  return static CATOption.defaultMode.getter();
}

void OUTLINED_FUNCTION_170(unint64_t *a1)
{
}

uint64_t OUTLINED_FUNCTION_172_0()
{
  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_173_0()
{
  return ParameterResolutionRecord.intent.getter(v0);
}

uint64_t OUTLINED_FUNCTION_174_0()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_175_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_176_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySsG_SSs5NeverOTg5012_sSsSSIeggo_f4SSs5D133OIegnrzr_TR109_s27PhoneCallFlowDelegatePlugin18FirstPartyChatGUID33_1DF85DF06AE2240D0AAD0827B3513709LLVyADSgSScfcSSSshcfu0_Tf3nnnpf_nTf1cn_n( uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v3 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v4 = *(v3 - 3);
      uint64_t v5 = *(v3 - 2);
      uint64_t v6 = *(v3 - 1);
      uint64_t v7 = *v3;
      swift_bridgeObjectRetain();
      uint64_t v8 = static String._fromSubstring(_:)(v4, v5, v6, v7);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v8;
      v12[5] = v10;
      v3 += 4;
      --v1;
    }

    while (v1);
  }

  return _swiftEmptyArrayStorage;
}

void *specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  while (v3)
  {
    uint64_t v4 = 4LL;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1LL)) {
        break;
      }
      uint64_t PartyChat = outlined bridged method (pb) of @objc INCallGroup.groupId.getter(v5);
      if (!v9) {
        goto LABEL_18;
      }
      FirstPartyChatGUID.init(_:)(PartyChat, v9, v24);
      uint64_t PartyChat = outlined init with take of FirstPartyChatGUID?((uint64_t)v24, (uint64_t)v25);
      if (!*((void *)&v25[0] + 1)) {
        goto LABEL_18;
      }
      __int128 v28 = v25[0];
      __int128 v29 = v25[1];
      uint64_t v11 = v26;
      uint64_t v10 = v27;
      swift_bridgeObjectRetain();
      specialized Set.contains(_:)(v11, v10, v35);
      char v13 = v12;
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        __int128 v33 = v28;
        outlined release of String?((uint64_t)&v33);
        __int128 v34 = v29;
        outlined release of String?((uint64_t)&v34);
        uint64_t PartyChat = swift_bridgeObjectRelease();
LABEL_18:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(PartyChat);
        unint64_t v17 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v16 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        if (v17 >= v16 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1LL);
        }
        uint64_t v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v6);
        specialized Array._endMutation()(v18, v19, v20, v21);
        goto LABEL_21;
      }

      __int128 v30 = v28;
      if ((void)v28 == 5459283LL && *((void *)&v28 + 1) == 0xE300000000000000LL)
      {
        outlined release of String?((uint64_t)&v30);
        __int128 v31 = v29;
        outlined release of String?((uint64_t)&v31);

        swift_bridgeObjectRelease();
      }

      else
      {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)( v28,  *((void *)&v28 + 1),  5459283LL,  0xE300000000000000LL,  0LL);
        outlined release of String?((uint64_t)&v30);
        __int128 v32 = v29;
        outlined release of String?((uint64_t)&v32);
        uint64_t PartyChat = swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          goto LABEL_18;
        }
      }

{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 256LL);
    id v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v8 = *v5;
      swift_bridgeObjectRetain();
      unint64_t v9 = v4(v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  v6[2] + 1LL,  1LL,  (uint64_t)v6);
        uint64_t v6 = v15;
      }

      char v13 = v6[2];
      char v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v12 > 1,  v13 + 1,  1LL,  (uint64_t)v6);
        uint64_t v6 = v16;
      }

      v5 += 2;
      v6[2] = v13 + 1;
      uint64_t v14 = &v6[2 * v13];
      v14[4] = v9;
      void v14[5] = v11;
      --v3;
    }

    while (v3);
    swift_release(a2);
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_release(a2);
    return _swiftEmptyArrayStorage;
  }

  return v6;
}

uint64_t static Transformer<>.transformer(device:groupResolver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_allocObject(&unk_3FCBC0, 96LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(v7, v3 + 16);
  outlined init with take of AppSelectionSignalComponent(v6, v3 + 56);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  return Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:),  v3,  v4);
}

uint64_t sub_DE714()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

void partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:)( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
}

void *static Transformer<>.resolveGroupNameIdentifier(groupName:device:groupResolver:)( uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v43 = a1;
  uint64_t v7 = type metadata accessor for Locale(0LL);
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ContactGroupResolverConfig(0LL);
  uint64_t v47 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = type metadata accessor for ContactGroupQuery(0LL);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  char v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  unint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v41 = a3;
    uint64_t v18 = swift_slowAlloc(12LL, -1LL);
    uint64_t v40 = a2;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    v48[0] = v20;
    uint64_t v42 = v9;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v50 = (void *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>.Type);
    uint64_t v22 = String.init<A>(describing:)(&v50, v21);
    uint64_t v50 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v48);
    a3 = v41;
    uint64_t v9 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v16, v17, "#%s Calling ContactGroupResolver.", v19, 0xCu);
    swift_arrayDestroy(v20, 1LL);
    swift_slowDealloc(v20, -1LL, -1LL);
    uint64_t v24 = v19;
    a2 = v40;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  uint64_t v25 = a4[3];
  uint64_t v26 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v25);
  swift_bridgeObjectRetain();
  ContactGroupQuery.init(name:)(v43, a2);
  uint64_t v27 = a3;
  uint64_t v28 = a3[3];
  uint64_t v29 = v27[4];
  __swift_project_boxed_opaque_existential_1(v27, v28);
  __int128 v30 = v45;
  dispatch thunk of DeviceState.siriLocale.getter(v28, v29);
  ContactGroupResolverConfig.init(locale:bundleIds:)(v30, _swiftEmptyArrayStorage);
  uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t))(v26 + 8))(v13, v11, v25, v26);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v46);
  uint64_t v32 = *(void *)(v31 + 16);
  if (v32)
  {
    uint64_t v50 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v32);
    uint64_t v33 = v31 + 32;
    do
    {
      outlined init with copy of SignalProviding(v33, (uint64_t)v48);
      closure #1 in static Transformer<>.resolveGroupNameIdentifier(groupName:device:groupResolver:)(v48, &v49);
      uint64_t v34 = __swift_destroy_boxed_opaque_existential_1(v48);
      uint64_t v35 = v49;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
      uint64_t v36 = v50[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v36);
      uint64_t v37 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v35);
      specialized ContiguousArray._endMutation()(v37);
      v33 += 40LL;
      --v32;
    }

    while (v32);
    uint64_t v38 = v50;
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }

  return v38;
}

void closure #1 in static Transformer<>.resolveGroupNameIdentifier(groupName:device:groupResolver:)( void *a1@<X0>, void *a2@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v44);
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v41);
  uint64_t v5 = outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v38);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc(42LL, -1LL);
    uint64_t v36 = swift_slowAlloc(128LL, -1LL);
    uint64_t v47 = v36;
    *(_DWORD *)uint64_t v8 = 136315906;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>.Type);
    uint64_t v10 = String.init<A>(describing:)(&v37, v9);
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v12 = v45;
    uint64_t v13 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v8 + 14, v8 + 22);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v44);
    *(_WORD *)(v8 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v16 = v42;
    uint64_t v17 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v8 + 24, v8 + 32);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v41);
    *(_WORD *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v20 = v39;
    uint64_t v21 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v8 + 34, v8 + 42);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v38);
    _os_log_impl(&dword_0, v6, v7, "#%s Found group: [name=%s, id=%s, bundleId=%s]", (uint8_t *)v8, 0x2Au);
    swift_arrayDestroy(v36, 4LL);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1(v44);
    __swift_destroy_boxed_opaque_existential_1(v41);
    __swift_destroy_boxed_opaque_existential_1(v38);
  }

  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
  uint64_t v28 = v27;
  uint64_t v29 = a1[3];
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  uint64_t v33 = v32;
  id v34 = objc_allocWithZone(&OBJC_CLASS___INCallGroup);
  @nonobjc INCallGroup.init(groupName:groupId:)(v26, v28, v31, v33);
  *a2 = v35;
}

void FirstPartyChatGUID.init(_:)(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v31 = a1;
  unint64_t v32 = a2;
  uint64_t v29 = 5459283LL;
  unint64_t v30 = 0xE300000000000000LL;
  unint64_t v6 = lazy protocol witness table accessor for type String and conformance String();
  unint64_t v7 = lazy protocol witness table accessor for type String and conformance String();
  uint64_t v8 = BidirectionalCollection<>.starts<A>(with:)(&v29, &type metadata for String, &type metadata for String, v6, v7);
  if ((v8 & 1) == 0)
  {
    uint64_t v31 = a1;
    unint64_t v32 = a2;
    uint64_t v29 = 0x6567617373654D69LL;
    unint64_t v30 = 0xE800000000000000LL;
    uint64_t v8 = BidirectionalCollection<>.starts<A>(with:)(&v29, &type metadata for String, &type metadata for String, v6, v7);
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v26 = type metadata accessor for Logger(0LL);
      uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
      uint64_t v22 = (os_log_s *)Logger.logObject.getter(v27);
      os_log_type_t v23 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v22, v23)) {
        goto LABEL_19;
      }
      uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v24 = 0;
      uint64_t v25 = "#FirstPartyChatGUID Unrecognized 1P chat group prefix.";
      goto LABEL_18;
    }
  }

  uint64_t v31 = 59LL;
  unint64_t v32 = 0xE100000000000000LL;
  __chkstk_darwin(v8);
  v28[2] = &v31;
  swift_bridgeObjectRetain();
  uint64_t v9 = specialized Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:)( 0x7FFFFFFFFFFFFFFFLL,  1u,  partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:),  (uint64_t)v28,  a1,  a2);
  swift_bridgeObjectRelease();
  uint64_t v10 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySsG_SSs5NeverOTg5012_sSsSSIeggo_f4SSs5D133OIegnrzr_TR109_s27PhoneCallFlowDelegatePlugin18FirstPartyChatGUID33_1DF85DF06AE2240D0AAD0827B3513709LLVyADSgSScfcSSSshcfu0_Tf3nnnpf_nTf1cn_n(v9);
  swift_bridgeObjectRelease();
  if (v10[2] == 3LL)
  {
    uint64_t v11 = 0LL;
    while (1)
    {
      unint64_t v12 = v10[v11 + 5];
      uint64_t v13 = v10[v11 + 4] & 0xFFFFFFFFFFFFLL;
      if ((v12 & 0x2000000000000000LL) != 0) {
        uint64_t v13 = HIBYTE(v12) & 0xF;
      }
      if (!v13) {
        break;
      }
      v11 += 2LL;
      if (v11 == 6)
      {
        uint64_t v15 = v10[4];
        uint64_t v14 = v10[5];
        uint64_t v17 = v10[6];
        uint64_t v16 = v10[7];
        uint64_t v19 = v10[8];
        uint64_t v18 = v10[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
  }

  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    uint64_t v25 = "#FirstPartyChatGUID Invalid parse for 1P chat group.";
LABEL_18:
    _os_log_impl(&dword_0, v22, v23, v25, v24, 2u);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

void key path getter for INCallGroup.groupId : INCallGroup(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 groupId];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    uint64_t v7 = v6;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v7 = 0LL;
  }

  *a2 = v5;
  a2[1] = v7;
}

uint64_t closure #1 in static Transformer<>.findSmsChatIdsToRemove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 2LL;
  do
  {
    unint64_t v5 = a3 & 0xC000000000000001LL;
    for (uint64_t i = 4LL; ; ++i)
    {
      if (v5) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a3);
      }
      else {
        id v7 = *(id *)(a3 + 8 * i);
      }
      uint64_t v8 = v7;
      if (__OFADD__(i - 4, 1LL))
      {
        __break(1u);
        goto LABEL_28;
      }

      outlined bridged method (pb) of @objc INCallGroup.groupId.getter(v7);
      if (v9) {
        break;
      }

LABEL_13:
      if (i - 3 == v4)
      {
LABEL_25:
        uint64_t v4 = 0LL;
        goto LABEL_26;
      }
    }

    v10._uint64_t countAndFlagsBits = 5459283LL;
    v10._object = (void *)0xE300000000000000LL;
    Swift::Bool v11 = String.hasPrefix(_:)(v10);

    swift_bridgeObjectRelease();
    if (!v11) {
      goto LABEL_13;
    }
    for (uint64_t j = 4LL; ; ++j)
    {
      id v13 = v5 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j - 4, a3) : *(id *)(a3 + 8 * j);
      uint64_t v14 = v13;
      if (__OFADD__(j - 4, 1LL)) {
        break;
      }
      outlined bridged method (pb) of @objc INCallGroup.groupId.getter(v13);
      if (v15)
      {
        v16._uint64_t countAndFlagsBits = 0x6567617373654D69LL;
        v16._object = (void *)0xE800000000000000LL;
        Swift::Bool v17 = String.hasPrefix(_:)(v16);

        swift_bridgeObjectRelease();
        if (v17)
        {
          uint64_t v4 = 1LL;
          goto LABEL_26;
        }
      }

      else
      {
      }

      if (j - 3 == v4) {
        goto LABEL_25;
      }
    }

uint64_t specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1LL;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL) & 1;
  }
}

uint64_t specialized Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:)( uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v58[3] = a4;
  if (a1 < 0)
  {
    uint64_t v43 = "Must take zero or more splits";
    uint64_t v44 = "Swift/Collection.swift";
    uint64_t v45 = 29LL;
    uint64_t v46 = 22LL;
    goto LABEL_42;
  }

  uint64_t v10 = swift_allocObject(&unk_3FCBE8, 24LL, 7LL);
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v50 = v10 + 16;
  uint64_t v55 = swift_allocObject(&unk_3FCC10, 24LL, 7LL);
  *(void *)(v55 + 16) = 15LL;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000LL) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000LL) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v31 = 7LL;
    if (((a6 >> 60) & ((a5 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v31 = 11LL;
    }
    specialized appendSubsequence #1 <A>(end:) in Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:)( v31 | (v11 << 16),  v55,  a2 & 1,  v10,  a5,  a6);
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release(v10);
    uint64_t v32 = v55;
LABEL_38:
    swift_release(v32);
    return (uint64_t)v14;
  }

  uint64_t v48 = v10;
  uint64_t v49 = a1;
  uint64_t v13 = 7LL;
  if (((a6 >> 60) & ((a5 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v13 = 11LL;
  }
  uint64_t v47 = v13 | (v12 << 16);
  unint64_t v56 = 4 * v12;
  uint64_t v14 = _swiftEmptyArrayStorage;
  unint64_t v15 = 15LL;
  unint64_t v16 = 15LL;
  unint64_t v17 = 15LL;
  while (1)
  {
    v58[0] = String.subscript.getter(v15, a5, a6);
    v58[1] = v18;
    char v19 = a3(v58);
    if (v6)
    {
      swift_release(v48);
      swift_release(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v14;
    }

    char v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      unint64_t v15 = String.index(after:)(v15, a5, a6);
      goto LABEL_23;
    }

    int v21 = (v16 >> 14 == v15 >> 14) & a2;
    if (v21 != 1)
    {
      if (v15 >> 14 < v16 >> 14) {
        goto LABEL_40;
      }
      uint64_t v22 = String.subscript.getter(v16, v15, a5, a6);
      uint64_t v51 = v24;
      uint64_t v52 = v23;
      uint64_t v53 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v14 = v29;
      }

      unint64_t v26 = v14[2];
      if (v26 >= v14[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v14 = v30;
      }

      v14[2] = v26 + 1;
      uint64_t v27 = &v14[4 * v26];
      v27[4] = v22;
      v27[5] = v53;
      v27[6] = v52;
      v27[7] = v51;
      *(void *)uint64_t v50 = v14;
    }

    uint64_t v28 = String.index(after:)(v15, a5, a6);
    unint64_t v15 = v28;
    *(void *)(v55 + 16) = v28;
    if ((v21 & 1) == 0 && v14[2] == v49) {
      break;
    }
    unint64_t v16 = v28;
    unint64_t v17 = v28;
LABEL_23:
    if (v56 == v15 >> 14) {
      goto LABEL_32;
    }
  }

  unint64_t v17 = v28;
  unint64_t v16 = v28;
LABEL_32:
  if (v56 == v16 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_37:
    swift_bridgeObjectRetain();
    swift_release(v48);
    uint64_t v32 = v55;
    goto LABEL_38;
  }

  if (v56 >= v17 >> 14)
  {
    uint64_t v33 = String.subscript.getter(v17, v47, a5, a6);
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v40 = *(void *)(*(void *)v50 + 16LL);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    uint64_t v14 = *(void **)v50;
    v14[2] = v40 + 1;
    uint64_t v41 = &v14[4 * v40];
    v41[4] = v33;
    v41[5] = v35;
    v41[6] = v37;
    v41[7] = v39;
    *(void *)uint64_t v50 = v14;
    goto LABEL_37;
  }

uint64_t specialized appendSubsequence #1 <A>(end:) in Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:)( unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = *(void *)(a2 + 16);
  int v8 = (v7 >> 14 == a1 >> 14) & a3;
  if (v8 == 1) {
    return v8 ^ 1u;
  }
  if (a1 >> 14 >= v7 >> 14)
  {
    uint64_t v10 = String.subscript.getter(v7, a1, a5, a6);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v17 = *(void *)(*(void *)(a4 + 16) + 16LL);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    uint64_t v18 = *(void *)(a4 + 16);
    *(void *)(v18 + 16) = v17 + 1;
    char v19 = (void *)(v18 + 32 * v17);
    void v19[4] = v10;
    void v19[5] = v12;
    v19[6] = v14;
    v19[7] = v16;
    return v8 ^ 1u;
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Range requires lowerBound <= upperBound",  39LL,  2LL,  "Swift/Range.swift",  17LL);
  __break(1u);
  return result;
}

const char *keypath_get_selector_groupId()
{
  return "groupId";
}

uint64_t specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, [INCallGroup]>);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0LL;
  if (!v11) {
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v14 << 6))
  {
    int v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }

    Hasher.init(_seed:)(v38, *(void *)(v8 + 40));
    String.hash(into:)(v38, v23, v22);
    uint64_t result = Hasher._finalize()();
    uint64_t v25 = -1LL << *(_BYTE *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1LL << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0LL;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_33;
        }
      }

      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    unint64_t v28 = __clz(__rbit64((-1LL << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
    *(void *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v28;
    uint64_t v33 = (void *)(*(void *)(v8 + 48) + 16 * v28);
    *uint64_t v33 = v23;
    v33[1] = v22;
    *(void *)(*(void *)(v8 + 56) + 8 * v28) = v24;
    ++*(void *)(v8 + 16);
    if (v11) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      goto LABEL_44;
    }
    if (v17 >= v35)
    {
      swift_release(v5);
      uint64_t v18 = (void *)(v5 + 64);
      goto LABEL_37;
    }

    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v36 + 8 * v17);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v35) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v36 + 8 * v14);
      if (!v19) {
        break;
      }
    }

uint64_t specialized _NativeDictionary.filter(_:)(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  unsigned int v4 = v3 & 0x3F;
  unint64_t v5 = (1LL << v3) + 63;
  uint64_t v6 = v5 >> 6;
  uint64_t v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v8 = (void *)((char *)v20 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0LL));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, v6, v8);
    specialized closure #1 in _NativeDictionary.filter(_:)((uint64_t)v8, v6, v2);
    if (v1) {
      swift_willThrow(v9, v10, v11, v12, v13, v14, v15, v16, v20[0], v20[1], v20[2], v20[3], v20[4], v20[5]);
    }
    else {
      return v9;
    }
  }

  else
  {
    int64_t v17 = (void *)swift_slowAlloc(v7, -1LL);
    specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, v6, v17);
    specialized closure #1 in _NativeDictionary.filter(_:)((uint64_t)v17, v6, v2);
    uint64_t v2 = v18;
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  return v2;
}

void specialized closure #1 in _NativeDictionary.filter(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = 0LL;
  int64_t v4 = 0LL;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v7 = -1LL;
  if (v6 < 64) {
    uint64_t v7 = ~(-1LL << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_20;
    }

    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1LL))
    {
      __break(1u);
      goto LABEL_26;
    }

    if (v12 >= v9) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }

uint64_t outlined init with take of FirstPartyChatGUID?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FirstPartyChatGUID?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)( uint64_t *a1, uint64_t *a2)
{
  return specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)( *a1,  a1[1],  *a2,  a2[1]) & 1;
}

uint64_t partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)( uint64_t *a1)
{
  return specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:)( a1,  *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_E0084()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_E00A8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t destroy for FirstPartyChatGUID(void *a1)
{
  return swift_bridgeObjectRelease(a1[5]);
}

void *initializeWithCopy for FirstPartyChatGUID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

void *assignWithCopy for FirstPartyChatGUID(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

void *assignWithTake for FirstPartyChatGUID(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[5];
  uint64_t v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FirstPartyChatGUID(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FirstPartyChatGUID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void *type metadata accessor for FirstPartyChatGUID()
{
  return &unk_3FCC90;
}

uint64_t OUTLINED_FUNCTION_0_40@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_1_42( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v9, v8, a4);
}

uint64_t static Transformer<>.callIdentifierTransformer(previousIntentResponse:)(void *a1)
{
  uint64_t v2 = swift_allocObject(&unk_3FCCC0, 24LL, 7LL);
  *(void *)(v2 + 16) = a1;
  id v3 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  return Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:),  v2,  v4);
}

void closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:)( void *a1@<X1>, uint64_t *a2@<X8>)
{
  if (!a1) {
    goto LABEL_18;
  }
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v5 = dynamic_cast_existential_1_conditional( (uint64_t)a1,  ObjectType,  (uint64_t)&protocol descriptor for IncomingCallIntentResponse);
  if (!v5) {
    goto LABEL_18;
  }
  uint64_t v7 = v6;
  uint64_t v36 = a2;
  uint64_t v8 = swift_getObjectType(v5);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  id v10 = a1;
  unsigned __int8 v11 = v9(v8, v7);
  uint64_t v12 = FollowUpOfferType.rawValue.getter(v11);
  uint64_t v14 = v13;
  if (v12 == 0xD000000000000013LL && v13 == 0x8000000000343630LL)
  {
    swift_bridgeObjectRelease(0x8000000000343630LL);
  }

  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, 0xD000000000000013LL, 0x8000000000343630LL, 0LL);
    swift_bridgeObjectRelease(v14);
    if ((v15 & 1) == 0)
    {
LABEL_13:

      uint64_t v21 = 0LL;
      unint64_t v23 = 0LL;
      a2 = v36;
      goto LABEL_19;
    }
  }

  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v8, v7);
  if (!v16) {
    goto LABEL_13;
  }
  uint64_t v17 = v16;
  a2 = v36;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 >= 0) {
      v16 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v16)) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }

  if (!*(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_17:

    swift_bridgeObjectRelease(v17);
LABEL_18:
    uint64_t v21 = 0LL;
    unint64_t v23 = 0LL;
    goto LABEL_19;
  }

LABEL_10:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v17 & 0xC000000000000001LL) == 0, v17);
  if ((v17 & 0xC000000000000001LL) != 0) {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v17);
  }
  else {
    id v18 = *(id *)(v17 + 32);
  }
  char v19 = v18;
  swift_bridgeObjectRelease(v17);
  id v20 = [v19 identifier];

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  unint64_t v23 = v22;

LABEL_19:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v24 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
  uint64_t v25 = swift_bridgeObjectRetain_n(v23, 2LL);
  unint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc(22LL, -1LL);
    uint64_t v29 = swift_slowAlloc(64LL, -1LL);
    uint64_t v39 = v29;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>.Type);
    uint64_t v31 = String.init<A>(describing:)(&v37, v30);
    unint64_t v33 = v32;
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v28 + 4, v28 + 12);
    swift_bridgeObjectRelease(v33);
    *(_WORD *)(v28 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    if (v23) {
      uint64_t v34 = v21;
    }
    else {
      uint64_t v34 = 7104878LL;
    }
    if (v23) {
      unint64_t v35 = v23;
    }
    else {
      unint64_t v35 = 0xE300000000000000LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v28 + 14, v28 + 22);
    OUTLINED_FUNCTION_1_43();
    swift_bridgeObjectRelease(v35);
    _os_log_impl(&dword_0, v26, v27, "#%s --> %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy(v29, 2LL);
    OUTLINED_FUNCTION_0_2(v29);
    OUTLINED_FUNCTION_0_2(v28);
  }

  else
  {

    OUTLINED_FUNCTION_1_43();
  }

  *a2 = v21;
  a2[1] = v23;
}

  char v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
  id v20 = swift_slowAlloc(32LL, -1LL);
  *(_DWORD *)char v19 = 136315138;
  unint64_t v35 = v20;
  if ((a3 & 0x100) != 0) {
    uint64_t v21 = " enableTelemetry=YES";
  }
  else {
    uint64_t v21 = "";
  }
  if ((a3 & 0x100) != 0) {
    unint64_t v22 = 20LL;
  }
  else {
    unint64_t v22 = 0LL;
  }
  unint64_t v23 = StaticString.description.getter(v21, v22, 2LL);
  uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v35);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v19 + 4, v19 + 12);
  swift_bridgeObjectRelease();
  uint64_t v25 = v33;
  specialized closure #1 in OSSignposter.withIntervalSignpost<A>(_:id:_:around:)( v19,  0xCu,  (uint64_t)v14,  (uint64_t)v10,  a1,  "%s",  v31);
  os_log_type_t v27 = v26;
  if (!v25)
  {
    swift_arrayDestroy(v20, 1LL);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v11);
  return v27;
}

  unint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
  unint64_t v23 = swift_slowAlloc(32LL, -1LL);
  *(_DWORD *)unint64_t v22 = 136315138;
  uint64_t v37 = v23;
  if ((a2 & 0x100) != 0) {
    uint64_t v24 = " enableTelemetry=YES";
  }
  else {
    uint64_t v24 = "";
  }
  if ((a2 & 0x100) != 0) {
    uint64_t v25 = 20LL;
  }
  else {
    uint64_t v25 = 0LL;
  }
  unint64_t v26 = StaticString.description.getter(v24, v25, 2LL);
  uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v37);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v22 + 4);
  swift_bridgeObjectRelease();
  closure #1 in OSSignposter.withIntervalSignpost<A>(_:id:_:around:)(v22, 0xCu, v5, v15, a1, "%s", a3);
  if (!v33)
  {
    swift_arrayDestroy(v23, 1LL);
    OUTLINED_FUNCTION_0_2(v23);
    OUTLINED_FUNCTION_0_2((uint64_t)v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(a5, v34, v35);
  }

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v15, v31);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v5, v16);
}

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0LL);
      uint64_t v54 = v2 + *(int *)(v53 + 24);
      uint64_t v55 = type metadata accessor for UUID(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8LL))(v54, v55);
      unint64_t v56 = v2 + *(int *)(v53 + 28);
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8LL))(v56, v57);
      return swift_bridgeObjectRelease();
    case 6:
      return swift_bridgeObjectRelease();
    case 8:
      swift_bridgeObjectRelease();
      uint64_t v58 = (int *)type metadata accessor for SearchCallHistoryModel(0LL);
      uint64_t v59 = v2 + v58[5];
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v61 = *(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8LL);
      v61(v59, v60);
      uint64_t v62 = v2 + v58[6];
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8LL))(v62, v63);
      v61(v2 + v58[7], v60);
      v61(v2 + v58[8], v60);
      uint64_t v64 = v2 + v58[9];
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8LL);
      v66(v64, v65);
      v66(v2 + v58[10], v65);
      uint64_t v67 = v58[11];
      goto LABEL_14;
    case 9:
      swift_bridgeObjectRelease();
      uint64_t v68 = (int *)type metadata accessor for PlayVoicemailModel(0LL);
      uint64_t v69 = v2 + v68[5];
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8LL))(v69, v70);
      uint64_t v71 = v2 + v68[6];
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v73 = *(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8LL);
      v73(v71, v72);
      v73(v2 + v68[7], v72);
      uint64_t v67 = v68[8];
LABEL_14:
      uint64_t v74 = v2 + v67;
      uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v75 - 8) + 8LL))(v74, v75);
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v76 = (int *)type metadata accessor for SingleResultVoicemailModel(0LL);
      uint64_t v77 = v2 + v76[13];
      char v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8LL);
      v79(v77, v78);
      v79(v2 + v76[14], v78);
      v2 += v76[15];
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
      v5(v2, v4);
      uint64_t v6 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
      uint64_t v7 = v2 + v6[5];
      uint64_t v8 = &demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>;
LABEL_16:
      uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(v8);
      uint64_t v81 = *(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8LL);
      v81(v7, v80);
      v5(v2 + v6[6], v4);
      v81(v2 + v6[7], v80);
      return swift_bridgeObjectRelease();
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_type_t v82 = v2 + *(int *)(type metadata accessor for SingleResultCallHistoryModel(0LL) + 36);
      uint64_t v83 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
      uint64_t result = __swift_getEnumTagSinglePayload(v82, 1LL, (uint64_t)v83);
      if ((_DWORD)result) {
        return result;
      }
      uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v85 = *(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8LL);
      v85(v82, v84);
      uint64_t v86 = v82 + v83[5];
      uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v88 = *(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8LL);
      v88(v86, v87);
      v85(v82 + v83[6], v84);
      v88(v82 + v83[7], v87);
      return swift_bridgeObjectRelease();
    default:
      return result;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v50 & 0xC000000000000001LL) == 0, v50);
  uint64_t v140 = v47;
  uint64_t v141 = v42;
  if ((v50 & 0xC000000000000001LL) != 0) {
    uint64_t v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v50);
  }
  else {
    uint64_t v51 = *(id *)(v50 + 32);
  }
  uint64_t v52 = v51;
  uint64_t v146 = *(void **)(v24 + 448);
  uint64_t v53 = *(void *)(v24 + 392);
  v133 = *(void *)(v24 + 384);
  uint64_t v55 = *(void *)(v24 + 368);
  uint64_t v54 = *(void *)(v24 + 376);
  v136 = *(void *)(v24 + 360);
  uint64_t v137 = *(void *)(v24 + 352);
  v138 = *(void *)(v24 + 320);
  unint64_t v56 = *(void **)(v24 + 296);
  OUTLINED_FUNCTION_13_1();
  uint64_t v57 = [v52 fullPrint];

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
  uint64_t v134 = v59;
  uint64_t v135 = v58;

  swift_storeEnumTagMultiPayload(v54, v55, 6LL);
  uint64_t v61 = v56[28];
  uint64_t v60 = v56[29];
  OUTLINED_FUNCTION_42(v56 + 25);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v60);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v24 + 56));
  uint64_t v63 = v62;
  __swift_destroy_boxed_opaque_existential_1((void *)(v24 + 56));
  OUTLINED_FUNCTION_278_1();
  swift_storeEnumTagMultiPayload(v54, v55, 7LL);
  uint64_t v64 = v56[29];
  OUTLINED_FUNCTION_49_0(v56 + 25);
  uint64_t v65 = OUTLINED_FUNCTION_67();
  v66(v65, v64);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v24 + 96));
  __swift_destroy_boxed_opaque_existential_1((void *)(v24 + 96));
  OUTLINED_FUNCTION_278_1();
  uint64_t v67 = (void *)(v53 + *(int *)(v133 + 32));
  *uint64_t v67 = 0xD000000000000011LL;
  v67[1] = 0x8000000000346B80LL;
  *(void *)(v24 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v140;
  *(void *)(v24 + 240) = v141;
  uint64_t v68 = Loggable.init(wrappedValue:)(v24 + 232, &type metadata for String);
  uint64_t v69 = OUTLINED_FUNCTION_49( v68,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor,  &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
  uint64_t v70 = v63;
  CodableAceObject.init(wrappedValue:)(v70, v69);
  *(void *)(v24 + 216) = v135;
  *(void *)(v24 + 224) = v134;
  Loggable.init(wrappedValue:)(v24 + 216, &type metadata for String);
  uint64_t v71 = OUTLINED_FUNCTION_274_2();
  CodableAceObject.init(wrappedValue:)(v71, v72);

  OUTLINED_FUNCTION_158_5(v53, v136);
  swift_storeEnumTagMultiPayload(v136, v137, 0LL);
  *(void *)(v24 + 200) = v133;
  OUTLINED_FUNCTION_118_6( &lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel,  v73,  v74,  (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
  *(void *)(v24 + 208) = v75;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v24 + 176));
  OUTLINED_FUNCTION_158_5(v53, (uint64_t)boxed_opaque_existential_1);
  static DialogPhase.confirmation.getter(v77);
  char v78 = swift_task_alloc(32LL);
  *(void *)(v78 + 16) = v24 + 176;
  OutputGenerationManifest.init(dialogPhase:_:)( v138,  partial apply for closure #1 in static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:),  v78);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_11_12();
  uint64_t v79 = v56[35];
  uint64_t v80 = v56[36];
  OUTLINED_FUNCTION_49_0(v56 + 32);
  *(void *)(v24 + 160) = v137;
  OUTLINED_FUNCTION_118_6( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  v81,  v82,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  *(void *)(v24 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = v83;
  uint64_t v84 = __swift_allocate_boxed_opaque_existential_1((void *)(v24 + 136));
  OUTLINED_FUNCTION_158_5(v136, (uint64_t)v84);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v86 = OUTLINED_FUNCTION_8_2(v85, 40LL);
  *(_OWORD *)(v86 + 16) = xmmword_31FE60;
  *(void *)(v86 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v146;
  v148 = v86;
  specialized Array._endMutation()(v86, v87, v88, v89);
  uint64_t v90 = v148;
  *(void *)(v24 + 520) = v148;
  uint64_t v91 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
  uint64_t v92 = v146;
  uint64_t v93 = (void *)swift_task_alloc(v91);
  *(void *)(v24 + 528) = v93;
  void *v93 = v24;
  v93[1] = PhoneAppResolutionOnDeviceFlowStrategy.makeConfirmationPrompt(app:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( *(void *)(v24 + 280),  v24 + 136,  v90,  *(void *)(v24 + 344),  v79,  v80,  v94,  v95,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

    char v19 = *(void *)(v36 + 72);
    id v20 = *(void *)(v36 + 80);
    __swift_project_boxed_opaque_existential_1(v11, v19);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 72))(v19, v20);
    (*(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)v21 + 192LL))(&v37, a1);
    swift_release(v21);
    if (v38)
    {
      outlined init with take of AppSelectionSignalComponent(&v37, (uint64_t)v39);
      uint64_t v14 = (void *)ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:parse:)(v39);
      uint64_t v17 = v22;
      __swift_destroy_boxed_opaque_existential_1(v39);
      goto LABEL_14;
    }

    outlined destroy of UUID?((uint64_t)&v37, &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_13:
    uint64_t v14 = 0LL;
    uint64_t v17 = -1;
    goto LABEL_14;
  }

  OUTLINED_FUNCTION_3_67(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
  (*(void (**)(char *, void *, uint64_t))(v4 + 32))(v6, v10, v3);
  uint64_t v14 = ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)((uint64_t)v6);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_14:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  unint64_t v23 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_7_114();
  uint64_t v24 = OUTLINED_FUNCTION_7_114();
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
  if (os_log_type_enabled(v25, v27))
  {
    uint64_t v28 = swift_slowAlloc(22LL, -1LL);
    uint64_t v29 = swift_slowAlloc(64LL, -1LL);
    v39[0] = v29;
    *(_DWORD *)uint64_t v28 = 136315394;
    *(void *)&uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000022LL,  0x8000000000352030LL,  v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 8, v28 + 4);
    *(_WORD *)(v28 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    if (v17 == -1)
    {
      unint64_t v33 = 0xE300000000000000LL;
      uint64_t v31 = 7104878LL;
    }

    else
    {
      outlined copy of ContactDisambiguationPromptResponse(v14, v17);
      ContactDisambiguationPromptResponse.debugDescription.getter((uint64_t)v14, v17);
      uint64_t v31 = v30;
      unint64_t v33 = v32;
      OUTLINED_FUNCTION_3_125();
    }

    *(void *)&uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 8, v28 + 14);
    swift_bridgeObjectRelease();
    outlined consume of ContactDisambiguationPromptResponse?(v14, v17);
    OUTLINED_FUNCTION_3_125();
    _os_log_impl(&dword_0, v25, v27, "#ContactDisambiguationPromptResponseParser %s: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy(v29, 2LL);
    OUTLINED_FUNCTION_0_2(v29);
    OUTLINED_FUNCTION_0_2(v28);
  }

  else
  {
    outlined consume of ContactDisambiguationPromptResponse?(v14, v17);
    OUTLINED_FUNCTION_3_125();
  }

  return v14;
}

  OUTLINED_FUNCTION_6();
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v44 & 0xC000000000000001LL) == 0, v44);
  if ((v44 & 0xC000000000000001LL) != 0) {
    uint64_t v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v44);
  }
  else {
    uint64_t v45 = *(id *)(v44 + 32);
  }
  uint64_t v141 = v45;
  uint64_t v43 = swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v46 = OUTLINED_FUNCTION_46_7(v43, "unsupportedReason");
  if ((id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v46)
  {
    OUTLINED_FUNCTION_8_26();
    uint64_t v48 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v47 + 1600);
LABEL_20:
    OUTLINED_FUNCTION_165_4(v48);
    OUTLINED_FUNCTION_1_2(v141);
    return;
  }

  switch((unint64_t)v46)
  {
    case 2uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v48 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v49 + 1664);
      goto LABEL_20;
    case 3uLL:
      specialized static PhoneStartCallIntent.makeForSlotTemplating(intent:isRelationshipRequest:)();
      unint64_t v23 = v51;
      if (v141
        && (uint64_t v52 = [v141 personHandle]) != 0
        && (uint64_t v53 = v52, v54 = [v52 label], v53, v54))
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
        OUTLINED_FUNCTION_16_34();
        OUTLINED_FUNCTION_8_1();
        uint64_t v55 = v136;
        OUTLINED_FUNCTION_1_34(v31, (uint64_t)v53);
        unint64_t v56 = OUTLINED_FUNCTION_26_0();
        __swift_storeEnumTagSinglePayload(v55, 0LL, 1LL, v56);
        OUTLINED_FUNCTION_39();
      }

      else
      {
        uint64_t v77 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1(v136, v78, v79, v77);
      }

      uint64_t v80 = *(void *)(v23 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts);
      if (!v80) {
        goto LABEL_67;
      }
      uint64_t v81 = *(void *)(v80 + 24);
      if (v81 >> 62)
      {
        OUTLINED_FUNCTION_8_1();
        uint64_t v83 = OUTLINED_FUNCTION_61_1();
        if (v83) {
          goto LABEL_50;
        }
LABEL_66:
        OUTLINED_FUNCTION_39();
LABEL_67:
        uint64_t v85 = 0LL;
        goto LABEL_68;
      }

      os_log_type_t v82 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
      uint64_t v83 = OUTLINED_FUNCTION_8_1();
      if (!v82) {
        goto LABEL_66;
      }
LABEL_50:
      OUTLINED_FUNCTION_6_7(v83, (v81 & 0xC000000000000001LL) == 0);
      if ((v81 & 0xC000000000000001LL) != 0) {
        goto LABEL_78;
      }
      OUTLINED_FUNCTION_210_1();
LABEL_52:
      uint64_t v84 = OUTLINED_FUNCTION_39();
      uint64_t v85 = DialogPerson.personHandle.getter(v84);
      OUTLINED_FUNCTION_38_1();
LABEL_68:
      specialized INPersonContainingIntent.hasSiriMatches.getter(a22);
      v133[1] = v85;
      if ((v107 & 1) == 0)
      {
        uint64_t v115 = v141;
        uint64_t v114 = v141;
        goto LABEL_85;
      }

      if (!v141) {
        goto LABEL_84;
      }
      uint64_t v108 = [v141 siriMatches];
      if (!v108) {
        goto LABEL_84;
      }
      uint64_t v109 = v108;
      uint64_t v110 = OUTLINED_FUNCTION_68();
      uint64_t v111 = OUTLINED_FUNCTION_106_14(v110);

      if ((unint64_t)v111 >> 62)
      {
        if (v111 < 0) {
          uint64_t v116 = v111;
        }
        else {
          uint64_t v116 = v111 & 0xFFFFFFFFFFFFFF8LL;
        }
        OUTLINED_FUNCTION_6_3();
        uint64_t v117 = _CocoaArrayWrapper.endIndex.getter(v116);
        uint64_t v112 = OUTLINED_FUNCTION_62();
        if (v117) {
          goto LABEL_73;
        }
        goto LABEL_83;
      }

      if (!*(void *)((char *)&dword_10 + (v111 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_83:
        OUTLINED_FUNCTION_62();
LABEL_84:
        uint64_t v114 = 0LL;
        goto LABEL_85;
      }

uint64_t sub_E070C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void partial apply for closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:)( uint64_t *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_1_43()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

void PhoneCallConfirmationSemantics.canonicalName.getter(char a1)
{
  __asm { BR              X10 }

#error "E0804: call analysis failed (funcsize=24)"
void VoicemailVerbSemantics.canonicalName.getter(unsigned __int8 a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  VoicemailVerbSemantics.rawValue.getter(a1);
  String.uppercased()();
  OUTLINED_FUNCTION_39();
  uint64_t v1 = OUTLINED_FUNCTION_2_36();
  OUTLINED_FUNCTION_0_41(v1, v2, v3, v4, v5, v6, (uint64_t)&type metadata for String, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5_37();
  PhoneCallNLConstants.canonicalName.getter(0xEu);
  OUTLINED_FUNCTION_3_20();
  v11._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_10_33();
  OUTLINED_FUNCTION_15_27(v11);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_17_18();
}

void PhoneCallVerbSemantics.canonicalName.getter(unsigned __int8 a1)
{
  unint64_t v1 = OUTLINED_FUNCTION_2_36();
  OUTLINED_FUNCTION_0_41(v1, v2, v3, v4, v5, v6, (uint64_t)&type metadata for String, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5_37();
  PhoneCallNLConstants.canonicalName.getter(0xFu);
  OUTLINED_FUNCTION_3_20();
  v11._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_10_33();
  OUTLINED_FUNCTION_15_27(v11);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_17_18();
}

uint64_t PhoneCallHandleType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6C69616D65LL;
  }
  else {
    return 0x656E6F6870LL;
  }
}

Swift::String __swiftcall PhoneCallNLConstants.boundValue(_:)(Swift::String a1)
{
  Swift::String v2 = String.uppercased()();
  String.append(_:)(v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_24_0();
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

PhoneCallFlowDelegatePlugin::PhoneCallNLConstants_optional __swiftcall PhoneCallNLConstants.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallNLConstants.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallNLConstants_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallNLConstants@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallNLConstants_optional *a2@<X8>)
{
  result.value = PhoneCallNLConstants.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallNLConstants()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallNLConstants.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallConfirmationSemantics.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_E0A64 + 4 * byte_3246A4[a1]))( 7562617LL,  0xE300000000000000LL);
}

uint64_t sub_E0A64()
{
  return 28526LL;
}

uint64_t sub_E0A70()
{
  return 0x206D7269666E6F63LL;
}

uint64_t sub_E0A94()
{
  return 0x63207463656A6572LL;
}

PhoneCallFlowDelegatePlugin::PhoneCallConfirmationSemantics_optional __swiftcall PhoneCallConfirmationSemantics.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallConfirmationSemantics.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallConfirmationSemantics()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallConfirmationSemantics()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallConfirmationSemantics()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallConfirmationSemantics( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallConfirmationSemantics_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallConfirmationSemantics@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallConfirmationSemantics_optional *a2@<X8>)
{
  result.value = PhoneCallConfirmationSemantics.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallConfirmationSemantics()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallConfirmationSemantics.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t VoicemailVerbSemantics.associatedSemantic.getter()
{
  return 14LL;
}

uint64_t VoicemailVerbSemantics.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_E0B94 + 4 * byte_3246A8[a1]))( 2036427888LL,  0xE400000000000000LL);
}

uint64_t sub_E0B94()
{
  return 0x746165706572LL;
}

uint64_t sub_E0BA8()
{
  return 1885956979LL;
}

uint64_t sub_E0BB4()
{
  return 0x6573756170LL;
}

uint64_t sub_E0BC8()
{
  return 0x656D75736572LL;
}

PhoneCallFlowDelegatePlugin::VoicemailVerbSemantics_optional __swiftcall VoicemailVerbSemantics.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of VoicemailVerbSemantics.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance VoicemailVerbSemantics()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance VoicemailVerbSemantics()
{
}

void protocol witness for Hashable.hash(into:) in conformance VoicemailVerbSemantics()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VoicemailVerbSemantics(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::VoicemailVerbSemantics_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VoicemailVerbSemantics@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::VoicemailVerbSemantics_optional *a2@<X8>)
{
  result.value = VoicemailVerbSemantics.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VoicemailVerbSemantics()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = VoicemailVerbSemantics.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallVerbSemantics.associatedSemantic.getter()
{
  return 15LL;
}

uint64_t PhoneCallVerbSemantics.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_E0CB8 + 4 * byte_3246AD[a1]))( 1819042147LL,  0xE400000000000000LL);
}

uint64_t sub_E0CB8()
{
  return 0x636162206C6C6163LL;
}

uint64_t sub_E0CD4()
{
  return 0x656D697465636166LL;
}

uint64_t sub_E0D00()
{
  return 0x7072656B61657073LL;
}

uint64_t sub_E0D20()
{
  return 1684957542LL;
}

uint64_t sub_E0D2C()
{
  return 0x6C6169646572LL;
}

uint64_t sub_E0D40()
{
  return 0x79666972616C63LL;
}

uint64_t sub_E0D58()
{
  return 1684104562LL;
}

uint64_t sub_E0D64()
{
  return 0x6D7269666E6F63LL;
}

uint64_t sub_E0D7C()
{
  return 0x726577736E61LL;
}

uint64_t sub_E0D90()
{
  return 0x70755F676E6168LL;
}

uint64_t sub_E0DA8()
{
  return 0x6574656C6564LL;
}

uint64_t sub_E0DBC()
{
  return 1852403562LL;
}

PhoneCallFlowDelegatePlugin::PhoneCallVerbSemantics_optional __swiftcall PhoneCallVerbSemantics.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallVerbSemantics.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallVerbSemantics()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallVerbSemantics()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallVerbSemantics()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallVerbSemantics(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallVerbSemantics_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallVerbSemantics@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallVerbSemantics_optional *a2@<X8>)
{
  result.value = PhoneCallVerbSemantics.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallVerbSemantics()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallVerbSemantics.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional __swiftcall PhoneCallHandleType.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallHandleType.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallNLConstants and conformance PhoneCallNLConstants()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants;
  if (!lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallNLConstants,  &type metadata for PhoneCallNLConstants);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallConfirmationSemantics,  &type metadata for PhoneCallConfirmationSemantics);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics()
{
  unint64_t result = lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics;
  if (!lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoicemailVerbSemantics,  &type metadata for VoicemailVerbSemantics);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics;
  if (!lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallVerbSemantics,  &type metadata for PhoneCallVerbSemantics);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics);
  }

  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallHandleType()
{
  specialized == infix<A>(_:_:)();
}

unint64_t lazy protocol witness table accessor for type PhoneCallHandleType and conformance PhoneCallHandleType()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType;
  if (!lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallHandleType,  &type metadata for PhoneCallHandleType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType);
  }

  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallHandleType()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallHandleType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallHandleType(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallHandleType@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional *a2@<X8>)
{
  result.value = PhoneCallHandleType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallHandleType()
{
  char v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallHandleType.rawValue.getter(v1);
  v0[1] = 0xE500000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t getEnumTagSinglePayload for PhoneCallNLConstants(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 15) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for PhoneCallNLConstants(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF0) {
    return ((uint64_t (*)(void))((char *)&loc_E1138 + 4 * byte_3246C0[v4]))();
  }
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_E116C + 4 * byte_3246BB[v4]))();
}

uint64_t sub_E116C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E1174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE117CLL);
  }
  return result;
}

uint64_t sub_E1188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE1190LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional result = a2 + 15;
  return result;
}

uint64_t sub_E1194(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E119C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallNLConstants()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallConfirmationSemantics( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_E1200 + 4 * byte_3246CA[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_E1234 + 4 * byte_3246C5[v4]))();
}

uint64_t sub_E1234(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E123C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE1244LL);
  }
  return result;
}

uint64_t sub_E1250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE1258LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional result = a2 + 3;
  return result;
}

uint64_t sub_E125C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E1264(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallConfirmationSemantics()
{
}

uint64_t storeEnumTagSinglePayload for VoicemailVerbSemantics(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_E12C8 + 4 * byte_3246D4[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_E12FC + 4 * byte_3246CF[v4]))();
}

uint64_t sub_E12FC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E1304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE130CLL);
  }
  return result;
}

uint64_t sub_E1318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE1320LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional result = a2 + 4;
  return result;
}

uint64_t sub_E1324(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E132C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VoicemailVerbSemantics()
{
}

uint64_t getEnumTagSinglePayload for PhoneCallVerbSemantics(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 13) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for PhoneCallVerbSemantics(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF2) {
    return ((uint64_t (*)(void))((char *)&loc_E1418 + 4 * byte_3246DE[v4]))();
  }
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_E144C + 4 * byte_3246D9[v4]))();
}

uint64_t sub_E144C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E1454(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE145CLL);
  }
  return result;
}

uint64_t sub_E1468(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE1470LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional result = a2 + 13;
  return result;
}

uint64_t sub_E1474(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E147C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallVerbSemantics()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallHandleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_E14E0 + 4 * byte_3246E8[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E1514 + 4 * byte_3246E3[v4]))();
}

uint64_t sub_E1514(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E151C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE1524LL);
  }
  return result;
}

uint64_t sub_E1530(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE1538LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::PhoneCallHandleType_optional result = a2 + 1;
  return result;
}

uint64_t sub_E153C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E1544(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallHandleType()
{
}

uint64_t OUTLINED_FUNCTION_0_41( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( va1,  (uint64_t *)va,  0LL,  0LL,  0LL,  1LL,  a7,  a7);
}

unint64_t OUTLINED_FUNCTION_2_36()
{
  *(void *)(v2 - 48) = v0;
  *(void *)(v2 - 40) = v1;
  return lazy protocol witness table accessor for type String and conformance String();
}

uint64_t OUTLINED_FUNCTION_10_33()
{
  return String.uppercased()()._countAndFlagsBits;
}

void OUTLINED_FUNCTION_15_27(Swift::String a1)
{
}

void static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:)( uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v7 = v2;
  OutputGenerationManifest.init(dialogPhase:_:)( v4,  partial apply for closure #1 in static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:),  v6);
  a2(v3);
  OUTLINED_FUNCTION_16();
}

void closure #1 in static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:)( uint64_t a1, void *a2)
{
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  OutputGenerationManifest.responseViewId.setter(v7, v8);
  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
  uint64_t v9 = specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter(v9);
  uint64_t v10 = type metadata accessor for NLContextUpdate(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v10);
  OutputGenerationManifest.nlContextUpdate.setter(v4);
  OUTLINED_FUNCTION_16();
}

void partial apply for closure #1 in static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:)( uint64_t a1)
{
}

void static OutputGenerationManifest.simpleDialogWithButtonOutputManifest(responseViewId:)( uint64_t a1, uint64_t a2)
{
}

uint64_t closure #1 in static OutputGenerationManifest.simpleDialogWithButtonOutputManifest(responseViewId:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
}

uint64_t partial apply for closure #1 in static OutputGenerationManifest.simpleDialogWithButtonOutputManifest(responseViewId:)( uint64_t a1)
{
  return closure #1 in static OutputGenerationManifest.simpleDialogWithButtonOutputManifest(responseViewId:)( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24));
}

void static OutputGenerationManifest.simpleCompletionOutputManifest(responseViewId:)(uint64_t a1, uint64_t a2)
{
}

void static OutputGenerationManifest.simpleDialogWithButtonOutputManifest(responseViewId:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = v3;
  uint64_t v10 = a2;
  OutputGenerationManifest.init(dialogPhase:_:)(v4, a3, v8);
  OUTLINED_FUNCTION_16();
}

uint64_t closure #1 in static OutputGenerationManifest.simpleCompletionOutputManifest(responseViewId:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OutputGenerationManifest.responseViewId.setter(a2, a3);
}

uint64_t partial apply for closure #1 in static OutputGenerationManifest.simpleCompletionOutputManifest(responseViewId:)( uint64_t a1)
{
  return closure #1 in static OutputGenerationManifest.simpleCompletionOutputManifest(responseViewId:)( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24));
}

  ;
}

uint64_t OUTLINED_FUNCTION_2_37()
{
  return type metadata accessor for DialogPhase(0LL);
}

uint64_t RestrictionCheckGuardFlow.__allocating_init(parse:sharedGlobals:phoneCallCommonCATsSimple:)( uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  RestrictionCheckGuardFlow.init(parse:sharedGlobals:phoneCallCommonCATsSimple:)(a1, a2, a3);
  return v7;
}

uint64_t one-time initialization function for phoneCallCommand()
{
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAPhoneGroupIdentifier);
  uint64_t v6 = v0;
  v1._uint64_t countAndFlagsBits = 35LL;
  v1._object = (void *)0xE100000000000000LL;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(SAPhoneCallClassIdentifier);
  object = v2._object;
  String.append(_:)(v2);
  uint64_t result = swift_bridgeObjectRelease(object);
  static RestrictionCheckGuardFlow.phoneCallCommand = v5;
  unk_4779F0 = v6;
  return result;
}

uint64_t *RestrictionCheckGuardFlow.phoneCallCommand.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallCommand != -1) {
    swift_once( &one-time initialization token for phoneCallCommand,  one-time initialization function for phoneCallCommand);
  }
  return &static RestrictionCheckGuardFlow.phoneCallCommand;
}

uint64_t static RestrictionCheckGuardFlow.phoneCallCommand.getter()
{
  if (one-time initialization token for phoneCallCommand != -1) {
    swift_once( &one-time initialization token for phoneCallCommand,  one-time initialization function for phoneCallCommand);
  }
  uint64_t v0 = static RestrictionCheckGuardFlow.phoneCallCommand;
  swift_bridgeObjectRetain();
  return v0;
}

void one-time initialization function for voiceDialRestrictedInvocations()
{
  static RestrictionCheckGuardFlow.voiceDialRestrictedInvocations = v0;
}

uint64_t key path setter for RestrictionCheckGuardFlow.exitValue : RestrictionCheckGuardFlow( char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  *uint64_t v3 = v2;
  return result;
}

uint64_t RestrictionCheckGuardFlow.exitValue.getter()
{
  Swift::String v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue);
  swift_beginAccess( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue,  v3,  0LL,  0LL);
  return *v1;
}

uint64_t RestrictionCheckGuardFlow.init(parse:sharedGlobals:phoneCallCommonCATsSimple:)( uint64_t a1, __int128 *a2, uint64_t a3)
{
  *(_BYTE *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue) = 1;
  uint64_t v7 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_parse;
  uint64_t v8 = OUTLINED_FUNCTION_4_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))(v7, a1, v8);
  outlined init with take of AppSelectionSignalComponent( a2,  v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_sharedGlobals);
  *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_phoneCallCommonCATsSimple) = a3;
  return v3;
}

uint64_t RestrictionCheckGuardFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RestrictionCheckGuardFlow(0LL);
  uint64_t v5 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type RestrictionCheckGuardFlow and conformance RestrictionCheckGuardFlow,  type metadata accessor for RestrictionCheckGuardFlow,  (uint64_t)&protocol conformance descriptor for RestrictionCheckGuardFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t type metadata accessor for RestrictionCheckGuardFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for RestrictionCheckGuardFlow;
  if (!type metadata singleton initialization cache for RestrictionCheckGuardFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RestrictionCheckGuardFlow);
  }
  return result;
}

uint64_t RestrictionCheckGuardFlow.execute()(uint64_t a1)
{
  v2[32] = a1;
  v2[33] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[34] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DeviceRestrictions(0LL);
  v2[35] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[36] = v5;
  v2[37] = OUTLINED_FUNCTION_8_30(v5);
  v2[38] = swift_task_alloc(v1);
  uint64_t v6 = type metadata accessor for Restrictions(0LL);
  v2[39] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[40] = v7;
  v2[41] = OUTLINED_FUNCTION_8_30(v7);
  v2[42] = swift_task_alloc(v1);
  return swift_task_switch(RestrictionCheckGuardFlow.execute(), 0LL, 0LL);
}

uint64_t RestrictionCheckGuardFlow.execute()()
{
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v65 = *(void *)(v0 + 288);
  uint64_t v4 = (void *)(*(void *)(v0 + 264)
                + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_sharedGlobals);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v7);
  dispatch thunk of DeviceState.restrictedCommands.getter(v7, v8);
  uint64_t v9 = __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  uint64_t v10 = Restrictions.deviceRestrictions.getter(v9);
  static DeviceRestrictions.phoneFeaturesUnavailable.getter(v10);
  uint64_t v11 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type DeviceRestrictions and conformance DeviceRestrictions,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceRestrictions,  (uint64_t)&protocol conformance descriptor for DeviceRestrictions);
  uint64_t v12 = v1;
  uint64_t v13 = (os_log_s *)dispatch thunk of SetAlgebra.isSuperset(of:)(v2, v3, v11);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v14(v2, v3);
  v14(v12, v3);
  if ((v13 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v15, (uint64_t)static Logger.siriPhone);
    os_log_type_t v16 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v13, v16))
    {
      uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v17 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v13,  v16,  "#RestrictionCheckFlow Encountered phoneFeaturesUnavailable restriction, serving unsupported dialog.",  v17);
      OUTLINED_FUNCTION_0_2((uint64_t)v17);
    }

    uint64_t v18 = *(void *)(v0 + 336);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v19 = *(void *)(v0 + 320);
    uint64_t v21 = *(void *)(v0 + 264);

    unint64_t v22 = (_BYTE *)(v21 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue);
    OUTLINED_FUNCTION_3_3( v21 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue,  v0 + 200);
    *unint64_t v22 = 1;
    uint64_t v23 = swift_retain_n(v21, 2LL);
    static DialogPhase.error.getter(v23);
    outlined init with copy of SignalProviding((uint64_t)v4, v0 + 96);
    uint64_t v24 = type metadata accessor for DialogOutputFactory(0LL);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
    uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 112LL))(v25);
    OUTLINED_FUNCTION_38_1();
    *(void *)(v0 + 248) = v26;
    type metadata accessor for SimpleOutputFlowAsync(0LL);
    static ExecuteResponse.complete<A>(next:)(v0 + 248);
    swift_release(v21);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_release(v26);
    goto LABEL_23;
  }

  uint64_t v28 = *(void *)(v0 + 328);
  uint64_t v27 = *(void *)(v0 + 336);
  uint64_t v30 = *(void *)(v0 + 312);
  uint64_t v29 = *(void *)(v0 + 320);
  uint64_t v31 = v4[3];
  uint64_t v32 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v31);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
  uint64_t v33 = *(void *)(v0 + 80);
  uint64_t v34 = *(void *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v33);
  uint64_t v35 = DeviceState.isAuthenticatedForPhone.getter(v33, v34);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v27, v30);
  if ((v35 & 1) != 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8LL))(*(void *)(v0 + 328), *(void *)(v0 + 312));
LABEL_18:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v54 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v54, (uint64_t)static Logger.siriPhone);
    os_log_type_t v55 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v55))
    {
      unint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)unint64_t v56 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v35,  (os_log_type_t)v4,  "#RestrictionCheckFlow All restrictions passed!",  v56);
      OUTLINED_FUNCTION_0_2((uint64_t)v56);
    }

    uint64_t v57 = *(void *)(v0 + 264);

    uint64_t v58 = (_BYTE *)(v57 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue);
    uint64_t v59 = OUTLINED_FUNCTION_3_3( v57 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue,  v0 + 224);
    *uint64_t v58 = 0;
    static ExecuteResponse.complete()(v59);
    OUTLINED_FUNCTION_15_28();
    goto LABEL_23;
  }

  uint64_t v36 = v4;
  uint64_t v35 = Restrictions.restrictedCommands.getter();
  if (one-time initialization token for phoneCallCommand != -1) {
    swift_once( &one-time initialization token for phoneCallCommand,  one-time initialization function for phoneCallCommand);
  }
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v4 = *(void **)(v0 + 328);
  uint64_t v38 = static RestrictionCheckGuardFlow.phoneCallCommand;
  uint64_t v39 = unk_4779F0;
  swift_bridgeObjectRetain();
  specialized Set.contains(_:)(v38, v39, v35);
  LOBYTE(v38) = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  OUTLINED_FUNCTION_15_28();
  if ((v38 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v35 = *(void *)(v0 + 264);
  if ((RestrictionCheckGuardFlow.isVoiceDialRestrictedRequest()() & 1) == 0) {
    goto LABEL_18;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v42 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v42, (uint64_t)static Logger.siriPhone);
  os_log_type_t v43 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled((os_log_t)v35, v43))
  {
    uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v44 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v35,  v43,  "#RestrictionCheckFlow Encountered phoneCall command restriction, prompting user to unlock before continuing.",  v44);
    OUTLINED_FUNCTION_0_2((uint64_t)v44);
  }

  uint64_t v45 = *(void *)(v0 + 336);
  uint64_t v46 = *(void *)(v0 + 312);
  uint64_t v47 = *(void *)(v0 + 264);

  uint64_t v48 = (_BYTE *)(v47 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue);
  OUTLINED_FUNCTION_3_3( v47 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_exitValue,  v0 + 176);
  _BYTE *v48 = 0;
  uint64_t v49 = v36;
  uint64_t v50 = v36[3];
  uint64_t v51 = v36[4];
  __swift_project_boxed_opaque_existential_1(v49, v50);
  (*(void (**)(uint64_t, uint64_t))(v51 + 104))(v50, v51);
  uint64_t v53 = *(void *)(v0 + 160);
  uint64_t v52 = *(void *)(v0 + 168);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v53);
  SiriKitFlowFactoryProtocol.makeAuthenticationGuardFlow()(v53, v52);
  static ExecuteResponse.ongoing<A>(next:)();
  OUTLINED_FUNCTION_38_1();
  v41(v45, v46);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 136));
LABEL_23:
  uint64_t v60 = *(void *)(v0 + 328);
  uint64_t v62 = *(void *)(v0 + 296);
  uint64_t v61 = *(void *)(v0 + 304);
  uint64_t v63 = *(void *)(v0 + 272);
  swift_task_dealloc(*(void *)(v0 + 336));
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in RestrictionCheckGuardFlow.execute()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_task_switch(closure #1 in RestrictionCheckGuardFlow.execute(), 0LL, 0LL);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v6 = *v2;
  uint64_t v4 = swift_task_dealloc(*(void *)(*v2 + 24));
  if (!v1) {
    uint64_t v4 = a1;
  }
  return OUTLINED_FUNCTION_116_1(v4, *(uint64_t (**)(void))(v6 + 8));
}

uint64_t closure #1 in RestrictionCheckGuardFlow.execute()()
{
  uint64_t v1 = *(int **)(class metadata base offset for PhoneCallCommonCATsSimple
               + **(void **)(*(void *)(v0 + 16)
                             + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_phoneCallCommonCATsSimple)
               + 32);
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc(v1[1]);
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in RestrictionCheckGuardFlow.execute();
  return v4();
}

uint64_t RestrictionCheckGuardFlow.isVoiceDialRestrictedRequest()()
{
  uint64_t v1 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = OUTLINED_FUNCTION_4_3();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (void *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_parse;
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))( v8,  v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_parse,  v5);
  int v10 = (*(uint64_t (**)(void *, uint64_t))(v6 + 88))(v8, v5);
  if (v10 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_2;
  }
  if (v10 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 96));
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NLIntent, Parse.ServerConversion));
    swift_release(*(void *)((char *)v8 + *(int *)(v11 + 48)));
    type metadata accessor for NLIntent(0LL);
    uint64_t v12 = OUTLINED_FUNCTION_14_26();
    v14(v12, v13);
    goto LABEL_5;
  }

  if (v10 == enum case for Parse.directInvocation(_:))
  {
    OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 96));
    uint64_t v18 = (*(uint64_t (**)(char *, void *, uint64_t))(v2 + 32))(v4, v8, v1);
    if (one-time initialization token for voiceDialRestrictedInvocations != -1) {
      uint64_t v18 = swift_once( &one-time initialization token for voiceDialRestrictedInvocations,  one-time initialization function for voiceDialRestrictedInvocations);
    }
    uint64_t v19 = static RestrictionCheckGuardFlow.voiceDialRestrictedInvocations;
    uint64_t v20 = Parse.DirectInvocation.identifier.getter(v18);
    os_log_type_t v16 = (os_log_s *)v21;
    specialized Set.contains(_:)(v20, v21, v19);
    char v17 = v22;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }

  else
  {
    if (v10 == enum case for Parse.NLv4IntentOnly(_:))
    {
      OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 96));
      swift_unknownObjectRelease(*v8);
LABEL_5:
      uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_sharedGlobals + 24);
      uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_sharedGlobals + 32);
      __swift_project_boxed_opaque_existential_1( (void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_sharedGlobals),  v15);
      os_log_type_t v16 = (os_log_s *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 72))(v15, v5);
      (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v16 + 192LL))(v32, v9);
      OUTLINED_FUNCTION_38_1();
      outlined init with copy of PhoneCallNLIntent?((uint64_t)v32, (uint64_t)v30);
      char v17 = v31;
      if (v31)
      {
        os_log_type_t v16 = (os_log_s *)__swift_project_boxed_opaque_existential_1(v30, v31);
        char v17 = PhoneCallNLIntent.isOutgoingCall()();
        outlined destroy of PhoneCallNLIntent?((uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1(v30);
      }

      else
      {
        outlined destroy of PhoneCallNLIntent?((uint64_t)v32);
        outlined destroy of PhoneCallNLIntent?((uint64_t)v30);
      }

      goto LABEL_20;
    }

    if (v10 == enum case for Parse.uso(_:))
    {
LABEL_2:
      (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_5;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    os_log_type_t v16 = (os_log_s *)OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v24))
    {
      uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v25 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v16,  v24,  "#RestrictionCheckFlow Unknown parse type, not applying VoiceDial restriction",  v25);
      OUTLINED_FUNCTION_0_2((uint64_t)v25);
    }

    OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    char v17 = 0;
  }

uint64_t RestrictionCheckGuardFlow.deinit()
{
  uint64_t v1 = OUTLINED_FUNCTION_14_26();
  v2(v1);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_sharedGlobals));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin25RestrictionCheckGuardFlow_phoneCallCommonCATsSimple));
  return v0;
}

uint64_t RestrictionCheckGuardFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.exitValue.getter in conformance RestrictionCheckGuardFlow@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 112LL))();
  *a1 = result & 1;
  return result;
}

uint64_t partial apply for closure #1 in RestrictionCheckGuardFlow.execute()()
{
  uint64_t v2 = (void *)swift_task_alloc(dword_430C44);
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = partial apply for closure #1 in RestrictionCheckGuardFlow.execute();
  return closure #1 in RestrictionCheckGuardFlow.execute()(v0);
}

uint64_t partial apply for closure #1 in RestrictionCheckGuardFlow.execute()(uint64_t a1)
{
  return OUTLINED_FUNCTION_116_1(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_E2840@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 112LL))();
  *a2 = result & 1;
  return result;
}

uint64_t ObjC metadata update function for RestrictionCheckGuardFlow()
{
  return type metadata accessor for RestrictionCheckGuardFlow(0LL);
}

uint64_t type metadata completion function for RestrictionCheckGuardFlow(uint64_t a1)
{
  uint64_t result = type metadata accessor for Parse(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[3] = &unk_324B58;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t outlined init with copy of PhoneCallNLIntent?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLIntent?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_8_30@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(void *)(a1 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_14_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_28()
{
  return v2(v0, v1);
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATs::Properties_optional __swiftcall IdentifyIncomingCallerCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of IdentifyIncomingCallerCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_IdentifyIncomingCallerCATs_Properties_offerFollowUpIntent;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_IdentifyIncomingCallerCATs_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t IdentifyIncomingCallerCATsSimple.Properties.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD00000000000002ALL;
  }
  else {
    return 0xD00000000000002CLL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance IdentifyIncomingCallerCATs.Properties( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance IdentifyIncomingCallerCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance IdentifyIncomingCallerCATs.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance IdentifyIncomingCallerCATs.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance IdentifyIncomingCallerCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATs::Properties_optional *a2@<X8>)
{
  result.value = IdentifyIncomingCallerCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance IdentifyIncomingCallerCATs.Properties@<X0>( unint64_t *a1@<X8>)
{
  unint64_t result = IdentifyIncomingCallerCATsSimple.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t IdentifyIncomingCallerCATs.intentHandledResponse(incomingCallConcept:completion:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  swift_retain();
  OUTLINED_FUNCTION_23_19(0xD00000000000002CLL);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t IdentifyIncomingCallerCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)IdentifyIncomingCallerCATs.intentHandledResponse(incomingCallConcept:));
}

uint64_t IdentifyIncomingCallerCATs.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v2 = v1[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[5] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[6] = v6;
  *uint64_t v6 = v1;
  v6[1] = PhoneCallCommonCATs.orList(items:);
  return v8(v1[2], 0xD00000000000002CLL, 0x8000000000342D50LL, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t);
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *uint64_t v6 = v1;
  v6[1] = UnsupportedFlowCATs.unsupportedOnDeviceType(device:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD00000000000002CLL);
  return v9(v7);
}

uint64_t IdentifyIncomingCallerCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)IdentifyIncomingCallerCATs.intentHandledResponse(incomingCallConcept:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002CLL, 0x8000000000342D50LL, v3);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t IdentifyIncomingCallerCATs.offerFollowUpIntent(followUpOfferType:completion:)(uint64_t a1)
{
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1LL, v8);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_1(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  OUTLINED_FUNCTION_23_19(0xD00000000000002ALL);
  return swift_bridgeObjectRelease();
}

uint64_t IdentifyIncomingCallerCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t IdentifyIncomingCallerCATs.offerFollowUpIntent(followUpOfferType:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  v0[6] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = AnswerCallCATs.offerFollowUpIntent(followUpOfferType:);
  return v9(v0[2], 0xD00000000000002ALL, 0x8000000000342D80LL, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v7;
  *uint64_t v7 = v0;
  v7[1] = UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:);
  uint64_t v8 = OUTLINED_FUNCTION_21_19(0xD00000000000002ALL);
  return v10(v8);
}

uint64_t IdentifyIncomingCallerCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *boxed_opaque_existential_1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v4, 1LL, v8) == 1)
  {
    outlined destroy of SpeakableString?(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002ALL, 0x8000000000342D80LL, v6);
  return swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type IdentifyIncomingCallerCATs.Properties and conformance IdentifyIncomingCallerCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATs.Properties and conformance IdentifyIncomingCallerCATs.Properties;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATs.Properties and conformance IdentifyIncomingCallerCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for IdentifyIncomingCallerCATs.Properties,  &type metadata for IdentifyIncomingCallerCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATs.Properties and conformance IdentifyIncomingCallerCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for IdentifyIncomingCallerCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for IdentifyIncomingCallerCATs;
  if (!type metadata singleton initialization cache for IdentifyIncomingCallerCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IdentifyIncomingCallerCATs);
  }
  return result;
}

uint64_t type metadata completion function for IdentifyIncomingCallerCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for IdentifyIncomingCallerCATs);
}

uint64_t ObjC metadata update function for IdentifyIncomingCallerCATs()
{
  return type metadata accessor for IdentifyIncomingCallerCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for IdentifyIncomingCallerCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_E33C8 + 4 * byte_324B75[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E33FC + 4 * byte_324B70[v4]))();
}

uint64_t sub_E33FC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E3404(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE340CLL);
  }
  return result;
}

uint64_t sub_E3418(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE3420LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_E3424(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E342C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentifyIncomingCallerCATs.Properties()
{
  return &type metadata for IdentifyIncomingCallerCATs.Properties;
}

uint64_t static Transformer<>.transformer(sharedGlobals:previousIntent:app:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = swift_allocObject(&unk_3FD170, 64LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(v7, v4 + 16);
  *(void *)(v4 + 56) = a3;
  swift_retain();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallCapability(0LL);
  return Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:app:),  v4,  v5);
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:app:)@<X0>( void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = OUTLINED_FUNCTION_16_24();
  v9(v8);
  __swift_project_boxed_opaque_existential_1(&v318, v321);
  uint64_t v10 = OUTLINED_FUNCTION_16_24();
  char v12 = dispatch thunk of DeviceState.isWatch.getter(v10, v11);
  outlined init with copy of SignalProviding((uint64_t)&v318, (uint64_t)&v313);
  if ((v12 & 1) != 0)
  {
    uint64_t v13 = __swift_destroy_boxed_opaque_existential_1(&v313);
    OUTLINED_FUNCTION_25_26( v13,  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v240,  v250,  v260,  a4,  v279,  v288,  v297,  v298,  v299,  v300,  v301,  v302,  v303,  v304,  v305,  v306,  v307,  v308,  v309,  v310,  v311,  v312,  v313,  v314,  v315,  v316,  v317,  v318);
LABEL_4:
    HIDWORD(v261) = 1;
    goto LABEL_6;
  }

  __swift_project_boxed_opaque_existential_1(&v313, v316);
  uint64_t v21 = OUTLINED_FUNCTION_16_24();
  char v23 = dispatch thunk of DeviceState.isHomePod.getter(v21, v22);
  uint64_t v24 = __swift_destroy_boxed_opaque_existential_1(&v313);
  OUTLINED_FUNCTION_25_26( v24,  v25,  v26,  v27,  v28,  v29,  v30,  v31,  v240,  v250,  v260,  a4,  v279,  v288,  v297,  v298,  v299,  v300,  v301,  v302,  v303,  v304,  v305,  v306,  v307,  v308,  v309,  v310,  v311,  v312,  v313,  v314,  v315,  v316,  v317,  v318);
  if ((v23 & 1) != 0) {
    goto LABEL_4;
  }
  uint64_t v32 = OUTLINED_FUNCTION_13_18(&v308);
  DeviceState.isAnyCar.getter( v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v241,  v251,  v261,  v271,  v280,  v289,  v297,  v298,  v299,  v300,  v301,  v302);
  HIDWORD(v261) = v40;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(&v308);
  OUTLINED_FUNCTION_13_18(a1);
  Swift::Bool v41 = PhoneCallNLIntent.hasVideoCallSemantic()();
  uint64_t v42 = a2[3];
  uint64_t v43 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v42);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v43 + 152))(&v336, v42, v43);
  uint64_t v44 = *((void *)&v337 + 1);
  uint64_t v45 = v338;
  __swift_project_boxed_opaque_existential_1(&v336, *((uint64_t *)&v337 + 1));
  uint64_t v281 = v4;
  if (a3)
  {
    uint64_t v46 = App.appIdentifier.getter();
    uint64_t v48 = v47;
  }

  else
  {
    uint64_t v46 = 0LL;
    uint64_t v48 = 0LL;
  }

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 16))( &v323,  v46,  v48,  v44,  v45);
  uint64_t v49 = v326;
  uint64_t v50 = v328;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(&v336);
  outlined init with take of AnnotatedApp?( (uint64_t)&v323,  (uint64_t)v335,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v335[0])
  {
    __int128 v336 = v335[0];
    __int128 v337 = v335[1];
    __int128 v338 = v335[2];
    uint64_t v339 = *((void *)&v335[0] + 1);
    uint64_t v290 = *(void *)&v335[0];
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_76_4();
    OUTLINED_FUNCTION_22_4();
    OUTLINED_FUNCTION_36();
    outlined release of Set<String>(&v339);
    outlined init with take of AnnotatedApp?( (uint64_t)&v337,  (uint64_t)v340,  &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v340);
    uint64_t v341 = *((void *)&v338 + 1);
    outlined release of Set<String>(&v341);
  }

  else
  {
    uint64_t v290 = 0LL;
  }

  outlined init with copy of SignalProviding((uint64_t)&v318, (uint64_t)&v303);
  uint64_t v51 = &unk_42A000;
  if (!v41)
  {
    uint64_t v69 = __swift_destroy_boxed_opaque_existential_1(&v303);
    OUTLINED_FUNCTION_27_21(v69, v70, v71, v72, v73, v74, v75);
    goto LABEL_20;
  }

  uint64_t v53 = v306;
  uint64_t v52 = v307;
  __swift_project_boxed_opaque_existential_1(&v303, v306);
  uint64_t v54 = v53;
  uint64_t v51 = (void *)&unk_42A000;
  char v55 = dispatch thunk of DeviceState.isMac.getter(v54, v52);
  uint64_t v56 = __swift_destroy_boxed_opaque_existential_1(&v303);
  OUTLINED_FUNCTION_27_21(v56, v57, v58, v59, v60, v61, v62);
  if ((v55 & 1) == 0)
  {
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1(&v298);
    goto LABEL_21;
  }

  __swift_project_boxed_opaque_existential_1(&v298, v301);
  LOBYTE(v63) = OUTLINED_FUNCTION_12_38();
  __swift_destroy_boxed_opaque_existential_1(&v298);
  if ((v63 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_33();
    if (!v64) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v65 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v65, (uint64_t)static Logger.siriPhone);
    os_log_type_t v66 = OUTLINED_FUNCTION_41();
    if (!OUTLINED_FUNCTION_10(v66)) {
      goto LABEL_53;
    }
    uint64_t v67 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v67 = 0;
    uint64_t v68 = "Not setting callCapability because it's a Mac which may not have a camera to make video calls.";
LABEL_52:
    _os_log_impl(&dword_0, v49, (os_log_type_t)v63, v68, v67, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v67);
LABEL_53:

    uint64_t v80 = 0LL;
    char v99 = 1;
    goto LABEL_56;
  }

uint64_t sub_E3F3C()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:app:)@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:app:)( a1,  (void *)(v2 + 16),  *(void *)(v2 + 56),  a2);
}

uint64_t *outlined release of AnnotatedApp?(uint64_t *a1)
{
  return a1;
}

uint64_t outlined consume of AnnotatedApp?( uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result)
  {
    swift_release(result);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a6);
    return swift_bridgeObjectRelease(a4);
  }

  return result;
}

void OUTLINED_FUNCTION_3_46(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

void *OUTLINED_FUNCTION_9_37( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  *(void *)(v58 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a58;
  return outlined release of Set<String>((void *)(v58 - 72));
}

void *OUTLINED_FUNCTION_10_34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  *(void *)(v54 - 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a54;
  return outlined release of Set<String>((void *)(v54 - 112));
}

uint64_t OUTLINED_FUNCTION_11_34()
{
  return swift_arrayDestroy(v0, 1LL);
}

BOOL OUTLINED_FUNCTION_12_38()
{
  return PhoneCallNLIntent.hasAudioCallSemantic()();
}

  ;
}

uint64_t OUTLINED_FUNCTION_14_27( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
  return String.init<A>(describing:)(&a47, a1);
}

uint64_t OUTLINED_FUNCTION_15_29( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v12, v11, a4);
}

uint64_t OUTLINED_FUNCTION_16_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_27(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_23_20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with take of AnnotatedApp?(a1, v3 - 104, a3);
}

uint64_t OUTLINED_FUNCTION_24_17( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &a53);
}

uint64_t OUTLINED_FUNCTION_26_23( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return swift_release(a14);
}

uint64_t OUTLINED_FUNCTION_28_20()
{
  return outlined release of String?(v0 - 104);
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATsSimple::Properties_optional __swiftcall AnnounceCallBellCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of AnnounceCallBellCATsSimple.Properties.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

void AnnounceCallBellCATsSimple.Properties.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_38_2();
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceCallBellCATsSimple.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceCallBellCATsSimple.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceCallBellCATsSimple.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceCallBellCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceCallBellCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceCallBellCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = AnnounceCallBellCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceCallBellCATsSimple.Properties( void *a1@<X8>)
{
  *a1 = v3;
  a1[1] = v4;
}

uint64_t AnnounceCallBellCATsSimple.announceCallBellEnded()()
{
  __int16 v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *__int16 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000026LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

void AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  v2._rawValue = &outlined read-only object #0 of AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds.init(rawValue:);
  PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, a2, v2);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds( uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds( void *a1@<X8>)
{
  *a1 = 0x31676F6C616964LL;
  a1[1] = 0xE700000000000000LL;
}

uint64_t AnnounceCallBellCATsSimple.announceCallBellEndedAsLabels()()
{
  __int16 v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds();
  *__int16 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000026LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds,  &type metadata for AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds,  &type metadata for AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds);
  }

  return result;
}

uint64_t AnnounceCallBellCATsSimple.announceCallBellStarted()()
{
  __int16 v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *__int16 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000028LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

void AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  v2._rawValue = &outlined read-only object #0 of AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds.init(rawValue:);
  PhoneCallControlCATsSimple.UnsupportedCallControlDialogIds.init(rawValue:)(a1, a2, v2);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds( uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AnnounceCallBellCATsSimple.announceCallBellStartedAsLabels()()
{
  __int16 v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds();
  *__int16 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000028LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds,  &type metadata for AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds,  &type metadata for AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds and conformance AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds);
  }

  return result;
}

uint64_t AnnounceCallBellCATsSimple.informDoubleTapToEnd()()
{
  __int16 v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *__int16 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000025LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATsSimple::InformDoubleTapToEndDialogIds_optional __swiftcall AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x32676F6C616964LL;
  }
  else {
    return 0x6573557473726946LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATsSimple::InformDoubleTapToEndDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceCallBellCATsSimple::InformDoubleTapToEndDialogIds_optional *a2@<X8>)
{
  result.value = AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnnounceCallBellCATsSimple.informDoubleTapToEndAsLabels()()
{
  __int16 v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds();
  *__int16 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000025LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds,  &type metadata for AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds,  &type metadata for AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds and conformance AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds);
  }

  return result;
}

uint64_t AnnounceVoicemailCATsSimple.__allocating_init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AnnounceVoicemailCATsSimple.init(templateDir:options:globals:)(a1, a2, a3);
}

uint64_t AnnounceVoicemailCATsSimple.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of URL?(a1, (uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)(v11, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  outlined destroy of URL?(a1);
  return v12;
}

unint64_t lazy protocol witness table accessor for type AnnounceCallBellCATsSimple.Properties and conformance AnnounceCallBellCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.Properties and conformance AnnounceCallBellCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.Properties and conformance AnnounceCallBellCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATsSimple.Properties,  &type metadata for AnnounceCallBellCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATsSimple.Properties and conformance AnnounceCallBellCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceCallBellCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceCallBellCATsSimple;
  if (!type metadata singleton initialization cache for AnnounceCallBellCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceCallBellCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for AnnounceCallBellCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnnounceCallBellCATsSimple);
}

uint64_t ObjC metadata update function for AnnounceCallBellCATsSimple()
{
  return type metadata accessor for AnnounceCallBellCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for AnnounceCallBellCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_E49A4 + 4 * byte_324C55[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_E49D8 + 4 * asc_324C50[v4]))();
}

uint64_t sub_E49D8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E49E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE49E8LL);
  }
  return result;
}

uint64_t sub_E49F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE49FCLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_E4A00(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E4A08(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnnounceCallBellCATsSimple.Properties()
{
}

void type metadata accessor for AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AnnounceCallBellCATsSimple.AnnounceCallBellEndedDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_E4A70 + 4 * byte_324C5A[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_E4A90 + 4 * byte_324C5F[v4]))();
  }
}

_BYTE *sub_E4A70(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_E4A90(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_E4A98(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_E4AA0(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_E4AA8(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_E4AB0(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void type metadata accessor for AnnounceCallBellCATsSimple.AnnounceCallBellStartedDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_E4B14 + 4 * byte_324C69[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E4B48 + 4 * byte_324C64[v4]))();
}

uint64_t sub_E4B48(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E4B50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE4B58LL);
  }
  return result;
}

uint64_t sub_E4B64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE4B6CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_E4B70(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E4B78(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnnounceCallBellCATsSimple.InformDoubleTapToEndDialogIds()
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATs::Properties_optional __swiftcall PhoneCallDisplayTextCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  unint64_t v2 = _findStringSwitchCaseWithCache(cases:string:cache:)( &outlined read-only object #0 of PhoneCallDisplayTextCATs.Properties.init(rawValue:),  rawValue._countAndFlagsBits,  rawValue._object,  &outlined variable #1 of PhoneCallDisplayTextCATs.Properties.init(rawValue:));
  swift_bridgeObjectRelease(object);
  if (v2 >= 0x15) {
    return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATs::Properties_optional)21;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATs::Properties_optional)v2;
  }
}

uint64_t PhoneCallDisplayTextCATs.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_E4C20 + 4 * aQ[a1]))( 0xD000000000000028LL,  0x8000000000342E40LL);
}

uint64_t sub_E4C20()
{
  return v0 - 3;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATs.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATs.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATs.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATs::Properties_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATs.Properties@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = PhoneCallDisplayTextCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallDisplayTextCATs.addToCallButtonText(completion:)()
{
  return OUTLINED_FUNCTION_13(40LL);
}

uint64_t PhoneCallDisplayTextCATs.addToCallButtonText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *unint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(40LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(40LL, 0x8000000000342E40LL, (uint64_t)_swiftEmptyArrayStorage);
}

void PhoneCallDisplayTextCATs.appSettings(appName:completion:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;
  void *boxed_opaque_existential_1;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_8_2(v11, 80LL);
  *(_OWORD *)(v12 + 16) = xmmword_31D870;
  uint64_t v13 = (void *)(v12 + 48);
  *(void *)(v12 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(void *)(v12 + 40) = v3;
  outlined init with copy of SpeakableString?( v7,  v10,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v10, 1LL, v14);
  if (v15)
  {
    outlined destroy of SpeakableString?(v10, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v13 = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
  }

  else
  {
    *(void *)(v12 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v14;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))( boxed_opaque_existential_1,  v10,  v14);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t PhoneCallDisplayTextCATs.appSettings(appName:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATs.appSettings(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_14_28(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    OUTLINED_FUNCTION_65_4();
    OUTLINED_FUNCTION_23_3();
    uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(32LL);
  return OUTLINED_FUNCTION_12_22(v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

uint64_t PhoneCallDisplayTextCATs.appSettings(appName:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void PhoneCallDisplayTextCATs.appSettings(appName:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  OUTLINED_FUNCTION_29_2();
  uint64_t v17 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_8_2(v10, 80LL);
  *(_OWORD *)(v11 + 16) = xmmword_31D870;
  uint64_t v12 = (void *)(v11 + 48);
  *(void *)(v11 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v11 + 40) = v5;
  outlined init with copy of SpeakableString?(v9, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v13);
  if (v14)
  {
    outlined destroy of SpeakableString?(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v12 = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
  }

  else
  {
    *(void *)(v11 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
    __swift_allocate_boxed_opaque_existential_1(v12);
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_73_5(v15, v0, v16);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(v3, v17, v11);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

void PhoneCallDisplayTextCATs.callButtonText(label:completion:)()
{
}

uint64_t PhoneCallDisplayTextCATs.callButtonText(label:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATs.callButtonText(label:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_58_6(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_14_28(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    OUTLINED_FUNCTION_65_4();
    OUTLINED_FUNCTION_23_3();
    uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_58_6(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)PhoneCallDisplayTextCATs.callButtonText(label:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(35LL);
  return OUTLINED_FUNCTION_12_22(v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

uint64_t PhoneCallDisplayTextCATs.callButtonText(label:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void PhoneCallDisplayTextCATs.callButtonText(label:)()
{
}

uint64_t PhoneCallDisplayTextCATs.cancelButtonText(completion:)()
{
  return OUTLINED_FUNCTION_13(37LL);
}

uint64_t PhoneCallDisplayTextCATs.cancelButtonText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(37LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(37LL, 0x8000000000342ED0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.cancelledText(completion:)()
{
  return OUTLINED_FUNCTION_13(34LL);
}

uint64_t PhoneCallDisplayTextCATs.cancelledText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(34LL, 0x8000000000342F00LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.changeApp(completion:)()
{
  return OUTLINED_FUNCTION_13(30LL);
}

uint64_t PhoneCallDisplayTextCATs.changeApp()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(30LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(30LL, 0x8000000000342F30LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.changeText(completion:)()
{
  return OUTLINED_FUNCTION_13(31LL);
}

uint64_t PhoneCallDisplayTextCATs.changeText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(31LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(31LL, 0x8000000000342F50LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.emergencySashTitle(completion:)()
{
  return OUTLINED_FUNCTION_13(39LL);
}

uint64_t PhoneCallDisplayTextCATs.emergencySashTitle()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(39LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(39LL, 0x8000000000342F70LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.emergencyServices(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t PhoneCallDisplayTextCATs.emergencyServices()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x8000000000342FA0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.emergencyServicesPrompt(completion:)()
{
  return OUTLINED_FUNCTION_13(44LL);
}

uint64_t PhoneCallDisplayTextCATs.emergencyServicesPrompt()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(44LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(44LL, 0x8000000000342FD0LL, (uint64_t)_swiftEmptyArrayStorage);
}

void PhoneCallDisplayTextCATs.handleLabelAndType(personHandleLabel:label:type:completion:)()
{
  v27[2] = v0;
  v27[1] = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)v27 - v10;
  __chkstk_darwin();
  uint64_t v13 = (char *)v27 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 176LL);
  *(_OWORD *)(v15 + 16) = xmmword_320080;
  uint64_t v16 = (void *)(v15 + 48);
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v15 + 40) = 0x8000000000349740LL;
  outlined init with copy of SpeakableString?( v7,  (uint64_t)v13,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35((uint64_t)v13, 1LL, v17);
  if (v18)
  {
    outlined destroy of SpeakableString?( (uint64_t)v13,  &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v15 + 64) = 0u;
  }

  else
  {
    *(void *)(v15 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
    __swift_allocate_boxed_opaque_existential_1(v16);
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_73_5(v19, (uint64_t)v13, v20);
  }

  OUTLINED_FUNCTION_81_4();
  *(void *)(v15 + 80) = v21;
  *(void *)(v15 + 88) = v22;
  outlined init with copy of SpeakableString?( v5,  (uint64_t)v11,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_35((uint64_t)v11, 1LL, v17);
  if (v18)
  {
    outlined destroy of SpeakableString?( (uint64_t)v11,  &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v15 + 120) = v17;
    OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_73_5(v23, (uint64_t)v11, v24);
  }

  *(void *)(v15 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = 1701869940LL;
  *(void *)(v15 + 136) = 0xE400000000000000LL;
  outlined init with copy of SpeakableString?( v3,  (uint64_t)v9,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_35((uint64_t)v9, 1LL, v17);
  if (v18)
  {
    outlined destroy of SpeakableString?((uint64_t)v9, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v15 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = v17;
    OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_73_5(v25, (uint64_t)v9, v26);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000027LL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t PhoneCallDisplayTextCATs.handleLabelAndType(personHandleLabel:label:type:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v5[7] = OUTLINED_FUNCTION_18_0(v6);
  v5[8] = OUTLINED_FUNCTION_28();
  v5[9] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATs.handleLabelAndType(personHandleLabel:label:type:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 176LL);
  v0[10] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_320080;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v3 + 40) = 0x8000000000349740LL;
  OUTLINED_FUNCTION_29_16(v1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_63_5(v5);
  if ((_DWORD)v6 == 1)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
    uint64_t v7 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v7);
  }

  uint64_t v8 = v0[8];
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_29_16(v9, v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1LL, v1);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_1(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v3 + 120) = v1;
    uint64_t v12 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v12);
  }

  OUTLINED_FUNCTION_74_6();
  OUTLINED_FUNCTION_29_16(v13, v14, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v15 = OUTLINED_FUNCTION_82_5();
  if (v16)
  {
    OUTLINED_FUNCTION_41_1(v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = v1;
    uint64_t v17 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v17);
  }

  char v18 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[11] = v18;
  *char v18 = v0;
  v18[1] = PhoneCallDisplayTextCATs.handleLabelAndType(personHandleLabel:label:type:);
  OUTLINED_FUNCTION_40_10();
  return v20();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(void);
  uint64_t v2 = *(void *)(*(void *)v1 + 88LL);
  *(void *)(*(void *)v1 + 96LL) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    uint64_t v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_24_1(v7);
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t EnumTagSinglePayload;
  void *v17;
  void *v18;
  uint64_t (*v20)(unint64_t, unint64_t, uint64_t);
  uint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 176LL);
  v0[9] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_320080;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v3 + 40) = 0x8000000000349740LL;
  OUTLINED_FUNCTION_29_16(v1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_63_5(v5);
  if ((_DWORD)v6 == 1)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
    uint64_t v7 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v7);
  }

  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_29_16(v8, v9, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = OUTLINED_FUNCTION_82_5();
  if (v11)
  {
    OUTLINED_FUNCTION_41_1(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v3 + 120) = v1;
    uint64_t v12 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v12);
  }

  uint64_t v13 = v0[6];
  OUTLINED_FUNCTION_74_6();
  OUTLINED_FUNCTION_29_16(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v13, 1LL, v1);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_1(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = v1;
    uint64_t v17 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v17);
  }

  char v18 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[10] = v18;
  *char v18 = v0;
  v18[1] = PhoneCallDisplayTextCATs.handleLabelAndType(personHandleLabel:label:type:);
  return v20(0xD000000000000027LL, 0x8000000000343000LL, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    uint64_t v5 = *(void *)(v2 + 48);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_10_0();
    swift_task_dealloc(v5);
    uint64_t v6 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_61(v6, v7);
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PhoneCallDisplayTextCATs.handleLabelAndType(personHandleLabel:label:type:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v4[6] = OUTLINED_FUNCTION_18_0(v5);
  v4[7] = OUTLINED_FUNCTION_28();
  _BYTE v4[8] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void PhoneCallDisplayTextCATs.handleLabelAndType(personHandleLabel:label:type:)()
{
  v22[0] = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)v22 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 176LL);
  *(_OWORD *)(v14 + 16) = xmmword_320080;
  *(void *)(v14 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v14 + 40) = 0x8000000000349740LL;
  outlined init with copy of SpeakableString?( v6,  (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v15 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35((uint64_t)v12, 1LL, v15);
  if (v16)
  {
    outlined destroy of SpeakableString?( (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v14 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
    uint64_t v17 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_79_2( (uint64_t)v17,  (uint64_t)v12,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL));
  }

  OUTLINED_FUNCTION_81_4();
  *(void *)(v14 + 80) = v18;
  *(void *)(v14 + 88) = v19;
  outlined init with copy of SpeakableString?( v4,  (uint64_t)v10,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_35((uint64_t)v10, 1LL, v15);
  if (v16)
  {
    outlined destroy of SpeakableString?( (uint64_t)v10,  &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v14 + 120) = v15;
    uint64_t v20 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_79_2( (uint64_t)v20,  (uint64_t)v10,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL));
  }

  *(void *)(v14 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = 1701869940LL;
  *(void *)(v14 + 136) = 0xE400000000000000LL;
  outlined init with copy of SpeakableString?( v2,  (uint64_t)v8,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_35((uint64_t)v8, 1LL, v15);
  if (v16)
  {
    outlined destroy of SpeakableString?((uint64_t)v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v14 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = v15;
    uint64_t v21 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_79_2( (uint64_t)v21,  (uint64_t)v8,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL));
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000027LL, 0x8000000000343000LL, v14);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t PhoneCallDisplayTextCATs.joinButtonText(completion:)()
{
  return OUTLINED_FUNCTION_13(35LL);
}

uint64_t PhoneCallDisplayTextCATs.joinButtonText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.joinButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(35LL, 0x8000000000343030LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.joinButtonText()(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_22_2();
  if (!v1) {
    uint64_t v4 = a1;
  }
  return OUTLINED_FUNCTION_61(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t PhoneCallDisplayTextCATs.newCallButtonText(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t PhoneCallDisplayTextCATs.newCallButtonText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x8000000000343060LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.nextButtonText(completion:)()
{
  return OUTLINED_FUNCTION_13(35LL);
}

uint64_t PhoneCallDisplayTextCATs.nextButtonText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(35LL, 0x8000000000343090LL, (uint64_t)_swiftEmptyArrayStorage);
}

void PhoneCallDisplayTextCATs.openApp(appName:completion:)()
{
}

uint64_t PhoneCallDisplayTextCATs.openApp(appName:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATs.openApp(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_14_28(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(28LL);
  return OUTLINED_FUNCTION_12_22(v11, v12, v13, v14);
}

uint64_t PhoneCallDisplayTextCATs.openApp(appName:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void PhoneCallDisplayTextCATs.openApp(appName:)()
{
}

uint64_t PhoneCallDisplayTextCATs.openContactsButtonText(completion:)()
{
  return OUTLINED_FUNCTION_13(43LL);
}

uint64_t PhoneCallDisplayTextCATs.openContactsButtonText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(43LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(43LL, 0x80000000003430E0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.transcription(completion:)()
{
  return OUTLINED_FUNCTION_13(34LL);
}

uint64_t PhoneCallDisplayTextCATs.transcription()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(34LL, 0x8000000000343110LL, (uint64_t)_swiftEmptyArrayStorage);
}

void PhoneCallDisplayTextCATs.tryWithApp(appName:isThirdPartyApp:completion:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  char v16;
  void *v17;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_8_2(v13, 128LL);
  OUTLINED_FUNCTION_7_9(v14, (__n128)xmmword_31D880);
  outlined init with copy of SpeakableString?( v9,  v12,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v15 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v12, 1LL, v15);
  if (v16)
  {
    outlined destroy of SpeakableString?(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v14[4].n128_u64[1] = v15;
    uint64_t v17 = OUTLINED_FUNCTION_51();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL))(v17, v12, v15);
  }

  v14[5].n128_u64[0] = v5;
  v14[5].n128_u64[1] = v3;
  v14[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v14[6].n128_u8[0] = v7 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t PhoneCallDisplayTextCATs.tryWithApp(appName:isThirdPartyApp:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATs.tryWithApp(appName:isThirdPartyApp:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 128LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  OUTLINED_FUNCTION_48_6();
  OUTLINED_FUNCTION_83_4(v9);
  uint64_t v10 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_45_8(v11);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_14_28(v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 128LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  OUTLINED_FUNCTION_48_6();
  OUTLINED_FUNCTION_83_4(v10);
  uint64_t v11 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)PhoneCallDisplayTextCATs.callButtonText(label:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v12 = OUTLINED_FUNCTION_46_8(31LL);
  return OUTLINED_FUNCTION_12_22(v12, v13, v14, v15);
}

uint64_t PhoneCallDisplayTextCATs.tryWithApp(appName:isThirdPartyApp:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void PhoneCallDisplayTextCATs.tryWithApp(appName:isThirdPartyApp:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  void *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t v20;
  OUTLINED_FUNCTION_29_2();
  uint64_t v19 = v0;
  uint64_t v20 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  char v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 128LL);
  *(_OWORD *)(v14 + 16) = xmmword_31D880;
  uint64_t v15 = (void *)(v14 + 48);
  *(void *)(v14 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x656D614E707061LL;
  *(void *)(v14 + 40) = 0xE700000000000000LL;
  outlined init with copy of SpeakableString?( v9,  v12,  &demangling cache variable for type metadata for SpeakableString?);
  char v16 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v12, 1LL, v16);
  if (v17)
  {
    outlined destroy of SpeakableString?(v12, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v15 = 0u;
    *(_OWORD *)(v14 + 64) = 0u;
  }

  else
  {
    *(void *)(v14 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32LL))( boxed_opaque_existential_1,  v12,  v16);
  }

  *(void *)(v14 + 80) = v5;
  *(void *)(v14 + 88) = v3;
  *(void *)(v14 + 120) = &type metadata for Bool;
  *(_BYTE *)(v14 + 96) = v7 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)(v19, v20, v14);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t PhoneCallDisplayTextCATs.unknownCaller(completion:)()
{
  return OUTLINED_FUNCTION_13(34LL);
}

uint64_t PhoneCallDisplayTextCATs.unknownCaller()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(34LL, 0x8000000000343160LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t PhoneCallDisplayTextCATs.updateSettings(completion:)()
{
  return OUTLINED_FUNCTION_13(35LL);
}

uint64_t PhoneCallDisplayTextCATs.updateSettings()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  *uint64_t v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = PhoneCallDisplayTextCATs.addToCallButtonText();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(35LL, 0x8000000000343190LL, (uint64_t)_swiftEmptyArrayStorage);
}

void PhoneCallDisplayTextCATs.useApp(appName:isPhoneApp:completion:)()
{
}

uint64_t PhoneCallDisplayTextCATs.useApp(appName:isPhoneApp:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATs.useApp(appName:isPhoneApp:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 128LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_83_4(v9);
  uint64_t v10 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_45_8(v11);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_14_28(v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 128LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_83_4(v10);
  uint64_t v11 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v12 = OUTLINED_FUNCTION_46_8(27LL);
  return OUTLINED_FUNCTION_12_22(v12, v13, v14, v15);
}

uint64_t PhoneCallDisplayTextCATs.useApp(appName:isPhoneApp:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void PhoneCallDisplayTextCATs.useApp(appName:isPhoneApp:)()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATs.Properties and conformance PhoneCallDisplayTextCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATs.Properties and conformance PhoneCallDisplayTextCATs.Properties;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATs.Properties and conformance PhoneCallDisplayTextCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATs.Properties,  &type metadata for PhoneCallDisplayTextCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATs.Properties and conformance PhoneCallDisplayTextCATs.Properties);
  }

  return result;
}

uint64_t type metadata completion function for PhoneCallDisplayTextCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for PhoneCallDisplayTextCATs);
}

uint64_t ObjC metadata update function for PhoneCallDisplayTextCATs()
{
  return type metadata accessor for PhoneCallDisplayTextCATs(0LL);
}

uint64_t getEnumTagSinglePayload for PhoneCallDisplayTextCATs.Properties( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xEC)
  {
    if (a2 + 20 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 20) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 21;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for PhoneCallDisplayTextCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xEB) {
    return ((uint64_t (*)(void))((char *)&loc_E79F8 + 4 * byte_324FBA[v4]))();
  }
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_E7A2C + 4 * byte_324FB5[v4]))();
}

uint64_t sub_E7A2C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E7A34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xE7A3CLL);
  }
  return result;
}

uint64_t sub_E7A48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xE7A50LL);
  }
  *(_BYTE *)unint64_t result = a2 + 20;
  return result;
}

uint64_t sub_E7A54(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E7A5C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallDisplayTextCATs.Properties()
{
  return &type metadata for PhoneCallDisplayTextCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_14_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_29_16(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(a1, v3, a3);
}

void OUTLINED_FUNCTION_41_13()
{
}

void OUTLINED_FUNCTION_42_9()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_45_8(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 16);
}

unint64_t OUTLINED_FUNCTION_46_8(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

void OUTLINED_FUNCTION_48_6()
{
  *(void *)(v0 + 80) = 0x5064726968547369LL;
  *(void *)(v0 + 88) = 0xEF70704179747261LL;
}

  ;
}

void *OUTLINED_FUNCTION_56_6()
{
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

__n128 *OUTLINED_FUNCTION_58_6(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6C6562616CLL;
  result[2].n128_u64[1] = 0xE500000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_59_7()
{
  *(void *)(v0 + 80) = 0x41656E6F68507369LL;
  *(void *)(v0 + 88) = 0xEA00000000007070LL;
}

void OUTLINED_FUNCTION_60_9()
{
}

uint64_t OUTLINED_FUNCTION_63_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

void OUTLINED_FUNCTION_67_6()
{
}

void OUTLINED_FUNCTION_68_5()
{
  *(void *)(v0 + 80) = 0x6C6562616CLL;
  *(void *)(v0 + 88) = 0xE500000000000000LL;
}

uint64_t OUTLINED_FUNCTION_71_5(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_73_5@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_74_6()
{
  *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = 1701869940LL;
  *(void *)(v0 + 136) = 0xE400000000000000LL;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_82_5()
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, v0);
}

void OUTLINED_FUNCTION_83_4(char a1@<W8>)
{
  *(void *)(v2 + 120) = v1;
  *(_BYTE *)(v2 + 96) = a1;
}

void IncomingCallActionHandleIntentFlowStrategy.__allocating_init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)()
{
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.announceCallsContext.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  OUTLINED_FUNCTION_49_0(v0 + 2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void IncomingCallActionHandleIntentFlowStrategy.incomingCallCatsSimple.getter()
{
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.sbsManager.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 176, a1);
}

void IncomingCallActionHandleIntentFlowStrategy.deviceState.getter()
{
}

void IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)()
{
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makeIntentExecutionBehavior(app:intent:)()
{
  return OUTLINED_FUNCTION_33_0((uint64_t)IncomingCallActionHandleIntentFlowStrategy.makeIntentExecutionBehavior(app:intent:));
}

{
  os_log_type_t v0;
  os_log_s *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v4, (uint64_t)static Logger.siriPhone);
  int v5 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v5))
  {
    unsigned int v6 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v6);
    OUTLINED_FUNCTION_5_38( &dword_0,  v1,  v0,  "#IncomingCallActionHandleIntentFlowStrategy makeIntentExecutionBehavior using standard PhoneIntentHandler");
    OUTLINED_FUNCTION_0_2(v2);
  }

  type metadata accessor for SiriKitIntentExecutionBehavior(0LL);
  BOOL v7 = static SiriKitIntentExecutionBehavior.standard()();
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v7);
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(rchRecord:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for DispatchTimeInterval(0LL);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[5] = v4;
  v2[6] = OUTLINED_FUNCTION_23(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(rchRecord:)()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  OUTLINED_FUNCTION_49_0(v1 + 7);
  if (one-time initialization token for defaultLoggingTaskTimeout != -1) {
    swift_once( &one-time initialization token for defaultLoggingTaskTimeout,  one-time initialization function for defaultLoggingTaskTimeout);
  }
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v8 = *(void **)(v0 + 16);
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)static CallStateNotificationManager.defaultLoggingTaskTimeout);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v9, v6);
  uint64_t v10 = *(void (**)(uint64_t, BOOL (*)(int), uint64_t, uint64_t, uint64_t))(v3 + 8);
  swift_retain();
  v10( v4,  partial apply for closure #1 in IncomingCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(rchRecord:),  v7,  v2,  v3);
  swift_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  type metadata accessor for EmptyOutput(0LL);
  static EmptyOutput.instance.getter(v8);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL closure #1 in IncomingCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(rchRecord:)( int a1, void *a2)
{
  if (a1 == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
    if (os_log_type_enabled(v6, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v6, v8, "#SiriKitEventSender call state went active, logging .uufrReady", v9, 2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    uint64_t v10 = a2 + 12;
    uint64_t v12 = a2[15];
    uint64_t v11 = a2[16];
    __swift_project_boxed_opaque_existential_1(v10, v12);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 40))(v17, v12, v11);
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    type metadata accessor for SiriKitEvent(0LL);
    uint64_t v15 = static SiriKitEvent.uufrReady()();
    dispatch thunk of SiriKitEventSending.send(_:)(v15, v13, v14);
    swift_release(v15);
    __swift_destroy_boxed_opaque_existential_1(v17);
  }

  return a1 == 1;
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:)( uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v3[10] = *v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:));
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  uint64_t v2 = (os_log_s *)__swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
  if (os_log_type_enabled(v3, v5))
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_0, v3, v5, "#IncomingCallActionHandleIntentFlowStrategy makeIntentHandledResponse", v6, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);
  }

  uint64_t v7 = *(void **)(v0 + 72);
  os_log_type_t v8 = *(void **)(v0 + 80);

  uint64_t v9 = v7 + 2;
  uint64_t v10 = v7[5];
  uint64_t v11 = v7[6];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v12 = type metadata accessor for IntentResolutionRecord(0LL, v8[10], v8[11]);
  uint64_t v13 = (void *)IntentResolutionRecord.intentResponse.getter(v12);
  char v14 = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v11 + 40))(v13, v8[12], v10, v11);

  if ((v14 & 1) != 0)
  {
    char v16 = (void *)swift_task_alloc(dword_431064);
    *(void *)(v0 + 88) = v16;
    void *v16 = v0;
    v16[1] = IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledResponse(rchRecord:);
    return IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledRFOutput(rchRecord:)( *(void *)(v0 + 56),  *(void *)(v0 + 64));
  }

  else
  {
    Logger.logObject.getter(v15);
    os_log_type_t v18 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v18))
    {
      uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v19);
      OUTLINED_FUNCTION_5_38( &dword_0,  v2,  (os_log_type_t)v2,  "#IncomingCallActionHandleIntentFlowStrategy makeIntentHandledOutput: no dialog, submitAndForget post-HandleIntent commands");
      OUTLINED_FUNCTION_0_2(v10);
    }

    uint64_t v20 = *(void **)(v0 + 72);
    uint64_t v21 = *(void **)(v0 + 56);

    uint64_t v22 = v20[15];
    uint64_t v23 = v20[16];
    __swift_project_boxed_opaque_existential_1(v20 + 12, v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    IncomingCallActionHandleIntentFlowStrategy.makePostIntentHandledCommands(rchRecord:)();
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
    type metadata accessor for EmptyOutput(0LL);
    static EmptyOutput.instance.getter(v21);
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
  }

{
  uint64_t (**v0)(void);
  OUTLINED_FUNCTION_14_1(*((void *)*v0 + 11));
  return OUTLINED_FUNCTION_3_0(v0[1]);
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledRFOutput(rchRecord:)( uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[16] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[17] = v5;
  v3[18] = OUTLINED_FUNCTION_23(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledRFOutput(rchRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v2, (uint64_t)static Logger.siriPhone);
  os_log_type_t v3 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v0, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v5 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v13 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000025LL,  0x80000000003497F0LL,  &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 96, v1 + 104, v4 + 4);
    _os_log_impl(&dword_0, v0, v3, "#IncomingCallActionHandleIntentFlowStrategy %s", v4, 0xCu);
    swift_arrayDestroy(v5, 1LL);
    OUTLINED_FUNCTION_0_2(v5);
    OUTLINED_FUNCTION_0_2((uint64_t)v4);
  }

  (*(void (**)(void))(**(void **)(v1 + 120) + 152LL))();
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  OUTLINED_FUNCTION_66((void *)(v1 + 16));
  uint64_t v8 = IncomingCallActionHandleIntentFlowStrategy.getIncomingCallConcept(rchRecord:)();
  *(void *)(v1 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  uint64_t v9 = *(int **)(v7 + 8);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  uint64_t v10 = (void *)swift_task_alloc(v9[1]);
  *(void *)(v1 + 160) = v10;
  *uint64_t v10 = v1;
  v10[1] = IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledRFOutput(rchRecord:);
  return v12(v8, v6, v7);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v18;
  uint64_t v1 = (void *)v0[22];
  os_log_type_t v3 = v0[14];
  uint64_t v2 = (void *)v0[15];
  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  IncomingCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(rchRecord:)(v3);
  uint64_t v4 = v2[15];
  uint64_t v5 = v2[16];
  OUTLINED_FUNCTION_49_0(v2 + 12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 136))(v4, v5);
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  OUTLINED_FUNCTION_49_0(v0 + 7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v9 = OUTLINED_FUNCTION_8_2(v8, 40LL);
  *(_OWORD *)(v9 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  os_log_type_t v18 = v9;
  specialized Array._endMutation()(v9, v10, v11, v12);
  v0[23] = v18;
  uint64_t v13 = *(void *)(v7 + 8);
  char v14 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  uint64_t v15 = v1;
  char v16 = (void *)swift_task_alloc(v14);
  v0[24] = v16;
  void *v16 = v0;
  v16[1] = IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledRFOutput(rchRecord:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v0[13],  v18,  v0[18],  v6,  v13);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 192LL));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  os_log_type_t v3 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  swift_task_dealloc(v1);
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release(*(void *)(v0 + 152));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.makeIntentHandledRFOutput(rchRecord:)(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 160);
  *(void *)(*v2 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = v1;
  swift_task_dealloc(v5);
  if (!v1)
  {
    uint64_t v6 = *(void *)(v4 + 152);
    *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = a1;
    swift_release(v6);
  }

  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v7, v8, v9);
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.getIncomingCallConcept(rchRecord:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  type metadata accessor for Locale(0LL);
  __chkstk_darwin();
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = v2[11];
  uint64_t v6 = type metadata accessor for IntentResolutionRecord(0LL, v2[10], v5);
  uint64_t v7 = (void *)IntentResolutionRecord.intentResponse.getter(v6);
  uint64_t v8 = v2[12];
  unsigned __int8 v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v5, v8);

  uint64_t v10 = FollowUpOfferType.rawValue.getter(v9);
  if (v10 == 0xD000000000000011LL && v11 == 0x8000000000343650LL)
  {
    swift_bridgeObjectRelease();
  }

  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0xD000000000000011LL, 0x8000000000343650LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
LABEL_6:
      uint64_t v18 = type metadata accessor for PhoneIncomingCall();
      uint64_t v19 = (void *)IntentResolutionRecord.intentResponse.getter(v6);
      (*(void (**)(void *__return_ptr))(*v1 + 160LL))(v32);
      uint64_t v20 = v33;
      uint64_t v21 = v34;
      OUTLINED_FUNCTION_66(v32);
      dispatch thunk of DeviceState.siriLocale.getter(v20, v21);
      uint64_t v22 = type metadata accessor for AppInfoBuilder();
      uint64_t v23 = OUTLINED_FUNCTION_8_2(v22, 16LL);
      v31[3] = v22;
      v31[4] = &protocol witness table for AppInfoBuilder;
      v31[0] = v23;
      uint64_t v24 = specialized PhoneIncomingCall.__allocating_init(intentResponse:siriLocale:options:appInfoBuilder:)( v19,  (uint64_t)v4,  0LL,  v31,  v18,  v5,  v8);
      __swift_destroy_boxed_opaque_existential_1(v32);
      return v24;
    }
  }

  uint64_t v13 = v1[15];
  uint64_t v14 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v13);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v32, v13, v14);
  uint64_t v15 = v33;
  uint64_t v16 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  os_log_type_t v17 = DeviceState.isAuthenticatedForPhone.getter(v15, v16);
  __swift_destroy_boxed_opaque_existential_1(v32);
  if ((v17 & 1) != 0) {
    goto LABEL_6;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v25 = OUTLINED_FUNCTION_15_1();
  uint64_t v26 = (os_log_s *)OUTLINED_FUNCTION_12_1(v25, (uint64_t)static Logger.siriPhone);
  os_log_type_t v28 = static os_log_type_t.debug.getter(v26, v27);
  if (OUTLINED_FUNCTION_10(v28))
  {
    uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v29);
    OUTLINED_FUNCTION_5_38( &dword_0,  v26,  v17,  "#IncomingCallActionHandleIntentFlowStrategy not setting incoming call concept for followUpOfferType == .callBack b ecause device is not authenticated.");
    OUTLINED_FUNCTION_0_2(v5);
  }

  return 0LL;
}

void IncomingCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(rchRecord:)(uint64_t a1)
{
  uint64_t v3 = __chkstk_darwin();
  uint64_t v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  static DialogPhase.completion.getter(v3);
  uint64_t v7 = v1;
  uint64_t v8 = a1;
  OutputGenerationManifest.init(dialogPhase:_:)( v5,  partial apply for closure #1 in IncomingCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(rchRecord:),  v6);
  OUTLINED_FUNCTION_6();
}

uint64_t closure #1 in IncomingCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(rchRecord:)()
{
  uint64_t v0 = IncomingCallActionHandleIntentFlowStrategy.makePostIntentHandledCommands(rchRecord:)();
  return OutputGenerationManifest.additionalCommands.setter(v0);
}

void *IncomingCallActionHandleIntentFlowStrategy.makePostIntentHandledCommands(rchRecord:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for IntentResolutionRecord(0LL, *(void *)(*v0 + 80LL), *(void *)(*v0 + 88LL));
  uint64_t v4 = IntentResolutionRecord.app.getter(v3);
  Swift::Bool v5 = App.isFirstParty()();
  swift_release(v4);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v5)
  {
    unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v7 = v1 + 2;
    uint64_t v8 = v1[5];
    uint64_t v9 = v1[6];
    OUTLINED_FUNCTION_66(v1 + 2);
    uint64_t v10 = (void *)OUTLINED_FUNCTION_24_18();
    uint64_t v11 = *(void *)(v2 + 96);
    char v12 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v9 + 24))(v10, v11, v8, v9);

    if (v12)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v13 = OUTLINED_FUNCTION_15_1();
      uint64_t v14 = (os_log_s *)__swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
      id v15 = v12;
      uint64_t v16 = v14;
      Logger.logObject.getter(v15);
      os_log_type_t v17 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v14, v17))
      {
        uint64_t v45 = v11;
        uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v19 = (void *)OUTLINED_FUNCTION_7_0(8LL);
        *(_DWORD *)uint64_t v18 = 138412290;
        id v20 = [v15 dictionary];
        id v21 = v20;
        if (v20) {
          id v46 = v20;
        }
        else {
          id v46 = 0LL;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v18 + 4);
        *uint64_t v19 = v21;

        _os_log_impl( &dword_0,  v16,  v17,  "#IncomingCallActionHandleIntentFlowStrategy Sending PlayNotificationSound for call connected: %@",  v18,  0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy(v19, 1LL);
        OUTLINED_FUNCTION_0_2((uint64_t)v19);
        OUTLINED_FUNCTION_0_2((uint64_t)v18);

        uint64_t v11 = v45;
      }

      else
      {
      }

      id v22 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      unint64_t v24 = *(void *)((char *)&dword_10 + (v47 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v23 = *(void *)((char *)&dword_18 + (v47 & 0xFFFFFFFFFFFFFF8LL));
      uint64_t v7 = v1 + 2;
      if (v24 >= v23 >> 1) {
        OUTLINED_FUNCTION_11_35(v24 + 1, v23);
      }
      uint64_t v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
      specialized Array._endMutation()(v25, v26, v27, v28);
    }

    uint64_t v30 = v1[5];
    uint64_t v29 = v1[6];
    OUTLINED_FUNCTION_66(v7);
    uint64_t v31 = (void *)OUTLINED_FUNCTION_24_18();
    os_log_type_t v32 = (*(unsigned __int8 (**)(void *, uint64_t, uint64_t, uint64_t))(v29 + 32))(v31, v11, v30, v29);

    if ((v32 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v33 = OUTLINED_FUNCTION_15_1();
      uint64_t v34 = (os_log_s *)OUTLINED_FUNCTION_12_1(v33, (uint64_t)static Logger.siriPhone);
      os_log_type_t v36 = static os_log_type_t.debug.getter(v34, v35);
      if (OUTLINED_FUNCTION_10(v36))
      {
        uint64_t v37 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_47(v37);
        OUTLINED_FUNCTION_5_38( &dword_0,  v34,  v32,  "#IncomingCallActionHandleIntentFlowStrategy Sending CloseAssistant command after answering the call.");
        OUTLINED_FUNCTION_0_2(v29);
      }

      id v38 = [objc_allocWithZone(SAUICloseAssistant) init];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      unint64_t v40 = *(void *)((char *)&dword_10 + (v47 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v39 = *(void *)((char *)&dword_18 + (v47 & 0xFFFFFFFFFFFFFF8LL));
      if (v40 >= v39 >> 1) {
        OUTLINED_FUNCTION_11_35(v40 + 1, v39);
      }
      uint64_t v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
      specialized Array._endMutation()(v41, v42, v43, v44);
    }

    return (void *)v47;
  }

  return result;
}

void *IncomingCallActionHandleIntentFlowStrategy.deinit()
{
  return v0;
}

uint64_t IncomingCallActionHandleIntentFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 216LL, 7LL);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  uint64_t v10 = type metadata accessor for IncomingCallActionHandleIntentFlowStrategy(0LL, a3[10], a3[11], a3[12]);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v10, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  uint64_t v10 = type metadata accessor for IncomingCallActionHandleIntentFlowStrategy(0LL, a3[10], a3[11], a3[12]);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v10, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 184LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v9(a1, a2);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 192LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v9(a1, a2);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  uint64_t v10 = type metadata accessor for IncomingCallActionHandleIntentFlowStrategy(0LL, a3[10], a3[11], a3[12]);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v10, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  uint64_t v10 = type metadata accessor for IncomingCallActionHandleIntentFlowStrategy(0LL, a3[10], a3[11], a3[12]);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v10, a4);
}

uint64_t protocol witness for HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  uint64_t v10 = type metadata accessor for IncomingCallActionHandleIntentFlowStrategy(0LL, a3[10], a3[11], a3[12]);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)(a1, a2, v10, a4);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 176LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>;
  return v9(a1, a2);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1)
{
  return v1[1](a1);
}

BOOL partial apply for closure #1 in IncomingCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(rchRecord:)( int a1)
{
  return closure #1 in IncomingCallActionHandleIntentFlowStrategy.makePreHandleIntentOutput(rchRecord:)(a1, v1);
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in IncomingCallActionHandleIntentFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable( &protocol conformance descriptor for IncomingCallActionHandleIntentFlowStrategy<A, B>,  a1);
}

uint64_t type metadata completion function for IncomingCallActionHandleIntentFlowStrategy(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = "(";
  v2[2] = "(";
  v2[3] = "(";
  v2[4] = "(";
  return swift_initClassMetadata2(a1, 0LL, 5LL, v2, a1 + 104);
}

uint64_t type metadata accessor for IncomingCallActionHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for IncomingCallActionHandleIntentFlowStrategy);
}

uint64_t partial apply for closure #1 in IncomingCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(rchRecord:)()
{
  return closure #1 in IncomingCallActionHandleIntentFlowStrategy.getCompletionOutputManifest(rchRecord:)();
}

uint64_t OUTLINED_FUNCTION_6_41()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_11_35@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a2 > 1, a1, 1LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_24_18()
{
  return IntentResolutionRecord.intentResponse.getter(v0);
}

uint64_t CarPlayDirectInvocationFlow.__allocating_init(app:intent:strategy:aceServiceInvoker:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v9 = swift_allocObject(v4, 80LL, 7LL);
  CarPlayDirectInvocationFlow.init(app:intent:strategy:aceServiceInvoker:)(a1, a2, a3, a4);
  return v9;
}

void *CarPlayDirectInvocationFlow.init(app:intent:strategy:aceServiceInvoker:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  Swift::Bool v5 = v4;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  char v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    id v15 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)id v15 = 0;
    _os_log_impl(&dword_0, v12, v14, "#Gatekeeper Initialized GatekeeperLegacyCallingIntentFlow", v15, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v15);
  }

  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(v5 + 5));
  return v5;
}

uint64_t CarPlayDirectInvocationFlow.__allocating_init<A>(app:intent:strategy:aceServiceInvoker:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v18 = static os_log_type_t.debug.getter(v16, v17);
  if (os_log_type_enabled(v16, v18))
  {
    uint64_t v19 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v16, v18, "#Gatekeeper Initialized GatekeeperLegacyCallingIntentFlow", v19, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v19);
  }

  uint64_t v20 = CarPlayDirectInvocationFlowStrategy.toAnyIntentFlowStrategy()(a5, a6);
  outlined init with copy of SignalProviding((uint64_t)a4, (uint64_t)v23);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(v7 + 120))(a1, a2, v20, v23);
  __swift_destroy_boxed_opaque_existential_1(a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8LL))(a3, a5);
  return v21;
}

uint64_t CarPlayDirectInvocationFlow.execute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CarPlayDirectInvocationFlow(0LL, *(void *)(*(void *)v4 + 80LL), a3, a4);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for CarPlayDirectInvocationFlow<A>, v7);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v7, WitnessTable);
}

uint64_t CarPlayDirectInvocationFlow.execute()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(CarPlayDirectInvocationFlow.execute(), 0LL, 0LL);
}

uint64_t CarPlayDirectInvocationFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 16);
  (*(void (**)(uint64_t))(*(void *)v3 + 136LL))(v4);
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1LL, v5);
  uint64_t v7 = *(void *)(v0 + 32);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of NLContextUpdate?(*(void *)(v0 + 32));
  }

  else
  {
    uint64_t v8 = *(void **)(v0 + 24);
    uint64_t v9 = (void *)NLContextUpdate.toAceContextUpdate()();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v7, v5);
    uint64_t v10 = v8[8];
    uint64_t v11 = v8[9];
    __swift_project_boxed_opaque_existential_1(v8 + 5, v10);
    AceServiceInvokerAsync.submitAndForget(_:)(v9, v10, v11);
  }

  uint64_t v12 = *(void *)(v0 + 32);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, void))(*(void *)v3 + 128LL))( v4,  *(void *)(*(void *)(v0 + 24) + 24LL));
  static ExecuteResponse.complete(next:)(v13);
  swift_release(v13);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CarPlayDirectInvocationFlow.deinit()
{
  swift_release(*(void *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 40));
  return v0;
}

uint64_t CarPlayDirectInvocationFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t protocol witness for Flow.execute() in conformance CarPlayDirectInvocationFlow<A>(uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 144LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance CarPlayDirectInvocationFlow<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for CarPlayDirectInvocationFlow(0LL, *(void *)(a1 + 80), a3, a4);
  return Flow<>.exitValue.getter(v5, a2);
}

uint64_t type metadata accessor for CarPlayDirectInvocationFlow( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CarPlayDirectInvocationFlow);
}

uint64_t outlined destroy of NLContextUpdate?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata completion function for CarPlayDirectInvocationFlow(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "\b";
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = &unk_325278;
  return swift_initClassMetadata2(a1, 0LL, 4LL, v2, a1 + 88);
}

uint64_t Logger.siriPhone.unsafeMutableAddressor()
{
  return Logger.siriPhone.unsafeMutableAddressor( &one-time initialization token for siriPhone,  (uint64_t)static Logger.siriPhone,  (uint64_t)one-time initialization function for siriPhone);
}

uint64_t Logger.announceTelephony.unsafeMutableAddressor()
{
  return Logger.siriPhone.unsafeMutableAddressor( &one-time initialization token for announceTelephony,  (uint64_t)static Logger.announceTelephony,  (uint64_t)one-time initialization function for announceTelephony);
}

uint64_t Logger.siriPhone.unsafeMutableAddressor(void *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  return __swift_project_value_buffer(v4, a2);
}

void Logger.logAndCrash(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v10 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v9 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v7 + 4);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl(&dword_0, v5, v6, "%s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL);
    OUTLINED_FUNCTION_0_2(v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  else
  {
    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(a1, a2);
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  a1,  a2,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
  __break(1u);
}

uint64_t prefix(type:tags:)(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t one-time initialization function for siriPhone(uint64_t a1)
{
  return one-time initialization function for siriPhone( a1,  static Logger.siriPhone,  0x6E6F685069726953LL,  0xE900000000000065LL);
}

void *LogConst.subsystem.unsafeMutableAddressor()
{
  return &static LogConst.subsystem;
}

const char *LogConst.Category.siriPhone.unsafeMutableAddressor()
{
  return "SiriPhone";
}

uint64_t static Logger.siriPhone.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.siriPhone.getter( &one-time initialization token for siriPhone,  (uint64_t)static Logger.siriPhone,  (uint64_t)one-time initialization function for siriPhone,  a1);
}

uint64_t one-time initialization function for announceTelephony(uint64_t a1)
{
  return one-time initialization function for siriPhone( a1,  static Logger.announceTelephony,  0xD000000000000011LL,  0x8000000000349840LL);
}

void *LogConst.Category.announceTelephony.unsafeMutableAddressor()
{
  return &static LogConst.Category.announceTelephony;
}

uint64_t static Logger.announceTelephony.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.siriPhone.getter( &one-time initialization token for announceTelephony,  (uint64_t)static Logger.announceTelephony,  (uint64_t)one-time initialization function for announceTelephony,  a1);
}

uint64_t static Logger.siriPhone.getter@<X0>( void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  uint64_t v7 = __swift_project_value_buffer(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a4, v7, v6);
}

uint64_t one-time initialization function for intentHandlers(uint64_t a1)
{
  return one-time initialization function for siriPhone( a1,  static Logger.intentHandlers,  0x6148746E65746E49LL,  0xEE007372656C646ELL);
}

uint64_t one-time initialization function for siriPhone(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = OUTLINED_FUNCTION_15_1();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000014LL, 0x8000000000346CB0LL, a3, a4);
}

const char *LogConst.Category.intentHandlers.unsafeMutableAddressor()
{
  return "IntentHandlers";
}

uint64_t Logger.intentHandlers.unsafeMutableAddressor()
{
  return Logger.siriPhone.unsafeMutableAddressor( &one-time initialization token for intentHandlers,  (uint64_t)static Logger.intentHandlers,  (uint64_t)one-time initialization function for intentHandlers);
}

uint64_t static Logger.intentHandlers.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.siriPhone.getter( &one-time initialization token for intentHandlers,  (uint64_t)static Logger.intentHandlers,  (uint64_t)one-time initialization function for intentHandlers,  a1);
}

unint64_t static LogConst.subsystem.getter()
{
  return 0xD000000000000014LL;
}

uint64_t static LogConst.Category.siriPhone.getter()
{
  return 0x6E6F685069726953LL;
}

unint64_t static LogConst.Category.announceTelephony.getter()
{
  return 0xD000000000000011LL;
}

uint64_t static LogConst.Category.intentHandlers.getter()
{
  return 0x6148746E65746E49LL;
}

PhoneCallFlowDelegatePlugin::LogTag_optional __swiftcall LogTag.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of LogTag.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 9) {
    return (PhoneCallFlowDelegatePlugin::LogTag_optional)9;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::LogTag_optional)v3;
  }
}

uint64_t LogTag.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_EA004 + 4 * byte_325290[a1]))( 19534LL,  0xE200000000000000LL);
}

uint64_t sub_EA004()
{
  return 5916994LL;
}

uint64_t sub_EA014()
{
  return 1464814662LL;
}

uint64_t sub_EA024()
{
  return 1396786515LL;
}

uint64_t sub_EA034()
{
  return 4735827LL;
}

uint64_t sub_EA044()
{
  return 5395011LL;
}

uint64_t sub_EA054()
{
  return 5395027LL;
}

uint64_t sub_EA068()
{
  return 5263425LL;
}

uint64_t sub_EA078()
{
  return 21574LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance LogTag(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance LogTag()
{
}

void protocol witness for Hashable.hash(into:) in conformance LogTag(uint64_t a1)
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance LogTag(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::LogTag_optional protocol witness for RawRepresentable.init(rawValue:) in conformance LogTag@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::LogTag_optional *a2@<X8>)
{
  result.value = LogTag.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance LogTag@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LogTag.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t LogPrefix.function.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a3;
}

uint64_t LogPrefix.withFunction(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a3;
}

uint64_t LogPrefix.description.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return 0LL;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LogPrefix()
{
  return LogPrefix.description.getter(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t prefix<A>(typeof:tags:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void DefaultStringInterpolation.appendInterpolation(type:tags:function:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (*(void *)(a2 + 16))
  {
    LogPrefix.tags.getter(a1, a2);
    uint64_t v8 = *(unsigned __int8 *)(a2 + 32);
    OUTLINED_FUNCTION_0_42(91LL);
    __asm { BR              X8 }
  }

  OUTLINED_FUNCTION_0_42(35LL);
  v9._uint64_t countAndFlagsBits = _typeName(_:qualified:)(a1, 0LL);
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(object);
  if (a4)
  {
    OUTLINED_FUNCTION_0_42(32LL);
    v11._uint64_t countAndFlagsBits = a3;
    v11._object = a4;
    String.append(_:)(v11);
  }

unint64_t lazy protocol witness table accessor for type LogTag and conformance LogTag()
{
  unint64_t result = lazy protocol witness table cache variable for type LogTag and conformance LogTag;
  if (!lazy protocol witness table cache variable for type LogTag and conformance LogTag)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for LogTag, &type metadata for LogTag);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type LogTag and conformance LogTag);
  }

  return result;
}

void type metadata accessor for LogConst()
{
}

void type metadata accessor for LogConst.Category()
{
}

uint64_t storeEnumTagSinglePayload for LogTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF7) {
    return ((uint64_t (*)(void))((char *)&loc_EA430 + 4 * byte_3252A7[v4]))();
  }
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_EA464 + 4 * byte_3252A2[v4]))();
}

uint64_t sub_EA464(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_EA46C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xEA474LL);
  }
  return result;
}

uint64_t sub_EA480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xEA488LL);
  }
  *(_BYTE *)unint64_t result = a2 + 8;
  return result;
}

uint64_t sub_EA48C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_EA494(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LogTag()
{
}

uint64_t assignWithTake for LogPrefix(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LogPrefix(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LogPrefix(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for LogPrefix()
{
}

void OUTLINED_FUNCTION_0_42(uint64_t a1)
{
  unint64_t v1 = 0xE100000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

Swift::String __swiftcall String.firstLetterLowercased()()
{
  uint64_t v2 = String.firstLetterCapitalized()(v0, v1, (uint64_t (*)(void))&Substring.lowercased());
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t String.remove(characters:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  __int128 v6[2] = a1;
  swift_bridgeObjectRetain();
  return specialized RangeReplaceableCollection.filter(_:)( (uint64_t (*)(void *))partial apply for closure #1 in String.remove(characters:),  (uint64_t)v6,  a2,  a3);
}

BOOL closure #1 in String.remove(characters:)(unsigned int *a1)
{
  return (CharacterSet.contains(_:)(*a1) & 1) == 0;
}

BOOL partial apply for closure #1 in String.remove(characters:)(unsigned int *a1)
{
  return (CharacterSet.contains(_:)(*a1) & 1) == 0;
}

uint64_t specialized RangeReplaceableCollection.filter(_:)( uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v25 = a2;
  uint64_t v23 = 0LL;
  unint64_t v24 = 0xE000000000000000LL;
  uint64_t v20 = a3 & 0xFFFFFFFFFFFFLL;
  uint64_t v21 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v9 = 0LL;
    uint64_t v18 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v19 = a4 & 0xFFFFFFFFFFFFFFLL;
    while (1)
    {
      if ((a4 & 0x1000000000000000LL) != 0)
      {
        uint64_t v12 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v9 << 16, a3, a4);
      }

      else
      {
        if ((a4 & 0x2000000000000000LL) != 0)
        {
          v22[0] = a3;
          v22[1] = v19;
          uint64_t v10 = v22;
          uint64_t v11 = v21;
        }

        else
        {
          uint64_t v10 = (void *)v18;
          uint64_t v11 = v20;
          if ((a3 & 0x1000000000000000LL) == 0) {
            uint64_t v10 = (void *)_StringObject.sharedUTF8.getter(a3, a4);
          }
        }

        uint64_t v12 = _decodeScalar(_:startingAt:)(v10, v11, v9);
      }

      uint64_t v14 = v12;
      uint64_t v15 = v13;
      LODWORD(v22[0]) = v12;
      char v16 = a1(v22);
      if (v4) {
        break;
      }
      if ((v16 & 1) != 0) {
        String.UnicodeScalarView.append(_:)(v14);
      }
      v9 += v15;
      if (v9 >= v6)
      {
        OUTLINED_FUNCTION_50();
        return v23;
      }
    }

    OUTLINED_FUNCTION_50();
    return swift_bridgeObjectRelease();
  }

  else
  {
    OUTLINED_FUNCTION_50();
    return 0LL;
  }

uint64_t String.lowercasedWithFirstUppercased.getter()
{
  uint64_t countAndFlagsBits = String.firstLetterCapitalized()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

BOOL String.isPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin();
  uint64_t v8 = (char *)v20 - v7;
  static CharacterSet.decimalDigits.getter(v6);
  v9._uint64_t countAndFlagsBits = 757671979LL;
  v9._object = (void *)0xE400000000000000LL;
  CharacterSet.insert(charactersIn:)(v9);
  uint64_t v10 = (void *)objc_opt_self(&OBJC_CLASS___NSCharacterSet);
  id v11 = [v10 controlCharacterSet];
  OUTLINED_FUNCTION_8_31();

  OUTLINED_FUNCTION_7_44();
  OUTLINED_FUNCTION_6_10((uint64_t)v5);
  id v12 = [v10 whitespaceAndNewlineCharacterSet];
  OUTLINED_FUNCTION_8_31();

  OUTLINED_FUNCTION_7_44();
  OUTLINED_FUNCTION_6_10((uint64_t)v5);
  v20[0] = a1;
  v20[1] = a2;
  unint64_t v13 = lazy protocol witness table accessor for type String and conformance String();
  v20[0] = StringProtocol.components(separatedBy:)(v8, &type metadata for String, v13);
  unint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  unint64_t v15 = lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v14, v15);
  OUTLINED_FUNCTION_4_42();
  swift_bridgeObjectRelease();
  uint64_t v17 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000LL) == 0) {
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v18 = v17 == 0;
  OUTLINED_FUNCTION_6_10((uint64_t)v8);
  return v18;
}

uint64_t OUTLINED_FUNCTION_0_43()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_1_45(uint64_t a1, uint64_t a2)
{
  return String.index(_:offsetBy:limitedBy:)(15LL, a2, v4, v3, v2);
}

uint64_t OUTLINED_FUNCTION_4_42()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_7_44()
{
  return CharacterSet.formUnion(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_8_31()
{
  return static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_9_38(uint64_t a1, uint64_t a2)
{
  return String.subscript.getter(a1, a2, v3, v2);
}

  ;
}

uint64_t Flow.guardedSentinelFlow<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v23 = a5;
  uint64_t v11 = *(void *)(a2 - 8);
  __chkstk_darwin();
  unint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  type metadata accessor for SentinelConditionalFlow(0LL, AssociatedTypeWitness, v19, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v6, a2);
  return SentinelConditionalFlow.__allocating_init<A, B>(preconditionFlow:executableFlow:)( (uint64_t)v17,  (uint64_t)v13,  a3,  a2,  v23,  a4);
}

uint64_t type metadata accessor for SentinelConditionalFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for SentinelConditionalFlow);
}

uint64_t SentinelConditionalFlow.__allocating_init<A, B>(preconditionFlow:executableFlow:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = swift_allocObject(v6, 24LL, 7LL);
  SentinelConditionalFlow.init<A, B>(preconditionFlow:executableFlow:)(a1, a2, a3, a4, a5, a6);
  return v13;
}

uint64_t SentinelConditionalFlow.exitValue.getter()
{
  return dispatch thunk of ConditionalFlow.exitValue.getter();
}

uint64_t SentinelConditionalFlow.init<A, B>(preconditionFlow:executableFlow:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v12 = Flow.guarded<A>(by:)(a1, a4, a3, a6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8LL))(a2, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8LL))(a1, a3);
  *(void *)(v7 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v12;
  return v7;
}

uint64_t SentinelConditionalFlow.execute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SentinelConditionalFlow(0LL, *(void *)(*(void *)v4 + 80LL), a3, a4);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SentinelConditionalFlow<A>, v7);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v7, WitnessTable);
}

uint64_t SentinelConditionalFlow.execute()(uint64_t a1)
{
  v2[3] = a1;
  void v2[4] = v1;
  void v2[5] = *v1;
  return swift_task_switch(SentinelConditionalFlow.execute(), 0LL, 0LL);
}

uint64_t SentinelConditionalFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(void *)(*(void *)(v0 + 32) + 16LL);
  uint64_t v2 = type metadata accessor for ConditionalFlow(0LL, *(void *)(v1 + 80));
  swift_getWitnessTable(&protocol conformance descriptor for ConditionalFlow<A>, v2);
  static ExecuteResponse.complete<A>(next:)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SentinelConditionalFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t base witness table accessor for Flow in SentinelConditionalFlow<A>(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for SentinelConditionalFlow<A>, a1);
}

uint64_t base witness table accessor for SiriEnvironmentLocating in SentinelConditionalFlow<A>(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for SentinelConditionalFlow<A>, a1);
}

uint64_t protocol witness for Flow.execute() in conformance SentinelConditionalFlow<A>(uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 128LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance SentinelConditionalFlow<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96LL))();
}

uint64_t type metadata completion function for SentinelConditionalFlow(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + 88);
}

uint64_t HintInstance.hintHistoryUpdateBlock.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a3;
}

void HintInstance.updateHintHistory(_:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for TemplatingSection(0LL);
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = (void *)(v10 - v9);
  uint64_t v12 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  outlined init with copy of Result<TemplatingResult, Error>(v3, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload(v11, v8) == 1)
  {
    uint64_t v34 = (void *)*v11;
    uint64_t v17 = v34;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    swift_willThrowTypedImpl(&v34, v18, &protocol self-conformance witness table for Error);
    swift_errorRelease(v17);
LABEL_12:
    uint64_t v27 = _swiftEmptyArrayStorage;
    goto LABEL_13;
  }

  uint64_t v19 = OUTLINED_FUNCTION_142(v16, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
  uint64_t v20 = TemplatingResult.sections.getter(v19);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }

  uint64_t v30 = v1;
  uint64_t v34 = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  unint64_t v22 = v20 + ((*(unsigned __int8 *)(v33 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
  uint64_t v31 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v33 + 16);
  uint64_t v32 = *(void *)(v33 + 72);
  do
  {
    uint64_t v23 = v31(v7, v22, v4);
    uint64_t v24 = TemplatingSection.id.getter(v23);
    uint64_t v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v7, v4);
    uint64_t v27 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
    {
      OUTLINED_FUNCTION_8_32();
      uint64_t v27 = v34;
    }

    unint64_t v28 = v27[2];
    if (v28 >= v27[3] >> 1)
    {
      OUTLINED_FUNCTION_8_32();
      uint64_t v27 = v34;
    }

    v27[2] = v28 + 1;
    uint64_t v29 = &v27[2 * v28];
    v29[4] = v24;
    v29[5] = v26;
    v22 += v32;
    --v21;
  }

  while (v21);
  swift_bridgeObjectRelease();
  uint64_t v1 = v30;
LABEL_13:
  v1(v27);
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_7_5();
}

void HintInstance.updateHintHistory(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  id v5 = [a1 dialog];
  unint64_t v6 = type metadata accessor for DialogElement();
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL));
    if (v8) {
      goto LABEL_3;
    }
LABEL_16:
    OUTLINED_FUNCTION_50();
    a4(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    return;
  }

  if (v7 < 0) {
    uint64_t v18 = v7;
  }
  else {
    uint64_t v18 = v7 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v18);
  OUTLINED_FUNCTION_50();
  if (!v8) {
    goto LABEL_16;
  }
LABEL_3:
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v8 & 0x8000000000000000LL) == 0)
  {
    uint64_t v9 = 0LL;
    do
    {
      if ((v7 & 0xC000000000000001LL) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      }
      else {
        id v10 = *(id *)(v7 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v12 = [v10 id];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      uint64_t v15 = v14;

      unint64_t v16 = _swiftEmptyArrayStorage[2];
      if (v16 >= _swiftEmptyArrayStorage[3] >> 1) {
        OUTLINED_FUNCTION_8_32();
      }
      ++v9;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
      v17[4] = v13;
      v17[5] = v15;
    }

    while (v8 != v9);
    goto LABEL_16;
  }

  __break(1u);
}

uint64_t SiriPhoneHintGenerator.generateHint()()
{
  uint64_t v47 = v1;
  uint64_t v48 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v37 = v8;
  uint64_t v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = OUTLINED_FUNCTION_3_47();
  unint64_t v39 = *(void **)(v9 - 8);
  uint64_t v10 = v39[8];
  __chkstk_darwin();
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 48);
  unint64_t v40 = v0;
  uint64_t v15 = 0LL;
  if ((OUTLINED_FUNCTION_72_0(v14) & 1) != 0)
  {
    uint64_t v34 = v7;
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void))(v4 + 40))(v44, v6, v4, 0LL);
    uint64_t v16 = v45;
    uint64_t v17 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 64))(v41, v16, v17);
    uint64_t v18 = v42;
    uint64_t v36 = v43;
    uint64_t v35 = __swift_project_boxed_opaque_existential_1(v41, v42);
    uint64_t v19 = OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24));
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v6, v9);
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v9, AssociatedConformanceWitness);
    SiriPhoneDefaultsProviding.getOrDefault<A>(key:defaultValue:)( v19,  (uint64_t)v11,  v18,  v9,  v36,  AssociatedConformanceWitness,  (uint64_t)v13);
    uint64_t v21 = (void (*)(char *, uint64_t))v39[1];
    v21(v11, v9);
    __swift_destroy_boxed_opaque_existential_1(v41);
    __swift_destroy_boxed_opaque_existential_1(v44);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 56))(v13, v6, v4);
    if (v23)
    {
      uint64_t v15 = v22;
      uint64_t v24 = v34;
      OUTLINED_FUNCTION_142(v38, (uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
      uint64_t v25 = v39;
      unint64_t v40 = (void (*)(char *, char *, uint64_t))v39[4];
      v40(v11, v13, v9);
      uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
      uint64_t v27 = (v26 + 32) & ~v26;
      uint64_t v28 = *((unsigned __int8 *)v25 + 80);
      uint64_t v29 = ((v37 + v27 + v28) & ~v28) + v10;
      uint64_t v30 = (v37 + v27 + v28) & ~v28;
      uint64_t v31 = swift_allocObject(&unk_3FDB20, v29, v26 | v28 | 7);
      *(void *)(v31 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v6;
      *(void *)(v31 + 24) = v4;
      OUTLINED_FUNCTION_142(v31 + v27, v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
      v40((char *)(v31 + v30), v11, v9);
    }

    else
    {
      v21(v13, v9);
      return 0LL;
    }
  }

  return v15;
}

void updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()()
{
  uint64_t v38 = v0;
  uint64_t v39 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  swift_getAssociatedTypeWitness(0LL);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = *(void *)(v11 + 16);
  if (v16)
  {
    uint64_t v29 = v7;
    uint64_t v30 = v13;
    uint64_t v31 = v12;
    swift_bridgeObjectRetain();
    for (unint64_t i = (uint64_t *)(v11 + 40); ; i += 2)
    {
      uint64_t v19 = *(i - 1);
      uint64_t v18 = *i;
      v35[0] = v19;
      v35[1] = v18;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_87_0();
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 64))(v19, v18, v29, v5, v3);
    OUTLINED_FUNCTION_87_0();
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 40))(v35, v5, v3);
    uint64_t v20 = v36;
    uint64_t v21 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 64))(v32, v20, v21);
    uint64_t v22 = v33;
    uint64_t v23 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v5, v3);
    uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16);
    uint64_t v26 = v5;
    uint64_t v27 = v31;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, v26, v31);
    v25(v24, v15, v27, AssociatedConformanceWitness, v22, v23);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v27);
    __swift_destroy_boxed_opaque_existential_1(v32);
    __swift_destroy_boxed_opaque_existential_1(v35);
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()( void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1[1];
  __int128 v10[2] = *a1;
  v10[3] = v4;
  v10[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v10[1] = v5;
  unint64_t v6 = lazy protocol witness table accessor for type String and conformance String();
  unint64_t v7 = lazy protocol witness table accessor for type String and conformance String();
  char v8 = BidirectionalCollection<>.starts<A>(with:)(v10, &type metadata for String, &type metadata for String, v6, v7);
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_EB7F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = OUTLINED_FUNCTION_3_47();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

void partial apply for updateHintHistory #1 <A>(_:) in SiriPhoneHintGenerator.generateHint()()
{
}

uint64_t destroy for HintInstance(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 24));
}

uint64_t initializeWithCopy for HintInstance(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  __int128 v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v4);
  swift_retain(v3);
  return a1;
}

void *assignWithCopy for HintInstance(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

void *assignWithTake for HintInstance(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease(a1[1]);
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for HintInstance()
{
  return &type metadata for HintInstance;
}

uint64_t OUTLINED_FUNCTION_3_47()
{
  return swift_getAssociatedTypeWitness(0LL);
}

void OUTLINED_FUNCTION_8_32()
{
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:)( void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (PhoneCallNLIntent.isEmergencyServicesCall()())
  {
    uint64_t v5 = 2LL;
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_0_44(a1);
  Swift::Bool v6 = PhoneCallNLIntent.hasVoiceMail()();
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)&v40);
  if (v6)
  {
    OUTLINED_FUNCTION_0_44(&v40);
    Swift::Bool v7 = PhoneCallNLIntent.hasPhoneNumber()();
    __swift_destroy_boxed_opaque_existential_1(&v40);
    if (!v7)
    {
      uint64_t v5 = 3LL;
      goto LABEL_12;
    }
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1(&v40);
  }

  OUTLINED_FUNCTION_0_44(a1);
  if (PhoneCallNLIntent.isRedial()())
  {
    uint64_t v5 = 4LL;
  }

  else
  {
    OUTLINED_FUNCTION_0_44(a1);
    if (PhoneCallNLIntent.isCallBack()()) {
      uint64_t v5 = 5LL;
    }
    else {
      uint64_t v5 = 1LL;
    }
  }

uint64_t OUTLINED_FUNCTION_0_44(void *a1)
{
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_46( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, a2, v13, a4);
}

uint64_t IncomingCallActionContinueInAppStrategy.requireUnlock(intentResolutionRecord:)()
{
  uint64_t v1 = (void *)*v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    Swift::Bool v7 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)Swift::Bool v7 = 0;
    _os_log_impl(&dword_0, v4, v6, "#IncomingCallActionContinueInAppStrategy: requireUnlock", v7, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  uint64_t v8 = v1[11];
  uint64_t v9 = type metadata accessor for IntentResolutionRecord(0LL, v1[10], v8);
  uint64_t v10 = (void *)IntentResolutionRecord.intentResponse.getter(v9);
  char v11 = IncomingCallIntentResponse.isIncomingCall.getter(v8, v1[12]);

  return v11 & 1;
}

uint64_t IncomingCallActionContinueInAppStrategy.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:)( uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  uint64_t v4 = *v2;
  v3[9] = *v2;
  uint64_t v5 = *(void *)(v4 + 80);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v4 + 88);
  v3[11] = v6;
  uint64_t v7 = type metadata accessor for IntentResolutionRecord(0LL, v5, v6);
  v3[12] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[13] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[14] = swift_task_alloc(v9);
  v3[15] = swift_task_alloc(v9);
  return swift_task_switch( IncomingCallActionContinueInAppStrategy.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:),  0LL,  0LL);
}

uint64_t IncomingCallActionContinueInAppStrategy.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_3_48(v2);
  uint64_t v4 = OUTLINED_FUNCTION_3_48(v1);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
  BOOL v8 = os_log_type_enabled(v5, v7);
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 104);
  if (v8)
  {
    uint64_t v13 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v45 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)&v47[0] = v46;
    *(_DWORD *)uint64_t v13 = 136315394;
    *(void *)(v0 + 24) = IntentResolutionRecord.app.getter(v11);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v14(v9, v11);
    uint64_t v15 = type metadata accessor for App(0LL);
    unint64_t v16 = lazy protocol witness table accessor for type App and conformance App();
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter(v15, v16);
    unint64_t v19 = v18;
    swift_release(*(void *)(v0 + 24));
    *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, (uint64_t *)v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v13 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2112;
    uint64_t v20 = IntentResolutionRecord.intentResponse.getter(v11);
    *(void *)(v0 + 40) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v13 + 14);
    *uint64_t v45 = v20;
    v14(v10, v11);
    _os_log_impl( &dword_0,  v5,  v7,  "#IncomingCallActionContinueInAppStrategy: makeContinueInAppAutoPunchOutResponse to app %s with intentResponse %@",  (uint8_t *)v13,  0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v45, 1LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v45);
    swift_arrayDestroy(v46, 1LL);
    OUTLINED_FUNCTION_0_2(v46);
    OUTLINED_FUNCTION_0_2(v13);
  }

  else
  {
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v21(*(void *)(v0 + 120), *(void *)(v0 + 96));
    v21(v10, v11);
  }

  uint64_t v22 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v24 = (void *)IntentResolutionRecord.intentResponse.getter(*(void *)(v0 + 96));
  uint64_t v25 = *(void *)(v23 + 96);
  LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = IncomingCallIntentResponse.isIncomingCall.getter(v22, v25);

  if ((v22 & 1) != 0)
  {
    uint64_t v26 = *(void *)(v0 + 96);
    uint64_t v27 = *(void **)(v0 + 48);
    type metadata accessor for SAIntentGroupLaunchAppWithIntent();
    uint64_t v28 = IntentResolutionRecord.app.getter(v26);
    unint64_t v29 = (void *)IntentResolutionRecord.intent.getter(v26);
    uint64_t v30 = (void *)IntentResolutionRecord.intentResponse.getter(v26);
    uint64_t v31 = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(v28, v29, v30);
    swift_release(v28);

    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v33 = swift_allocObject(v32, 40LL, 7LL);
    *(_OWORD *)(v33 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
    *(void *)(v33 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v31;
    *(void *)&v47[0] = v33;
    specialized Array._endMutation()(v33, v34, v35, v36);
    uint64_t v37 = *(void *)&v47[0];
    uint64_t v38 = type metadata accessor for AceOutput(0LL);
    memset(v47, 0, sizeof(v47));
    uint64_t v48 = 0LL;
    v27[3] = v38;
    void v27[4] = &protocol witness table for AceOutput;
    __swift_allocate_boxed_opaque_existential_1(v27);
    AceOutput.init(commands:flowActivity:)(v37, v47);
    swift_task_dealloc(*(void *)(v0 + 120));
    OUTLINED_FUNCTION_23_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v40 = *(void *)(v0 + 80);
    uint64_t v41 = *(void *)(v0 + 88);
    *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(void *)(v0 + 64);
    uint64_t v42 = (void *)swift_task_alloc(async function pointer to ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:)[1]);
    *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v42;
    uint64_t v43 = type metadata accessor for IncomingCallActionContinueInAppStrategy(0LL, v40, v41, v25);
    uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for IncomingCallActionContinueInAppStrategy<A, B>,  v43);
    *uint64_t v42 = v0;
    v42[1] = IncomingCallActionContinueInAppStrategy.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:);
    return ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:)( *(void *)(v0 + 48),  *(void *)(v0 + 56),  v43,  WitnessTable);
  }

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *(void *)(*v1 + 128);
  uint64_t v3 = *v1;
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v2, v1 + 136) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch( IncomingCallActionContinueInAppStrategy.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:),  0LL,  0LL);
  }
  swift_task_dealloc(*(void *)(v3 + 120));
  OUTLINED_FUNCTION_23_3();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 120));
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t protocol witness for ContinueInAppAutoPunchOutFlowStrategyAsync.makeContinueInAppAutoPunchOutResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 112LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  os_log_type_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return v9(a1, a2);
}

uint64_t protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:)[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  uint64_t v10 = type metadata accessor for IncomingCallActionContinueInAppStrategy(0LL, a3[10], a3[11], a3[12]);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:) in conformance IncomingCallActionContinueInAppStrategy<A, B>;
  return ContinueInAppDialogFlowStrategyAsync.makeContinueInAppResponse(intentResolutionRecord:)(a1, a2, v10, a4);
}

uint64_t protocol witness for UnlockDeviceFlowStrategyAsync.makePromptForDeviceUnlock() in conformance IncomingCallActionContinueInAppStrategy<A1, B1>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc(async function pointer to UnlockDeviceFlowStrategyAsync.makePromptForDeviceUnlock()[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = protocol witness for UnlockDeviceFlowStrategyAsync.makePromptForDeviceUnlock() in conformance IncomingCallActionContinueInAppStrategy<A1, B1>;
  return UnlockDeviceFlowStrategyAsync.makePromptForDeviceUnlock()(a1, a2, a3);
}

uint64_t protocol witness for UnlockDeviceFlowStrategyAsync.makePromptForDeviceUnlock() in conformance IncomingCallActionContinueInAppStrategy<A1, B1>()
{
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 16));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t type metadata accessor for IncomingCallActionContinueInAppStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for IncomingCallActionContinueInAppStrategy);
}

unint64_t type metadata accessor for SAIntentGroupLaunchAppWithIntent()
{
  unint64_t result = lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent;
  if (!lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAIntentGroupLaunchAppWithIntent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store( result,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  }

  return result;
}

uint64_t base witness table accessor for ContinueInAppDialogFlowStrategyAsync in IncomingCallActionContinueInAppStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for IncomingCallActionContinueInAppStrategy<A, B>, a1);
}

uint64_t base witness table accessor for UnlockDeviceFlowStrategyAsync in IncomingCallActionContinueInAppStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for IncomingCallActionContinueInAppStrategy<A, B>, a1);
}

uint64_t base witness table accessor for ContinueInAppFlowStrategy in IncomingCallActionContinueInAppStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for IncomingCallActionContinueInAppStrategy<A, B>, a1);
}

uint64_t type metadata completion function for IncomingCallActionContinueInAppStrategy(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + 104);
}

uint64_t OUTLINED_FUNCTION_3_48(uint64_t a1)
{
  return v3(a1, v2, v1);
}

void UnsupportedCallFlowOutputFactory.__allocating_init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21, void *a22, uint64_t a23)
{
  uint64_t v27 = v26;
  uint64_t v54 = v28;
  uint64_t v55 = v29;
  uint64_t v52 = v30;
  uint64_t v53 = v31;
  uint64_t v50 = v32;
  uint64_t v51 = v33;
  HIDWORD(v49) = v34;
  uint64_t v48 = a23;
  uint64_t v35 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  uint64_t v36 = v27[3];
  v46[2] = v27[4];
  uint64_t v47 = v35;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v36);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_45_9(v37, v38, v46[0]);
  uint64_t v39 = a21[3];
  v46[1] = a21[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a21, v39);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_46_9(v40, v41, v46[0]);
  uint64_t v42 = a22[3];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a22, v42);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  uint64_t v44 = (char *)v46 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v45 + 16))(v44);
  OUTLINED_FUNCTION_74_7();
  specialized UnsupportedCallFlowOutputFactory.init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)( SHIDWORD(v42),  v50,  v51,  v52,  v53,  v54,  v55,  v24,  v25,  (uint64_t)v44,  v36,  v47,  v36,  v42,  v50,  (uint64_t)v51,  v52,  v53);
  __swift_destroy_boxed_opaque_existential_1(a22);
  __swift_destroy_boxed_opaque_existential_1(a21);
  __swift_destroy_boxed_opaque_existential_1(v27);
  OUTLINED_FUNCTION_7_5();
}

void UnsupportedCallFlowOutputFactory.init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21, void *a22, uint64_t a23)
{
  uint64_t v48 = v23;
  uint64_t v49 = v26;
  uint64_t v28 = (void *)v27;
  uint64_t v52 = v29;
  uint64_t v53 = v30;
  uint64_t v50 = v31;
  uint64_t v51 = v32;
  uint64_t v47 = v33;
  HIDWORD(v46) = v34;
  uint64_t v35 = *(void *)(v27 + 24);
  v45[2] = *(void *)(v27 + 32);
  v45[3] = a23;
  __swift_mutable_project_boxed_opaque_existential_1(v27, v35);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_45_9(v36, v37, v45[0]);
  uint64_t v38 = a21[3];
  v45[1] = a21[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a21, v38);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_46_9(v39, v40, v45[0]);
  uint64_t v41 = a22[3];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a22, v41);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  uint64_t v43 = (char *)v45 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v44 + 16))(v43);
  OUTLINED_FUNCTION_74_7();
  specialized UnsupportedCallFlowOutputFactory.init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)( SHIDWORD(v35),  v41,  v49,  v50,  v51,  v52,  v53,  v24,  v25,  (uint64_t)v43,  v48,  v48,  v35,  v41,  v48,  (uint64_t)v49,  v50,  v51);
  __swift_destroy_boxed_opaque_existential_1(a22);
  __swift_destroy_boxed_opaque_existential_1(a21);
  __swift_destroy_boxed_opaque_existential_1(v28);
  OUTLINED_FUNCTION_7_5();
}

uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v7 = UnsupportedPhoneCall.rawValue.getter(*(_BYTE *)(v2 + 24));
  if (v7 == 0xD00000000000001CLL && v8 == 0x8000000000345DD0LL)
  {
    swift_bridgeObjectRelease();
  }

  else
  {
    char v10 = OUTLINED_FUNCTION_81_5(v7, v8, v9, 0x8000000000345DD0LL);
    OUTLINED_FUNCTION_62();
    if ((v10 & 1) == 0) {
      goto LABEL_6;
    }
  }

  OUTLINED_FUNCTION_17_25((void *)(v2 + 88));
  uint64_t v11 = OUTLINED_FUNCTION_95_3();
  v12(v11);
  char v13 = OUTLINED_FUNCTION_79_3(v20);
  __swift_destroy_boxed_opaque_existential_1(v20);
  if ((v13 & 1) == 0)
  {
    uint64_t v17 = (void *)OUTLINED_FUNCTION_5_32((uint64_t)&unk_3FDD50);
    v17[2] = a1;
    void v17[3] = a2;
    v17[4] = v4;
    unint64_t v18 = *(void (**)(void (*)(uint64_t), void *))(*(void *)v4 + 192LL);
    swift_retain();
    swift_retain();
    v18(partial apply for closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:), v17);
    return swift_release(v17);
  }

uint64_t closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[19] = a5;
  v6[20] = a6;
  uint64_t v7 = *(int **)(*(void *)a4 + 224LL);
  char v10 = (uint64_t (*)(void *))((char *)v7 + *v7);
  uint64_t v8 = (void *)swift_task_alloc(v7[1]);
  v6[21] = v8;
  void *v8 = v6;
  v8[1] = closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:);
  return v10(v6 + 14);
}

uint64_t closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)()
{
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 152);
  outlined init with copy of SharedGlobalsProviding(v0 + 112, v0 + 64);
  *(_BYTE *)(v0 + 104) = 0;
  uint64_t v2 = v1(v0 + 64);
  OUTLINED_FUNCTION_93_1(v2, &demangling cache variable for type metadata for Result<Output, Error>);
  OUTLINED_FUNCTION_90();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 152);
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *(_BYTE *)(v0 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 1;
  swift_errorRetain(v1);
  v2(v0 + 16);
  swift_errorRelease(v1);
  outlined destroy of UUID?(v0 + 16, &demangling cache variable for type metadata for Result<Output, Error>);
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

void closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a2;
  uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  char v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload(v15, v13) == 1)
  {
    v26[0] = *(void *)v15;
    uint64_t v16 = v26[0];
    char v27 = 1;
    swift_errorRetain(v26[0]);
    v25(v26);
    swift_errorRelease(v16);
    outlined destroy of UUID?((uint64_t)v26, &demangling cache variable for type metadata for Result<Output, Error>);
  }

  else
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v24(v12, v15, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    uint64_t v17 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v18 = (v17 + 16) & ~v17;
    unint64_t v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v20 = a3;
    unint64_t v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v22 = swift_allocObject(&unk_3FDDA0, v21 + 16, v17 | 7);
    v24((char *)(v22 + v18), v10, v7);
    *(void *)(v22 + v19) = a4;
    uint64_t v23 = (void *)(v22 + v21);
    *uint64_t v23 = v25;
    v23[1] = v20;
    swift_retain();
    swift_retain();
    UnsupportedCallFlowOutputFactory.makeUnsupportedViews(_:)( (uint64_t (*)(void *, void))partial apply for closure #1 in closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:),  v22);
    swift_release(v22);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

void closure #1 in closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( uint64_t a1, char a2, uint64_t a3, void *a4, void (*a5)(void *))
{
  if ((a2 & 1) != 0)
  {
    v11[0] = a1;
    swift_errorRetain(a1);
  }

  else
  {
    uint64_t v10 = a1;
    swift_bridgeObjectRetain();
    closure #1 in closure #1 in closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( &v10,  a3,  a4,  v11);
    outlined consume of Result<[SAAceView], Error>(a1, 0);
  }

  char v12 = a2 & 1;
  a5(v11);
  outlined destroy of UUID?((uint64_t)v11, &demangling cache variable for type metadata for Result<Output, Error>);
}

uint64_t closure #1 in closure #1 in closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *a1;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v13, v15, "#UnsupportedCallFlowOutputFactory: finished constructing Output", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  uint64_t v17 = a3 + 11;
  uint64_t v18 = a3[14];
  uint64_t v19 = a3[15];
  __swift_project_boxed_opaque_existential_1(a3 + 11, v18);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v31, v18, v19);
  uint64_t v21 = a3[14];
  uint64_t v20 = a3[15];
  __swift_project_boxed_opaque_existential_1(v17, v21);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 8))(v29, v21, v20);
  uint64_t v22 = v30;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  char v23 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v22);
  uint64_t v24 = type metadata accessor for NLContextUpdate(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1LL, 1LL, v24);
  uint64_t v25 = type metadata accessor for AceOutput(0LL);
  memset(v27, 0, sizeof(v27));
  uint64_t v28 = 0LL;
  a4[3] = v25;
  a4[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(a4);
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( a2,  v31,  v23 & 1,  v10,  0LL,  0LL,  v9,  _swiftEmptyArrayStorage);
  outlined destroy of UUID?((uint64_t)v27, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1(v31);
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

void UnsupportedCallFlowOutputFactory.makeUnsupportedTemplatingResult(completion:)()
{
  uint64_t v1 = v0;
  uint64_t v99 = v2;
  uint64_t v100 = v3;
  v98[1] = OUTLINED_FUNCTION_94_4();
  __chkstk_darwin();
  uint64_t v5 = (char *)v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v7 = (char *)v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)v98 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)v98 - v10;
  OUTLINED_FUNCTION_49_0((void *)(v0 + 88));
  uint64_t v12 = OUTLINED_FUNCTION_84_5();
  v13(v12);
  switch(*(_BYTE *)(v0 + 24))
  {
    case 4:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v14 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v14, (uint64_t)static Logger.siriPhone);
      os_log_type_t v15 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v15))
      {
        uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v16);
        OUTLINED_FUNCTION_5_13( &dword_0,  v17,  v18,  "#UnsupportedCallFlowOutputFactory makeUnsupportedTemplatingResult: returning unsupported searchCallHistory");
        OUTLINED_FUNCTION_8_33();
      }

      uint64_t v20 = *(void *)(v0 + 120);
      uint64_t v19 = *(void *)(v0 + 128);
      uint64_t v21 = *(void *)(v0 + 112);
      OUTLINED_FUNCTION_82((void *)(v0 + 88));
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 8))(v103, v21, v20);
      uint64_t v22 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( v19,  0LL,  v103);
      OUTLINED_FUNCTION_91_5();
      LOBYTE(v19) = App.isFirstParty()();
      OUTLINED_FUNCTION_64_4();
      if ((v19 & 1) != 0)
      {
        OUTLINED_FUNCTION_49_0(v103);
        uint64_t v23 = OUTLINED_FUNCTION_84_5();
        char v25 = dispatch thunk of DeviceState.isPhone.getter(v23, v24);
        OUTLINED_FUNCTION_91_5();
        if ((v25 & 1) != 0) {
          goto LABEL_41;
        }
      }

      else
      {
        OUTLINED_FUNCTION_91_5();
      }

      uint64_t v74 = v105;
      OUTLINED_FUNCTION_49_0(v104);
      uint64_t v75 = OUTLINED_FUNCTION_84_5();
      dispatch thunk of DeviceState.siriLocale.getter(v75, v76);
      uint64_t v77 = OUTLINED_FUNCTION_69_1();
      uint64_t inited = swift_initStackObject(v77, &v101);
      AppInfoBuilder.getAppName(_:requestedLocale:)(v22, (uint64_t)v5);
      OUTLINED_FUNCTION_62_5();
      if (v74)
      {
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_1_34(inited, v74);
        uint64_t v79 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_88((uint64_t)v11, 0LL, v80, v79);
        OUTLINED_FUNCTION_39();
LABEL_42:
        uint64_t v84 = v99;
        uint64_t v83 = v100;
        uint64_t v85 = *(void **)(v1 + 32);
        char v86 = UnsupportedCallFlowOutputFactory.shouldShowOpenAppButtonForSCH()();
        OUTLINED_FUNCTION_50_6();
        OUTLINED_FUNCTION_64_4();
        uint64_t v87 = SirikitDeviceState.__allocating_init(from:)(v103);
        (*(void (**)(void, char *, void, uint64_t, uint64_t, uint64_t))(class metadata base offset for UnsupportedFlowCATs
                                                                                  + *v85
                                                                                  + 64))( v86 & 1,  v11,  0LL,  v87,  v84,  v83);
        swift_release(v22);
        swift_release(v87);
        uint64_t v88 = (uint64_t)v11;
        goto LABEL_51;
      }

LABEL_52:
      __swift_destroy_boxed_opaque_existential_1(v104);
      OUTLINED_FUNCTION_7_5();
      return;
  }

uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedViews(_:)( uint64_t (*a1)(void *, void), uint64_t a2)
{
  if ((UnsupportedCallFlowOutputFactory.shouldShowOpenAppButtonForSCH()() & 1) == 0) {
    return a1(_swiftEmptyArrayStorage, 0LL);
  }
  static SCHViewBuilders.makeErrorButtonBuilder(templatingService:app:preferredCallProvider:sharedGlobals:)( v2 + 136,  *(void *)(v2 + 128),  0LL,  (void *)(v2 + 88),  v8);
  uint64_t v5 = v9;
  uint64_t v6 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  IdiomSensitiveViewBuilding.makeViews(_:)((uint64_t)a1, a2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1(v8);
}

uint64_t UnsupportedCallFlowOutputFactory.shouldShowOpenAppButtonForSCH()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 88), *(void *)(v0 + 112));
  OUTLINED_FUNCTION_8_5();
  __swift_project_boxed_opaque_existential_1(v32, v33);
  DeviceState.isStandaloneIOS.getter();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_99_3(v3, v4, v5, v6, v7);
  }

  else
  {
    __swift_project_boxed_opaque_existential_1(v2, *(void *)(v0 + 112));
    OUTLINED_FUNCTION_8_5();
    uint64_t v8 = v30;
    uint64_t v9 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    char v10 = dispatch thunk of DeviceState.isWatch.getter(v8, v9);
    uint64_t v11 = __swift_destroy_boxed_opaque_existential_1(v29);
    OUTLINED_FUNCTION_99_3(v11, v12, v13, v14, v15);
    if ((v10 & 1) == 0)
    {
      char v19 = 0;
      goto LABEL_6;
    }
  }

  __swift_project_boxed_opaque_existential_1(v2, *(void *)(v1 + 112));
  OUTLINED_FUNCTION_8_5();
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  uint64_t v18 = DeviceState.supportsOnlyFaceTimeCalls.getter(v16, v17);
  char v19 = v18 ^ 1;
  OUTLINED_FUNCTION_99_3(v18, v20, v21, v22, v23);
LABEL_6:
  uint64_t v24 = UnsupportedPhoneCall.rawValue.getter(*(_BYTE *)(v1 + 24));
  if (v24 == 0xD00000000000001CLL && v25 == 0x8000000000345DD0LL)
  {
    swift_bridgeObjectRelease();
  }

  else
  {
    char v27 = OUTLINED_FUNCTION_81_5(v24, v25, v26, 0x8000000000345DD0LL);
    OUTLINED_FUNCTION_39();
    v19 &= v27;
  }

  return v19 & 1;
}

uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()(uint64_t a1)
{
  v2[52] = a1;
  v2[53] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[54] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v2[55] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[56] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[57] = v6;
  v2[58] = OUTLINED_FUNCTION_23(v6);
  v2[59] = *(void *)(type metadata accessor for ButtonConfigurationModel(0LL) - 8);
  v2[60] = OUTLINED_FUNCTION_28();
  v2[61] = OUTLINED_FUNCTION_28();
  uint64_t v7 = OUTLINED_FUNCTION_94_4();
  v2[62] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[63] = v8;
  v2[64] = OUTLINED_FUNCTION_23(v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[65] = OUTLINED_FUNCTION_28();
  v2[66] = OUTLINED_FUNCTION_28();
  v2[67] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()()
{
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 120);
  uint64_t v5 = (os_log_s *)OUTLINED_FUNCTION_82((void *)(v2 + 88));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_15_12(v1);
  switch(*(_BYTE *)(v2 + 24))
  {
    case 4:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v7 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v7, (uint64_t)static Logger.siriPhone);
      os_log_type_t v8 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v5, v8))
      {
        uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v9 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v5,  v8,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupportedSearchCallHistory",  v9);
        OUTLINED_FUNCTION_0_2((uint64_t)v9);
      }

      uint64_t v10 = *(void *)(v0 + 424);

      uint64_t v11 = *(void *)(v10 + 128);
      __swift_project_boxed_opaque_existential_1((void *)(v2 + 88), *(void *)(v2 + 112));
      OUTLINED_FUNCTION_85();
      uint64_t v12 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( v11,  0LL,  (void *)(v0 + 216));
      *(void *)(v0 + 680) = v12;
      __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 216));
      Swift::Bool v13 = App.isFirstParty()();
      outlined init with copy of SharedGlobalsProviding(v0 + 16, v0 + 256);
      if (v13)
      {
        uint64_t v14 = *(void *)(v0 + 280);
        uint64_t v15 = *(void *)(v0 + 288);
        uint64_t v16 = (void *)OUTLINED_FUNCTION_95_3();
        __swift_project_boxed_opaque_existential_1(v16, v17);
        char v18 = dispatch thunk of DeviceState.isPhone.getter(v14, v15);
        __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 256));
        if ((v18 & 1) != 0)
        {
          uint64_t v19 = *(void *)(v0 + 528);
          goto LABEL_58;
        }
      }

      else
      {
        __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 256));
      }

      uint64_t v81 = *(void *)(v0 + 504);
      uint64_t v80 = *(void *)(v0 + 512);
      uint64_t v104 = *(void *)(v0 + 496);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
      OUTLINED_FUNCTION_51_6();
      uint64_t v82 = OUTLINED_FUNCTION_69_1();
      swift_initStackObject(v82, v0 + 384);
      uint64_t v83 = AppInfoBuilder.getAppName(_:requestedLocale:)(v12, v80);
      uint64_t v85 = v84;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v104);
      uint64_t v86 = *(void *)(v0 + 528);
      if (v85)
      {
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_1_34(v83, v85);
        __swift_storeEnumTagSinglePayload(v86, 0LL, 1LL, v6);
        OUTLINED_FUNCTION_62();
        goto LABEL_59;
      }

      uint64_t v19 = *(void *)(v0 + 528);
LABEL_58:
      OUTLINED_FUNCTION_15_12(v19);
LABEL_59:
      uint64_t v94 = *(void *)(v0 + 424);
      *(_BYTE *)(v0 + 888) = UnsupportedCallFlowOutputFactory.shouldShowOpenAppButtonForSCH()() & 1;
      uint64_t v95 = *(void **)(v94 + 40);
      OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_70_4();
      *(void *)(v0 + 688) = SirikitDeviceState.__allocating_init(from:)(v0 + 296);
      uint64_t v96 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for UnsupportedFlowCATsSimple
                                                        + *v95
                                                        + 32));
      *(void *)(v0 + 6outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = v96;
      *uint64_t v96 = v0;
      v96[1] = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
      OUTLINED_FUNCTION_41_14();
      __asm { BR              X4 }

      return;
    case 5:
    case 6:
    case 8:
    case 9:
    case 0xB:
    case 0xC:
      goto LABEL_16;
    case 7:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v48 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v48, (uint64_t)static Logger.siriPhone);
      os_log_type_t v49 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v49))
      {
        uint64_t v50 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v50);
        OUTLINED_FUNCTION_5_13( &dword_0,  v51,  v52,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupportedDeleteCallHistory");
        OUTLINED_FUNCTION_8_33();
      }

      OUTLINED_FUNCTION_87_5();
      OUTLINED_FUNCTION_101_3();
      uint64_t v26 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(v53 + class metadata base offset for UnsupportedFlowCATsSimple));
      *(void *)(v0 + 600) = v26;
      char v27 = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
      goto LABEL_56;
    case 0xA:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v54 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v54, (uint64_t)static Logger.siriPhone);
      os_log_type_t v55 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v5, v55))
      {
        uint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v56 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v5,  v55,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupported emergencyContactCall",  v56);
        OUTLINED_FUNCTION_0_2((uint64_t)v56);
      }

      uint64_t v57 = *(void *)(v0 + 424);

      uint64_t v58 = *(void *)(v57 + 128);
      if (!App.isFirstParty()())
      {
        uint64_t v59 = *(void *)(v0 + 512);
        uint64_t v102 = *(void *)(v0 + 504);
        uint64_t v103 = *(void *)(v0 + 496);
        uint64_t v61 = *(void *)(v0 + 40);
        uint64_t v60 = *(void *)(v0 + 48);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v61);
        dispatch thunk of DeviceState.siriLocale.getter(v61, v60);
        uint64_t v62 = OUTLINED_FUNCTION_69_1();
        swift_initStackObject(v62, v0 + 400);
        uint64_t v63 = AppInfoBuilder.getAppName(_:requestedLocale:)(v58, v59);
        uint64_t v65 = v64;
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v59, v103);
        uint64_t v66 = *(void *)(v0 + 520);
        if (v65)
        {
          OUTLINED_FUNCTION_6_3();
          OUTLINED_FUNCTION_1_34(v63, v65);
          __swift_storeEnumTagSinglePayload(v66, 0LL, 1LL, v6);
          OUTLINED_FUNCTION_62();
        }

        else
        {
          OUTLINED_FUNCTION_15_12(*(void *)(v0 + 520));
        }

        uint64_t v98 = *(void *)(v0 + 536);
        uint64_t v99 = *(void *)(v0 + 520);
        outlined destroy of UUID?(v98, &demangling cache variable for type metadata for SpeakableString?);
        outlined init with take of SpeakableString?(v99, v98);
      }

      uint64_t v100 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for UnsupportedFlowCATsSimple
                                                         + **(void **)(*(void *)(v0 + 424) + 40LL)
                                                         + 80));
      *(void *)(v0 + 776) = v100;
      void *v100 = v0;
      v100[1] = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
      OUTLINED_FUNCTION_41_14();
      __asm { BR              X2 }

      return;
    case 0xD:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v67 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v67, (uint64_t)static Logger.siriPhone);
      os_log_type_t v68 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v68))
      {
        uint64_t v69 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v69);
        OUTLINED_FUNCTION_5_13( &dword_0,  v70,  v71,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupportedDeleteVoicemail");
        OUTLINED_FUNCTION_8_33();
      }

      OUTLINED_FUNCTION_87_5();
      OUTLINED_FUNCTION_101_3();
      uint64_t v26 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for UnsupportedFlowCATsSimple
                                                        + v72
                                                        + 16));
      *(void *)(v0 + 640) = v26;
      char v27 = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
      goto LABEL_56;
    default:
      if (!*(_BYTE *)(v2 + 24))
      {
        if (static UnsupportedPhoneCall.isInRetailStoreDemoMode()())
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v20 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v20, (uint64_t)static Logger.siriPhone);
          os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
          if (OUTLINED_FUNCTION_27_1(v21))
          {
            uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_47(v22);
            OUTLINED_FUNCTION_5_13( &dword_0,  v23,  v24,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupported startCallEmergencyInRetailStore");
            OUTLINED_FUNCTION_8_33();
          }

          OUTLINED_FUNCTION_87_5();
          OUTLINED_FUNCTION_101_3();
          uint64_t v26 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for UnsupportedFlowCATsSimple
                                                            + v25
                                                            + 64));
          *(void *)(v0 + 544) = v26;
          char v27 = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
        }

        else
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v87 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v87, (uint64_t)static Logger.siriPhone);
          os_log_type_t v88 = OUTLINED_FUNCTION_6_0();
          if (OUTLINED_FUNCTION_27_1(v88))
          {
            uint64_t v89 = (_WORD *)OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_47(v89);
            OUTLINED_FUNCTION_5_13( &dword_0,  v90,  v91,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupported startCallEmergency");
            OUTLINED_FUNCTION_8_33();
          }

          OUTLINED_FUNCTION_87_5();
          OUTLINED_FUNCTION_101_3();
          uint64_t v26 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for UnsupportedFlowCATsSimple
                                                            + v92
                                                            + 48));
          *(void *)(v0 + 560) = v26;
          char v27 = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
        }

LABEL_56:
        *uint64_t v26 = v0;
        v26[1] = v27;
        OUTLINED_FUNCTION_41_14();
        __asm { BR              X0 }
      }

    if (++v51 == v49)
    {

      uint64_t v38 = v75;
      uint64_t v37 = v76;
      uint64_t v39 = v74;
      goto LABEL_58;
    }
  }

  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

  return 0LL;
}

    uint64_t v141 = v81;
    uint64_t v94 = (uint64_t)v140;
    UsoEntitySpan.payloadAttachmentInfo.getter(v93);
    uint64_t v95 = type metadata accessor for PayloadAttachmentInfo(0LL);
    if (__swift_getEnumTagSinglePayload(v94, 1LL, v95) == 1)
    {
      outlined destroy of UUID?(v94, &demangling cache variable for type metadata for PayloadAttachmentInfo?);
      uint64_t v96 = v139;
      __swift_storeEnumTagSinglePayload(v59, 1LL, 1LL, v139);
      uint64_t v97 = v146;
      uint64_t v98 = (uint64_t)v162;
      uint64_t v99 = v59;
    }

    else
    {
      PayloadAttachmentInfo.attachmentType.getter();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v95 - 8) + 8LL))(v94, v95);
      uint64_t v97 = v146;
      uint64_t v98 = (uint64_t)v162;
      uint64_t v99 = v59;
      uint64_t v96 = v139;
    }

    uint64_t v100 = v163;
    (*(void (**)(uint64_t, void, uint64_t))(v97 + 104))(v163, v137, v96);
    __swift_storeEnumTagSinglePayload(v100, 0LL, 1LL, v96);
    uint64_t v101 = v165;
    uint64_t v102 = v165 + *(int *)(v158 + 48);
    outlined init with copy of PhoneCallNLIntent?( v99,  v165,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    outlined init with copy of PhoneCallNLIntent?( v100,  v102,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    if (__swift_getEnumTagSinglePayload(v101, 1LL, v96) == 1)
    {
      outlined destroy of UUID?( v100,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      outlined destroy of UUID?( v99,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      uint64_t v103 = __swift_getEnumTagSinglePayload(v102, 1LL, v96);
      uint64_t v59 = v99;
      uint64_t v81 = v141;
      if (v103 == 1)
      {
        outlined destroy of UUID?( v165,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
        uint64_t v133 = v167;
        Swift::Bool v13 = v136;
LABEL_93:
        swift_bridgeObjectRelease();
        v81(v18, v13);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v150 + 8))(v153, v151);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v157, v133);
        return 1;
      }

      goto LABEL_64;
    }

    outlined init with copy of PhoneCallNLIntent?( v101,  v98,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    uint64_t v104 = __swift_getEnumTagSinglePayload(v102, 1LL, v96);
    uint64_t v81 = v141;
    if (v104 == 1)
    {
      outlined destroy of UUID?( v163,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      uint64_t v59 = v155;
      outlined destroy of UUID?( v155,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v98, v96);
LABEL_64:
      outlined destroy of UUID?( v165,  &demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
      Swift::Bool v13 = v136;
      goto LABEL_66;
    }

    uint64_t v105 = v152;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v152, v102, v96);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PayloadAttachmentInfo.AttachmentType and conformance PayloadAttachmentInfo.AttachmentType,  (uint64_t (*)(uint64_t))&type metadata accessor for PayloadAttachmentInfo.AttachmentType,  (uint64_t)&protocol conformance descriptor for PayloadAttachmentInfo.AttachmentType);
    uint64_t v106 = dispatch thunk of static Equatable.== infix(_:_:)(v162, v105, v96);
    uint64_t v107 = *(void (**)(char *, uint64_t))(v146 + 8);
    v107(v105, v96);
    outlined destroy of UUID?( v163,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    uint64_t v59 = v155;
    outlined destroy of UUID?( v155,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    v107(v162, v96);
    outlined destroy of UUID?( v101,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    uint64_t v133 = v167;
    Swift::Bool v13 = v136;
    if ((v106 & 1) != 0) {
      goto LABEL_93;
    }
LABEL_66:
    uint64_t v108 = UsoEntitySpan.startIndex.getter();
    if ((v108 & 0x100000000LL) != 0)
    {
      uint64_t v62 = v142;
      goto LABEL_71;
    }

    uint64_t v109 = v108;
    unint64_t result = UsoEntitySpan.endIndex.getter();
    uint64_t v62 = v142;
    if ((result & 0x100000000LL) == 0) {
      break;
    }
LABEL_71:
    v81(v18, v13);
    uint64_t v61 = v143 + v138;
    uint64_t v57 = v144 - 1;
    uint64_t v58 = v168;
    if (v144 == 1) {
      goto LABEL_92;
    }
  }

  if (result >= (unint64_t)v109)
  {
    IndexSet.remove(integersIn:)(v109);
    goto LABEL_71;
  }

  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()()
{
  v3[42] = v1;
  v3[43] = v2;
  v3[44] = v0;
  OUTLINED_FUNCTION_73_6();
  *(void *)(v4 + 55__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_27_7();
  v3[45] = v1;
  v3[46] = v2;
  v3[47] = v0;
  OUTLINED_FUNCTION_73_6();
  *(void *)(v4 + 568) = v0;
  swift_task_dealloc(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 592));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 632));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 672));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  OUTLINED_FUNCTION_47_4();
  uint64_t v1 = *(void **)(*(void *)(v0 + 424) + 176LL);
  *(void *)(v0 + 720) = v1;
  if (v1 && *(_BYTE *)(v0 + 888) == 1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)OUTLINED_FUNCTION_28();
    *(void *)(v0 + 728) = v3;
    *uint64_t v3 = v0;
    v3[1] = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
    return UnsupportedCallFlowOutputFactory.getButtonConfigurationModel(app:intent:)( *(void *)(v0 + 488),  *(void *)(v0 + 680),  (uint64_t)v2);
  }

  else
  {
    uint64_t v5 = *(void **)(v0 + 704);
    OUTLINED_FUNCTION_18_28();
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_5_32(v6);
    OUTLINED_FUNCTION_12_39(v7, v8, v9, v10, (__n128)xmmword_31FE60);
    *(void *)(v0 + 760) = v13;
    uint64_t v11 = v5;
    uint64_t v12 = (void *)OUTLINED_FUNCTION_57_6();
    *(void *)(v0 + 768) = v12;
    OUTLINED_FUNCTION_7_45(v12);
    return OUTLINED_FUNCTION_5_40();
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 736) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_27_7();
  uint64_t v1 = (void *)(v0 + 176);
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 752));
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t (*v8)(void);
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = (void *)v0[90];
  uint64_t v2 = (void *)v0[88];
  uint64_t v3 = v0[67];
  uint64_t v4 = v0[66];
  uint64_t v5 = v0[61];
  swift_release(v0[85]);

  uint64_t v6 = OUTLINED_FUNCTION_95_3();
  v7(v6);
  outlined destroy of ButtonConfigurationModel(v5);
  OUTLINED_FUNCTION_47_7(v4);
  OUTLINED_FUNCTION_47_7(v3);
  OUTLINED_FUNCTION_20_20(v0 + 2);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_23_3();
  os_log_type_t v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v8);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 768));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 808));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 880));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = (void *)v9[43];
  v9[72] = v10;
  OUTLINED_FUNCTION_18_28();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_5_32(v11);
  OUTLINED_FUNCTION_12_39(v12, v13, v14, v15, (__n128)xmmword_31FE60);
  v9[73] = a9;
  id v16 = v10;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_57_6();
  v9[74] = v17;
  OUTLINED_FUNCTION_7_45(v17);
  return OUTLINED_FUNCTION_5_40();
}

{
  void *v9;
  void *v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  OUTLINED_FUNCTION_47_4();
  uint64_t v10 = (void *)v9[46];
  v9[72] = v10;
  OUTLINED_FUNCTION_18_28();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_5_32(v11);
  OUTLINED_FUNCTION_12_39(v12, v13, v14, v15, (__n128)xmmword_31FE60);
  v9[73] = a9;
  id v16 = v10;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_57_6();
  v9[74] = v17;
  OUTLINED_FUNCTION_7_45(v17);
  return OUTLINED_FUNCTION_5_40();
}

{
  void *v9;
  void *v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  OUTLINED_FUNCTION_47_4();
  uint64_t v10 = (void *)v9[77];
  OUTLINED_FUNCTION_18_28();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_5_32(v11);
  OUTLINED_FUNCTION_12_39(v12, v13, v14, v15, (__n128)xmmword_31FE60);
  v9[78] = a9;
  id v16 = v10;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_57_6();
  v9[79] = v17;
  OUTLINED_FUNCTION_7_45(v17);
  return OUTLINED_FUNCTION_5_40();
}

{
  void *v9;
  void *v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  OUTLINED_FUNCTION_47_4();
  uint64_t v10 = (void *)v9[82];
  OUTLINED_FUNCTION_18_28();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_5_32(v11);
  OUTLINED_FUNCTION_12_39(v12, v13, v14, v15, (__n128)xmmword_31FE60);
  v9[83] = a9;
  id v16 = v10;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_57_6();
  v9[84] = v17;
  OUTLINED_FUNCTION_7_45(v17);
  return OUTLINED_FUNCTION_5_40();
}

{
  void *v9;
  void *v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  OUTLINED_FUNCTION_47_4();
  uint64_t v10 = (void *)v9[99];
  OUTLINED_FUNCTION_18_28();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_5_32(v11);
  OUTLINED_FUNCTION_12_39(v12, v13, v14, v15, (__n128)xmmword_31FE60);
  v9[100] = a9;
  id v16 = v10;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_57_6();
  v9[101] = v17;
  OUTLINED_FUNCTION_7_45(v17);
  return OUTLINED_FUNCTION_5_40();
}

{
  void *v9;
  void *v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  OUTLINED_FUNCTION_47_4();
  uint64_t v10 = (void *)v9[108];
  OUTLINED_FUNCTION_18_28();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_5_32(v11);
  OUTLINED_FUNCTION_12_39(v12, v13, v14, v15, (__n128)xmmword_31FE60);
  v9[109] = a9;
  id v16 = v10;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_57_6();
  v9[110] = v17;
  OUTLINED_FUNCTION_7_45(v17);
  return OUTLINED_FUNCTION_5_40();
}

#error "EE860: call analysis failed (funcsize=23)"
uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 608) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 6outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

#error "EE9D4: call analysis failed (funcsize=23)"
uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 648) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 6outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

#error "EEB48: call analysis failed (funcsize=23)"
uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 696);
  uint64_t v5 = *(void *)(*v2 + 688);
  *(void *)(v3 + 704) = a1;
  *(void *)(v3 + 71__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc(v4);
  swift_release(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v23 = (void *)v22[88];
  uint64_t v24 = v22[60];
  uint64_t v25 = v22[59];
  uint64_t v26 = v22[55];
  char v27 = (void *)v22[53];
  outlined init with copy of ButtonConfigurationModel(v22[61], v24);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v29 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v30 = (v29 + 32) & ~v29;
  uint64_t v31 = swift_allocObject(v28, v30 + *(void *)(v25 + 72), v29 | 7);
  *(_OWORD *)(v31 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  outlined init with take of ButtonConfigurationModel(v24, v31 + v30);
  _StringGuts.grow(_:)(22LL);
  uint64_t v32 = swift_bridgeObjectRelease();
  static DialogPhase.completion.getter(v32);
  uint64_t v33 = swift_task_alloc(32LL);
  *(void *)(v33 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0xD000000000000025LL;
  *(void *)(v33 + 24) = 0x8000000000349870LL;
  OutputGenerationManifest.init(dialogPhase:_:)( v26,  partial apply for closure #1 in static OutputGenerationManifest.simpleDialogWithButtonOutputManifest(responseViewId:),  v33);
  OUTLINED_FUNCTION_23_3();
  uint64_t v34 = v27[9];
  uint64_t v35 = v27[10];
  OUTLINED_FUNCTION_82(v27 + 6);
  uint64_t v36 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v22[25] = v36;
  v22[26] = lazy protocol witness table accessor for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22 + 22);
  void *boxed_opaque_existential_1 = v31;
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 2;
  swift_storeEnumTagMultiPayload(boxed_opaque_existential_1, v36, 6LL);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v39 = (__n128 *)OUTLINED_FUNCTION_5_32(v38);
  OUTLINED_FUNCTION_12_39(v39, v40, v41, v42, (__n128)xmmword_31FE60);
  v22[93] = 0LL;
  uint64_t v43 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
  id v44 = v23;
  uint64_t v45 = (void *)swift_task_alloc(v43);
  v22[94] = v45;
  *uint64_t v45 = v22;
  v45[1] = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v22[52],  v22 + 22,  0LL,  v22[58],  v34,  v35,  v46,  v47,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

#error "EF084: call analysis failed (funcsize=27)"
uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 784) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 79__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

#error "EF1F8: call analysis failed (funcsize=23)"
uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 83__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "EF2A0: call analysis failed (funcsize=22)"
uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  uint64_t v4 = (void *)*v2;
  os_log_type_t v8 = v4;
  uint64_t v5 = v4[105];
  OUTLINED_FUNCTION_39_0(&v8);
  v4[107] = v1;
  swift_task_dealloc(v6);
  swift_release(v5);
  if (!v1) {
    v4[108] = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

#error "EF434: call analysis failed (funcsize=23)"
#error "EF490: call analysis failed (funcsize=22)"
#error "EF4EC: call analysis failed (funcsize=22)"
#error "EF548: call analysis failed (funcsize=22)"
#error "EF5A4: call analysis failed (funcsize=22)"
#error "EF620: call analysis failed (funcsize=30)"
uint64_t UnsupportedCallFlowOutputFactory.makeUnsupportedOutput()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_52_4();
  uint64_t v3 = (void *)v2[90];
  uint64_t v4 = (void *)v2[88];
  OUTLINED_FUNCTION_53_8();

  OUTLINED_FUNCTION_47_7(v1);
  OUTLINED_FUNCTION_47_7(v0);
  OUTLINED_FUNCTION_67_7();
  OUTLINED_FUNCTION_20_20(v2 + 2);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_23_3();
  uint64_t v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_50_3();
  return OUTLINED_FUNCTION_5_8(v5);
}

#error "EF70C: call analysis failed (funcsize=22)"
#error "EF790: call analysis failed (funcsize=32)"
#error "EF7EC: call analysis failed (funcsize=22)"
uint64_t UnsupportedCallFlowOutputFactory.getButtonConfigurationModel(app:intent:)( uint64_t a1,  uint64_t a2,  uint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  v4[6] = OUTLINED_FUNCTION_23(*(void *)(v5 - 8));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v4[7] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedCallFlowOutputFactory.getButtonConfigurationModel(app:intent:)()
{
  uint64_t v1 = *(void **)(v0[5] + 184LL);
  UnsupportedCallFlowOutputFactory.getSpeakableAppName(app:intent:)();
  uint64_t v2 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + *v1 + 248);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = UnsupportedCallFlowOutputFactory.getButtonConfigurationModel(app:intent:);
  return v5(v0[7]);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[9] = v1;
  swift_task_dealloc(v4);
  uint64_t v5 = v2[7];
  if (!v1) {
    v2[10] = v0;
  }
  outlined destroy of UUID?(v5, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v5 = v4;
  type metadata accessor for SAAppsLaunchApp();
  uint64_t v6 = swift_retain();
  SAAppsLaunchApp.init(app:)(v6);
  UUID.init()(v7);
  ButtonConfigurationModel.init(label:action:id:)(v3, v5, v2);
  swift_release(v1);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  os_log_type_t v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v8();
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 56));
  OUTLINED_FUNCTION_23_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void UnsupportedCallFlowOutputFactory.getSpeakableAppName(app:intent:)()
{
  uint64_t v3 = v2;
  uint64_t v16 = v4;
  uint64_t v5 = OUTLINED_FUNCTION_94_4();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  OUTLINED_FUNCTION_17_25(v0 + 24);
  __swift_project_boxed_opaque_existential_1(v0 + 11, v0[14]);
  OUTLINED_FUNCTION_85();
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  OUTLINED_FUNCTION_51_6();
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v1, v7, v8);
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  __swift_destroy_boxed_opaque_existential_1(v17);
  if (v11)
  {
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_1_34(v9, v11);
    uint64_t v12 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_88(v16, 0LL, v13, v12);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_88(v16, 1LL, v15, v14);
  }

  OUTLINED_FUNCTION_7_5();
}

void UnsupportedCallFlowOutputFactory.deinit()
{
  swift_release(*(void *)(v0 + 184));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 192));
  uint64_t v1 = type metadata accessor for OutputGenerationManifest(0LL);
  OUTLINED_FUNCTION_2_0(v1);
  OUTLINED_FUNCTION_2();
}

uint64_t UnsupportedCallFlowOutputFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( char a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(a11 + 80) = &type metadata for LabelTemplatesProvider;
  *(void *)(a11 + 88) = &protocol witness table for LabelTemplatesProvider;
  char v18 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FDD78, 48LL);
  *(void *)(a11 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v18;
  void v18[2] = a7;
  _OWORD v18[3] = a8;
  v18[4] = a9;
  v18[5] = a10;
  *(_BYTE *)(a11 + outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, a11 + 16);
  *(void *)(a11 + 120) = a4;
  *(void *)(a11 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = a5;
  *(void *)(a11 + 104) = a3;
  *(void *)(a11 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  return a11;
}

uint64_t specialized UnsupportedCallFlowOutputFactory.init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)( int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v57 = a5;
  uint64_t v58 = a7;
  uint64_t v56 = a6;
  uint64_t v53 = a4;
  uint64_t v59 = a3;
  uint64_t v55 = a2;
  LODWORD(v48) = a1;
  uint64_t v54 = a11;
  uint64_t v51 = a9;
  uint64_t v52 = a18;
  uint64_t v50 = a15;
  uint64_t v19 = *(void *)(a15 - 8);
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v66[3] = a13;
  v66[4] = a16;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v66);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32LL))( boxed_opaque_existential_1,  a8,  a13);
  uint64_t v64 = a14;
  uint64_t v65 = a17;
  uint64_t v26 = __swift_allocate_boxed_opaque_existential_1(&v63);
  uint64_t v27 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32LL))(v26, a10, a14);
  static DialogPhase.completion.getter(v27);
  OutputGenerationManifest.init(dialogPhase:_:)( v24,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  *(_BYTE *)(a12 + 24) = v48;
  uint64_t v28 = v58;
  *(void *)(a12 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v57;
  *(void *)(a12 + 40) = v28;
  *(void *)(a12 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v56;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v66, a12 + 48);
  uint64_t v29 = v59;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v59, a12 + 88);
  *(void *)(a12 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v55;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v29, (uint64_t)&v60);
  type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v30 = swift_retain();
  static CATOption.defaultMode.getter(v30);
  uint64_t v48 = CATWrapper.__allocating_init(options:globals:)(v22, 0LL);
  uint64_t v31 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v31);
  uint64_t v32 = CATWrapper.__allocating_init(options:globals:)(v22, 0LL);
  uint64_t v33 = type metadata accessor for AppInfoBuilder();
  uint64_t v34 = swift_allocObject(v33, 16LL, 7LL);
  uint64_t v35 = type metadata accessor for StartCallCATs(0LL);
  static CATOption.defaultMode.getter(v35);
  uint64_t v36 = CATWrapper.__allocating_init(options:globals:)(v22, 0LL);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INIntent, INIntentResponse>);
  uint64_t v38 = swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  uint64_t v39 = v19;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v41 = v49;
  uint64_t v42 = v51;
  uint64_t v43 = v50;
  v40(v49, v51, v50);
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000010LL,  0x8000000000342230LL,  (uint64_t)&v60,  v48,  v32,  v34,  v41,  v36,  v38,  v43,  v52,  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v54,  v55,  v56,  v57,  v58);
  uint64_t v45 = v44;
  uint64_t v61 = v37;
  uint64_t v62 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
  swift_release(v55);
  swift_release(v57);
  swift_release(v56);
  swift_release(v58);
  *(void *)&__int128 v60 = v45;
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v43);
  __swift_destroy_boxed_opaque_existential_1(v66);
  __swift_destroy_boxed_opaque_existential_1(v59);
  outlined init with take of AppSelectionSignalComponent(&v60, a12 + 136);
  *(void *)(a12 + outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = v53;
  outlined init with take of AppSelectionSignalComponent(&v63, a12 + 192);
  *(void *)(a12 + 184) = v54;
  return a12;
}

uint64_t sub_F0068()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t partial apply for closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc(dword_431314);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = partial apply for closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:);
  return closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)(a1, v4, v5, v6, v7, v8);
}

uint64_t partial apply for closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F014C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void partial apply for closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( uint64_t a1)
{
}

uint64_t outlined init with copy of ButtonConfigurationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ButtonConfigurationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ButtonConfigurationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ButtonConfigurationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ButtonConfigurationModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ButtonConfigurationModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t ObjC metadata update function for UnsupportedCallFlowOutputFactory()
{
  return type metadata accessor for UnsupportedCallFlowOutputFactory(0LL);
}

uint64_t type metadata accessor for UnsupportedCallFlowOutputFactory(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for UnsupportedCallFlowOutputFactory;
  if (!type metadata singleton initialization cache for UnsupportedCallFlowOutputFactory) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UnsupportedCallFlowOutputFactory);
  }
  return result;
}

uint64_t type metadata completion function for UnsupportedCallFlowOutputFactory(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_3256B8;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[4] = &unk_3256D0;
  void v4[5] = &unk_3256D0;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = &unk_3256D0;
  _BYTE v4[8] = &unk_3256E8;
  v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[10] = &unk_3256D0;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    v4[11] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 12LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

unint64_t type metadata accessor for SAAppsLaunchApp()
{
  unint64_t result = lazy cache variable for type metadata for SAAppsLaunchApp;
  if (!lazy cache variable for type metadata for SAAppsLaunchApp)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAAppsLaunchApp);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SAAppsLaunchApp);
  }

  return result;
}

uint64_t sub_F0368()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_F0394()
{
  uint64_t v1 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  swift_release(*(void *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

void partial apply for closure #1 in closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for TemplatingResult(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  closure #1 in closure #2 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:)( a1,  v4,  v2 + v6,  *(void **)(v2 + v7),  *(void (**)(void *))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t OUTLINED_FUNCTION_1_47()
{
  uint64_t v2 = *(void *)(v1 + 536);
  __swift_destroy_boxed_opaque_existential_1(v0);
  return swift_task_dealloc(v2);
}

uint64_t OUTLINED_FUNCTION_2_38(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_43()
{
  uint64_t v2 = *(void *)(v1 + 536);
  __swift_destroy_boxed_opaque_existential_1(v0);
  return swift_task_dealloc(v2);
}

uint64_t OUTLINED_FUNCTION_7_45(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 416);
}

uint64_t OUTLINED_FUNCTION_8_33()
{
  return swift_slowDealloc(v0, -1LL, -1LL);
}

uint64_t OUTLINED_FUNCTION_12_39(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  a1[1] = a5;
  a1[2].n128_u64[0] = v5;
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_13_34@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

void *OUTLINED_FUNCTION_18_28()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 + 48), *(void *)(v0 + 72));
}

uint64_t OUTLINED_FUNCTION_20_20(void *a1)
{
  return swift_task_dealloc(v1);
}

uint64_t OUTLINED_FUNCTION_29_17()
{
  return swift_task_dealloc(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_45_9@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t OUTLINED_FUNCTION_46_9@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

void OUTLINED_FUNCTION_47_7(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_49_8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return swift_task_dealloc(a10);
}

uint64_t OUTLINED_FUNCTION_53_8()
{
  return swift_release(*(void *)(v0 + 680));
}

uint64_t OUTLINED_FUNCTION_62_5()
{
  return (*(uint64_t (**)(uint64_t, void))(v0 + 8))(v1, *(void *)(v2 - 216));
}

uint64_t OUTLINED_FUNCTION_63_6()
{
  return *(void *)(v0 + 536);
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_70_4()
{
}

void OUTLINED_FUNCTION_73_6()
{
  *uint64_t v0 = *v1;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_81_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD00000000000001CLL, a4, 0LL);
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return v0;
}

void OUTLINED_FUNCTION_87_5()
{
}

uint64_t OUTLINED_FUNCTION_89_4()
{
  return swift_release(*(void *)(v0 + 816));
}

uint64_t OUTLINED_FUNCTION_90_3()
{
  return swift_release(*(void *)(v0 + 32));
}

uint64_t OUTLINED_FUNCTION_91_5()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_92_4(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, *(void *)(v2 - 224));
}

uint64_t OUTLINED_FUNCTION_94_4()
{
  return type metadata accessor for Locale(0LL);
}

uint64_t OUTLINED_FUNCTION_97_4()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_99_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

  ;
}

uint64_t base witness table accessor for Flow in AnyValueFlow<A>(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for AnyValueFlow<A>, a1);
}

void NewCallConfirmationFlowProducer.__allocating_init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_7_46(v2, v3, v12);
  OUTLINED_FUNCTION_4_44(v4, v5, v6, v7, v8, v9, v10, v11, v13);
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_7_5();
}

void NewCallConfirmationFlowProducer.init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_7_46(v2, v3, v12);
  OUTLINED_FUNCTION_4_44(v4, v5, v6, v7, v8, v9, v10, v11, v13);
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_7_5();
}

uint64_t NewCallConfirmationFlowProducer.makeConfirmationFlow()()
{
  void (*v6)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void v15[5];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  outlined init with copy of SignalProviding((uint64_t)(v0 + 5), (uint64_t)&v16);
  uint64_t v1 = type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
  OUTLINED_FUNCTION_8_2(v1, 80LL);
  PhoneCallYesNoConfirmationFlowStrategy.init(outputProducer:sharedGlobals:)( (uint64_t)&async function pointer to partial apply for implicit closure #2 in implicit closure #1 in NewCallConfirmationFlowProducer.makeConfirmationFlow(),  (uint64_t)v0,  &v16);
  uint64_t v3 = v2;
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 5, v4);
  uint64_t v6 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v6(&v16, v4, v5);
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(&v16, v17);
  v15[3] = v7;
  v15[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(boxed_opaque_existential_1, v9, v7);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  OUTLINED_FUNCTION_15_2(v11);
  uint64_t v12 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type PhoneCallYesNoConfirmationFlowStrategy and conformance PhoneCallYesNoConfirmationFlowStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy,  (uint64_t)&protocol conformance descriptor for PhoneCallYesNoConfirmationFlowStrategy);
  uint64_t v13 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)(v12, v3, v15, v1, v12);
  __swift_destroy_boxed_opaque_existential_1(&v16);
  return v13;
}

uint64_t implicit closure #2 in implicit closure #1 in NewCallConfirmationFlowProducer.makeConfirmationFlow()( uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_4314DC);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return NewCallConfirmationFlowProducer.makePromptOutput()(a1);
}

uint64_t NewCallConfirmationFlowProducer.makePromptOutput()(uint64_t a1)
{
  v2[317] = v1;
  v2[311] = a1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[323] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[329] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[335] = v5;
  v2[341] = OUTLINED_FUNCTION_23(v5);
  uint64_t v6 = type metadata accessor for CommonDirectAction(0LL);
  v2[347] = v6;
  v2[353] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for YesNoConfirmationModel(0LL);
  v2[359] = v7;
  v2[360] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v8, v9, v10);
}

uint64_t NewCallConfirmationFlowProducer.makePromptOutput()()
{
  uint64_t v1 = v0[317];
  uint64_t v2 = type metadata accessor for PhoneCallRecord.Builder(0LL);
  OUTLINED_FUNCTION_15_2(v2);
  PhoneCallRecord.Builder.init()();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for PhoneCallProvider.Builder(0LL);
  OUTLINED_FUNCTION_15_2(v5);
  PhoneCallProvider.Builder.init()();
  uint64_t v7 = v6;
  uint64_t v8 = *(void **)(v1 + 32);
  id v9 = [v8 preferredCallProvider];
  if (!v9)
  {
    unint64_t v12 = 0xE700000000000000LL;
    uint64_t v13 = 0x4E574F4E4B4E55LL;
    goto LABEL_12;
  }

  uint64_t v10 = INPreferredCallProviderGetBackingType(v9);
  switch((_DWORD)v10)
  {
    case 4:
      uint64_t v11 = @"THIRD_PARTY_PROVIDER";
      break;
    case 3:
      uint64_t v11 = @"FACETIME_PROVIDER";
      break;
    case 2:
      uint64_t v11 = @"TELEPHONY_PROVIDER";
      break;
    default:
      uint64_t v11 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v10));
      goto LABEL_11;
  }

  uint64_t v14 = v11;
LABEL_11:
  uint64_t v15 = v11;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  unint64_t v12 = v16;

LABEL_12:
  uint64_t v17 = (*(uint64_t (**)(uint64_t, unint64_t, void, void))(*(void *)v7 + 200LL))( v13,  v12,  0LL,  0LL);
  swift_release(v7);
  uint64_t v18 = OUTLINED_FUNCTION_39();
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 240LL))(v18);
  swift_release(v17);
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 976LL))(v19);
  swift_release(v4);
  swift_release(v19);
  id v21 = [v8 callCapability];
  if (v21)
  {
    uint64_t BackingType = INCallCapabilityGetBackingType(v21);
    if ((_DWORD)BackingType == 2)
    {
      uint64_t v23 = @"VIDEO_CALL";
    }

    else
    {
      if ((_DWORD)BackingType != 1)
      {
        uint64_t v23 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        goto LABEL_20;
      }

      uint64_t v23 = @"AUDIO_CALL";
    }

    uint64_t v26 = v23;
LABEL_20:
    uint64_t v27 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    unint64_t v24 = v28;

    goto LABEL_21;
  }

  unint64_t v24 = 0xE700000000000000LL;
  uint64_t v25 = 0x4E574F4E4B4E55LL;
LABEL_21:
  uint64_t v29 = v0[317];
  uint64_t v30 = (*(uint64_t (**)(uint64_t, unint64_t, void, void))(*(void *)v20 + 960LL))( v25,  v24,  0LL,  0LL);
  swift_release(v20);
  uint64_t v31 = OUTLINED_FUNCTION_39();
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)v30 + 1176LL))(v31);
  v0[361] = v32;
  swift_release(v30);
  uint64_t v33 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FDDE8, 32LL);
  v0[362] = v33;
  *(void *)(v33 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v29;
  *(void *)(v33 + 24) = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v34 = type metadata accessor for CNContactStore( 255LL,  &lazy cache variable for type metadata for DialogExecutionResult,  &OBJC_CLASS___DialogExecutionResult_ptr);
  swift_asyncLet_begin( v0 + 82,  0LL,  v34,  &async function pointer to partial apply for implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput(),  v33);
  swift_asyncLet_begin( v0 + 162,  0LL,  &type metadata for String,  &async function pointer to implicit closure #2 in NewCallConfirmationFlowProducer.makePromptOutput(),  0LL);
  swift_asyncLet_begin( v0 + 2,  0LL,  &type metadata for String,  &async function pointer to implicit closure #3 in NewCallConfirmationFlowProducer.makePromptOutput(),  0LL);
  return swift_asyncLet_get_throwing(v0 + 162, v0 + 301, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 272);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 2904) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v1 = v0[353];
  uint64_t v2 = v0[347];
  uint64_t v3 = (void *)v0[317];
  v0[364] = v0[301];
  v0[365] = v0[302];
  swift_storeEnumTagMultiPayload(v1, v2, 6LL);
  uint64_t v4 = v3 + 5;
  uint64_t v5 = v3[8];
  uint64_t v6 = v3[9];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  v7(v5, v6);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)(v0 + 247);
  v0[366] = v8;
  __swift_destroy_boxed_opaque_existential_1(v0 + 247);
  outlined destroy of SingleResultCallHistoryModel(v1, type metadata accessor for CommonDirectAction);
  return swift_asyncLet_get_throwing(v0 + 2, v0 + 303, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 312);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 2936) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v30 = *(void **)(v0 + 2928);
  uint64_t v27 = *(void *)(v0 + 2920);
  uint64_t v26 = *(void *)(v0 + 2912);
  uint64_t v1 = *(void *)(v0 + 2880);
  uint64_t v2 = *(void *)(v0 + 2872);
  uint64_t v3 = *(void *)(v0 + 2824);
  uint64_t v31 = *(void *)(v0 + 2584);
  uint64_t v4 = *(void **)(v0 + 2536);
  uint64_t v5 = v4 + 5;
  uint64_t v32 = v4 + 5;
  unint64_t v28 = v4;
  uint64_t v29 = *(void *)(v0 + 2424);
  uint64_t v6 = *(void *)(v0 + 2432);
  swift_storeEnumTagMultiPayload(v3, *(void *)(v0 + 2776), 7LL);
  uint64_t v7 = v4[8];
  uint64_t v8 = v4[9];
  __swift_project_boxed_opaque_existential_1(v5, v7);
  id v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v9(v7, v8);
  CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v0 + 2056));
  uint64_t v11 = v10;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 2056));
  outlined destroy of SingleResultCallHistoryModel(v3, type metadata accessor for CommonDirectAction);
  unint64_t v12 = (void *)(v1 + *(int *)(v2 + 32));
  *unint64_t v12 = 0xD000000000000011LL;
  v12[1] = 0x8000000000346B80LL;
  *(void *)(v0 + 239__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v26;
  *(void *)(v0 + 2400) = v27;
  Loggable.init(wrappedValue:)(v0 + 2392, &type metadata for String);
  uint64_t v13 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor,  &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
  uint64_t v14 = v30;
  CodableAceObject.init(wrappedValue:)(v14, v13);
  *(void *)(v0 + 2376) = v29;
  *(void *)(v0 + 2384) = v6;
  Loggable.init(wrappedValue:)(v0 + 2376, &type metadata for String);
  CodableAceObject.init(wrappedValue:)(v11, v13);

  *(void *)(v0 + 2160) = v2;
  *(void *)(v0 + 2outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel,  type metadata accessor for YesNoConfirmationModel,  (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 2136));
  unint64_t v16 = outlined init with copy of YesNoConfirmationModel(v1, (uint64_t)boxed_opaque_existential_1);
  static DialogPhase.confirmation.getter(v16);
  uint64_t v17 = swift_task_alloc(32LL);
  *(void *)(v17 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v0 + 2136;
  OutputGenerationManifest.init(dialogPhase:_:)( v31,  partial apply for closure #1 in static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:),  v17);
  swift_task_dealloc(v17);
  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 2136));
  uint64_t v18 = v28[8];
  uint64_t v19 = v28[9];
  __swift_project_boxed_opaque_existential_1(v32, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 136))(v18, v19);
  uint64_t v20 = *(_OWORD *)(v0 + 2240);
  *(_OWORD *)(v0 + 2944) = v20;
  *(void *)(v0 + 2960) = __swift_project_boxed_opaque_existential_1((void *)(v0 + 2216), v20);
  id v21 = type metadata accessor for PhoneSnippetDataModels(0LL);
  *(void *)(v0 + 2320) = v21;
  *(void *)(v0 + 2328) = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  uint64_t v22 = __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 2296));
  outlined init with copy of YesNoConfirmationModel(v1, (uint64_t)v22);
  swift_storeEnumTagMultiPayload(v22, v21, 7LL);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  unint64_t v24 = OUTLINED_FUNCTION_8_2(v23, 40LL);
  *(void *)(v0 + 2968) = v24;
  *(_OWORD *)(v24 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  return swift_asyncLet_get_throwing(v0 + 656, v0 + 2440, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2784);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 2976) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
  }
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = (void *)(*(void *)v0 + 2296LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 2992LL));
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v1 = v0[360];
  (*(void (**)(void, void))(v0[335] + 8LL))(v0[341], v0[329]);
  outlined destroy of SingleResultCallHistoryModel(v1, type metadata accessor for YesNoConfirmationModel);
  __swift_destroy_boxed_opaque_existential_1(v0 + 277);
  return swift_asyncLet_finish(v0 + 2, v0 + 303, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 330);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 1296, v0 + 2408, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2016);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 656, v0 + 2440, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 1936);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v1 = *(void *)(v0 + 2896);
  uint64_t v2 = *(void *)(v0 + 2880);
  swift_release(*(void *)(v0 + 2888));
  swift_release_n(v1, 2LL);
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 16, v0 + 2424, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2256);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 1296, v0 + 2408, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2336);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 656, v0 + 2440, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2448);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_asyncLet_finish(v0 + 16, v0 + 2424, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2544);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 1296, v0 + 2408, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2592);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 656, v0 + 2440, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2096);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v1 = v0[371];
  uint64_t v2 = v0[360];
  uint64_t v3 = v0[341];
  uint64_t v4 = v0[335];
  uint64_t v5 = v0[329];
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  outlined destroy of SingleResultCallHistoryModel(v2, type metadata accessor for YesNoConfirmationModel);
  __swift_destroy_boxed_opaque_existential_1(v0 + 287);
  __swift_destroy_boxed_opaque_existential_1(v0 + 277);
  return swift_asyncLet_finish(v0 + 2, v0 + 303, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 354);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 1296, v0 + 2408, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2736);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  return swift_asyncLet_finish(v0 + 656, v0 + 2440, NewCallConfirmationFlowProducer.makePromptOutput(), v0 + 2688);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)NewCallConfirmationFlowProducer.makePromptOutput());
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_2_39();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t NewCallConfirmationFlowProducer.makePromptOutput()( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v23 = v22[371];
  uint64_t v24 = v22[369];
  uint64_t v25 = (void *)v22[305];
  *(void *)(v23 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v25;
  uint64_t v33 = v23;
  specialized Array._endMutation()(a1, a2, a3, a4);
  v22[373] = v33;
  uint64_t v26 = *(void *)(v24 + 8);
  uint64_t v27 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
  id v28 = v25;
  uint64_t v29 = (void *)swift_task_alloc(v27);
  v22[374] = v29;
  *uint64_t v29 = v22;
  v29[1] = NewCallConfirmationFlowProducer.makePromptOutput();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v22[311],  v22 + 287,  v33,  v22[341],  v22[368],  v26,  v30,  v31,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput()( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput(), 0LL, 0LL);
}

uint64_t implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput()()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = *(void **)(v1 + 120);
  swift_getObjectType(*(void *)(v1 + 16));
  uint64_t v4 = SPHCall.toPhoneCallRecord()();
  v0[5] = v4;
  uint64_t v5 = *(int **)(class metadata base offset for OngoingCallCATsSimple + *v3 + 64);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc(v5[1]);
  v0[6] = v6;
  *uint64_t v6 = v0;
  v6[1] = implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput();
  return v8(v4, v2);
}

{
  uint64_t v0;
  **(void **)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(void *)(v0 + 64);
  return OUTLINED_FUNCTION_10_36();
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 40));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput()(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 48);
  *(void *)(*v2 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v1;
  swift_task_dealloc(v5);
  if (!v1)
  {
    swift_release(*(void *)(v4 + 40));
    *(void *)(v4 + 64) = a1;
  }

  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v6, v7, v8);
}

uint64_t implicit closure #2 in NewCallConfirmationFlowProducer.makePromptOutput()(uint64_t a1)
{
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to static LabelTemplates.yes()[1]);
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #2 in NewCallConfirmationFlowProducer.makePromptOutput();
  return static LabelTemplates.yes()();
}

uint64_t implicit closure #2 in NewCallConfirmationFlowProducer.makePromptOutput()()
{
  if (v1) {
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[2];
  *uint64_t v2 = v0[5];
  v2[1] = v1;
  return OUTLINED_FUNCTION_10_36();
}

uint64_t implicit closure #3 in NewCallConfirmationFlowProducer.makePromptOutput()(uint64_t a1)
{
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to static LabelTemplates.no()[1]);
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = implicit closure #3 in NewCallConfirmationFlowProducer.makePromptOutput();
  return static LabelTemplates.no()();
}

uint64_t implicit closure #3 in NewCallConfirmationFlowProducer.makePromptOutput()()
{
  if (v1) {
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t NewCallConfirmationFlowProducer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 80));
  swift_release(*(void *)(v0 + 120));
  return v0;
}

uint64_t NewCallConfirmationFlowProducer.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 128LL, 7LL);
}

void *specialized NewCallConfirmationFlowProducer.init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  a7[13] = a8;
  a7[14] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7 + 10);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32LL))(boxed_opaque_existential_1, a5, a8);
  a7[2] = a1;
  a7[3] = a2;
  a7[4] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a7 + 5));
  a7[15] = a6;
  return a7;
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in NewCallConfirmationFlowProducer.makeConfirmationFlow()( uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_431494);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return implicit closure #2 in implicit closure #1 in NewCallConfirmationFlowProducer.makeConfirmationFlow()(a1);
}

uint64_t type metadata accessor for NewCallConfirmationFlowProducer()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin31NewCallConfirmationFlowProducer);
}

uint64_t sub_F1C1C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput()( uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc(dword_43158C);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return implicit closure #1 in NewCallConfirmationFlowProducer.makePromptOutput()(a1, v5, v4);
}

uint64_t OUTLINED_FUNCTION_2_39()
{
  return swift_release(*(void *)(v0 + 2888));
}

void *OUTLINED_FUNCTION_4_44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized NewCallConfirmationFlowProducer.init(currentCall:newCallIntent:sharedGlobals:labelTemplatesProvider:ongoingCallCats:)( v14,  v13,  v12,  v11,  v16,  v9,  v10,  v15,  a9);
}

uint64_t OUTLINED_FUNCTION_7_46@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t OUTLINED_FUNCTION_10_36()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

  ;
}

void SiriKitFlowFactoryProtocol.makeAuthenticationGuardFlow()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnlockDevicePolicy(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CommonFlowGuard>);
  uint64_t v10 = *(void *)(type metadata accessor for CommonFlowGuard(0LL) - 8);
  uint64_t v11 = swift_allocObject( v9,  ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
        + *(void *)(v10 + 72),
          *(unsigned __int8 *)(v10 + 80) | 7LL);
  *(_OWORD *)(v11 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  static UnlockDevicePolicy.default.getter(v11);
  static CommonFlowGuard.ensuringDeviceIsAuthenticated(using:)(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 104))(v11, a1, a2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_58();
}

void SiriKitFlowFactoryProtocol.makeDelegateBasedRCHFlow<A>(delegate:app:intent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a4;
  uint64_t v13 = OUTLINED_FUNCTION_14_29(255LL);
  uint64_t v14 = OUTLINED_FUNCTION_14_29(255LL);
  uint64_t v15 = type metadata accessor for RCHChildFlowProducers(255LL, v13, v14);
  uint64_t v16 = type metadata accessor for Optional(0LL, v15);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v20 - v18;
  __swift_storeEnumTagSinglePayload((uint64_t)&v20 - v18, 1LL, 1LL, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40))( a1,  a2,  a3,  v19,  a5,  a7,  v20,  a6);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  OUTLINED_FUNCTION_7_5();
}

void SiriKitFlowFactory.makeRCHFlow<A>(strategy:childFlowFactory:app:intent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __chkstk_darwin();
  OUTLINED_FUNCTION_2_40(v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_13_36();
  __chkstk_darwin();
  OUTLINED_FUNCTION_4_45();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_8_34();
  RCHFlowFactory.makeRCHFlowWithResolvedApp(_:intent:hasUserBeenAuthorizedForApp:)(a3, a4, 1LL, v4);
  OUTLINED_FUNCTION_11_36();
  OUTLINED_FUNCTION_7_5();
}

void SiriKitFlowFactory.makeContinueInAppAutoPunchOutFlow<A>(strategy:factory:rchRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)( a1,  a4,  a5);
  v7(a2, a3);
  OUTLINED_FUNCTION_10_37();
  uint64_t v8 = type metadata accessor for AnyFlow(0LL);
  Flow.eraseToAnyFlow()(v8);
  OUTLINED_FUNCTION_3_49();
  OUTLINED_FUNCTION_24_0();
}

void SiriKitFlowFactory.makeDelegateBasedRCHFlow<A>(delegate:app:intent:producers:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = RCHFlowDelegate.makeRCHFlow(app:intent:producers:)(a2, a3, a4, a5, a6);
  uint64_t v8 = type metadata accessor for RCHDelegateToRCHFlowStrategyAdapter(255LL, a5, a6);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for RCHDelegateToRCHFlowStrategyAdapter<A>, v8);
  uint64_t v10 = type metadata accessor for RCHFlow(0LL, v8, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for RCHFlow<A>, v10);
  OUTLINED_FUNCTION_16_25();
  swift_release(v11);
  OUTLINED_FUNCTION_24_0();
}

void SiriKitFlowFactory.makeDelegateBasedRCHFlow<A>(delegate:input:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v8 = swift_getAssociatedTypeWitness(255LL);
  uint64_t v9 = type metadata accessor for RCHChildFlowProducers(255LL, AssociatedTypeWitness, v8);
  uint64_t v10 = type metadata accessor for Optional(0LL, v9);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)v18 - v12;
  __swift_storeEnumTagSinglePayload((uint64_t)v18 - v12, 1LL, 1LL, v9);
  uint64_t v14 = RCHFlowDelegate.makeRCHFlow(producers:)(v13, a3, a4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18[1] = v14;
  uint64_t v15 = type metadata accessor for RCHDelegateToRCHFlowStrategyAdapter(255LL, a3, a4);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for RCHDelegateToRCHFlowStrategyAdapter<A>, v15);
  uint64_t v17 = type metadata accessor for RCHFlow(0LL, v15, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for RCHFlow<A>, v17);
  Flow.eraseToAnyValueFlow()(v17);
  swift_release(v14);
  dispatch thunk of AnyValueFlow.on(input:)(a2);
  OUTLINED_FUNCTION_58();
}

uint64_t SiriKitFlowFactory.makeDelegateBasedRCHFlowProducers<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INIntent,  &OBJC_CLASS___INIntent_ptr);
  uint64_t v7 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INIntentResponse,  &OBJC_CLASS___INIntentResponse_ptr);
  return static RCHChildFlowProducers.withRCHFlowDelegate<A>(delegate:)(a1, v6, v7, a2, a3);
}

void SiriKitFlowFactory.makeVoiceCommandRCHFlow<A>(strategy:childFlowFactory:app:intent:)( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = *a2;
  uint64_t v6 = __chkstk_darwin();
  OUTLINED_FUNCTION_2_40(v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_13_36();
  __chkstk_darwin();
  OUTLINED_FUNCTION_4_45();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_8_34();
  RCHFlowFactory.makeRCHFlowWithResolvedApp(_:intent:)(a3, a4, v4);
  OUTLINED_FUNCTION_11_36();
  uint64_t v12 = type metadata accessor for RCHFlowResult( 255LL,  *(void *)(v16 + class metadata base offset for RCHChildFlowFactory),  *(void *)(v16 + class metadata base offset for RCHChildFlowFactory + 8));
  uint64_t v13 = type metadata accessor for AnyValueFlow(0LL, v12);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AnyValueFlow<A>, v13);
  VoiceCommandsParityFlow.eraseToAnyVoiceCommandsParityFlow()(v13, WitnessTable);
  OUTLINED_FUNCTION_3_49();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SiriKitFlowFactory.makeAppResolutionFlow<A, B>(resolving:strategy:protectedAppStrategy:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v18[3] = a4;
  v18[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16LL))(boxed_opaque_existential_1, a2, a4);
  uint64_t v12 = type metadata accessor for DefaultUnlockDeviceFlowStrategyAsync();
  uint64_t v13 = swift_allocObject(v12, 16LL, 7LL);
  void v17[3] = v12;
  v17[4] = lazy protocol witness table accessor for type DefaultUnlockDeviceFlowStrategyAsync and conformance DefaultUnlockDeviceFlowStrategyAsync();
  v17[0] = v13;
  outlined init with copy of SignalProviding(a3, (uint64_t)v16);
  uint64_t v14 = static AppFlowFactory.makeOnDeviceAppResolutionFlow<A>(resolving:appResolutionStrategy:unlockDeviceStrategy:protectedAppCheckStrategy:)( a1,  v18,  v17,  v16,  a5);
  outlined destroy of SpeakableString?( (uint64_t)v16,  &demangling cache variable for type metadata for ProtectedAppCheckStrategy?);
  outlined destroy of SpeakableString?( (uint64_t)v17,  &demangling cache variable for type metadata for UnlockDeviceFlowStrategyAsync?);
  __swift_destroy_boxed_opaque_existential_1(v18);
  return v14;
}

unint64_t lazy protocol witness table accessor for type DefaultUnlockDeviceFlowStrategyAsync and conformance DefaultUnlockDeviceFlowStrategyAsync()
{
  unint64_t result = lazy protocol witness table cache variable for type DefaultUnlockDeviceFlowStrategyAsync and conformance DefaultUnlockDeviceFlowStrategyAsync;
  if (!lazy protocol witness table cache variable for type DefaultUnlockDeviceFlowStrategyAsync and conformance DefaultUnlockDeviceFlowStrategyAsync)
  {
    uint64_t v1 = type metadata accessor for DefaultUnlockDeviceFlowStrategyAsync();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DefaultUnlockDeviceFlowStrategyAsync, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type DefaultUnlockDeviceFlowStrategyAsync and conformance DefaultUnlockDeviceFlowStrategyAsync);
  }

  return result;
}

uint64_t SiriKitFlowFactory.makePersonalDomainActivityNotificationFlow<A>(strategy:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8[3] = a2;
  v8[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16LL))(boxed_opaque_existential_1, a1, a2);
  uint64_t v6 = type metadata accessor for PostPersonalDomainActivityNotificationFlow(0LL);
  OUTLINED_FUNCTION_15_2(v6);
  v8[0] = PostPersonalDomainActivityNotificationFlow.init(strategy:)(v8);
  Flow.eraseToAnyFlow()(v6);
  OUTLINED_FUNCTION_10_37();
  return v6;
}

void SiriKitFlowFactory.makeSharingPolicyFlow()()
{
}

void SiriKitFlowFactory.makeExecuteOnRemoteFlow(inputToExecute:device:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExecuteOnRemoteDeviceSpecification(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  type metadata accessor for Input(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v10 - v9, a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  OUTLINED_FUNCTION_5_41();
  OUTLINED_FUNCTION_7_3();
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v22, v23);
  v21[3] = v13;
  v21[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16LL))( boxed_opaque_existential_1,  v15,  v13);
  OUTLINED_FUNCTION_5_41();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_5_41();
  OUTLINED_FUNCTION_7_3();
  uint64_t v17 = type metadata accessor for ExecuteOnRemoteFlow(0LL);
  OUTLINED_FUNCTION_15_2(v17);
  uint64_t v18 = ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:aceService:deviceState:)(v11, v8, v21, v20, v19);
  __swift_destroy_boxed_opaque_existential_1(v22);
  v22[0] = v18;
  Flow.eraseToAnyValueFlow()(v17);
  OUTLINED_FUNCTION_3_49();
  OUTLINED_FUNCTION_58();
}

uint64_t *SiriKitFlowFactory.makeGuardFlow(withGuards:)(uint64_t a1)
{
  uint64_t v3 = static CommonGuardFlowUtils.makeGuardFlow(withGuards:)(a1);
  uint64_t v1 = type metadata accessor for GuardFlow(0LL);
  Flow.eraseToAnyValueFlow()(v1);
  OUTLINED_FUNCTION_3_49();
  return &v3;
}

uint64_t SiriKitFlowFactory.makeLocationAccessGuardFlow()()
{
  return (*(uint64_t (**)(void *))(*(void *)v0 + 176LL))(&_swiftEmptyArrayStorage);
}

void SiriKitFlowFactory.makeCompositionResolutionFlow(from:to:expectMultipleResolutionResults:nlContextUpdate:targetedRequest:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = v11 - v10;
  outlined init with copy of NLContextUpdate?(a4, v11 - v10);
  uint64_t v13 = type metadata accessor for CompositionResolutionFlow(0LL);
  OUTLINED_FUNCTION_15_2(v13);
  swift_retain();
  OUTLINED_FUNCTION_95_1();
  swift_retain();
  CompositionResolutionFlow.init(from:to:expectMultipleResolutionResults:nlContextUpdate:targetedRequest:)( a1,  a2,  a3,  v12,  a5);
  Flow.eraseToAnyValueFlow()(v13);
  OUTLINED_FUNCTION_3_49();
  OUTLINED_FUNCTION_58();
}

uint64_t outlined init with copy of NLContextUpdate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t protocol witness for SiriKitFlowFactoryProtocol.makeRCHFlow<A>(strategy:childFlowFactory:app:intent:) in conformance SiriKitFlowFactory()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 80LL))();
}

uint64_t protocol witness for SiriKitFlowFactoryProtocol.makeDelegateBasedRCHFlowProducers<A>(delegate:) in conformance SiriKitFlowFactory()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128LL))();
}

uint64_t protocol witness for SiriKitFlowFactoryProtocol.makeCompositionResolutionFlow(from:to:expectMultipleResolutionResults:nlContextUpdate:targetedRequest:) in conformance SiriKitFlowFactory()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192LL))();
}

uint64_t OUTLINED_FUNCTION_2_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return type metadata accessor for RCHFlowFactory(0LL, a5, a6);
}

uint64_t OUTLINED_FUNCTION_3_49()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_4_45()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_34()
{
  return RCHFlowFactory.init(strategy:childFlowFactory:)(v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_37()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_11_36()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_14_29(uint64_t a1)
{
  return swift_getAssociatedTypeWitness(a1);
}

uint64_t OUTLINED_FUNCTION_16_25()
{
  return Flow.eraseToAnyValueFlow()(v0);
}

void specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(void *a1, void *a2)
{
}

uint64_t specialized PhoneCallNLIntent.hasCallConfirmation(_:)(unsigned __int8 a1)
{
  if (one-time initialization token for confirmation != -1) {
    swift_once(&one-time initialization token for confirmation, one-time initialization function for confirmation);
  }
  uint64_t v2 = static PhoneCallNLv3Intent.confirmation;
  uint64_t v3 = OUTLINED_FUNCTION_54_5();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent,  (uint64_t)&protocol conformance descriptor for PhoneCallNLv3Intent);
  IntentNodeTraversable.value<A>(forNode:)(&v13, v2, v3, v4);
  if (v13 == 5)
  {
    char v5 = 0;
  }

  else
  {
    uint64_t v6 = PhoneCallConfirmation.rawValue.getter(v13);
    uint64_t v8 = v7;
    uint64_t v9 = PhoneCallConfirmation.rawValue.getter(a1);
    if (v6 == v9 && v8 == v10) {
      char v5 = 1;
    }
    else {
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0LL);
    }
    OUTLINED_FUNCTION_62();
    swift_bridgeObjectRelease();
  }

  return v5 & 1;
}

void StartVideoCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:biomeEventSender:)( uint64_t a1, uint64_t a2, void *a3)
{
}

void StartVideoCallRCHFlowDelegate.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

void StartVideoCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( uint64_t a1, uint64_t a2, void *a3)
{
}

void StartVideoCallRCHFlowDelegate.makeDialogTemplating()()
{
  uint64_t v2 = OUTLINED_FUNCTION_32_11();
  type metadata accessor for PhoneCallDisplayTextCATs(v2);
  OUTLINED_FUNCTION_65();
  uint64_t v3 = OUTLINED_FUNCTION_42_10();
  type metadata accessor for PhoneCallCommonCATs(0LL);
  OUTLINED_FUNCTION_65();
  uint64_t v4 = OUTLINED_FUNCTION_42_10();
  uint64_t v5 = type metadata accessor for AppInfoBuilder();
  uint64_t v6 = OUTLINED_FUNCTION_73_7(v5);
  uint64_t v7 = type metadata accessor for StartVideoCallTemplatingService(0LL);
  uint64_t v8 = (void *)OUTLINED_FUNCTION_15_2(v7);
  specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( (uint64_t)v9,  v0,  v3,  v4,  v6,  v8);
  OUTLINED_FUNCTION_6();
}

uint64_t StartVideoCallRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v1, (uint64_t)static Logger.siriPhone);
  os_log_type_t v2 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_50_12(v0))
  {
    uint64_t v3 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v3 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v0, v2, "#StartVideoCallRCHFlowDelegate makeIntentFromParse", v3);
    OUTLINED_FUNCTION_0_2((uint64_t)v3);
  }

  outlined init with copy of SharedGlobalsProviding( (uint64_t)v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v11);
  uint64_t v4 = *(void *)((char *)v0 + direct field offset for StartVideoCallRCHFlowDelegate.appResolved);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFromParseFlowStrategyHelper<INStartVideoCallIntent>);
  uint64_t inited = swift_initStackObject(v5, v10);
  outlined init with take of AppSelectionSignalComponent(v11, inited + 24);
  *(void *)(inited + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  swift_retain();
  specialized IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)();
  uint64_t v8 = v7;
  swift_setDeallocating(inited);
  specialized IntentFromParseFlowStrategyHelper.__deallocating_deinit();
  return v8;
}

void StartVideoCallRCHFlowDelegate.makeConfirmationStateFromParse(parse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v70 = v27;
  uint64_t v28 = OUTLINED_FUNCTION_15_1();
  uint64_t v67 = *(void *)(v28 - 8);
  os_log_type_t v68 = (os_log_s *)v28;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v66 = v29;
  OUTLINED_FUNCTION_54_5();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v30 = OUTLINED_FUNCTION_81_2();
  uint64_t v31 = type metadata accessor for NLIntent(v30);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v34 = (char *)&v65 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v65 - v35;
  uint64_t v37 = type metadata accessor for Parse(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v41 = v40 - v39;
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
  uint64_t v69 = v26;
  v42(v41, v26, v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v38 + 88))(v41, v37) != enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v37);
    goto LABEL_8;
  }

  OUTLINED_FUNCTION_21_21(v41, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 96));
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v36, v41, v31);
  uint64_t v43 = *(void *)(v24 + direct field offset for StartVideoCallRCHFlowDelegate.appResolved);
  if (v43)
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v36, v31);
    swift_retain();
    PhoneCallNLv3Intent.init(intent:)((uint64_t)v34, v21);
    uint64_t v44 = *(void *)(v24 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals + 24);
    uint64_t v45 = *(void *)(v24 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals + 32);
    OUTLINED_FUNCTION_49_0((void *)(v24 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v45 + 80))(v71, v44, v45);
    swift_retain();
    uint64_t v46 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( v21,  v43,  0LL,  0LL,  (uint64_t)v71);
    OUTLINED_FUNCTION_164_0();
    outlined destroy of SKTransformer((uint64_t)v71);
    if (v46)
    {
      if ((OUTLINED_FUNCTION_70_5(1u) & 1) != 0)
      {
        OUTLINED_FUNCTION_164_0();

        OUTLINED_FUNCTION_45_10();
        OUTLINED_FUNCTION_20_4();
        uint64_t v47 = (unsigned int *)&enum case for SiriKitConfirmationState.rejected(_:);
      }

      else
      {
        if ((OUTLINED_FUNCTION_70_5(0) & 1) == 0)
        {
          char v54 = OUTLINED_FUNCTION_70_5(2u);
          OUTLINED_FUNCTION_164_0();

          OUTLINED_FUNCTION_45_10();
          OUTLINED_FUNCTION_20_4();
          type metadata accessor for SiriKitConfirmationState(0LL);
          OUTLINED_FUNCTION_52_8();
          if ((v54 & 1) != 0) {
            uint64_t v55 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
          }
          else {
            uint64_t v55 = (unsigned int *)&enum case for SiriKitConfirmationState.unset(_:);
          }
          uint64_t v53 = *v55;
          uint64_t v52 = v70;
          goto LABEL_16;
        }

        OUTLINED_FUNCTION_164_0();

        OUTLINED_FUNCTION_45_10();
        OUTLINED_FUNCTION_20_4();
        uint64_t v47 = (unsigned int *)&enum case for SiriKitConfirmationState.confirmed(_:);
      }

      uint64_t v50 = *v47;
      type metadata accessor for SiriKitConfirmationState(0LL);
      OUTLINED_FUNCTION_52_8();
      uint64_t v52 = v70;
      uint64_t v53 = v50;
LABEL_16:
      v51(v52, v53);
      goto LABEL_17;
    }

    OUTLINED_FUNCTION_164_0();
    OUTLINED_FUNCTION_45_10();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v31);
LABEL_8:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BaseRCHFlowDelegate<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
    uint64_t v49 = (void (*)(uint64_t))method lookup function for BaseRCHFlowDelegate( v48,  &method descriptor for BaseRCHFlowDelegate.makeConfirmationStateFromParse(parse:));
    v49(v69);
LABEL_17:
    OUTLINED_FUNCTION_7_5();
    return;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v56 = v68;
  uint64_t v57 = __swift_project_value_buffer((uint64_t)v68, (uint64_t)static Logger.siriPhone);
  uint64_t v58 = OUTLINED_FUNCTION_142(v66, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 16));
  Logger.logObject.getter(v58);
  os_log_type_t v59 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_87(v59))
  {
    __int128 v60 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v61 = OUTLINED_FUNCTION_7_0(32LL);
    v71[0] = v61;
    OUTLINED_FUNCTION_31_18(4.8149e-34);
    uint64_t v72 = OUTLINED_FUNCTION_47_0(68LL, v62, v63);
    OUTLINED_FUNCTION_32_18((uint64_t)&v72, (uint64_t)&a9);
    OUTLINED_FUNCTION_57_0(&dword_0, v56, (os_log_type_t)v31, "%s", v60);
    OUTLINED_FUNCTION_17_0(v61);
    OUTLINED_FUNCTION_0_2(v61);
    OUTLINED_FUNCTION_0_2((uint64_t)v60);
  }

  OUTLINED_FUNCTION_33_21(68LL);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  68LL,  v64,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
}

void StartVideoCallRCHFlowDelegate.makeNLContextProvider()()
{
  uint64_t v1 = (void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  __swift_project_boxed_opaque_existential_1( (void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals),  *(void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals + 24));
  OUTLINED_FUNCTION_5_42();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_5_42();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v2);
  specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v4, v3);
  OUTLINED_FUNCTION_17_18();
}

void StartVideoCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:)()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for RCHExecutionStep(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))( v14 - v13,  enum case for RCHExecutionStep.handle(_:),  v11);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = static RCHExecutionStep.== infix(_:_:)(v2, v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  if ((v2 & 1) != 0 && v4 && [v4 code] == (char *)&dword_0 + 2)
  {
    uint64_t v16 = *(void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender + 24);
    uint64_t v17 = *(void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender + 32);
    OUTLINED_FUNCTION_17_25((void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender));
    uint64_t v18 = *(void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals + 24);
    uint64_t v19 = *(void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals + 32);
    __swift_project_boxed_opaque_existential_1( (void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals),  v18);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 112))(v18, v19);
    BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(v20, v16, v17);
    OUTLINED_FUNCTION_164_0();
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    *(void *)uint64_t v10 = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(v8, v6, v4);
    *(_WORD *)(v10 + 8) = 256;
    uint64_t v21 = (unsigned int *)&enum case for LaunchAppBehavior.withAutomaticPunchOut(_:);
  }

  else
  {
    uint64_t v21 = (unsigned int *)&enum case for LaunchAppBehavior.withDialogAndButton(_:);
  }

  uint64_t v22 = *v21;
  type metadata accessor for LaunchAppBehavior(0LL);
  OUTLINED_FUNCTION_52_8();
  v23(v10, v22);
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartVideoCallRCHFlowDelegate.makeUnsupportedValueBehavior(app:intent:parameterName:intentResolutionResult:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_72_1();
  return OUTLINED_FUNCTION_55_1(v0, v1, v2, v3);
}

uint64_t StartVideoCallRCHFlowDelegate.makeAceViewProvider()()
{
  uint64_t v1 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  outlined init with copy of SharedGlobalsProviding( v0 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v4);
  uint64_t v2 = type metadata accessor for StartVideoCallAceViewProvider(0LL);
  OUTLINED_FUNCTION_15_2(v2);
  return StartVideoCallAceViewProvider.init(templatingService:sharedGlobals:)(v1, v4);
}

uint64_t StartVideoCallRCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:)( int a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v14 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)( a1,  a2,  a3,  a4,  a5,  v14,  a6,  a7,  (uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter,  &demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INStartVideoCallIntent, INStartVideoCallIntentResponse>,  &direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  return swift_release(v14);
}

void *specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)( int a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void (*a7)(void), uint64_t a8)
{
  return OUTLINED_FUNCTION_67_8( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  &direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals,  v9,  v10,  v11);
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  return OUTLINED_FUNCTION_67_8( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  &direct field offset for StartCallRCHFlowDelegate.sharedGlobals,  v9,  v10,  v11);
}

void *specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)( int a1, uint64_t a2, uint64_t a3, void *a4, id a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t *a10, void *a11)
{
  id v16 = [a5 disambiguationItems];
  uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, (char *)&type metadata for Any + 8);

  uint64_t v18 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  uint64_t v19 = &selRef_alternatives;
  if (v18) {
    uint64_t v19 = &selRef_disambiguationItems;
  }
  id v20 = [a5 *v19];
  uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, (char *)&type metadata for Any + 8);

  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = a3;
  v22._object = a4;
  if ((PhoneCallSlotNames.init(rawValue:)(v22).value & 0xFE) == 4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    uint64_t v24 = (os_log_s *)OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v26 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v24,  v25,  "#CallingIntentRCHFlowDelegate Building contacts disambiguation list",  v26);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }

    uint64_t v27 = specialized _arrayConditionalCast<A, B>(_:)(v21);
    OUTLINED_FUNCTION_34_0();
    if (v27) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = _swiftEmptyArrayStorage;
    }
    uint64_t v29 = a9(a2);
    if (!v29) {
      goto LABEL_28;
    }
    uint64_t v30 = v29;
    if ((unint64_t)v29 >> 62)
    {
      if (v29 >= 0) {
        v29 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v29)) {
        goto LABEL_14;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_14:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v30 & 0xC000000000000001LL) == 0, v30);
      if ((v30 & 0xC000000000000001LL) != 0) {
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v30);
      }
      else {
        id v31 = *(id *)(v30 + 32);
      }
      uint64_t v32 = v31;
      OUTLINED_FUNCTION_62();
      id v33 = [v32 relationship];

      if (v33)
      {
        id v34 = v33;
        specialized Sequence.forEach(_:)((uint64_t)v28, v34);
      }

      goto LABEL_28;
    }

    OUTLINED_FUNCTION_62();
LABEL_28:
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(a10);
    uint64_t v55 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
    *(void *)&__int128 v53 = a6;
    swift_retain();
    uint64_t v44 = App.appIdentifier.getter();
    if (v45) {
      uint64_t v46 = v44;
    }
    else {
      uint64_t v46 = 0LL;
    }
    if (v45) {
      unint64_t v47 = v45;
    }
    else {
      unint64_t v47 = 0xE000000000000000LL;
    }
    uint64_t v48 = (void *)(v49 + *a11);
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    OUTLINED_FUNCTION_5_42();
    __swift_project_boxed_opaque_existential_1(v48, v48[3]);
    OUTLINED_FUNCTION_5_42();
    v56[0] = (uint64_t)v28;
    v56[1] = (uint64_t)v28;
    outlined init with take of AppSelectionSignalComponent(&v53, (uint64_t)&v61);
    outlined init with take of AppSelectionSignalComponent(&v52, (uint64_t)&v60);
    char v57 = 1;
    uint64_t v58 = v46;
    unint64_t v59 = v47;
    swift_bridgeObjectRetain();
    specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)((uint64_t)a7, a8);
    return outlined destroy of PhoneContactDisambiguationItemFactory(v56);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v35 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
  uint64_t v36 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_63(v38))
  {
    uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v40 = OUTLINED_FUNCTION_7_0(32LL);
    v56[0] = v40;
    *(_DWORD *)uint64_t v39 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&__int128 v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a3, (unint64_t)a4, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 8, v39 + 4);
    swift_bridgeObjectRelease_n(a4, 3LL);
    OUTLINED_FUNCTION_57_0( &dword_0,  v37,  (os_log_type_t)a6,  "#CallingIntentRCHFlowDelegate Disambiguating %s, no disambiguation snippet",  v39);
    OUTLINED_FUNCTION_17_0(v40);
    OUTLINED_FUNCTION_0_2(v40);
    OUTLINED_FUNCTION_0_2((uint64_t)v39);
  }

  else
  {

    swift_bridgeObjectRelease_n(a4, 2LL);
  }

  uint64_t v41 = type metadata accessor for SiriKitDisambiguationList(0LL);
  OUTLINED_FUNCTION_15_2(v41);
  uint64_t v42 = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v21,  _swiftEmptyArrayStorage,  0LL,  0LL);
  a7();
  return (void *)swift_release(v42);
}

uint64_t StartVideoCallRCHFlowDelegate.makeErrorDialogBehavior(app:intent:intentResponse:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_72_1();
  return OUTLINED_FUNCTION_55_1(v0, v1, v2, v3);
}

void StartVideoCallRCHFlowDelegate.init()(uint64_t a1, uint64_t a2)
{
}

uint64_t StartVideoCallRCHFlowDelegate.__ivar_destroyer()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender));
  return swift_release(*(void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.appResolved));
}

void StartVideoCallRCHFlowDelegate.deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender));
  swift_release(*(void *)(v0 + direct field offset for StartVideoCallRCHFlowDelegate.appResolved));
  OUTLINED_FUNCTION_2();
}

uint64_t StartVideoCallRCHFlowDelegate.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

void protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance StartVideoCallRCHFlowDelegate( uint64_t a1@<X8>)
{
}

uint64_t specialized PhoneCallNLIntent.isDisplayNameEmergencyContact()()
{
  uint64_t v1 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 48));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent,  (uint64_t)&protocol conformance descriptor for PhoneCallNLv3Intent);
  uint64_t v4 = IntentNodeTraversable.intentNodes(forOntologyNode:)(v2, v1, v3);
  uint64_t v16 = v0;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)&v15,  v4,  (uint64_t)v20);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  uint64_t v8 = v6 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    outlined init with copy of SharedGlobalsProviding(v8, (uint64_t)v17);
    uint64_t v9 = v18;
    uint64_t v10 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 408))(v9, v10);
    if (!v12)
    {
      __swift_destroy_boxed_opaque_existential_1(v17);
      goto LABEL_9;
    }

    if (v11 == 0xD000000000000011LL && v12 == 0x8000000000348E90LL) {
      break;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, 0xD000000000000011LL, 0x8000000000348E90LL, 0LL);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v17);
    if ((v13 & 1) != 0) {
      goto LABEL_14;
    }
LABEL_9:
    v8 += 40LL;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n(v6, 2LL);
      return 0LL;
    }
  }

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v17);
LABEL_14:
  swift_bridgeObjectRelease_n(v6, 2LL);
  return 1LL;
}

void specialized IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)()
{
}

{
  specialized IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)();
}

{
  void *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t (**v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  os_log_s *v26;
  os_log_type_t v27;
  uint8_t *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  os_log_s *v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v39;
  BOOL v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint8_t *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t);
  os_log_type_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t);
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t);
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  Swift::String v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint8_t *v121;
  uint8_t *v122;
  void (*v123)(void *, void (*)(uint64_t, uint64_t), uint64_t);
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(void *__return_ptr, uint64_t);
  void (*v131)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t);
  uint64_t (*v132)(void);
  uint64_t v133;
  uint64_t v134;
  uint8_t *v135;
  uint64_t (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t);
  void *v139;
  uint64_t v140;
  os_log_s *v141;
  void (*v142)(uint64_t, uint64_t);
  __int128 v143;
  uint64_t v144;
  uint64_t v145[6];
  OUTLINED_FUNCTION_29_2();
  uint64_t v125 = v4;
  uint64_t v126 = v5;
  uint64_t v129 = v6;
  unint64_t v132 = v7;
  uint64_t v136 = v8;
  uint64_t v137 = v9;
  uint64_t v139 = v0;
  uint64_t v135 = (uint8_t *)v10;
  uint64_t v142 = v11;
  uint64_t v130 = (void (*)(void *__return_ptr, uint64_t))type metadata accessor for Locale(0LL);
  uint64_t v128 = *((void *)v130 - 1);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  os_log_type_t v127 = v12;
  char v13 = (uint64_t (*)(void))OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  uint64_t v14 = OUTLINED_FUNCTION_81_2();
  type metadata accessor for PhoneCallNLv3Intent(v14);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v16 = OUTLINED_FUNCTION_25_27(v15, v120);
  uint64_t v140 = type metadata accessor for NLIntent(v16);
  uint64_t v133 = *(void *)(v140 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v131 = v17;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v19 = (char *)&v120 - v18;
  __chkstk_darwin();
  uint64_t v138 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t))((char *)&v120 - v20);
  uint64_t v21 = type metadata accessor for Parse(0LL);
  Swift::String v22 = *(void *)(v21 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v124 = (void *)v23;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  os_log_type_t v25 = (uint64_t *)((char *)&v120 - v24);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v141 = (os_log_s *)__swift_project_value_buffer((uint64_t)v13, (uint64_t)static Logger.siriPhone);
  uint64_t v26 = v141;
  Logger.logObject.getter(v141);
  uint64_t v27 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_63(v27))
  {
    uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v28 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v26, v1, "#IntentFromParseFlowStrategyHelper makeIntentFromParse", v28);
    OUTLINED_FUNCTION_0_2((uint64_t)v28);
  }

  uint64_t v123 = *(void (**)(void *, void (*)(uint64_t, uint64_t), uint64_t))(v22 + 16);
  v123(v25, v142, v21);
  uint64_t v29 = (*(uint64_t (**)(void *, uint64_t))(v22 + 88))(v25, v21);
  if (v29 == enum case for Parse.NLv3IntentOnly(_:))
  {
    OUTLINED_FUNCTION_17_33(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    goto LABEL_7;
  }

  id v34 = v29;
  if (v29 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    OUTLINED_FUNCTION_17_33(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
    uint64_t v35 = *(void *)((char *)v25
    uint64_t v3 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v133;
    uint64_t v36 = (uint64_t)v138;
    uint64_t v37 = (os_log_s *)v140;
    OUTLINED_FUNCTION_142((uint64_t)v138, (uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 32));
    os_log_type_t v38 = v3[2];
    v38((uint64_t)v19, v36, (uint64_t)v37);
    PhoneCallNLv3Intent.init(intent:)((uint64_t)v19, v134);
    OUTLINED_FUNCTION_63_7();
    OUTLINED_FUNCTION_39_10();
    uint64_t v39 = OUTLINED_FUNCTION_41();
    uint64_t v40 = os_log_type_enabled(v37, v39);
    uint64_t v136 = v38;
    if (v40)
    {
      uint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v42 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v43 = OUTLINED_FUNCTION_77_5(v42);
      LOBYTE(v3) = v35;
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v135 = v41 + 4;
      uint64_t v44 = (void *)Parse.ServerConversion.siriKitIntent.getter(v43);
      unint64_t v45 = [v44 _metadata];

      uint64_t v46 = [v45 userUtterance];
      *(void *)&uint64_t v143 = v46;
      unint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _INPBString?);
      uint64_t v48 = String.init<A>(describing:)(&v143, v47);
      *(void *)&uint64_t v143 = OUTLINED_FUNCTION_35_16(v48, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, (char *)&v143 + 8, v135);
      swift_release_n(v35, 2LL);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v37, v39, "User utterance: %s", v41);
      OUTLINED_FUNCTION_17_0((uint64_t)v19);
      OUTLINED_FUNCTION_0_2((uint64_t)v19);
      OUTLINED_FUNCTION_0_2((uint64_t)v41);
    }

    else
    {

      OUTLINED_FUNCTION_29_18();
    }

    OUTLINED_FUNCTION_63_7();
    OUTLINED_FUNCTION_39_10();
    uint64_t v50 = OUTLINED_FUNCTION_41();
    uint64_t v51 = OUTLINED_FUNCTION_50_12(v37);
    uint64_t v137 = v35;
    if (v51)
    {
      __int128 v52 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      __int128 v53 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v135 = (uint8_t *)v53;
      v145[0] = v53;
      uint64_t v122 = v52;
      *(_DWORD *)__int128 v52 = 136315138;
      uint64_t v121 = v52 + 4;
      uint64_t v54 = (void *)Parse.ServerConversion.siriKitIntent.getter(v53);
      uint64_t v3 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))[v54 description];
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      char v57 = v56;

      uint64_t v58 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, v145);
      unint64_t v59 = OUTLINED_FUNCTION_69_6(v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v59, v60, v121);
      OUTLINED_FUNCTION_29_18();
      OUTLINED_FUNCTION_34_0();
      uint64_t v61 = v122;
      OUTLINED_FUNCTION_57_0(&dword_0, v37, (os_log_type_t)v50, "SKIntent from server: %s", v122);
      unint64_t v62 = (uint64_t)v135;
      OUTLINED_FUNCTION_17_0((uint64_t)v135);
      OUTLINED_FUNCTION_0_2(v62);
      OUTLINED_FUNCTION_0_2((uint64_t)v61);
    }

    else
    {

      OUTLINED_FUNCTION_29_18();
    }

    __int128 v63 = v140;
    uint64_t v64 = v131;
    v136((uint64_t)v131, (uint64_t)v138, v140);
    OUTLINED_FUNCTION_39_10();
    uint64_t v65 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_46_10(v65))
    {
      uint64_t v66 = v64;
      uint64_t v67 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      os_log_type_t v68 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_77_5(v68);
      *(_DWORD *)uint64_t v67 = 136315138;
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type NLIntent and conformance NLIntent,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter(v140, v69);
      uint64_t v72 = OUTLINED_FUNCTION_35_16(v70, v71);
      uint64_t v73 = OUTLINED_FUNCTION_36_11(v72);
      __int128 v63 = v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v73, v74, v75);
      OUTLINED_FUNCTION_62();
      uint64_t v76 = v66;
      uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
      v77((uint64_t)v76, v63);
      OUTLINED_FUNCTION_57_0(&dword_0, v37, (os_log_type_t)v3, "NLIntent from server: %s", v67);
      OUTLINED_FUNCTION_17_0(v50);
      OUTLINED_FUNCTION_0_2(v50);
      OUTLINED_FUNCTION_0_2((uint64_t)v67);
    }

    else
    {
      uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
      v77((uint64_t)v64, v63);
    }

    char v78 = v137;
    char v13 = v132;
    uint64_t v80 = (void *)Parse.ServerConversion.siriKitIntent.getter(v79);
    uint64_t v81 = (void *)v13();

    if (v81)
    {
      uint64_t v142 = v77;
      uint64_t v82 = v81;
      uint64_t v83 = v139;
      specialized IntentFromParseFlowStrategyHelper.inferApp(from:)();
      uint64_t v85 = v84;
      uint64_t v86 = (uint64_t)(v83 + 3);
      uint64_t v87 = v83[6];
      os_log_type_t v88 = v83[7];
      OUTLINED_FUNCTION_17_25(v83 + 3);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v88 + 8))(v145, v87, v88);
      uint64_t v89 = v145[3];
      uint64_t v90 = v145[4];
      OUTLINED_FUNCTION_17_25(v145);
      uint64_t v91 = v127;
      dispatch thunk of DeviceState.siriLocale.getter(v89, v90);
      specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)( (uint64_t)v82,  v134,  v85,  v91,  (uint64_t)(v83 + 3),  0LL,  1LL,  v129,  v126,  v125,  v120,  (uint64_t)v121,  (uint64_t)v122,  (uint64_t)v123,  (uint64_t)v124,  v125,  v126,  v127,  v128,  v129,  v130,  v131);

      swift_release(v85);
      (*(void (**)(uint64_t, void))(v128 + 8))(v91, v130);
      __swift_destroy_boxed_opaque_existential_1(v145);
      uint64_t v92 = v82;
      OUTLINED_FUNCTION_39_10();
      uint64_t v93 = OUTLINED_FUNCTION_41();
      if (os_log_type_enabled((os_log_t)v82, v93))
      {
        uint64_t v94 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v95 = OUTLINED_FUNCTION_7_0(32LL);
        OUTLINED_FUNCTION_77_5(v95);
        *(_DWORD *)uint64_t v94 = 136315138;
        uint64_t v141 = (os_log_s *)(v94 + 4);
        uint64_t v96 = v92;
        uint64_t v97 = [v96 description];
        uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
        uint64_t v100 = v99;

        uint64_t v101 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v100, v145);
        uint64_t v102 = OUTLINED_FUNCTION_69_6(v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v102, v103, v141);

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0(&dword_0, (os_log_s *)v82, v93, "SKIntent after NCR replacement: %s", v94);
        OUTLINED_FUNCTION_17_0(v86);
        OUTLINED_FUNCTION_0_2(v86);
        OUTLINED_FUNCTION_0_2((uint64_t)v94);
        swift_release(v137);
      }

      else
      {
        OUTLINED_FUNCTION_164_0();
      }

      outlined destroy of PhoneCallNLv3Intent();
      v142((uint64_t)v138, v140);
      goto LABEL_9;
    }

    swift_release(v78);
    outlined destroy of PhoneCallNLv3Intent();
    v77((uint64_t)v138, v63);
LABEL_28:
    uint64_t v104 = (uint64_t)v124;
    v123(v124, v142, v21);
    OUTLINED_FUNCTION_39_10();
    uint64_t v105 = OUTLINED_FUNCTION_59_8();
    if (OUTLINED_FUNCTION_46_10(v105))
    {
      uint64_t v106 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v107 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_77_5(v107);
      *(_DWORD *)uint64_t v106 = 136315138;
      uint64_t v108 = Parse.typeForLogging()();
      uint64_t v109 = OUTLINED_FUNCTION_35_16(v108._countAndFlagsBits, (unint64_t)v108._object);
      uint64_t v110 = OUTLINED_FUNCTION_36_11(v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v110, v111, v112);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_21_21(v104, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
      OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v13,  (os_log_type_t)v3,  "#IntentFromParseFlowStrategyHelper makeIntentFromParse get unexpected parse: %s",  v106);
      OUTLINED_FUNCTION_17_0(v50);
      OUTLINED_FUNCTION_0_2(v50);
      OUTLINED_FUNCTION_0_2((uint64_t)v106);
    }

    else
    {
      OUTLINED_FUNCTION_21_21(v104, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    }

    goto LABEL_9;
  }

  if (v29 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_17_33(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
    swift_unknownObjectRelease(*v25);
  }

  else
  {
    uint64_t v50 = enum case for Parse.uso(_:);
    OUTLINED_FUNCTION_17_33(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    if (v34 != (_DWORD)v50) {
      goto LABEL_28;
    }
  }

void specialized IntentFromParseFlowStrategyHelper.makeIntentFromParseSiriX(parse:nlIntent:previousIntent:)()
{
  uint64_t v113 = v2;
  id v117 = v3;
  id v118 = v4;
  uint64_t v5 = v0;
  uint64_t v119 = v6;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for Locale(0LL);
  uint64_t v111 = *(void *)(v9 - 8);
  uint64_t v112 = v9;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v110 = v10;
  uint64_t v11 = (os_log_s *)OUTLINED_FUNCTION_15_1();
  uint64_t v107 = (void *)*((void *)v11 - 1);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v13 = OUTLINED_FUNCTION_25_27(v12, (uint64_t)v106);
  uint64_t v14 = type metadata accessor for Parse(v13);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v109 = v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v17 = (char *)&v106 - v16;
  uint64_t v18 = v5[2];
  uint64_t v115 = v8;
  uint64_t v116 = (char *)&v106 - v16;
  uint64_t v120 = v11;
  if (v18)
  {
    uint64_t v19 = one-time initialization token for siriPhone;
    OUTLINED_FUNCTION_25_1();
    if (v19 != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    __swift_project_value_buffer((uint64_t)v11, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = swift_retain_n(v18, 2LL);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
    if (os_log_type_enabled(v21, v23))
    {
      uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v25 = OUTLINED_FUNCTION_7_0(32LL);
      v121[0] = v25;
      uint64_t v114 = v1;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v106 = v24 + 4;
      v121[5] = v18;
      uint64_t v26 = v14;
      uint64_t v27 = type metadata accessor for App(0LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v29 = v28;
      uint64_t v30 = v27;
      uint64_t v14 = v26;
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v30, v29);
      uint64_t v33 = OUTLINED_FUNCTION_68_1(v31, v32);
      uint64_t v34 = OUTLINED_FUNCTION_10_4(v33);
      uint64_t v1 = v114;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v35, v106);
      swift_release_n(v18, 2LL);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0( &dword_0,  v21,  v23,  "#IntentFromParseFlowStrategyHelper makeIntentFromParse: appResolved: %s",  v24);
      OUTLINED_FUNCTION_17_0(v25);
      OUTLINED_FUNCTION_0_2(v25);
      OUTLINED_FUNCTION_0_2((uint64_t)v24);
      OUTLINED_FUNCTION_16_3();
    }

    else
    {

      swift_release_n(v18, 3LL);
    }

    uint64_t v8 = v115;
    uint64_t v17 = v116;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    OUTLINED_FUNCTION_12_1((uint64_t)v11, (uint64_t)static Logger.siriPhone);
    os_log_type_t v36 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_50_12(v11))
    {
      uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v37 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v11,  v36,  "#IntentFromParseFlowStrategyHelper makeIntentFromParse: no appResolved",  v37);
      OUTLINED_FUNCTION_0_2((uint64_t)v37);
    }
  }

  os_log_type_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v38(v17, v8, v14);
  int v39 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v17, v14);
  if (v39 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v114 = v1;
    uint64_t v40 = v5[6];
    uint64_t v41 = v5[7];
    uint64_t v107 = v5 + 3;
    uint64_t v108 = v14;
    __swift_project_boxed_opaque_existential_1(v5 + 3, v40);
    uint64_t v42 = *(void (**)(uint64_t))(v41 + 80);
    OUTLINED_FUNCTION_25_1();
    uint64_t v43 = (uint64_t)v117;
    uint64_t v44 = (void *)v18;
    id v45 = v117;
    uint64_t v46 = OUTLINED_FUNCTION_72_8();
    v42(v46);
    unint64_t v47 = v119;
    uint64_t v48 = OUTLINED_FUNCTION_49_0(v119);
    uint64_t v50 = (void *)OUTLINED_FUNCTION_40_11((uint64_t)v48, (uint64_t)v44, v43, v49, (uint64_t)v121);
    outlined destroy of SKTransformer((uint64_t)v121);
    if (v50)
    {
      id v118 = v45;
      uint64_t v51 = v5[6];
      uint64_t v52 = v5[7];
      __int128 v53 = v107;
      __swift_project_boxed_opaque_existential_1(v107, v51);
      uint64_t v54 = *(void (**)(uint64_t))(v52 + 8);
      id v55 = v50;
      uint64_t v56 = OUTLINED_FUNCTION_72_8();
      v54(v56);
      OUTLINED_FUNCTION_49_0(v121);
      uint64_t v57 = v110;
      uint64_t v58 = OUTLINED_FUNCTION_72_8();
      dispatch thunk of DeviceState.siriLocale.getter(v58, v59);
      uint64_t v60 = v47[3];
      uint64_t v61 = v47[4];
      unint64_t v62 = OUTLINED_FUNCTION_49_0(v47);
      uint64_t v119 = v44;
      v113(v55, v62, v44, v57, v53, 0LL, 1LL, v60, v61);
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v57, v112);
      __swift_destroy_boxed_opaque_existential_1(v121);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      __int128 v63 = (os_log_s *)__swift_project_value_buffer((uint64_t)v120, (uint64_t)static Logger.siriPhone);
      id v64 = v55;
      Logger.logObject.getter(v64);
      os_log_type_t v65 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_63(v65))
      {
        uint64_t v66 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v67 = OUTLINED_FUNCTION_7_0(32LL);
        *(_DWORD *)uint64_t v66 = 136315138;
        uint64_t v120 = (os_log_s *)(v66 + 4);
        v121[0] = v67;
        id v68 = v64;
        id v69 = [v68 description];
        uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
        unint64_t v72 = v71;

        uint64_t v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v72, v121);
        uint64_t v74 = OUTLINED_FUNCTION_10_4(v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v74, v75, v120);

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0( &dword_0,  v63,  (os_log_type_t)v47,  "#IntentFromParseFlowStrategyHelper SKIntent after NCR replacement: %s",  v66);
        OUTLINED_FUNCTION_17_0(v67);
        OUTLINED_FUNCTION_0_2(v67);
        OUTLINED_FUNCTION_0_2((uint64_t)v66);

        swift_release(v119);
      }

      else
      {

        swift_release(v119);
      }

      (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v108);
    }

    else
    {

      swift_release(v44);
      uint64_t v86 = v108;
      (*(void (**)(char *, uint64_t))(v114 + 8))(v17, v108);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      __swift_project_value_buffer((uint64_t)v120, (uint64_t)static Logger.siriPhone);
      uint64_t v87 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v38)(v109, v115, v86);
      os_log_type_t v88 = (os_log_s *)Logger.logObject.getter(v87);
      os_log_type_t v89 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_50_12(v88))
      {
        uint64_t v90 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v91 = OUTLINED_FUNCTION_7_0(32LL);
        v121[0] = v91;
        *(_DWORD *)uint64_t v90 = 136315138;
        Swift::String v92 = Parse.typeForLogging()();
        uint64_t v93 = OUTLINED_FUNCTION_68_1(v92._countAndFlagsBits, (unint64_t)v92._object);
        uint64_t v94 = OUTLINED_FUNCTION_10_4(v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v94, v95, v90 + 4);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_76_7();
        OUTLINED_FUNCTION_57_0( &dword_0,  v88,  v89,  "#IntentFromParseFlowStrategyHelper makeIntentFromParseSiriX get unexpected parse: %s",  v90);
        OUTLINED_FUNCTION_17_0(v91);
        OUTLINED_FUNCTION_0_2(v91);
        OUTLINED_FUNCTION_0_2((uint64_t)v90);
      }

      else
      {
        OUTLINED_FUNCTION_76_7();
      }
    }

LABEL_36:
    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v76 = v120;
  if (v39 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_64_5(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    swift_unknownObjectRelease(*(void *)v17);
LABEL_23:
    uint64_t v77 = v119;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    OUTLINED_FUNCTION_12_1((uint64_t)v76, (uint64_t)static Logger.siriPhone);
    os_log_type_t v78 = OUTLINED_FUNCTION_41();
    if (os_log_type_enabled(v76, v78))
    {
      uint64_t v79 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v79 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v76,  v78,  "IntentFromParseFlowStrategyHelper NLv4/USO parse. running convertToIntent.",  v79);
      OUTLINED_FUNCTION_0_2((uint64_t)v79);
    }

    OUTLINED_FUNCTION_49_0(v5 + 3);
    uint64_t v80 = OUTLINED_FUNCTION_72_8();
    v81(v80);
    uint64_t v82 = OUTLINED_FUNCTION_49_0(v77);
    OUTLINED_FUNCTION_25_1();
    uint64_t v83 = (uint64_t)v117;
    id v84 = v117;
    OUTLINED_FUNCTION_40_11((uint64_t)v82, v18, v83, v85, (uint64_t)v121);

    OUTLINED_FUNCTION_16_3();
    outlined destroy of SKTransformer((uint64_t)v121);
    goto LABEL_36;
  }

  if (v39 == enum case for Parse.uso(_:))
  {
    OUTLINED_FUNCTION_64_5(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    goto LABEL_23;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v96 = __swift_project_value_buffer((uint64_t)v76, (uint64_t)static Logger.siriPhone);
  os_log_type_t v97 = v108;
  OUTLINED_FUNCTION_142(v108, v96, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v107[2]);
  v121[0] = 0LL;
  v121[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(33LL);
  uint64_t v98 = swift_bridgeObjectRelease();
  Logger.logObject.getter(v98);
  os_log_type_t v99 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_87(v99))
  {
    uint64_t v100 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v101 = OUTLINED_FUNCTION_7_0(32LL);
    v121[0] = v101;
    *(_DWORD *)uint64_t v100 = 136315138;
    uint64_t v102 = OUTLINED_FUNCTION_47_0(87LL, 0x8000000000349BE0LL, v121);
    uint64_t v103 = OUTLINED_FUNCTION_10_4(v102);
    OUTLINED_FUNCTION_32_18(v103, v104);
    OUTLINED_FUNCTION_57_0(&dword_0, v76, v97, "%s", v100);
    OUTLINED_FUNCTION_17_0(v101);
    OUTLINED_FUNCTION_0_2(v101);
    OUTLINED_FUNCTION_0_2((uint64_t)v100);
  }

  OUTLINED_FUNCTION_33_21(87LL);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  87LL,  v105,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
}

      uint64_t v109 = a4;
      return a4;
    }

    OUTLINED_FUNCTION_20_33(v37[1]);
  }

  uint64_t v70 = v144;
  outlined init with copy of Parse?(v33, v144);
  unint64_t v71 = a4;
  unint64_t v72 = (os_log_s *)OUTLINED_FUNCTION_14_40();
  uint64_t v73 = static os_log_type_t.error.getter();
  uint64_t v74 = v73;
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v75 = OUTLINED_FUNCTION_7_0(42LL);
    uint64_t v148 = OUTLINED_FUNCTION_7_0(128LL);
    *(void *)&uint64_t v149 = v148;
    *(_DWORD *)uint64_t v75 = 136315906;
    OUTLINED_FUNCTION_15_43();
    LODWORD(v14__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v74;
    OUTLINED_FUNCTION_1_59( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
    uint64_t v151 = OUTLINED_FUNCTION_2_55();
    OUTLINED_FUNCTION_35_24((uint64_t)&v151, (uint64_t)v152, v76, v75 + 12);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v75 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    uint64_t v151 = AssociatedTypeWitness;
    MetatypeMetadata = swift_getMetatypeMetadata(AssociatedTypeWitness);
    uint64_t v79 = String.init<A>(describing:)(&v151, MetatypeMetadata);
    uint64_t v151 = OUTLINED_FUNCTION_40_17(v79, v80);
    OUTLINED_FUNCTION_35_24((uint64_t)&v151, (uint64_t)v152, v81, v75 + 22);
    OUTLINED_FUNCTION_87_0();
    *(_WORD *)(v75 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v82 = v138;
    outlined init with copy of Parse?(v70, v138);
    uint64_t v83 = String.init<A>(describing:)(v82, v139);
    uint64_t v151 = OUTLINED_FUNCTION_40_17(v83, v84);
    OUTLINED_FUNCTION_35_24((uint64_t)&v151, (uint64_t)v152, v85, v75 + 32);
    OUTLINED_FUNCTION_87_0();
    outlined destroy of SpeakableString?(v70, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v75 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v151 = (uint64_t)a4;
    uint64_t v86 = type metadata accessor for Optional(0LL, AssociatedTypeWitness);
    uint64_t v87 = v71;
    os_log_type_t v88 = String.init<A>(describing:)(&v151, v86);
    uint64_t v151 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v89, (uint64_t *)&v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152, v75 + 34);

    OUTLINED_FUNCTION_62();
    _os_log_impl( &dword_0,  v72,  (os_log_type_t)v147,  "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.",  (uint8_t *)v75,  0x2Au);
    uint64_t v90 = v148;
    swift_arrayDestroy(v148, 4LL);
    OUTLINED_FUNCTION_0_2(v90);
    OUTLINED_FUNCTION_0_2(v75);
  }

  else
  {
    outlined destroy of SpeakableString?(v70, &demangling cache variable for type metadata for Parse?);
  }

  OUTLINED_FUNCTION_182_1((uint64_t)v71, &demangling cache variable for type metadata for Parse?);
  return a4;
}

    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v67 = (uint64_t)v106;
  if (v38 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_33_38(*(uint64_t (**)(uint64_t, void))(v12 + 96));
    swift_unknownObjectRelease(*(void *)v15);
LABEL_23:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    __swift_project_value_buffer(v67, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    id v68 = OUTLINED_FUNCTION_41();
    if (os_log_type_enabled(v15, v68))
    {
      id v69 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)id v69 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v15,  v68,  "IntentFromParseFlowStrategyHelper NLv4/USO parse. running convertToIntent.",  v69);
      OUTLINED_FUNCTION_0_2((uint64_t)v69);
    }

    OUTLINED_FUNCTION_49_0(v5 + 3);
    uint64_t v70 = OUTLINED_FUNCTION_72_8();
    v71(v70);
    unint64_t v72 = *(void *)(v105 + 80);
    OUTLINED_FUNCTION_25_1();
    uint64_t v73 = (uint64_t)v104;
    uint64_t v74 = v104;
    SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)(v110, v16, v73, 0LL, v72);

    OUTLINED_FUNCTION_16_3();
    outlined destroy of SKTransformer((uint64_t)v112);
    goto LABEL_36;
  }

  if (v38 == enum case for Parse.uso(_:))
  {
    OUTLINED_FUNCTION_33_38(*(uint64_t (**)(uint64_t, void))(v12 + 8));
    goto LABEL_23;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v85 = __swift_project_value_buffer(v67, (uint64_t)static Logger.siriPhone);
  uint64_t v86 = v99;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v99, v85, v67);
  v112[0] = 0LL;
  v112[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(33LL);
  uint64_t v87 = swift_bridgeObjectRelease();
  Logger.logObject.getter(v87);
  os_log_type_t v88 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_87(v88))
  {
    os_log_type_t v89 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v90 = OUTLINED_FUNCTION_7_0(32LL);
    v112[0] = v90;
    OUTLINED_FUNCTION_97_7(COERCE_FLOAT(v17[237]));
    Swift::String v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000057LL, v91, v112);
    uint64_t v93 = OUTLINED_FUNCTION_10_4(v92);
    OUTLINED_FUNCTION_32_18(v93, v94);
    OUTLINED_FUNCTION_57_0(&dword_0, v15, v86, "%s", v89);
    OUTLINED_FUNCTION_17_0(v90);
    OUTLINED_FUNCTION_0_2(v90);
    OUTLINED_FUNCTION_0_2((uint64_t)v89);
  }

  OUTLINED_FUNCTION_33_21(87LL);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  87LL,  v95,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
}

  uint64_t v49 = v79[2];
  if (v49 <= v41) {
    goto LABEL_67;
  }
  if (v40 == v49) {
    goto LABEL_58;
  }
  uint64_t v50 = v42;
  uint64_t v51 = v40;
  while (v51 < v49)
  {
    if (v51 >= v79[2]) {
      goto LABEL_65;
    }
    uint64_t v52 = (void *)v79[v51 + 4];
    __int128 v53 = v77[0];
    if (!*(void *)(v77[0] + 16)) {
      goto LABEL_47;
    }
    static Hasher._hash(seed:_:)(*(void *)(v77[0] + 40), v51);
    OUTLINED_FUNCTION_77_11();
    if ((v55 & 1) == 0) {
      goto LABEL_47;
    }
    if (*(void *)(*(void *)(v53 + 48) + 8 * v54) != v51)
    {
      while (1)
      {
        OUTLINED_FUNCTION_53_19();
        if ((v58 & 1) == 0) {
          break;
        }
        if (*(void *)(v56 + 8 * v57) == v51) {
          goto LABEL_56;
        }
      }

  OUTLINED_FUNCTION_49_19(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displaySymbolIcon);
  if ((v116 & 1) != 0)
  {
LABEL_18:
    OUTLINED_FUNCTION_49_19(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_displayCallDetail);
    if ((v117 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }

void specialized IntentFromParseFlowStrategyHelper.inferApp(from:)()
{
  uint64_t v0 = v9;
  uint64_t v1 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v2 = dispatch thunk of AppResolutionStateProviding.getRequestedApp()(v0, v1);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v8, (uint64_t)v5);
  if (!v2)
  {
    uint64_t v3 = v6;
    uint64_t v4 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    dispatch thunk of AppResolutionStateProviding.getSuggestedApp()(v3, v4);
  }

  __swift_destroy_boxed_opaque_existential_1(v5);
  __swift_destroy_boxed_opaque_existential_1(v8);
  OUTLINED_FUNCTION_17_18();
}

uint64_t specialized IntentFromParseFlowStrategyHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t specialized StartVideoCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32LL))(boxed_opaque_existential_1, a3, a5);
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a1,  a4 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  *(void *)(a4 + direct field offset for StartVideoCallRCHFlowDelegate.appResolved) = a2;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v15,  a4 + direct field offset for StartVideoCallRCHFlowDelegate.biomeEventSender);
  uint64_t v13 = BaseRCHFlowDelegate.init()(v12);
  __swift_destroy_boxed_opaque_existential_1(v15);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

void specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = OUTLINED_FUNCTION_32_11();
  type metadata accessor for CATOption(v12);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  *(void *)((char *)a6 + direct field offset for StartVideoCallTemplatingService.catFamily) = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v6, (uint64_t)v18);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v16 = OUTLINED_FUNCTION_25_1();
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)(v15, 0LL);
  swift_retain();
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000014LL,  0x8000000000342260LL,  v18,  a3,  a4,  a5,  0LL,  0LL,  0LL,  0LL,  v17,  a6);
  swift_release(a5);
  OUTLINED_FUNCTION_16_3();
  __swift_destroy_boxed_opaque_existential_1(v6);
  OUTLINED_FUNCTION_58();
}

uint64_t specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void (*v27)(__int128 *__return_ptr, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[5];
  void v54[2];
  __int128 v55[2];
  void v56[5];
  void v57[6];
  uint64_t v51 = a5;
  uint64_t v50 = a2;
  uint64_t v49 = a1;
  uint64_t v52 = a11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for Locale(0LL);
  unint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v57[3] = type metadata accessor for AppInfoBuilder();
  v57[4] = &protocol witness table for AppInfoBuilder;
  v57[0] = a6;
  v56[3] = &type metadata for LabelTemplatesProvider;
  v56[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v22 = (void *)swift_allocObject(&unk_3FDF48, 48LL, 7LL);
  v56[0] = v22;
  void v22[2] = a7;
  void v22[3] = a8;
  v22[4] = a9;
  v22[5] = a10;
  os_log_type_t v23 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 16));
  *os_log_type_t v23 = 0x3D65737561705C1BLL;
  v23[1] = 0xEC0000005C303532LL;
  uint64_t v24 = (char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 56);
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0LL;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a3,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 72));
  uint64_t v25 = a3[3];
  uint64_t v26 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v25);
  uint64_t v27 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 8);
  swift_retain();
  v27(v55, v25, v26);
  uint64_t v28 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 40));
  outlined init with take of AppSelectionSignalComponent(v55, (uint64_t)v28);
  uint64_t v29 = *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 24);
  uint64_t v46 = a4;
  *(void *)((char *)a12 + v29) = a4;
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + swift_release(*(void *)(v0 + 32)) = v51;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v57,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 48));
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v56,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 64));
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 80)) = v52;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(a12);
  uint64_t v30 = v28[3];
  uint64_t v31 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v30);
  unint64_t v32 = dispatch thunk of DeviceState.siriLocale.getter(v30, v31);
  *(void *)&v55[0] = Locale.identifier.getter(v32);
  *((void *)&v55[0] + 1) = v33;
  v53[0] = 45LL;
  v53[1] = 0xE100000000000000LL;
  v54[0] = 95LL;
  v54[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v34 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v53,  v54,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  os_log_type_t v36 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
  type metadata accessor for INIntentSlotValueType(0LL);
  os_log_type_t v38 = v37;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&protocol conformance descriptor for INIntentSlotValueType);
  uint64_t v40 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v38, &type metadata for String, v39);
  uint64_t v41 = a3[3];
  uint64_t v42 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v41);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v42 + 24))(v55, v41, v42);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v28, (uint64_t)v53);
  uint64_t v43 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1LL, 1LL, v43);
  uint64_t v44 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( v49,  v50,  v34,  v36,  v40,  v55,  v53,  v19);
  swift_release(v46);
  swift_release(v51);
  swift_release(v52);
  __swift_destroy_boxed_opaque_existential_1(v56);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v44;
}

{
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(__int128 *__return_ptr, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[5];
  void v54[2];
  __int128 v55[2];
  void v56[5];
  void v57[6];
  uint64_t v51 = a5;
  uint64_t v50 = a2;
  uint64_t v49 = a1;
  uint64_t v52 = a11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for Locale(0LL);
  unint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v57[3] = type metadata accessor for AppInfoBuilder();
  v57[4] = &protocol witness table for AppInfoBuilder;
  v57[0] = a6;
  v56[3] = &type metadata for LabelTemplatesProvider;
  v56[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v22 = (void *)swift_allocObject(&unk_4001E0, 48LL, 7LL);
  v56[0] = v22;
  void v22[2] = a7;
  void v22[3] = a8;
  v22[4] = a9;
  v22[5] = a10;
  os_log_type_t v23 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 16));
  *os_log_type_t v23 = 0x3D65737561705C1BLL;
  v23[1] = 0xEC0000005C303532LL;
  uint64_t v24 = (char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 56);
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0LL;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a3,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 72));
  uint64_t v25 = a3[3];
  uint64_t v26 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v25);
  uint64_t v27 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 8);
  swift_retain();
  v27(v55, v25, v26);
  uint64_t v28 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 40));
  outlined init with take of AppSelectionSignalComponent(v55, (uint64_t)v28);
  uint64_t v29 = *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 24);
  uint64_t v46 = a4;
  *(void *)((char *)a12 + v29) = a4;
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + swift_release(*(void *)(v0 + 32)) = v51;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v57,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 48));
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v56,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 64));
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 80)) = v52;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(a12);
  uint64_t v30 = v28[3];
  uint64_t v31 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v30);
  unint64_t v32 = dispatch thunk of DeviceState.siriLocale.getter(v30, v31);
  *(void *)&v55[0] = Locale.identifier.getter(v32);
  *((void *)&v55[0] + 1) = v33;
  v53[0] = 45LL;
  v53[1] = 0xE100000000000000LL;
  v54[0] = 95LL;
  v54[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v34 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v53,  v54,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  os_log_type_t v36 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
  type metadata accessor for INIntentSlotValueType(0LL);
  os_log_type_t v38 = v37;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&protocol conformance descriptor for INIntentSlotValueType);
  uint64_t v40 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v38, &type metadata for String, v39);
  uint64_t v41 = a3[3];
  uint64_t v42 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v41);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v42 + 24))(v55, v41, v42);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v28, (uint64_t)v53);
  uint64_t v43 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1LL, 1LL, v43);
  uint64_t v44 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( v49,  v50,  v34,  v36,  v40,  v55,  v53,  v19);
  swift_release(v46);
  swift_release(v51);
  swift_release(v52);
  __swift_destroy_boxed_opaque_existential_1(v56);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v44;
}

{
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(__int128 *__return_ptr, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[5];
  void v54[2];
  __int128 v55[2];
  void v56[5];
  void v57[6];
  uint64_t v51 = a5;
  uint64_t v50 = a2;
  uint64_t v49 = a1;
  uint64_t v52 = a11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for Locale(0LL);
  unint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v57[3] = type metadata accessor for AppInfoBuilder();
  v57[4] = &protocol witness table for AppInfoBuilder;
  v57[0] = a6;
  v56[3] = &type metadata for LabelTemplatesProvider;
  v56[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v22 = (void *)swift_allocObject(&unk_402778, 48LL, 7LL);
  v56[0] = v22;
  void v22[2] = a7;
  void v22[3] = a8;
  v22[4] = a9;
  v22[5] = a10;
  os_log_type_t v23 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 16));
  *os_log_type_t v23 = 0x3D65737561705C1BLL;
  v23[1] = 0xEC0000005C303532LL;
  uint64_t v24 = (char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 56);
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0LL;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a3,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 72));
  uint64_t v25 = a3[3];
  uint64_t v26 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v25);
  uint64_t v27 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 8);
  swift_retain();
  v27(v55, v25, v26);
  uint64_t v28 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 40));
  outlined init with take of AppSelectionSignalComponent(v55, (uint64_t)v28);
  uint64_t v29 = *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 24);
  uint64_t v46 = a4;
  *(void *)((char *)a12 + v29) = a4;
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + swift_release(*(void *)(v0 + 32)) = v51;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v57,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 48));
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v56,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 64));
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 80)) = v52;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(a12);
  uint64_t v30 = v28[3];
  uint64_t v31 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v30);
  unint64_t v32 = dispatch thunk of DeviceState.siriLocale.getter(v30, v31);
  *(void *)&v55[0] = Locale.identifier.getter(v32);
  *((void *)&v55[0] + 1) = v33;
  v53[0] = 45LL;
  v53[1] = 0xE100000000000000LL;
  v54[0] = 95LL;
  v54[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v34 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v53,  v54,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  os_log_type_t v36 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
  type metadata accessor for INIntentSlotValueType(0LL);
  os_log_type_t v38 = v37;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&protocol conformance descriptor for INIntentSlotValueType);
  uint64_t v40 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v38, &type metadata for String, v39);
  uint64_t v41 = a3[3];
  uint64_t v42 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v41);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v42 + 24))(v55, v41, v42);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v28, (uint64_t)v53);
  uint64_t v43 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1LL, 1LL, v43);
  uint64_t v44 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( v49,  v50,  v34,  v36,  v40,  v55,  v53,  v19);
  swift_release(v46);
  swift_release(v51);
  swift_release(v52);
  __swift_destroy_boxed_opaque_existential_1(v56);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v44;
}

{
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(__int128 *__return_ptr, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[5];
  void v54[2];
  __int128 v55[2];
  void v56[5];
  void v57[6];
  uint64_t v51 = a5;
  uint64_t v50 = a2;
  uint64_t v49 = a1;
  uint64_t v52 = a11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for Locale(0LL);
  unint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v57[3] = &type metadata for LabelTemplatesProvider;
  v57[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v22 = (void *)swift_allocObject(&unk_40F288, 48LL, 7LL);
  v57[0] = v22;
  void v22[2] = a7;
  void v22[3] = a8;
  v22[4] = a9;
  v22[5] = a10;
  v56[3] = type metadata accessor for AppInfoBuilder();
  v56[4] = &protocol witness table for AppInfoBuilder;
  v56[0] = a6;
  os_log_type_t v23 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 16));
  *os_log_type_t v23 = 0x3D65737561705C1BLL;
  v23[1] = 0xEC0000005C303532LL;
  uint64_t v24 = (char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 56);
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0LL;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a3,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 72));
  uint64_t v25 = a3[3];
  uint64_t v26 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v25);
  uint64_t v27 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 8);
  swift_retain();
  v27(v55, v25, v26);
  uint64_t v28 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 40));
  outlined init with take of AppSelectionSignalComponent(v55, (uint64_t)v28);
  uint64_t v29 = *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 24);
  uint64_t v46 = a4;
  *(void *)((char *)a12 + v29) = a4;
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + swift_release(*(void *)(v0 + 32)) = v51;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v56,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 48));
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v57,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 64));
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 80)) = v52;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(a12);
  uint64_t v30 = v28[3];
  uint64_t v31 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v30);
  unint64_t v32 = dispatch thunk of DeviceState.siriLocale.getter(v30, v31);
  *(void *)&v55[0] = Locale.identifier.getter(v32);
  *((void *)&v55[0] + 1) = v33;
  v53[0] = 45LL;
  v53[1] = 0xE100000000000000LL;
  v54[0] = 95LL;
  v54[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v34 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v53,  v54,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  os_log_type_t v36 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
  type metadata accessor for INIntentSlotValueType(0LL);
  os_log_type_t v38 = v37;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&protocol conformance descriptor for INIntentSlotValueType);
  uint64_t v40 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v38, &type metadata for String, v39);
  uint64_t v41 = a3[3];
  uint64_t v42 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v41);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v42 + 24))(v55, v41, v42);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v28, (uint64_t)v53);
  uint64_t v43 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1LL, 1LL, v43);
  uint64_t v44 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( v49,  v50,  v34,  v36,  v40,  v55,  v53,  v19);
  swift_release(v46);
  swift_release(v51);
  swift_release(v52);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(v56);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v44;
}

{
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(__int128 *__return_ptr, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[5];
  void v54[2];
  __int128 v55[2];
  void v56[5];
  void v57[6];
  uint64_t v51 = a5;
  uint64_t v50 = a2;
  uint64_t v49 = a1;
  uint64_t v52 = a11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DucTemplatingLocalContext?);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for Locale(0LL);
  unint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v57[3] = type metadata accessor for AppInfoBuilder();
  v57[4] = &protocol witness table for AppInfoBuilder;
  v57[0] = a6;
  v56[3] = &type metadata for LabelTemplatesProvider;
  v56[4] = &protocol witness table for LabelTemplatesProvider;
  uint64_t v22 = (void *)swift_allocObject(&unk_411A88, 48LL, 7LL);
  v56[0] = v22;
  void v22[2] = a7;
  void v22[3] = a8;
  v22[4] = a9;
  v22[5] = a10;
  os_log_type_t v23 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 16));
  *os_log_type_t v23 = 0x3D65737561705C1BLL;
  v23[1] = 0xEC0000005C303532LL;
  uint64_t v24 = (char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 56);
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0LL;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a3,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 72));
  uint64_t v25 = a3[3];
  uint64_t v26 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v25);
  uint64_t v27 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 8);
  swift_retain();
  v27(v55, v25, v26);
  uint64_t v28 = (void *)((char *)a12
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 40));
  outlined init with take of AppSelectionSignalComponent(v55, (uint64_t)v28);
  uint64_t v29 = *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 24);
  uint64_t v46 = a4;
  *(void *)((char *)a12 + v29) = a4;
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + swift_release(*(void *)(v0 + 32)) = v51;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v57,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 48));
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v56,  (uint64_t)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 64));
  *(void *)((char *)a12 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *a12 + 80)) = v52;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(a12);
  uint64_t v30 = v28[3];
  uint64_t v31 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v30);
  unint64_t v32 = dispatch thunk of DeviceState.siriLocale.getter(v30, v31);
  *(void *)&v55[0] = Locale.identifier.getter(v32);
  *((void *)&v55[0] + 1) = v33;
  v53[0] = 45LL;
  v53[1] = 0xE100000000000000LL;
  v54[0] = 95LL;
  v54[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v34 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v53,  v54,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  os_log_type_t v36 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
  type metadata accessor for INIntentSlotValueType(0LL);
  os_log_type_t v38 = v37;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INIntentSlotValueType and conformance INIntentSlotValueType,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&protocol conformance descriptor for INIntentSlotValueType);
  uint64_t v40 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v38, &type metadata for String, v39);
  uint64_t v41 = a3[3];
  uint64_t v42 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v41);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v42 + 24))(v55, v41, v42);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v28, (uint64_t)v53);
  uint64_t v43 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1LL, 1LL, v43);
  uint64_t v44 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( v49,  v50,  v34,  v36,  v40,  v55,  v53,  v19);
  swift_release(v46);
  swift_release(v51);
  swift_release(v52);
  __swift_destroy_boxed_opaque_existential_1(v56);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v44;
}

id specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)( uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  v105[3] = v6;
  v105[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v105);
  outlined init with copy of PhoneCallNLv3Intent(a1, (uint64_t)boxed_opaque_existential_1);
  uint64_t ObjectType = swift_getObjectType(a2);
  uint64_t v9 = dynamic_cast_existential_1_conditional((uint64_t)a2, ObjectType, (uint64_t)&protocol descriptor for CallingIntent);
  if (v9)
  {
    uint64_t v11 = v10;
    uint64_t v12 = swift_getObjectType(v9);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    id v14 = a2;
    if (v13(v12, v11) == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v15 = type metadata accessor for Logger(0LL);
      uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
      uint64_t v17 = (void *)Logger.logObject.getter(v16);
      os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
      if (!os_log_type_enabled((os_log_t)v17, v19))
      {

LABEL_86:
        uint64_t v21 = 1LL;
        goto LABEL_87;
      }

      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( &dword_0,  (os_log_t)v17,  v19,  "#ContactResolution intent is emergency call. bypassing contact resolution",  v20,  2u);
      swift_slowDealloc(v20, -1LL, -1LL);

LABEL_85:
      goto LABEL_86;
    }
  }

  if (a3)
  {
    if (*(void *)(a3 + 16))
    {
LABEL_10:
      uint64_t v21 = 0LL;
LABEL_87:
      __swift_destroy_boxed_opaque_existential_1(v105);
      return (id)v21;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.debug.getter(v17, v34);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v36 = 0;
    uint64_t v37 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
LABEL_84:
    _os_log_impl(&dword_0, (os_log_t)v17, v35, v37, v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
    goto LABEL_85;
  }

  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a2);
  if (!v22)
  {
LABEL_80:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v94 = type metadata accessor for Logger(0LL);
    uint64_t v95 = __swift_project_value_buffer(v94, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v95);
    os_log_type_t v35 = static os_log_type_t.debug.getter(v17, v96);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v36 = 0;
    uint64_t v37 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
    goto LABEL_84;
  }

  uint64_t v23 = v22;
  uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8LL;
  if (!(v22 >> 62))
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8LL));
    if (v25) {
      goto LABEL_14;
    }
    goto LABEL_79;
  }

{
  uint64_t v6;
  void *boxed_opaque_existential_1;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  char v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  const char *v37;
  void *v38;
  char v39;
  char v40;
  id v41;
  void *v42;
  char v43;
  char v44;
  id v45;
  void *v46;
  char v47;
  char v48;
  id v49;
  void *v50;
  char v51;
  char v52;
  uint64_t v53;
  id result;
  void *v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  os_log_s *v85;
  uint64_t v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[16];
  void *v98;
  uint64_t v99;
  unint64_t v100;
  char v101[8];
  uint64_t v102[5];
  char v103[16];
  uint64_t v104;
  void v105[5];
  uint64_t v6 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  v105[3] = v6;
  v105[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v105);
  outlined init with copy of PhoneCallNLv3Intent(a1, (uint64_t)boxed_opaque_existential_1);
  uint64_t ObjectType = swift_getObjectType(a2);
  uint64_t v9 = dynamic_cast_existential_1_conditional((uint64_t)a2, ObjectType, (uint64_t)&protocol descriptor for CallingIntent);
  if (v9)
  {
    uint64_t v11 = v10;
    uint64_t v12 = swift_getObjectType(v9);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    id v14 = a2;
    if (v13(v12, v11) == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v15 = type metadata accessor for Logger(0LL);
      uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
      uint64_t v17 = (void *)Logger.logObject.getter(v16);
      os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
      if (!os_log_type_enabled((os_log_t)v17, v19))
      {

LABEL_86:
        uint64_t v21 = 1LL;
        goto LABEL_87;
      }

      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( &dword_0,  (os_log_t)v17,  v19,  "#ContactResolution intent is emergency call. bypassing contact resolution",  v20,  2u);
      swift_slowDealloc(v20, -1LL, -1LL);

LABEL_85:
      goto LABEL_86;
    }
  }

  if (a3)
  {
    if (*(void *)(a3 + 16))
    {
LABEL_10:
      uint64_t v21 = 0LL;
LABEL_87:
      __swift_destroy_boxed_opaque_existential_1(v105);
      return (id)v21;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.debug.getter(v17, v34);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v36 = 0;
    uint64_t v37 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
LABEL_84:
    _os_log_impl(&dword_0, (os_log_t)v17, v35, v37, v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
    goto LABEL_85;
  }

  outlined bridged method (pb) of @objc INStartAudioCallIntent.contacts.getter(a2);
  if (!v22)
  {
LABEL_80:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v94 = type metadata accessor for Logger(0LL);
    uint64_t v95 = __swift_project_value_buffer(v94, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v95);
    os_log_type_t v35 = static os_log_type_t.debug.getter(v17, v96);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v36 = 0;
    uint64_t v37 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
    goto LABEL_84;
  }

  uint64_t v23 = v22;
  uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8LL;
  if (!(v22 >> 62))
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8LL));
    if (v25) {
      goto LABEL_14;
    }
    goto LABEL_79;
  }

{
  uint64_t v6;
  void *boxed_opaque_existential_1;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  char v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  const char *v37;
  void *v38;
  char v39;
  char v40;
  id v41;
  void *v42;
  char v43;
  char v44;
  id v45;
  void *v46;
  char v47;
  char v48;
  id v49;
  void *v50;
  char v51;
  char v52;
  uint64_t v53;
  id result;
  void *v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  os_log_s *v85;
  uint64_t v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[16];
  void *v98;
  uint64_t v99;
  unint64_t v100;
  char v101[8];
  uint64_t v102[5];
  char v103[16];
  uint64_t v104;
  void v105[5];
  uint64_t v6 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  v105[3] = v6;
  v105[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v105);
  outlined init with copy of PhoneCallNLv3Intent(a1, (uint64_t)boxed_opaque_existential_1);
  uint64_t ObjectType = swift_getObjectType(a2);
  uint64_t v9 = dynamic_cast_existential_1_conditional((uint64_t)a2, ObjectType, (uint64_t)&protocol descriptor for CallingIntent);
  if (v9)
  {
    uint64_t v11 = v10;
    uint64_t v12 = swift_getObjectType(v9);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    id v14 = a2;
    if (v13(v12, v11) == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v15 = type metadata accessor for Logger(0LL);
      uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
      uint64_t v17 = (void *)Logger.logObject.getter(v16);
      os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
      if (!os_log_type_enabled((os_log_t)v17, v19))
      {

LABEL_86:
        uint64_t v21 = 1LL;
        goto LABEL_87;
      }

      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( &dword_0,  (os_log_t)v17,  v19,  "#ContactResolution intent is emergency call. bypassing contact resolution",  v20,  2u);
      swift_slowDealloc(v20, -1LL, -1LL);

LABEL_85:
      goto LABEL_86;
    }
  }

  if (a3)
  {
    if (*(void *)(a3 + 16))
    {
LABEL_10:
      uint64_t v21 = 0LL;
LABEL_87:
      __swift_destroy_boxed_opaque_existential_1(v105);
      return (id)v21;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.debug.getter(v17, v34);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v36 = 0;
    uint64_t v37 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
LABEL_84:
    _os_log_impl(&dword_0, (os_log_t)v17, v35, v37, v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
    goto LABEL_85;
  }

  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(a2);
  if (!v22)
  {
LABEL_80:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v94 = type metadata accessor for Logger(0LL);
    uint64_t v95 = __swift_project_value_buffer(v94, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v95);
    os_log_type_t v35 = static os_log_type_t.debug.getter(v17, v96);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v36 = 0;
    uint64_t v37 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
    goto LABEL_84;
  }

  uint64_t v23 = v22;
  uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8LL;
  if (!(v22 >> 62))
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8LL));
    if (v25) {
      goto LABEL_14;
    }
    goto LABEL_79;
  }

uint64_t specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( void *a1, uint64_t a2, char a3, uint64_t a4, char *a5, uint64_t a6, void *a7, uint64_t a8, char a9, void *a10, uint64_t a11)
{
  uint64_t v130 = a8;
  uint64_t v131 = a5;
  uint64_t v133 = a4;
  uint64_t v16 = type metadata accessor for ResolvedSiriKitContact(0LL);
  uint64_t v134 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Locale(0LL);
  __chkstk_darwin();
  type metadata accessor for ContactResolverConfigHashable(0LL);
  __chkstk_darwin();
  uint64_t v20 = (char *)v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v140[3] = type metadata accessor for PhoneCallNLv3Intent(0LL);
  v140[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v140);
  outlined init with copy of PhoneCallNLv3Intent(a6, (uint64_t)boxed_opaque_existential_1);
  if ((a3 & 1) != 0)
  {
    id v132 = (id)a2;
    uint64_t ObjectType = swift_getObjectType(a1);
    uint64_t v23 = dynamic_cast_existential_1_conditional( (uint64_t)a1,  ObjectType,  (uint64_t)&protocol descriptor for CallingIntent);
    uint64_t v25 = one-time initialization token for siriPhone;
    if (v23)
    {
      uint64_t v26 = v23;
      uint64_t v27 = v24;
      id v28 = a1;
      if (v25 != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
      id v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v33 = static os_log_type_t.debug.getter(v31, v32);
      if (os_log_type_enabled(v31, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl( &dword_0,  v31,  v33,  "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.",  v34,  2u);
        swift_slowDealloc(v34, -1LL, -1LL);
      }

      id v35 = [objc_allocWithZone(HKHealthStore) init];
      id v36 = [objc_allocWithZone(HKMedicalIDStore) initWithHealthStore:v35];

      uint64_t v138 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for HKMedicalIDStore,  &OBJC_CLASS___HKMedicalIDStore_ptr);
      uint64_t v139 = &protocol witness table for HKMedicalIDStore;
      *(void *)&__int128 v137 = v36;
      (*(void (**)(uint64_t, uint64_t, char *, __int128 *))(*(void *)a11 + 80LL))(v26, v27, v131, &v137);

      __swift_destroy_boxed_opaque_existential_1(&v137);
      return __swift_destroy_boxed_opaque_existential_1(v140);
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    char v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      id v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v41 = 0;
      _os_log_impl( &dword_0,  v39,  v40,  "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    a2 = (uint64_t)v132;
  }

  if ((specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)( (uint64_t)boxed_opaque_existential_1,  a1,  a2) & 1) != 0) {
    return __swift_destroy_boxed_opaque_existential_1(v140);
  }
  id v132 = (id)a2;
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v131 = v20;
  if (v133)
  {
    uint64_t v43 = App.appIdentifier.getter();
    if (v44)
    {
      uint64_t v45 = v43;
      uint64_t v46 = v44;
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  1LL,  1LL,  (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v42 = (void *)v47;
      unint64_t v49 = *(void *)(v47 + 16);
      unint64_t v48 = *(void *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v48 > 1,  v49 + 1,  1LL,  v47);
        uint64_t v42 = v119;
      }

      v42[2] = v49 + 1;
      uint64_t v50 = &v42[2 * v49];
      v50[4] = v45;
      v50[5] = v46;
    }

    else
    {
      uint64_t v42 = _swiftEmptyArrayStorage;
    }
  }

  uint64_t v129 = v42;
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
  }
  id v51 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);

  uint64_t v53 = a7[3];
  uint64_t v52 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v53);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v52 + 8))(&v137, v53, v52);
  uint64_t v54 = v138;
  uint64_t v55 = (uint64_t)v139;
  __swift_project_boxed_opaque_existential_1(&v137, v138);
  DeviceState.siriInputLocale.getter(v54, v55);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a7, (uint64_t)&v135);
  id v56 = a1;
  swift_bridgeObjectRetain();
  char v57 = v131;
  ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)();
  __swift_destroy_boxed_opaque_existential_1(&v137);
  uint64_t v58 = a7[3];
  uint64_t v59 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v58);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v59 + 96))(&v137, v58, v59);
  uint64_t v60 = v138;
  uint64_t v61 = v139;
  __swift_project_boxed_opaque_existential_1(&v137, v138);
  uint64_t v62 = ((uint64_t (*)(id, char *, uint64_t, _UNKNOWN **))v61[2])(v132, v57, v60, v61);
  __swift_destroy_boxed_opaque_existential_1(&v137);
  uint64_t v63 = a10[3];
  uint64_t v128 = a10[4];
  v127[1] = __swift_project_boxed_opaque_existential_1(a10, v63);
  type metadata accessor for SiriKitEvent(0LL);
  id v132 = v56;
  id v64 = [v56 typeName];
  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  uint64_t v67 = v66;

  outlined init with copy of SharedGlobalsProviding((uint64_t)v140, (uint64_t)&v137);
  uint64_t v68 = swift_allocObject(&unk_3FDF20, 72LL, 7LL);
  *(void *)(v68 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v133;
  outlined init with take of AppSelectionSignalComponent(&v137, v68 + 24);
  *(void *)(v68 + 64) = v62;
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(v13__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 0;
  uint64_t v69 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v65,  v67,  31LL,  closure #1 in static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)partial apply,  v68);
  dispatch thunk of SiriKitEventSending.send(_:)(v69, v63, v128);
  swift_release(v69);
  uint64_t v70 = *(void *)(v62 + 16);
  if (v70)
  {
    *(void *)&__int128 v137 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v70);
    uint64_t v71 = v134;
    unint64_t v72 = v62 + ((*(unsigned __int8 *)(v134 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v73 = *(void *)(v134 + 72);
    uint64_t v74 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v134 + 16);
    do
    {
      uint64_t v75 = v74(v18, v72, v16);
      uint64_t v76 = ResolvedSiriKitContact.person.getter(v75);
      uint64_t v77 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v18, v16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v77);
      uint64_t v78 = *(void *)(v137 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v78);
      uint64_t v79 = v78;
      uint64_t v71 = v134;
      uint64_t v80 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v76);
      specialized ContiguousArray._endMutation()(v80);
      v72 += v73;
      --v70;
    }

    while (v70);
    uint64_t v81 = v137;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = (uint64_t)_swiftEmptyArrayStorage;
  }

  uint64_t v82 = v132;
  if ((unint64_t)v81 >> 62)
  {
    if (v81 < 0) {
      uint64_t v120 = v81;
    }
    else {
      uint64_t v120 = v81 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter(v120);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v83 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v83)
  {
    uint64_t v84 = static ContactResolution.dedupeContacts(contacts:)(v81);
    swift_bridgeObjectRelease();
    uint64_t v81 = (uint64_t)v84;
  }

  if ((a9 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v93 = type metadata accessor for Logger(0LL);
    uint64_t v94 = __swift_project_value_buffer(v93, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v96);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution multicardinalIndex is nil, overwriting contacts slot";
    goto LABEL_82;
  }

  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v82);
  if (!v85)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v100 = type metadata accessor for Logger(0LL);
    uint64_t v101 = __swift_project_value_buffer(v100, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v101);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v102);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
    goto LABEL_82;
  }

  *(void *)&__int128 v137 = v85;
  uint64_t v86 = &unk_42A000;
  if ((unint64_t)v81 >> 62)
  {
    if (v81 < 0) {
      uint64_t v121 = v81;
    }
    else {
      uint64_t v121 = v81 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter(v121)) {
      goto LABEL_35;
    }
LABEL_77:
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }

  uint64_t v87 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (!v87) {
    goto LABEL_77;
  }
LABEL_35:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v81 & 0xC000000000000001LL) == 0, v81);
  if ((v81 & 0xC000000000000001LL) != 0) {
    id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v81);
  }
  else {
    id v88 = *(id *)(v81 + 32);
  }
  uint64_t v89 = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = v137;
  if ((unint64_t)v137 >> 62)
  {
    else {
      uint64_t v125 = v137 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v91 = _CocoaArrayWrapper.endIndex.getter(v125);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v91 = *(void *)((char *)&dword_10 + (v137 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v91 <= v130) {
    goto LABEL_57;
  }
  if ((unint64_t)v81 >> 62)
  {
    uint64_t v103 = v81 < 0 ? v81 : v81 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain();
    uint64_t v92 = _CocoaArrayWrapper.endIndex.getter(v103);
    swift_bridgeObjectRelease();
    uint64_t v90 = v137;
  }

  else
  {
    uint64_t v92 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  }

  if ((unint64_t)v90 >> 62)
  {
    uint64_t v126 = v90 < 0 ? v90 : v90 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain();
    uint64_t v104 = _CocoaArrayWrapper.endIndex.getter(v126);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v104 = *(void *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v104 < v92)
  {
LABEL_57:

    uint64_t v86 = (void *)&unk_42A000;
LABEL_78:
    swift_bridgeObjectRelease();
    if (v86[107] != -1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v122 = type metadata accessor for Logger(0LL);
    uint64_t v123 = __swift_project_value_buffer(v122, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v123);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v124);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution: overwriting contacts slot";
LABEL_82:
    _os_log_impl(&dword_0, v95, v97, v99, v98, 2u);
    swift_slowDealloc(v98, -1LL, -1LL);
LABEL_83:

    INStartVideoCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v81);
    goto LABEL_84;
  }

  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v105 = type metadata accessor for Logger(0LL);
  uint64_t v106 = __swift_project_value_buffer(v105, (uint64_t)static Logger.siriPhone);
  uint64_t v107 = (os_log_s *)Logger.logObject.getter(v106);
  os_log_type_t v109 = static os_log_type_t.debug.getter(v107, v108);
  if (os_log_type_enabled(v107, v109))
  {
    uint64_t v110 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v110 = 134217984;
    uint64_t v135 = v130;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &v136, v110 + 4);
    _os_log_impl(&dword_0, v107, v109, "#ContactResolution updating person at index %ld", v110, 0xCu);
    swift_slowDealloc(v110, -1LL, -1LL);
  }

  uint64_t v111 = v137;
  id v112 = v89;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(v111);
  if (!(_DWORD)result || v111 < 0 || (v111 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()(v111);
    uint64_t v111 = result;
    *(void *)&__int128 v137 = result;
  }

  if (v130 < 0)
  {
    __break(1u);
  }

  else if (*(void *)((char *)&dword_10 + (v111 & 0xFFFFFFFFFFFFFF8LL)) > (unint64_t)v130)
  {
    uint64_t v114 = *(void **)((char *)&stru_20.cmd + 8 * v130 + (v111 & 0xFFFFFFFFFFFFFF8LL));
    *(void *)((char *)&stru_20.cmd + 8 * v130 + (v111 & 0xFFFFFFFFFFFFFF8LL)) = v112;

    specialized Array._endMutation()(v115, v116, v117, v118);
    INStartVideoCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v137);

LABEL_84:
    swift_bridgeObjectRelease();
    outlined destroy of PhoneCallNLv3Intent();
    return __swift_destroy_boxed_opaque_existential_1(v140);
  }

  __break(1u);
  return result;
}

{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *boxed_opaque_existential_1;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  os_log_s *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  os_log_s *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _UNKNOWN **v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, unint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  os_log_s *v95;
  uint64_t v96;
  os_log_type_t v97;
  uint8_t *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  os_log_s *v107;
  uint64_t v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  id v112;
  uint64_t result;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void v127[2];
  uint64_t v128;
  void *v129;
  uint64_t v130;
  char *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  _UNKNOWN **v139;
  void v140[6];
  uint64_t v130 = a8;
  uint64_t v131 = a5;
  uint64_t v133 = a4;
  uint64_t v16 = type metadata accessor for ResolvedSiriKitContact(0LL);
  uint64_t v134 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Locale(0LL);
  __chkstk_darwin();
  type metadata accessor for ContactResolverConfigHashable(0LL);
  __chkstk_darwin();
  uint64_t v20 = (char *)v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v140[3] = type metadata accessor for PhoneCallNLv3Intent(0LL);
  v140[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v140);
  outlined init with copy of PhoneCallNLv3Intent(a6, (uint64_t)boxed_opaque_existential_1);
  if ((a3 & 1) != 0)
  {
    id v132 = (id)a2;
    uint64_t ObjectType = swift_getObjectType(a1);
    uint64_t v23 = dynamic_cast_existential_1_conditional( (uint64_t)a1,  ObjectType,  (uint64_t)&protocol descriptor for CallingIntent);
    uint64_t v25 = one-time initialization token for siriPhone;
    if (v23)
    {
      uint64_t v26 = v23;
      uint64_t v27 = v24;
      id v28 = a1;
      if (v25 != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
      id v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v33 = static os_log_type_t.debug.getter(v31, v32);
      if (os_log_type_enabled(v31, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl( &dword_0,  v31,  v33,  "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.",  v34,  2u);
        swift_slowDealloc(v34, -1LL, -1LL);
      }

      id v35 = [objc_allocWithZone(HKHealthStore) init];
      id v36 = [objc_allocWithZone(HKMedicalIDStore) initWithHealthStore:v35];

      uint64_t v138 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for HKMedicalIDStore,  &OBJC_CLASS___HKMedicalIDStore_ptr);
      uint64_t v139 = &protocol witness table for HKMedicalIDStore;
      *(void *)&__int128 v137 = v36;
      (*(void (**)(uint64_t, uint64_t, char *, __int128 *))(*(void *)a11 + 80LL))(v26, v27, v131, &v137);

      __swift_destroy_boxed_opaque_existential_1(&v137);
      return __swift_destroy_boxed_opaque_existential_1(v140);
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    char v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      id v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v41 = 0;
      _os_log_impl( &dword_0,  v39,  v40,  "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    a2 = (uint64_t)v132;
  }

  if ((specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)( (uint64_t)boxed_opaque_existential_1,  a1,  a2) & 1) != 0) {
    return __swift_destroy_boxed_opaque_existential_1(v140);
  }
  id v132 = (id)a2;
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v131 = v20;
  if (v133)
  {
    uint64_t v43 = App.appIdentifier.getter();
    if (v44)
    {
      uint64_t v45 = v43;
      uint64_t v46 = v44;
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  1LL,  1LL,  (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v42 = (void *)v47;
      unint64_t v49 = *(void *)(v47 + 16);
      unint64_t v48 = *(void *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v48 > 1,  v49 + 1,  1LL,  v47);
        uint64_t v42 = v119;
      }

      v42[2] = v49 + 1;
      uint64_t v50 = &v42[2 * v49];
      v50[4] = v45;
      v50[5] = v46;
    }

    else
    {
      uint64_t v42 = _swiftEmptyArrayStorage;
    }
  }

  uint64_t v129 = v42;
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
  }
  id v51 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);

  uint64_t v53 = a7[3];
  uint64_t v52 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v53);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v52 + 8))(&v137, v53, v52);
  uint64_t v54 = v138;
  uint64_t v55 = (uint64_t)v139;
  __swift_project_boxed_opaque_existential_1(&v137, v138);
  DeviceState.siriInputLocale.getter(v54, v55);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a7, (uint64_t)&v135);
  id v56 = a1;
  swift_bridgeObjectRetain();
  char v57 = v131;
  ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)();
  __swift_destroy_boxed_opaque_existential_1(&v137);
  uint64_t v58 = a7[3];
  uint64_t v59 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v58);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v59 + 96))(&v137, v58, v59);
  uint64_t v60 = v138;
  uint64_t v61 = v139;
  __swift_project_boxed_opaque_existential_1(&v137, v138);
  uint64_t v62 = ((uint64_t (*)(id, char *, uint64_t, _UNKNOWN **))v61[2])(v132, v57, v60, v61);
  __swift_destroy_boxed_opaque_existential_1(&v137);
  uint64_t v63 = a10[3];
  uint64_t v128 = a10[4];
  v127[1] = __swift_project_boxed_opaque_existential_1(a10, v63);
  type metadata accessor for SiriKitEvent(0LL);
  id v132 = v56;
  id v64 = [v56 typeName];
  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  uint64_t v67 = v66;

  outlined init with copy of SharedGlobalsProviding((uint64_t)v140, (uint64_t)&v137);
  uint64_t v68 = swift_allocObject(&unk_3FDEF8, 72LL, 7LL);
  *(void *)(v68 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v133;
  outlined init with take of AppSelectionSignalComponent(&v137, v68 + 24);
  *(void *)(v68 + 64) = v62;
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(v13__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 0;
  uint64_t v69 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v65,  v67,  31LL,  closure #1 in static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)partial apply,  v68);
  dispatch thunk of SiriKitEventSending.send(_:)(v69, v63, v128);
  swift_release(v69);
  uint64_t v70 = *(void *)(v62 + 16);
  if (v70)
  {
    *(void *)&__int128 v137 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v70);
    uint64_t v71 = v134;
    unint64_t v72 = v62 + ((*(unsigned __int8 *)(v134 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v73 = *(void *)(v134 + 72);
    uint64_t v74 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v134 + 16);
    do
    {
      uint64_t v75 = v74(v18, v72, v16);
      uint64_t v76 = ResolvedSiriKitContact.person.getter(v75);
      uint64_t v77 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v18, v16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v77);
      uint64_t v78 = *(void *)(v137 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v78);
      uint64_t v79 = v78;
      uint64_t v71 = v134;
      uint64_t v80 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v76);
      specialized ContiguousArray._endMutation()(v80);
      v72 += v73;
      --v70;
    }

    while (v70);
    uint64_t v81 = v137;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = (uint64_t)_swiftEmptyArrayStorage;
  }

  uint64_t v82 = v132;
  if ((unint64_t)v81 >> 62)
  {
    if (v81 < 0) {
      uint64_t v120 = v81;
    }
    else {
      uint64_t v120 = v81 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter(v120);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v83 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v83)
  {
    uint64_t v84 = static ContactResolution.dedupeContacts(contacts:)(v81);
    swift_bridgeObjectRelease();
    uint64_t v81 = (uint64_t)v84;
  }

  if ((a9 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v93 = type metadata accessor for Logger(0LL);
    uint64_t v94 = __swift_project_value_buffer(v93, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v96);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution multicardinalIndex is nil, overwriting contacts slot";
    goto LABEL_82;
  }

  outlined bridged method (pb) of @objc INStartAudioCallIntent.contacts.getter(v82);
  if (!v85)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v100 = type metadata accessor for Logger(0LL);
    uint64_t v101 = __swift_project_value_buffer(v100, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v101);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v102);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
    goto LABEL_82;
  }

  *(void *)&__int128 v137 = v85;
  uint64_t v86 = &unk_42A000;
  if ((unint64_t)v81 >> 62)
  {
    if (v81 < 0) {
      uint64_t v121 = v81;
    }
    else {
      uint64_t v121 = v81 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter(v121)) {
      goto LABEL_35;
    }
LABEL_77:
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }

  uint64_t v87 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (!v87) {
    goto LABEL_77;
  }
LABEL_35:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v81 & 0xC000000000000001LL) == 0, v81);
  if ((v81 & 0xC000000000000001LL) != 0) {
    id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v81);
  }
  else {
    id v88 = *(id *)(v81 + 32);
  }
  uint64_t v89 = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = v137;
  if ((unint64_t)v137 >> 62)
  {
    else {
      uint64_t v125 = v137 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v91 = _CocoaArrayWrapper.endIndex.getter(v125);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v91 = *(void *)((char *)&dword_10 + (v137 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v91 <= v130) {
    goto LABEL_57;
  }
  if ((unint64_t)v81 >> 62)
  {
    uint64_t v103 = v81 < 0 ? v81 : v81 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain();
    uint64_t v92 = _CocoaArrayWrapper.endIndex.getter(v103);
    swift_bridgeObjectRelease();
    uint64_t v90 = v137;
  }

  else
  {
    uint64_t v92 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  }

  if ((unint64_t)v90 >> 62)
  {
    uint64_t v126 = v90 < 0 ? v90 : v90 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain();
    uint64_t v104 = _CocoaArrayWrapper.endIndex.getter(v126);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v104 = *(void *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v104 < v92)
  {
LABEL_57:

    uint64_t v86 = (void *)&unk_42A000;
LABEL_78:
    swift_bridgeObjectRelease();
    if (v86[107] != -1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v122 = type metadata accessor for Logger(0LL);
    uint64_t v123 = __swift_project_value_buffer(v122, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v123);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v124);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution: overwriting contacts slot";
LABEL_82:
    _os_log_impl(&dword_0, v95, v97, v99, v98, 2u);
    swift_slowDealloc(v98, -1LL, -1LL);
LABEL_83:

    INStartVideoCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v81);
    goto LABEL_84;
  }

  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v105 = type metadata accessor for Logger(0LL);
  uint64_t v106 = __swift_project_value_buffer(v105, (uint64_t)static Logger.siriPhone);
  uint64_t v107 = (os_log_s *)Logger.logObject.getter(v106);
  os_log_type_t v109 = static os_log_type_t.debug.getter(v107, v108);
  if (os_log_type_enabled(v107, v109))
  {
    uint64_t v110 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v110 = 134217984;
    uint64_t v135 = v130;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &v136, v110 + 4);
    _os_log_impl(&dword_0, v107, v109, "#ContactResolution updating person at index %ld", v110, 0xCu);
    swift_slowDealloc(v110, -1LL, -1LL);
  }

  uint64_t v111 = v137;
  id v112 = v89;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(v111);
  if (!(_DWORD)result || v111 < 0 || (v111 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()(v111);
    uint64_t v111 = result;
    *(void *)&__int128 v137 = result;
  }

  if (v130 < 0)
  {
    __break(1u);
  }

  else if (*(void *)((char *)&dword_10 + (v111 & 0xFFFFFFFFFFFFFF8LL)) > (unint64_t)v130)
  {
    uint64_t v114 = *(void **)((char *)&stru_20.cmd + 8 * v130 + (v111 & 0xFFFFFFFFFFFFFF8LL));
    *(void *)((char *)&stru_20.cmd + 8 * v130 + (v111 & 0xFFFFFFFFFFFFFF8LL)) = v112;

    specialized Array._endMutation()(v115, v116, v117, v118);
    INStartVideoCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v137);

LABEL_84:
    swift_bridgeObjectRelease();
    outlined destroy of PhoneCallNLv3Intent();
    return __swift_destroy_boxed_opaque_existential_1(v140);
  }

  __break(1u);
  return result;
}

{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *boxed_opaque_existential_1;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  os_log_s *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  os_log_s *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _UNKNOWN **v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, unint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  os_log_s *v95;
  uint64_t v96;
  os_log_type_t v97;
  uint8_t *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  os_log_s *v107;
  uint64_t v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  id v112;
  uint64_t result;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void v127[2];
  uint64_t v128;
  void *v129;
  uint64_t v130;
  char *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  _UNKNOWN **v139;
  void v140[6];
  uint64_t v130 = a8;
  uint64_t v131 = a5;
  uint64_t v133 = a4;
  uint64_t v16 = type metadata accessor for ResolvedSiriKitContact(0LL);
  uint64_t v134 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Locale(0LL);
  __chkstk_darwin();
  type metadata accessor for ContactResolverConfigHashable(0LL);
  __chkstk_darwin();
  uint64_t v20 = (char *)v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v140[3] = type metadata accessor for PhoneCallNLv3Intent(0LL);
  v140[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v140);
  outlined init with copy of PhoneCallNLv3Intent(a6, (uint64_t)boxed_opaque_existential_1);
  if ((a3 & 1) != 0)
  {
    id v132 = (id)a2;
    uint64_t ObjectType = swift_getObjectType(a1);
    uint64_t v23 = dynamic_cast_existential_1_conditional( (uint64_t)a1,  ObjectType,  (uint64_t)&protocol descriptor for CallingIntent);
    uint64_t v25 = one-time initialization token for siriPhone;
    if (v23)
    {
      uint64_t v26 = v23;
      uint64_t v27 = v24;
      id v28 = a1;
      if (v25 != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
      id v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v33 = static os_log_type_t.debug.getter(v31, v32);
      if (os_log_type_enabled(v31, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl( &dword_0,  v31,  v33,  "#ContactResolution NL intent has an emergency contact. Bypassing contact resolution.",  v34,  2u);
        swift_slowDealloc(v34, -1LL, -1LL);
      }

      id v35 = [objc_allocWithZone(HKHealthStore) init];
      id v36 = [objc_allocWithZone(HKMedicalIDStore) initWithHealthStore:v35];

      uint64_t v138 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for HKMedicalIDStore,  &OBJC_CLASS___HKMedicalIDStore_ptr);
      uint64_t v139 = &protocol witness table for HKMedicalIDStore;
      *(void *)&__int128 v137 = v36;
      (*(void (**)(uint64_t, uint64_t, char *, __int128 *))(*(void *)a11 + 80LL))(v26, v27, v131, &v137);

      __swift_destroy_boxed_opaque_existential_1(&v137);
      return __swift_destroy_boxed_opaque_existential_1(v140);
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    char v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      id v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v41 = 0;
      _os_log_impl( &dword_0,  v39,  v40,  "#ContactResolution NL intent has an emergency contact but is not a CallingIntent!",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    a2 = (uint64_t)v132;
  }

  if ((specialized static ContactResolution.shouldSkipContactResolution(nlIntent:skIntent:contactQueries:)( (uint64_t)boxed_opaque_existential_1,  a1,  a2) & 1) != 0) {
    return __swift_destroy_boxed_opaque_existential_1(v140);
  }
  id v132 = (id)a2;
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v131 = v20;
  if (v133)
  {
    uint64_t v43 = App.appIdentifier.getter();
    if (v44)
    {
      uint64_t v45 = v43;
      uint64_t v46 = v44;
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  1LL,  1LL,  (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v42 = (void *)v47;
      unint64_t v49 = *(void *)(v47 + 16);
      unint64_t v48 = *(void *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v48 > 1,  v49 + 1,  1LL,  v47);
        uint64_t v42 = v119;
      }

      v42[2] = v49 + 1;
      uint64_t v50 = &v42[2 * v49];
      v50[4] = v45;
      v50[5] = v46;
    }

    else
    {
      uint64_t v42 = _swiftEmptyArrayStorage;
    }
  }

  uint64_t v129 = v42;
  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
  }
  id v51 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
  uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);

  uint64_t v53 = a7[3];
  uint64_t v52 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v53);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v52 + 8))(&v137, v53, v52);
  uint64_t v54 = v138;
  uint64_t v55 = (uint64_t)v139;
  __swift_project_boxed_opaque_existential_1(&v137, v138);
  DeviceState.siriInputLocale.getter(v54, v55);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a7, (uint64_t)&v135);
  id v56 = a1;
  swift_bridgeObjectRetain();
  char v57 = v131;
  ContactResolverConfigHashable.init(intentTypeName:locale:bundleIds:siriKitIntent:sharedGlobals:)();
  __swift_destroy_boxed_opaque_existential_1(&v137);
  uint64_t v58 = a7[3];
  uint64_t v59 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v58);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v59 + 96))(&v137, v58, v59);
  uint64_t v60 = v138;
  uint64_t v61 = v139;
  __swift_project_boxed_opaque_existential_1(&v137, v138);
  uint64_t v62 = ((uint64_t (*)(id, char *, uint64_t, _UNKNOWN **))v61[2])(v132, v57, v60, v61);
  __swift_destroy_boxed_opaque_existential_1(&v137);
  uint64_t v63 = a10[3];
  uint64_t v128 = a10[4];
  v127[1] = __swift_project_boxed_opaque_existential_1(a10, v63);
  type metadata accessor for SiriKitEvent(0LL);
  id v132 = v56;
  id v64 = [v56 typeName];
  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
  uint64_t v67 = v66;

  outlined init with copy of SharedGlobalsProviding((uint64_t)v140, (uint64_t)&v137);
  uint64_t v68 = swift_allocObject(&unk_3FDED0, 72LL, 7LL);
  *(void *)(v68 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v133;
  outlined init with take of AppSelectionSignalComponent(&v137, v68 + 24);
  *(void *)(v68 + 64) = v62;
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(v13__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 0;
  uint64_t v69 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v65,  v67,  31LL,  partial apply for closure #1 in static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:),  v68);
  dispatch thunk of SiriKitEventSending.send(_:)(v69, v63, v128);
  swift_release(v69);
  uint64_t v70 = *(void *)(v62 + 16);
  if (v70)
  {
    *(void *)&__int128 v137 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v70);
    uint64_t v71 = v134;
    unint64_t v72 = v62 + ((*(unsigned __int8 *)(v134 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v73 = *(void *)(v134 + 72);
    uint64_t v74 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v134 + 16);
    do
    {
      uint64_t v75 = v74(v18, v72, v16);
      uint64_t v76 = ResolvedSiriKitContact.person.getter(v75);
      uint64_t v77 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v18, v16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v77);
      uint64_t v78 = *(void *)(v137 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v78);
      uint64_t v79 = v78;
      uint64_t v71 = v134;
      uint64_t v80 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v76);
      specialized ContiguousArray._endMutation()(v80);
      v72 += v73;
      --v70;
    }

    while (v70);
    uint64_t v81 = v137;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = (uint64_t)_swiftEmptyArrayStorage;
  }

  uint64_t v82 = v132;
  if ((unint64_t)v81 >> 62)
  {
    if (v81 < 0) {
      uint64_t v120 = v81;
    }
    else {
      uint64_t v120 = v81 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter(v120);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v83 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v83)
  {
    uint64_t v84 = static ContactResolution.dedupeContacts(contacts:)(v81);
    swift_bridgeObjectRelease();
    uint64_t v81 = (uint64_t)v84;
  }

  if ((a9 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v93 = type metadata accessor for Logger(0LL);
    uint64_t v94 = __swift_project_value_buffer(v93, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v96);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution multicardinalIndex is nil, overwriting contacts slot";
    goto LABEL_82;
  }

  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v82);
  if (!v85)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v100 = type metadata accessor for Logger(0LL);
    uint64_t v101 = __swift_project_value_buffer(v100, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v101);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v102);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution siriKitIntent contacts slot is nil, overwriting contacts slot";
    goto LABEL_82;
  }

  *(void *)&__int128 v137 = v85;
  uint64_t v86 = &unk_42A000;
  if ((unint64_t)v81 >> 62)
  {
    if (v81 < 0) {
      uint64_t v121 = v81;
    }
    else {
      uint64_t v121 = v81 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter(v121)) {
      goto LABEL_35;
    }
LABEL_77:
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }

  uint64_t v87 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (!v87) {
    goto LABEL_77;
  }
LABEL_35:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v81 & 0xC000000000000001LL) == 0, v81);
  if ((v81 & 0xC000000000000001LL) != 0) {
    id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v81);
  }
  else {
    id v88 = *(id *)(v81 + 32);
  }
  uint64_t v89 = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = v137;
  if ((unint64_t)v137 >> 62)
  {
    else {
      uint64_t v125 = v137 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v91 = _CocoaArrayWrapper.endIndex.getter(v125);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v91 = *(void *)((char *)&dword_10 + (v137 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v91 <= v130) {
    goto LABEL_57;
  }
  if ((unint64_t)v81 >> 62)
  {
    uint64_t v103 = v81 < 0 ? v81 : v81 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain();
    uint64_t v92 = _CocoaArrayWrapper.endIndex.getter(v103);
    swift_bridgeObjectRelease();
    uint64_t v90 = v137;
  }

  else
  {
    uint64_t v92 = *(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
  }

  if ((unint64_t)v90 >> 62)
  {
    uint64_t v126 = v90 < 0 ? v90 : v90 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain();
    uint64_t v104 = _CocoaArrayWrapper.endIndex.getter(v126);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v104 = *(void *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v104 < v92)
  {
LABEL_57:

    uint64_t v86 = (void *)&unk_42A000;
LABEL_78:
    swift_bridgeObjectRelease();
    if (v86[107] != -1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v122 = type metadata accessor for Logger(0LL);
    uint64_t v123 = __swift_project_value_buffer(v122, (uint64_t)static Logger.siriPhone);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v123);
    os_log_type_t v97 = static os_log_type_t.debug.getter(v95, v124);
    if (!os_log_type_enabled(v95, v97)) {
      goto LABEL_83;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v98 = 0;
    uint64_t v99 = "#ContactResolution: overwriting contacts slot";
LABEL_82:
    _os_log_impl(&dword_0, v95, v97, v99, v98, 2u);
    swift_slowDealloc(v98, -1LL, -1LL);
LABEL_83:

    INStartCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v81);
    goto LABEL_84;
  }

  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v105 = type metadata accessor for Logger(0LL);
  uint64_t v106 = __swift_project_value_buffer(v105, (uint64_t)static Logger.siriPhone);
  uint64_t v107 = (os_log_s *)Logger.logObject.getter(v106);
  os_log_type_t v109 = static os_log_type_t.debug.getter(v107, v108);
  if (os_log_type_enabled(v107, v109))
  {
    uint64_t v110 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v110 = 134217984;
    uint64_t v135 = v130;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &v136, v110 + 4);
    _os_log_impl(&dword_0, v107, v109, "#ContactResolution updating person at index %ld", v110, 0xCu);
    swift_slowDealloc(v110, -1LL, -1LL);
  }

  uint64_t v111 = v137;
  id v112 = v89;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(v111);
  if (!(_DWORD)result || v111 < 0 || (v111 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()(v111);
    uint64_t v111 = result;
    *(void *)&__int128 v137 = result;
  }

  if (v130 < 0)
  {
    __break(1u);
  }

  else if (*(void *)((char *)&dword_10 + (v111 & 0xFFFFFFFFFFFFFF8LL)) > (unint64_t)v130)
  {
    uint64_t v114 = *(void **)((char *)&stru_20.cmd + 8 * v130 + (v111 & 0xFFFFFFFFFFFFFF8LL));
    *(void *)((char *)&stru_20.cmd + 8 * v130 + (v111 & 0xFFFFFFFFFFFFFF8LL)) = v112;

    specialized Array._endMutation()(v115, v116, v117, v118);
    INStartCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v137);

LABEL_84:
    swift_bridgeObjectRelease();
    outlined destroy of PhoneCallNLv3Intent();
    return __swift_destroy_boxed_opaque_existential_1(v140);
  }

  __break(1u);
  return result;
}

uint64_t specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a5;
  uint64_t v42 = a4;
  uint64_t v41 = a3;
  uint64_t v40 = a2;
  type metadata accessor for PhoneCallNLv3Intent(0LL);
  uint64_t v6 = __chkstk_darwin();
  uint64_t v47 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = v6;
  v52[3] = v6;
  v52[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  outlined init with copy of PhoneCallNLv3Intent(a1, (uint64_t)boxed_opaque_existential_1);
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  uint64_t v39 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartVideoCallIntent,  &OBJC_CLASS___INStartVideoCallIntent_ptr);
  id v11 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v12 = [v11 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  static Signpost.begin(_:string1:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  int v48 = v19;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v38 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
  BOOL v24 = os_log_type_enabled(v21, v23);
  uint64_t v44 = v16;
  uint64_t v45 = v18;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc(22LL, -1LL);
    uint64_t v26 = swift_slowAlloc(64LL, -1LL);
    v49[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v37 = v10;
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034LL, 0x8000000000348ED0LL, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v25 + 4);
    *(_WORD *)(v25 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v50 = v39;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent.Type);
    uint64_t v28 = String.init<A>(describing:)(&v50, v27);
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v49);
    uint64_t v10 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v25 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v21, v23, "#SKTransformer %s to %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2LL);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v30 = v47;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v52, (uint64_t)&v50);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast(v30, &v50, v31))
  {
    specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
    uint64_t v33 = v32;
    outlined destroy of PhoneCallNLv3Intent();
  }

  else if ((swift_dynamicCast(v49, &v50, v31) & 1) != 0)
  {
    specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
    uint64_t v33 = v34;
    outlined destroy of PhoneCallNLv4Intent(v49);
  }

  else
  {
    uint64_t v33 = 0LL;
  }

  __swift_destroy_boxed_opaque_existential_1(&v50);
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release(v10);
  swift_release(v14);
  __swift_destroy_boxed_opaque_existential_1(v52);
  return v33;
}

{
  uint64_t v6;
  uint64_t v7;
  void *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  os_log_s *v21;
  uint64_t v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49[13];
  uint64_t v50;
  uint64_t v51;
  void v52[5];
  uint64_t v43 = a5;
  uint64_t v42 = a4;
  uint64_t v41 = a3;
  uint64_t v40 = a2;
  type metadata accessor for PhoneCallNLv3Intent(0LL);
  uint64_t v6 = __chkstk_darwin();
  uint64_t v47 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = v6;
  v52[3] = v6;
  v52[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  outlined init with copy of PhoneCallNLv3Intent(a1, (uint64_t)boxed_opaque_existential_1);
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  uint64_t v39 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartAudioCallIntent,  &OBJC_CLASS___INStartAudioCallIntent_ptr);
  id v11 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v12 = [v11 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  static Signpost.begin(_:string1:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  int v48 = v19;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v38 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
  BOOL v24 = os_log_type_enabled(v21, v23);
  uint64_t v44 = v16;
  uint64_t v45 = v18;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc(22LL, -1LL);
    uint64_t v26 = swift_slowAlloc(64LL, -1LL);
    v49[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v37 = v10;
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034LL, 0x8000000000348ED0LL, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v25 + 4);
    *(_WORD *)(v25 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v50 = v39;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntent.Type);
    uint64_t v28 = String.init<A>(describing:)(&v50, v27);
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v49);
    uint64_t v10 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v25 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v21, v23, "#SKTransformer %s to %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2LL);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v30 = (uint64_t)v47;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v52, (uint64_t)&v50);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast(v30, &v50, v31))
  {
    specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
    uint64_t v33 = v32;
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_0(v30, type metadata accessor for PhoneCallNLv3Intent);
  }

  else if ((swift_dynamicCast(v49, &v50, v31) & 1) != 0)
  {
    specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
    uint64_t v33 = v34;
    outlined destroy of PhoneCallNLv4Intent(v49);
  }

  else
  {
    uint64_t v33 = 0LL;
  }

  __swift_destroy_boxed_opaque_existential_1(&v50);
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release(v10);
  swift_release(v14);
  __swift_destroy_boxed_opaque_existential_1(v52);
  return v33;
}

{
  uint64_t v6;
  uint64_t v7;
  void *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  os_log_s *v21;
  uint64_t v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49[13];
  uint64_t v50;
  uint64_t v51;
  void v52[5];
  uint64_t v43 = a5;
  uint64_t v42 = a4;
  uint64_t v41 = a3;
  uint64_t v40 = a2;
  type metadata accessor for PhoneCallNLv3Intent(0LL);
  uint64_t v6 = __chkstk_darwin();
  uint64_t v47 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = v6;
  v52[3] = v6;
  v52[4] = &protocol witness table for PhoneCallNLv3Intent;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  outlined init with copy of PhoneCallNLv3Intent(a1, (uint64_t)boxed_opaque_existential_1);
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  uint64_t v39 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  id v11 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v12 = [v11 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  static Signpost.begin(_:string1:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  int v48 = v19;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v38 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
  BOOL v24 = os_log_type_enabled(v21, v23);
  uint64_t v44 = v16;
  uint64_t v45 = v18;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc(22LL, -1LL);
    uint64_t v26 = swift_slowAlloc(64LL, -1LL);
    v49[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v37 = v10;
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034LL, 0x8000000000348ED0LL, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v25 + 4);
    *(_WORD *)(v25 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v50 = v39;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent.Type);
    uint64_t v28 = String.init<A>(describing:)(&v50, v27);
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v49);
    uint64_t v10 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v25 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v21, v23, "#SKTransformer %s to %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2LL);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v30 = (uint64_t)v47;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v52, (uint64_t)&v50);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast(v30, &v50, v31))
  {
    specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
    uint64_t v33 = v32;
    outlined destroy of MainFlow(v30, type metadata accessor for PhoneCallNLv3Intent);
  }

  else if ((swift_dynamicCast(v49, &v50, v31) & 1) != 0)
  {
    specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(v52, v40, v41);
    uint64_t v33 = v34;
    outlined destroy of PhoneCallNLv4Intent(v49);
  }

  else
  {
    uint64_t v33 = 0LL;
  }

  __swift_destroy_boxed_opaque_existential_1(&v50);
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release(v10);
  swift_release(v14);
  __swift_destroy_boxed_opaque_existential_1(v52);
  return v33;
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentResponseType : DismissSiriDeclaringIntentResponse in StartVideoCallRCHFlowDelegate()
{
  return &protocol witness table for INStartVideoCallIntentResponse;
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentType : CallingIntent in StartVideoCallRCHFlowDelegate()
{
  return &protocol witness table for INStartVideoCallIntent;
}

void instantiation function for generic protocol witness table for StartVideoCallRCHFlowDelegate(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

{
  uint64_t v2;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartVideoCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  type metadata accessor for StartVideoCallRCHFlowDelegate,  (uint64_t)&protocol conformance descriptor for BaseRCHFlowDelegate<A, B>);
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v2;
}

uint64_t type metadata accessor for StartVideoCallRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartVideoCallRCHFlowDelegate;
  if (!type metadata singleton initialization cache for StartVideoCallRCHFlowDelegate) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartVideoCallRCHFlowDelegate);
  }
  return result;
}

uint64_t type metadata completion function for StartVideoCallRCHFlowDelegate(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = "(";
  v2[2] = &unk_325878;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + class metadata base offset for StartVideoCallRCHFlowDelegate);
}

uint64_t ObjC metadata update function for StartVideoCallRCHFlowDelegate()
{
  return type metadata accessor for StartVideoCallRCHFlowDelegate(0LL);
}

void *outlined destroy of PhoneContactDisambiguationItemFactory(void *a1)
{
  return a1;
}

void specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void (*a21)(void *__return_ptr, uint64_t), void (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int, void *, uint64_t))
{
  id v88 = v24;
  int v86 = v25;
  uint64_t v80 = v26;
  uint64_t v81 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = OUTLINED_FUNCTION_32_11();
  uint64_t v35 = type metadata accessor for ContactQuery(v34);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  uint64_t v37 = (char *)&v78 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v83 = (char *)&v78 - v38;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v40 = (char *)&v78 - v39;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v78 - v41;
  uint64_t v43 = OUTLINED_FUNCTION_54_5();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v44 = v33;
  uint64_t v46 = v45;
  outlined init with copy of PhoneCallNLv3Intent(v44, v45);
  uint64_t v87 = v42;
  id v88 = v40;
  uint64_t v79 = v22;
  uint64_t v47 = *(void *)(v46 + *(int *)(v43 + 48));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent,  (uint64_t)&protocol conformance descriptor for PhoneCallNLv3Intent);
  uint64_t v49 = IntentNodeTraversable.intentNodes(forOntologyNode:)(v47, v43, v48);
  __chkstk_darwin();
  uint64_t v78 = v50;
  uint64_t v77 = v50;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( a21,  (uint64_t)&v76,  v49,  (uint64_t)&v91);
  uint64_t v52 = v51;
  OUTLINED_FUNCTION_62();
  uint64_t v53 = *(void *)(v52 + 16);
  uint64_t v85 = v31;
  if (v53)
  {
    uint64_t v84 = v29;
    uint64_t v90 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v54 = v52 + 32;
    uint64_t v55 = v90;
    do
    {
      outlined init with copy of SharedGlobalsProviding(v54, (uint64_t)v89);
      OUTLINED_FUNCTION_49_0(v89);
      SiriPhoneContact.asSiriInferenceContact.getter();
      __swift_destroy_boxed_opaque_existential_1(v89);
      if ((swift_isUniquelyReferenced_nonNull_native(v55) & 1) == 0)
      {
        OUTLINED_FUNCTION_60_10();
        uint64_t v55 = v90;
      }

      unint64_t v56 = v55[2];
      if (v56 >= v55[3] >> 1)
      {
        OUTLINED_FUNCTION_60_10();
        uint64_t v55 = v90;
      }

      v55[2] = v56 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))( (unint64_t)v55 + ((*(unsigned __int8 *)(v23 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
      + *(void *)(v23 + 72) * v56,
        v37,
        v35);
      uint64_t v90 = v55;
      v54 += 40LL;
      --v53;
    }

    while (v53);
    swift_bridgeObjectRelease();
    uint64_t v29 = v84;
    uint64_t v31 = v85;
  }

  else
  {
    OUTLINED_FUNCTION_34_0();
    uint64_t v55 = _swiftEmptyArrayStorage;
  }

  v89[0] = _swiftEmptyArrayStorage;
  char v57 = v86;
  uint64_t v58 = v87;
  uint64_t v84 = v55[2];
  if (!v84)
  {
LABEL_28:
    char v70 = v57 & 1;
    OUTLINED_FUNCTION_34_0();
    uint64_t v71 = v89[0];
    uint64_t v72 = v78;
    uint64_t v73 = specialized PhoneCallNLIntent.isDisplayNameEmergencyContact()();
    static SiriKitEventSender.current.getter(v89, v73);
    uint64_t v74 = type metadata accessor for EmergencyContactResolution();
    uint64_t v75 = OUTLINED_FUNCTION_73_7(v74);
    LOBYTE(v76) = v70;
    a22(v79, v71, v73 & 1, v31, v29, v72, v80, v81, v76, v89, v75);
    swift_release(v71);
    OUTLINED_FUNCTION_16_3();
    __swift_destroy_boxed_opaque_existential_1(v89);
LABEL_29:
    outlined destroy of PhoneCallNLv3Intent();
    OUTLINED_FUNCTION_7_5();
    return;
  }

  unint64_t v59 = 0LL;
  while (v59 < v55[2])
  {
    uint64_t v60 = v29;
    unint64_t v61 = (*(unsigned __int8 *)(v23 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v62 = *(void *)(v23 + 72);
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    v63(v58, (char *)v55 + v61 + v62 * v59, v35);
    if (one-time initialization token for emptyQuery != -1) {
      swift_once(&one-time initialization token for emptyQuery, one-time initialization function for emptyQuery);
    }
    __swift_project_value_buffer(v35, (uint64_t)static ContactQuery.emptyQuery);
    char v64 = static ContactQuery.== infix(_:_:)(v58);
    uint64_t v65 = v58;
    char v66 = v64;
    v63(v88, v65, v35);
    if ((v66 & 1) != 0)
    {
      OUTLINED_FUNCTION_53_9();
    }

    else
    {
      if (one-time initialization token for emptyNLv4Query != -1) {
        swift_once( &one-time initialization token for emptyNLv4Query,  one-time initialization function for emptyNLv4Query);
      }
      __swift_project_value_buffer(v35, (uint64_t)static ContactQuery.emptyNLv4Query);
      char v67 = static ContactQuery.== infix(_:_:)(v88);
      OUTLINED_FUNCTION_53_9();
      if ((v67 & 1) == 0)
      {
        uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
        v82(v83, v87, v35);
        uint64_t v68 = v89[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v89[0]) & 1) == 0)
        {
          OUTLINED_FUNCTION_60_10();
          uint64_t v68 = v89[0];
        }

        unint64_t v69 = *(void *)(v68 + 16);
        if (v69 >= *(void *)(v68 + 24) >> 1)
        {
          OUTLINED_FUNCTION_60_10();
          uint64_t v68 = v89[0];
        }

        *(void *)(v68 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v69 + 1;
        v82((char *)(v68 + v61 + v69 * v62), v83, v35);
        v89[0] = v68;
        uint64_t v58 = v87;
        goto LABEL_27;
      }
    }

    uint64_t v58 = v87;
    ((void (*)(char *, uint64_t))v63)(v87, v35);
LABEL_27:
    ++v59;
    uint64_t v29 = v60;
    uint64_t v31 = v85;
    char v57 = v86;
    if (v84 == v59) {
      goto LABEL_28;
    }
  }

  __break(1u);
}

uint64_t partial apply for closure #1 in PhoneCallNLv3Intent.contacts.getter@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return closure #1 in PhoneCallNLv3Intent.contacts.getter(a1, a2);
}

void partial apply for closure #1 in static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( uint64_t a1)
{
}

uint64_t objectdestroyTm_5()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_FB068()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return partial apply for closure #1 in PhoneCallNLv3Intent.contacts.getter(a1, a2);
}

uint64_t OUTLINED_FUNCTION_9_39@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  return specialized StartVideoCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( v2,  v1,  v5,  v0,  v3,  v4);
}

uint64_t OUTLINED_FUNCTION_17_33@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_29_18()
{
  return swift_release_n(v0, 2LL);
}

void OUTLINED_FUNCTION_31_18(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_32_18(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_33_21(uint64_t a1)
{
  return static SiriKitLifecycle._logCrashToEventBus(_:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, v1);
}

uint64_t OUTLINED_FUNCTION_35_16(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_36_11(uint64_t a1)
{
  *(void *)(v1 - outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_39_10()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_42_10()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

void OUTLINED_FUNCTION_45_10()
{
}

BOOL OUTLINED_FUNCTION_46_10(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_47_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 57LL, a3, 6LL, 0LL);
}

BOOL OUTLINED_FUNCTION_50_12(os_log_s *a1)
{
  return os_log_type_enabled(a1, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_53_9()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_54_5()
{
  return type metadata accessor for PhoneCallNLv3Intent(0LL);
}

uint64_t OUTLINED_FUNCTION_59_8()
{
  return static os_log_type_t.error.getter();
}

void OUTLINED_FUNCTION_60_10()
{
}

uint64_t OUTLINED_FUNCTION_63_7()
{
  return swift_retain_n(v0, 2LL);
}

void *OUTLINED_FUNCTION_67_8@<X0>( int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void (*a7)(void)@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v13,  v12,  a9);
}

uint64_t OUTLINED_FUNCTION_69_6(uint64_t a1)
{
  *(void *)(v1 - outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_70_5(unsigned __int8 a1)
{
  return specialized PhoneCallNLIntent.hasCallConfirmation(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_72_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_7(uint64_t a1)
{
  return swift_allocObject(a1, 16LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_76_7()
{
  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_77_5(uint64_t result)
{
  *(void *)(v1 - outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = result;
  return result;
}

uint64_t specialized static ContactSlotResolver.make<A>(rchFlowContext:sharedGlobals:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AnyIntentResolver<INStartCallIntent>>);
  uint64_t v11 = swift_allocObject(v10, 160LL, 7LL);
  *(_OWORD *)(v11 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D880;
  outlined init with copy of SignalProviding(a4, (uint64_t)v20);
  id v12 = [objc_allocWithZone(HKHealthStore) init];
  id v13 = [objc_allocWithZone(HKMedicalIDStore) initWithHealthStore:v12];

  uint64_t v22 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for HKMedicalIDStore,  &OBJC_CLASS___HKMedicalIDStore_ptr);
  uint64_t v23 = &protocol witness table for HKMedicalIDStore;
  id v21 = v13;
  outlined init with copy of SpeakableString?( (uint64_t)v20,  (uint64_t)v19,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartCallIntent>);
  specialized AnyIntentResolver.init<A>(_:)((uint64_t)v19, (uint64_t *)(v11 + 32));
  outlined destroy of SpeakableString?( (uint64_t)v20,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartCallIntent>);
  outlined init with copy of SignalProviding(a4, (uint64_t)v20);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriInferenceContactSlotResolver<INStartCallIntent>);
  uint64_t v15 = swift_allocObject(v14, 89LL, 7LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  outlined init with take of AppSelectionSignalComponent(v20, v15 + 40);
  *(void *)(v15 + 80) = 0LL;
  *(_BYTE *)(v15 + 88) = 1;
  id v16 = a3;
  swift_retain();
  id v17 = a2;
  specialized SKIntentResolver.toAnyIntentResolver()( &demangling cache variable for type metadata for SiriInferenceContactSlotResolver<INStartCallIntent>,  (uint64_t)partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:),  (uint64_t)&async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:),  (void *)(v11 + 96));
  swift_release(v15);
  return specialized AnyIntentResolver.init<A>(_:)(v11, a5);
}

{
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  _BYTE v19[80];
  __int128 v20[2];
  id v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AnyIntentResolver<INStartAudioCallIntent>>);
  uint64_t v11 = swift_allocObject(v10, 160LL, 7LL);
  *(_OWORD *)(v11 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D880;
  outlined init with copy of SignalProviding(a4, (uint64_t)v20);
  id v12 = [objc_allocWithZone(HKHealthStore) init];
  id v13 = [objc_allocWithZone(HKMedicalIDStore) initWithHealthStore:v12];

  uint64_t v22 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for HKMedicalIDStore,  &OBJC_CLASS___HKMedicalIDStore_ptr);
  uint64_t v23 = &protocol witness table for HKMedicalIDStore;
  id v21 = v13;
  outlined init with copy of SpeakableString?( (uint64_t)v20,  (uint64_t)v19,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartAudioCallIntent>);
  specialized AnyIntentResolver.init<A>(_:)((uint64_t)v19, (uint64_t *)(v11 + 32));
  outlined destroy of SpeakableString?( (uint64_t)v20,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartAudioCallIntent>);
  outlined init with copy of SignalProviding(a4, (uint64_t)v20);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriInferenceContactSlotResolver<INStartAudioCallIntent>);
  uint64_t v15 = swift_allocObject(v14, 89LL, 7LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  outlined init with take of AppSelectionSignalComponent(v20, v15 + 40);
  *(void *)(v15 + 80) = 0LL;
  *(_BYTE *)(v15 + 88) = 1;
  id v16 = a3;
  swift_retain();
  id v17 = a2;
  specialized SKIntentResolver.toAnyIntentResolver()( &demangling cache variable for type metadata for SiriInferenceContactSlotResolver<INStartAudioCallIntent>,  (uint64_t)partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:),  (uint64_t)&async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:),  (void *)(v11 + 96));
  swift_release(v15);
  return specialized AnyIntentResolver.init<A>(_:)(v11, a5);
}

{
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  _BYTE v19[80];
  __int128 v20[2];
  id v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AnyIntentResolver<INStartVideoCallIntent>>);
  uint64_t v11 = swift_allocObject(v10, 160LL, 7LL);
  *(_OWORD *)(v11 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D880;
  outlined init with copy of SignalProviding(a4, (uint64_t)v20);
  id v12 = [objc_allocWithZone(HKHealthStore) init];
  id v13 = [objc_allocWithZone(HKMedicalIDStore) initWithHealthStore:v12];

  uint64_t v22 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for HKMedicalIDStore,  &OBJC_CLASS___HKMedicalIDStore_ptr);
  uint64_t v23 = &protocol witness table for HKMedicalIDStore;
  id v21 = v13;
  outlined init with copy of SpeakableString?( (uint64_t)v20,  (uint64_t)v19,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartVideoCallIntent>);
  specialized AnyIntentResolver.init<A>(_:)((uint64_t)v19, (uint64_t *)(v11 + 32));
  outlined destroy of SpeakableString?( (uint64_t)v20,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartVideoCallIntent>);
  outlined init with copy of SignalProviding(a4, (uint64_t)v20);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriInferenceContactSlotResolver<INStartVideoCallIntent>);
  uint64_t v15 = swift_allocObject(v14, 89LL, 7LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  outlined init with take of AppSelectionSignalComponent(v20, v15 + 40);
  *(void *)(v15 + 80) = 0LL;
  *(_BYTE *)(v15 + 88) = 1;
  id v16 = a3;
  swift_retain();
  id v17 = a2;
  specialized SKIntentResolver.toAnyIntentResolver()( &demangling cache variable for type metadata for SiriInferenceContactSlotResolver<INStartVideoCallIntent>,  (uint64_t)partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:),  (uint64_t)&async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:),  (void *)(v11 + 96));
  swift_release(v15);
  return specialized AnyIntentResolver.init<A>(_:)(v11, a5);
}

uint64_t specialized SKIntentResolver.toAnyIntentResolver()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AddCallParticipantContactSlotResolver();
  *a1 = v1;
  a1[3] = v3;
  a1[4] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
  a1[5] = v1;
  a1[6] = &async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  a1[7] = v1;
  return swift_retain_n(v1, 3LL);
}

uint64_t specialized SKIntentResolver.toAnyIntentResolver()@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  *a4 = v4;
  a4[3] = v8;
  a4[4] = a2;
  a4[5] = v4;
  a4[6] = a3;
  a4[7] = v4;
  return swift_retain_n(v4, 3LL);
}

uint64_t PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[45] = a6;
  v7[46] = a7;
  v7[43] = a4;
  v7[44] = a5;
  v7[41] = a2;
  v7[42] = a3;
  v7[40] = a1;
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v8, v9, v10);
}

void PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = *(void **)(v0 + 328);
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  uint64_t v3 = (os_log_s *)__swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v1);
  os_log_type_t v4 = OUTLINED_FUNCTION_6_0();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void **)(v0 + 328);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v8 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v54 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    id v9 = [v6 _className];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    unint64_t v12 = v11;

    *(void *)(v0 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 312, v0 + 320, v7 + 4);
    OUTLINED_FUNCTION_87_0();

    _os_log_impl(&dword_0, v3, v4, "#PhoneIntentResolver Resolving %s", v7, 0xCu);
    OUTLINED_FUNCTION_29_19();
    OUTLINED_FUNCTION_0_2(v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  else
  {
  }

  uint64_t v13 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
  if (OUTLINED_FUNCTION_33_4(v13))
  {
    OUTLINED_FUNCTION_45_11();
    uint64_t v14 = OUTLINED_FUNCTION_44_13();
    specialized static ContactSlotResolver.make<A>(rchFlowContext:sharedGlobals:)(v14, v15, v16, v17, v18);
    int v19 = (void *)OUTLINED_FUNCTION_18_29(*(void *)(v0 + 256));
    *(void *)(v0 + 376) = v19;
    uint64_t v20 = PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:);
  }

  else
  {
    uint64_t v21 = objc_opt_self(&OBJC_CLASS___INStartAudioCallIntent);
    if (OUTLINED_FUNCTION_33_4(v21))
    {
      OUTLINED_FUNCTION_45_11();
      uint64_t v22 = OUTLINED_FUNCTION_44_13();
      specialized static ContactSlotResolver.make<A>(rchFlowContext:sharedGlobals:)(v22, v23, v24, v25, v26);
      int v19 = (void *)OUTLINED_FUNCTION_18_29(*(void *)(v0 + 192));
      *(void *)(v0 + 400) = v19;
      uint64_t v20 = PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:);
    }

    else
    {
      uint64_t v27 = objc_opt_self(&OBJC_CLASS___INStartVideoCallIntent);
      if (!OUTLINED_FUNCTION_33_4(v27))
      {
        uint64_t v34 = objc_opt_self(&OBJC_CLASS___INAddCallParticipantIntent);
        uint64_t v35 = OUTLINED_FUNCTION_33_4(v34);
        if (v35)
        {
          uint64_t v36 = (void *)v35;
          uint64_t v37 = *(void **)(v0 + 352);
          uint64_t v38 = *(void *)(v0 + 336);
          uint64_t v39 = *(void **)(v0 + 344);
          uint64_t v40 = *(void *)(v0 + 320);
          uint64_t v41 = *(void **)(v0 + 328);
          outlined init with copy of SignalProviding(*(void *)(v0 + 360), v0 + 272);
          uint64_t v42 = type metadata accessor for AddCallParticipantContactSlotResolver();
          uint64_t v43 = (void *)swift_allocObject(v42, 80LL, 7LL);
          v43[2] = v38;
          uint64_t v43[3] = v39;
          v43[4] = v37;
          outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 272), (uint64_t)(v43 + 5));
          id v44 = v37;
          id v45 = v41;
          swift_retain();
          id v46 = v39;
          specialized SKIntentResolver.toAnyIntentResolver()((void *)(v0 + 16));
          swift_release(v43);
          if (((*(uint64_t (**)(void *, uint64_t))(v0 + 48))(v36, v40) & 1) != 0)
          {
            uint64_t v47 = (void *)OUTLINED_FUNCTION_18_29(*(void *)(v0 + 64));
            *(void *)(v0 + 448) = v47;
            *uint64_t v47 = v0;
            v47[1] = PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:);
LABEL_13:
            OUTLINED_FUNCTION_41_14();
            __asm { BR              X2 }
          }

          uint64_t v49 = *(void *)(v0 + 368);
          id v50 = *(id *)(v0 + 328);
          INIntent.typedOrThrow<A>(as:)(v49, v49);
          uint64_t v51 = *(void **)(v0 + 328);
          OUTLINED_FUNCTION_41_1( v52,  &demangling cache variable for type metadata for AnyIntentResolver<INAddCallParticipantIntent>);
        }

        else
        {
          id v48 = *(id *)(v0 + 328);
        }

        OUTLINED_FUNCTION_57_7();
        OUTLINED_FUNCTION_41_14();
        __asm { BR              X1 }
      }

      OUTLINED_FUNCTION_45_11();
      uint64_t v28 = OUTLINED_FUNCTION_44_13();
      specialized static ContactSlotResolver.make<A>(rchFlowContext:sharedGlobals:)(v28, v29, v30, v31, v32);
      int v19 = (void *)OUTLINED_FUNCTION_18_29(*(void *)(v0 + 128));
      *(void *)(v0 + 424) = v19;
      uint64_t v20 = PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:);
    }
  }

  *int v19 = v0;
  v19[1] = v20;
  goto LABEL_13;
}

uint64_t PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:)()
{
  *(void *)(v2 + 384) = v1;
  *(void *)(v2 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  OUTLINED_FUNCTION_28_17(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v1 = v0[49];
  OUTLINED_FUNCTION_49_9();
  uint64_t v2 = (void *)v0[48];
  uint64_t v3 = (void *)v0[41];
  OUTLINED_FUNCTION_28_21(v4, &demangling cache variable for type metadata for AnyIntentResolver<INStartCallIntent>);

  uint64_t v6 = (uint64_t (*)(void))v0[1];
  if (!v1) {
    BOOL v5 = OUTLINED_FUNCTION_57_7();
  }
  return OUTLINED_FUNCTION_5_43(v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_84_6();
  OUTLINED_FUNCTION_11_37(v1, &demangling cache variable for type metadata for AnyIntentResolver<INStartCallIntent>);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v2 + 408) = v1;
  *(void *)(v2 + 4outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v0;
  OUTLINED_FUNCTION_28_17(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v1 = v0[52];
  OUTLINED_FUNCTION_49_9();
  uint64_t v2 = (void *)v0[51];
  uint64_t v3 = (void *)v0[41];
  OUTLINED_FUNCTION_28_21( v4,  &demangling cache variable for type metadata for AnyIntentResolver<INStartAudioCallIntent>);

  uint64_t v6 = (uint64_t (*)(void))v0[1];
  if (!v1) {
    BOOL v5 = OUTLINED_FUNCTION_57_7();
  }
  return OUTLINED_FUNCTION_5_43(v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_84_6();
  OUTLINED_FUNCTION_11_37( v1,  &demangling cache variable for type metadata for AnyIntentResolver<INStartAudioCallIntent>);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v2 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  *(void *)(v2 + 440) = v0;
  OUTLINED_FUNCTION_28_17(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v1 = v0[55];
  OUTLINED_FUNCTION_49_9();
  uint64_t v2 = (void *)v0[54];
  uint64_t v3 = (void *)v0[41];
  OUTLINED_FUNCTION_28_21( v4,  &demangling cache variable for type metadata for AnyIntentResolver<INStartVideoCallIntent>);

  uint64_t v6 = (uint64_t (*)(void))v0[1];
  if (!v1) {
    BOOL v5 = OUTLINED_FUNCTION_57_7();
  }
  return OUTLINED_FUNCTION_5_43(v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_84_6();
  OUTLINED_FUNCTION_11_37( v1,  &demangling cache variable for type metadata for AnyIntentResolver<INStartVideoCallIntent>);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v1 = *(void **)(v0 + 464);
  OUTLINED_FUNCTION_49_9();
  os_log_type_t v4 = v3;
  BOOL v5 = *(void **)(v0 + 328);
  OUTLINED_FUNCTION_28_21( v3,  &demangling cache variable for type metadata for AnyIntentResolver<INAddCallParticipantIntent>);

  if (!v2) {
    uint64_t v6 = v4;
  }
  return OUTLINED_FUNCTION_5_43(v6, *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_84_6();
  OUTLINED_FUNCTION_11_37( v1,  &demangling cache variable for type metadata for AnyIntentResolver<INAddCallParticipantIntent>);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:)(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 448);
  *(void *)(*v2 + 4outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v1;
  swift_task_dealloc(v5);
  if (!v1) {
    *(void *)(v4 + 464) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v6, v7, v8);
}

uint64_t protocol witness for PhoneIntentResolving.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:) in conformance PhoneIntentResolver( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(dword_4317BC);
  *(void *)(v7 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v15;
  void *v15 = v7;
  v15[1] = protocol witness for PhoneIntentResolving.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:) in conformance PhoneIntentResolver;
  return PhoneIntentResolver.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t protocol witness for PhoneIntentResolving.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:) in conformance PhoneIntentResolver()
{
  uint64_t v3 = OUTLINED_FUNCTION_40_12();
  if (!v1) {
    uint64_t v3 = v0;
  }
  return OUTLINED_FUNCTION_116_1(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[61] = a2;
  v3[62] = a3;
  v3[60] = a1;
  return swift_task_switch(specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:), 0LL, 0LL);
}

{
  void *v3;
  v3[61] = a2;
  v3[62] = a3;
  v3[60] = a1;
  return swift_task_switch(specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:), 0LL, 0LL);
}

{
  void *v3;
  v3[61] = a2;
  v3[62] = a3;
  v3[60] = a1;
  return swift_task_switch(specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:), 0LL, 0LL);
}

#error "FC2B4: call analysis failed (funcsize=174)"
uint64_t specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_10_38();
  if (!v1) {
    *(void *)(v2 + 520) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v3, v4, v5);
}

uint64_t specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_77_6();
  uint64_t v1 = outlined destroy of SpeakableString?( v0,  &demangling cache variable for type metadata for AnyIntentResolver<INStartVideoCallIntent>);
  OUTLINED_FUNCTION_11_37( v1,  &demangling cache variable for type metadata for AnyIntentResolver<INStartVideoCallIntent>?);
  uint64_t v2 = OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_116_1(v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = outlined destroy of SpeakableString?( v0 + 144,  &demangling cache variable for type metadata for AnyIntentResolver<INStartVideoCallIntent>);
  OUTLINED_FUNCTION_11_37( v1,  &demangling cache variable for type metadata for AnyIntentResolver<INStartVideoCallIntent>?);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v0 = OUTLINED_FUNCTION_77_6();
  uint64_t v1 = outlined destroy of SpeakableString?( v0,  &demangling cache variable for type metadata for AnyIntentResolver<INStartAudioCallIntent>);
  OUTLINED_FUNCTION_11_37( v1,  &demangling cache variable for type metadata for AnyIntentResolver<INStartAudioCallIntent>?);
  uint64_t v2 = OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_116_1(v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = outlined destroy of SpeakableString?( v0 + 144,  &demangling cache variable for type metadata for AnyIntentResolver<INStartAudioCallIntent>);
  OUTLINED_FUNCTION_11_37( v1,  &demangling cache variable for type metadata for AnyIntentResolver<INStartAudioCallIntent>?);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v0 = OUTLINED_FUNCTION_77_6();
  uint64_t v1 = outlined destroy of SpeakableString?( v0,  &demangling cache variable for type metadata for AnyIntentResolver<INStartCallIntent>);
  OUTLINED_FUNCTION_11_37(v1, &demangling cache variable for type metadata for AnyIntentResolver<INStartCallIntent>?);
  uint64_t v2 = OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_116_1(v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = outlined destroy of SpeakableString?( v0 + 144,  &demangling cache variable for type metadata for AnyIntentResolver<INStartCallIntent>);
  OUTLINED_FUNCTION_11_37(v1, &demangling cache variable for type metadata for AnyIntentResolver<INStartCallIntent>?);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

#error "FC6BC: call analysis failed (funcsize=174)"
uint64_t specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_10_38();
  if (!v1) {
    *(void *)(v2 + 520) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v3, v4, v5);
}

#error "FCAC4: call analysis failed (funcsize=174)"
uint64_t specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_10_38();
  if (!v1) {
    *(void *)(v2 + 520) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v3, v4, v5);
}

uint64_t specialized closure #1 in FirstHitIntentResolver.resolve(skIntent:nlIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 32))(a2, a3);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  uint64_t v8 = outlined init with copy of SpeakableString?(a1, (uint64_t)v27, a4);
  id v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v11 = static os_log_type_t.debug.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    uint64_t v12 = swift_slowAlloc(18LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v28 = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    outlined init with copy of SpeakableString?((uint64_t)v27, (uint64_t)&v25, a4);
    OUTLINED_FUNCTION_90_4((uint64_t)v27);
    outlined init with copy of Any((uint64_t)&v25, (uint64_t)v23);
    uint64_t v14 = v24;
    uint64_t v15 = __swift_project_boxed_opaque_existential_1(v23, v24);
    uint64_t DynamicType = swift_getDynamicType(v15, v14, 1LL);
    __swift_destroy_boxed_opaque_existential_1(v23);
    uint64_t v22 = DynamicType;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any.Type);
    uint64_t v18 = String.init<A>(describing:)(&v22, v17);
    unint64_t v20 = v19;
    OUTLINED_FUNCTION_90_4((uint64_t)&v25);
    uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v12 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1024;
    LODWORD(v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v6 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 4, v12 + 14);
    _os_log_impl(&dword_0, v9, v11, "#%s shouldRunResolver = %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy(v13, 1LL);
    OUTLINED_FUNCTION_0_2(v13);
    OUTLINED_FUNCTION_0_2(v12);
  }

  else
  {
    OUTLINED_FUNCTION_90_4((uint64_t)v27);
  }

  return v6 & 1;
}

uint64_t specialized AnyIntentResolver.init<A>(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FirstHitIntentResolver<INStartVideoCallIntent>);
  uint64_t v5 = swift_allocObject(&unk_3FE1A8, 24LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v6 = swift_allocObject(&unk_3FE1D0, 24LL, 7LL);
  *(void *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *a2 = a1;
  a2[3] = v4;
  a2[4] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
  a2[5] = v5;
  a2[6] = &async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  a2[7] = v6;
  return swift_bridgeObjectRetain_n(a1, 2LL);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FirstHitIntentResolver<INStartAudioCallIntent>);
  uint64_t v5 = swift_allocObject(&unk_3FE0E0, 24LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v6 = swift_allocObject(&unk_3FE108, 24LL, 7LL);
  *(void *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *a2 = a1;
  a2[3] = v4;
  a2[4] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
  a2[5] = v5;
  a2[6] = &async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  a2[7] = v6;
  return swift_bridgeObjectRetain_n(a1, 2LL);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FirstHitIntentResolver<INStartCallIntent>);
  uint64_t v5 = swift_allocObject(&unk_3FE018, 24LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v6 = swift_allocObject(&unk_3FE040, 24LL, 7LL);
  *(void *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *a2 = a1;
  a2[3] = v4;
  a2[4] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
  a2[5] = v5;
  a2[6] = &async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  a2[7] = v6;
  return swift_bridgeObjectRetain_n(a1, 2LL);
}

uint64_t specialized AnyIntentResolver.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartVideoCallIntent>);
  uint64_t v4 = swift_allocObject(&unk_3FE1F8, 96LL, 7LL);
  *a2 = v4;
  outlined init with copy of SpeakableString?( a1,  v4 + 16,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartVideoCallIntent>);
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartVideoCallIntent>);
  uint64_t v5 = swift_allocObject(&unk_3FE220, 96LL, 7LL);
  memcpy((void *)(v5 + 16), v8, 0x50uLL);
  a2[4] = (uint64_t)partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
  a2[5] = v5;
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartVideoCallIntent>);
  uint64_t v6 = swift_allocObject(&unk_3FE248, 96LL, 7LL);
  memcpy((void *)(v6 + 16), v8, 0x50uLL);
  uint64_t result = outlined destroy of SpeakableString?( a1,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartVideoCallIntent>);
  a2[6] = (uint64_t)&async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  a2[7] = v6;
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[80];
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartAudioCallIntent>);
  uint64_t v4 = swift_allocObject(&unk_3FE130, 96LL, 7LL);
  *a2 = v4;
  outlined init with copy of SpeakableString?( a1,  v4 + 16,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartAudioCallIntent>);
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartAudioCallIntent>);
  uint64_t v5 = swift_allocObject(&unk_3FE158, 96LL, 7LL);
  memcpy((void *)(v5 + 16), v8, 0x50uLL);
  a2[4] = (uint64_t)partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
  a2[5] = v5;
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartAudioCallIntent>);
  uint64_t v6 = swift_allocObject(&unk_3FE180, 96LL, 7LL);
  memcpy((void *)(v6 + 16), v8, 0x50uLL);
  uint64_t result = outlined destroy of SpeakableString?( a1,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartAudioCallIntent>);
  a2[6] = (uint64_t)&async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  a2[7] = v6;
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[80];
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartCallIntent>);
  uint64_t v4 = swift_allocObject(&unk_3FE068, 96LL, 7LL);
  *a2 = v4;
  outlined init with copy of SpeakableString?( a1,  v4 + 16,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartCallIntent>);
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartCallIntent>);
  uint64_t v5 = swift_allocObject(&unk_3FE090, 96LL, 7LL);
  memcpy((void *)(v5 + 16), v8, 0x50uLL);
  a2[4] = (uint64_t)partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:);
  a2[5] = v5;
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartCallIntent>);
  uint64_t v6 = swift_allocObject(&unk_3FE0B8, 96LL, 7LL);
  memcpy((void *)(v6 + 16), v8, 0x50uLL);
  uint64_t result = outlined destroy of SpeakableString?( a1,  &demangling cache variable for type metadata for EmergencyContactSlotResolver<INStartCallIntent>);
  a2[6] = (uint64_t)&async function pointer to partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  a2[7] = v6;
  return result;
}

uint64_t specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)a3 + 128LL))() & 1;
}

BOOL EmergencyContactSlotResolver.shouldRunResolver(skIntent:nlIntent:)(uint64_t a1, void *a2)
{
  return PhoneCallNLIntent.isEmergencyContactCall()();
}

uint64_t specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(unk_43FF7C);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v5(a1);
}

{
  uint64_t v1;
  void *v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v3 = (void *)swift_task_alloc(unk_43FFC4);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v5(a1);
}

{
  uint64_t v1;
  void *v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v3 = (void *)swift_task_alloc(unk_43FFAC);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v5(a1);
}

{
  uint64_t v1;
  void *v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v3 = (void *)swift_task_alloc(unk_43FF8C);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v5(a1);
}

{
  uint64_t v1;
  void *v3;
  uint64_t v3 = (void *)swift_task_alloc(dword_431954);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1);
}

{
  uint64_t v1;
  void *v3;
  uint64_t v3 = (void *)swift_task_alloc(dword_43192C);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1);
}

{
  uint64_t v1;
  void *v3;
  uint64_t v3 = (void *)swift_task_alloc(dword_4318BC);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1);
}

{
  uint64_t v1;
  void *v3;
  uint64_t v3 = (void *)swift_task_alloc(dword_43184C);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1);
}

uint64_t specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_43190C);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)(a1, a2, a3);
}

{
  uint64_t v3;
  void *v7;
  uint64_t v7 = (void *)swift_task_alloc(dword_43189C);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)(a1, a2, a3);
}

{
  uint64_t v3;
  void *v7;
  uint64_t v7 = (void *)swift_task_alloc(dword_431824);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized FirstHitIntentResolver.resolve(skIntent:nlIntent:)(a1, a2, a3);
}

uint64_t specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc(unk_43FFD4);
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v7(a1, a2);
}

{
  uint64_t v2;
  void *v5;
  uint64_t (*v7)(uint64_t, uint64_t);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc(unk_43FFBC);
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v7(a1, a2);
}

{
  uint64_t v2;
  void *v5;
  uint64_t (*v7)(uint64_t, uint64_t);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc(unk_43FFA4);
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v7(a1, a2);
}

uint64_t specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)()
{
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v0 = OUTLINED_FUNCTION_82_6();
  INStartVideoCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v0);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_65_6();
  uint64_t v1 = OUTLINED_FUNCTION_80_5();
  return OUTLINED_FUNCTION_0_39(v1, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_13_38();
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v0 = OUTLINED_FUNCTION_82_6();
  INStartCallIntent.overwriteContacts(newContacts:)((Swift::OpaquePointer)v0);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_65_6();
  uint64_t v1 = OUTLINED_FUNCTION_80_5();
  return OUTLINED_FUNCTION_0_39(v1, v2);
}

ValueMetadata *type metadata accessor for PhoneIntentResolver()
{
  return &type metadata for PhoneIntentResolver;
}

uint64_t specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_431904);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1, a2, v6);
}

{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_431894);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1, a2, v6);
}

{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_43181C);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(a1, a2, v6);
}

uint64_t specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:)()
{
  return CallingIntentContinueInAppStrategy.shouldCheckResponseModeToOutputIntentHandledDialog.getter();
}

uint64_t sub_FDBB0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_89_5();
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  uint64_t v2 = OUTLINED_FUNCTION_12_40();
  return OUTLINED_FUNCTION_1_48(v2, v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_38_15();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_70_6();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_9_40( v1,  (uint64_t)partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:));
  return OUTLINED_FUNCTION_1_48(v2, v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_30_16();
  uint64_t v1 = (void *)swift_task_alloc(dword_431854);
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  uint64_t v2 = OUTLINED_FUNCTION_12_40();
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(v2, v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_30_16();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_89_5();
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  uint64_t v2 = OUTLINED_FUNCTION_12_40();
  return OUTLINED_FUNCTION_1_48(v2, v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_38_15();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_70_6();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_9_40( v1,  (uint64_t)partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:));
  return OUTLINED_FUNCTION_1_48(v2, v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_30_16();
  uint64_t v1 = (void *)swift_task_alloc(dword_4318C4);
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  uint64_t v2 = OUTLINED_FUNCTION_12_40();
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_40_12();
  return OUTLINED_FUNCTION_116_1(v0, *(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_30_16();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_89_5();
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  uint64_t v2 = OUTLINED_FUNCTION_12_40();
  return OUTLINED_FUNCTION_1_48(v2, v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_38_15();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_70_6();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_9_40( v1,  (uint64_t)partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:));
  return OUTLINED_FUNCTION_1_48(v2, v3, v4, v5);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_30_16();
  uint64_t v1 = (void *)swift_task_alloc(dword_431934);
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  uint64_t v2 = OUTLINED_FUNCTION_12_40();
  return specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)(v2, v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_38_15();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_70_6();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_9_40( v1,  (uint64_t)partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:));
  return OUTLINED_FUNCTION_1_48(v2, v3, v4, v5);
}

uint64_t partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:)()
{
  return specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:)();
}

uint64_t partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:)( uint64_t a1)
{
  uint64_t v4 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 24));
  return OUTLINED_FUNCTION_116_1(a1, *(uint64_t (**)(void))(v4 + 8));
}

BOOL partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:)( uint64_t a1, void *a2)
{
  return EmergencyContactSlotResolver.shouldRunResolver(skIntent:nlIntent:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_1_48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_6_42()
{
  return swift_slowAlloc(22LL, -1LL);
}

uint64_t OUTLINED_FUNCTION_7_47(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_8_35(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_9_40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_10_38()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 504);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 51__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_11_37(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_12_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_38()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)(v1 - 8);
  *uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(v2 + 24);
  *uint64_t v3 = *v0;
  return swift_task_dealloc(v4);
}

  ;
}

uint64_t OUTLINED_FUNCTION_16_26(uint64_t a1, uint64_t a2)
{
  return specialized implicit closure #2 in implicit closure #1 in AnyIntentResolver.init<A>(_:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_18_29@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t OUTLINED_FUNCTION_20_21( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v13 + 47__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a13, v13 + 480, a11, v14 + 22);
}

uint64_t OUTLINED_FUNCTION_24_19( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_26_24()
{
  return swift_task_alloc(*(unsigned int *)(*(void *)(v0 + 192) + 4LL));
}

uint64_t OUTLINED_FUNCTION_28_21(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_29_19()
{
  return swift_arrayDestroy(v0, 1LL);
}

  ;
}

__n128 OUTLINED_FUNCTION_31_19()
{
  __int128 v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 160) = v2;
  __n128 result = *(__n128 *)(v0 + 32);
  __int128 v4 = *(_OWORD *)(v0 + 48);
  *(__n128 *)(v1 + outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = result;
  *(_OWORD *)(v1 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_19( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return swift_arrayDestroy(a14, 2LL);
}

uint64_t OUTLINED_FUNCTION_33_22()
{
  return outlined init with copy of SpeakableString?(v1, v0, v2);
}

void OUTLINED_FUNCTION_34_16(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

void OUTLINED_FUNCTION_35_17(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_36_12( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v12 + 440) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a10, a11, v11, v13 + 12);
}

uint64_t OUTLINED_FUNCTION_37_16( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return outlined init with copy of SpeakableString?(v13, a12, v12);
}

void OUTLINED_FUNCTION_38_15()
{
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_39_11()
{
  return outlined destroy of SpeakableString?(v1, v0);
}

__n128 OUTLINED_FUNCTION_41_15()
{
  __int128 v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 32);
  __int128 v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  *(_OWORD *)(v0 + 48) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_43_8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v2;
  a1[1] = a2;
  return *(void *)(v2 + 480);
}

uint64_t OUTLINED_FUNCTION_44_13()
{
  return v0;
}

id OUTLINED_FUNCTION_45_11()
{
  return *(id *)(v0 + 328);
}

void OUTLINED_FUNCTION_49_9()
{
}

uint64_t OUTLINED_FUNCTION_50_13( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, (uint64_t *)va);
}

void OUTLINED_FUNCTION_54_6()
{
  *(_WORD *)(v0 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
}

id OUTLINED_FUNCTION_56_7()
{
  return *(id *)(v0 + 480);
}

uint64_t OUTLINED_FUNCTION_58_7(uint64_t a1)
{
  return outlined destroy of SpeakableString?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_59_9( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return String.init<A>(describing:)(a15, a1);
}

uint64_t OUTLINED_FUNCTION_60_11(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_61_6()
{
  return outlined init with copy of Any(v1, v0);
}

uint64_t OUTLINED_FUNCTION_62_6()
{
  return (*(uint64_t (**)(void, void))(v0 + 176))(*(void *)(v0 + 480), *(void *)(v0 + 488));
}

uint64_t OUTLINED_FUNCTION_63_8()
{
  return outlined destroy of SpeakableString?(v0, v1);
}

double OUTLINED_FUNCTION_67_9()
{
  double result = 0.0;
  v0[2] = 0u;
  v0[3] = 0u;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_69_7(uint64_t a1)
{
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v2);
  *(void *)(v1 + 464) = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_70_6()
{
  return swift_task_alloc(*(unsigned int *)(v0 + 4));
}

void OUTLINED_FUNCTION_76_8(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_77_6()
{
  return v0 + 144;
}

uint64_t OUTLINED_FUNCTION_80_5()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_82_6()
{
  return *(void *)(v0 + 32);
}

void OUTLINED_FUNCTION_83_5(float a1)
{
  *uint64_t v1 = a1;
}

void OUTLINED_FUNCTION_84_6()
{
}

uint64_t OUTLINED_FUNCTION_88_5(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_89_5()
{
  return swift_task_alloc(*(unsigned int *)(v0 + 4));
}

uint64_t OUTLINED_FUNCTION_90_4(uint64_t a1)
{
  return outlined destroy of SpeakableString?(a1, v1);
}

uint64_t specialized Set.contains(_:)(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    OUTLINED_FUNCTION_12_20(*(void *)(a2 + 40), a2);
    uint64_t v5 = PhoneCallVerb.rawValue.getter(a1);
    String.hash(into:)(v8, v5, v6);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_11_17();
    OUTLINED_FUNCTION_78_7();
    if (((*(void *)(a2 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v2) & 1) != 0) {
      __asm { BR              X9 }
    }
  }

  return 0LL;
}

void specialized Set.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    OUTLINED_FUNCTION_12_20(*(void *)(a3 + 40), a2);
    String.hash(into:)(v21, a1, a2);
    Swift::Int v6 = OUTLINED_FUNCTION_11_17();
    uint64_t v7 = -1LL << *(_BYTE *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    OUTLINED_FUNCTION_36_4();
    if ((v9 & 1) != 0)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (uint64_t *)(v10 + 16 * v8);
      uint64_t v12 = v11[1];
      if ((*v11 != a1 || v12 != a2) && (OUTLINED_FUNCTION_53_10(*v11, v12) & 1) == 0)
      {
        uint64_t v14 = ~v7;
        uint64_t v15 = (v8 + 1) & v14;
        OUTLINED_FUNCTION_36_4();
        if ((v16 & 1) != 0)
        {
          do
          {
            uint64_t v17 = (uint64_t *)(v10 + 16 * v15);
            uint64_t v18 = v17[1];
            if (*v17 == a1 && v18 == a2) {
              break;
            }
            if ((OUTLINED_FUNCTION_53_10(*v17, v18) & 1) != 0) {
              break;
            }
            uint64_t v15 = (v15 + 1) & v14;
            OUTLINED_FUNCTION_36_4();
          }

          while ((v20 & 1) != 0);
        }
      }
    }
  }

uint64_t specialized Set.contains(_:)(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
  Swift::UInt v3 = a1 & 1;
  OUTLINED_FUNCTION_12_20(*(void *)(a2 + 40), a2);
  Hasher._combine(_:)(v3);
  Swift::Int v4 = OUTLINED_FUNCTION_11_17();
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (((((_DWORD)v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)) & 1) != 0)
  {
    char v9 = 1;
    return v9 & 1;
  }

  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v11) & 1) == 0)
  {
LABEL_9:
    char v9 = 0;
    return v9 & 1;
  }

  do
  {
    char v9 = ((_DWORD)v3 == 0) ^ *(_BYTE *)(v8 + v11);
    if ((v9 & 1) != 0) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }

  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v11) & 1) != 0);
  return v9 & 1;
}

void specialized Set.contains(_:)(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v15 = *(void *)(v5 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  if (a2[2])
  {
    uint64_t v9 = a2[5];
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SiriKitReliabilityCodes and conformance SiriKitReliabilityCodes,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriKitReliabilityCodes,  (uint64_t)&protocol conformance descriptor for SiriKitReliabilityCodes);
    dispatch thunk of Hashable._rawHashValue(seed:)(v9, v5, v10);
    OUTLINED_FUNCTION_78_7();
    if (((*(void *)((char *)a2 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> v2) & 1) != 0)
    {
      uint64_t v11 = *(void *)(v15 + 72);
      uint64_t v12 = *(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16);
      do
      {
        v12(v8, a2[6] + v11 * v2, v5);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SiriKitReliabilityCodes and conformance SiriKitReliabilityCodes,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriKitReliabilityCodes,  (uint64_t)&protocol conformance descriptor for SiriKitReliabilityCodes);
        char v13 = OUTLINED_FUNCTION_57_8(v8, a1);
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v8, v5);
        if ((v13 & 1) != 0) {
          break;
        }
        OUTLINED_FUNCTION_61_7();
      }

      while (((*(void *)((char *)a2 + v14 + 56) >> v2) & 1) != 0);
    }
  }

  OUTLINED_FUNCTION_7_5();
}

void specialized Set.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v3 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v31 = *(void *)(v3 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v28 = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)
                 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  char v13 = (char *)&v26 - v12;
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)(v35, *(void *)(a2 + 40));
    specialized Optional<A>.hash(into:)((uint64_t)v35);
    Swift::Int v14 = Hasher._finalize()();
    uint64_t v15 = -1LL << *(_BYTE *)(a2 + 32);
    unint64_t v16 = v14 & ~v15;
    uint64_t v29 = a2 + 56;
    if (((*(void *)(a2 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) != 0)
    {
      uint64_t v32 = ~v15;
      uint64_t v33 = *(void *)(v9 + 72);
      uint64_t v17 = v29;
      uint64_t v27 = v5;
      while (1)
      {
        OUTLINED_FUNCTION_49_10(*(void *)(a2 + 48) + v33 * v16, (uint64_t)v13);
        uint64_t v18 = v8 + *(int *)(v5 + 48);
        OUTLINED_FUNCTION_49_10((uint64_t)v13, v8);
        OUTLINED_FUNCTION_49_10(v34, v18);
        OUTLINED_FUNCTION_6_26(v8);
        if (v19) {
          break;
        }
        OUTLINED_FUNCTION_49_10(v8, (uint64_t)v11);
        OUTLINED_FUNCTION_6_26(v18);
        if (v19)
        {
          (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v3);
LABEL_12:
          outlined destroy of UUID?( v8,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
          OUTLINED_FUNCTION_47_7((uint64_t)v13);
          goto LABEL_14;
        }

        uint64_t v20 = v31;
        uint64_t v21 = (uint64_t)v11;
        uint64_t v22 = v28;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v28, v18, v3);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
        int v30 = OUTLINED_FUNCTION_57_8(v21, v22);
        uint64_t v23 = a2;
        uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        uint64_t v5 = v27;
        uint64_t v25 = v22;
        uint64_t v11 = (char *)v21;
        uint64_t v17 = v29;
        v24(v25, v3);
        v24((uint64_t)v11, v3);
        a2 = v23;
        OUTLINED_FUNCTION_47_7(v8);
        OUTLINED_FUNCTION_47_7((uint64_t)v13);
        if ((v30 & 1) != 0) {
          goto LABEL_15;
        }
LABEL_14:
        unint64_t v16 = (v16 + 1) & v32;
        if (((*(void *)(v17 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0) {
          goto LABEL_15;
        }
      }

      OUTLINED_FUNCTION_6_26(v18);
      if (v19)
      {
        OUTLINED_FUNCTION_40_0(v8);
        OUTLINED_FUNCTION_40_0((uint64_t)v13);
        goto LABEL_15;
      }

      goto LABEL_12;
    }
  }

uint64_t specialized Set.contains(_:)(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16)) {
    return 0LL;
  }
  OUTLINED_FUNCTION_12_20(*(void *)(a1 + 40), a2);
  Hasher._combine(_:)(0LL);
  unint64_t v3 = OUTLINED_FUNCTION_11_17() & ~(-1LL << *(_BYTE *)(a1 + 32));
  return (*(void *)(a1 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> v3) & 1LL;
}

uint64_t static CarPlayDirectInvocationFlowFactory.makeStartAudioCallDirectInvocationFlow(directAction:sharedGlobals:appFinder:)( uint64_t *a1, void *a2, void *a3)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *, uint64_t, uint64_t);
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  void *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  void v110[3];
  uint64_t v111;
  uint64_t v112;
  void v113[6];
  void v114[4];
  char v115;
  void *v116;
  void v117[4];
  char v118;
  void *v119;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v6);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8);
  OUTLINED_FUNCTION_124();
  v10(v117, v8, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void *, void *, uint64_t, uint64_t))(v7 + 8))( v113,  v4,  v5,  _swiftEmptyArrayStorage,  v117,  v6,  v7);
  OUTLINED_FUNCTION_4_1();
  __swift_destroy_boxed_opaque_existential_1(v117);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v113,  (uint64_t)v114,  &demangling cache variable for type metadata for AnnotatedApp?);
  uint64_t v11 = v114[0];
  if (v114[0])
  {
    uint64_t v12 = (void *)v114[1];
    char v13 = v114[2];
    Swift::Int v14 = v114[3];
    uint64_t v15 = v115;
    unint64_t v16 = v116;
  }

  else
  {
    type metadata accessor for App(0LL);
    OUTLINED_FUNCTION_124();
    uint64_t v11 = App.__allocating_init(appIdentifier:)(v4, v5);
    char v13 = 0LL;
    Swift::Int v14 = 0LL;
    uint64_t v15 = 2;
    unint64_t v16 = &_swiftEmptySetSingleton;
    uint64_t v12 = &_swiftEmptySetSingleton;
  }

  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 152))(v110, v17, v18);
  char v19 = v111;
  uint64_t v20 = v112;
  __swift_project_boxed_opaque_existential_1(v110, v111);
  v117[0] = v11;
  v117[1] = v12;
  v117[2] = v13;
  v117[3] = v14;
  uint64_t v118 = v15;
  uint64_t v119 = v16;
  uint64_t v21 = *(void (**)(void *, uint64_t, uint64_t))(v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  OUTLINED_FUNCTION_124();
  v21(v117, v19, v20);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_22();
  __swift_destroy_boxed_opaque_existential_1(v110);
  uint64_t v22 = objc_allocWithZone(&OBJC_CLASS___INStartCallIntent);
  swift_retain();
  OUTLINED_FUNCTION_124();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = [v22 init];
  uint64_t v24 = [v23 _className];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  uint64_t v27 = v26;

  specialized Set.contains(_:)(v25, v27, (uint64_t)v12);
  LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v28;
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v29 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_54_7();
    OUTLINED_FUNCTION_11((uint64_t)v12);
    OUTLINED_FUNCTION_11(v14);
    int v30 = OUTLINED_FUNCTION_11((uint64_t)v16);
    uint64_t v31 = (void *)Logger.logObject.getter(v30);
    uint64_t v33 = static os_log_type_t.debug.getter(v31, v32);
    if (OUTLINED_FUNCTION_45_12(v33))
    {
      OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v108 = OUTLINED_FUNCTION_7_0(32LL);
      v110[0] = v108;
      OUTLINED_FUNCTION_18_30(4.8149e-34);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v35 = OUTLINED_FUNCTION_42_11(v34);
      uint64_t v43 = OUTLINED_FUNCTION_81_6(v35, v36, v37, v38, v39, v40, v41, v42, v99, v102);
      OUTLINED_FUNCTION_12_41(v43, v44, v45, v46, v47, v48, v49, v50);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_7_4(v14);
      OUTLINED_FUNCTION_7_4((uint64_t)v12);
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_20_22( &dword_0,  v51,  v52,  "#CarPlayDirectActionFlowFactory Using INStartCallIntent, app: %s",  v53,  v54,  v55,  v56,  v100,  v103,  v105,  v106,  v107);
      OUTLINED_FUNCTION_17_0(v108);
      OUTLINED_FUNCTION_0_2(v108);
      OUTLINED_FUNCTION_0_2(12LL);
    }

    else
    {

      OUTLINED_FUNCTION_7_4((uint64_t)v16);
      OUTLINED_FUNCTION_7_4(v14);
      OUTLINED_FUNCTION_7_4((uint64_t)v12);
      OUTLINED_FUNCTION_0_3();
    }

    StartAudioCallDirectAction.startCallIntent.getter();
    int v86 = (void *)v85;
    uint64_t v87 = (uint64_t *)&demangling cache variable for type metadata for CarPlayDirectInvocationFlow<INStartCallIntent>;
    OUTLINED_FUNCTION_33_23( v85,  v88,  v89,  v90,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>,  (uint64_t)&demangling cache variable for type metadata for AnyIntentCarPlayDirectActionFlowStrategy<INStartCallIntent>,  (uint64_t (*)(uint64_t))specialized AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:),  (uint64_t)&demangling cache variable for type metadata for CarPlayDirectInvocationFlow<INStartCallIntent>,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>,  (uint64_t (*)(_BYTE *))specialized AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:));
    uint64_t v91 = OUTLINED_FUNCTION_55_7();
    uint64_t v92 = (unint64_t *)&lazy protocol witness table cache variable for type CarPlayDirectInvocationFlow<INStartCallIntent> and conformance CarPlayDirectInvocationFlow<A>;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    char v57 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v57, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_54_7();
    OUTLINED_FUNCTION_11((uint64_t)v12);
    OUTLINED_FUNCTION_11(v14);
    uint64_t v58 = OUTLINED_FUNCTION_11((uint64_t)v16);
    unint64_t v59 = (void *)Logger.logObject.getter(v58);
    unint64_t v61 = static os_log_type_t.debug.getter(v59, v60);
    if (OUTLINED_FUNCTION_45_12(v61))
    {
      OUTLINED_FUNCTION_7_0(12LL);
      os_log_type_t v109 = OUTLINED_FUNCTION_7_0(32LL);
      v110[0] = v109;
      OUTLINED_FUNCTION_18_30(4.8149e-34);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v63 = OUTLINED_FUNCTION_42_11(v62);
      uint64_t v71 = OUTLINED_FUNCTION_81_6(v63, v64, v65, v66, v67, v68, v69, v70, v99, v102);
      OUTLINED_FUNCTION_12_41(v71, v72, v73, v74, v75, v76, v77, v78);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_7_4(v14);
      OUTLINED_FUNCTION_7_4((uint64_t)v12);
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_20_22( &dword_0,  v79,  v80,  "#CarPlayDirectActionFlowFactory Using INStartAudioCallIntent, app: %s",  v81,  v82,  v83,  v84,  v101,  v104,  v105,  v106,  v107);
      OUTLINED_FUNCTION_17_0(v109);
      OUTLINED_FUNCTION_0_2(v109);
      OUTLINED_FUNCTION_0_2(12LL);
    }

    else
    {

      OUTLINED_FUNCTION_7_4((uint64_t)v16);
      OUTLINED_FUNCTION_7_4(v14);
      OUTLINED_FUNCTION_7_4((uint64_t)v12);
      OUTLINED_FUNCTION_0_3();
    }

    StartAudioCallDirectAction.startAudioCallIntent.getter();
    int v86 = (void *)v93;
    uint64_t v87 = (uint64_t *)&demangling cache variable for type metadata for CarPlayDirectInvocationFlow<INStartAudioCallIntent>;
    OUTLINED_FUNCTION_33_23( v93,  v94,  v95,  v96,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>,  (uint64_t)&demangling cache variable for type metadata for AnyIntentCarPlayDirectActionFlowStrategy<INStartAudioCallIntent>,  (uint64_t (*)(uint64_t))specialized AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:),  (uint64_t)&demangling cache variable for type metadata for CarPlayDirectInvocationFlow<INStartAudioCallIntent>,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>,  (uint64_t (*)(_BYTE *))specialized AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:));
    uint64_t v91 = OUTLINED_FUNCTION_55_7();
    uint64_t v92 = (unint64_t *)&lazy protocol witness table cache variable for type CarPlayDirectInvocationFlow<INStartAudioCallIntent> and conformance CarPlayDirectInvocationFlow<A>;
  }

  lazy protocol witness table accessor for type CarPlayDirectInvocationFlow<INStartAudioCallIntent> and conformance CarPlayDirectInvocationFlow<A>( v92,  v87);
  os_log_type_t v97 = Flow.eraseToAnyFlow()(v91);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16_3();

  return v97;
}

uint64_t static CarPlayDirectInvocationFlowFactory.makeStartCallDirectInvocationFlow(directAction:sharedGlobals:appFinder:)( uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  v8[0] = a1;
  v8[1] = a2;
  memset(&v8[2], 0, 24);
  __int128 v9 = xmmword_3201B0;
  __int128 v10 = xmmword_3201B0;
  swift_bridgeObjectRetain();
  uint64_t v6 = static CarPlayDirectInvocationFlowFactory.makeStartAudioCallDirectInvocationFlow(directAction:sharedGlobals:appFinder:)( v8,  a3,  a4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_69_8();
  OUTLINED_FUNCTION_69_8();
  return v6;
}

void specialized CarPlayDirectInvocationFlow.init(app:intent:strategy:aceServiceInvoker:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v5 = v4;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = OUTLINED_FUNCTION_15_1();
  uint64_t v11 = (os_log_s *)OUTLINED_FUNCTION_12_1(v10, (uint64_t)static Logger.siriPhone);
  os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    Swift::Int v14 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)Swift::Int v14 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v11, v13, "#Gatekeeper Initialized GatekeeperLegacyCallingIntentFlow", v14);
    OUTLINED_FUNCTION_0_2((uint64_t)v14);
  }

  v5[2] = a1;
  void v5[3] = a2;
  v5[4] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(v5 + 5));
  OUTLINED_FUNCTION_58();
}

uint64_t specialized static CarPlayDirectInvocationFlowFactory.makeCarPlayDirectInvocationFlow<A>(app:intent:directAction:sharedGlobals:)( uint64_t a1, void *a2, void *a3, void *a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t *a10, uint64_t (*a11)(_BYTE *))
{
  void (*v99)(__int128 *__return_ptr, uint64_t, uint64_t);
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  os_log_s *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t (*v116)(uint64_t);
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  void (*v128)(uint64_t, os_log_s *, uint64_t);
  uint64_t v129;
  uint64_t *v130;
  _BYTE v131[48];
  __int128 v132;
  uint64_t v133;
  char v134[8];
  uint64_t v125 = a7;
  uint64_t v130 = a6;
  uint64_t v126 = a3;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v17 = (char *)&v105 - v16;
  uint64_t v120 = OUTLINED_FUNCTION_4_3();
  uint64_t v119 = *(void *)(v120 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v121 = v18;
  os_log_type_t v127 = type metadata accessor for Input(0LL);
  uint64_t v129 = *(void *)(v127 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v110 = (os_log_s *)((char *)&v105 - v19);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLIntent?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v111 = v20;
  uint64_t v113 = type metadata accessor for NLIntent(0LL);
  os_log_type_t v109 = *(void *)(v113 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v108 = v21;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v22 = OUTLINED_FUNCTION_15_1();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  id v24 = a2;
  uint64_t v118 = v23;
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
  BOOL v28 = OUTLINED_FUNCTION_63(v27);
  uint64_t v123 = a4;
  uint64_t v117 = a5;
  uint64_t v116 = a8;
  uint64_t v124 = a9;
  uint64_t v115 = v17;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v30 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v133 = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v106 = v29 + 4;
    uint64_t v31 = a1;
    id v32 = [v24 typeName];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    unint64_t v35 = v34;

    a1 = v31;
    a4 = v123;
    *(void *)&id v132 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, &v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, (char *)&v132 + 8, v106);

    uint64_t v36 = v127;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_57_0( &dword_0,  v25,  (os_log_type_t)v23,  "#CarPlayDirectActionFlowFactory Building CarPlayDirectInvocationFlow: intentType=%s)",  v29);
    OUTLINED_FUNCTION_17_0(v30);
    OUTLINED_FUNCTION_0_2(v30);
    OUTLINED_FUNCTION_0_2((uint64_t)v29);
  }

  else
  {

    uint64_t v36 = v127;
  }

  outlined init with copy of SignalProviding((uint64_t)a4, (uint64_t)v134);
  uint64_t v133 = a1;
  uint64_t v37 = OUTLINED_FUNCTION_22_4();
  INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v37, 0LL);
  unint64_t v38 = v126[7];
  if (v38 >> 60 != 15)
  {
    uint64_t v39 = v126[6];
    OUTLINED_FUNCTION_75_6();
    OUTLINED_FUNCTION_75_6();
    uint64_t v40 = v111;
    NLIntent.init(protobufData:)(v39, v38);
    os_log_type_t v127 = (uint64_t)v24;
    uint64_t v126 = (void *)a1;
    uint64_t v69 = v113;
    __swift_storeEnumTagSinglePayload(v40, 0LL, 1LL, v113);
    uint64_t v70 = v40;
    uint64_t v71 = v109;
    uint64_t v72 = v108;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v108, v70, v69);
    uint64_t v73 = *(void (**)(void *, uint64_t, uint64_t))(v71 + 16);
    uint64_t v74 = (uint64_t)v121;
    v73(v121, v72, v69);
    OUTLINED_FUNCTION_79_5( v74,  enum case for Parse.NLv3IntentOnly(_:),  *(uint64_t (**)(uint64_t, uint64_t, void))(v119 + 104));
    uint64_t v75 = v110;
    Input.init(parse:)(v74);
    uint64_t v76 = v129;
    uint64_t v77 = *(void (**)(uint64_t, os_log_s *, uint64_t))(v129 + 16);
    v77(v107, v75, v36);
    OUTLINED_FUNCTION_63_9();
    os_log_type_t v78 = OUTLINED_FUNCTION_41();
    if (os_log_type_enabled(v75, v78))
    {
      uint64_t v79 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v80 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v128 = v77;
      uint64_t v81 = v36;
      uint64_t v82 = v80;
      *(void *)&id v132 = v80;
      *(_DWORD *)uint64_t v79 = 136315138;
      uint64_t v121 = v79 + 4;
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
      uint64_t v84 = dispatch thunk of CustomStringConvertible.description.getter(v81, v83);
      uint64_t v86 = OUTLINED_FUNCTION_82_7(v84, v85);
      uint64_t v87 = OUTLINED_FUNCTION_73_8(v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v87, v88, v121);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_44_14(*(uint64_t (**)(void))(v129 + 8));
      OUTLINED_FUNCTION_57_0( &dword_0,  v75,  v78,  "#CarPlayDirectActionFlowFactory Received directInvocation with NLv3 input: %s",  v79);
      OUTLINED_FUNCTION_17_0(v82);
      uint64_t v89 = v82;
      uint64_t v36 = v81;
      uint64_t v77 = v128;
      OUTLINED_FUNCTION_0_2(v89);
      OUTLINED_FUNCTION_0_2((uint64_t)v79);
    }

    else
    {
      OUTLINED_FUNCTION_44_14(*(uint64_t (**)(void))(v76 + 8));
    }

    uint64_t v90 = v117;
    uint64_t v91 = v116;
    uint64_t v92 = (uint64_t)v115;
    uint64_t v93 = v114;
    OUTLINED_FUNCTION_72_9((uint64_t)&v133, (uint64_t)v115);
    uint64_t v94 = v110;
    v77(v92 + *(int *)(v93 + 40), v110, v36);
    a1 = (uint64_t)v126;
    *(void *)(v92 + 48) = v126;
    uint64_t v95 = v122;
    outlined init with copy of TransformationResult?(v92, v122, v90);
    uint64_t v96 = OUTLINED_FUNCTION_30_17();
    OUTLINED_FUNCTION_29_20(v96);
    OUTLINED_FUNCTION_22_4();
    uint64_t v62 = v91(v95);
    OUTLINED_FUNCTION_74_8();
    OUTLINED_FUNCTION_40_0(v92);
    ((void (*)(os_log_s *, uint64_t))v129)(v94, v36);
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v113);
    a4 = v123;
    OUTLINED_FUNCTION_59_10();
LABEL_18:
    id v24 = (id)v127;
    goto LABEL_19;
  }

  uint64_t v41 = v126[8];
  if (v41)
  {
    os_log_type_t v127 = (uint64_t)v24;
    uint64_t v42 = (uint64_t)v121;
    *uint64_t v121 = v41;
    OUTLINED_FUNCTION_79_5( v42,  enum case for Parse.NLv4IntentOnly(_:),  *(uint64_t (**)(uint64_t, uint64_t, void))(v119 + 104));
    swift_unknownObjectRetain_n(v41, 2LL);
    uint64_t v43 = v128;
    Input.init(parse:)(v42);
    uint64_t v44 = v129;
    id v45 = *(void **)(v129 + 16);
    ((void (*)(uint64_t, void, uint64_t))v45)(v112, v43, v36);
    id v46 = (os_log_s *)OUTLINED_FUNCTION_63_9();
    os_log_type_t v48 = static os_log_type_t.debug.getter(v46, v47);
    unint64_t v38 = v48;
    if (os_log_type_enabled(v46, v48))
    {
      uint64_t v49 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v121 = v45;
      id v50 = (uint8_t *)v49;
      uint64_t v51 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v126 = (void *)a1;
      uint64_t v52 = v36;
      uint64_t v53 = v51;
      *(void *)&id v132 = v51;
      *(_DWORD *)id v50 = 136315138;
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter(v52, v54);
      uint64_t v57 = OUTLINED_FUNCTION_82_7(v55, v56);
      uint64_t v58 = OUTLINED_FUNCTION_73_8(v57);
      a4 = v123;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v58, v59, v50 + 4);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_44_14(*(uint64_t (**)(void))(v129 + 8));
      OUTLINED_FUNCTION_57_0( &dword_0,  v46,  (os_log_type_t)v38,  "#CarPlayDirectActionFlowFactory Received directInvocation with NLv4 input: %s",  v50);
      OUTLINED_FUNCTION_17_0(v53);
      a1 = (uint64_t)v126;
      OUTLINED_FUNCTION_0_2(v53);
      uint64_t v60 = (uint64_t)v50;
      id v45 = v121;
      OUTLINED_FUNCTION_0_2(v60);

      OUTLINED_FUNCTION_59_10();
    }

    else
    {
      OUTLINED_FUNCTION_44_14(*(uint64_t (**)(void))(v44 + 8));

      OUTLINED_FUNCTION_59_10();
      uint64_t v52 = v36;
    }

    uint64_t v63 = v114;
    uint64_t v64 = (uint64_t)v115;
    OUTLINED_FUNCTION_72_9((uint64_t)&v133, (uint64_t)v115);
    uint64_t v65 = v128;
    ((void (*)(uint64_t, void, uint64_t))v45)(v64 + *(int *)(v63 + 40), v128, v52);
    *(void *)(v64 + 48) = a1;
    uint64_t v66 = v122;
    char v67 = v117;
    outlined init with copy of TransformationResult?(v64, v122, v117);
    uint64_t v68 = OUTLINED_FUNCTION_30_17();
    OUTLINED_FUNCTION_29_20(v68);
    OUTLINED_FUNCTION_22_4();
    uint64_t v62 = v116(v66);
    swift_unknownObjectRelease(v41);
    outlined destroy of UUID?(v64, v67);
    ((void (*)(void (*)(uint64_t, os_log_s *, uint64_t), uint64_t))v129)(v65, v52);
    goto LABEL_18;
  }

  OUTLINED_FUNCTION_72_9((uint64_t)&v133, (uint64_t)&v132);
  outlined init with copy of TransformationResult?((uint64_t)&v132, (uint64_t)v131, a10);
  uint64_t v61 = OUTLINED_FUNCTION_30_17();
  OUTLINED_FUNCTION_29_20(v61);
  uint64_t v62 = a11(v131);
  OUTLINED_FUNCTION_40_0((uint64_t)&v132);
  OUTLINED_FUNCTION_59_10();
LABEL_19:
  uint64_t v97 = a4[3];
  uint64_t v98 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v97);
  uint64_t v99 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v98 + 32);
  uint64_t v100 = v24;
  OUTLINED_FUNCTION_22_4();
  v99(&v132, v97, v98);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)v38);
  swift_allocObject(v101, 80LL, 7LL);
  specialized CarPlayDirectInvocationFlow.init(app:intent:strategy:aceServiceInvoker:)(a1, (uint64_t)v100, v62, &v132);
  uint64_t v103 = v102;
  outlined destroy of UUID?((uint64_t)&v133, v130);
  return v103;
}

void *specialized AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(uint64_t a1)
{
  unint64_t v2 = v1;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v13,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  outlined init with copy of TransformationResult?( (uint64_t)&v13,  (uint64_t)v12,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyIntentCarPlayRCHFlowProvider<INStartAudioCallIntent>);
  swift_allocObject(v4, 48LL, 7LL);
  uint64_t v5 = specialized AnyIntentCarPlayRCHFlowProvider.init<A>(_:)((uint64_t)v12);
  outlined destroy of UUID?( (uint64_t)&v13,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  v2[2] = v5;
  v2[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  uint64_t v6 = swift_allocObject(&unk_3FE448, 64LL, 7LL);
  void v2[3] = v6;
  outlined init with copy of TransformationResult?( a1,  v6 + 16,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v13,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  uint64_t v7 = (_OWORD *)swift_allocObject(&unk_3FE470, 64LL, 7LL);
  __int128 v8 = v14;
  v7[1] = v13;
  __int128 v7[2] = v8;
  v7[3] = v15;
  v2[7] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
  _BYTE v2[8] = v7;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v13,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  __int128 v9 = (_OWORD *)swift_allocObject(&unk_3FE498, 64LL, 7LL);
  __int128 v10 = v14;
  v9[1] = v13;
  v9[2] = v10;
  v9[3] = v15;
  outlined destroy of UUID?( a1,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  v2[9] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
  v2[10] = v9;
  return v2;
}

{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  void *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[48];
  _BYTE v19[48];
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  outlined init with copy of TransformationResult?( a1,  (uint64_t)v19,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  outlined init with copy of TransformationResult?( (uint64_t)v19,  (uint64_t)v18,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  __int128 v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyIntentCarPlayRCHFlowProvider<INStartAudioCallIntent>);
  swift_allocObject(v8, 48LL, 7LL);
  __int128 v9 = specialized AnyIntentCarPlayRCHFlowProvider.init<A>(_:)((uint64_t)v18);
  outlined destroy of UUID?( (uint64_t)v19,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  v2[2] = v9;
  v2[6] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v2 + 3);
  outlined init with copy of TransformationResult?( a1,  (uint64_t)boxed_opaque_existential_1,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  outlined init with copy of TransformationResult?( a1,  (uint64_t)v7,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = (v11 + 16) & ~v11;
  __int128 v13 = v12 + v6;
  __int128 v14 = v11 | 7;
  __int128 v15 = swift_allocObject(&unk_3FE3A8, v13, v11 | 7);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v7,  v15 + v12,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  v2[7] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
  _BYTE v2[8] = v15;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)v7,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  uint64_t v16 = swift_allocObject(&unk_3FE3D0, v13, v14);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v7,  v16 + v12,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  outlined destroy of UUID?( a1,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
  v2[9] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
  v2[10] = v16;
  return v2;
}

{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  _BYTE v12[48];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unint64_t v2 = v1;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v13,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  outlined init with copy of TransformationResult?( (uint64_t)&v13,  (uint64_t)v12,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyIntentCarPlayRCHFlowProvider<INStartCallIntent>);
  swift_allocObject(v4, 48LL, 7LL);
  uint64_t v5 = specialized AnyIntentCarPlayRCHFlowProvider.init<A>(_:)((uint64_t)v12);
  outlined destroy of UUID?( (uint64_t)&v13,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  v2[2] = v5;
  v2[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  uint64_t v6 = swift_allocObject(&unk_3FE330, 64LL, 7LL);
  void v2[3] = v6;
  outlined init with copy of TransformationResult?( a1,  v6 + 16,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v13,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  uint64_t v7 = (_OWORD *)swift_allocObject(&unk_3FE358, 64LL, 7LL);
  __int128 v8 = v14;
  v7[1] = v13;
  __int128 v7[2] = v8;
  v7[3] = v15;
  v2[7] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
  _BYTE v2[8] = v7;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v13,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  __int128 v9 = (_OWORD *)swift_allocObject(&unk_3FE380, 64LL, 7LL);
  __int128 v10 = v14;
  v9[1] = v13;
  v9[2] = v10;
  v9[3] = v15;
  outlined destroy of UUID?( a1,  &demangling cache variable for type metadata for DefaultCarPlayDirectActionFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  v2[9] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
  v2[10] = v9;
  return v2;
}

{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  void *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[48];
  _BYTE v19[48];
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  outlined init with copy of TransformationResult?( a1,  (uint64_t)v19,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  outlined init with copy of TransformationResult?( (uint64_t)v19,  (uint64_t)v18,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  __int128 v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyIntentCarPlayRCHFlowProvider<INStartCallIntent>);
  swift_allocObject(v8, 48LL, 7LL);
  __int128 v9 = specialized AnyIntentCarPlayRCHFlowProvider.init<A>(_:)((uint64_t)v18);
  outlined destroy of UUID?( (uint64_t)v19,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  v2[2] = v9;
  v2[6] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v2 + 3);
  outlined init with copy of TransformationResult?( a1,  (uint64_t)boxed_opaque_existential_1,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  outlined init with copy of TransformationResult?( a1,  (uint64_t)v7,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = (v11 + 16) & ~v11;
  __int128 v13 = v12 + v6;
  __int128 v14 = v11 | 7;
  __int128 v15 = swift_allocObject(&unk_3FE290, v13, v11 | 7);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v7,  v15 + v12,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  v2[7] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
  _BYTE v2[8] = v15;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)v7,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  uint64_t v16 = swift_allocObject(&unk_3FE2B8, v13, v14);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v7,  v16 + v12,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  outlined destroy of UUID?( a1,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
  v2[9] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
  v2[10] = v16;
  return v2;
}

void specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a4);
  specialized CarPlayRCHFlowProvider.makeRCHFlow(input:)(a3 + *(int *)(v5 + 40));
  OUTLINED_FUNCTION_2();
}

uint64_t specialized OnDeviceCarPlayWithInputFlowStrategy.makeNLContextUpdate(app:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_43_9();
  OUTLINED_FUNCTION_15_2(v0);
  OUTLINED_FUNCTION_86_5();
  dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x6C6143656E6F6870LL,  0xED0000627265566CLL,  0LL,  0LL);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_67_10();
  OUTLINED_FUNCTION_87_6();
  OUTLINED_FUNCTION_85_4();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_21_23();
  OUTLINED_FUNCTION_66_7();
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_62_7();
  OUTLINED_FUNCTION_56_8();
  OUTLINED_FUNCTION_77_7();
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_34_0();
  type metadata accessor for NLContextUpdate(0LL);
  uint64_t v1 = OUTLINED_FUNCTION_58_8();
  return OUTLINED_FUNCTION_10_39(v1, v2, v3, v4);
}

uint64_t specialized DefaultCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)()
{
  if (App.isFirstParty()())
  {
    uint64_t v0 = type metadata accessor for MachineUtteranceBuilder(0LL);
    OUTLINED_FUNCTION_15_2(v0);
    OUTLINED_FUNCTION_86_5();
    OUTLINED_FUNCTION_2_41();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_67_10();
    OUTLINED_FUNCTION_87_6();
    uint64_t v1 = OUTLINED_FUNCTION_85_4();
    uint64_t v3 = v2;
    OUTLINED_FUNCTION_38_1();
    dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)(v1, v3, 0LL, 0LL);
    OUTLINED_FUNCTION_16_3();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_62_7();
    OUTLINED_FUNCTION_56_8();
    OUTLINED_FUNCTION_77_7();
    OUTLINED_FUNCTION_31_2();
  }

  else
  {
    App.appIdentifier.getter();
    uint64_t v4 = OUTLINED_FUNCTION_43_9();
    OUTLINED_FUNCTION_15_2(v4);
    OUTLINED_FUNCTION_86_5();
    OUTLINED_FUNCTION_2_41();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_67_10();
    OUTLINED_FUNCTION_87_6();
    OUTLINED_FUNCTION_85_4();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_21_23();
    OUTLINED_FUNCTION_66_7();
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_62_7();
    OUTLINED_FUNCTION_56_8();
    OUTLINED_FUNCTION_77_7();
    OUTLINED_FUNCTION_31_2();
    OUTLINED_FUNCTION_34_0();
  }

  type metadata accessor for NLContextUpdate(0LL);
  uint64_t v5 = OUTLINED_FUNCTION_58_8();
  return OUTLINED_FUNCTION_10_39(v5, v6, v7, v8);
}

void *specialized AnyIntentCarPlayRCHFlowProvider.init<A>(_:)(uint64_t a1)
{
  uint64_t v3 = (_OWORD *)swift_allocObject(&unk_3FE3F8, 64LL, 7LL);
  __int128 v4 = v9;
  v3[1] = v8;
  v3[2] = v4;
  v3[3] = v10;
  v1[2] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
  v1[3] = v3;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v8,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  uint64_t v5 = (_OWORD *)swift_allocObject(&unk_3FE420, 64LL, 7LL);
  __int128 v6 = v9;
  v5[1] = v8;
  v5[2] = v6;
  void v5[3] = v10;
  outlined destroy of UUID?( a1,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartAudioCallIntent>);
  v1[4] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
  v1[5] = v5;
  return v1;
}

{
  void *v1;
  _OWORD *v3;
  __int128 v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v8,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  uint64_t v3 = (_OWORD *)swift_allocObject(&unk_3FE2E0, 64LL, 7LL);
  __int128 v4 = v9;
  v3[1] = v8;
  v3[2] = v4;
  v3[3] = v10;
  v1[2] = partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
  v1[3] = v3;
  outlined init with copy of TransformationResult?( a1,  (uint64_t)&v8,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  uint64_t v5 = (_OWORD *)swift_allocObject(&unk_3FE308, 64LL, 7LL);
  __int128 v6 = v9;
  v5[1] = v8;
  v5[2] = v6;
  void v5[3] = v10;
  outlined destroy of UUID?( a1,  &demangling cache variable for type metadata for CarPlayRCHFlowProvider<INStartCallIntent>);
  v1[4] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:);
  v1[5] = v5;
  return v1;
}

void specialized CarPlayRCHFlowProvider.makeRCHFlow(input:)(uint64_t a1)
{
  uint64_t v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  __int128 v8 = (void *)(v1 + 8);
  static PhoneCallRequestSupportPolicy.getSiriKitIntent(input:sharedGlobals:app:intentTypeName:)();
  if (v9)
  {
    __int128 v10 = v9;
    static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
    if (v11)
    {
      uint64_t v12 = v11;
      swift_retain();
      dispatch thunk of AnyFlow.on(input:)(a1);
      swift_release(v12);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v13 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v13, (uint64_t)static Logger.siriPhone);
      os_log_type_t v14 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v14))
      {
        __int128 v15 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        _WORD *v15 = 0;
        OUTLINED_FUNCTION_2_2(&dword_0, v16, v17, "#CarPlayRCHFlowProvider makeRCHFlow(input): RCHFlow found");
        OUTLINED_FUNCTION_0_2((uint64_t)v15);
      }

      goto LABEL_14;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = OUTLINED_FUNCTION_15_1();
  uint64_t v19 = (os_log_s *)OUTLINED_FUNCTION_12_1(v18, (uint64_t)static Logger.siriPhone);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_63(v20))
  {
    uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v21 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v19, v3, "#CarPlayRCHFlowProvider makeRCHFlow(input): no RCHFlow found", v21);
    OUTLINED_FUNCTION_0_2((uint64_t)v21);
  }

  Input.parse.getter(v22);
  uint64_t v23 = OUTLINED_FUNCTION_4_3();
  __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v23);
  uint64_t v24 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v24);
  CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)((uint64_t)v8, v2);
  uint64_t v26 = v25;
  OUTLINED_FUNCTION_38_1();
  outlined destroy of UUID?(v2, &demangling cache variable for type metadata for Parse?);
  (*(void (**)(void))(*(void *)v26 + 112LL))();
  OUTLINED_FUNCTION_22();
  uint64_t v27 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  Flow.eraseToAnyFlow()(v27);
  OUTLINED_FUNCTION_16_3();
LABEL_14:
  OUTLINED_FUNCTION_58();
}

uint64_t specialized CarPlayRCHFlowProvider.makeRCHFlow(app:intent:)()
{
  __int128 v4 = (void *)(v3 - v2);
  uint64_t v5 = v0 + 8;
  static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
  if (v6)
  {
    uint64_t v7 = v6;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v8 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v8, (uint64_t)static Logger.siriPhone);
    os_log_type_t v9 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_10(v9))
    {
      __int128 v10 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *__int128 v10 = 0;
      OUTLINED_FUNCTION_2_2(&dword_0, v11, v12, "#CarPlayRCHFlowProvider makeRCHFlow(app, intent): RCHFlow found");
      OUTLINED_FUNCTION_0_2((uint64_t)v10);
    }
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v13 = OUTLINED_FUNCTION_15_1();
    os_log_type_t v14 = (os_log_s *)OUTLINED_FUNCTION_12_1(v13, (uint64_t)static Logger.siriPhone);
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v16 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v14,  v15,  "#CarPlayRCHFlowProvider: makeRCHFlow(app, intent): no RCHFlow found",  v16);
      OUTLINED_FUNCTION_0_2((uint64_t)v16);
    }

    uint64_t v17 = OUTLINED_FUNCTION_4_3();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1LL, 1LL, v17);
    uint64_t v18 = type metadata accessor for StartCallCATsSimple(0LL);
    static CATOption.defaultMode.getter(v18);
    CATWrapperSimple.__allocating_init(options:globals:)(v1, 0LL);
    static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v5, (uint64_t)v4);
    uint64_t v20 = v19;
    OUTLINED_FUNCTION_38_1();
    outlined destroy of UUID?((uint64_t)v4, &demangling cache variable for type metadata for Parse?);
    (*(void (**)(void))(*(void *)v20 + 112LL))();
    OUTLINED_FUNCTION_16_3();
    uint64_t v21 = type metadata accessor for SimpleOutputFlowAsync(0LL);
    uint64_t v7 = Flow.eraseToAnyFlow()(v21);
    OUTLINED_FUNCTION_22();
  }

  return v7;
}

void lazy protocol witness table accessor for type CarPlayDirectInvocationFlow<INStartAudioCallIntent> and conformance CarPlayDirectInvocationFlow<A>( unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for CarPlayDirectInvocationFlow<A>, v3), a1);
  }

  OUTLINED_FUNCTION_2();
}

ValueMetadata *type metadata accessor for CarPlayDirectInvocationFlowFactory()
{
  return &type metadata for CarPlayDirectInvocationFlowFactory;
}

uint64_t sub_100E18()
{
  return objectdestroyTm_6(&demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
}

void partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( uint64_t a1, uint64_t a2)
{
}

{
  partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( a1,  a2,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
}

uint64_t sub_100E30()
{
  return objectdestroyTm_6(&demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
}

uint64_t partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( uint64_t a1)
{
  return partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( a1,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartCallIntent>>);
}

{
  return partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( a1,  &demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
}

uint64_t sub_100E5C()
{
  return objectdestroyTm_6(&demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
}

void partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100EC0()
{
  return objectdestroyTm_6(&demangling cache variable for type metadata for OnDeviceCarPlayWithInputFlowStrategy<CarPlayRCHFlowProvider<INStartAudioCallIntent>>);
}

uint64_t objectdestroyTm_6(uint64_t *a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v1 + v4;
  swift_release(*(void *)(v1 + v4));
  __swift_destroy_boxed_opaque_existential_1((void *)(v7 + 8));
  swift_release(*(void *)(v7 + 48));
  uint64_t v8 = type metadata accessor for Input(0LL);
  OUTLINED_FUNCTION_2_0(v8);
  return swift_deallocObject(v1, v5, v6);
}

uint64_t partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( uint64_t a1, uint64_t *a2)
{
  return specialized OnDeviceCarPlayWithInputFlowStrategy.makeNLContextUpdate(app:)();
}

void partial apply for specialized implicit closure #2 in implicit closure #1 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)( uint64_t a1)
{
}

void partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayRCHFlowProvider.init<A>(_:)()
{
}

uint64_t partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)()
{
  return specialized DefaultCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)();
}

uint64_t OUTLINED_FUNCTION_2_41()
{
  return dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x6C6143656E6F6870LL,  0xED0000627265566CLL,  1819042147LL,  0xE400000000000000LL);
}

uint64_t OUTLINED_FUNCTION_10_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_12_41( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v10 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)va, va1, a5, v8);
}

uint64_t OUTLINED_FUNCTION_18_30(float a1)
{
  *uint64_t v1 = a1;
  return type metadata accessor for App(0LL);
}

void OUTLINED_FUNCTION_20_22( void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t *buf)
{
}

uint64_t OUTLINED_FUNCTION_29_20(uint64_t a1)
{
  return swift_allocObject(a1, 88LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_30_17()
{
  return __swift_instantiateConcreteTypeFromMangledName(*(uint64_t **)(v0 - 288));
}

uint64_t OUTLINED_FUNCTION_33_23( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t *a10, uint64_t (*a11)(_BYTE *))
{
  return specialized static CarPlayDirectInvocationFlowFactory.makeCarPlayDirectInvocationFlow<A>(app:intent:directAction:sharedGlobals:)( v11,  v13,  v14,  v12,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
}

uint64_t OUTLINED_FUNCTION_42_11(uint64_t a1)
{
  return dispatch thunk of CustomStringConvertible.description.getter(v1, a1);
}

uint64_t OUTLINED_FUNCTION_43_9()
{
  return type metadata accessor for MachineUtteranceBuilder(0LL);
}

uint64_t OUTLINED_FUNCTION_44_14@<X0>(uint64_t (*a1)(void)@<X8>)
{
  *(void *)(v1 - 2outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a1;
  return a1();
}

BOOL OUTLINED_FUNCTION_45_12(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_49_10(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_53_10(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

uint64_t OUTLINED_FUNCTION_54_7()
{
  return swift_retain_n(v0, 2LL);
}

uint64_t OUTLINED_FUNCTION_55_7()
{
  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_56_8()
{
  return dispatch thunk of MachineUtteranceBuilder.build()();
}

uint64_t OUTLINED_FUNCTION_58_8()
{
  return v0;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_62_7()
{
  return NLContextUpdate.init()();
}

uint64_t OUTLINED_FUNCTION_63_9()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_67_10()
{
  return type metadata accessor for AppOntologyNode(0LL);
}

uint64_t OUTLINED_FUNCTION_69_8()
{
  return outlined consume of Data?(0LL, 0xF000000000000000LL);
}

void OUTLINED_FUNCTION_72_9(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_73_8(uint64_t a1)
{
  *(void *)(v1 - 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return v1 - 232;
}

uint64_t OUTLINED_FUNCTION_74_8()
{
  return outlined consume of Data?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_75_6()
{
  return outlined copy of Data._Representation(v0, v1);
}

uint64_t OUTLINED_FUNCTION_77_7()
{
  return NLContextUpdate.nlInput.setter();
}

  ;
}

uint64_t OUTLINED_FUNCTION_81_6( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_82_7(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 184));
}

uint64_t OUTLINED_FUNCTION_85_4()
{
  return TerminalOntologyNode.name.getter();
}

uint64_t OUTLINED_FUNCTION_86_5()
{
  return MachineUtteranceBuilder.init()();
}

uint64_t OUTLINED_FUNCTION_87_6()
{
  return static AppOntologyNode.applicationIdNode.getter();
}

void static AnnounceVoicemailReadingState.makeInitialState(synchronousBurstIndex:voicemail:)( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v7 = swift_allocObject(v6, 40LL, 7LL);
  *(_OWORD *)(v7 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  uint64_t v16 = v7;
  specialized Array._endMutation()(v7, v8, v9, v10);
  uint64_t v11 = a1 + 1;
  if (__OFADD__(a1, 1LL))
  {
    __break(1u);
  }

  else if (v11 >= a1)
  {
    id v12 = [a2 identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v15 = v14;

    *(void *)a3 = 0LL;
    *(void *)(a3 + 8) = v16;
    *(void *)(a3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
    *(void *)(a3 + 24) = v11;
    *(void *)(a3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
    *(void *)(a3 + 40) = v15;
    *(_BYTE *)(a3 + 48) = 0;
    return;
  }

  __break(1u);
}

void AnnounceVoicemailReadingState.update(_:)( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)(v10);
  uint64_t v11 = v4[3];
  uint64_t v12 = v11 + a1;
  if (__OFADD__(v11, a1))
  {
    __break(1u);
    goto LABEL_8;
  }

  uint64_t v13 = v4[2];
  if (v12 < v13)
  {
LABEL_8:
    __break(1u);
    return;
  }

  void v4[3] = v12;
  if (a3)
  {
    uint64_t v14 = a3;
  }

  else
  {
    a2 = v4[4];
    uint64_t v15 = v4[5];
    swift_bridgeObjectRetain();
    uint64_t v14 = v15;
  }

  OUTLINED_FUNCTION_124();
  swift_bridgeObjectRelease();
  v5[4] = a2;
  v5[5] = v14;
  uint64_t v16 = v5[1];
  char v17 = *((_BYTE *)v5 + 48);
  *(void *)a4 = *v5;
  *(void *)(a4 + 8) = v16;
  *(void *)(a4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v13;
  *(void *)(a4 + 24) = v12;
  *(void *)(a4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(a4 + 40) = v14;
  *(_BYTE *)(a4 + 48) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

BOOL AnnounceVoicemailReadingState.allVoicemailsRead.getter()
{
  unint64_t v2 = v1[1];
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_7_48(v2);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v0);
    OUTLINED_FUNCTION_11_38(v4);
  }

  else
  {
    uint64_t v0 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL));
  }

  return v0 == *v1;
}

uint64_t AnnounceVoicemailReadingState.burstWindowIndex.getter()
{
  uint64_t v1 = v0[2];
  uint64_t result = v1 + *v0;
  if (__OFADD__(v1, *v0)) {
    __break(1u);
  }
  return result;
}

BOOL AnnounceVoicemailReadingState.isInitialNotificationInBurst.getter()
{
  uint64_t v1 = v0[2];
  BOOL v2 = __OFADD__(v1, *v0);
  uint64_t v3 = v1 + *v0;
  if (!v2) {
    return v3 == 0;
  }
  __break(1u);
  return result;
}

uint64_t AnnounceVoicemailReadingState.incrementVoicemailsRead(count:)@<X0>( uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)v2 + result;
  if (__OFADD__(*(void *)v2, result))
  {
    __break(1u);
  }

  else
  {
    *(void *)uint64_t v2 = v3;
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t v5 = *(void *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 40);
    char v7 = *(_BYTE *)(v2 + 48);
    *(void *)a2 = v3;
    *(void *)(a2 + 8) = v4;
    *(_OWORD *)(a2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(_OWORD *)(v2 + 16);
    *(void *)(a2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
    *(void *)(a2 + 40) = v6;
    *(_BYTE *)(a2 + 48) = v7;
    swift_bridgeObjectRetain();
    return OUTLINED_FUNCTION_6_43(v6);
  }

  return result;
}

BOOL AnnounceVoicemailReadingState.isLastNotificationInBurst.getter(unint64_t a1)
{
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = v4 - v3;
  if (__OFSUB__(v4, v3))
  {
    __break(1u);
    goto LABEL_6;
  }

  a1 = v2[1];
  if (a1 >> 62)
  {
LABEL_6:
    OUTLINED_FUNCTION_7_48(a1);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v1);
    OUTLINED_FUNCTION_11_38(v7);
    return v5 == v1;
  }

  uint64_t v1 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  return v5 == v1;
}

uint64_t AnnounceVoicemailReadingState.markHintAsRead()@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)(v1 + 48) = 1;
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(void *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = 1;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_6_43(v4);
}

uint64_t AnnounceVoicemailReadingState.IncomingNotificationsUpdate.totalNotificationCount.getter( uint64_t a1, uint64_t a2)
{
  return a2;
}

void *static AnnounceVoicemailReadingState.IncomingNotificationsUpdate.emptyInstance.getter()
{
  return &_swiftEmptyArrayStorage;
}

void AnnounceVoicemailReadingState.IncomingNotificationsUpdate.description.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7._object = (void *)0x8000000000349C40LL;
  v7._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v7);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v18 = a1;
    }
    else {
      uint64_t v18 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_124();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v18);
  }

  else
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_124();
  }

  if (!v8) {
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_12_42();
  if ((v8 & 0x8000000000000000LL) == 0)
  {
    uint64_t v19 = a3;
    uint64_t v20 = a4;
    uint64_t v9 = 0LL;
    do
    {
      if ((a1 & 0xC000000000000001LL) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, "identifier", v19, v20);
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      uint64_t v15 = v14;

      unint64_t v16 = _swiftEmptyArrayStorage[2];
      if (v16 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v9;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      char v17 = &_swiftEmptyArrayStorage[2 * v16];
      v17[4] = v13;
      void v17[5] = v15;
    }

    while (v8 != v9);
LABEL_12:
    OUTLINED_FUNCTION_4_1();
    v21._uint64_t countAndFlagsBits = Array.description.getter(_swiftEmptyArrayStorage, &type metadata for String);
    OUTLINED_FUNCTION_9_41(v21);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_8_36(0xD00000000000001ELL, (uint64_t)",\n    totalNotificationCount: ");
    v22._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    OUTLINED_FUNCTION_9_41(v22);
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_8_36(0xD00000000000001ALL, (uint64_t)",\n    lastNotificationId: ");
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_10_40();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15_31();
    OUTLINED_FUNCTION_23_13();
    return;
  }

  __break(1u);
}

void protocol witness for CustomStringConvertible.description.getter in conformance AnnounceVoicemailReadingState.IncomingNotificationsUpdate()
{
}

uint64_t AnnounceVoicemailReadingState.voicemails.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 8));
}

uint64_t AnnounceVoicemailReadingState.burstWindow.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t AnnounceVoicemailReadingState.lastNotificationId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain(*(void *)(v0 + 40));
  return v1;
}

uint64_t AnnounceVoicemailReadingState.didReadHint.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t AnnounceVoicemailReadingState.init(voicemailsRead:voicemails:burstWindow:lastNotificationId:didReadHint:)@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(a8 + 40) = a6;
  *(_BYTE *)(a8 + 48) = a7;
  return result;
}

void AnnounceVoicemailReadingState.description.getter()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(115LL);
  OUTLINED_FUNCTION_1_49(0xD000000000000016LL, (uint64_t)"{\n    voicemailsRead: ");
  uint64_t v24 = *v0;
  v25._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  OUTLINED_FUNCTION_2_42(v25);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_1_49(0xD000000000000011LL, (uint64_t)"\n    voicemails: ");
  uint64_t v2 = v0[1];
  uint64_t v24 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0) {
      uint64_t v13 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v13 = v2;
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (v3) {
      goto LABEL_3;
    }
LABEL_16:
    outlined release of Set<String>(&v24);
    goto LABEL_17;
  }

  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_16;
  }
LABEL_3:
  OUTLINED_FUNCTION_12_42();
  if (v3 < 0)
  {
    __break(1u);
    return;
  }

  uint64_t v23 = v1;
  uint64_t v4 = 0LL;
  do
  {
    if ((v2 & 0xC000000000000001LL) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4 + 32);
    }
    uint64_t v6 = v5;
    id v7 = [v5 identifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v10 = v9;

    unint64_t v11 = _swiftEmptyArrayStorage[2];
    if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    ++v4;
    _swiftEmptyArrayStorage[2] = v11 + 1;
    id v12 = &_swiftEmptyArrayStorage[2 * v11];
    v12[4] = v8;
    v12[5] = v10;
  }

  while (v3 != v4);
  outlined release of Set<String>(&v24);
  uint64_t v1 = v23;
LABEL_17:
  v26._uint64_t countAndFlagsBits = Array.description.getter(_swiftEmptyArrayStorage, &type metadata for String);
  OUTLINED_FUNCTION_2_42(v26);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_3_50((uint64_t)",\n    burstWindow: ");
  v27._uint64_t countAndFlagsBits = specialized Range.description.getter(v1[2], v1[3], v14, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_2_42(v27);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_1_49(0xD00000000000001ALL, (uint64_t)",\n    lastNotificationId: ");
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_10_40();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_50((uint64_t)",\n    didReadHint: ");
  if ((v1[6] & 1) != 0) {
    uint64_t v20 = 1702195828LL;
  }
  else {
    uint64_t v20 = 0x65736C6166LL;
  }
  if ((v1[6] & 1) != 0) {
    unint64_t v21 = 0xE400000000000000LL;
  }
  else {
    unint64_t v21 = 0xE500000000000000LL;
  }
  unint64_t v22 = v21;
  String.append(_:)(*(Swift::String *)&v20);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15_31();
  OUTLINED_FUNCTION_23_13();
}

uint64_t specialized Range.description.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  OUTLINED_FUNCTION_4_46((uint64_t)&v20, a2, a3, a4, a5, a6, a7, a8, 0LL);
  v8._uint64_t countAndFlagsBits = 3943982LL;
  v8._object = (void *)0xE300000000000000LL;
  String.append(_:)(v8);
  OUTLINED_FUNCTION_4_46((uint64_t)&v19, v9, v10, v11, v12, v13, v14, v15, v17);
  return v18;
}

uint64_t destroy for AnnounceVoicemailReadingState(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 40));
}

uint64_t initializeWithCopy for AnnounceVoicemailReadingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for AnnounceVoicemailReadingState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for AnnounceVoicemailReadingState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnnounceVoicemailReadingState(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailReadingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 49) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailReadingState()
{
  return &type metadata for AnnounceVoicemailReadingState;
}

uint64_t destroy for AnnounceVoicemailReadingState.IncomingNotificationsUpdate(void *a1)
{
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t initializeWithCopy for AnnounceVoicemailReadingState.IncomingNotificationsUpdate( uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  uint64_t v4 = a2[3];
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for AnnounceVoicemailReadingState.IncomingNotificationsUpdate( uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for AnnounceVoicemailReadingState.IncomingNotificationsUpdate( uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  uint64_t v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailReadingState.IncomingNotificationsUpdate()
{
  return &type metadata for AnnounceVoicemailReadingState.IncomingNotificationsUpdate;
}

void OUTLINED_FUNCTION_1_49(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (a2 - 32) | 0x8000000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_2_42(Swift::String a1)
{
}

void OUTLINED_FUNCTION_3_50(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  String.append(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_4_46( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return _print_unlocked<A, B>(_:_:)(a1, &a9, v9, v10, v11);
}

uint64_t OUTLINED_FUNCTION_6_43(uint64_t a1)
{
  return swift_bridgeObjectRetain(a1);
}

uint64_t OUTLINED_FUNCTION_7_48(uint64_t a1)
{
  return swift_bridgeObjectRetain(a1);
}

void OUTLINED_FUNCTION_8_36(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (a2 - 32) | 0x8000000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

void OUTLINED_FUNCTION_9_41(Swift::String a1)
{
}

void OUTLINED_FUNCTION_10_40()
{
  v2._uint64_t countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

void *OUTLINED_FUNCTION_11_38(uint64_t a1, ...)
{
  return outlined release of Set<String>((uint64_t *)va);
}

void OUTLINED_FUNCTION_12_42()
{
}

void OUTLINED_FUNCTION_15_31()
{
  v0._uint64_t countAndFlagsBits = 32010LL;
  v0._object = (void *)0xE200000000000000LL;
  String.append(_:)(v0);
}

void key path setter for CommunalDeviceExecutionFlow.state : CommunalDeviceExecutionFlow(uint64_t a1)
{
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of MainFlow(a1, (uint64_t)v3, v4);
  CommunalDeviceExecutionFlow.state.setter((uint64_t)v3);
}

void CommunalDeviceExecutionFlow.state.didset()
{
  uint64_t v1 = v0;
  type metadata accessor for CommunalDeviceExecutionFlow.State(0LL);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = swift_retain_n(v0, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v18 = v10;
    uint64_t v15 = v9 + 4;
    uint64_t v11 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_state;
    swift_beginAccess( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_state,  v17,  0LL,  0LL);
    outlined init with copy of MainFlow(v11, (uint64_t)v3, type metadata accessor for CommunalDeviceExecutionFlow.State);
    unint64_t v12 = CommunalDeviceExecutionFlow.State.description.getter();
    unint64_t v14 = v13;
    outlined destroy of MainFlow((uint64_t)v3, type metadata accessor for CommunalDeviceExecutionFlow.State);
    uint64_t v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17, v15);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v6, v8, "#CommunalDeviceExecutionFlow state => %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v0, 2LL);
  }

void CommunalDeviceExecutionFlow.state.getter()
{
  uint64_t v1 = swift_beginAccess( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_state,  v3,  0LL,  0LL);
  OUTLINED_FUNCTION_37_17(v1, v2, type metadata accessor for CommunalDeviceExecutionFlow.State);
}

uint64_t type metadata accessor for CommunalDeviceExecutionFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for CommunalDeviceExecutionFlow.State,  (uint64_t)&nominal type descriptor for CommunalDeviceExecutionFlow.State);
}

void CommunalDeviceExecutionFlow.state.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_state;
  swift_beginAccess( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_state,  v4,  33LL,  0LL);
  outlined assign with copy of CommunalDeviceExecutionFlow.State(a1, v3);
  swift_endAccess(v4);
  CommunalDeviceExecutionFlow.state.didset();
  outlined destroy of MainFlow(a1, type metadata accessor for CommunalDeviceExecutionFlow.State);
}

void CommunalDeviceExecutionFlow.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

uint64_t CommunalDeviceExecutionFlow.__allocating_init(parse:sharedGlobals:)(uint64_t a1, void *a2)
{
  uint64_t v5 = OUTLINED_FUNCTION_26_25();
  __chkstk_darwin();
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = OUTLINED_FUNCTION_4_3();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  swift_storeEnumTagMultiPayload(v7, v5, 0LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v13);
  uint64_t v10 = (*(uint64_t (**)(_BYTE *, _BYTE *))(v2 + 120))(v7, v13);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v10;
}

uint64_t CommunalDeviceExecutionFlow.__allocating_init(state:sharedGlobals:)(uint64_t a1, __int128 *a2)
{
  uint64_t v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  outlined init with take of CommunalDeviceExecutionFlow.State( a1,  v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_state);
  outlined init with take of AppSelectionSignalComponent( a2,  v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_sharedGlobals);
  return v5;
}

void CommunalDeviceExecutionFlow.init(state:sharedGlobals:)(uint64_t a1, __int128 *a2)
{
}

uint64_t outlined init with take of CommunalDeviceExecutionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommunalDeviceExecutionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t CommunalDeviceExecutionFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommunalDeviceExecutionFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type CommunalDeviceExecutionFlow and conformance CommunalDeviceExecutionFlow,  type metadata accessor for CommunalDeviceExecutionFlow,  (uint64_t)&protocol conformance descriptor for CommunalDeviceExecutionFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t type metadata accessor for CommunalDeviceExecutionFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for CommunalDeviceExecutionFlow,  (uint64_t)&nominal type descriptor for CommunalDeviceExecutionFlow);
}

uint64_t CommunalDeviceExecutionFlow.execute()(uint64_t a1)
{
  v2[60] = a1;
  v2[61] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  v2[62] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  v2[63] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for PhoneError(0LL);
  v2[64] = v5;
  v2[65] = OUTLINED_FUNCTION_8_30(*(void *)(v5 - 8));
  v2[66] = OUTLINED_FUNCTION_28();
  v2[67] = OUTLINED_FUNCTION_28();
  v2[68] = OUTLINED_FUNCTION_28();
  uint64_t v6 = type metadata accessor for IdentifiedUser(0LL);
  v2[69] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[70] = v7;
  v2[71] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = type metadata accessor for ExecuteResponse(0LL);
  v2[72] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[73] = v9;
  v2[74] = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = OUTLINED_FUNCTION_26_25();
  v2[75] = v10;
  v2[76] = OUTLINED_FUNCTION_8_30(*(void *)(v10 - 8));
  v2[77] = OUTLINED_FUNCTION_28();
  uint64_t v11 = OUTLINED_FUNCTION_4_3();
  v2[78] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v2[79] = v12;
  v2[80] = OUTLINED_FUNCTION_8_30(v12);
  v2[81] = OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CommunalDeviceExecutionFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 616);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void (**)(void))(**(void **)(v0 + 488) + 96LL);
  v3();
  if (swift_getEnumCaseMultiPayload(v1, v2) == 1)
  {
    uint64_t v102 = (void *)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 608);
    uint64_t v5 = *(uint64_t **)(v0 + 544);
    uint64_t v6 = *(void *)(v0 + 528);
    uint64_t v7 = *(void *)(v0 + 512);
    uint64_t v8 = *(void *)(v0 + 488);
    outlined destroy of MainFlow(*(void *)(v0 + 616), type metadata accessor for CommunalDeviceExecutionFlow.State);
    *(void *)(v0 + 4outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v8;
    uint64_t v9 = type metadata accessor for CommunalDeviceExecutionFlow(0LL);
    swift_retain();
    uint64_t v10 = String.init<A>(describing:)(v0 + 416, v9);
    uint64_t v12 = v11;
    v3();
    unint64_t v13 = CommunalDeviceExecutionFlow.State.description.getter();
    uint64_t v15 = v14;
    outlined destroy of MainFlow(v4, type metadata accessor for CommunalDeviceExecutionFlow.State);
    *uint64_t v5 = v10;
    v5[1] = v12;
    v5[2] = v13;
    void v5[3] = (uint64_t)v15;
    swift_storeEnumTagMultiPayload(v5, v7, 7LL);
    PhoneError.logged()(v6);
    outlined destroy of MainFlow((uint64_t)v5, type metadata accessor for PhoneError);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v16 = OUTLINED_FUNCTION_15_1();
    uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_37_17(v17, v18, type metadata accessor for PhoneError);
    uint64_t v19 = (os_log_s *)v17;
    Logger.logObject.getter(v20);
    os_log_type_t v21 = OUTLINED_FUNCTION_30_18();
    BOOL v22 = OUTLINED_FUNCTION_93(v21);
    uint64_t v23 = *(void *)(v0 + 520);
    if (v22)
    {
      uint64_t v101 = v0 + 448;
      uint64_t v24 = *(void *)(v0 + 512);
      Swift::String v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      Swift::String v26 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)Swift::String v25 = 138412290;
      uint64_t v3 = (void (*)(void))(v25 + 12);
      uint64_t v10 = (uint64_t)(v25 + 4);
      uint64_t v15 = type metadata accessor for PhoneError;
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
      uint64_t v28 = swift_allocError(v24, v27, 0LL, 0LL);
      outlined init with copy of MainFlow(v23, v29, type metadata accessor for PhoneError);
      uint64_t v30 = _swift_stdlib_bridgeErrorToNSError(v28);
      *(void *)(v0 + 448) = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 448, v0 + 456, v25 + 4);
      *Swift::String v26 = v30;
      outlined destroy of MainFlow(v23, type metadata accessor for PhoneError);
      _os_log_impl(&dword_0, v19, (os_log_type_t)v4, "#CommunalDeviceExecutionFlow %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy(v26, 1LL);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
      OUTLINED_FUNCTION_0_2((uint64_t)v25);
    }

    else
    {
      outlined destroy of MainFlow(*(void *)(v0 + 520), type metadata accessor for PhoneError);
    }

    uint64_t v45 = v0 + 464;
    uint64_t v46 = *(void *)(v0 + 528);
    uint64_t v47 = *(void *)(v0 + 504);
    uint64_t v43 = *(void *)(v0 + 480);
    uint64_t v48 = *(void *)(v0 + 488);

    uint64_t v49 = (_BYTE *)(v48 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_sharedGlobals);
    uint64_t v50 = OUTLINED_FUNCTION_68_0();
    static CATOption.defaultMode.getter(v50);
    uint64_t v51 = CATWrapperSimple.__allocating_init(options:globals:)(v47, 0LL);
    static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)();
    uint64_t v33 = v52;
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_12_43();
    OUTLINED_FUNCTION_3_49();
    *(void *)(v0 + 464) = v51;
    OUTLINED_FUNCTION_25_29();
    static ExecuteResponse.complete<A>(next:)(v102);
    OUTLINED_FUNCTION_38_1();
    outlined destroy of MainFlow(v46, type metadata accessor for PhoneError);
    goto LABEL_33;
  }

  uint64_t v31 = *(void *)(v0 + 488);
  (*(void (**)(void, void, void))(*(void *)(v0 + 632) + 32LL))( *(void *)(v0 + 648),  *(void *)(v0 + 616),  *(void *)(v0 + 624));
  uint64_t v32 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_sharedGlobals;
  *(void *)(v0 + 6outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_sharedGlobals;
  uint64_t v33 = v31 + v32;
  __swift_project_boxed_opaque_existential_1((void *)(v31 + v32), *(void *)(v31 + v32 + 24));
  uint64_t v34 = OUTLINED_FUNCTION_95_3();
  uint64_t v36 = (os_log_s *)v35(v34);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v37 = *(void *)(v0 + 648);
  *(void *)(v0 + 240) = &type metadata for CallStateProvider;
  *(void *)(v0 + 248) = &protocol witness table for CallStateProvider;
  uint64_t v38 = swift_allocObject(&unk_3FE5E8, 80LL, 7LL);
  *(void *)(v0 + 2outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v38;
  outlined init with copy of CallStateProvider((uint64_t)static CallStateProvider.instance, v38 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v36 + 184LL))(v37, v0 + 216);
  OUTLINED_FUNCTION_38_1();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 216));
  if (!*(void *)(v0 + 200))
  {
    uint64_t v46 = v0 + 440;
    outlined destroy of UUID?(v0 + 176, &demangling cache variable for type metadata for AnyPhoneNLIntent?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v53 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v53, (uint64_t)static Logger.siriPhone);
    os_log_type_t v54 = OUTLINED_FUNCTION_30_18();
    if (OUTLINED_FUNCTION_93(v54))
    {
      uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v55 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v36,  (os_log_type_t)(v0 - 80),  "#CommunalDeviceExecutionFlow Could not transform to PhoneCallNLIntent",  v55);
      OUTLINED_FUNCTION_0_2((uint64_t)v55);
    }

    uint64_t v43 = *(void *)(v0 + 648);
    uint64_t v10 = *(void *)(v0 + 632);
    uint64_t v49 = *(_BYTE **)(v0 + 624);
    uint64_t v3 = *(void (**)(void))(v0 + 496);
    uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 504);
    uint64_t v45 = *(void *)(v0 + 480);

    __swift_storeEnumTagSinglePayload((uint64_t)v3, 1LL, 1LL, (uint64_t)v49);
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_45_7();
    uint64_t v51 = OUTLINED_FUNCTION_35_18();
    static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v33, (uint64_t)v3);
    uint64_t v33 = v56;
    OUTLINED_FUNCTION_38_1();
    outlined destroy of UUID?((uint64_t)v3, &demangling cache variable for type metadata for Parse?);
    OUTLINED_FUNCTION_12_43();
    OUTLINED_FUNCTION_3_49();
    *(void *)(v0 + 440) = v51;
    OUTLINED_FUNCTION_25_29();
    static ExecuteResponse.complete<A>(next:)(v0 + 440);
    OUTLINED_FUNCTION_38_1();
    (*(void (**)(uint64_t, _BYTE *))(v10 + 8))(v43, v49);
    goto LABEL_33;
  }

  uint64_t v10 = v0 + 136;
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 176), v0 + 136);
  outlined init with copy of SharedGlobalsProviding(v0 + 136, v0 + 336);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPhoneNLIntent);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v39 = OUTLINED_FUNCTION_36_13();
  if (!OUTLINED_FUNCTION_29_21(v39, v40, v41, v42))
  {
    *(void *)(v0 + 48) = 0LL;
    *(_OWORD *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0u;
    *(_OWORD *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    outlined destroy of UUID?(v0 + 16, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined init with copy of SharedGlobalsProviding(v0 + 136, v0 + 376);
    uint64_t v57 = type metadata accessor for PhoneCallControlNLIntent();
    if (OUTLINED_FUNCTION_29_21(v0 + 424, v0 + 376, v58, v57))
    {
      swift_release(*(void *)(v0 + 424));
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v102 = (void *)(v0 + 136);
      uint64_t v59 = OUTLINED_FUNCTION_15_1();
      uint64_t v3 = (void (*)(void))OUTLINED_FUNCTION_12_1(v59, (uint64_t)static Logger.siriPhone);
      os_log_type_t v61 = static os_log_type_t.debug.getter(v3, v60);
      if (os_log_type_enabled((os_log_t)v3, v61))
      {
        uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v62 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v3,  v61,  "#CommunalDeviceExecutionFlow executing call control request locally",  v62);
        OUTLINED_FUNCTION_0_2((uint64_t)v62);
      }

      uint64_t v46 = *(void *)(v0 + 648);
      uint64_t v10 = *(void *)(v0 + 632);
      uint64_t v43 = *(void *)(v0 + 624);
      uint64_t v49 = *(_BYTE **)(v0 + 608);
      uint64_t v45 = *(void *)(v0 + 600);
      uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 592);

      *uint64_t v49 = 0;
      uint64_t v63 = OUTLINED_FUNCTION_95_3();
      OUTLINED_FUNCTION_21(v63, v64);
      CommunalDeviceExecutionFlow.state.setter((uint64_t)v49);
      static PhoneCallFlowFactory.makeMainFlow(parse:sharedGlobals:)();
      uint64_t v51 = v65;
      static ExecuteResponse.complete(next:)(v65);
      OUTLINED_FUNCTION_38_1();
      __swift_destroy_boxed_opaque_existential_1(v102);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v46, v43);
    }

    else
    {
      uint64_t v43 = v0 + 432;
      uint64_t v71 = *(void *)(v0 + 544);
      uint64_t v72 = *(uint64_t **)(v0 + 536);
      uint64_t v73 = *(void *)(v0 + 160);
      uint64_t v74 = OUTLINED_FUNCTION_42((void *)(v0 + 136));
      uint64_t DynamicType = swift_getDynamicType(v74, v73, 1LL);
      uint64_t v76 = *(void *)(v0 + 168);
      *uint64_t v72 = DynamicType;
      v72[1] = v76;
      uint64_t v77 = OUTLINED_FUNCTION_36_13();
      swift_storeEnumTagMultiPayload(v77, v78, 8LL);
      PhoneError.logged()(v71);
      uint64_t v79 = OUTLINED_FUNCTION_36_13();
      outlined destroy of MainFlow(v79, v80);
      outlined destroy of MainFlow(v71, type metadata accessor for PhoneError);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v81 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v81, (uint64_t)static Logger.siriPhone);
      os_log_type_t v82 = OUTLINED_FUNCTION_30_18();
      if (os_log_type_enabled((os_log_t)v72, v82))
      {
        uint64_t v83 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v83 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v72,  v82,  "#CommunalDeviceExecutionFlow Could not transform to PhoneCallNLIntent",  v83);
        OUTLINED_FUNCTION_0_2((uint64_t)v83);
      }

      uint64_t v49 = *(_BYTE **)(v0 + 648);
      uint64_t v3 = *(void (**)(void))(v0 + 632);
      uint64_t v45 = *(void *)(v0 + 624);
      uint64_t v46 = *(void *)(v0 + 592);
      uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 504);

      OUTLINED_FUNCTION_68_0();
      OUTLINED_FUNCTION_45_7();
      uint64_t v51 = OUTLINED_FUNCTION_35_18();
      static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)();
      uint64_t v33 = v84;
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_12_43();
      OUTLINED_FUNCTION_3_49();
      *(void *)(v0 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v51;
      OUTLINED_FUNCTION_25_29();
      static ExecuteResponse.complete<A>(next:)(v0 + 432);
      OUTLINED_FUNCTION_38_1();
      __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 136));
      uint64_t v85 = OUTLINED_FUNCTION_95_3();
      v87(v85, v86);
    }

    goto LABEL_32;
  }

  uint64_t v43 = v0 + 296;
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 16), v0 + 296);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), *(void *)(v0 + 320));
  OUTLINED_FUNCTION_34_17();
  Swift::Bool v44 = PhoneCallNLIntent.isEmergencyNumberCall()();
  outlined init with copy of SharedGlobalsProviding(v0 + 296, v0 + 256);
  if (v44)
  {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 256));
LABEL_26:
    uint64_t v3 = (void (*)(void))(v0 + 56);
    uint64_t v101 = v0 + 472;
    uint64_t v102 = (void *)(v0 + 136);
    uint64_t v49 = *(_BYTE **)(v0 + 648);
    uint64_t v10 = *(void *)(v0 + 640);
    uint64_t v46 = *(void *)(v0 + 632);
    uint64_t v45 = *(void *)(v0 + 624);
    char v67 = *(_BYTE **)(v0 + 608);
    uint64_t v68 = *(void *)(v0 + 600);
    *char v67 = 2;
    OUTLINED_FUNCTION_21((uint64_t)v67, v68);
    CommunalDeviceExecutionFlow.state.setter((uint64_t)v67);
    uint64_t v51 = type metadata accessor for CommunalDeviceEmergencyFlow(0LL);
    uint64_t v15 = type metadata accessor for CommunalDeviceEmergencyFlow;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v46 + 16))(v10, v49, v45);
    outlined init with copy of SharedGlobalsProviding(v33, v0 + 56);
    uint64_t v33 = CommunalDeviceEmergencyFlow.__allocating_init(parse:sharedGlobals:)(v10, v0 + 56);
    *(void *)(v0 + 47__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v33;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type CommunalDeviceEmergencyFlow and conformance CommunalDeviceEmergencyFlow,  type metadata accessor for CommunalDeviceEmergencyFlow,  (uint64_t)&protocol conformance descriptor for CommunalDeviceEmergencyFlow);
    static ExecuteResponse.complete<A>(next:)(v0 + 472);
    swift_release(v33);
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 136));
    uint64_t v69 = OUTLINED_FUNCTION_95_3();
    v70(v69);
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 296));
LABEL_32:
    OUTLINED_FUNCTION_13_39();
LABEL_33:
    OUTLINED_FUNCTION_0_45();
    swift_task_dealloc(v51);
    swift_task_dealloc(v33);
    swift_task_dealloc(v46);
    swift_task_dealloc(v43);
    swift_task_dealloc(v49);
    swift_task_dealloc(v45);
    swift_task_dealloc(v15);
    swift_task_dealloc(v3);
    swift_task_dealloc(v10);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
  }

  __swift_project_boxed_opaque_existential_1((void *)(v0 + 256), *(void *)(v0 + 280));
  OUTLINED_FUNCTION_34_17();
  Swift::Bool v66 = PhoneCallNLIntent.isEmergencyServicesCall()();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 256));
  if (v66) {
    goto LABEL_26;
  }
  uint64_t v89 = *(void *)(v0 + 568);
  uint64_t v90 = *(void *)(v0 + 560);
  uint64_t v91 = *(void *)(v0 + 552);
  uint64_t v92 = *(void *)(v0 + 320);
  uint64_t v93 = *(void *)(v0 + 328);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 296), v92);
  type metadata accessor for SiriEnvironment(0LL);
  static SiriEnvironment.default.getter();
  uint64_t v94 = SiriEnvironment.userIdentity.getter();
  uint64_t v95 = OUTLINED_FUNCTION_38_1();
  dispatch thunk of UserIdentityProvider.identifiedUser.getter(v95);
  uint64_t v96 = swift_release(v94);
  IdentifiedUser.personaId.getter(v96);
  *(void *)(v0 + 664) = v97;
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
  uint64_t v98 = (void *)swift_task_alloc(dword_4319EC);
  *(void *)(v0 + 67__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v98;
  *uint64_t v98 = v0;
  v98[1] = CommunalDeviceExecutionFlow.execute();
  return PhoneCallNLIntent.shouldBeExecutedLocally(sharedGlobals:personaId:)(v33, v99, v100, v92, v93);
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  if (*(_BYTE *)(v0 + 680) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 648);
    uint64_t v3 = *(void *)(v0 + 632);
    uint64_t v4 = *(void *)(v0 + 624);
    uint64_t v5 = *(_BYTE **)(v0 + 608);
    uint64_t v6 = *(void *)(v0 + 600);
    uint64_t v7 = *(void *)(v0 + 592);
    uint64_t v8 = *(void *)(v0 + 488) + *(void *)(v0 + 656);
    *uint64_t v5 = 0;
    OUTLINED_FUNCTION_21((uint64_t)v5, v6);
    CommunalDeviceExecutionFlow.state.setter((uint64_t)v5);
    static PhoneCallFlowFactory.makeMainFlow(parse:sharedGlobals:)();
    uint64_t v10 = v9;
    static ExecuteResponse.complete(next:)(v9);
    uint64_t v11 = v10;
  }

  else
  {
    uint64_t v5 = (_BYTE *)(v0 + 96);
    uint64_t v2 = *(void *)(v0 + 648);
    uint64_t v8 = *(void *)(v0 + 640);
    uint64_t v3 = *(void *)(v0 + 632);
    uint64_t v4 = *(void *)(v0 + 624);
    uint64_t v12 = *(_BYTE **)(v0 + 608);
    unint64_t v13 = *(void *)(v0 + 600);
    uint64_t v17 = *(void *)(v0 + 592);
    uint64_t v18 = v0 + 456;
    *uint64_t v12 = 1;
    OUTLINED_FUNCTION_21((uint64_t)v12, v13);
    CommunalDeviceExecutionFlow.state.setter((uint64_t)v12);
    uint64_t v10 = type metadata accessor for RedirectToCompanionFlow(0LL);
    uint64_t v1 = type metadata accessor for RedirectToCompanionFlow;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v8, v2, v4);
    unint64_t v14 = OUTLINED_FUNCTION_95_3();
    outlined init with copy of SharedGlobalsProviding(v14, v15);
    uint64_t v7 = RedirectToCompanionFlow.__allocating_init(parse:sharedGlobals:)(v8, (void *)(v0 + 96));
    *(void *)(v0 + 4outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v7;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type RedirectToCompanionFlow and conformance RedirectToCompanionFlow,  type metadata accessor for RedirectToCompanionFlow,  (uint64_t)&protocol conformance descriptor for RedirectToCompanionFlow);
    static ExecuteResponse.complete<A>(next:)(v0 + 456);
    uint64_t v11 = v7;
  }

  swift_release(v11);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 296));
  OUTLINED_FUNCTION_13_39();
  OUTLINED_FUNCTION_0_45();
  swift_task_dealloc(v10);
  swift_task_dealloc(v0 + 136);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v7);
  swift_task_dealloc(v5);
  swift_task_dealloc(v8);
  swift_task_dealloc(v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CommunalDeviceExecutionFlow.execute()(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 672LL);
  *(_BYTE *)(*(void *)v1 + 680LL) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallNLIntent.shouldBeExecutedLocally(sharedGlobals:personaId:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[14] = a5;
  v6[15] = v5;
  v6[12] = a1;
  v6[13] = a4;
  return swift_task_switch(PhoneCallNLIntent.shouldBeExecutedLocally(sharedGlobals:personaId:), 0LL, 0LL);
}

uint64_t PhoneCallNLIntent.shouldBeExecutedLocally(sharedGlobals:personaId:)()
{
  uint64_t v2 = *(os_log_s **)(v1 + 120);
  if (PhoneCallNLIntent.canBeExecutedLocally()(*(void *)(v1 + 104)))
  {
    uint64_t v0 = *(void *)(v1 + 112);
    uint64_t v3 = *(os_log_s **)(v1 + 120);
    OUTLINED_FUNCTION_42(*(void **)(v1 + 96));
    OUTLINED_FUNCTION_23_22();
    OUTLINED_FUNCTION_42((void *)(v1 + 16));
    OUTLINED_FUNCTION_23_22();
    uint64_t v4 = *(void *)(v1 + 80);
    uint64_t v5 = *(void *)(v1 + 88);
    OUTLINED_FUNCTION_42((void *)(v1 + 56));
    char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 56));
    __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 16));
    uint64_t v2 = v3;
    if (PhoneCallNLIntent.isHangUpCall()() && (v6 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v7 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v7, (uint64_t)static Logger.siriPhone);
      os_log_type_t v8 = OUTLINED_FUNCTION_6_0();
      if (!OUTLINED_FUNCTION_7(v8))
      {
        uint64_t v10 = 1LL;
        goto LABEL_20;
      }

      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v9 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v2,  (os_log_type_t)v0,  "#CommunalDeviceExecutionFlow HangUp request on an active call --> LOCAL",  v9);
      uint64_t v10 = 1LL;
      goto LABEL_17;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v14, (uint64_t)static Logger.siriPhone);
    os_log_type_t v15 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v15))
    {
      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v9 = 0;
      unint64_t v13 = "#CommunalDeviceExecutionFlow request should not be executed locally --> REMOTE";
      goto LABEL_16;
    }

unint64_t CommunalDeviceExecutionFlow.State.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_4_3();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  uint64_t v7 = &v18[-v6];
  OUTLINED_FUNCTION_26_25();
  __chkstk_darwin();
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  outlined init with copy of MainFlow(v1, (uint64_t)v9, v10);
  uint64_t v11 = OUTLINED_FUNCTION_36_13();
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    char v13 = *v9;
    OUTLINED_FUNCTION_19_21();
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xD000000000000014LL;
    unint64_t v21 = 0x8000000000349D20LL;
    char v19 = v13;
    v14._uint64_t countAndFlagsBits = String.init<A>(describing:)( &v19,  &type metadata for CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation);
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_24();
    return v20;
  }

  else
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v3 + 32))(v7, v9, v2);
    OUTLINED_FUNCTION_19_21();
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xD000000000000014LL;
    unint64_t v21 = 0x8000000000349D40LL;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v7, v2);
    v16._uint64_t countAndFlagsBits = String.init(describing:)((uint64_t)v5);
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_24();
    unint64_t v15 = v20;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v7, v2);
  }

  return v15;
}

uint64_t CommunalDeviceExecutionFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_sharedGlobals));
  return v0;
}

uint64_t CommunalDeviceExecutionFlow.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin27CommunalDeviceExecutionFlow_sharedGlobals));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.exitValue.getter in conformance CommunalDeviceExecutionFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for CommunalDeviceExecutionFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

BOOL PhoneCallNLIntent.canBeExecutedLocally()(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Swift::Bool v6 = PhoneCallNLIntent.isAnswerCall()();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  BOOL v7 = v6 || PhoneCallNLIntent.isHangUpCall()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  return v7;
}

uint64_t sub_103870()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 24));
  return swift_deallocObject(v0, 80LL, 7LL);
}

unint64_t lazy protocol witness table accessor for type CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation and conformance CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation()
{
  unint64_t result = lazy protocol witness table cache variable for type CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation and conformance CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation;
  if (!lazy protocol witness table cache variable for type CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation and conformance CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation,  &type metadata for CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation and conformance CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation);
  }

  return result;
}

void base witness table accessor for Flow in CommunalDeviceExecutionFlow()
{
}

void base witness table accessor for SiriEnvironmentLocating in CommunalDeviceExecutionFlow()
{
}

uint64_t sub_103934(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 96LL))();
}

uint64_t ObjC metadata update function for CommunalDeviceExecutionFlow()
{
  return type metadata accessor for CommunalDeviceExecutionFlow(0LL);
}

uint64_t type metadata completion function for CommunalDeviceExecutionFlow(uint64_t a1)
{
  uint64_t result = type metadata accessor for CommunalDeviceExecutionFlow.State(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CommunalDeviceExecutionFlow.State( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v8);
  }

  else if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(void *)(v5 + 64));
  }

  else
  {
    uint64_t v9 = type metadata accessor for Parse(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16LL))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 0LL);
  }

  return a1;
}

uint64_t destroy for CommunalDeviceExecutionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  if (!(_DWORD)result)
  {
    uint64_t v4 = type metadata accessor for Parse(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  }

  return result;
}

void *initializeWithCopy for CommunalDeviceExecutionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v6 = type metadata accessor for Parse(0LL);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0LL);
  }

  return a1;
}

void *assignWithCopy for CommunalDeviceExecutionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of MainFlow((uint64_t)a1, type metadata accessor for CommunalDeviceExecutionFlow.State);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }

    else
    {
      uint64_t v6 = type metadata accessor for Parse(0LL);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0LL);
    }
  }

  return a1;
}

void *initializeWithTake for CommunalDeviceExecutionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v6 = type metadata accessor for Parse(0LL);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0LL);
  }

  return a1;
}

void *assignWithTake for CommunalDeviceExecutionFlow.State(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of MainFlow((uint64_t)a1, type metadata accessor for CommunalDeviceExecutionFlow.State);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }

    else
    {
      uint64_t v6 = type metadata accessor for Parse(0LL);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0LL);
    }
  }

  return a1;
}

uint64_t type metadata completion function for CommunalDeviceExecutionFlow.State(uint64_t a1)
{
  uint64_t result = type metadata accessor for Parse(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_325B80;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 2LL, v4);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_103DDC + 4 * byte_3259E5[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_103E10 + 4 * asc_3259E0[v4]))();
}

uint64_t sub_103E10(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_103E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x103E20LL);
  }
  return result;
}

uint64_t sub_103E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x103E34LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_103E38(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_103E40(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation()
{
  return &type metadata for CommunalDeviceExecutionFlow.CommunalDeviceExecutionLocation;
}

uint64_t outlined assign with copy of CommunalDeviceExecutionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommunalDeviceExecutionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_45()
{
  return swift_task_dealloc(*(void *)(v0 + 648));
}

uint64_t OUTLINED_FUNCTION_12_43()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112LL))();
}

uint64_t OUTLINED_FUNCTION_13_39()
{
  return (*(uint64_t (**)(void, void, void))(v0[73] + 32LL))(v0[60], v0[74], v0[72]);
}

void OUTLINED_FUNCTION_19_21()
{
  *(void *)(v0 - 80) = 0LL;
  *(void *)(v0 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(23LL);
}

uint64_t OUTLINED_FUNCTION_23_22()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_26_25()
{
  return type metadata accessor for CommunalDeviceExecutionFlow.State(0LL);
}

uint64_t OUTLINED_FUNCTION_29_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(a1, a2, v4, a4, 6LL);
}

uint64_t OUTLINED_FUNCTION_30_18()
{
  return static os_log_type_t.fault.getter();
}

void OUTLINED_FUNCTION_33_24()
{
  v0._uint64_t countAndFlagsBits = 41LL;
  v0._object = (void *)0xE100000000000000LL;
  String.append(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_34_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_18()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_36_13()
{
  return v0;
}

void OUTLINED_FUNCTION_37_17(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
}

uint64_t specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  void (*v19)(void *__return_ptr, uint64_t, uint64_t);
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  _WORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void (*v39)(void *, void *);
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  os_log_type_t v58;
  _WORD *v59;
  const char *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  _WORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  os_log_type_t v97;
  _WORD *v98;
  uint64_t v100;
  os_log_type_t v101;
  _WORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(void, void);
  uint64_t v114;
  uint64_t v115;
  void v116[3];
  uint8_t *v117;
  uint8_t *v118;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_19_22();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  __int16 v14 = v13;
  uint64_t v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE8C8, 64LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v8;
  *(void *)(v15 + 24) = v10;
  uint64_t v110 = v10;
  uint64_t v111 = v12;
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(_BYTE *)(v15 + 40) = v14;
  *(_BYTE *)(v15 + 41) = HIBYTE(v14) & 1;
  id v112 = a2;
  *(void *)(v15 + 48) = a2;
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a3;
  uint64_t v16 = (uint64_t)(v4 + 10);
  uint64_t v17 = v4[13];
  uint64_t v18 = v4[14];
  __swift_project_boxed_opaque_existential_1(v4 + 10, v17);
  char v19 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 8);
  OUTLINED_FUNCTION_11_18(v8);
  OUTLINED_FUNCTION_11_18(a3);
  v19(v116, v17, v18);
  unint64_t v20 = v117;
  unint64_t v21 = OUTLINED_FUNCTION_46_11(v116);
  uint64_t v23 = dispatch thunk of DeviceState.isWatch.getter(v21, v22);
  OUTLINED_FUNCTION_41_16(v23, v24, v25, v26, v27, v28);
  if ((v23 & 1) == 0)
  {
    uint64_t v41 = __swift_project_boxed_opaque_existential_1(v4 + 10, v4[13]);
    OUTLINED_FUNCTION_22_21((uint64_t)v41, v42, v43, v44, v45, v46);
    uint64_t v47 = v117;
    uint64_t v48 = OUTLINED_FUNCTION_46_11(v116);
    uint64_t v50 = dispatch thunk of DeviceState.isMac.getter(v48, v49);
    LOBYTE(v51) = v50;
    OUTLINED_FUNCTION_41_16(v50, v52, v53, v54, v55, v56);
    if ((v51 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v57 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v57, (uint64_t)static Logger.siriPhone);
      uint64_t v58 = OUTLINED_FUNCTION_53_11();
      if (!OUTLINED_FUNCTION_10(v58)) {
        goto LABEL_24;
      }
      uint64_t v59 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v59);
      uint64_t v60 = "#IdiomSensitiveViewBuilder: Building views for Mac";
    }

    else
    {
      os_log_type_t v61 = __swift_project_boxed_opaque_existential_1(v4 + 10, v4[13]);
      OUTLINED_FUNCTION_22_21((uint64_t)v61, v62, v63, v64, v65, v66);
      char v67 = v117;
      uint64_t v68 = OUTLINED_FUNCTION_46_11(v116);
      uint64_t v51 = dispatch thunk of DeviceState.isCarPlay.getter(v68, v69);
      OUTLINED_FUNCTION_41_16(v51, v70, v71, v72, v73, v74);
      if ((v51 & 1) != 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v75 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v75, (uint64_t)static Logger.siriPhone);
        uint64_t v76 = OUTLINED_FUNCTION_53_11();
        if (OUTLINED_FUNCTION_10(v76))
        {
          uint64_t v77 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_47(v77);
          OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)(v4 + 10),  (os_log_type_t)v51,  "#IdiomSensitiveViewBuilder: Building views for CarPlay",  v67);
          OUTLINED_FUNCTION_0_2((uint64_t)v67);
        }

        OUTLINED_FUNCTION_42_12(v78, v79, v80, v81, v82, v83);
        uint64_t v38 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE918, 152LL);
        OUTLINED_FUNCTION_34_18( v38,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v109,  v110,  v111,  (uint64_t)v112,  a1,  v8,  v116[0]);
        uint64_t v39 = *(void (**)(void *, void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                      + *(void *)v51
                                                      + 128);
        OUTLINED_FUNCTION_29_3();
        uint64_t v40 = partial apply for closure #1 in CallCancelSlotConfirmationButtonsBuilder.makeViewsForCar(utteranceViews:_:);
        goto LABEL_30;
      }

      uint64_t v84 = __swift_project_boxed_opaque_existential_1(v4 + 10, v4[13]);
      OUTLINED_FUNCTION_22_21((uint64_t)v84, v85, v86, v87, v88, v89);
      uint64_t v16 = (uint64_t)v117;
      uint64_t v47 = v118;
      __swift_project_boxed_opaque_existential_1(v116, (uint64_t)v117);
      uint64_t v90 = OUTLINED_FUNCTION_57_9();
      OUTLINED_FUNCTION_37_18(v90, v91, v92, v93, v94, v95);
      if ((v16 & 1) == 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v100 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v100, (uint64_t)static Logger.siriPhone);
        uint64_t v101 = OUTLINED_FUNCTION_53_11();
        if (OUTLINED_FUNCTION_10(v101))
        {
          uint64_t v102 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_47(v102);
          OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v16,  (os_log_type_t)v51,  "#IdiomSensitiveViewBuilder: Building views for IOS",  v47);
          OUTLINED_FUNCTION_0_2((uint64_t)v47);
        }

        OUTLINED_FUNCTION_42_12(v103, v104, v105, v106, v107, v108);
        uint64_t v38 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE8F0, 152LL);
        OUTLINED_FUNCTION_34_18( v38,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v109,  v110,  v111,  (uint64_t)v112,  a1,  v8,  v116[0]);
        uint64_t v39 = *(void (**)(void *, void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                      + *(void *)v51
                                                      + 144);
        OUTLINED_FUNCTION_29_3();
        uint64_t v40 = partial apply for closure #1 in CallCancelSlotConfirmationButtonsBuilder.makeViewsForIOS(utteranceViews:_:);
        goto LABEL_30;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v96 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v96, (uint64_t)static Logger.siriPhone);
      uint64_t v97 = OUTLINED_FUNCTION_53_11();
      if (!OUTLINED_FUNCTION_10(v97))
      {
LABEL_24:

        closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( (uint64_t)_swiftEmptyArrayStorage,  0,  v8,  v110,  v111,  v14 & 0x1FF,  v112);
        swift_release(a3);
        OUTLINED_FUNCTION_31_2();
        return OUTLINED_FUNCTION_31_1(v8);
      }

      uint64_t v98 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v98);
      uint64_t v60 = "#IdiomSensitiveViewBuilder: Building views for AppleTV";
    }

    OUTLINED_FUNCTION_5(&dword_0, (os_log_s *)v16, (os_log_type_t)v51, v60, v47);
    OUTLINED_FUNCTION_0_2((uint64_t)v47);
    goto LABEL_24;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v29 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v29, (uint64_t)static Logger.siriPhone);
  uint64_t v30 = OUTLINED_FUNCTION_53_11();
  if (OUTLINED_FUNCTION_10(v30))
  {
    uint64_t v31 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v31);
    OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)(v4 + 10),  (os_log_type_t)v23,  "#IdiomSensitiveViewBuilder: Building views for Watch",  v20);
    OUTLINED_FUNCTION_0_2((uint64_t)v20);
  }

  OUTLINED_FUNCTION_42_12(v32, v33, v34, v35, v36, v37);
  uint64_t v38 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE940, 160LL);
  OUTLINED_FUNCTION_34_18( v38,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v109,  v110,  v111,  (uint64_t)v112,  a1,  v8,  v116[0]);
  v38[19] = v114;
  uint64_t v39 = *(void (**)(void *, void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                + *(void *)v23
                                                + 144);
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_124();
  uint64_t v40 = partial apply for closure #1 in CallCancelSlotConfirmationButtonsBuilder.makeViewsForWatch(utteranceViews:_:);
LABEL_30:
  v39(v40, v38);
  swift_release(a3);
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_31_1(v115);
  return OUTLINED_FUNCTION_22();
}

void specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v19)(void *__return_ptr, uint64_t, uint64_t);
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  _WORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void v89[3];
  uint8_t *v90;
  uint8_t *v91;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_19_22();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  __int16 v14 = v13;
  uint64_t v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE8A0, 64LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v8;
  *(void *)(v15 + 24) = v10;
  uint64_t v85 = v10;
  uint64_t v86 = v12;
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(_BYTE *)(v15 + 40) = v14;
  *(_BYTE *)(v15 + 41) = HIBYTE(v14) & 1;
  uint64_t v87 = a2;
  *(void *)(v15 + 48) = a2;
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a3;
  uint64_t v16 = v4[7];
  uint64_t v17 = v4[8];
  uint64_t v18 = (os_log_s *)__swift_project_boxed_opaque_existential_1(v4 + 4, v16);
  char v19 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8);
  OUTLINED_FUNCTION_11_18(v8);
  OUTLINED_FUNCTION_11_18(a3);
  v19(v89, v16, v17);
  unint64_t v20 = v90;
  unint64_t v21 = OUTLINED_FUNCTION_33_25(v89);
  OUTLINED_FUNCTION_9_42(v21, v22, v23, v24, v25);
  if ((v18 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    Swift::String v26 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v26, (uint64_t)static Logger.siriPhone);
    uint64_t v27 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_63(v27))
    {
      uint64_t v28 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v28);
      OUTLINED_FUNCTION_5( &dword_0,  v18,  (os_log_type_t)((_BYTE)v4 + 32),  "#IdiomSensitiveViewBuilder: Building views for Watch",  v20);
      OUTLINED_FUNCTION_0_2((uint64_t)v20);
    }

    uint64_t v36 = OUTLINED_FUNCTION_65_7( v29,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v30,  v31,  v32,  v33,  v34,  v35,  v84,  v85,  v12,  v87,  a1);
    EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(v36, v37, v38);
  }

  else
  {
    uint64_t v39 = __swift_project_boxed_opaque_existential_1(v4 + 4, v4[7]);
    OUTLINED_FUNCTION_7_49((uint64_t)v39, v40, v41, v42, v43);
    Swift::Bool v44 = OUTLINED_FUNCTION_32_20(v89);
    OUTLINED_FUNCTION_9_42(v44, v45, v46, v47, v48);
    uint64_t v49 = __swift_project_boxed_opaque_existential_1(v4 + 4, v4[7]);
    OUTLINED_FUNCTION_7_49((uint64_t)v49, v50, v51, v52, v53);
    os_log_type_t v54 = OUTLINED_FUNCTION_31_20(v89);
    OUTLINED_FUNCTION_9_42(v54, v55, v56, v57, v58);
    uint64_t v59 = __swift_project_boxed_opaque_existential_1(v4 + 4, v4[7]);
    OUTLINED_FUNCTION_7_49((uint64_t)v59, v60, v61, v62, v63);
    uint64_t v64 = v90;
    uint64_t v65 = v91;
    Swift::Bool v66 = OUTLINED_FUNCTION_79_3(v89);
    OUTLINED_FUNCTION_9_42(v66, v67, v68, v69, v70);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v71 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v71, (uint64_t)static Logger.siriPhone);
    uint64_t v72 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_63(v72))
    {
      uint64_t v73 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v73);
      OUTLINED_FUNCTION_5(&dword_0, v18, v64, "#IdiomSensitiveViewBuilder: Building views for IOS", v65);
      OUTLINED_FUNCTION_0_2((uint64_t)v65);
    }

    uint64_t v81 = OUTLINED_FUNCTION_65_7( v74,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v75,  v76,  v77,  v78,  v79,  v80,  v84,  v85,  v86,  v87,  a1);
    EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(v81, v82, v83);
  }

  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_31_1(v8);
  OUTLINED_FUNCTION_33_1();
}

void specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, void (*a2)(void, void))
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  _WORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void v48[3];
  uint64_t v49;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_19_22();
  uint64_t v6 = v5;
  uint64_t v45 = v7;
  uint64_t v46 = v8;
  __int16 v10 = v9;
  uint64_t v11 = *(void *)(v2 + 40);
  uint64_t v12 = *(void *)(v2 + 48);
  __int16 v13 = (os_log_s *)OUTLINED_FUNCTION_74_9();
  __int16 v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 8);
  OUTLINED_FUNCTION_29_3();
  swift_retain();
  v14(v48, v11, v12);
  uint64_t v15 = OUTLINED_FUNCTION_13_40();
  dispatch thunk of DeviceState.isWatch.getter(v15, v16);
  OUTLINED_FUNCTION_44_15();
  if ((v13 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v17, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_7(v18))
    {
      char v19 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v19);
      OUTLINED_FUNCTION_5( &dword_0,  v13,  (os_log_type_t)v11,  "#IdiomSensitiveViewBuilder: Building views for Watch",  (uint8_t *)v12);
      OUTLINED_FUNCTION_0_2(v12);
    }

    unint64_t v21 = SiriKitDisambiguationList.disambiguationItems.getter(v20);
    BOOL v22 = *(void *)(v3 + 40);
    uint64_t v23 = *(void *)(v3 + 48);
    OUTLINED_FUNCTION_74_9();
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 8))(v48, v22, v23);
    uint64_t v24 = v49;
    __swift_project_boxed_opaque_existential_1(v48, v49);
    Swift::String v25 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v24);
    Swift::String v26 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForWatch(disambiguationItems:textToSpeechIsEnabled:)( v21,  v25 & 1);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v48);
    OUTLINED_FUNCTION_64_7();
    OUTLINED_FUNCTION_29_22();
    OUTLINED_FUNCTION_73_9();
    OUTLINED_FUNCTION_71_6();
    OUTLINED_FUNCTION_18_31();
    dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(v26);
    uint64_t v27 = OUTLINED_FUNCTION_52();
    dispatch thunk of SiriKitAceViewBuilder.build()(v27);
    OUTLINED_FUNCTION_18_31();
    OUTLINED_FUNCTION_49_11(a1, 0, v6, v45, v46, v10 & 0x1FF, a2);
    OUTLINED_FUNCTION_31_1(v6);
  }

  else
  {
    OUTLINED_FUNCTION_12_44();
    uint64_t v28 = OUTLINED_FUNCTION_13_40();
    dispatch thunk of DeviceState.isMac.getter(v28, v29);
    OUTLINED_FUNCTION_44_15();
    OUTLINED_FUNCTION_12_44();
    uint64_t v30 = OUTLINED_FUNCTION_13_40();
    dispatch thunk of DeviceState.isCarPlay.getter(v30, v31);
    OUTLINED_FUNCTION_44_15();
    OUTLINED_FUNCTION_12_44();
    uint64_t v32 = OUTLINED_FUNCTION_13_40();
    dispatch thunk of DeviceState.isAppleTV.getter(v32, v33);
    OUTLINED_FUNCTION_44_15();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v34 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v34, (uint64_t)static Logger.siriPhone);
    unint64_t v35 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_7(v35))
    {
      uint64_t v36 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v36);
      OUTLINED_FUNCTION_5( &dword_0,  v13,  (os_log_type_t)v11,  "#IdiomSensitiveViewBuilder: Building views for IOS",  (uint8_t *)v12);
      OUTLINED_FUNCTION_0_2(v12);
    }

    uint64_t v40 = SiriKitDisambiguationList.rawItems.getter(v37, v38, v39);
    specialized _arrayConditionalCast<A, B>(_:)(v40);
    uint64_t v41 = OUTLINED_FUNCTION_34_0();
    SiriKitDisambiguationList.disambiguationItems.getter(v41);
    uint64_t v42 = __chkstk_darwin();
    uint64_t v43 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay11SiriKitFlow0fG18DisambiguationItemCGG_So10SAUIButtonCs5NeverOTg506_sSi11fg9Flow0aB18ij5CSo10k32CIgygo_Si6offset_AC7elementtAEs5L11OIegnrzr_TRSiAjNIgygo_Tf1cn_n( v42,  (uint64_t (*)(unint64_t, uint64_t))partial apply for closure #1 in ForeignEmergencyButtonsBuilder.makeViewsForIOS(utteranceViews:_:));
    OUTLINED_FUNCTION_62();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_64_7();
    OUTLINED_FUNCTION_29_22();
    OUTLINED_FUNCTION_73_9();
    OUTLINED_FUNCTION_71_6();
    OUTLINED_FUNCTION_18_31();
    dispatch thunk of SiriKitAceViewBuilder.withButtons(buttons:)(v43);
    OUTLINED_FUNCTION_52();
    Swift::Bool v44 = OUTLINED_FUNCTION_34_0();
    dispatch thunk of SiriKitAceViewBuilder.build()(v44);
    OUTLINED_FUNCTION_18_31();
    OUTLINED_FUNCTION_49_11(a1, 0, v6, v45, v46, v10 & 0x1FF, a2);
    OUTLINED_FUNCTION_31_1(v6);
  }

  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_7_5();
}

uint64_t specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v21)(void *__return_ptr, uint64_t, uint64_t);
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _WORD *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  _WORD *v38;
  void v40[3];
  uint8_t *v41;
  uint64_t v42;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_19_22();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  __int16 v15 = v14;
  uint64_t v16 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE968, 64LL);
  *(void *)(v16 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  *(void *)(v16 + 24) = v11;
  *(void *)(v16 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
  *(_BYTE *)(v16 + 40) = v15;
  *(_BYTE *)(v16 + 41) = HIBYTE(v15) & 1;
  *(void *)(v16 + 48) = a2;
  *(void *)(v16 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a3;
  uint64_t v17 = v4 + 176;
  uint64_t v18 = *((void *)v4 + 25);
  uint64_t v19 = *((void *)v4 + 26);
  unint64_t v20 = (os_log_s *)__swift_project_boxed_opaque_existential_1((void *)v4 + 22, v18);
  unint64_t v21 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 8);
  swift_retain();
  swift_retain();
  v21(v40, v18, v19);
  BOOL v22 = v41;
  uint64_t v23 = OUTLINED_FUNCTION_33_25(v40);
  OUTLINED_FUNCTION_45_13(v23);
  if ((v20 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v24 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v24, (uint64_t)static Logger.siriPhone);
    Swift::String v25 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_29_5(v25))
    {
      Swift::String v26 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_28_22(v26);
      OUTLINED_FUNCTION_5(&dword_0, v20, v22, "#IdiomSensitiveViewBuilder: Building views for Watch", v4 + 176);
      uint64_t v27 = 13LL;
LABEL_19:
      OUTLINED_FUNCTION_0_2((uint64_t)v17);
      goto LABEL_20;
    }

    uint64_t v27 = 13LL;
  }

  else
  {
    __swift_project_boxed_opaque_existential_1((void *)v4 + 22, *((void *)v4 + 25));
    OUTLINED_FUNCTION_8_37();
    uint64_t v28 = OUTLINED_FUNCTION_32_20(v40);
    OUTLINED_FUNCTION_45_13(v28);
    __swift_project_boxed_opaque_existential_1((void *)v4 + 22, *((void *)v4 + 25));
    OUTLINED_FUNCTION_8_37();
    uint64_t v29 = v41;
    uint64_t v30 = OUTLINED_FUNCTION_31_20(v40);
    OUTLINED_FUNCTION_45_13(v30);
    if ((v20 & 1) == 0)
    {
      __swift_project_boxed_opaque_existential_1((void *)v4 + 22, *((void *)v4 + 25));
      OUTLINED_FUNCTION_8_37();
      uint64_t v17 = v41;
      uint64_t v34 = v42;
      unint64_t v35 = OUTLINED_FUNCTION_79_3(v40);
      OUTLINED_FUNCTION_45_13(v35);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v36 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v36, (uint64_t)static Logger.siriPhone);
      uint64_t v37 = OUTLINED_FUNCTION_6_44();
      if (!OUTLINED_FUNCTION_29_5(v37))
      {
        uint64_t v27 = 17LL;
        goto LABEL_20;
      }

      uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_28_22(v38);
      OUTLINED_FUNCTION_5(&dword_0, v20, v34, "#IdiomSensitiveViewBuilder: Building views for IOS", v17);
      uint64_t v27 = 17LL;
      goto LABEL_19;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v31 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v31, (uint64_t)static Logger.siriPhone);
    uint64_t v32 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_29_5(v32))
    {
      uint64_t v33 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_28_22(v33);
      OUTLINED_FUNCTION_5(&dword_0, v20, v29, "#IdiomSensitiveViewBuilder: Building views for CarPlay", v4 + 176);
      uint64_t v27 = 16LL;
      goto LABEL_19;
    }

    uint64_t v27 = 16LL;
  }

void specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
}

{
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( a1,  a2,  a3,  (void (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void, void (*)(void, void), uint64_t))specialized DefaultDisambiguationBuilder.makeViewsForIOS(utteranceViews:_:));
}

uint64_t specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( unint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  void (*v20)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  _WORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  os_log_type_t v72;
  _WORD *v73;
  void *v74;
  uint64_t v75;
  __int128 v76;
  void (*v77)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(void, void);
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_19_22();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  int v15 = v14;
  uint64_t v16 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE850, 64LL);
  *(void *)(v16 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  *(void *)(v16 + 24) = v11;
  uint64_t v79 = v13;
  *(void *)(v16 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
  *(_BYTE *)(v16 + 40) = v15;
  HIDWORD(v78) = v15;
  *(_BYTE *)(v16 + 41) = BYTE1(v15) & 1;
  uint64_t v80 = a2;
  *(void *)(v16 + 48) = a2;
  *(void *)(v16 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a3;
  uint64_t v17 = v4[4];
  uint64_t v18 = v4[5];
  uint64_t v19 = (os_log_s *)__swift_project_boxed_opaque_existential_1(v4 + 1, v17);
  unint64_t v20 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 8);
  OUTLINED_FUNCTION_11_18(v9);
  OUTLINED_FUNCTION_11_18(a3);
  v20(&v81, v17, v18);
  unint64_t v21 = (uint8_t *)*((void *)&v82 + 1);
  BOOL v22 = OUTLINED_FUNCTION_33_25(&v81);
  OUTLINED_FUNCTION_9_42(v22, v23, v24, v25, v26);
  if ((v19 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v28 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_63(v28))
    {
      uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v29);
      OUTLINED_FUNCTION_5( &dword_0,  v19,  (os_log_type_t)((_BYTE)v4 + 8),  "#IdiomSensitiveViewBuilder: Building views for Watch",  v21);
      OUTLINED_FUNCTION_0_2((uint64_t)v21);
    }

    if (a1 >> 62)
    {
      OUTLINED_FUNCTION_21_24();
      OUTLINED_FUNCTION_76_4();
      uint64_t v69 = OUTLINED_FUNCTION_68_8();
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v62 = OUTLINED_FUNCTION_76_4();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v62);
      OUTLINED_FUNCTION_21_24();
      uint64_t v69 = a1;
    }

    OUTLINED_FUNCTION_50_14(v69, v63, v64, v65, v66, WORD2(v78) & 0x1FF, v67, v68, v78, v11, v79, v80, v9);
    OUTLINED_FUNCTION_16_3();
    OUTLINED_FUNCTION_31_2();
    OUTLINED_FUNCTION_31_1((uint64_t)v20);
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v30 = __swift_project_boxed_opaque_existential_1(v4 + 1, v4[4]);
    OUTLINED_FUNCTION_7_49((uint64_t)v30, v31, v32, v33, v34);
    unint64_t v35 = OUTLINED_FUNCTION_32_20(&v81);
    OUTLINED_FUNCTION_9_42(v35, v36, v37, v38, v39);
    uint64_t v40 = __swift_project_boxed_opaque_existential_1(v4 + 1, v4[4]);
    OUTLINED_FUNCTION_7_49((uint64_t)v40, v41, v42, v43, v44);
    uint64_t v45 = OUTLINED_FUNCTION_31_20(&v81);
    OUTLINED_FUNCTION_9_42(v45, v46, v47, v48, v49);
    uint64_t v50 = __swift_project_boxed_opaque_existential_1(v4 + 1, v4[4]);
    OUTLINED_FUNCTION_7_49((uint64_t)v50, v51, v52, v53, v54);
    uint64_t v55 = BYTE8(v82);
    uint64_t v56 = (uint8_t *)v83;
    uint64_t v57 = OUTLINED_FUNCTION_79_3(&v81);
    OUTLINED_FUNCTION_9_42(v57, v58, v59, v60, v61);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v71 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v71, (uint64_t)static Logger.siriPhone);
    uint64_t v72 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_63(v72))
    {
      uint64_t v73 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v73);
      OUTLINED_FUNCTION_5(&dword_0, v19, v55, "#IdiomSensitiveViewBuilder: Building views for IOS", v56);
      OUTLINED_FUNCTION_0_2((uint64_t)v56);
    }

    uint64_t v74 = (void *)*v4;
    outlined init with copy of FaceTimeSettingsBuilder(v4, (uint64_t)&v81);
    uint64_t v75 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE878, 96LL);
    uint64_t v76 = v82;
    *(_OWORD *)(v75 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v81;
    *(_OWORD *)(v75 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v76;
    *(_OWORD *)(v75 + 48) = v83;
    *(void *)(v75 + 64) = v84;
    *(void *)(v75 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
    *(void *)(v75 + 80) = partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:);
    *(void *)(v75 + 88) = v16;
    uint64_t v77 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                          + *v74
                                                                          + 120);
    OUTLINED_FUNCTION_76_4();
    OUTLINED_FUNCTION_29_3();
    v77(partial apply for closure #1 in FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:), v75);
    OUTLINED_FUNCTION_16_3();
    OUTLINED_FUNCTION_31_2();
    OUTLINED_FUNCTION_31_1(v9);
    return swift_release(v75);
  }

{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_s *v18;
  void (*v19)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  _WORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  os_log_type_t v81;
  _WORD *v82;
  uint64_t v83;
  uint64_t v84;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  os_log_type_t v100;
  _WORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  os_log_type_t v109;
  _WORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(void, void);
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_19_22();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  int v14 = v13;
  int v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE788, 64LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v8;
  *(void *)(v15 + 24) = v10;
  uint64_t v118 = v12;
  uint64_t v119 = v10;
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(_BYTE *)(v15 + 40) = v14;
  *(_BYTE *)(v15 + 41) = HIBYTE(v14) & 1;
  uint64_t v120 = a2;
  *(void *)(v15 + 48) = a2;
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a3;
  uint64_t v16 = v4[6];
  uint64_t v17 = v4[7];
  uint64_t v18 = (os_log_s *)__swift_project_boxed_opaque_existential_1(v4 + 3, v16);
  uint64_t v19 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v17 + 8);
  OUTLINED_FUNCTION_11_18(v8);
  OUTLINED_FUNCTION_11_18(a3);
  v19(&v123, v16, v17);
  unint64_t v20 = *((void *)&v124 + 1);
  unint64_t v21 = (void (*)(uint64_t (*)(uint64_t), uint64_t))v125;
  BOOL v22 = OUTLINED_FUNCTION_48_7(&v123);
  uint64_t v24 = dispatch thunk of DeviceState.isWatch.getter(v22, v23);
  OUTLINED_FUNCTION_37_18(v24, v25, v26, v27, v28, v29);
  if ((v20 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v30 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
    uint64_t v31 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_93(v31))
    {
      uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_63_10(v32);
      OUTLINED_FUNCTION_5( &dword_0,  v18,  (os_log_type_t)((_BYTE)v4 + 24),  "#IdiomSensitiveViewBuilder: Building views for Watch",  (uint8_t *)v20);
      OUTLINED_FUNCTION_0_2(v20);
    }

    OUTLINED_FUNCTION_26_26(v33, v34, v35, v36, v37, v38);
    uint64_t v39 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE828, 104LL);
    OUTLINED_FUNCTION_5_44( v39,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v117,  v118,  v119,  (uint64_t)v120,  a1,  v8,  v123,  v124,  v125,  v126);
    OUTLINED_FUNCTION_124();
    uint64_t v40 = partial apply for closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:);
LABEL_32:
    v21(v40, v39);
    swift_release(a3);
    OUTLINED_FUNCTION_31_2();
    OUTLINED_FUNCTION_31_1(v122);
    return OUTLINED_FUNCTION_22();
  }

  uint64_t v41 = __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
  OUTLINED_FUNCTION_24_20((uint64_t)v41, v42, v43, v44, v45, v46);
  uint64_t v47 = *((void *)&v124 + 1);
  unint64_t v21 = (void (*)(uint64_t (*)(uint64_t), uint64_t))v125;
  uint64_t v48 = OUTLINED_FUNCTION_48_7(&v123);
  uint64_t v50 = dispatch thunk of DeviceState.isMac.getter(v48, v49);
  OUTLINED_FUNCTION_37_18(v50, v51, v52, v53, v54, v55);
  if ((v47 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v56 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v56, (uint64_t)static Logger.siriPhone);
    uint64_t v57 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_93(v57))
    {
      uint64_t v58 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_63_10(v58);
      OUTLINED_FUNCTION_5( &dword_0,  v18,  (os_log_type_t)((_BYTE)v4 + 24),  "#IdiomSensitiveViewBuilder: Building views for Mac",  (uint8_t *)v47);
      OUTLINED_FUNCTION_0_2(v47);
    }

    OUTLINED_FUNCTION_26_26(v59, v60, v61, v62, v63, v64);
    uint64_t v39 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE800, 104LL);
    OUTLINED_FUNCTION_5_44( v39,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v117,  v118,  v119,  (uint64_t)v120,  a1,  v8,  v123,  v124,  v125,  v126);
    OUTLINED_FUNCTION_124();
    uint64_t v40 = (uint64_t (*)(uint64_t))closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)partial apply;
    goto LABEL_32;
  }

  uint64_t v65 = __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
  OUTLINED_FUNCTION_24_20((uint64_t)v65, v66, v67, v68, v69, v70);
  uint64_t v71 = *((void *)&v124 + 1);
  uint64_t v72 = OUTLINED_FUNCTION_48_7(&v123);
  uint64_t v74 = dispatch thunk of DeviceState.isCarPlay.getter(v72, v73);
  OUTLINED_FUNCTION_37_18(v74, v75, v76, v77, v78, v79);
  if ((v71 & 1) == 0)
  {
    uint64_t v86 = __swift_project_boxed_opaque_existential_1(v4 + 3, v4[6]);
    OUTLINED_FUNCTION_24_20((uint64_t)v86, v87, v88, v89, v90, v91);
    uint64_t v92 = *((void *)&v124 + 1);
    unint64_t v21 = (void (*)(uint64_t (*)(uint64_t), uint64_t))v125;
    __swift_project_boxed_opaque_existential_1(&v123, *((uint64_t *)&v124 + 1));
    uint64_t v93 = OUTLINED_FUNCTION_57_9();
    OUTLINED_FUNCTION_37_18(v93, v94, v95, v96, v97, v98);
    if ((v92 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v99 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v99, (uint64_t)static Logger.siriPhone);
      uint64_t v100 = OUTLINED_FUNCTION_6_44();
      if (OUTLINED_FUNCTION_93(v100))
      {
        uint64_t v101 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_63_10(v101);
        OUTLINED_FUNCTION_5( &dword_0,  v18,  (os_log_type_t)((_BYTE)v4 + 24),  "#IdiomSensitiveViewBuilder: Building views for AppleTV",  (uint8_t *)v92);
        OUTLINED_FUNCTION_0_2(v92);
      }

      OUTLINED_FUNCTION_26_26(v102, v103, v104, v105, v106, v107);
      uint64_t v39 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE7D8, 104LL);
      OUTLINED_FUNCTION_5_44( v39,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v117,  v118,  v119,  (uint64_t)v120,  a1,  v8,  v123,  v124,  v125,  v126);
      OUTLINED_FUNCTION_124();
      uint64_t v40 = partial apply for closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:);
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v108 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v108, (uint64_t)static Logger.siriPhone);
      os_log_type_t v109 = OUTLINED_FUNCTION_6_44();
      if (OUTLINED_FUNCTION_93(v109))
      {
        uint64_t v110 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_63_10(v110);
        OUTLINED_FUNCTION_5( &dword_0,  v18,  (os_log_type_t)((_BYTE)v4 + 24),  "#IdiomSensitiveViewBuilder: Building views for IOS",  (uint8_t *)v92);
        OUTLINED_FUNCTION_0_2(v92);
      }

      OUTLINED_FUNCTION_26_26(v111, v112, v113, v114, v115, v116);
      uint64_t v39 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FE7B0, 104LL);
      OUTLINED_FUNCTION_5_44( v39,  (uint64_t)partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v117,  v118,  v119,  (uint64_t)v120,  a1,  v8,  v123,  v124,  v125,  v126);
      OUTLINED_FUNCTION_124();
      uint64_t v40 = partial apply for closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:);
    }

    goto LABEL_32;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v80 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v80, (uint64_t)static Logger.siriPhone);
  uint64_t v81 = OUTLINED_FUNCTION_6_44();
  if (OUTLINED_FUNCTION_93(v81))
  {
    os_log_type_t v82 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_63_10(v82);
    OUTLINED_FUNCTION_5( &dword_0,  v18,  (os_log_type_t)((_BYTE)v4 + 24),  "#IdiomSensitiveViewBuilder: Building views for CarPlay",  (uint8_t *)v71);
    OUTLINED_FUNCTION_0_2(v71);
  }

  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_21_24();
    OUTLINED_FUNCTION_48_0();
    uint64_t v84 = OUTLINED_FUNCTION_72_10();
    OUTLINED_FUNCTION_34_0();
  }

  else
  {
    uint64_t v83 = OUTLINED_FUNCTION_48_0();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v83);
    OUTLINED_FUNCTION_21_24();
    uint64_t v84 = a1;
  }

  closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(v84, 0, v8, v119, v118, v14 & 0x1FF, v120);
  swift_release(a3);
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_31_1(v8);
  return OUTLINED_FUNCTION_34_0();
}

void specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, void (*a2)(void, void), uint64_t a3, void (*a4)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void, void (*)(void, void), uint64_t))
{
  void (*v18)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  _WORD *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  os_log_type_t v99;
  _WORD *v100;
  uint64_t v101;
  unint64_t v102;
  id v103;
  __int16 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108[3];
  uint8_t *v109;
  uint64_t v6 = v4;
  OUTLINED_FUNCTION_19_22();
  uint64_t v10 = v9;
  uint64_t v105 = v11;
  uint64_t v106 = v12;
  uint64_t v104 = v13;
  uint64_t v14 = v4[9];
  uint64_t v15 = v4[10];
  uint64_t v16 = v4 + 6;
  uint64_t v17 = (os_log_s *)__swift_project_boxed_opaque_existential_1(v4 + 6, v14);
  uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 8);
  swift_retain_n(v10, 3LL);
  swift_retain_n(a3, 3LL);
  v18(v108, v14, v15);
  uint64_t v19 = v109;
  unint64_t v20 = OUTLINED_FUNCTION_27_23(v108);
  BOOL v22 = dispatch thunk of DeviceState.isWatch.getter(v20, v21);
  OUTLINED_FUNCTION_9_42(v22, v23, v24, v25, v26);
  if ((v17 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v28 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_29_4(v28))
    {
      uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_60_0(v29);
      OUTLINED_FUNCTION_5(&dword_0, v17, (os_log_type_t)a4, "#IdiomSensitiveViewBuilder: Building views for Watch", v19);
      OUTLINED_FUNCTION_0_2((uint64_t)v19);
    }

    uint64_t v30 = OUTLINED_FUNCTION_70_7();
    uint64_t v31 = v6[9];
    uint64_t v32 = v6[10];
    __swift_project_boxed_opaque_existential_1(v16, v31);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 8))(v108, v31, v32);
    uint64_t v33 = (uint64_t)v109;
    __swift_project_boxed_opaque_existential_1(v108, (uint64_t)v109);
    uint64_t v34 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v33);
    unint64_t v35 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForWatch(disambiguationItems:textToSpeechIsEnabled:)( v30,  v34 & 1);
    OUTLINED_FUNCTION_4_1();
    __swift_destroy_boxed_opaque_existential_1(v108);
    uint64_t v36 = OUTLINED_FUNCTION_64_7();
    uint64_t v37 = __swift_project_boxed_opaque_existential_1(v16, v6[9]);
    uint64_t v42 = OUTLINED_FUNCTION_51_8((uint64_t)v37, v38, v39, v40, v41);
    OUTLINED_FUNCTION_69_9((uint64_t)v42, v43, v44, v45, v46);
    __swift_destroy_boxed_opaque_existential_1(v108);
    dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a1);
    OUTLINED_FUNCTION_18_31();
    dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(v35);
    uint64_t v59 = OUTLINED_FUNCTION_52();
    dispatch thunk of SiriKitAceViewBuilder.build()(v59);
    OUTLINED_FUNCTION_18_31();
    OUTLINED_FUNCTION_49_11(v36, 0, v10, v105, v106, v104 & 0x1FF, a2);
    OUTLINED_FUNCTION_31_1(v10);

LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }

  uint64_t v47 = __swift_project_boxed_opaque_existential_1(v16, v6[9]);
  OUTLINED_FUNCTION_23_23((uint64_t)v47, v48, v49, v50, v51);
  uint64_t v52 = OUTLINED_FUNCTION_27_23(v108);
  os_log_type_t v54 = dispatch thunk of DeviceState.isMac.getter(v52, v53);
  OUTLINED_FUNCTION_9_42(v54, v55, v56, v57, v58);
  uint64_t v60 = __swift_project_boxed_opaque_existential_1(v16, v6[9]);
  OUTLINED_FUNCTION_23_23((uint64_t)v60, v61, v62, v63, v64);
  uint64_t v65 = v109;
  Swift::Bool v66 = OUTLINED_FUNCTION_27_23(v108);
  uint64_t v68 = dispatch thunk of DeviceState.isCarPlay.getter(v66, v67);
  OUTLINED_FUNCTION_9_42(v68, v69, v70, v71, v72);
  if ((v17 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v73 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v73, (uint64_t)static Logger.siriPhone);
    uint64_t v74 = OUTLINED_FUNCTION_6_44();
    if (OUTLINED_FUNCTION_29_4(v74))
    {
      uint64_t v75 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_60_0(v75);
      OUTLINED_FUNCTION_5( &dword_0,  v17,  (os_log_type_t)a4,  "#IdiomSensitiveViewBuilder: Building views for CarPlay",  v65);
      OUTLINED_FUNCTION_0_2((uint64_t)v65);
    }

    OUTLINED_FUNCTION_70_7();
    uint64_t v76 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForCarPlay(disambiguationItems:deviceIsLocked:)();
    OUTLINED_FUNCTION_62();
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v78 = OUTLINED_FUNCTION_8_2(v77, 40LL);
    *(_OWORD *)(v78 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
    *(void *)(v78 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v76;
    v108[0] = v78;
    specialized Array._endMutation()(v78, v79, v80, v81);
    os_log_type_t v82 = v108[0];
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0) {
        uint64_t v101 = a1;
      }
      else {
        uint64_t v101 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v102 = OUTLINED_FUNCTION_21_24();
      uint64_t v103 = v76;
      OUTLINED_FUNCTION_36();
      _bridgeCocoaArray<A>(_:)(v101, v102);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v83 = v76;
      uint64_t v84 = OUTLINED_FUNCTION_36();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v84);
      OUTLINED_FUNCTION_21_24();
    }

    v108[0] = v82;
    specialized Array.append<A>(contentsOf:)();
    OUTLINED_FUNCTION_49_11(v108[0], 0, v10, v105, v106, v104 & 0x1FF, a2);
    OUTLINED_FUNCTION_31_1(v10);

    goto LABEL_8;
  }

  uint64_t v85 = __swift_project_boxed_opaque_existential_1(v16, v6[9]);
  OUTLINED_FUNCTION_23_23((uint64_t)v85, v86, v87, v88, v89);
  uint64_t v90 = v109;
  uint64_t v91 = OUTLINED_FUNCTION_27_23(v108);
  uint64_t v93 = dispatch thunk of DeviceState.isAppleTV.getter(v91, v92);
  OUTLINED_FUNCTION_9_42(v93, v94, v95, v96, v97);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v98 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v98, (uint64_t)static Logger.siriPhone);
  uint64_t v99 = OUTLINED_FUNCTION_6_44();
  if (os_log_type_enabled(v17, v99))
  {
    uint64_t v100 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_60_0(v100);
    OUTLINED_FUNCTION_5(&dword_0, v17, v99, "#IdiomSensitiveViewBuilder: Building views for IOS", v90);
    OUTLINED_FUNCTION_0_2((uint64_t)v90);
  }

  swift_retain();
  swift_retain();
  a4(a1, v6, v10, v105, v106, v104 & 0x1FF, a2, a3);
  OUTLINED_FUNCTION_31_1(v10);
LABEL_9:
  OUTLINED_FUNCTION_31_1(v10);
  swift_release_n(a3, 3LL);
  OUTLINED_FUNCTION_33_1();
}

uint64_t StartVideoCallAceViewProvider.__allocating_init(templatingService:sharedGlobals:)( uint64_t a1, void *a2)
{
  return StartVideoCallAceViewProvider.init(templatingService:sharedGlobals:)(a1, a2);
}

uint64_t StartVideoCallAceViewProvider.init(templatingService:sharedGlobals:)(uint64_t a1, void *a2)
{
  *(void *)(v2 + direct field offset for StartVideoCallAceViewProvider.templatingService) = a1;
  uint64_t v4 = outlined init with copy of SignalProviding( (uint64_t)a2,  v2 + direct field offset for StartVideoCallAceViewProvider.sharedGlobals);
  uint64_t v5 = DefaultAceViewProvider.init()(v4);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v5;
}

void StartVideoCallAceViewProvider.makeAceViewsForResolveNeedsDisambiguation(app:parameterName:intent:utteranceViews:disambiguationList:deviceIsLocked:_:)( uint64_t a1, uint64_t a2, void *a3, void *a4, unint64_t a5, uint64_t a6, char a7, void (*a8)(uint64_t, void), uint64_t a9)
{
  uint64_t v44 = a9;
  uint64_t v45 = a8;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_36();
  v19._uint64_t countAndFlagsBits = a2;
  v19._object = a3;
  if (PhoneCallSlotNames.init(rawValue:)(v19).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_contact)
  {
    uint64_t v43 = v9 + direct field offset for StartVideoCallAceViewProvider.sharedGlobals;
    uint64_t v20 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
    static CATOption.defaultMode.getter(v20);
    uint64_t v21 = CATWrapper.__allocating_init(options:globals:)(v18, 0LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    uint64_t v23 = (os_log_s *)OUTLINED_FUNCTION_12_1(v22, (uint64_t)static Logger.siriPhone);
    os_log_type_t v25 = static os_log_type_t.debug.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      Swift::String v26 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      unint64_t v42 = a5;
      uint64_t v27 = a1;
      uint64_t v28 = a4;
      uint64_t v29 = a6;
      char v30 = a7;
      uint64_t v31 = v21;
      uint64_t v32 = v26;
      *(_WORD *)Swift::String v26 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v23, v25, "#StartCallViewBuilders Providing DefaultDisambiguationBuilder", v26);
      uint64_t v33 = (uint64_t)v32;
      uint64_t v21 = v31;
      a7 = v30;
      a6 = v29;
      a4 = v28;
      a1 = v27;
      a5 = v42;
      OUTLINED_FUNCTION_0_2(v33);
    }

    outlined init with copy of SignalProviding(v43, (uint64_t)v48);
    v46[0] = a1;
    v46[1] = a4;
    v46[2] = a2;
    uint64_t v46[3] = a3;
    v46[4] = a6;
    char v47 = a7 & 1;
    uint64_t v48[5] = v21;
    OUTLINED_FUNCTION_36();
    swift_retain();
    id v34 = a4;
    swift_retain();
    specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( a5,  v45,  v44,  (void (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void, void (*)(void, void), uint64_t))specialized DefaultDisambiguationBuilder.makeViewsForIOS(utteranceViews:_:));
    outlined destroy of DefaultDisambiguationBuilder<INStartVideoCallIntent>((uint64_t)v46);
    OUTLINED_FUNCTION_7_5();
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = OUTLINED_FUNCTION_15_1();
    uint64_t v36 = (os_log_s *)OUTLINED_FUNCTION_12_1(v35, (uint64_t)static Logger.siriPhone);
    os_log_type_t v38 = static os_log_type_t.debug.getter(v36, v37);
    if (OUTLINED_FUNCTION_10(v38))
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v39 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v36,  (os_log_type_t)v9,  "Not disambiguating contacts - not building a disambiguation snippet",  v39);
      OUTLINED_FUNCTION_0_2((uint64_t)v39);
    }

    if (a5 >> 62)
    {
      OUTLINED_FUNCTION_21_24();
      OUTLINED_FUNCTION_48_0();
      uint64_t v41 = OUTLINED_FUNCTION_72_10();
      OUTLINED_FUNCTION_34_0();
    }

    else
    {
      uint64_t v40 = OUTLINED_FUNCTION_48_0();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v40);
      OUTLINED_FUNCTION_21_24();
      uint64_t v41 = a5;
    }

    v45(v41, 0LL);
    swift_bridgeObjectRelease();
  }

unint64_t type metadata accessor for SAAceView()
{
  unint64_t result = lazy cache variable for type metadata for SAAceView;
  if (!lazy cache variable for type metadata for SAAceView)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAAceView);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SAAceView);
  }

  return result;
}

void StartVideoCallAceViewProvider.init()(uint64_t a1, uint64_t a2)
{
}

uint64_t StartVideoCallAceViewProvider.__ivar_destroyer()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                             + direct field offset for StartVideoCallAceViewProvider.sharedGlobals));
}

uint64_t StartVideoCallAceViewProvider.deinit()
{
  uint64_t v0 = DefaultAceViewProvider.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartVideoCallAceViewProvider.templatingService));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartVideoCallAceViewProvider.sharedGlobals));
  return v0;
}

uint64_t StartVideoCallAceViewProvider.__deallocating_deinit()
{
  uint64_t v0 = StartVideoCallAceViewProvider.deinit();
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t outlined destroy of DefaultDisambiguationBuilder<INStartVideoCallIntent>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultDisambiguationBuilder<INStartVideoCallIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StartVideoCallAceViewProvider(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartVideoCallAceViewProvider;
  if (!type metadata singleton initialization cache for StartVideoCallAceViewProvider) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartVideoCallAceViewProvider);
  }
  return result;
}

uint64_t type metadata completion function for StartVideoCallAceViewProvider(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + class metadata base offset for StartVideoCallAceViewProvider);
}

uint64_t ObjC metadata update function for StartVideoCallAceViewProvider()
{
  return type metadata accessor for StartVideoCallAceViewProvider(0LL);
}

uint64_t outlined init with copy of ButtonBuilder(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t partial apply for closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1)
{
  return closure #1 in ButtonBuilder.makeViewsForIOS(utteranceViews:_:)( a1,  *(void (**)(uint64_t, void))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  v1 + 40);
}

uint64_t partial apply for closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)(uint64_t a1)
{
  return closure #1 in ButtonBuilder.makeViewsForTV(utteranceViews:_:)( a1,  *(void (**)(uint64_t, void))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  v1 + 40);
}

uint64_t objectdestroy_2Tm_0()
{
  return swift_deallocObject(v0, 104LL, 7LL);
}

uint64_t partial apply for closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1)
{
  return closure #1 in ButtonBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  *(void (**)(uint64_t, void))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  v1 + 40);
}

uint64_t outlined init with copy of FaceTimeSettingsBuilder(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1068D8()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t partial apply for closure #1 in FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1)
{
  return closure #1 in FaceTimeSettingsBuilder.makeViewsForIOS(utteranceViews:_:)( a1,  (void *)(v1 + 16),  *(void *)(v1 + 72),  *(void (**)(uint64_t, uint64_t))(v1 + 80),  (os_log_type_t)*(void *)(v1 + 88));
}

id partial apply for closure #1 in ForeignEmergencyButtonsBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, uint64_t a2)
{
  return closure #1 in ForeignEmergencyButtonsBuilder.makeViewsForIOS(utteranceViews:_:)( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24));
}

uint64_t objectdestroy_30Tm()
{
  swift_release(*(void *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 48));
  OUTLINED_FUNCTION_75_7();

  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 112));
  return swift_deallocObject(v0, 152LL, 7LL);
}

uint64_t sub_10698C()
{
  swift_release(*(void *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 48));
  OUTLINED_FUNCTION_75_7();

  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 112));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t objectdestroyTm_7()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

void partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  if (*(_BYTE *)(v2 + 41)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( a1,  v3,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  v4 | *(unsigned __int8 *)(v2 + 40),  *(void (**)(void, void))(v2 + 48));
}

uint64_t OUTLINED_FUNCTION_6_44()
{
  return static os_log_type_t.info.getter();
}

void *OUTLINED_FUNCTION_7_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 8))((uint64_t *)va, v5, v6);
}

uint64_t OUTLINED_FUNCTION_8_37()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_9_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_12_44()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_13_40()
{
  uint64_t v1 = *(void *)(v0 - 96);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_18_31()
{
  return swift_release(v0);
}

void OUTLINED_FUNCTION_19_22()
{
}

void *OUTLINED_FUNCTION_22_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 8))((uint64_t *)va, v6, v7);
}

void *OUTLINED_FUNCTION_23_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 8))((uint64_t *)va, v5, v6);
}

void *OUTLINED_FUNCTION_24_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 8))((uint64_t *)va, v6, v7);
}

uint64_t OUTLINED_FUNCTION_26_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return outlined init with copy of ButtonBuilder(v6, (uint64_t)va);
}

_WORD *OUTLINED_FUNCTION_28_22(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_22()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_31_20(void *a1)
{
  return dispatch thunk of DeviceState.isCarPlay.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_32_20(void *a1)
{
  return dispatch thunk of DeviceState.isMac.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_33_25(void *a1)
{
  return dispatch thunk of DeviceState.isWatch.getter(v1, v2);
}

void *OUTLINED_FUNCTION_34_18@<X0>( void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char __src)
{
  a1[2] = a2;
  a1[3] = v9;
  return memcpy(a1 + 4, &__src, 0x78uLL);
}

uint64_t OUTLINED_FUNCTION_37_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_41_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_42_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return outlined init with copy of CallCancelSlotConfirmationButtonsBuilder(v6, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_44_15()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_45_13(uint64_t a1, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_46_11(void *a1)
{
  return v1;
}

uint64_t OUTLINED_FUNCTION_48_7(void *a1)
{
  return v1;
}

void OUTLINED_FUNCTION_49_11( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void, void))
{
}

void OUTLINED_FUNCTION_50_14( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(void, void), uint64_t a13)
{
}

void *OUTLINED_FUNCTION_51_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 8))((uint64_t *)va, v5, v6);
}

uint64_t OUTLINED_FUNCTION_53_11()
{
  return static os_log_type_t.info.getter();
}

_WORD *OUTLINED_FUNCTION_63_10(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_68_8()
{
  return _bridgeCocoaArray<A>(_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_69_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(va);
}

uint64_t OUTLINED_FUNCTION_70_7()
{
  return SiriKitDisambiguationList.disambiguationItems.getter();
}

uint64_t OUTLINED_FUNCTION_71_6()
{
  return dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(v0);
}

uint64_t OUTLINED_FUNCTION_72_10()
{
  return _bridgeCocoaArray<A>(_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_73_9()
{
  return dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v0 - 120);
}

void *OUTLINED_FUNCTION_74_9()
{
  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_75_7()
{
  return swift_release(*(void *)(v0 + 88));
}

uint64_t StartCallFlow.__allocating_init(app:sharedGlobals:appFinder:)(uint64_t a1, void *a2, void *a3)
{
  return StartCallFlow.init(app:sharedGlobals:appFinder:)(a1, a2, a3);
}

uint64_t StartCallFlow.init(app:sharedGlobals:appFinder:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = v3 + direct field offset for StartCallFlow.flowName;
  strcpy((char *)(v3 + direct field offset for StartCallFlow.flowName), "StartCallFlow");
  *(_WORD *)(v7 + 14) = -4864;
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v10);
  uint64_t v8 = specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)( a1,  0x6C61437472617453LL,  0xED0000776F6C466CLL,  v10,  (uint64_t (*)(void))specialized PhoneFlow.init(sharedGlobals:));
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

uint64_t specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)( a1,  a2,  a3,  a4,  (uint64_t (*)(void))specialized PhoneFlow.init(sharedGlobals:));
}

{
  return specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)( a1,  a2,  a3,  a4,  (uint64_t (*)(void))specialized PhoneFlow.init(sharedGlobals:));
}

uint64_t specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void))
{
  *(void *)(v5 + *(void *)(*(void *)v5 + 288LL)) = a1;
  uint64_t v9 = (uint64_t *)(v5 + *(void *)(*(void *)v5 + 296LL));
  *uint64_t v9 = a2;
  v9[1] = a3;
  uint64_t v10 = one-time initialization token for siriPhone;
  swift_retain();
  swift_retain();
  if (v10 != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = swift_retain();
  __int16 v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    os_log_type_t v25 = a4;
    uint64_t v24 = a5;
    uint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    v27[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v19 = *v9;
    unint64_t v18 = v9[1];
    swift_bridgeObjectRetain();
    uint64_t v20 = v19;
    a4 = v25;
    uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v18, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v16 + 4);
    OUTLINED_FUNCTION_8_6();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v13, v15, "%s.initialize", v16, 0xCu);
    swift_arrayDestroy(v17, 1LL);
    OUTLINED_FUNCTION_0_2(v17);
    uint64_t v21 = (uint64_t)v16;
    a5 = v24;
    OUTLINED_FUNCTION_0_2(v21);
  }

  else
  {

    OUTLINED_FUNCTION_8_6();
  }

  outlined init with copy of SignalProviding((uint64_t)a4, (uint64_t)v27);
  uint64_t v22 = a5(v27);
  swift_release(a1);
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v22;
}

uint64_t StartCallFlow.makeRCHFlow(input:intent:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v15)(void *__return_ptr);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void v40[3];
  uint64_t v41;
  uint64_t v42;
  void v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v37 = *(void *)(v5 - 8);
  os_log_type_t v38 = v5;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  id v34 = v7 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  type metadata accessor for StartCallRCHFlowDelegate(0LL);
  os_log_type_t v15 = *(void (**)(void *__return_ptr))(*(void *)v3 + 152LL);
  v15(v43);
  swift_retain();
  char v30 = StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)(v43, a3);
  OUTLINED_FUNCTION_7_50();
  type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  OUTLINED_FUNCTION_55_0();
  uint64_t v16 = OUTLINED_FUNCTION_96();
  type metadata accessor for StartCallCATsSimple(0LL);
  OUTLINED_FUNCTION_55_0();
  uint64_t v17 = OUTLINED_FUNCTION_96();
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  swift_allocObject(v31, 80LL, 7LL);
  unint64_t v18 = specialized CallingIntentRCHFlowStrategy.init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)( v43,  a3,  v16,  v17);
  swift_retain();
  OUTLINED_FUNCTION_7_50();
  static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)();
  uint64_t v19 = __swift_destroy_boxed_opaque_existential_1(v43);
  ((void (*)(void *__return_ptr, uint64_t))v15)(v43, v19);
  uint64_t v20 = v44;
  uint64_t v21 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 104))(v40, v20, v21);
  uint64_t v22 = v41;
  uint64_t v23 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  uint64_t v39 = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v11, v14 + *(int *)(v32 + 36), v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v34, v14, v38);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartCallIntent, INStartCallIntentResponse>);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  os_log_type_t v25 = RCHChildFlowFactory.init(producers:withFallbacks:)(v11, v34);
  uint64_t v26 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 8);
  uint64_t v27 = lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>();
  uint64_t v28 = v26(&v39, v25, a3, a2, v31, v27, v22, v23);
  swift_release(v30);
  swift_release(v25);
  outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>(v14);
  swift_release(v18);
  __swift_destroy_boxed_opaque_existential_1(v40);
  __swift_destroy_boxed_opaque_existential_1(v43);
  return v28;
}

void StartCallFlow.init(app:flowName:sharedGlobals:)()
{
}

void StartCallFlow.init(state:app:flowName:sharedGlobals:)()
{
}

uint64_t StartCallFlow.__ivar_destroyer()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + direct field offset for StartCallFlow.flowName + 8));
}

uint64_t StartCallFlow.deinit()
{
  uint64_t v0 = specialized CallingFlowAbstraction.deinit((uint64_t (*)(void))specialized PhoneFlow.deinit);
  OUTLINED_FUNCTION_8_38(v0, direct field offset for StartCallFlow.flowName);
  return v0;
}

uint64_t specialized CallingFlowAbstraction.deinit()
{
  return specialized CallingFlowAbstraction.deinit((uint64_t (*)(void))specialized PhoneFlow.deinit);
}

{
  return specialized CallingFlowAbstraction.deinit((uint64_t (*)(void))specialized PhoneFlow.deinit);
}

uint64_t specialized CallingFlowAbstraction.deinit(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  swift_release(*(void *)(v1 + *(void *)(*(void *)v1 + 288LL)));
  swift_bridgeObjectRelease(*(void *)(v1 + *(void *)(*(void *)v1 + 296LL) + 8));
  return v1;
}

uint64_t StartCallFlow.__deallocating_deinit()
{
  uint64_t v0 = specialized CallingFlowAbstraction.deinit((uint64_t (*)(void))specialized PhoneFlow.deinit);
  OUTLINED_FUNCTION_8_38(v0, direct field offset for StartCallFlow.flowName);
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

unint64_t lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>;
  if (!lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CallingIntentRCHFlowStrategy<A, B>, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>);
  }

  return result;
}

uint64_t outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StartCallFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartCallFlow;
  if (!type metadata singleton initialization cache for StartCallFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartCallFlow);
  }
  return result;
}

uint64_t type metadata completion function for StartCallFlow(uint64_t a1)
{
  uint64_t v2 = &unk_325C10;
  return swift_initClassMetadata2(a1, 256LL, 1LL, &v2, a1 + 344);
}

uint64_t OUTLINED_FUNCTION_1_50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, a2, a3, a4, 0LL);
}

uint64_t OUTLINED_FUNCTION_7_50()
{
  return v0();
}

uint64_t OUTLINED_FUNCTION_8_38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + a2 + 8));
}

uint64_t PhoneCallControlFlow.__allocating_init(input:sharedGlobals:appFinder:)( uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  PhoneCallControlFlow.init(input:sharedGlobals:appFinder:)(a1, a2, a3);
  return v7;
}

unint64_t PhoneCallControlFlow.PhoneCallControlFlowError.errorDescription.getter()
{
  return 0xD00000000000001DLL;
}

Swift::Int LocalizationError.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallControlFlow.PhoneCallControlFlowError( uint64_t a1)
{
  return Hasher._finalize()();
}

uint64_t PhoneCallControlFlow.init(input:sharedGlobals:appFinder:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, v3 + 16);
  uint64_t v8 = (os_log_s *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneCallControlFlow_input);
  uint64_t v9 = OUTLINED_FUNCTION_3_4();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(os_log_s *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  outlined init with copy of SharedGlobalsProviding( a3,  v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneCallControlFlow_appFinder);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v11, (uint64_t)static Logger.siriPhone);
  os_log_type_t v12 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v8, v12))
  {
    uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v13 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v8, v12, "#PhoneCallControlFlow state is initialized.", v13);
    OUTLINED_FUNCTION_0_2((uint64_t)v13);
  }

  OUTLINED_FUNCTION_62_1();
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v4;
}

uint64_t PhoneCallControlFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallControlFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallControlFlow and conformance PhoneCallControlFlow,  type metadata accessor for PhoneCallControlFlow,  (uint64_t)&protocol conformance descriptor for PhoneCallControlFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t PhoneCallControlFlow.execute()(uint64_t a1)
{
  v2[58] = a1;
  v2[59] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[60] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for Parse(0LL);
  v2[61] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[62] = v5;
  v2[63] = OUTLINED_FUNCTION_23(v5);
  return swift_task_switch(PhoneCallControlFlow.execute(), 0LL, 0LL);
}

uint64_t PhoneCallControlFlow.execute()()
{
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void **)(v0 + 472);
  uint64_t v5 = v4[5];
  uint64_t v6 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
  Input.parse.getter(v7);
  uint64_t v8 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 280LL))(v1);
  swift_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v8)
  {
    uint64_t v9 = v4[5];
    uint64_t v10 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 120))(v9, v10);
    uint64_t v11 = *(void *)(v0 + 160);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = (os_log_s *)__swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v11);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
    if (!v14)
    {
      OUTLINED_FUNCTION_62_1();
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v40 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v40, (uint64_t)static Logger.siriPhone);
      os_log_type_t v41 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v13, v41))
      {
        unint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)unint64_t v42 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v13,  v41,  "#PhoneCallControlFlow did not find supported call. Pushing UnsupportedCallControlIntentOutputProvider output flow",  v42);
        OUTLINED_FUNCTION_0_2((uint64_t)v42);
      }

      uint64_t v43 = *(void *)(v0 + 480);

      static SiriKitEventSender.current.getter((void *)(v0 + 176), v44);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 176), *(void *)(v0 + 200));
      OUTLINED_FUNCTION_6_45(0xBu, v8[17], 0);
      __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 176));
      outlined init with copy of SharedGlobalsProviding((uint64_t)(v4 + 2), v0 + 216);
      ObjC metadata update function for PhoneCallControlCATsSimple();
      uint64_t v45 = OUTLINED_FUNCTION_33_26();
      static CATOption.defaultMode.getter(v45);
      OUTLINED_FUNCTION_9_36(v43);
      uint64_t v46 = OUTLINED_FUNCTION_38_16();
      static CATOption.defaultMode.getter(v46);
      OUTLINED_FUNCTION_9_36(v43);
      uint64_t v47 = OUTLINED_FUNCTION_32_21();
      OUTLINED_FUNCTION_15_3(v47);
      uint64_t v48 = OUTLINED_FUNCTION_15_32((uint64_t)v8, (__int128 *)(v0 + 216));
      OUTLINED_FUNCTION_22_22((uint64_t)v48);
      OUTLINED_FUNCTION_52();
      *(void *)(v0 + 424) = v46;
      OUTLINED_FUNCTION_25_29();
      static ExecuteResponse.complete<A>(next:)(v0 + 424);
      goto LABEL_22;
    }

    uint64_t v16 = v14;
    uint64_t v17 = v15;
    OUTLINED_FUNCTION_62_1();
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 136LL))(v16, v17);
    uint64_t v19 = PhoneCallControlAction.rawValue.getter(v18);
    uint64_t v21 = v20;
    if (v19 == 0xD000000000000011LL && v20 == (os_log_s *)0x8000000000346840LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 0xD000000000000011LL, 0x8000000000346840LL, 0LL);
      OUTLINED_FUNCTION_62();
      if ((v49 & 1) == 0)
      {
        uint64_t v63 = PhoneCallControlFlow.getActionnableCallControlFlow(action:)(v18);
        uint64_t v72 = v16;
        uint64_t v64 = v18;
        uint64_t v65 = (uint64_t)(v4 + 2);
        static SiriKitEventSender.current.getter((void *)(v0 + 336), v63);
        uint64_t v66 = *(void *)(v0 + 360);
        uint64_t v67 = *(void *)(v0 + 368);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 336), v66);
        SiriKitEventSending.sendCallControlEvent(action:target:state:)(v64, v8[17], 256, v66, v67);
        OUTLINED_FUNCTION_62_1();
        outlined init with copy of SharedGlobalsProviding(v65, v0 + 256);
        ObjC metadata update function for PhoneCallControlCATsSimple();
        OUTLINED_FUNCTION_65();
        uint64_t v68 = OUTLINED_FUNCTION_5_45();
        *(void *)(v0 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 136))(v0 + 256, v64, v68);
        type metadata accessor for ActionableCallControlFlow();
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ActionableCallControlFlow and conformance ActionableCallControlFlow,  (uint64_t (*)(uint64_t))type metadata accessor for ActionableCallControlFlow,  (uint64_t)&protocol conformance descriptor for ActionableCallControlFlow);
        uint64_t v57 = v0 + 432;
LABEL_21:
        static ExecuteResponse.complete<A>(next:)(v57);
        swift_unknownObjectRelease(v72);
LABEL_22:
        swift_release(v8);
        goto LABEL_25;
      }
    }

    uint64_t v72 = v16;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v50 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v50, (uint64_t)static Logger.siriPhone);
    os_log_type_t v51 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v21, v51))
    {
      uint64_t v52 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_60_0(v52);
      OUTLINED_FUNCTION_5( &dword_0,  v21,  v51,  "#PhoneCallControlFlow recognized unsupported action. Pushing UnsupportedFeatureGuardFlow output flow",  (uint8_t *)(v0 + 136));
      OUTLINED_FUNCTION_0_2(v0 + 136);
    }

    OUTLINED_FUNCTION_28_23();
    uint64_t v53 = *(void *)(v0 + 120);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v53);
    OUTLINED_FUNCTION_6_45(v18, v8[17], 1);
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 96));
    outlined init with copy of SharedGlobalsProviding((uint64_t)(v4 + 2), v0 + 56);
    ObjC metadata update function for PhoneCallControlCATsSimple();
    uint64_t v54 = OUTLINED_FUNCTION_33_26();
    static CATOption.defaultMode.getter(v54);
    OUTLINED_FUNCTION_5_45();
    OUTLINED_FUNCTION_38_16();
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_5_45();
    uint64_t v55 = OUTLINED_FUNCTION_32_21();
    OUTLINED_FUNCTION_15_3(v55);
    uint64_t v56 = OUTLINED_FUNCTION_15_32((uint64_t)v8, (__int128 *)(v0 + 56));
    OUTLINED_FUNCTION_22_22((uint64_t)v56);
    OUTLINED_FUNCTION_31_21();
    *(void *)(v0 + 4outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v53;
    OUTLINED_FUNCTION_25_29();
    uint64_t v57 = v0 + 456;
    goto LABEL_21;
  }

  uint64_t v22 = (void *)(v0 + 16);
  uint64_t v23 = v0 + 448;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v24 = *(void *)(v0 + 472);
  uint64_t v25 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  uint64_t v26 = swift_retain_n(v24, 2LL);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v71 = *(void *)(v0 + 472);
    uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v73 = OUTLINED_FUNCTION_7_0(32LL);
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v30 = OUTLINED_FUNCTION_3_4();
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter(v30, v31);
    *(void *)(v0 + 440) = OUTLINED_FUNCTION_81_6(v32, v33, v34, v35, v36, v37, v38, v39, v69, v70);
    uint64_t v23 = v0 + 448;
    uint64_t v22 = (void *)(v0 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 440, v0 + 448, v29 + 4);
    OUTLINED_FUNCTION_62();
    swift_release_n(v71, 2LL);
    _os_log_impl(&dword_0, v27, v28, "#PhoneCallControlFlow failed to get action from input %s", v29, 0xCu);
    swift_arrayDestroy(v73, 1LL);
    OUTLINED_FUNCTION_0_2(v73);
    OUTLINED_FUNCTION_0_2((uint64_t)v29);
  }

  else
  {
    swift_release_n(*(void *)(v0 + 472), 2LL);
  }

  OUTLINED_FUNCTION_28_23();
  __swift_project_boxed_opaque_existential_1(v22, *(void *)(v0 + 40));
  OUTLINED_FUNCTION_6_45(0xBu, 5u, 1);
  __swift_destroy_boxed_opaque_existential_1(v22);
  type metadata accessor for StartCallCATsSimple(0LL);
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_5_45();
  OUTLINED_FUNCTION_20_23();
  uint64_t v59 = v58;
  uint64_t v60 = OUTLINED_FUNCTION_38_1();
  (*(void (**)(uint64_t))(*(void *)v59 + 112LL))(v60);
  OUTLINED_FUNCTION_31_21();
  *(void *)(v0 + 44__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v59;
  OUTLINED_FUNCTION_25_29();
  static ExecuteResponse.complete<A>(next:)(v23);
LABEL_25:
  OUTLINED_FUNCTION_38_1();
  uint64_t v61 = *(void *)(v0 + 480);
  swift_task_dealloc(*(void *)(v0 + 504));
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PhoneCallControlFlow.getActionnableCallControlFlow(action:)(unsigned __int8 a1)
{
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_4(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_60_0(v7);
      OUTLINED_FUNCTION_0_46( &dword_0,  v8,  v9,  "#PhoneCallControlFlow recognized microphone action. Pushing MicrophoneControlFlow");
      OUTLINED_FUNCTION_0_2(v2);
    }

    return type metadata accessor for MicrophoneControlFlow();
  }

  else
  {
    PhoneCallControlAction.isCameraAction.getter(a1);
    if ((v11 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v12 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
      os_log_type_t v13 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_4(v13))
      {
        uint64_t v14 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_60_0(v14);
        OUTLINED_FUNCTION_0_46( &dword_0,  v15,  v16,  "#PhoneCallControlFlow recognized camera action. Pushing CameraControlFlow");
        OUTLINED_FUNCTION_0_2(v2);
      }

      return type metadata accessor for CameraControlFlow();
    }

    else
    {
      PhoneCallControlAction.isSpeakerphoneAction.getter(a1);
      if ((v17 & 1) != 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v18 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v18, (uint64_t)static Logger.siriPhone);
        os_log_type_t v19 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_29_4(v19))
        {
          uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_60_0(v20);
          OUTLINED_FUNCTION_0_46( &dword_0,  v21,  v22,  "#PhoneCallControlFlow recognized microphone action. Pushing SpeakerphoneControlFlow");
          OUTLINED_FUNCTION_0_2(v2);
        }

        return type metadata accessor for SpeakerphoneControlFlow();
      }

      else
      {
        PhoneCallControlAction.isHoldAction.getter(a1);
        if ((v23 & 1) != 0)
        {
          return type metadata accessor for HoldControlFlow();
        }

        else
        {
          PhoneCallControlAction.isSwitchToFaceTimeAction.getter(a1);
          if ((v24 & 1) != 0)
          {
            if (one-time initialization token for siriPhone != -1) {
              swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
            }
            uint64_t v25 = OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_12_1(v25, (uint64_t)static Logger.siriPhone);
            os_log_type_t v26 = OUTLINED_FUNCTION_6_0();
            if (OUTLINED_FUNCTION_29_4(v26))
            {
              uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_1_0();
              OUTLINED_FUNCTION_60_0(v27);
              OUTLINED_FUNCTION_0_46( &dword_0,  v28,  v29,  "#PhoneCallControlFlow recognized switchToFacetime action. Pushing SwitchToFaceTimeControlFlow");
              OUTLINED_FUNCTION_0_2(v2);
            }

            return type metadata accessor for SwitchToFaceTimeControlFlow();
          }

          else
          {
            if (one-time initialization token for siriPhone != -1) {
              swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
            }
            uint64_t v30 = OUTLINED_FUNCTION_15_1();
            uint64_t v31 = (os_log_s *)OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
            os_log_type_t v32 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v31, v32))
            {
              unint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v34 = swift_slowAlloc(32LL, -1LL);
              uint64_t v48 = v34;
              *(_DWORD *)unint64_t v33 = 136315138;
              uint64_t v35 = PhoneCallControlAction.description.getter(a1);
              uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v48);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v33 + 4);
              swift_bridgeObjectRelease();
              _os_log_impl( &dword_0,  v31,  v32,  "#PhoneCallControlFlow action %s did not match microphone/camera/speakerphone/switchToFaceTime action and will not be handled. Throwing error.",  v33,  0xCu);
              swift_arrayDestroy(v34, 1LL);
              OUTLINED_FUNCTION_0_2(v34);
              OUTLINED_FUNCTION_0_2((uint64_t)v33);
            }

            unint64_t v37 = lazy protocol witness table accessor for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError();
            uint64_t v38 = swift_allocError(&type metadata for PhoneCallControlFlow.PhoneCallControlFlowError, v37, 0LL, 0LL);
            return swift_willThrow(v38, v39, v40, v41, v42, v43, v44, v45);
          }
        }
      }
    }
  }

void PhoneCallControlFlow.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneCallControlFlow_input;
  uint64_t v2 = OUTLINED_FUNCTION_3_4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneCallControlFlow_appFinder));
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallControlFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.exitValue.getter in conformance PhoneCallControlFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PhoneCallControlFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t type metadata accessor for PhoneCallControlFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PhoneCallControlFlow;
  if (!type metadata singleton initialization cache for PhoneCallControlFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PhoneCallControlFlow);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError;
  if (!lazy protocol witness table cache variable for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallControlFlow.PhoneCallControlFlowError,  &type metadata for PhoneCallControlFlow.PhoneCallControlFlowError);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError;
  if (!lazy protocol witness table cache variable for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallControlFlow.PhoneCallControlFlowError,  &type metadata for PhoneCallControlFlow.PhoneCallControlFlowError);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallControlFlow.PhoneCallControlFlowError and conformance PhoneCallControlFlow.PhoneCallControlFlowError);
  }

  return result;
}

uint64_t ObjC metadata update function for PhoneCallControlFlow()
{
  return type metadata accessor for PhoneCallControlFlow(0LL);
}

uint64_t type metadata completion function for PhoneCallControlFlow(uint64_t a1)
{
  v4[0] = "(";
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = "(";
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallControlFlow.PhoneCallControlFlowError( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1087BC + 4 * byte_325C30[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_1087DC + 4 * byte_325C35[v4]))();
  }
}

_BYTE *sub_1087BC(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_1087DC(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_1087E4(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_1087EC(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_1087F4(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_1087FC(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallControlFlow.PhoneCallControlFlowError()
{
  return &type metadata for PhoneCallControlFlow.PhoneCallControlFlowError;
}

void OUTLINED_FUNCTION_0_46(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_6_45(unsigned __int8 a1, unsigned __int8 a2, __int16 a3)
{
  return SiriKitEventSending.sendCallControlEvent(action:target:state:)(a1, a2, a3, v3, v4);
}

void *OUTLINED_FUNCTION_15_32(uint64_t a1, __int128 *a2)
{
  return UnsupportedCallControlIntentOutputProvider.init(intent:sharedGlobals:callControlCats:unsupportedCats:)( a1,  a2,  v3,  v2);
}

void OUTLINED_FUNCTION_20_23()
{
}

uint64_t OUTLINED_FUNCTION_22_22(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120LL))(a1);
}

uint64_t OUTLINED_FUNCTION_28_23()
{
  return static SiriKitEventSender.current.getter();
}

uint64_t OUTLINED_FUNCTION_31_21()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_32_21()
{
  return type metadata accessor for UnsupportedCallControlIntentOutputProvider();
}

uint64_t OUTLINED_FUNCTION_33_26()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_38_16()
{
  return type metadata accessor for UnsupportedFlowCATsSimple(0LL);
}

uint64_t static Transformer<>.transformer.getter()
{
  uint64_t v0 = type metadata accessor for UsoTask(0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallControlNLIntent?);
  return Transformer.init(transform:)(partial apply for closure #1 in static Transformer<>.transformer.getter, 0LL, v0);
}

{
  uint64_t v0;
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCall?);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SiriPhoneContact]);
  return Transformer.init(transform:)(closure #1 in static Transformer<>.transformer.getter, 0LL, v0);
}

void one-time initialization function for logPrefix()
{
  static Transformer<>.logPrefix = (uint64_t)&type metadata for String;
  unk_477AB0 = &outlined read-only object #0 of one-time initialization function for logPrefix;
  qword_477AB8 = 0LL;
  unk_477AC0 = 0LL;
}

uint64_t *Transformer<>.logPrefix.unsafeMutableAddressor()
{
  if (one-time initialization token for logPrefix != -1) {
    swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
  }
  return &static Transformer<>.logPrefix;
}

uint64_t static Transformer<>.logPrefix.getter()
{
  if (one-time initialization token for logPrefix != -1) {
    swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
  }
  uint64_t v0 = static Transformer<>.logPrefix;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t specialized Sequence.allSatisfy(_:)( uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  uint64_t v22 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v19 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v20 = a4 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0LL;
    while (1)
    {
      if ((a4 & 0x1000000000000000LL) != 0)
      {
        int v13 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v10 << 16, a3, a4);
      }

      else
      {
        if ((a4 & 0x2000000000000000LL) != 0)
        {
          v21[0] = a3;
          v21[1] = v20;
          char v11 = v21;
          uint64_t v12 = v22;
        }

        else
        {
          char v11 = (void *)v19;
          uint64_t v12 = v5;
          if ((a3 & 0x1000000000000000LL) == 0) {
            char v11 = (void *)_StringObject.sharedUTF8.getter(a3, a4);
          }
        }

        int v13 = _decodeScalar(_:startingAt:)(v11, v12, v10);
      }

      uint64_t v15 = v14;
      LODWORD(v21[0]) = v13;
      char v16 = a1(v21);
      if (v4)
      {
        OUTLINED_FUNCTION_50();
        return v17 & 1;
      }

      if ((v16 & 1) == 0) {
        break;
      }
      v10 += v15;
      if (v10 >= v6)
      {
        OUTLINED_FUNCTION_50();
        goto LABEL_17;
      }
    }

    OUTLINED_FUNCTION_50();
    char v17 = 0;
  }

  else
  {
LABEL_17:
    char v17 = 1;
  }

  return v17 & 1;
}

uint64_t specialized Sequence.allSatisfy(_:)(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return specialized Sequence.allSatisfy(_:)(a1, a2, a3) & 1;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v16;
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_6_1();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    uint64_t v7 = 4LL;
    while (1)
    {
      if ((a3 & 0xC000000000000001LL) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a3);
      }

      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * v7);
        swift_retain();
      }

      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      char v16 = v8;
      uint64_t v10 = a1(&v16);
      if (v4)
      {
        OUTLINED_FUNCTION_50();
        swift_release(v8);
        return v12 & 1;
      }

      char v11 = v10;
      swift_release(v8);
      if ((v11 & 1) == 0)
      {
        OUTLINED_FUNCTION_50();
        uint64_t v12 = 0;
        return v12 & 1;
      }

      ++v7;
      if (v9 == v6) {
        goto LABEL_11;
      }
    }

    __break(1u);
LABEL_16:
    if (a3 < 0) {
      uint64_t v14 = a3;
    }
    else {
      uint64_t v14 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_1();
  }

uint64_t specialized Sequence.allSatisfy(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v15[1] = v3;
    uint64_t v3 = 4LL;
    while (1)
    {
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 8 * v3);
        swift_retain();
      }

      uint64_t v10 = v3 - 3;
      if (__OFADD__(v3 - 4, 1LL)) {
        break;
      }
      uint64_t v16 = a2;
      swift_retain();
      swift_getAtKeyPath(&v16, v9);
      swift_release(a2);
      uint64_t v11 = type metadata accessor for SpeakableString(0LL);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v11);
      outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for SpeakableString?);
      swift_release(v9);
      if (EnumTagSinglePayload != 1)
      {
        swift_release(a2);
        swift_bridgeObjectRelease();
        return 0LL;
      }

      ++v3;
      if (v10 == v8) {
        goto LABEL_17;
      }
    }

    __break(1u);
LABEL_13:
    if (a1 < 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    uint64_t v7 = 4LL;
    while (1)
    {
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1);
      }

      else
      {
        uint64_t v8 = *(void *)(a1 + 8 * v7);
        swift_retain();
      }

      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      uint64_t v10 = specialized closure #1 in PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter(v8, a2);
      if (v3)
      {
        swift_release(a2);
        swift_bridgeObjectRelease();
        swift_release(v8);
        return v12 & 1;
      }

      uint64_t v11 = v10;
      swift_release(v8);
      if ((v11 & 1) == 0)
      {
        swift_release(a2);
        swift_bridgeObjectRelease();
        uint64_t v12 = 0;
        return v12 & 1;
      }

      ++v7;
      if (v9 == v6) {
        goto LABEL_11;
      }
    }

    __break(1u);
LABEL_16:
    if (a1 < 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  id v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24[3];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_124();
  if (!v3)
  {
LABEL_28:
    OUTLINED_FUNCTION_4_1();
    swift_bridgeObjectRelease();
    return 1LL;
  }

  uint64_t v4 = 0LL;
  uint64_t v5 = a1 + 32;
  if (a2 < 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v22 = v6;
  uint64_t v28 = (unint64_t)a2 >> 62;
  while (1)
  {
    uint64_t result = outlined init with copy of SignalProviding(v5, (uint64_t)v24);
    if (v28)
    {
      OUTLINED_FUNCTION_124();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v22);
      uint64_t result = OUTLINED_FUNCTION_4_1();
    }

    else
    {
      uint64_t v8 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
    }

    if (v4 == v8)
    {
      __swift_destroy_boxed_opaque_existential_1(v24);
      goto LABEL_28;
    }

    if ((a2 & 0xC000000000000001LL) != 0)
    {
      uint64_t v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a2);
      goto LABEL_12;
    }

    uint64_t v9 = *(id *)(a2 + 8 * v4 + 32);
LABEL_12:
    uint64_t v10 = v9;
    outlined init with take of AppSelectionSignalComponent(v24, (uint64_t)&v25);
    *((void *)&v27 + 1) = v10;
    v24[1] = v26;
    v24[2] = v27;
    v24[0] = v25;
    uint64_t v11 = v27;
    uint64_t v12 = *((void *)&v26 + 1);
    int v13 = (unint64_t)__swift_project_boxed_opaque_existential_1(v24, *((uint64_t *)&v26 + 1));
    uint64_t v14 = (*(uint64_t (**)(uint64_t, void))(v11 + 32))(v12, v11);
    if (!v15) {
      goto LABEL_25;
    }
    uint64_t v16 = v14;
    OUTLINED_FUNCTION_34(v14, v15);
    char v17 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000LL) == 0) {
      char v17 = v16 & 0xFFFFFFFFFFFFLL;
    }
    if (!v17
      || (uint64_t v18 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(*((void **)&v11 + 1)), !v19))
    {
LABEL_25:
      outlined destroy of (SiriPhoneContact, INPerson)((uint64_t)v24);
LABEL_26:
      OUTLINED_FUNCTION_4_1();
      swift_bridgeObjectRelease();
      return 0LL;
    }

    uint64_t v20 = v18;
    OUTLINED_FUNCTION_34(v18, v19);
    if ((v13 & 0x2000000000000000LL) != 0) {
      uint64_t v21 = HIBYTE(v13) & 0xF;
    }
    else {
      uint64_t v21 = v20 & 0xFFFFFFFFFFFFLL;
    }
    outlined destroy of (SiriPhoneContact, INPerson)((uint64_t)v24);
    if (!v21) {
      goto LABEL_26;
    }
    ++v4;
    v5 += 40LL;
    if (v3 == v4) {
      goto LABEL_28;
    }
  }

  __break(1u);
  return result;
}

uint64_t PhonePersonListProperties.allSameGivenName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 8))();
  __int128 v7[2] = a1;
  v7[3] = v3;
  uint64_t v8 = v2;
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 3) = specialized Sequence.allSatisfy(_:)( (uint64_t (*)(uint64_t *))partial apply for closure #1 in PhonePersonListProperties.allSameGivenName.getter,  (uint64_t)v7,  v5);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void PhonePersonListProperties.isUnnamedPhoneNumber.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = *(void *)(a1 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
  uint64_t v9 = v8();
  for (uint64_t i = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8LL)); ; uint64_t i = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v2, a1);
    if (!i) {
      break;
    }
    a2 = ((uint64_t (*)(uint64_t, unint64_t))v8)(a1, a2);
    if (a2 >> 62)
    {
      OUTLINED_FUNCTION_6_1();
      uint64_t v9 = OUTLINED_FUNCTION_61_1();
      if (!v9) {
        goto LABEL_12;
      }
    }

    else
    {
      uint64_t v9 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
      OUTLINED_FUNCTION_6_1();
      if (!v9) {
        goto LABEL_12;
      }
    }

    uint64_t v8 = (uint64_t (*)(void))(a2 & 0xC000000000000001LL);
    if ((a2 & 0xC000000000000001LL) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a2);
    }
    else {
      swift_retain();
    }
    char v11 = specialized PhonePersonProperties<>.isUnnamedPhoneNumber.getter();
    OUTLINED_FUNCTION_38_1();
    if ((v11 & 1) == 0 || v9 == 1)
    {
LABEL_12:
      OUTLINED_FUNCTION_7_4(a2);
      break;
    }

    uint64_t v12 = 5LL;
    while (1)
    {
      uint64_t v2 = v12 - 4;
      if (v8)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, a2);
      }

      else
      {
        uint64_t v13 = *(void *)(a2 + 8 * v12);
        swift_retain();
      }

      uint64_t v14 = v12 - 3;
      if (__OFADD__(v2, 1LL)) {
        break;
      }
      char v15 = specialized PhonePersonProperties<>.isUnnamedPhoneNumber.getter();
      swift_release(v13);
      if ((v15 & 1) != 0)
      {
        ++v12;
        if (v14 != v9) {
          continue;
        }
      }

      goto LABEL_12;
    }

    __break(1u);
LABEL_23:
    if (v9 < 0) {
      uint64_t v16 = v9;
    }
    else {
      uint64_t v16 = v9 & 0xFFFFFFFFFFFFFF8LL;
    }
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, a1);
  OUTLINED_FUNCTION_7_5();
}

void PhonePersonListProperties.hasHandleLabels.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  unint64_t v6 = v5;
  if (v5 >> 62) {
    goto LABEL_21;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = OUTLINED_FUNCTION_61_1())
  {
    uint64_t v8 = 4LL;
    while (1)
    {
      if ((v6 & 0xC000000000000001LL) != 0)
      {
        uint64_t v9 = OUTLINED_FUNCTION_9_43();
        uint64_t v10 = v9;
      }

      else
      {
        uint64_t v10 = *(void *)(v6 + 8 * v8);
        uint64_t v9 = swift_retain();
      }

      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1LL)) {
        break;
      }
      uint64_t v12 = DialogPerson.personHandle.getter(v9);
      if (!v12) {
        goto LABEL_17;
      }
      DialogPersonHandle.label.getter(v12);
      OUTLINED_FUNCTION_38_1();
      uint64_t v13 = type metadata accessor for SpeakableString(0LL);
      uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1LL, v13);
      if ((_DWORD)EnumTagSinglePayload == 1)
      {
        outlined destroy of SpeakableString?(v2, &demangling cache variable for type metadata for SpeakableString?);
LABEL_17:
        OUTLINED_FUNCTION_2_12();
        swift_release(v10);
        goto LABEL_19;
      }

      uint64_t v15 = SpeakableString.print.getter(EnumTagSinglePayload);
      unint64_t v17 = v16;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v2, v13);
      if (!v17) {
        goto LABEL_17;
      }
      swift_release(v10);
      OUTLINED_FUNCTION_62();
      uint64_t v18 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000LL) == 0) {
        uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
      }
      if (v18)
      {
        ++v8;
        if (v11 != v7) {
          continue;
        }
      }

      goto LABEL_18;
    }

    __break(1u);
LABEL_21:
    OUTLINED_FUNCTION_25_2();
  }

void PhonePersonListProperties.hasDifferentNameAndLabel.getter(uint64_t a1, uint64_t a2)
{
  os_log_type_t v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v26 - v5;
  unint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v8 = v7;
  if (v7 >> 62)
  {
LABEL_32:
    OUTLINED_FUNCTION_25_2();
    uint64_t v9 = OUTLINED_FUNCTION_61_1();
    if (v9) {
      goto LABEL_3;
    }
  }

  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_3:
      uint64_t v28 = v8;
      unint64_t v29 = v8 & 0xC000000000000001LL;
      uint64_t v10 = 4LL;
      uint64_t v27 = v9;
      do
      {
        if (v29) {
          OUTLINED_FUNCTION_9_43();
        }
        else {
          swift_retain();
        }
        uint64_t v11 = v10 - 3;
        if (__OFADD__(v10 - 4, 1LL))
        {
          __break(1u);
          goto LABEL_32;
        }

        dispatch thunk of DialogPerson.toString.getter();
        uint64_t v12 = type metadata accessor for SpeakableString(0LL);
        uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1LL, v12);
        if ((_DWORD)EnumTagSinglePayload == 1)
        {
          uint64_t v14 = outlined destroy of SpeakableString?( (uint64_t)v6,  &demangling cache variable for type metadata for SpeakableString?);
          uint64_t countAndFlagsBits = 0LL;
          object = 0LL;
        }

        else
        {
          SpeakableString.print.getter(EnumTagSinglePayload);
          (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8LL))(v6, v12);
          Swift::String v17 = String.lowercased()();
          uint64_t countAndFlagsBits = v17._countAndFlagsBits;
          object = v17._object;
          uint64_t v14 = swift_bridgeObjectRelease();
        }

        uint64_t v18 = DialogPerson.personHandle.getter(v14);
        uint64_t v19 = (void *)v18;
        if (v18)
        {
          uint64_t v20 = (uint64_t)v26;
          DialogPersonHandle.label.getter(v18);
          OUTLINED_FUNCTION_38_1();
          uint64_t v21 = __swift_getEnumTagSinglePayload(v20, 1LL, v12);
          if ((_DWORD)v21 == 1)
          {
            outlined destroy of SpeakableString?(v20, &demangling cache variable for type metadata for SpeakableString?);
            uint64_t v22 = 0LL;
            uint64_t v19 = 0LL;
            if (!object) {
              goto LABEL_24;
            }
          }

          else
          {
            SpeakableString.print.getter(v21);
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(v20, v12);
            Swift::String v25 = String.lowercased()();
            uint64_t v22 = v25._countAndFlagsBits;
            uint64_t v19 = v25._object;
            swift_bridgeObjectRelease();
            if (!object)
            {
LABEL_24:
              if (!v19)
              {
                OUTLINED_FUNCTION_7_4(v28);
                OUTLINED_FUNCTION_122();
                goto LABEL_30;
              }

uint64_t closure #1 in PhonePersonListProperties.allSameGivenName.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SpeakableString?, SpeakableString?));
  __chkstk_darwin();
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = __chkstk_darwin();
  unint64_t v16 = (char *)&v30 - v15;
  DialogPerson.givenName.getter(v14);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t v18 = v17;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 >= 0) {
      v17 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v17);
  }

  else
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v20 = (uint64_t)v11;
  if (v19 <= 0)
  {
    swift_bridgeObjectRelease();
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1LL, 1LL, v6);
  }

  else
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v18 & 0xC000000000000001LL) == 0, v18);
    if ((v18 & 0xC000000000000001LL) != 0)
    {
      uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v18);
    }

    else
    {
      uint64_t v21 = *(void *)(v18 + 32);
      swift_retain();
    }

    uint64_t v22 = swift_bridgeObjectRelease();
    DialogPerson.givenName.getter(v22);
    swift_release(v21);
  }

  uint64_t v23 = (uint64_t)&v9[*(int *)(v33 + 48)];
  outlined init with copy of SpeakableString?((uint64_t)v16, (uint64_t)v9);
  outlined init with copy of SpeakableString?((uint64_t)v13, v23);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v6) == 1)
  {
    char v24 = &demangling cache variable for type metadata for SpeakableString?;
    outlined destroy of SpeakableString?( (uint64_t)v13,  &demangling cache variable for type metadata for SpeakableString?);
    outlined destroy of SpeakableString?( (uint64_t)v16,  &demangling cache variable for type metadata for SpeakableString?);
    if (__swift_getEnumTagSinglePayload(v23, 1LL, v6) == 1)
    {
      char v25 = -1;
    }

    else
    {
      char v24 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
      char v25 = 0;
    }
  }

  else
  {
    outlined init with copy of SpeakableString?((uint64_t)v9, v20);
    if (__swift_getEnumTagSinglePayload(v23, 1LL, v6) == 1)
    {
      outlined destroy of SpeakableString?( (uint64_t)v13,  &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of SpeakableString?( (uint64_t)v16,  &demangling cache variable for type metadata for SpeakableString?);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v20, v6);
      char v25 = 0;
      char v24 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
    }

    else
    {
      uint64_t v27 = v31;
      uint64_t v26 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v31, v23, v6);
      lazy protocol witness table accessor for type SpeakableString and conformance SpeakableString();
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v27, v6);
      uint64_t v28 = *(void (**)(char *, uint64_t))(v26 + 8);
      v28(v27, v6);
      char v24 = &demangling cache variable for type metadata for SpeakableString?;
      outlined destroy of SpeakableString?( (uint64_t)v13,  &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of SpeakableString?( (uint64_t)v16,  &demangling cache variable for type metadata for SpeakableString?);
      v28((char *)v20, v6);
    }
  }

  outlined destroy of SpeakableString?((uint64_t)v9, v24);
  return v25 & 1;
}

uint64_t partial apply for closure #1 in PhonePersonListProperties.allSameGivenName.getter(uint64_t a1)
{
  return closure #1 in PhonePersonListProperties.allSameGivenName.getter(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t specialized PhonePersonProperties<>.isUnnamedPhoneNumber.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t inited = swift_initStackObject(v2, v9);
  *(_OWORD *)(inited + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_325DA0;
  *(void *)(inited + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = swift_getKeyPath(&unk_325DB8);
  *(void *)(inited + 40) = swift_getKeyPath(&unk_325DE8);
  *(void *)(inited + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = swift_getKeyPath(&unk_325E18);
  *(void *)(inited + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = swift_getKeyPath(&unk_325E48);
  uint64_t KeyPath = swift_getKeyPath(&unk_325E78);
  *(void *)(inited + 64) = KeyPath;
  specialized Array._endMutation()(KeyPath, v5, v6, v7);
  swift_retain();
  LOBYTE(outlined init with copy of SharedGlobalsProviding(v0, v1) = specialized Sequence.allSatisfy(_:)(inited, v1);
  OUTLINED_FUNCTION_62();
  return v1 & 1;
}

unint64_t lazy protocol witness table accessor for type SpeakableString and conformance SpeakableString()
{
  unint64_t result = lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString;
  if (!lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString)
  {
    uint64_t v1 = type metadata accessor for SpeakableString(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SpeakableString, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString);
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_9_43()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

uint64_t Publisher.sink(receiveResultCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)OUTLINED_FUNCTION_0_47((uint64_t)&unk_3FEB20);
  v8[2] = a3;
  void v8[3] = a4;
  v8[4] = a1;
  uint64_t v8[5] = a2;
  uint64_t v9 = (void *)OUTLINED_FUNCTION_0_47((uint64_t)&unk_3FEB48);
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a1;
  v9[5] = a2;
  swift_retain_n(a2, 2LL);
  uint64_t v10 = Publisher.sink(receiveCompletion:receiveValue:)( partial apply for closure #1 in Publisher.sink(receiveResultCompletion:),  v8,  partial apply for closure #2 in Publisher.sink(receiveResultCompletion:),  v9,  a3,  a4);
  swift_release(v8);
  swift_release(v9);
  return v10;
}

uint64_t closure #1 in Publisher.sink(receiveResultCompletion:)( uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a3;
  char v24 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v9 = swift_getAssociatedTypeWitness(255LL);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, a4, v9);
  uint64_t v11 = type metadata accessor for Result(0LL, AssociatedTypeWitness, v9, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = type metadata accessor for Subscribers.Completion(0LL, v9, AssociatedConformanceWitness);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v23 - v17;
  uint64_t v19 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v23 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, v9);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v21, v9);
  swift_storeEnumTagMultiPayload(v14, v11, 1LL);
  v24(v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v9);
}

uint64_t sub_109C7C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t partial apply for closure #1 in Publisher.sink(receiveResultCompletion:)(uint64_t a1)
{
  return closure #1 in Publisher.sink(receiveResultCompletion:)( a1,  *(void (**)(char *))(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 16),  *(void *)(v1 + 24));
}

uint64_t closure #2 in Publisher.sink(receiveResultCompletion:)( uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v10 = swift_getAssociatedTypeWitness(255LL);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, a4, v10);
  uint64_t v12 = type metadata accessor for Result(0LL, AssociatedTypeWitness, v10, AssociatedConformanceWitness);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16LL))( (char *)&v17 - v14,  a1,  AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload(v15, v12, 0LL);
  a2(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t partial apply for closure #2 in Publisher.sink(receiveResultCompletion:)(uint64_t a1)
{
  return closure #2 in Publisher.sink(receiveResultCompletion:)( a1,  *(void (**)(char *))(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 16),  *(void *)(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_0_47(uint64_t a1)
{
  return swift_allocObject(a1, 48LL, 7LL);
}

uint64_t key path setter for AppSelectionState.forcedDisambiguationShadowPrediction : AppSelectionState( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of AppResolverResult?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 96LL))(v5);
}

void AppSelectionState.forcedDisambiguationShadowPrediction.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin17AppSelectionState_forcedDisambiguationShadowPrediction;
  swift_beginAccess(v3, v4, 0LL, 0LL);
  outlined init with copy of AppResolverResult?(v3, a1);
  OUTLINED_FUNCTION_60_2();
}

uint64_t outlined init with copy of AppResolverResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void AppSelectionState.forcedDisambiguationShadowPrediction.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin17AppSelectionState_forcedDisambiguationShadowPrediction;
  OUTLINED_FUNCTION_5_9(v3, (uint64_t)v5);
  uint64_t v4 = outlined assign with take of AppResolverResult?(a1, v3);
  OUTLINED_FUNCTION_2_43(v4);
  OUTLINED_FUNCTION_60_2();
}

uint64_t outlined assign with take of AppResolverResult?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t (*AppSelectionState.forcedDisambiguationShadowPrediction.modify(uint64_t a1))()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

void AppSelectionState.__allocating_init(forcedDisambiguationPrediction:)()
{
  uint64_t v2 = type metadata accessor for AppResolverResult(0LL);
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v2);
  OUTLINED_FUNCTION_5_9(v1, (uint64_t)v4);
  uint64_t v3 = OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_2_43(v3);
  OUTLINED_FUNCTION_26_1();
}

void AppSelectionState.init(forcedDisambiguationPrediction:)()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin17AppSelectionState_forcedDisambiguationShadowPrediction;
  uint64_t v2 = type metadata accessor for AppResolverResult(0LL);
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v2);
  OUTLINED_FUNCTION_5_9(v1, (uint64_t)v4);
  uint64_t v3 = OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_2_43(v3);
  OUTLINED_FUNCTION_26_1();
}

uint64_t AppSelectionState.deinit()
{
  return v0;
}

uint64_t outlined destroy of AppResolverResult?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t AppSelectionState.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10A138(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 88LL))();
}

uint64_t ObjC metadata update function for AppSelectionState()
{
  return type metadata accessor for AppSelectionState(0LL);
}

uint64_t type metadata accessor for AppSelectionState(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AppSelectionState;
  if (!type metadata singleton initialization cache for AppSelectionState) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppSelectionState);
  }
  return result;
}

void type metadata completion function for AppSelectionState(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
  }

void type metadata accessor for AppResolverResult?(uint64_t a1)
{
  if (!lazy cache variable for type metadata for AppResolverResult?)
  {
    uint64_t v2 = type metadata accessor for AppResolverResult(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for AppResolverResult?);
    }
  }

uint64_t OUTLINED_FUNCTION_2_43(uint64_t a1, ...)
{
  return swift_endAccess(va);
}

uint64_t OUTLINED_FUNCTION_4_47()
{
  return outlined assign with take of AppResolverResult?(v0, v1);
}

uint64_t UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:)()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return static UnsetRelationshipTemplates.promptForPerson(relationship:)(v2);
}

uint64_t UnsetRelationshipTemplatesWrapper.confirmToSave(relationship:contact:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_task_alloc(async function pointer to static UnsetRelationshipTemplates.processConfirmToSave(relationship:contact:)[1]);
  uint64_t v8 = (void *)OUTLINED_FUNCTION_53_2(v7);
  void *v8 = v3;
  v8[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return static UnsetRelationshipTemplates.processConfirmToSave(relationship:contact:)(a1, a2, a3);
}

uint64_t UnsetRelationshipTemplatesWrapper.promptToDisambiguationContacts()(uint64_t a1)
{
  uint64_t v3 = swift_task_alloc(async function pointer to static UnsetRelationshipTemplates.promptToDisambiguationContacts()[1]);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_53_2(v3);
  *uint64_t v4 = v1;
  v4[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return static UnsetRelationshipTemplates.promptToDisambiguationContacts()(a1);
}

uint64_t UnsetRelationshipTemplatesWrapper.noMeCard(relationship:)()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return static UnsetRelationshipTemplates.noMeCard(relationship:)(v2);
}

uint64_t protocol witness for UnsetRelationshipTemplateProviding.promptForPerson(relationship:) in conformance UnsetRelationshipTemplatesWrapper( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 112LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return v9(a1, a2);
}

uint64_t protocol witness for UnsetRelationshipTemplateProviding.confirmToSave(relationship:contact:) in conformance UnsetRelationshipTemplatesWrapper( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 120LL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return v11(a1, a2, a3);
}

uint64_t protocol witness for UnsetRelationshipTemplateProviding.promptToDisambiguationContacts() in conformance UnsetRelationshipTemplatesWrapper( uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 128LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return v7(a1);
}

uint64_t protocol witness for UnsetRelationshipTemplateProviding.noMeCard(relationship:) in conformance UnsetRelationshipTemplatesWrapper( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 136LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsetRelationshipTemplatesWrapper.promptForPerson(relationship:);
  return v9(a1, a2);
}

uint64_t type metadata accessor for UnsetRelationshipTemplatesWrapper()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin33UnsetRelationshipTemplatesWrapper);
}

void SPHCall.isFTAudio.getter(uint64_t a1, uint64_t a2)
{
  if ((OUTLINED_FUNCTION_18_32(a1, a2) & 1) != 0) {
    OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24));
  }
  OUTLINED_FUNCTION_6();
}

void SPHCall.isFTVideo.getter(uint64_t a1, uint64_t a2)
{
  if ((OUTLINED_FUNCTION_18_32(a1, a2) & 1) != 0) {
    (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
  }
  else {
    OUTLINED_FUNCTION_6();
  }
}

void specialized Sequence.contains(where:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    type metadata accessor for INPlayVoicemailIntent( 0LL,  &lazy cache variable for type metadata for TUConversationParticipant,  &OBJC_CLASS___TUConversationParticipant_ptr);
    uint64_t v5 = v4;
    uint64_t v6 = lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject( &lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject,  &lazy cache variable for type metadata for TUConversationParticipant,  &OBJC_CLASS___TUConversationParticipant_ptr);
    uint64_t v7 = Set.Iterator.init(_cocoa:)(v27, v3, v5, v6);
    uint64_t v1 = v27[0];
    uint64_t v25 = v27[1];
    uint64_t v8 = v27[2];
    int64_t v9 = v27[3];
    unint64_t v10 = v27[4];
  }

  else
  {
    uint64_t v11 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1LL << v12);
    }
    else {
      uint64_t v13 = -1LL;
    }
    unint64_t v10 = v13 & *(void *)(a1 + 56);
    uint64_t v7 = (void *)swift_bridgeObjectRetain();
    int64_t v9 = 0LL;
  }

  int64_t v24 = (unint64_t)(v8 + 64) >> 6;
  while (1)
  {
    int64_t v14 = v9;
    if ((v1 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v17 = __CocoaSet.Iterator.next()(v7);
    if (!v17) {
      goto LABEL_35;
    }
    uint64_t v18 = v17;
    uint64_t v26 = v17;
    type metadata accessor for INPlayVoicemailIntent( 0LL,  &lazy cache variable for type metadata for TUConversationParticipant,  &OBJC_CLASS___TUConversationParticipant_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8);
    id v19 = v28;
    swift_unknownObjectRelease(v18);
    if (!v19) {
      goto LABEL_35;
    }
LABEL_34:
    unsigned int v23 = [v19 isAudioPaused];

    if (v23) {
      goto LABEL_35;
    }
  }

  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v9 << 6);
LABEL_33:
    id v19 = *(id *)(*(void *)(v1 + 48) + 8 * v16);
    if (!v19) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }

  int64_t v20 = v9 + 1;
  if (!__OFADD__(v9, 1LL))
  {
    if (v20 >= v24) {
      goto LABEL_35;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v14 + 2;
      if (v14 + 2 >= v24) {
        goto LABEL_35;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v14 + 3;
        if (v14 + 3 >= v24) {
          goto LABEL_35;
        }
        unint64_t v21 = *(void *)(v25 + 8 * v9);
        if (!v21)
        {
          int64_t v9 = v14 + 4;
          if (v14 + 4 >= v24) {
            goto LABEL_35;
          }
          unint64_t v21 = *(void *)(v25 + 8 * v9);
          if (!v21)
          {
            int64_t v9 = v14 + 5;
            if (v14 + 5 >= v24) {
              goto LABEL_35;
            }
            unint64_t v21 = *(void *)(v25 + 8 * v9);
            if (!v21)
            {
              int64_t v22 = v14 + 6;
              while (v22 < v24)
              {
                unint64_t v21 = *(void *)(v25 + 8 * v22++);
                if (v21)
                {
                  int64_t v9 = v22 - 1;
                  goto LABEL_32;
                }
              }

uint64_t SPHCall.toPhoneCallRecord()()
{
  uint64_t v0 = type metadata accessor for Locale(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = (void *)(v3 - v2);
  Class isa = SPHCall.toINCallRecord()().super.isa;
  uint64_t v6 = type metadata accessor for AppInfoBuilder();
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 16LL);
  static Device.current.getter(v16);
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  dispatch thunk of DeviceState.siriLocale.getter(v8, v9);
  __swift_destroy_boxed_opaque_existential_1(v16);
  swift_retain();
  specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)(isa, 0LL, v7, v4);
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for PhoneCallRecord(0LL);
  OUTLINED_FUNCTION_15_2(v12);
  PhoneCallRecord.init(builder:)(v11);
  uint64_t v14 = v13;

  (*(void (**)(void *, uint64_t))(v1 + 8))(v4, v0);
  swift_release_n(v7, 2LL);
  return v14;
}

uint64_t SPHCall.isFTAudioCallOnHold.getter(uint64_t a1, uint64_t a2)
{
  if (!v12)
  {
    outlined destroy of SpeakableString?( (uint64_t)&v11,  &demangling cache variable for type metadata for SPHConversation?);
LABEL_7:
    char v4 = 0;
    return v4 & 1;
  }

  outlined init with take of AppSelectionSignalComponent(&v11, (uint64_t)v14);
  if (OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16)) == 2)
  {
    __swift_destroy_boxed_opaque_existential_1(v14);
    char v4 = 1;
  }

  else
  {
    uint64_t v6 = v14[3];
    uint64_t v7 = v14[4];
    OUTLINED_FUNCTION_49_0(v14);
    LOBYTE(OUTLINED_FUNCTION_9_39(v4, v5, v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    outlined init with copy of SignalProviding((uint64_t)v14, (uint64_t)&v11);
    if ((v6 & 1) != 0)
    {
      uint64_t v8 = v13;
      OUTLINED_FUNCTION_49_0(&v11);
      uint64_t v9 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24));
      specialized Sequence.contains(where:)(v9);
      char v4 = v10;
      OUTLINED_FUNCTION_62();
    }

    else
    {
      char v4 = 0;
    }

    __swift_destroy_boxed_opaque_existential_1(&v11);
    __swift_destroy_boxed_opaque_existential_1(v14);
  }

  return v4 & 1;
}

uint64_t SPHCall.localHandle.getter(uint64_t a1, uint64_t a2)
{
  if ((OUTLINED_FUNCTION_18_32(a1, a2) & 1) == 0)
  {
    id v6 = objc_msgSend((id)OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64)), "handle");
    OUTLINED_FUNCTION_51_9();
    return v2;
  }

  OUTLINED_FUNCTION_62_8();
  uint64_t v2 = v9;
  if (!v9)
  {
    outlined destroy of SpeakableString?((uint64_t)v8, &demangling cache variable for type metadata for SPHConversation?);
    return 0LL;
  }

  uint64_t v3 = v10;
  OUTLINED_FUNCTION_49_0(v8);
  char v4 = (void *)OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32));
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(v8);
    return 0LL;
  }

  id v5 = [v4 handle];
  OUTLINED_FUNCTION_51_9();
  __swift_destroy_boxed_opaque_existential_1(v8);
  return v2;
}

id TUCall.isFaceTime.getter()
{
  return TUCall.isFaceTime.getter((SEL *)&selRef_provider, (SEL *)&selRef_isFaceTimeProvider);
}

id TUCall.isTelephony.getter()
{
  return TUCall.isFaceTime.getter((SEL *)&selRef_provider, (SEL *)&selRef_isTelephonyProvider);
}

BOOL TUCall.isFaceTimeStatusValid.getter()
{
  return [v0 faceTimeIDStatus] != 1;
}

void TUCall.conversation.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v15 = v14;
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, v12, v13);
  uint64_t v16 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEBC8, 24LL);
  *(void *)(v16 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v11;
  uint64_t v17 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEBF0, 32LL);
  *(void *)(v17 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in TUCall.conversation.getter;
  *(void *)(v17 + 24) = v16;
  OUTLINED_FUNCTION_24_10(v17, &lazy cache variable for type metadata for TUCallCenter, &OBJC_CLASS___TUCallCenter_ptr);
  uint64_t v19 = v18;
  id v20 = v11;
  id v21 = a11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUConversation?);
  SPHCallCenter.onQueue<A>(_:)( partial apply for specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A),  v17,  v19);
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_16_3();

  int64_t v24 = OUTLINED_FUNCTION_15_33(v22, v23);
  if (a10)
  {
    OUTLINED_FUNCTION_24_10( (uint64_t)v24,  &lazy cache variable for type metadata for TUConversation,  &OBJC_CLASS___TUConversation_ptr);
    *(void *)(v15 + 24) = v25;
    *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &protocol witness table for TUConversation;
    *(void *)uint64_t v15 = a10;
  }

  else
  {
    *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(_OWORD *)uint64_t v15 = 0u;
    *(_OWORD *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0u;
  }

  OUTLINED_FUNCTION_0_48();
}

id closure #1 in TUCall.conversation.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id result = [a1 activeConversationForCall:a2];
  *a3 = result;
  return result;
}

id TUCall.maxRemoteParticipants.getter()
{
  id v1 = [v0 provider];
  unsigned int v2 = [v1 isFaceTimeProvider];

  else {
    return &dword_0 + 1;
  }
}

id TUCall.isMicrophoneMuted.getter()
{
  return [v0 isUplinkMuted];
}

void TUCall.isMicrophoneMuted.setter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, v12, v13);
  uint64_t v14 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEC18, 25LL);
  OUTLINED_FUNCTION_27_24(v14);
  uint64_t v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEC40, 32LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in TUCall.isMicrophoneMuted.setter;
  *(void *)(v15 + 24) = v10;
  OUTLINED_FUNCTION_24_10(v15, &lazy cache variable for type metadata for TUCallCenter, &OBJC_CLASS___TUCallCenter_ptr);
  OUTLINED_FUNCTION_19_23();
  id v16 = v11;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_5_46((uint64_t)partial apply for specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A));
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_15_33(v17, v18);
  OUTLINED_FUNCTION_0_48();
}

void TUCall.isMicrophoneMuted.modify(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_46_7(a1, "isUplinkMuted");
  OUTLINED_FUNCTION_2();
}

void TUCall.isMicrophoneMuted.modify( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t TUCall.isSpeakerphoneEnabled.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v3 = OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, a2, a3);
  OUTLINED_FUNCTION_24_10(v3, &lazy cache variable for type metadata for TUCallCenter, &OBJC_CLASS___TUCallCenter_ptr);
  uint64_t v5 = v4;
  id v6 = v11;
  SPHCallCenter.onQueue<A>(_:)( specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A),  0LL,  v5);

  OUTLINED_FUNCTION_15_33(v7, v8);
  return v10;
}

id *TUCall.isSpeakerphoneEnabled.setter(char a1, uint64_t a2, uint64_t a3)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, a2, a3);
  uint64_t v5 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEC68, 17LL);
  *(_BYTE *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1 & 1;
  uint64_t v6 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEC90, 32LL);
  *(void *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in TUCall.isSpeakerphoneEnabled.setter;
  *(void *)(v6 + 24) = v5;
  OUTLINED_FUNCTION_24_10(v6, &lazy cache variable for type metadata for TUCallCenter, &OBJC_CLASS___TUCallCenter_ptr);
  OUTLINED_FUNCTION_19_23();
  swift_retain();
  SPHCallCenter.onQueue<A>(_:)( thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)specialized partial apply,  v6,  v3);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16_3();

  return OUTLINED_FUNCTION_15_33(v7, v8);
}

void closure #1 in TUCall.isSpeakerphoneEnabled.getter(void *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  id v3 = [a1 routeController];
  id v4 = [v3 speakerRoute];

  if (v4)
  {
    unsigned __int8 v5 = [v4 isCurrentlyPicked];
  }

  else
  {
    unsigned __int8 v5 = 0;
  }

  *a2 = v5;
}

void closure #1 in TUCall.isSpeakerphoneEnabled.setter(void *a1, char a2)
{
  id v4 = [a1 routeController];
  unsigned __int8 v5 = (os_log_s *)[v4 speakerRoute];
  if (v5)
  {
    uint64_t v15 = v5;
    uint64_t v6 = (os_log_s *)[v4 receiverRoute];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [a1 routeController];
      uint64_t v9 = v8;
      if ((a2 & 1) != 0) {
        unsigned __int8 v10 = v15;
      }
      else {
        unsigned __int8 v10 = v7;
      }
      [v8 pickRoute:v10];

      goto LABEL_13;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  uint64_t v15 = (os_log_s *)v4;
LABEL_13:
}

void TUCall.isSpeakerphoneEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = v3;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = TUCall.isSpeakerphoneEnabled.getter(a1, a2, a3) & 1;
  OUTLINED_FUNCTION_2();
}

id *TUCall.isSpeakerphoneEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TUCall.isSpeakerphoneEnabled.setter(*(_BYTE *)(a1 + 8), a2, a3);
}

id TUCall.isCameraEnabled.getter()
{
  return [v0 isSendingVideo];
}

void TUCall.isCameraEnabled.setter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, v12, v13);
  uint64_t v14 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FECB8, 25LL);
  OUTLINED_FUNCTION_27_24(v14);
  uint64_t v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FECE0, 32LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in TUCall.isCameraEnabled.setter;
  *(void *)(v15 + 24) = v10;
  OUTLINED_FUNCTION_24_10(v15, &lazy cache variable for type metadata for TUCallCenter, &OBJC_CLASS___TUCallCenter_ptr);
  OUTLINED_FUNCTION_19_23();
  id v16 = v11;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_5_46((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)specialized partial apply);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_15_33(v17, v18);
  OUTLINED_FUNCTION_0_48();
}

void closure #1 in TUCall.isCameraEnabled.setter(int a1, id a2, char a3)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  id v9 = a2;
  unsigned __int8 v5 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v8 = 67109120;
    unsigned int v10 = [v9 isSendingVideo];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v8 + 4);

    _os_log_impl(&dword_0, v5, v7, "#SPHCall toggled camera state to %{BOOL}d", v8, 8u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
  }

void TUCall.isCameraEnabled.modify(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_46_7(a1, "isSendingVideo");
  OUTLINED_FUNCTION_2();
}

void TUCall.isCameraEnabled.modify( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

Swift::Void __swiftcall TUCall.switchToFaceTime()()
{
  if ((OUTLINED_FUNCTION_46_7(v2, "isVideo") & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = type metadata accessor for Logger(0LL);
    uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl( &dword_0,  v14,  v7,  "#SPHCall cannot switch to FaceTime because the call is already a FaceTime call",  v8,  2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }
  }

  else
  {
    if (one-time initialization token for instance != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, v3, v4);
    uint64_t v9 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FED08, 24LL);
    OUTLINED_FUNCTION_20_24(v9);
    uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FED30, 32LL);
    *(void *)(v10 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in TUCall.switchToFaceTime();
    *(void *)(v10 + 24) = v0;
    OUTLINED_FUNCTION_24_10( v10,  &lazy cache variable for type metadata for TUCallCenter,  &OBJC_CLASS___TUCallCenter_ptr);
    OUTLINED_FUNCTION_19_23();
    id v11 = v1;
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_5_46((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)specialized partial apply);
    OUTLINED_FUNCTION_16_3();
    OUTLINED_FUNCTION_22();

    OUTLINED_FUNCTION_15_33(v12, v13);
    OUTLINED_FUNCTION_0_48();
  }

id closure #1 in TUCall.switchToFaceTime()(void *a1, void *a2)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  id v5 = a2;
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v9 = 67109120;
    unsigned int v11 = [v5 isConversation];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9 + 4);

    _os_log_impl(&dword_0, v6, v8, "#SPHCall call is conversation %{BOOL}d", v9, 8u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
  }

  return [a1 requestVideoUpgradeForCall:v5];
}

id TUCall.supportsHolding.getter()
{
  return TUCall.isFaceTime.getter((SEL *)&selRef_model, (SEL *)&selRef_supportsHolding);
}

id TUCall.isFaceTime.getter(SEL *a1, SEL *a2)
{
  id v3 = OUTLINED_FUNCTION_61_8(a1);
  id v4 = [v3 *a2];

  return v4;
}

Swift::Void __swiftcall TUCall.hold()()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, v2, v3);
  uint64_t v4 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FED58, 24LL);
  OUTLINED_FUNCTION_20_24(v4);
  uint64_t v5 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FED80, 32LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in TUCall.hold();
  *(void *)(v5 + 24) = v0;
  OUTLINED_FUNCTION_24_10(v5, &lazy cache variable for type metadata for TUCallCenter, &OBJC_CLASS___TUCallCenter_ptr);
  OUTLINED_FUNCTION_19_23();
  id v6 = v1;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_5_46((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)specialized partial apply);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_15_33(v7, v8);
  OUTLINED_FUNCTION_0_48();
}

Swift::Void __swiftcall TUCall.unhold()()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_16_27((uint64_t)static CallStateProvider.instance, v2, v3);
  uint64_t v4 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEDA8, 24LL);
  OUTLINED_FUNCTION_20_24(v4);
  uint64_t v5 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FEDD0, 32LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in TUCall.unhold();
  *(void *)(v5 + 24) = v0;
  OUTLINED_FUNCTION_24_10(v5, &lazy cache variable for type metadata for TUCallCenter, &OBJC_CLASS___TUCallCenter_ptr);
  OUTLINED_FUNCTION_19_23();
  id v6 = v1;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_5_46((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)specialized partial apply);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_15_33(v7, v8);
  OUTLINED_FUNCTION_0_48();
}

uint64_t @nonobjc TUCall.callUUID.getter()
{
  id v1 = [v0 callUUID];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

id @nonobjc TUCall.status.getter()
{
  return [v0 status];
}

id @nonobjc TUCall.isVideo.getter()
{
  return [v0 isVideo];
}

unint64_t *protocol witness for SPHCall.remoteParticipantHandles.getter in conformance TUCall()
{
  return @nonobjc TUCall.remoteParticipantHandles.getter( (SEL *)&selRef_remoteParticipantHandles,  &lazy cache variable for type metadata for TUHandle,  &OBJC_CLASS___TUHandle_ptr,  (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
}

id @nonobjc TUCall.localSenderIdentity.getter()
{
  return [v0 localSenderIdentity];
}

id @nonobjc TUCall.isConversation.getter()
{
  return [v0 isConversation];
}

void (*protocol witness for SPHCall.isMicrophoneMuted.modify in conformance TUCall( uint64_t a1))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)a1 = v1;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = [v1 isUplinkMuted];
  return TUCall.isMicrophoneMuted.modify;
}

uint64_t protocol witness for SPHCall.isSpeakerphoneEnabled.getter in conformance TUCall( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TUCall.isSpeakerphoneEnabled.getter(a1, a2, a3) & 1;
}

id *protocol witness for SPHCall.isSpeakerphoneEnabled.setter in conformance TUCall( char a1, uint64_t a2, uint64_t a3)
{
  return TUCall.isSpeakerphoneEnabled.setter(a1, a2, a3);
}

id *(*protocol witness for SPHCall.isSpeakerphoneEnabled.modify in conformance TUCall( uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = v3;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = TUCall.isSpeakerphoneEnabled.getter(a1, a2, a3) & 1;
  return TUCall.isSpeakerphoneEnabled.modify;
}

void (*protocol witness for SPHCall.isCameraEnabled.modify in conformance TUCall( uint64_t a1))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)a1 = v1;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = [v1 isSendingVideo];
  return TUCall.isCameraEnabled.modify;
}

id @nonobjc TUCall.isBlocked.getter()
{
  return [v0 isBlocked];
}

void SPHCall.isBlockedOrHasNoHandles.getter(uint64_t a1, uint64_t a2)
{
  if (((*(uint64_t (**)(void))(a2 + 168))() & 1) == 0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56));
    specialized Set.isEmpty.getter(v3);
    OUTLINED_FUNCTION_39();
  }

  OUTLINED_FUNCTION_6();
}

unint64_t protocol witness for SPHConversation.isOneToOneModeEnabled.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isOneToOneModeEnabled.getter() & 1;
}

id @nonobjc TUConversation.isOneToOneModeEnabled.getter()
{
  return [v0 isOneToOneModeEnabled];
}

unint64_t *protocol witness for SPHConversation.remoteMembers.getter in conformance TUConversation()
{
  return @nonobjc TUCall.remoteParticipantHandles.getter( (SEL *)&selRef_remoteMembers,  &lazy cache variable for type metadata for TUConversationMember,  &OBJC_CLASS___TUConversationMember_ptr,  &lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
}

unint64_t *protocol witness for SPHConversation.activeRemoteParticipants.getter in conformance TUConversation()
{
  return @nonobjc TUCall.remoteParticipantHandles.getter( (SEL *)&selRef_activeRemoteParticipants,  &lazy cache variable for type metadata for TUConversationParticipant,  &OBJC_CLASS___TUConversationParticipant_ptr,  &lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
}

unint64_t *@nonobjc TUCall.remoteParticipantHandles.getter( SEL *a1, unint64_t *a2, void *a3, unint64_t *a4)
{
  id v7 = OUTLINED_FUNCTION_61_8(a1);
  type metadata accessor for INPlayVoicemailIntent(0LL, a2, a3);
  uint64_t v9 = v8;
  uint64_t v10 = lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject(a4, a2, a3);
  static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, v9, v10);
  OUTLINED_FUNCTION_51_9();
  return a4;
}

id protocol witness for SPHConversation.localMember.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.localMember.getter();
}

id @nonobjc TUConversation.localMember.getter()
{
  return [v0 localMember];
}

BOOL specialized Set.isEmpty.getter(uint64_t a1)
{
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 >= 0) {
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v1 = __CocoaSet.count.getter(a1);
  }

  else
  {
    uint64_t v1 = *(void *)(a1 + 16);
  }

  return v1 == 0;
}

INCallRecord __swiftcall SPHCall.toINCallRecord()()
{
  uint64_t v2 = v1 - v0;
  uint64_t v3 = OUTLINED_FUNCTION_51_0();
  uint64_t v5 = v4(v3);
  uint64_t v7 = v6;
  uint64_t v8 = OUTLINED_FUNCTION_53();
  uint64_t v9 = 1LL;
  __swift_storeEnumTagSinglePayload(v2, 1LL, 1LL, v8);
  uint64_t v10 = OUTLINED_FUNCTION_51_0();
  uint64_t v12 = SPHCall.inCallRecordType.getter(v10, v11);
  uint64_t v13 = OUTLINED_FUNCTION_51_0();
  if ((v14(v13) & 1) != 0) {
    uint64_t v9 = 2LL;
  }
  uint64_t v15 = OUTLINED_FUNCTION_51_0();
  uint64_t v17 = SPHCall.inCallProvider.getter(v15, v16);
  uint64_t v18 = OUTLINED_FUNCTION_51_0();
  SPHCall.inParticipants.getter(v18, v19);
  uint64_t v21 = v20;
  id v22 = [objc_allocWithZone(NSNumber) initWithInteger:1];
  id v23 = objc_allocWithZone(&OBJC_CLASS___INCallRecord);
  @nonobjc INCallRecord.init(__identifier:dateCreated:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:participants:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)( v5,  v7,  v2,  v12,  v9,  0LL,  0LL,  v17,  v21,  v22,  0LL,  0LL,  0LL,  0LL,  0LL);
  OUTLINED_FUNCTION_7_5();
  return result;
}

uint64_t SPHCall.inCallRecordType.getter(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = (*(uint64_t (**)(void))(a2 + 16))() - 1;
  if (v2 > 3) {
    return 0LL;
  }
  else {
    return *(void *)&asc_325FA8[8 * v2];
  }
}

uint64_t SPHCall.inCallProvider.getter(uint64_t a1, uint64_t a2)
{
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2) & 1;
  }
}

void SPHCall.inParticipants.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 56))();
  uint64_t v3 = specialized Set.count.getter(v2);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v40 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    unint64_t v5 = v2 & 0xC000000000000001LL;
    if ((v2 & 0xC000000000000001LL) != 0)
    {
      if (v2 < 0) {
        uint64_t v6 = v2;
      }
      else {
        uint64_t v6 = v2 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v7 = __CocoaSet.startIndex.getter(v6);
      char v9 = 1;
    }

    else
    {
      uint64_t v7 = specialized _NativeSet.startIndex.getter(v2);
      char v9 = v10 & 1;
    }

    uint64_t v37 = v7;
    uint64_t v38 = v8;
    char v39 = v9;
    if (v4 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }

    else
    {
      type metadata accessor for INPlayVoicemailIntent( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
      uint64_t v11 = v2 & 0xFFFFFFFFFFFFFF8LL;
      if (v2 < 0) {
        uint64_t v11 = v2;
      }
      uint64_t v34 = v2;
      uint64_t v35 = v11;
      p_base_props = &CameraControlFlow.base_props;
      do
      {
        specialized Set.subscript.getter(v37, v38, v39, v2);
        uint64_t v14 = v13;
        Class isa = INPerson.init(personHandle:)((INPersonHandle)objc_msgSend(v13, (SEL)p_base_props[178])).super.isa;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        uint64_t v17 = v40[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
        uint64_t v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, isa);
        specialized ContiguousArray._endMutation()(v18);
        if (v5)
        {
          if ((v39 & 1) == 0) {
            goto LABEL_23;
          }
          uint64_t v19 = __CocoaSet.Index.handleBitPattern.getter(v37, v38);
          if (v19) {
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
          }
          else {
            uint64_t isUniquelyReferenced_nonNull_native = 1LL;
          }
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
          uint64_t v32 = (void (*)(_BYTE *, void))Set.Index._asCocoa.modify(v36, v31);
          __CocoaSet.formIndex(after:isUnique:)(v33, isUniquelyReferenced_nonNull_native, v35);
          v32(v36, 0LL);
        }

        else
        {
          uint64_t v21 = v37;
          uint64_t v22 = v38;
          char v23 = v39;
          int64_t v24 = specialized _NativeSet.index(after:)(v37, v38, v39, v2);
          uint64_t v26 = v25;
          uint64_t v27 = p_base_props;
          char v29 = v28;
          outlined consume of Set<TUHandle>.Index._Variant(v21, v22, v23);
          uint64_t v37 = v24;
          uint64_t v38 = v26;
          char v30 = v29 & 1;
          p_base_props = v27;
          unint64_t v5 = 0LL;
          uint64_t v2 = v34;
          char v39 = v30;
        }

        --v4;
      }

      while (v4);
      outlined consume of Set<TUHandle>.Index._Variant(v37, v38, v39);
      swift_bridgeObjectRelease();
    }
  }

  else
  {
    swift_bridgeObjectRelease();
  }

uint64_t specialized AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (App.isFirstParty()()) {
    return 0LL;
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 88LL))(a1, a2);
  }
}

id @nonobjc INCallRecord.init(__identifier:dateCreated:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:participants:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15)
{
  NSString v18 = String._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_62();
  uint64_t v19 = OUTLINED_FUNCTION_53();
  uint64_t v20 = OUTLINED_FUNCTION_67_0(a3);
  Class isa = 0LL;
  if ((_DWORD)v20 != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(a3, v19);
  }

  uint64_t v22 = a12;
  if (a9)
  {
    OUTLINED_FUNCTION_24_10( v20,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    v23.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }

  else
  {
    v23.super.Class isa = 0LL;
  }

  if (a12)
  {
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v24 = 0LL;
  }

  if (a14)
  {
    String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_46_12();
  }

  else
  {
    uint64_t v22 = 0LL;
  }

  id v25 = [v29 initWithIdentifier:v18 dateCreated:isa callRecordType:a4 callCapability:a5 callDuration:a6 unseen:a7 preferredCallProvider:a8 partici pants:v23.super.isa numberOfCalls:a10 providerId:v24 providerBundleId:v22 isCallerIdBlocked:a15];

  return v25;
}

void specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)( void **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = v3;
}

int64_t specialized _NativeSet.index(after:)(int64_t result, int a2, char a3, uint64_t a4)
{
  if ((a3 & 1) != 0) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (INCallRecord result = 1LL << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }

  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }

  unint64_t v8 = v7 & (-2LL << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0LL;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }

  return result;
}

void specialized Set.subscript.getter(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001LL) == 0)
  {
    if ((a3 & 1) != 0) {
      goto LABEL_13;
    }
    if (a1 < 0 || 1LL << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }

    else if (((*(void *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2) {
        goto LABEL_20;
      }
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        uint64_t v10 = __CocoaSet.Index.element.getter(v7, a2);
        uint64_t v19 = v10;
        type metadata accessor for INPlayVoicemailIntent( 0LL,  &lazy cache variable for type metadata for TUHandle,  &OBJC_CLASS___TUHandle_ptr);
        swift_unknownObjectRetain(v10);
        swift_dynamicCast(&v20, &v19, (char *)&type metadata for Swift.AnyObject + 8);
        unint64_t v4 = v20;
        swift_unknownObjectRelease(v10);
        Swift::Int v11 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
        uint64_t v12 = -1LL << *(_BYTE *)(a4 + 32);
        unint64_t v7 = v11 & ~v12;
        if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0)
        {
          id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
          char v14 = static NSObject.== infix(_:_:)(v13, v4);

          if ((v14 & 1) == 0)
          {
            uint64_t v15 = ~v12;
            do
            {
              unint64_t v7 = (v7 + 1) & v15;
              if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) == 0) {
                goto LABEL_24;
              }
              id v16 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
              char v17 = static NSObject.== infix(_:_:)(v16, v4);
            }

            while ((v17 & 1) == 0);
          }

LABEL_20:
          id v18 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
          return;
        }

uint64_t specialized _NativeSet.startIndex.getter(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  uint64_t v2 = 64LL;
  for (uint64_t i = 9LL; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64LL;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

void specialized static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)( void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v234 = a4;
  uint64_t v224 = a2;
  uint64_t v6 = type metadata accessor for Locale(0LL);
  uint64_t v236 = *(void *)(v6 - 8);
  uint64_t v237 = v6;
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v235 = v7;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v213 = v8;
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  uint64_t v231 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v230 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v227 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v226 = v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v229 = (uint64_t)&v210 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = OUTLINED_FUNCTION_53();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v233 = v19;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v210 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  NSArray v23 = (char *)&v210 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v225 = v24;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v26 = (char *)&v210 - v25;
  type metadata accessor for App(0LL);
  outlined bridged method (pb) of @objc INCallRecord.providerBundleId.getter(a1);
  uint64_t v220 = App.__allocating_init(appIdentifier:)(v27, v28);
  uint64_t v29 = specialized AppInfoBuilding.getAppNameIfThirdParty(_:requestedLocale:)(v220, (uint64_t)v234);
  if (v30)
  {
    OUTLINED_FUNCTION_41_17(v29, v30);
    OUTLINED_FUNCTION_1_34(a3, a3);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0LL, 1LL, v9);
    uint64_t v31 = OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v31 = OUTLINED_FUNCTION_157_1((uint64_t)v26, 1LL);
  }

  id v32 = OUTLINED_FUNCTION_23_24(v31, "dateCreated");
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = v233;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v35(v16, v34, v17);
    OUTLINED_FUNCTION_14(v16, 0LL);
    uint64_t v36 = OUTLINED_FUNCTION_67_0(v16);
    if ((_DWORD)v36 != 1)
    {
      v35((uint64_t)v21, v16, v17);
      goto LABEL_9;
    }
  }

  else
  {
    uint64_t v36 = OUTLINED_FUNCTION_14(v16, 1LL);
  }

  Date.init()(v36);
  outlined destroy of SpeakableString?(v16, &demangling cache variable for type metadata for Date?);
LABEL_9:
  type metadata accessor for DialogCalendar(0LL);
  uint64_t v223 = static DialogCalendar.make(date:)((uint64_t)v21);
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  if (OUTLINED_FUNCTION_23_24(v37, "callRecordType"))
  {
    uint64_t BackingType = INCallRecordTypeGetBackingType();
    switch((int)BackingType)
    {
      case 2:
        char v39 = @"OUTGOING";
        goto LABEL_21;
      case 3:
        char v39 = @"MISSED";
        goto LABEL_21;
      case 4:
        char v39 = @"RECEIVED";
        goto LABEL_21;
      case 5:
        char v39 = @"LATEST";
        goto LABEL_21;
      case 7:
        char v39 = @"VOICEMAIL";
        goto LABEL_21;
      case 8:
        char v39 = @"RINGING";
        goto LABEL_21;
      case 9:
        char v39 = @"IN_PROGRESS";
        goto LABEL_21;
      case 10:
        char v39 = @"ON_HOLD";
LABEL_21:
        uint64_t v42 = v39;
        break;
      default:
        char v39 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        break;
    }

    uint64_t v43 = v39;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    unint64_t v40 = v44;
  }

  else
  {
    unint64_t v40 = 0xE700000000000000LL;
    uint64_t v41 = 0x4E574F4E4B4E55LL;
  }

  SpeakableString.init(serializedValue:)(v41, v40);
  OUTLINED_FUNCTION_1_34(0LL, 0xE000000000000000LL);
  OUTLINED_FUNCTION_1_34(0LL, 0xE000000000000000LL);
  OUTLINED_FUNCTION_64_8();
  unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  if (v45) {
    unint64_t v47 = (unint64_t)v45;
  }
  else {
    unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v241 = (unint64_t)_swiftEmptyArrayStorage;
  if (v47 >> 62)
  {
    OUTLINED_FUNCTION_26_27();
    uint64_t v48 = OUTLINED_FUNCTION_15_4();
  }

  else
  {
    uint64_t v48 = *(void *)((char *)&dword_10 + (v47 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  uint64_t v232 = v23;
  uint64_t v233 = v9;
  uint64_t v228 = a1;
  v221 = v26;
  if (v48)
  {
    uint64_t v234 = (void *)type metadata accessor for PhonePerson(0LL);
    if (v48 < 1)
    {
      __break(1u);
      goto LABEL_94;
    }

    uint64_t v49 = 0LL;
    char v50 = v224 & 2;
    unint64_t v51 = v47 & 0xC000000000000001LL;
    uint64_t v52 = (void *)v47;
    uint64_t v53 = v48;
    do
    {
      if (v51) {
        id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v47);
      }
      else {
        id v54 = OUTLINED_FUNCTION_27_10(v47 + 8 * v49);
      }
      uint64_t v55 = v54;
      OUTLINED_FUNCTION_52_9();
      uint64_t v56 = v239;
      uint64_t v57 = v240;
      OUTLINED_FUNCTION_49_0(v238);
      uint64_t v58 = v235;
      dispatch thunk of DeviceState.siriLocale.getter(v56, v57);
      OUTLINED_FUNCTION_50_15();
      static PhonePerson.make(phonePerson:options:locale:)(v55, v50, v58);
      uint64_t v60 = v59;
      (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v58, v237);

      NSArray v23 = v232;
      if (v60)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
        unint64_t v63 = *(void *)((char *)&dword_10 + (v241 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v62 = *(void *)((char *)&dword_18 + (v241 & 0xFFFFFFFFFFFFFF8LL));
        if (v63 >= v62 >> 1) {
          OUTLINED_FUNCTION_3_25(v63 + 1, v62);
        }
        uint64_t v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v60);
        specialized Array._endMutation()(v64, v65, v66, v67);
      }

      ++v49;
      unint64_t v47 = (unint64_t)v52;
    }

    while (v53 != v49);
    OUTLINED_FUNCTION_34_0();
    uint64_t v68 = (void *)v241;
    uint64_t v9 = v233;
    unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  }

  else
  {
    OUTLINED_FUNCTION_34_0();
    uint64_t v68 = _swiftEmptyArrayStorage;
  }

  unint64_t v222 = (unint64_t)v68;
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_64_8();
  if (v69) {
    unint64_t v46 = (unint64_t)v69;
  }
  uint64_t v70 = v219;
  if (v46 >> 62)
  {
    OUTLINED_FUNCTION_35_19();
    uint64_t v71 = OUTLINED_FUNCTION_15_4();
    if (v71)
    {
LABEL_45:
      if (v71 >= 1)
      {
        uint64_t v72 = 0LL;
        uint64_t v234 = _swiftEmptyArrayStorage;
        do
        {
          if ((v46 & 0xC000000000000001LL) != 0) {
            uint64_t v73 = (void *)OUTLINED_FUNCTION_49_12(v72);
          }
          else {
            uint64_t v73 = OUTLINED_FUNCTION_27_10(v46 + 8 * v72);
          }
          uint64_t v74 = v73;
          uint64_t v75 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v73);
          if (!v76)
          {
            uint64_t v75 = 0LL;
            uint64_t v76 = 0xE000000000000000LL;
          }

          OUTLINED_FUNCTION_1_34(v75, v76);
          OUTLINED_FUNCTION_157_1((uint64_t)v23, 0LL);

          if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1LL, v9) == 1)
          {
            outlined destroy of SpeakableString?( (uint64_t)v23,  &demangling cache variable for type metadata for SpeakableString?);
          }

          else
          {
            uint64_t v77 = v230;
            OUTLINED_FUNCTION_58_9(v230, (uint64_t)v23);
            OUTLINED_FUNCTION_58_9(v70, v77);
            if ((swift_isUniquelyReferenced_nonNull_native(v234) & 1) == 0)
            {
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v234 = v81;
            }

            unint64_t v78 = v234[2];
            if (v78 >= v234[3] >> 1)
            {
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v234 = v82;
            }

            uint64_t v79 = v234;
            v234[2] = v78 + 1;
            uint64_t v80 = (uint64_t)v79
            uint64_t v9 = v233;
            OUTLINED_FUNCTION_58_9(v80, v70);
            NSArray v23 = v232;
          }

          ++v72;
        }

        while (v71 != v72);
        goto LABEL_64;
      }

LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
  }

  else
  {
    uint64_t v71 = *(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v71) {
      goto LABEL_45;
    }
  }

  uint64_t v234 = _swiftEmptyArrayStorage;
LABEL_64:
  swift_bridgeObjectRelease_n(v46, 2LL);
  if (v222 >> 62)
  {
    OUTLINED_FUNCTION_35_19();
    uint64_t v83 = OUTLINED_FUNCTION_15_4();
  }

  else
  {
    uint64_t v83 = *(void *)((char *)&dword_10 + (v222 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  if (!v83)
  {
    uint64_t v87 = OUTLINED_FUNCTION_62();
    uint64_t v88 = 0LL;
    p_base_props = &CameraControlFlow.base_props;
    goto LABEL_69;
  }

  uint64_t v84 = OUTLINED_FUNCTION_68_9();
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v84, v85, v86);
LABEL_95:
  uint64_t v88 = OUTLINED_FUNCTION_49_12(0LL);
  p_base_props = (__objc2_prop_list **)(&CameraControlFlow + 64);
  uint64_t v87 = OUTLINED_FUNCTION_62();
LABEL_69:
  uint64_t v90 = (char *)OUTLINED_FUNCTION_23_24(v87, (const char *)p_base_props[301]);
  if (v90 != (_BYTE *)&dword_4 + 1)
  {
    id v93 = OUTLINED_FUNCTION_23_24((uint64_t)v90, "preferredCallProvider");
    if (!v93)
    {
      uint64_t v96 = 0xE700000000000000LL;
      uint64_t v219 = 0x4E574F4E4B4E55LL;
      goto LABEL_83;
    }

    uint64_t v94 = INPreferredCallProviderGetBackingType(v93);
    switch((_DWORD)v94)
    {
      case 4:
        uint64_t v95 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v95 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v95 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v95 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v94));
        goto LABEL_81;
    }

    uint64_t v97 = v95;
LABEL_81:
    uint64_t v91 = v95;
    goto LABEL_82;
  }

  uint64_t v91 = @"TELEPHONY_PROVIDER";
  uint64_t v92 = @"TELEPHONY_PROVIDER";
LABEL_82:
  uint64_t v98 = v91;
  uint64_t v219 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  uint64_t v96 = v99;

LABEL_83:
  uint64_t v100 = type metadata accessor for PhoneCallRecord.Builder(0LL);
  OUTLINED_FUNCTION_15_2(v100);
  PhoneCallRecord.Builder.init()();
  id v102 = OUTLINED_FUNCTION_23_24(v101, "identifier");
  uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
  uint64_t v105 = v104;

  uint64_t v106 = v225;
  SpeakableString.init(serializedValue:)(v103, v105);
  OUTLINED_FUNCTION_11_39(v106);
  (*(void (**)(uint64_t))(v107 + 856))(v106);
  OUTLINED_FUNCTION_38_6();
  outlined destroy of SpeakableString?(v106, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v108 = *(uint64_t (**)(uint64_t))(*(void *)v102 + 872LL);
  uint64_t v109 = swift_retain();
  uint64_t v110 = v108(v109);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_31_2();
  uint64_t v111 = (*(uint64_t (**)(uint64_t))(*(void *)v110 + 888LL))(v88);
  swift_release(v110);
  OUTLINED_FUNCTION_64_8();
  uint64_t v232 = (char *)v111;
  if (!v112)
  {
    unint64_t v120 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_100;
  }

  uint64_t v113 = v112;
  if ((unint64_t)v112 >> 62)
  {
    if (v112 >= 0) {
      v112 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v112)) {
      goto LABEL_86;
    }
LABEL_99:
    OUTLINED_FUNCTION_62();
    unint64_t v120 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_100;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v120 & 0xC000000000000001LL) == 0, v120);
  if ((v120 & 0xC000000000000001LL) != 0) {
    goto LABEL_151;
  }
  for (id i = *(id *)(v120 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v120))
  {
    id v124 = i;
    swift_bridgeObjectRelease();
    uint64_t v125 = (void *)outlined bridged method (ob) of @objc INPerson.alternatives.getter(v124);
    uint64_t v126 = (uint64_t)(v125 ? v125 : _swiftEmptyArrayStorage);
LABEL_111:
    uint64_t v244 = (char *)v97;
    uint64_t v255 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v126 >> 62)
    {
      if (v126 < 0) {
        uint64_t v145 = v126;
      }
      else {
        uint64_t v145 = v126 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      uint64_t v128 = _CocoaArrayWrapper.endIndex.getter(v145);
      if (!v128)
      {
LABEL_128:
        swift_bridgeObjectRelease();
        char v144 = _swiftEmptyArrayStorage;
        goto LABEL_129;
      }
    }

    else
    {
      uint64_t v128 = *(void *)((char *)&dword_10 + (v126 & 0xFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain();
      if (!v128) {
        goto LABEL_128;
      }
    }

    type metadata accessor for PhonePerson(0LL);
    if (v128 >= 1) {
      break;
    }
    __break(1u);
LABEL_151:
    ;
  }

  uint64_t v225 = v104;
  uint64_t v129 = 0LL;
  uint64_t v130 = (uint64_t)v249;
  do
  {
    if ((v126 & 0xC000000000000001LL) != 0) {
      unint64_t v131 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v129, v126);
    }
    else {
      unint64_t v131 = *(id *)(v126 + 8 * v129 + 32);
    }
    unint64_t v132 = v131;
    static Device.current.getter(v252);
    uint64_t v133 = v253;
    uint64_t v134 = v254;
    __swift_project_boxed_opaque_existential_1(v252, v253);
    dispatch thunk of DeviceState.siriLocale.getter(v133, v134);
    __swift_destroy_boxed_opaque_existential_1(v252);
    static PhonePerson.make(phonePerson:options:locale:)(v132, 0, v130);
    uint64_t v136 = v135;
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v130, v251);

    uint64_t v12 = v247;
    if (v136)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v137);
      uint64_t v139 = *(void *)((char *)&dword_10 + (v255 & 0xFFFFFFFFFFFFFF8LL));
      uint64_t v138 = *(void *)((char *)&dword_18 + (v255 & 0xFFFFFFFFFFFFFF8LL));
      if (v139 >= v138 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v138 > 1, v139 + 1, 1LL);
      }
      id v140 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v139, v136);
      specialized Array._endMutation()(v140, v141, v142, v143);
    }

    ++v129;
  }

  while (v128 != v129);
  swift_bridgeObjectRelease();
  char v144 = (void *)v255;
  a1 = v242;
  uint64_t v104 = v225;
LABEL_129:
  swift_bridgeObjectRelease();
  id v146 = (uint64_t)v246;
  uint64_t v147 = (*(uint64_t (**)(void *))(*(void *)v246 + 904LL))(v144);
  swift_release(v146);
  swift_bridgeObjectRelease();
  uint64_t v148 = *(void (**)(char *, char *, uint64_t))(v245 + 16);
  uint64_t v149 = (uint64_t)v239;
  v148(v239, v243, v12);
  __swift_storeEnumTagSinglePayload(v149, 0LL, 1LL, v12);
  uint64_t v150 = (*(uint64_t (**)(uint64_t))(*(void *)v147 + 912LL))(v149);
  swift_release(v147);
  outlined destroy of SpeakableString?(v149, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v151 = INCallRecord.refinedCallDurationAsDouble.getter();
  LOBYTE(v149) = v152;
  type metadata accessor for PhoneCallMetrics();
  if ((v149 & 1) != 0) {
    uint64_t v153 = 0LL;
  }
  else {
    uint64_t v153 = (uint64_t)v151;
  }
  uint64_t v154 = PhoneCallMetrics.__allocating_init(timeToEstablish:duration:)(0LL, 0, v153, 0);
  uint64_t v155 = (*(uint64_t (**)(void))(*(void *)v150 + 928LL))();
  swift_release(v150);
  swift_release(v154);
  INCallRecord.refinedUnseenAsBool.getter();
  uint64_t v157 = (*(uint64_t (**)(void))(*(void *)v155 + 944LL))(v156 & 1);
  swift_release(v155);
  uint64_t v158 = [a1 callCapability];
  char v159 = (uint64_t)v232;
  uint64_t v160 = (uint64_t)v231;
  if (!v158)
  {
    uint64_t v163 = 0xE700000000000000LL;
    uint64_t v164 = (uint64_t)v229;
    uint64_t v165 = 0x4E574F4E4B4E55LL;
    goto LABEL_141;
  }

  char v161 = INCallCapabilityGetBackingType(v158);
  if ((_DWORD)v161 == 2)
  {
    uint64_t v162 = @"VIDEO_CALL";
  }

  else
  {
    if ((_DWORD)v161 != 1)
    {
      uint64_t v162 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v161));
      goto LABEL_140;
    }

    uint64_t v162 = @"AUDIO_CALL";
  }

  uint64_t v166 = v162;
LABEL_140:
  uint64_t v167 = v162;
  uint64_t v165 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
  uint64_t v163 = v168;

  uint64_t v164 = (uint64_t)v229;
LABEL_141:
  SpeakableString.init(serializedValue:)(v165, v163);
  __swift_storeEnumTagSinglePayload(v164, 0LL, 1LL, v12);
  uint64_t v169 = (*(uint64_t (**)(uint64_t))(*(void *)v157 + 952LL))(v164);
  swift_release(v157);
  outlined destroy of SpeakableString?(v164, &demangling cache variable for type metadata for SpeakableString?);
  char v170 = INCallRecord.refinedNumberOfCallsAsInt.getter();
  if ((v171 & 1) != 0) {
    char v170 = 0LL;
  }
  uint64_t v172 = specialized Double.init<A>(exactly:)((uint64_t)v170);
  uint64_t v174 = (*(uint64_t (**)(uint64_t, void))(*(void *)v169 + 968LL))(v172, v173 & 1);
  swift_release(v169);
  SpeakableString.init(print:speak:)(v233, v104, 0LL, 0LL);
  __swift_storeEnumTagSinglePayload(v160, 0LL, 1LL, v12);
  outlined init with copy of SpeakableString?((uint64_t)v235, v159);
  uint64_t v175 = App.appIdentifier.getter();
  if (v176)
  {
    uint64_t v177 = v175;
    uint64_t v178 = v176;
    swift_bridgeObjectRetain();
    uint64_t v179 = v230;
    SpeakableString.init(print:speak:)(v177, v178, 0LL, 0LL);
    __swift_storeEnumTagSinglePayload(v179, 0LL, 1LL, v12);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v179 = v230;
    __swift_storeEnumTagSinglePayload(v230, 1LL, 1LL, v12);
  }

  uint64_t v180 = v238 & 1;
  type metadata accessor for PhoneCallProvider(0LL);
  PhoneCallProvider.__allocating_init(preferredCallProvider:providerName:providerBundleId:)(v160, v159, v179);
  uint64_t v182 = v181;
  char v183 = (*(uint64_t (**)(void))(*(void *)v174 + 976LL))();
  swift_release(v174);
  swift_release(v182);
  uint64_t v184 = v242;
  INCallRecord.refinedIsCallerIDBlockedAsBool.getter();
  char v186 = (*(uint64_t (**)(void))(*(void *)v183 + 992LL))(v185 & 1);
  swift_release(v183);
  uint64_t v187 = (uint64_t)v239;
  v148(v239, v240, v12);
  __swift_storeEnumTagSinglePayload(v187, 0LL, 1LL, v12);
  uint64_t v188 = (*(uint64_t (**)(uint64_t))(*(void *)v186 + 1016LL))(v187);
  swift_release(v186);
  char v189 = outlined destroy of SpeakableString?(v187, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v190 = SpeakableString.print.getter(v189);
  static CallRecordViewUtils.generatedDisplayTextColor(callRecordType:forCallHistoryDisplay:)(v190, v191);
  swift_bridgeObjectRelease();
  id v192 = (*(uint64_t (**)(uint64_t))(*(void *)v188 + 1032LL))(v187);
  swift_release(v188);
  char v193 = outlined destroy of SpeakableString?(v187, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v194 = SpeakableString.print.getter(v193);
  static CallRecordViewUtils.generatedDisplaySymbolIcon(callRecordType:forCallHistoryDisplay:)(v194, v195);
  swift_bridgeObjectRelease();
  uint64_t v196 = (*(uint64_t (**)(uint64_t))(*(void *)v192 + 1048LL))(v187);
  swift_release(v192);
  outlined destroy of SpeakableString?(v187, &demangling cache variable for type metadata for SpeakableString?);
  static Device.current.getter(v252);
  static CallRecordViewUtils.generatedSelectedAction(callRecord:forCallHistoryDisplay:deviceState:)( v184,  v180,  v252,  v187);
  __swift_destroy_boxed_opaque_existential_1(v252);
  uint64_t v197 = (*(uint64_t (**)(uint64_t))(*(void *)v196 + 1080LL))(v187);
  swift_release(v196);
  outlined destroy of SpeakableString?(v187, &demangling cache variable for type metadata for SpeakableString?);
  static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)(v180, v187);
  uint64_t v198 = (*(uint64_t (**)(uint64_t))(*(void *)v197 + 1096LL))(v187);
  swift_release(v197);
  outlined destroy of SpeakableString?(v187, &demangling cache variable for type metadata for SpeakableString?);
  static CallRecordViewUtils.generatedActionForOpeningCallRecord(callRecord:forCallHistoryDisplay:)(v180, v187);
  uint64_t v199 = (*(uint64_t (**)(uint64_t))(*(void *)v198 + 1112LL))(v187);
  swift_release(v198);
  outlined destroy of SpeakableString?(v187, &demangling cache variable for type metadata for SpeakableString?);
  v148((char *)v187, v241, v12);
  __swift_storeEnumTagSinglePayload(v187, 0LL, 1LL, v12);
  uint64_t v200 = (*(uint64_t (**)(uint64_t))(*(void *)v199 + 1128LL))(v187);
  swift_release(v199);
  outlined destroy of SpeakableString?(v187, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v201 = INCallRecord.refinedCallDurationAsDouble.getter();
  uint64_t v203 = (*(uint64_t (**)(id, void))(*(void *)v200 + 1168LL))(v201, v202 & 1);
  swift_release(v200);
  uint64_t v204 = v236;
  uint64_t v205 = (*(uint64_t (**)(uint64_t))(*(void *)v203 + 1144LL))(v236);
  swift_release(v203);
  uint64_t v206 = specialized Sequence.compactMap<A>(_:)(v204);
  swift_bridgeObjectRelease();
  uint64_t v207 = (*(uint64_t (**)(void *))(*(void *)v205 + 1152LL))(v206);
  swift_release(v205);
  swift_bridgeObjectRelease();
  uint64_t v208 = (*(uint64_t (**)(void *))(*(void *)v207 + 1160LL))(v248);
  swift_release(v207);
  swift_bridgeObjectRelease();
  if ((v238 & 1) != 0)
  {
    uint64_t v209 = type metadata accessor for PhoneCallRecord(0LL);
    swift_allocObject(v209, *(unsigned int *)(v209 + 48), *(unsigned __int16 *)(v209 + 52));
    uint64_t v210 = swift_retain();
    PhoneCallRecord.init(builder:)(v210);
    uint64_t v212 = v211;
    uint64_t v213 = type metadata accessor for SearchCallHistoryCATs(0LL);
    uint64_t v214 = v227;
    static CATOption.defaultMode.getter(v213);
    uint64_t v215 = CATWrapper.__allocating_init(options:globals:)(v214, 0LL);
    uint64_t v216 = v226;
    static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATs:callRecord:)(v226);
    uint64_t v217 = v244;
    uint64_t v218 = (uint64_t)v228;
    uint64_t v219 = (*(uint64_t (**)(uint64_t))(*(void *)v208 + 1000LL))(v216);
    swift_release(v219);
    outlined destroy of SpeakableString?(v216, &demangling cache variable for type metadata for SpeakableString?);
    static CallRecordViewUtils.generatedDisplayCallDetail(searchCallHistoryCATs:callRecord:)(v218);
    uint64_t v220 = (*(uint64_t (**)(uint64_t))(*(void *)v208 + 1064LL))(v218);
    swift_release(v237);
    swift_release(v234);
    swift_release(v212);
    swift_release(v215);
    swift_release(v220);
    swift_release(v217);
    outlined destroy of SpeakableString?(v218, &demangling cache variable for type metadata for SpeakableString?);
  }

  else
  {
    swift_release(v237);
    swift_release(v234);
    swift_release(v244);
  }

  v221 = (uint64_t)v235;
  unint64_t v222 = *(void (**)(char *, uint64_t))(v245 + 8);
  v222(v241, v12);
  v222(v240, v12);
  v222(v243, v12);
  outlined destroy of SpeakableString?(v221, &demangling cache variable for type metadata for SpeakableString?);
  return v208;
}

LABEL_86:
  uint64_t v114 = OUTLINED_FUNCTION_68_9();
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v114, v115, v116);
  if (v102) {
    goto LABEL_137;
  }
  for (id i = *(id *)(v113 + 32); ; id i = (id)OUTLINED_FUNCTION_49_12(0LL))
  {
    uint64_t v118 = i;
    OUTLINED_FUNCTION_62();
    uint64_t v119 = (void *)outlined bridged method (ob) of @objc INPerson.alternatives.getter(v118);
    unint64_t v120 = (unint64_t)(v119 ? v119 : _swiftEmptyArrayStorage);
LABEL_100:
    uint64_t v230 = v88;
    unint64_t v241 = (unint64_t)_swiftEmptyArrayStorage;
    if (v120 >> 62)
    {
      OUTLINED_FUNCTION_26_27();
      uint64_t v121 = OUTLINED_FUNCTION_15_4();
      if (!v121)
      {
LABEL_114:
        OUTLINED_FUNCTION_34_0();
        __int128 v137 = _swiftEmptyArrayStorage;
        goto LABEL_115;
      }
    }

    else
    {
      uint64_t v121 = *(void *)((char *)&dword_10 + (v120 & 0xFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain();
      if (!v121) {
        goto LABEL_114;
      }
    }

    type metadata accessor for PhonePerson(0LL);
    if (v121 >= 1) {
      break;
    }
    __break(1u);
LABEL_137:
    ;
  }

  uint64_t v211 = v96;
  uint64_t v122 = 0LL;
  uint64_t v123 = v235;
  do
  {
    if ((v120 & 0xC000000000000001LL) != 0) {
      id v124 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v122, v120);
    }
    else {
      id v124 = OUTLINED_FUNCTION_27_10(v120 + 8 * v122);
    }
    uint64_t v125 = v124;
    OUTLINED_FUNCTION_52_9();
    uint64_t v126 = v239;
    uint64_t v127 = v240;
    OUTLINED_FUNCTION_49_0(v238);
    dispatch thunk of DeviceState.siriLocale.getter(v126, v127);
    OUTLINED_FUNCTION_50_15();
    static PhonePerson.make(phonePerson:options:locale:)(v125, 0, v123);
    uint64_t v129 = v128;
    (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v123, v237);

    uint64_t v9 = v233;
    if (v129)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v130);
      unint64_t v132 = *(void *)((char *)&dword_10 + (v241 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v131 = *(void *)((char *)&dword_18 + (v241 & 0xFFFFFFFFFFFFFF8LL));
      if (v132 >= v131 >> 1) {
        OUTLINED_FUNCTION_3_25(v132 + 1, v131);
      }
      uint64_t v133 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v132, v129);
      specialized Array._endMutation()(v133, v134, v135, v136);
    }

    ++v122;
  }

  while (v121 != v122);
  OUTLINED_FUNCTION_34_0();
  __int128 v137 = (void *)v241;
  uint64_t v96 = v211;
LABEL_115:
  OUTLINED_FUNCTION_34_0();
  (*(void (**)(void *))(*(void *)v232 + 904LL))(v137);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_39();
  uint64_t v138 = v225;
  OUTLINED_FUNCTION_59_11(v225, v229);
  OUTLINED_FUNCTION_11_39(v138);
  (*(void (**)(uint64_t))(v139 + 912))(v138);
  OUTLINED_FUNCTION_38_6();
  outlined destroy of SpeakableString?(v138, &demangling cache variable for type metadata for SpeakableString?);
  id v140 = INCallRecord.refinedCallDurationAsDouble.getter();
  LOBYTE(v13__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v141;
  type metadata accessor for PhoneCallMetrics();
  if ((v138 & 1) != 0) {
    uint64_t v142 = 0LL;
  }
  else {
    uint64_t v142 = (uint64_t)v140;
  }
  PhoneCallMetrics.__allocating_init(timeToEstablish:duration:)(0LL, 0, v142, 0);
  uint64_t v143 = OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*v137 + 928LL));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16_3();
  INCallRecord.refinedUnseenAsBool.getter();
  (*(void (**)(void))(*(void *)v143 + 944LL))(v144 & 1);
  uint64_t v145 = OUTLINED_FUNCTION_31_2();
  id v146 = OUTLINED_FUNCTION_23_24(v145, "callCapability");
  uint64_t v147 = v218;
  uint64_t v148 = v217;
  if (!v146)
  {
    uint64_t v151 = 0xE700000000000000LL;
    uint64_t v152 = v215;
    uint64_t v153 = 0x4E574F4E4B4E55LL;
    goto LABEL_127;
  }

  uint64_t v149 = INCallCapabilityGetBackingType(v146);
  if ((_DWORD)v149 == 2)
  {
    uint64_t v150 = @"VIDEO_CALL";
  }

  else
  {
    if ((_DWORD)v149 != 1)
    {
      uint64_t v150 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v149));
      goto LABEL_126;
    }

    uint64_t v150 = @"AUDIO_CALL";
  }

  uint64_t v154 = v150;
LABEL_126:
  uint64_t v155 = v150;
  uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)(v155);
  uint64_t v151 = v156;

  uint64_t v152 = v215;
LABEL_127:
  SpeakableString.init(serializedValue:)(v153, v151);
  OUTLINED_FUNCTION_11_39(v152);
  (*(void (**)(uint64_t))(v157 + 952))(v152);
  OUTLINED_FUNCTION_38_6();
  outlined destroy of SpeakableString?(v152, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v158 = INCallRecord.refinedNumberOfCallsAsInt.getter();
  if ((v159 & 1) != 0) {
    uint64_t v158 = 0LL;
  }
  uint64_t v160 = specialized Double.init<A>(exactly:)((uint64_t)v158);
  uint64_t v162 = (*(uint64_t (**)(uint64_t, void))(*(void *)v151 + 968LL))(v160, v161 & 1);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_1_34(v219, v96);
  OUTLINED_FUNCTION_157_1(v148, 0LL);
  outlined init with copy of SpeakableString?((uint64_t)v221, v147);
  uint64_t v163 = v220;
  uint64_t v164 = App.appIdentifier.getter();
  if (v165)
  {
    OUTLINED_FUNCTION_41_17(v164, v165);
    uint64_t v166 = v216;
    OUTLINED_FUNCTION_1_34(v163, v151);
    __swift_storeEnumTagSinglePayload(v166, 0LL, 1LL, v9);
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v166 = v216;
    OUTLINED_FUNCTION_157_1(v216, 1LL);
  }

  type metadata accessor for PhoneCallProvider(0LL);
  PhoneCallProvider.__allocating_init(preferredCallProvider:providerName:providerBundleId:)(v148, v147, v166);
  uint64_t v168 = v167;
  uint64_t v169 = OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v162 + 976LL));
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_22();
  INCallRecord.refinedIsCallerIDBlockedAsBool.getter();
  (*(void (**)(void))(*(void *)v169 + 992LL))(v170 & 1);
  OUTLINED_FUNCTION_77_0();
  uint64_t v171 = v225;
  OUTLINED_FUNCTION_59_11(v225, v226);
  OUTLINED_FUNCTION_11_39(v171);
  OUTLINED_FUNCTION_60_12(*(uint64_t (**)(uint64_t))(v172 + 1016));
  OUTLINED_FUNCTION_38_6();
  uint64_t v173 = OUTLINED_FUNCTION_4_48();
  uint64_t v174 = SpeakableString.print.getter(v173);
  static CallRecordViewUtils.generatedDisplayTextColor(callRecordType:forCallHistoryDisplay:)(v174, v175);
  OUTLINED_FUNCTION_62();
  uint64_t v176 = OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v168 + 1032LL));
  OUTLINED_FUNCTION_22();
  uint64_t v177 = OUTLINED_FUNCTION_4_48();
  uint64_t v178 = SpeakableString.print.getter(v177);
  uint64_t v180 = v179;
  static CallRecordViewUtils.generatedDisplaySymbolIcon(callRecordType:forCallHistoryDisplay:)(v178, v179);
  OUTLINED_FUNCTION_39();
  uint64_t v181 = (*(uint64_t (**)(uint64_t))(*(void *)v176 + 1048LL))(v171);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_4_48();
  OUTLINED_FUNCTION_52_9();
  uint64_t v182 = (void *)OUTLINED_FUNCTION_38_17();
  static CallRecordViewUtils.generatedSelectedAction(callRecord:forCallHistoryDisplay:deviceState:)( v182,  v183,  v184,  v185);
  OUTLINED_FUNCTION_50_15();
  OUTLINED_FUNCTION_60_12(*(uint64_t (**)(uint64_t))(*(void *)v181 + 1080LL));
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_4_48();
  OUTLINED_FUNCTION_38_17();
  static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)(v186, v187);
  uint64_t v188 = OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v180 + 1096LL));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_4_48();
  OUTLINED_FUNCTION_38_17();
  static CallRecordViewUtils.generatedActionForOpeningCallRecord(callRecord:forCallHistoryDisplay:)(v189, v190);
  OUTLINED_FUNCTION_60_12(*(uint64_t (**)(uint64_t))(*(void *)v188 + 1112LL));
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_4_48();
  OUTLINED_FUNCTION_59_11(v171, v227);
  OUTLINED_FUNCTION_157_1(v171, 0LL);
  uint64_t v191 = OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v180 + 1128LL));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_4_48();
  id v192 = INCallRecord.refinedCallDurationAsDouble.getter();
  uint64_t v194 = (*(uint64_t (**)(id, void))(*(void *)v191 + 1168LL))(v192, v193 & 1);
  OUTLINED_FUNCTION_16_3();
  uint64_t v195 = v222;
  (*(void (**)(unint64_t))(*(void *)v194 + 1144LL))(v222);
  OUTLINED_FUNCTION_38_6();
  specialized Sequence.compactMap<A>(_:)(v195);
  OUTLINED_FUNCTION_46_12();
  uint64_t v196 = OUTLINED_FUNCTION_13_30(*(uint64_t (**)(void))(*(void *)v180 + 1152LL));
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  uint64_t v197 = (*(uint64_t (**)(void *))(*(void *)v196 + 1160LL))(v234);
  swift_release(v196);
  OUTLINED_FUNCTION_39();
  if ((v224 & 1) != 0)
  {
    uint64_t v198 = type metadata accessor for PhoneCallRecord(0LL);
    OUTLINED_FUNCTION_15_2(v198);
    uint64_t v199 = swift_retain();
    PhoneCallRecord.init(builder:)(v199);
    uint64_t v201 = v200;
    uint64_t v202 = type metadata accessor for SearchCallHistoryCATs(0LL);
    uint64_t v203 = v213;
    static CATOption.defaultMode.getter(v202);
    CATWrapper.__allocating_init(options:globals:)(v203, 0LL);
    uint64_t v204 = v212;
    static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATs:callRecord:)(v212);
    uint64_t v205 = v230;
    uint64_t v206 = v214;
    uint64_t v207 = OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v197 + 1000LL));
    swift_release(v207);
    outlined destroy of SpeakableString?(v204, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_51_0();
    static CallRecordViewUtils.generatedDisplayCallDetail(searchCallHistoryCATs:callRecord:)(v208);
    OUTLINED_FUNCTION_70_8(*(uint64_t (**)(void))(*(void *)v197 + 1064LL));
    OUTLINED_FUNCTION_45_14((uint64_t)&v243);
    OUTLINED_FUNCTION_45_14((uint64_t)&v242);
    swift_release(v201);
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_22();
    swift_release(v205);
    outlined destroy of SpeakableString?(v206, &demangling cache variable for type metadata for SpeakableString?);
  }

  else
  {
    OUTLINED_FUNCTION_45_14((uint64_t)&v243);
    OUTLINED_FUNCTION_45_14((uint64_t)&v242);
    swift_release(v230);
  }

  uint64_t v209 = (uint64_t)v221;
  OUTLINED_FUNCTION_69_10(v227);
  OUTLINED_FUNCTION_69_10(v226);
  OUTLINED_FUNCTION_69_10(v229);
  outlined destroy of SpeakableString?(v209, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

        __break(1u);
        goto LABEL_87;
      }

      __break(1u);
      goto LABEL_86;
    }

    OUTLINED_FUNCTION_77_0();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v190 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v190, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_48_0();
    uint64_t v191 = OUTLINED_FUNCTION_124();
    id v192 = (os_log_s *)Logger.logObject.getter(v191);
    uint64_t v194 = static os_log_type_t.debug.getter(v192, v193);
    uint64_t v195 = os_log_type_enabled(v192, v194);
    uint64_t v84 = v323;
    v278 = *(void **)(v323 + 240);
    uint64_t v287 = *(void *)(v323 + 256);
    uint64_t v196 = *(void **)(v323 + 216);
    uint64_t v197 = *(void *)(v323 + 208);
    uint64_t v198 = *(void *)(v323 + 184);
    uint64_t v199 = *(void *)(v323 + 192);
    uint64_t v310 = *(void *)(v323 + 152);
    typea = *(void **)(v323 + 232);
    uint64_t v296 = *(void **)(v323 + 224);
    uint64_t v304 = *(void *)(v323 + 120);
    uint64_t v320 = *(void *)(v323 + 160);
    if (v195)
    {
      uint64_t v257 = *(void *)(v323 + 208);
      uint64_t v200 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v201 = (void *)OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v324 = v201;
      *(_DWORD *)uint64_t v200 = 136315394;
      uint64_t v246 = v198;
      OUTLINED_FUNCTION_48_0();
      *(void *)(v323 + 64) = OUTLINED_FUNCTION_64_25(v38.value._countAndFlagsBits, v202, (uint64_t *)&v324);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v321, v323 + 72, v200 + 4);
      OUTLINED_FUNCTION_149_0();
      *(_WORD *)(v200 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v203 = OUTLINED_FUNCTION_124();
      uint64_t v204 = Array.description.getter(v203, &type metadata for String);
      uint64_t v206 = v205;
      OUTLINED_FUNCTION_4_1();
      *(void *)(v323 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v204, v206, (uint64_t *)&v324);
      OUTLINED_FUNCTION_87_1(v323 + 72, v323 + 80, v207, v200 + 22);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_28_16();
      OUTLINED_FUNCTION_12_35( &dword_0,  v192,  v194,  "#PhoneAppResolutionLogger:emitAndLinkABEvaluationMessage can't find predicted app:%s from candidate list:%s. Not logging to SELF");
      swift_arrayDestroy(v201, 2LL);
      uint64_t v208 = (uint64_t)v201;
      uint64_t v84 = v323;
      OUTLINED_FUNCTION_0_2(v208);
      OUTLINED_FUNCTION_0_2(v200);

      swift_release(v287);
      OUTLINED_FUNCTION_22_58( v209,  v210,  v211,  v212,  v213,  v214,  v215,  v216,  v229,  v246,  v257,  v199,  (uint64_t)v278,  v287,  (uint64_t)v296,  v304,  v310,  typea);
      OUTLINED_FUNCTION_10_68(v311);
      OUTLINED_FUNCTION_10_68(v320);
      (*(void (**)(uint64_t, uint64_t))(v268 + 8))(v258, v247);
    }

    else
    {

      OUTLINED_FUNCTION_28_16();
      OUTLINED_FUNCTION_26_4();
      swift_release(v287);

      OUTLINED_FUNCTION_22_58( v217,  v218,  v219,  v220,  v221,  v222,  v223,  v224,  v229,  v237,  v248,  v259,  (uint64_t)v278,  v287,  (uint64_t)v296,  v304,  v310,  typea);
      OUTLINED_FUNCTION_10_68(v312);
      OUTLINED_FUNCTION_10_68(v320);
      (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v197, v198);
    }
  }

  else
  {
    OUTLINED_FUNCTION_77_0();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v84 = v323;
    uint64_t v85 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v85, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_48();
    uint64_t v86 = OUTLINED_FUNCTION_124();
    uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
    uint64_t v89 = static os_log_type_t.debug.getter(v87, v88);
    LODWORD(v280) = v89;
    uint64_t v90 = os_log_type_enabled(v87, v89);
    uint64_t v305 = *(void **)(v323 + 232);
    type = *(void **)(v323 + 240);
    uint64_t v91 = *(void **)(v323 + 216);
    uint64_t v288 = *(void *)(v323 + 256);
    uint64_t v298 = *(void **)(v323 + 224);
    uint64_t v92 = *(void *)(v323 + 208);
    id v93 = *(void *)(v323 + 184);
    uint64_t v94 = *(void *)(v323 + 192);
    uint64_t v95 = *(void *)(v323 + 160);
    uint64_t v318 = *(void *)(v323 + 152);
    if (v90)
    {
      v270 = *(void *)(v323 + 160);
      uint64_t v96 = (uint64_t *)(v323 + 24);
      uint64_t v230 = v323 + 40;
      uint64_t v97 = (uint64_t *)(v323 + 32);
      uint64_t v260 = *(void *)(v323 + 184);
      uint64_t v98 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v249 = v94;
      uint64_t v99 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v324 = (void *)v99;
      *(_DWORD *)uint64_t v98 = 136315394;
      uint64_t v100 = App.appIdentifier.getter();
      if (v101)
      {
        id v102 = v101;
      }

      else
      {
        uint64_t v100 = 7104878LL;
        id v102 = 0xE300000000000000LL;
      }

      uint64_t v238 = v92;
      *uint64_t v96 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v100, v102, (uint64_t *)&v324);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v96, v97, v98 + 4);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_65();
      *(_WORD *)(v98 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v103 = OUTLINED_FUNCTION_124();
      uint64_t v104 = Array.description.getter(v103, &type metadata for String);
      uint64_t v106 = v105;
      OUTLINED_FUNCTION_4_1();
      *uint64_t v97 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v104, v106, (uint64_t *)&v324);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, v230, v98 + 14);
      uint64_t v84 = v323;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_28_16();
      OUTLINED_FUNCTION_12_35( &dword_0,  v87,  (os_log_type_t)v280,  "#PhoneAppResolutionLogger:emitAndLinkABEvaluationMessage can't find chosen app:%s from candidate list:%s. Not logging to SELF");
      swift_arrayDestroy(v99, 2LL);
      OUTLINED_FUNCTION_0_2(v99);
      OUTLINED_FUNCTION_0_2(v98);

      OUTLINED_FUNCTION_22_58( v107,  v108,  v109,  v110,  v111,  v112,  v113,  v114,  v230,  v238,  v249,  v260,  v270,  v280,  v288,  (uint64_t)v298,  (uint64_t)v305,  type);
      OUTLINED_FUNCTION_53_30(v115, v116, v117, v118, v119, v120, v121, v122, v231, v239, v250, v261, v271, v281, v289);

      OUTLINED_FUNCTION_52_29( v123,  v124,  v125,  v126,  v127,  v128,  v129,  v130,  v232,  v240,  v251,  v262,  v272,  v282,  v290,  (uint64_t)v299,  v306);
      OUTLINED_FUNCTION_10_68(v318);
      OUTLINED_FUNCTION_10_68(v273);
      (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v241, v263);
    }

    else
    {

      OUTLINED_FUNCTION_53_30(v131, v132, v133, v134, v135, v136, v137, v138, v229, v237, v248, v259, v269, v280, v288);
      OUTLINED_FUNCTION_52_29( v139,  v140,  v141,  v142,  v143,  v144,  v145,  v146,  v233,  v242,  v253,  v264,  v274,  v283,  v291,  (uint64_t)v298,  v305);
      OUTLINED_FUNCTION_28_16();
      uint64_t v147 = OUTLINED_FUNCTION_19_65();
      OUTLINED_FUNCTION_22_58( v147,  v148,  v149,  v150,  v151,  v152,  v153,  v154,  v234,  v243,  v254,  v265,  v275,  v284,  v292,  v300,  v307,  type);
      OUTLINED_FUNCTION_10_68(v318);
      OUTLINED_FUNCTION_10_68(v95);
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v92, v93);
    }
  }

uint64_t sub_10DCA4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id partial apply for closure #1 in TUCall.conversation.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return closure #1 in TUCall.conversation.getter(a1, *(void *)(v2 + 16), a2);
}

void *partial apply for specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)@<X0>( void *a1@<X0>, void *a2@<X8>)
{
  INCallRecord result = (*(void *(**)(uint64_t *__return_ptr, void))(v2 + 16))(&v5, *a1);
  *a2 = v5;
  return result;
}

id partial apply for closure #1 in TUCall.isMicrophoneMuted.setter()
{
  return [*(id *)(v0 + 16) setUplinkMuted:*(unsigned __int8 *)(v0 + 24)];
}

void partial apply for specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)( void *a1)
{
}

uint64_t sub_10DD40()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

void partial apply for closure #1 in TUCall.isSpeakerphoneEnabled.setter(void *a1)
{
}

uint64_t sub_10DD58()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10DD7C()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void partial apply for closure #1 in TUCall.isCameraEnabled.setter(int a1)
{
}

id partial apply for closure #1 in TUCall.switchToFaceTime()(void *a1)
{
  return closure #1 in TUCall.switchToFaceTime()(a1, *(void **)(v1 + 16));
}

id partial apply for closure #1 in TUCall.hold()(void *a1)
{
  return [a1 holdCall:*(void *)(v1 + 16)];
}

id partial apply for closure #1 in TUCall.unhold()(void *a1)
{
  return [a1 unholdCall:*(void *)(v1 + 16)];
}

void sub_10DDD4(_BYTE *a1@<X8>)
{
  *a1 = TUCall.isMicrophoneMuted.getter() & 1;
  OUTLINED_FUNCTION_2();
}

void sub_10DDFC( unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10DE1C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  *a4 = TUCall.isSpeakerphoneEnabled.getter(a1, a2, a3) & 1;
  OUTLINED_FUNCTION_2();
}

id *sub_10DE40(char *a1, uint64_t a2, uint64_t a3)
{
  return TUCall.isSpeakerphoneEnabled.setter(*a1, a2, a3);
}

void sub_10DE58(_BYTE *a1@<X8>)
{
  *a1 = TUCall.isCameraEnabled.getter() & 1;
  OUTLINED_FUNCTION_2();
}

void sub_10DE80( unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject( unint64_t *a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for INPlayVoicemailIntent(255LL, a2, a3);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t outlined consume of Set<TUHandle>.Index._Variant(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_4_48()
{
  return outlined destroy of SpeakableString?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_39(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v1);
}

id *OUTLINED_FUNCTION_15_33(uint64_t a1, uint64_t a2, ...)
{
  return outlined destroy of CallStateProvider((id *)va);
}

uint64_t OUTLINED_FUNCTION_16_27(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return outlined init with copy of CallStateProvider(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_18_32(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

id OUTLINED_FUNCTION_19_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_24(uint64_t result)
{
  *(void *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  return result;
}

id OUTLINED_FUNCTION_23_24(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t OUTLINED_FUNCTION_26_27()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_35_19()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_38_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_17(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

uint64_t OUTLINED_FUNCTION_45_14@<X0>(uint64_t a1@<X8>)
{
  return swift_release(*(void *)(a1 - 256));
}

uint64_t OUTLINED_FUNCTION_46_12()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_49_12(uint64_t a1)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_50_15()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0 - 136));
}

void OUTLINED_FUNCTION_51_9()
{
}

uint64_t OUTLINED_FUNCTION_52_9()
{
  return static Device.current.getter();
}

  ;
}

void OUTLINED_FUNCTION_56_9( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t OUTLINED_FUNCTION_58_9(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_59_11(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_60_12@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  return a1(v1);
}

id OUTLINED_FUNCTION_61_8(SEL *a1)
{
  return [v1 *a1];
}

uint64_t OUTLINED_FUNCTION_62_8()
{
  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_68_9()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_69_10(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_70_8@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

void static StartCallViewBuilders.makeDefaultDisambiguationBuilder<A>(app:intent:parameterName:disambiguationList:deviceIsLocked:sharedGlobals:displayTextCats:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27)
{
  a26 = v29;
  a27 = v30;
  uint64_t v32 = v31;
  uint64_t v59 = v33;
  char v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v48 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v48, (uint64_t)static Logger.siriPhone);
  os_log_type_t v49 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_35_3(v49))
  {
    uint64_t v58 = v43;
    uint64_t v50 = v39;
    uint64_t v51 = v37;
    uint64_t v52 = v32;
    uint64_t v53 = v41;
    char v54 = v35;
    uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v55 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v27, v28, "#StartCallViewBuilders Providing DefaultDisambiguationBuilder", v55);
    uint64_t v56 = (uint64_t)v55;
    char v35 = v54;
    uint64_t v41 = v53;
    uint64_t v32 = v52;
    uint64_t v37 = v51;
    uint64_t v39 = v50;
    uint64_t v43 = v58;
    OUTLINED_FUNCTION_0_2(v56);
  }

  outlined init with copy of SignalProviding(v59, (uint64_t)&a12);
  *(void *)uint64_t v47 = v45;
  *(void *)(v47 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v43;
  *(void *)(v47 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v41;
  *(void *)(v47 + 24) = v39;
  *(void *)(v47 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v37;
  *(_BYTE *)(v47 + 40) = v35 & 1;
  outlined init with take of AppSelectionSignalComponent(&a12, v47 + 48);
  *(void *)(v47 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v32;
  swift_retain();
  id v57 = v43;
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_3_51();
}

uint64_t DefaultDisambiguationBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v5 = SiriKitDisambiguationList.disambiguationItems.getter(a1);
  uint64_t v6 = v2[9];
  uint64_t v7 = v2[10];
  __swift_project_boxed_opaque_existential_1(v2 + 6, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v19, v6, v7);
  uint64_t v8 = v20;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  char v9 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v8);
  uint64_t v10 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForWatch(disambiguationItems:textToSpeechIsEnabled:)( v5,  v9 & 1);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v19);
  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v12 = v2[9];
  uint64_t v11 = v2[10];
  __swift_project_boxed_opaque_existential_1(v2 + 6, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v19, v12, v11);
  uint64_t v13 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v19);
  __swift_destroy_boxed_opaque_existential_1(v19);
  uint64_t v14 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a1);
  swift_release(v13);
  uint64_t v15 = dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(v10);
  uint64_t v16 = swift_release(v14);
  uint64_t v17 = dispatch thunk of SiriKitAceViewBuilder.build()(v16);
  swift_release(v15);
  a2(v17, 0LL);

  return swift_bridgeObjectRelease();
}

uint64_t DefaultDisambiguationBuilder.makeViewsForMac(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v5 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForMac(disambiguationItems:deviceIsLocked:)();
  swift_bridgeObjectRelease();
  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v7 = v2[9];
  uint64_t v6 = v2[10];
  __swift_project_boxed_opaque_existential_1(v2 + 6, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v14, v7, v6);
  uint64_t v8 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v14);
  __swift_destroy_boxed_opaque_existential_1(v14);
  uint64_t v9 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a1);
  swift_release(v8);
  uint64_t v10 = dispatch thunk of SiriKitAceViewBuilder.withDisambiguationList(disambiguationList:)(v5);
  uint64_t v11 = swift_release(v9);
  uint64_t v12 = dispatch thunk of SiriKitAceViewBuilder.build()(v11);
  swift_release(v10);
  a2(v12, 0LL);

  return swift_bridgeObjectRelease();
}

uint64_t DefaultDisambiguationBuilder.makeViewsForCar(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void))
{
  unint64_t v4 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForCarPlay(disambiguationItems:deviceIsLocked:)();
  swift_bridgeObjectRelease();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v6 = swift_allocObject(v5, 40LL, 7LL);
  *(_OWORD *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  uint64_t v16 = v6;
  specialized Array._endMutation()(v6, v7, v8, v9);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v14 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    id v15 = v4;
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)(v13, v14);
    swift_bridgeObjectRelease();
  }

  else
  {
    id v10 = v4;
    uint64_t v11 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
  }

  specialized Array.append<A>(contentsOf:)();
  a2(v16, 0LL);

  return swift_bridgeObjectRelease();
}

void specialized DefaultDisambiguationBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2)
{
}

void specialized DefaultDisambiguationBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1)
{
}

#error "10E740: call analysis failed (funcsize=99)"
void specialized DefaultDisambiguationBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2)
{
  specialized DefaultDisambiguationBuilder.makeViewsForIOS(utteranceViews:_:)(a1, a2);
  OUTLINED_FUNCTION_120();
}

#error "10E914: call analysis failed (funcsize=102)"
uint64_t DefaultDisambiguationBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1,  void (*a2)(uint64_t, void),  uint64_t a3,  uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  os_log_s *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v35[5];
  uint64_t v5 = v4;
  while (1)
  {
    do
    {
      uint64_t v7 = v5[2];
      uint64_t v8 = (void *)v5[3];
      swift_bridgeObjectRetain();
      v9._uint64_t countAndFlagsBits = v7;
      v9._object = v8;
      v10.value = PhoneCallSlotNames.init(rawValue:)(v9).value;
      uint64_t v11 = SiriKitDisambiguationList.rawItems.getter();
      uint64_t v12 = specialized _arrayConditionalCast<A, B>(_:)(v11);
      swift_bridgeObjectRelease();
    }

    while (!v12);
    if (v10.value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_unknownDefault) {
      goto LABEL_14;
    }
    uint64_t v13 = PhoneCallSlotNames.rawValue.getter(v10.value);
    if (v13 == 0x746361746E6F63LL && v14 == 0xE700000000000000LL) {
      break;
    }
    uint64_t v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0x746361746E6F63LL, 0xE700000000000000LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0) {
      goto LABEL_16;
    }
    uint64_t v17 = PhoneCallSlotNames.rawValue.getter(v10.value);
    if (v17 == 0x73746361746E6F63LL && v18 == 0xE800000000000000LL) {
      break;
    }
    uint64_t v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, 0x73746361746E6F63LL, 0xE800000000000000LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0) {
      goto LABEL_16;
    }
LABEL_14:
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
LABEL_16:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  NSArray v23 = (os_log_s *)Logger.logObject.getter(v22);
  uint64_t v25 = static os_log_type_t.debug.getter(v23, v24);
  if (os_log_type_enabled(v23, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl( &dword_0,  v23,  v25,  "#DefaultDisambiguationBuilder Prepending header items for contact handle disambiguation",  v26,  2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t v27 = v5[9];
  os_log_type_t v28 = v5[10];
  __swift_project_boxed_opaque_existential_1(v5 + 6, v27);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v35, v27, v28);
  uint64_t v29 = PhoneContactDisambiguationHeaderItemFactory.makeHeaderItems(persons:)((uint64_t)v12);
  uint64_t v30 = outlined destroy of PhoneContactDisambiguationHeaderItemFactory((uint64_t)v35);
  SiriKitDisambiguationList.disambiguationItems.getter(v30);
  v35[0] = (uint64_t)v29;
  specialized Array.append<A>(contentsOf:)();
  uint64_t v31 = DefaultDisambiguationBuilder.makeViewsForIOSDisambiguation(utteranceViews:disambiguationItems:persons:)( a1,  v35[0],  (uint64_t)v12,  a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a2(v31, 0LL);
  return swift_bridgeObjectRelease();
}

void specialized DefaultDisambiguationBuilder.makeViewsForIOSDisambiguation(utteranceViews:disambiguationItems:persons:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)v3;
  uint64_t v7 = OUTLINED_FUNCTION_29_23();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = v3 + 48;
  uint64_t v13 = static PicsUtils.shouldUsePicsDisambiguationFormat(persons:sharedGlobals:)(a3);
  if ((v13 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v14, (uint64_t)static Logger.siriPhone);
    os_log_type_t v15 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled((os_log_t)v3, v15))
    {
      uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v16 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v3,  v15,  "#DefaultDisambiguationBuilder use mixed card section for PICS",  v16);
      uint64_t v12 = v3 + 48;
      OUTLINED_FUNCTION_0_2((uint64_t)v16);
    }

    uint64_t v17 = v3[40];
    OUTLINED_FUNCTION_25_30(v18, enum case for ImageSize.contactDisambiguation(_:));
    type metadata accessor for SiriKitDisambiguationItem(0LL);
    uint64_t v19 = dispatch thunk of static SiriKitDisambiguationItem.allowedItems(disambiguationItems:deviceLockedForDisambiguation:)( v4,  v17);
    uint64_t v20 = static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( v19,  v17,  (uint64_t)v12,  a3);
    uint64_t v21 = OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_49( v21,  (unint64_t *)&lazy cache variable for type metadata for SACardSnippet,  &OBJC_CLASS___SACardSnippet_ptr);
    uint64_t v22 = (void *)static SACardSnippet.makeFromCardSections(cardSections:shouldGenerateAceId:)(v20, 1LL);
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_51_10();
  }

  else
  {
    uint64_t v23 = v3[40];
    OUTLINED_FUNCTION_25_30(v13, enum case for ImageSize.contactDisambiguation(_:));
    uint64_t v22 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)( v4,  v23,  v11);
  }

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  uint64_t v25 = *v5;
  uint64_t v24 = (void *)v5[1];
  uint64_t v26 = v5[9];
  uint64_t v27 = v5[10];
  __swift_project_boxed_opaque_existential_1(v12, v26);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v27 + 8))(v45, v26, v27);
  uint64_t v28 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( v25,  (uint64_t)[v24 preferredCallProvider],  v45);
  OUTLINED_FUNCTION_49(v28, &lazy cache variable for type metadata for SAUISash, &OBJC_CLASS___SAUISash_ptr);
  SAUISash.init(app:)(v28);
  uint64_t v30 = v29;
  __swift_destroy_boxed_opaque_existential_1(v45);
  OUTLINED_FUNCTION_17_6(v22, "setSash:");

  uint64_t v31 = v5[2];
  uint64_t v32 = (void *)v5[3];
  uint64_t v33 = SiriKitDisambiguationList.rawItems.getter();
  os_log_type_t v34 = v33;
  uint64_t v35 = specialized DefaultDisambiguationBuilder.shouldShowOpenContactsAppButton(parameterName:rawItems:)(v31, v32, v33);
  OUTLINED_FUNCTION_70_2();
  if ((v35 & 1) != 0)
  {
    uint64_t v36 = objc_opt_self(&OBJC_CLASS___SACardSnippet);
    if (OUTLINED_FUNCTION_1_37(v36))
    {
      uint64_t v37 = one-time initialization token for siriPhone;
      id v38 = v22;
      if (v37 != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v39 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v39, (uint64_t)static Logger.siriPhone);
      os_log_type_t v40 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_35_3(v40))
      {
        uint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v41 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v35,  v34,  "#DefaultDisambiguationBuilder appending Open Contacts button on disambiguation snippet",  v41);
        OUTLINED_FUNCTION_0_2((uint64_t)v41);
      }

      OUTLINED_FUNCTION_47_9();
    }
  }

  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v43 = v5[9];
  uint64_t v42 = v5[10];
  OUTLINED_FUNCTION_46_13();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v45, v43, v42);
  dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v45);
  OUTLINED_FUNCTION_41_18();
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_37_19();
  uint64_t v44 = OUTLINED_FUNCTION_22();
  dispatch thunk of SiriKitAceViewBuilder.build()(v44);
  OUTLINED_FUNCTION_38_6();

  OUTLINED_FUNCTION_7_5();
}

void specialized DefaultDisambiguationBuilder.makeViewsForIOSDisambiguation(utteranceViews:disambiguationItems:persons:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t *)v4;
  uint64_t v9 = OUTLINED_FUNCTION_29_23();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = v4 + 48;
  uint64_t v15 = static PicsUtils.shouldUsePicsDisambiguationFormat(persons:sharedGlobals:)(a3);
  uint64_t v44 = a4;
  if ((v15 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v16 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v16, (uint64_t)static Logger.siriPhone);
    os_log_type_t v17 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled((os_log_t)v4, v17))
    {
      uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v18 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v4,  v17,  "#DefaultDisambiguationBuilder use mixed card section for PICS",  v18);
      OUTLINED_FUNCTION_0_2((uint64_t)v18);
    }

    uint64_t v19 = v4[40];
    OUTLINED_FUNCTION_30_19(v20, enum case for ImageSize.contactDisambiguation(_:));
    type metadata accessor for SiriKitDisambiguationItem(0LL);
    uint64_t v21 = dispatch thunk of static SiriKitDisambiguationItem.allowedItems(disambiguationItems:deviceLockedForDisambiguation:)( v5,  v19);
    uint64_t v22 = static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( v21,  v19,  (uint64_t)v14,  a3);
    uint64_t v23 = OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_49( v23,  (unint64_t *)&lazy cache variable for type metadata for SACardSnippet,  &OBJC_CLASS___SACardSnippet_ptr);
    uint64_t v24 = (void *)static SACardSnippet.makeFromCardSections(cardSections:shouldGenerateAceId:)(v22, 1LL);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_51_10();
  }

  else
  {
    uint64_t v25 = v4[40];
    OUTLINED_FUNCTION_30_19(v15, enum case for ImageSize.contactDisambiguation(_:));
    uint64_t v24 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)( v5,  v25,  v13);
  }

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v26 = *v7;
  uint64_t v27 = v7[9];
  uint64_t v28 = v7[10];
  OUTLINED_FUNCTION_46_13();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v45, v27, v28);
  uint64_t v29 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( v26,  v44,  v45);
  OUTLINED_FUNCTION_49(v29, &lazy cache variable for type metadata for SAUISash, &OBJC_CLASS___SAUISash_ptr);
  SAUISash.init(app:)(v29);
  uint64_t v31 = v30;
  __swift_destroy_boxed_opaque_existential_1(v45);
  [v24 setSash:v31];

  uint64_t v32 = v7[2];
  uint64_t v33 = (void *)v7[3];
  uint64_t v34 = SiriKitDisambiguationList.rawItems.getter();
  LOBYTE(v3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = specialized DefaultDisambiguationBuilder.shouldShowOpenContactsAppButton(parameterName:rawItems:)( v32,  v33,  v34);
  OUTLINED_FUNCTION_23_5();
  if ((v32 & 1) != 0)
  {
    uint64_t v35 = objc_opt_self(&OBJC_CLASS___SACardSnippet);
    if (OUTLINED_FUNCTION_1_37(v35))
    {
      uint64_t v36 = one-time initialization token for siriPhone;
      id v37 = v24;
      if (v36 != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v38 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v38, (uint64_t)static Logger.siriPhone);
      os_log_type_t v39 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_35_3(v39))
      {
        os_log_type_t v40 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)os_log_type_t v40 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v7,  (os_log_type_t)v28,  "#DefaultDisambiguationBuilder appending Open Contacts button on disambiguation snippet",  v40);
        OUTLINED_FUNCTION_0_2((uint64_t)v40);
      }

      OUTLINED_FUNCTION_47_9();
    }
  }

  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v42 = v7[9];
  uint64_t v41 = v7[10];
  __swift_project_boxed_opaque_existential_1(v14, v42);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v41 + 8))(v45, v42, v41);
  dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v45);
  OUTLINED_FUNCTION_41_18();
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_37_19();
  uint64_t v43 = OUTLINED_FUNCTION_22();
  dispatch thunk of SiriKitAceViewBuilder.build()(v43);
  OUTLINED_FUNCTION_38_6();

  OUTLINED_FUNCTION_7_5();
}

uint64_t DefaultDisambiguationBuilder.makeViewsForIOSDisambiguation(utteranceViews:disambiguationItems:persons:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v57 = a4;
  uint64_t v9 = type metadata accessor for ImageSize(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = (void *)(v4 + 48);
  if ((static PicsUtils.shouldUsePicsDisambiguationFormat(persons:sharedGlobals:)(a3) & 1) != 0)
  {
    uint64_t v56 = a1;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v18 = static os_log_type_t.debug.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_0, v16, v18, "#DefaultDisambiguationBuilder use mixed card section for PICS", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    uint64_t v20 = *(unsigned __int8 *)(v5 + 40);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))( v12,  enum case for ImageSize.contactDisambiguation(_:),  v9);
    type metadata accessor for SiriKitDisambiguationItem(0LL);
    uint64_t v21 = dispatch thunk of static SiriKitDisambiguationItem.allowedItems(disambiguationItems:deviceLockedForDisambiguation:)( a2,  v20);
    uint64_t v22 = static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( v21,  v20,  (uint64_t)v13,  a3);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SACardSnippet,  &OBJC_CLASS___SACardSnippet_ptr);
    uint64_t v25 = (void *)static SACardSnippet.makeFromCardSections(cardSections:shouldGenerateAceId:)(v22, 1LL);
    swift_bridgeObjectRelease();
    outlined bridged method (mbnn) of @objc SACardSnippet.referencedCommands.setter(v24, v25);
    a1 = v56;
  }

  else
  {
    uint64_t v26 = *(unsigned __int8 *)(v4 + 40);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))( v12,  enum case for ImageSize.contactDisambiguation(_:),  v9);
    uint64_t v25 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)( a2,  v26,  v12);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v28 = *(void *)v5;
  uint64_t v27 = *(void *)(v5 + 8);
  uint64_t v29 = *(void *)(v5 + 72);
  uint64_t v30 = *(void *)(v5 + 80);
  __swift_project_boxed_opaque_existential_1(v13, v29);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v30 + 8))(v58, v29, v30);
  static PhoneCasinoFactory.makeSash<A>(intent:app:deviceState:)( v27,  v28,  v58,  *(void *)(v57 + 16),  *(void *)(v57 + 24));
  uint64_t v32 = v31;
  __swift_destroy_boxed_opaque_existential_1(v58);
  [v25 setSash:v32];

  uint64_t v33 = *(void *)(v5 + 16);
  uint64_t v34 = *(void **)(v5 + 24);
  uint64_t v35 = SiriKitDisambiguationList.rawItems.getter();
  LOBYTE(v3__swift_destroy_boxed_opaque_existential_1(v0 + 3) = DefaultDisambiguationBuilder.shouldShowOpenContactsAppButton(parameterName:rawItems:)(v33, v34, v35);
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
    uint64_t v36 = objc_opt_self(&OBJC_CLASS___SACardSnippet);
    uint64_t v37 = swift_dynamicCastObjCClass(v25, v36);
    if (v37)
    {
      uint64_t v38 = (os_log_s *)v37;
      uint64_t v39 = one-time initialization token for siriPhone;
      id v40 = v25;
      if (v39 != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v41 = type metadata accessor for Logger(0LL);
      uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
      uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
      os_log_type_t v45 = static os_log_type_t.debug.getter(v43, v44);
      if (os_log_type_enabled(v43, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl( &dword_0,  v43,  v45,  "#DefaultDisambiguationBuilder appending Open Contacts button on disambiguation snippet",  v46,  2u);
        swift_slowDealloc(v46, -1LL, -1LL);
      }

      DefaultDisambiguationBuilder.appendLaunchAppButton(to:)(v38);
    }
  }

  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v48 = *(void *)(v5 + 72);
  uint64_t v47 = *(void *)(v5 + 80);
  __swift_project_boxed_opaque_existential_1(v13, v48);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v47 + 8))(v58, v48, v47);
  uint64_t v49 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v58);
  __swift_destroy_boxed_opaque_existential_1(v58);
  uint64_t v50 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a1);
  swift_release(v49);
  uint64_t v51 = dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(v25);
  uint64_t v52 = swift_release(v50);
  uint64_t v53 = dispatch thunk of SiriKitAceViewBuilder.build()(v52);
  swift_release(v51);

  return v53;
}

uint64_t specialized DefaultDisambiguationBuilder.shouldShowOpenContactsAppButton(parameterName:rawItems:)( uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = v3[9];
  uint64_t v8 = v3[10];
  __swift_project_boxed_opaque_existential_1(v3 + 6, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v18, v7, v8);
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  LOBYTE(v9) = DeviceState.isAuthenticatedForPhone.getter(v9, v10);
  __swift_destroy_boxed_opaque_existential_1(v18);
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v11._uint64_t countAndFlagsBits = a1;
    v11._object = a2;
    if ((PhoneCallSlotNames.init(rawValue:)(v11).value & 0xFE) == 4)
    {
      uint64_t v12 = specialized _arrayConditionalCast<A, B>(_:)(a3);
      if (v12)
      {
        unint64_t v13 = (unint64_t)v12;
        PhoneContactDisambiguationProperties.isHandleDisambiguation.getter((unint64_t)v12);
        if ((v14 & 1) == 0
          && ((specialized Sequence.contains(where:)(v13, (char *)&dword_0 + 2) & 1) == 0
           || (specialized Sequence.contains(where:)(v13, (char *)&dword_0 + 1) & 1) == 0))
        {
          char v17 = specialized Sequence.allSatisfy(_:)(v13, (char *)&dword_0 + 1);
          OUTLINED_FUNCTION_39();
          char v15 = v17 ^ 1;
          return v15 & 1;
        }

        OUTLINED_FUNCTION_39();
      }
    }
  }

  char v15 = 0;
  return v15 & 1;
}

uint64_t DefaultDisambiguationBuilder.shouldShowOpenContactsAppButton(parameterName:rawItems:)( uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = v3[9];
  uint64_t v8 = v3[10];
  __swift_project_boxed_opaque_existential_1(v3 + 6, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v18, v7, v8);
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  LOBYTE(v9) = DeviceState.isAuthenticatedForPhone.getter(v9, v10);
  __swift_destroy_boxed_opaque_existential_1(v18);
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v11._uint64_t countAndFlagsBits = a1;
    v11._object = a2;
    if ((PhoneCallSlotNames.init(rawValue:)(v11).value & 0xFE) == 4)
    {
      uint64_t v12 = specialized _arrayConditionalCast<A, B>(_:)(a3);
      if (v12)
      {
        unint64_t v13 = (unint64_t)v12;
        PhoneContactDisambiguationProperties.isHandleDisambiguation.getter((unint64_t)v12);
        if ((v14 & 1) == 0
          && ((specialized Sequence.contains(where:)(v13, (char *)&dword_0 + 2) & 1) == 0
           || (specialized Sequence.contains(where:)(v13, (char *)&dword_0 + 1) & 1) == 0))
        {
          char v17 = specialized Sequence.allSatisfy(_:)(v13, (char *)&dword_0 + 1);
          swift_bridgeObjectRelease();
          char v15 = v17 ^ 1;
          return v15 & 1;
        }

        swift_bridgeObjectRelease();
      }
    }
  }

  char v15 = 0;
  return v15 & 1;
}

void specialized DefaultDisambiguationBuilder.appendLaunchAppButton(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  uint64_t v86 = a1;
  id v16 = [a1 cardData];
  if (v16)
  {
    char v17 = v16;
    uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v20 = v19;
  }

  else
  {
    uint64_t v18 = 0LL;
    unint64_t v20 = 0xF000000000000000LL;
  }

  id v21 = objc_allocWithZone(&OBJC_CLASS____SFPBCard);
  id v22 = @nonobjc _SFPBCard.init(data:)(v18, v20);
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = [objc_allocWithZone(SFCard) initWithProtobuf:v22];

    if (v24)
    {
      (*(void (**)(void))(class metadata base offset for PhoneCallDisplayTextCATs + **(void **)(v2 + 88) + 504))();
      uint64_t v25 = Result<>.firstPrint.getter(v12);
      uint64_t v27 = v26;
      outlined destroy of Result<TemplatingResult, Error>(v15);
      if (v27)
      {
        id v28 = [objc_allocWithZone(SFButtonCardSection) init];
        OUTLINED_FUNCTION_49( (uint64_t)[v28 setSeparatorStyle:0],  (unint64_t *)&lazy cache variable for type metadata for SFRichText,  SFRichText_ptr);
        id v29 = @nonobjc SFRichText.__allocating_init(string:)(v25, v27);
        OUTLINED_FUNCTION_17_6(v28, "setTitle:");

        id v30 = [objc_allocWithZone(SAUIAppPunchOut) init];
        URL.init(string:)(0xD000000000000017LL, 0x800000000034A080LL);
        uint64_t v31 = type metadata accessor for URL(0LL);
        uint64_t v33 = 0LL;
        if (__swift_getEnumTagSinglePayload(v11, 1LL, v31) != 1)
        {
          URL._bridgeToObjectiveC()(v32);
          uint64_t v33 = v34;
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8LL))(v11, v31);
        }

        OUTLINED_FUNCTION_17_6(v30, "setPunchOutUri:");

        id v35 = v30;
        uint64_t v36 = UUID.init()(v35);
        UUID.uuidString.getter(v36);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
        NSString v37 = String._bridgeToObjectiveC()();
        OUTLINED_FUNCTION_70_2();
        OUTLINED_FUNCTION_17_6(v35, "setAceId:");

        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v39 = swift_allocObject(v38, 40LL, 7LL);
        *(_OWORD *)(v39 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
        id v40 = v35;
        id v41 = v28;
        uint64_t v42 = static CasinoFactory.makeReferentialAbstractCommand(originalCommand:)(v40);

        *(void *)(v39 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v42;
        uint64_t v47 = specialized Array._endMutation()(v43, v44, v45, v46);
        OUTLINED_FUNCTION_49( v47,  &lazy cache variable for type metadata for SFAbstractCommand,  &OBJC_CLASS___SFAbstractCommand_ptr);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_62();
        [v41 setCommands:isa];

        id v49 = [v24 cardSections];
        if (v49)
        {
          uint64_t v50 = v49;
          uint64_t v51 = OUTLINED_FUNCTION_49( (uint64_t)v49,  &lazy cache variable for type metadata for SFCardSection,  &OBJC_CLASS___SFCardSection_ptr);
          uint64_t v52 = OUTLINED_FUNCTION_28_24(v51);

          uint64_t v88 = v52;
          id v53 = v41;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
          char v54 = v86;
          unint64_t v56 = *(void *)((char *)&dword_10 + (v88 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v55 = *(void *)((char *)&dword_18 + (v88 & 0xFFFFFFFFFFFFFF8LL));
          if (v56 >= v55 >> 1) {
            OUTLINED_FUNCTION_3_25(v56 + 1, v55);
          }
          uint64_t v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v53);
          specialized Array._endMutation()(v57, v58, v59, v60);
          if (v88)
          {
            v61.super.Class isa = OUTLINED_FUNCTION_35_20().super.isa;
            OUTLINED_FUNCTION_23_5();
          }

          else
          {
            v61.super.Class isa = 0LL;
          }

          OUTLINED_FUNCTION_17_6(v24, "setCardSections:");
        }

        else
        {
          [v24 setCardSections:0];
          swift_bridgeObjectRelease();
          char v54 = v86;
        }

        uint64_t v69 = (objc_class *)[objc_allocWithZone(_SFPBCard) initWithFacade:v24];
        Class v70 = v69;
        if (v69)
        {
          id v71 = -[objc_class data](v69, "data");

          if (v71)
          {
            uint64_t v72 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v71);
            unint64_t v74 = v73;

            Class v70 = Data._bridgeToObjectiveC()().super.isa;
            outlined consume of Data._Representation(v72, v74);
          }

          else
          {
            Class v70 = 0LL;
          }
        }

        OUTLINED_FUNCTION_17_6(v54, "setCardData:");

        id v75 = [v54 referencedCommands];
        if (v75)
        {
          uint64_t v76 = v75;
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
          uint64_t v78 = OUTLINED_FUNCTION_28_24(v77);

          uint64_t v89 = v78;
          id v40 = v40;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
          unint64_t v80 = *(void *)((char *)&dword_10 + (v78 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v79 = *(void *)((char *)&dword_18 + (v89 & 0xFFFFFFFFFFFFFF8LL));
          if (v80 >= v79 >> 1) {
            OUTLINED_FUNCTION_3_25(v80 + 1, v79);
          }
          uint64_t v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v40);
          specialized Array._endMutation()(v81, v82, v83, v84);
          if (v89)
          {
            v85.super.Class isa = OUTLINED_FUNCTION_35_20().super.isa;
            OUTLINED_FUNCTION_23_5();
          }

          else
          {
            v85.super.Class isa = 0LL;
          }

          OUTLINED_FUNCTION_17_6(v54, "setReferencedCommands:");
        }

        else
        {
          [v54 setReferencedCommands:0];
          swift_bridgeObjectRelease();
        }
      }

      else
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v65 = OUTLINED_FUNCTION_15_1();
        uint64_t v66 = (os_log_s *)OUTLINED_FUNCTION_12_1(v65, (uint64_t)static Logger.siriPhone);
        os_log_type_t v67 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v66, v67))
        {
          uint64_t v68 = (uint8_t *)OUTLINED_FUNCTION_1_0();
          *(_WORD *)uint64_t v68 = 0;
          OUTLINED_FUNCTION_5( &dword_0,  v66,  v67,  "#DefaultDisambiguationBuilder failed to generate Open Contacts button label",  v68);
          OUTLINED_FUNCTION_0_2((uint64_t)v68);
        }

        else
        {
        }
      }
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v62 = OUTLINED_FUNCTION_15_1();
      uint64_t v87 = (os_log_s *)OUTLINED_FUNCTION_12_1(v62, (uint64_t)static Logger.siriPhone);
      os_log_type_t v63 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v87, v63))
      {
        uint64_t v64 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v64 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v87,  v63,  "#DefaultDisambiguationBuilder failed to get SFCard from SFCardSnippet",  v64);
        OUTLINED_FUNCTION_0_2((uint64_t)v64);
      }
    }
  }

  else
  {
    __break(1u);
  }

void DefaultDisambiguationBuilder.appendLaunchAppButton(to:)(os_log_s *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = a1;
  id v13 = -[os_log_s cardData](a1, "cardData");
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
    unint64_t v17 = v16;
  }

  else
  {
    uint64_t v15 = 0LL;
    unint64_t v17 = 0xF000000000000000LL;
  }

  id v18 = objc_allocWithZone(&OBJC_CLASS____SFPBCard);
  id v19 = @nonobjc _SFPBCard.init(data:)(v15, v17);
  if (v19)
  {
    unint64_t v20 = v19;
    id v21 = [objc_allocWithZone(SFCard) initWithProtobuf:v19];

    if (v21)
    {
      (*(void (**)(void))(class metadata base offset for PhoneCallDisplayTextCATs + **(void **)(v2 + 88) + 504))();
      uint64_t v22 = Result<>.firstPrint.getter(v10);
      uint64_t v24 = v23;
      outlined destroy of Result<TemplatingResult, Error>((uint64_t)v12);
      if (v24)
      {
        id v25 = [objc_allocWithZone(SFButtonCardSection) init];
        [v25 setSeparatorStyle:0];
        type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SFRichText,  &OBJC_CLASS___SFRichText_ptr);
        id v26 = @nonobjc SFRichText.__allocating_init(string:)(v22, v24);
        [v25 setTitle:v26];

        id v27 = [objc_allocWithZone(SAUIAppPunchOut) init];
        URL.init(string:)(0xD000000000000017LL, 0x800000000034A080LL);
        uint64_t v28 = type metadata accessor for URL(0LL);
        id v30 = 0LL;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v28) != 1)
        {
          URL._bridgeToObjectiveC()(v29);
          id v30 = v31;
          (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8LL))(v9, v28);
        }

        [v27 setPunchOutUri:v30];

        id v32 = v27;
        uint64_t v33 = UUID.init()(v32);
        UUID.uuidString.getter(v33);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v32 setAceId:v34];

        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v36 = swift_allocObject(v35, 40LL, 7LL);
        *(_OWORD *)(v36 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
        id v37 = v32;
        id v38 = v25;
        uint64_t v39 = static CasinoFactory.makeReferentialAbstractCommand(originalCommand:)(v37);

        *(void *)(v36 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v39;
        uint64_t v85 = v36;
        specialized Array._endMutation()(v40, v41, v42, v43);
        type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for SFAbstractCommand,  &OBJC_CLASS___SFAbstractCommand_ptr);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v38 setCommands:isa];

        id v45 = [v21 cardSections];
        if (v45)
        {
          uint64_t v46 = v45;
          uint64_t v47 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for SFCardSection,  &OBJC_CLASS___SFCardSection_ptr);
          uint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

          uint64_t v85 = v48;
          id v49 = v38;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
          uint64_t v50 = v84;
          unint64_t v52 = *(void *)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v51 = *(void *)((char *)&dword_18 + (v85 & 0xFFFFFFFFFFFFFF8LL));
          if (v52 >= v51 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1LL);
          }
          uint64_t v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v49);
          specialized Array._endMutation()(v53, v54, v55, v56);
          if (v85)
          {
            v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
          }

          else
          {
            v57.super.Class isa = 0LL;
          }

          [v21 setCardSections:v57.super.isa];
        }

        else
        {
          [v21 setCardSections:0];
          swift_bridgeObjectRelease();
          uint64_t v50 = v84;
        }

        os_log_type_t v67 = (objc_class *)[objc_allocWithZone(_SFPBCard) initWithFacade:v21];
        Class v68 = v67;
        if (v67)
        {
          id v69 = -[objc_class data](v67, "data");

          if (v69)
          {
            uint64_t v70 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v69);
            unint64_t v72 = v71;

            Class v68 = Data._bridgeToObjectiveC()().super.isa;
            outlined consume of Data._Representation(v70, v72);
          }

          else
          {
            Class v68 = 0LL;
          }
        }

        -[os_log_s setCardData:](v50, "setCardData:", v68);

        id v73 = -[os_log_s referencedCommands](v50, "referencedCommands");
        if (v73)
        {
          unint64_t v74 = v73;
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SAClientBoundCommand);
          uint64_t v76 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v74, v75);

          uint64_t v85 = v76;
          id v37 = v37;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
          unint64_t v78 = *(void *)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v77 = *(void *)((char *)&dword_18 + (v85 & 0xFFFFFFFFFFFFFF8LL));
          if (v78 >= v77 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1LL);
          }
          uint64_t v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v37);
          specialized Array._endMutation()(v79, v80, v81, v82);
          if (v85)
          {
            v83.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
          }

          else
          {
            v83.super.Class isa = 0LL;
          }

          -[os_log_s setReferencedCommands:](v50, "setReferencedCommands:", v83.super.isa);
        }

        else
        {
          -[os_log_s setReferencedCommands:](v50, "setReferencedCommands:", 0LL);
          swift_bridgeObjectRelease();
        }
      }

      else
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v62 = type metadata accessor for Logger(0LL);
        uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)static Logger.siriPhone);
        uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v66 = 0;
          _os_log_impl( &dword_0,  v64,  v65,  "#DefaultDisambiguationBuilder failed to generate Open Contacts button label",  v66,  2u);
          swift_slowDealloc(v66, -1LL, -1LL);
        }

        else
        {
        }
      }
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v58 = type metadata accessor for Logger(0LL);
      uint64_t v59 = __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
      uint64_t v84 = (os_log_s *)Logger.logObject.getter(v59);
      os_log_type_t v60 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v84, v60))
      {
        NSArray v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)NSArray v61 = 0;
        _os_log_impl( &dword_0,  v84,  v60,  "#DefaultDisambiguationBuilder failed to get SFCard from SFCardSnippet",  v61,  2u);
        swift_slowDealloc(v61, -1LL, -1LL);
      }
    }
  }

  else
  {
    __break(1u);
  }

id @nonobjc SFRichText.__allocating_init(string:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v3 = 0LL;
  }

  id v4 = [(id)swift_getObjCClassFromMetadata() textWithString:v3];

  return v4;
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.sharedGlobals.getter in conformance DefaultDisambiguationBuilder<A>@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 48, a1);
}

id @nonobjc _SFPBCard.init(data:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    Class isa = 0LL;
  }

  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a1, a2);
  }

  id v6 = [v2 initWithData:isa];

  return v6;
}

_UNKNOWN **sub_1109D8()
{
  return &protocol witness table for DefaultDisambiguationBuilder<A>;
}

uint64_t destroy for DefaultDisambiguationBuilder(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release(*(void *)(a1 + 32));
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 48));
  return swift_release(*(void *)(a1 + 88));
}

uint64_t initializeWithCopy for DefaultDisambiguationBuilder(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  uint64_t v6 = a2[3];
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a2[2];
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  uint64_t v8 = a2 + 6;
  __int128 v9 = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
  swift_retain(v4);
  id v12 = v5;
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  v11(a1 + 48, v8, v10);
  uint64_t v13 = a2[11];
  *(void *)(a1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v13;
  swift_retain(v13);
  return a1;
}

uint64_t *assignWithCopy for DefaultDisambiguationBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  uint64_t v5 = (void *)a2[1];
  uint64_t v6 = (void *)a1[1];
  a1[1] = (uint64_t)v5;
  id v7 = v5;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1[4];
  a1[4] = a2[4];
  swift_retain();
  swift_release(v8);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  uint64_t v9 = a2[11];
  uint64_t v10 = a1[11];
  a1[11] = v9;
  swift_retain();
  swift_release(v10);
  return a1;
}

void *__swift_memcpy96_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t *assignWithTake for DefaultDisambiguationBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  uint64_t v5 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[4];
  a1[4] = a2[4];
  swift_release(v7);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 6);
  __int128 v8 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v8;
  uint64_t v9 = a2[11];
  uint64_t v10 = a1[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_release(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultDisambiguationBuilder(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 96))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultDisambiguationBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
    *(_OWORD *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(result + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

uint64_t type metadata accessor for DefaultDisambiguationBuilder( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for DefaultDisambiguationBuilder);
}

uint64_t outlined destroy of PhoneContactDisambiguationHeaderItemFactory(uint64_t a1)
{
  return a1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_8_39@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a2, a1, 0x73746361746E6F63LL, 0xE800000000000000LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_9_44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a2, a1, 0x746361746E6F63LL, 0xE700000000000000LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_10_41( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return v14(v18, v17, v13, v16, a11, v12, v15, v11);
}

void OUTLINED_FUNCTION_13_41( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(void, void), uint64_t a11)
{
}

void *OUTLINED_FUNCTION_19_24(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 8))((uint64_t *)va, v3, v4);
}

uint64_t OUTLINED_FUNCTION_22_23()
{
  return PhoneCallSlotNames.rawValue.getter(v0);
}

uint64_t OUTLINED_FUNCTION_28_24(uint64_t a1)
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

uint64_t OUTLINED_FUNCTION_29_23()
{
  return type metadata accessor for ImageSize(0LL);
}

uint64_t OUTLINED_FUNCTION_30_19(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v4, a2, v3);
}

uint64_t OUTLINED_FUNCTION_33_27()
{
  return v0;
}

  ;
}

NSArray OUTLINED_FUNCTION_35_20()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t OUTLINED_FUNCTION_37_19()
{
  return dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional OUTLINED_FUNCTION_39_12()
{
  v2._uint64_t countAndFlagsBits = v0;
  v2._object = v1;
  return PhoneCallSlotNames.init(rawValue:)(v2);
}

uint64_t OUTLINED_FUNCTION_41_18()
{
  return dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(v0);
}

void *OUTLINED_FUNCTION_46_13()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

void OUTLINED_FUNCTION_47_9()
{
}

void OUTLINED_FUNCTION_48_8()
{
}

uint64_t OUTLINED_FUNCTION_49_13(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return outlined destroy of PhoneContactDisambiguationHeaderItemFactory((uint64_t)va);
}

void *OUTLINED_FUNCTION_50_16()
{
  return PhoneContactDisambiguationHeaderItemFactory.makeHeaderItems(persons:)(v0);
}

void OUTLINED_FUNCTION_51_10()
{
}

uint64_t OUTLINED_FUNCTION_52_10()
{
  return SiriKitDisambiguationList.rawItems.getter();
}

void *static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = (void *)OUTLINED_FUNCTION_0_16(a1, a2, a3, a4, a5, a6);
  return OUTLINED_FUNCTION_3_52(v6, v7, v8, v9, v10);
}

uint64_t static AnswerCallIntentConversion.getCallIdentifierFromCallNotifications(sharedGlobals:app:)( void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 160LL))(v4);
  OUTLINED_FUNCTION_38_1();
  if ((v2 & 1) != 0 && !App.isFirstParty()())
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    uint64_t v9 = CurrentRequest.refId.getter();
    uint64_t v11 = v10;
    OUTLINED_FUNCTION_38_1();
    if (v11)
    {
      uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      OUTLINED_FUNCTION_4_49((uint64_t)v12);
      uint64_t v13 = v20;
      uint64_t v14 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      char v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16))(v9, v11, v13, v14);
      __swift_destroy_boxed_opaque_existential_1(v19);
      if ((v15 & 1) != 0)
      {
        uint64_t v16 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        OUTLINED_FUNCTION_4_49((uint64_t)v16);
        uint64_t v17 = v20;
        uint64_t v18 = v21;
        __swift_project_boxed_opaque_existential_1(v19, v20);
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 32))(v9, v11, v17, v18);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v19);
        return v5;
      }

      swift_bridgeObjectRelease();
    }
  }

  return 0LL;
}

void *specialized static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  __chkstk_darwin();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  __chkstk_darwin();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = a4;
  if (PhoneCallNLIntent.hasAnyConfirmation()())
  {
    if (a4)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v10 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
      id v11 = a4;
      uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
      os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
      if (os_log_type_enabled(v12, v14))
      {
        char v15 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v16 = OUTLINED_FUNCTION_7_0(32LL);
        *(void *)&v41[0] = v16;
        _DWORD *v15 = 136315138;
        id v17 = v11;
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAnswerCallIntent?);
        uint64_t v19 = OUTLINED_FUNCTION_11_40(v18);
        uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, (uint64_t *)v41);
        uint64_t v22 = OUTLINED_FUNCTION_8_40(v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, v23, v15 + 1);

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_15_34( &dword_0,  v12,  v14,  "#AnswerCallIntentConversion is confirmation, returning previousIntent: %s.");
        swift_arrayDestroy(v16, 1LL);
        OUTLINED_FUNCTION_0_2(v16);
        OUTLINED_FUNCTION_0_2((uint64_t)v15);
      }

      else
      {
      }

      id v32 = v11;
      return a4;
    }

    uint64_t v9 = 0LL;
  }

  OUTLINED_FUNCTION_12_45();
  uint64_t v24 = swift_allocObject(&unk_3FF010, 64LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(v41, v24 + 16);
  *(void *)(v24 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v9;
  id v25 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0LL);
  OUTLINED_FUNCTION_13_42((uint64_t)partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:));
  *(void *)(swift_allocObject(&unk_3FF038, 24LL, 7LL) + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a5;
  id v26 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  OUTLINED_FUNCTION_13_42((uint64_t)partial apply for closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:));
  Transformer.transform.getter(v8);
  uint64_t v27 = OUTLINED_FUNCTION_14_30();
  v28(v27);
  OUTLINED_FUNCTION_38_1();
  uint64_t v29 = *(void *)&v41[0];
  Transformer.transform.getter(v40);
  uint64_t v30 = OUTLINED_FUNCTION_14_30();
  v31(v30);
  OUTLINED_FUNCTION_38_1();
  uint64_t v34 = *((void *)&v41[0] + 1);
  uint64_t v33 = *(void *)&v41[0];
  OUTLINED_FUNCTION_12_45();
  if (!v34)
  {
    uint64_t v33 = static AnswerCallIntentConversion.getCallIdentifierFromCallNotifications(sharedGlobals:app:)(v41);
    uint64_t v34 = v35;
  }

  __swift_destroy_boxed_opaque_existential_1(v41);
  id v36 = objc_allocWithZone(&OBJC_CLASS___INAnswerCallIntent);
  @nonobjc INAnswerCallIntent.init(audioRoute:callIdentifier:)(v29, v33, v34);
  id v38 = v37;
  a4 = (void *)specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)();

  OUTLINED_FUNCTION_1_51();
  OUTLINED_FUNCTION_6_5();
  return a4;
}

ValueMetadata *type metadata accessor for AnswerCallIntentConversion()
{
  return &type metadata for AnswerCallIntentConversion;
}

uint64_t sub_11169C()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

void partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)( void *a1@<X0>, void *a2@<X8>)
{
}

{
  uint64_t v2;
  specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)( a1,  (void *)(v2 + 16),  *(void **)(v2 + 56),  a2);
}

uint64_t sub_1116E4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_1_51()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 160) + 8LL))(v0, *(void *)(v1 - 144));
}

void *OUTLINED_FUNCTION_3_52(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  return specialized static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( a1,  a2,  a3,  a4,  a5);
}

void *OUTLINED_FUNCTION_4_49(uint64_t a1, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 160))((uint64_t *)va, v1, v2);
}

uint64_t OUTLINED_FUNCTION_8_40(uint64_t a1)
{
  *(void *)(v1 - outlined init with take of AppSelectionSignalComponent(v2, v1 + 136) = a1;
  return v1 - 136;
}

uint64_t OUTLINED_FUNCTION_11_40(uint64_t a1)
{
  return String.init<A>(describing:)(v1 - 136, a1);
}

uint64_t OUTLINED_FUNCTION_12_45()
{
  return outlined init with copy of SignalProviding(v0, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_13_42(uint64_t a1)
{
  return Transformer.init(transform:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  return v0;
}

void OUTLINED_FUNCTION_15_34(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

void *PhoneContactDisambiguationHeaderItemFactory.makeHeaderItems(persons:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Image(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v49 - v8);
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_128();
    if (v10) {
      goto LABEL_3;
    }
LABEL_17:
    OUTLINED_FUNCTION_23_5();
    return _swiftEmptyArrayStorage;
  }

  if (a1 < 0) {
    uint64_t v47 = a1;
  }
  else {
    uint64_t v47 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  OUTLINED_FUNCTION_128();
  if (!_CocoaArrayWrapper.endIndex.getter(v47)) {
    goto LABEL_17;
  }
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (a1 & 0xC000000000000001LL) == 0, a1);
  if ((a1 & 0xC000000000000001LL) != 0) {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
  }
  else {
    id v11 = *(id *)(a1 + 32);
  }
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_0_49();
  if ((v13 & 1) == 0
    || (unint64_t v14 = OUTLINED_FUNCTION_128(),
        PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v14),
        char v16 = v15,
        OUTLINED_FUNCTION_23_5(),
        (v16 & 1) == 0))
  {

    return _swiftEmptyArrayStorage;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
  if (os_log_type_enabled(v19, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v19, v21, "#PhoneContactDisambiguationHeaderItemFactory Building header item", v22, 2u);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  id v23 = [v12 displayName];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  uint64_t v26 = v25;

  uint64_t v27 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v24, v26);
  uint64_t v28 = swift_bridgeObjectRelease();
  uint64_t v29 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v28);
  swift_release(v27);
  OUTLINED_FUNCTION_0_49();
  LOBYTE(v24) = v30;
  uint64_t v31 = v2[3];
  uint64_t v32 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v31);
  char v33 = DeviceState.isAuthenticatedForPhone.getter(v31, v32);
  INPerson.buildDisplayImage(supportsCompactView:isDeviceLocked:)(v24 & 1, (v33 & 1) == 0, v9);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v35 = OUTLINED_FUNCTION_5_32(v34);
  __int128 v49 = xmmword_31FE60;
  *(_OWORD *)(v35 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  uint64_t v36 = OUTLINED_FUNCTION_5_32(v34);
  *(_OWORD *)(v36 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v49;
  *(void *)(v36 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
  uint64_t v50 = v36;
  specialized Array._endMutation()(v36, v37, v38, v39);
  uint64_t v40 = v50;
  (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 16))(v7, v9, v4);
  uint64_t v41 = type metadata accessor for SiriKitDisambiguationItem(0LL);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  swift_retain();
  uint64_t v42 = SiriKitDisambiguationItem.init(components:image:utterance:allowLineWrapForDisplayText:)( v40,  v7,  0LL,  0xE000000000000000LL,  0LL);
  *(void *)(v35 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v42;
  uint64_t v50 = v35;
  specialized Array._endMutation()(v42, v43, v44, v45);
  uint64_t v46 = v50;
  swift_release(v29);

  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v9, v4);
  return (void *)v46;
}

ValueMetadata *type metadata accessor for PhoneContactDisambiguationHeaderItemFactory()
{
  return &type metadata for PhoneContactDisambiguationHeaderItemFactory;
}

void OUTLINED_FUNCTION_0_49()
{
}

uint64_t StartAudioCallAceViewProvider.__allocating_init(templatingService:sharedGlobals:)( uint64_t a1, void *a2)
{
  return StartAudioCallAceViewProvider.init(templatingService:sharedGlobals:)(a1, a2);
}

uint64_t StartAudioCallAceViewProvider.init(templatingService:sharedGlobals:)(uint64_t a1, void *a2)
{
  *(void *)(v2 + direct field offset for StartAudioCallAceViewProvider.templatingService) = a1;
  uint64_t v4 = outlined init with copy of SignalProviding( (uint64_t)a2,  v2 + direct field offset for StartAudioCallAceViewProvider.sharedGlobals);
  uint64_t v5 = DefaultAceViewProvider.init()(v4);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v5;
}

uint64_t StartAudioCallAceViewProvider.makeAceViewsForResolveNeedsDisambiguation(app:parameterName:intent:utteranceViews:disambiguationList:deviceIsLocked:_:)( uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char a7, void (*a8)(uint64_t, void), uint64_t a9)
{
  uint64_t v49 = a9;
  uint64_t v50 = a8;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = a2;
  v19._object = a3;
  if (PhoneCallSlotNames.init(rawValue:)(v19).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_contact)
  {
    uint64_t v48 = v9 + direct field offset for StartAudioCallAceViewProvider.sharedGlobals;
    uint64_t v20 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
    static CATOption.defaultMode.getter(v20);
    uint64_t v21 = CATWrapper.__allocating_init(options:globals:)(v18, 0LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
    if (os_log_type_enabled(v24, v26))
    {
      uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_1_0();
      uint64_t v47 = a5;
      uint64_t v28 = a1;
      uint64_t v29 = a4;
      uint64_t v30 = a6;
      char v31 = a7;
      uint64_t v32 = v21;
      char v33 = v27;
      *uint64_t v27 = 0;
      OUTLINED_FUNCTION_3_53(&dword_0, v24, v26, "#StartCallViewBuilders Providing DefaultDisambiguationBuilder");
      uint64_t v34 = (uint64_t)v33;
      uint64_t v21 = v32;
      a7 = v31;
      a6 = v30;
      a4 = v29;
      a1 = v28;
      a5 = v47;
      OUTLINED_FUNCTION_0_2(v34);
    }

    outlined init with copy of SignalProviding(v48, (uint64_t)v53);
    v51[0] = a1;
    v51[1] = a4;
    v51[2] = a2;
    v51[3] = a3;
    v51[4] = a6;
    char v52 = a7 & 1;
    v53[5] = v21;
    swift_bridgeObjectRetain();
    swift_retain();
    id v35 = a4;
    swift_retain();
    specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(a5, v50, v49);
    return outlined destroy of DefaultDisambiguationBuilder<INStartAudioCallIntent>((uint64_t)v51);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v41 = static os_log_type_t.debug.getter(v39, v40);
    if (os_log_type_enabled(v39, v41))
    {
      uint64_t v42 = (_WORD *)OUTLINED_FUNCTION_1_0();
      *uint64_t v42 = 0;
      OUTLINED_FUNCTION_3_53(&dword_0, v39, v41, "Not disambiguating contact - not building a disambiguation snippet");
      OUTLINED_FUNCTION_0_2((uint64_t)v42);
    }

    if ((unint64_t)a5 >> 62)
    {
      if (a5 < 0) {
        uint64_t v45 = a5;
      }
      else {
        uint64_t v45 = a5 & 0xFFFFFFFFFFFFFF8LL;
      }
      unint64_t v46 = type metadata accessor for SAAceView();
      swift_bridgeObjectRetain();
      uint64_t v44 = _bridgeCocoaArray<A>(_:)(v45, v46);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v43 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v43);
      type metadata accessor for SAAceView();
      uint64_t v44 = a5;
    }

    v50(v44, 0LL);
    return swift_bridgeObjectRelease();
  }

void StartAudioCallAceViewProvider.init()(uint64_t a1, uint64_t a2)
{
}

uint64_t StartAudioCallAceViewProvider.__ivar_destroyer()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                             + direct field offset for StartAudioCallAceViewProvider.sharedGlobals));
}

uint64_t StartAudioCallAceViewProvider.deinit()
{
  uint64_t v0 = DefaultAceViewProvider.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartAudioCallAceViewProvider.templatingService));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartAudioCallAceViewProvider.sharedGlobals));
  return v0;
}

uint64_t StartAudioCallAceViewProvider.__deallocating_deinit()
{
  uint64_t v0 = StartAudioCallAceViewProvider.deinit();
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t outlined destroy of DefaultDisambiguationBuilder<INStartAudioCallIntent>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultDisambiguationBuilder<INStartAudioCallIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StartAudioCallAceViewProvider(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartAudioCallAceViewProvider;
  if (!type metadata singleton initialization cache for StartAudioCallAceViewProvider) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartAudioCallAceViewProvider);
  }
  return result;
}

uint64_t type metadata completion function for StartAudioCallAceViewProvider(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + class metadata base offset for StartAudioCallAceViewProvider);
}

uint64_t ObjC metadata update function for StartAudioCallAceViewProvider()
{
  return type metadata accessor for StartAudioCallAceViewProvider(0LL);
}

void OUTLINED_FUNCTION_3_53(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATs::Properties_optional __swiftcall AnnounceCallBellCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AnnounceCallBellCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::AnnounceCallBellCATs::Properties_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AnnounceCallBellCATs::Properties_optional)v3;
  }
}

unint64_t AnnounceCallBellCATs.Properties.rawValue.getter(char a1)
{
  if (!a1) {
    return 0xD000000000000026LL;
  }
  if (a1 == 1) {
    return 0xD000000000000028LL;
  }
  return 0xD000000000000025LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceCallBellCATs.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceCallBellCATs.Properties()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceCallBellCATs.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceCallBellCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceCallBellCATs::Properties_optional *a2@<X8>)
{
  result.value = AnnounceCallBellCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceCallBellCATs.Properties@<X0>( unint64_t *a1@<X8>)
{
  unint64_t result = AnnounceCallBellCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnnounceCallBellCATs.announceCallBellEnded(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t AnnounceCallBellCATs.announceCallBellEnded()(uint64_t a1)
{
  unint64_t v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return OUTLINED_FUNCTION_6_15(a1, 0xD000000000000026LL, 0x8000000000342DB0LL, (uint64_t)_swiftEmptyArrayStorage, v5);
}

uint64_t AnnounceCallBellCATs.announceCallBellEnded()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return OUTLINED_FUNCTION_4_2(0xD000000000000026LL, 0x8000000000342DB0LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x8000000000342DB0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t AnnounceCallBellCATs.announceCallBellStarted(device:completion:)(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  OUTLINED_FUNCTION_42_1(v3, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(0LL);
    unint64_t v5 = a1;
  }

  else
  {
    unint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v5;
  v3[4].n128_u64[1] = v4;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000028LL);
  return swift_bridgeObjectRelease();
}

uint64_t AnnounceCallBellCATs.announceCallBellStarted(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceCallBellCATs.announceCallBellStarted(device:));
}

uint64_t AnnounceCallBellCATs.announceCallBellStarted(device:)()
{
  unint64_t v2 = v1[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_15_3(v3);
  v1[5] = v4;
  uint64_t v5 = OUTLINED_FUNCTION_35_0(v4, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState(v5);
  }

  else
  {
    v4[3].n128_u64[1] = 0LL;
    v4[4].n128_u64[0] = 0LL;
  }

  v4[3].n128_u64[0] = v2;
  v4[4].n128_u64[1] = v5;
  OUTLINED_FUNCTION_2_3();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[6] = v6;
  *uint64_t v6 = v1;
  v6[1] = AnnounceCallBellCATs.announceCallBellStarted(device:);
  return v8(v1[2], 0xD000000000000028LL, 0x8000000000342DE0LL, v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *v1;
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(UnsupportedFlowCATs.unsupportedOnDeviceType(device:), 0LL, 0LL);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v8)(unint64_t, unint64_t, __n128 *);
  unint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  uint64_t v5 = OUTLINED_FUNCTION_35_0(v4, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for SirikitDeviceState(v5);
  }

  else
  {
    v4[3].n128_u64[1] = 0LL;
    v4[4].n128_u64[0] = 0LL;
  }

  v4[3].n128_u64[0] = v2;
  v4[4].n128_u64[1] = v5;
  OUTLINED_FUNCTION_2_3();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *uint64_t v6 = v1;
  v6[1] = AnnounceCallBellCATs.announceCallBellStarted(device:);
  return v8(0xD000000000000028LL, 0x8000000000342DE0LL, v4);
}

uint64_t AnnounceCallBellCATs.announceCallBellStarted(device:)(uint64_t a1)
{
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceCallBellCATs.announceCallBellStarted(device:));
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v4 = *(void *)(*v2 + 40);
  uint64_t v5 = *v2;
  *(void *)(v5 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  swift_task_dealloc(v4);
  if (v1) {
    return swift_task_switch(PhoneCallCommonCATs.orList(items:), 0LL, 0LL);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t AnnounceCallBellCATs.announceCallBellStarted(device:)(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  OUTLINED_FUNCTION_42_1(v3, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(0LL);
    unint64_t v5 = a1;
  }

  else
  {
    unint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v5;
  v3[4].n128_u64[1] = v4;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000028LL, 0x8000000000342DE0LL, v3);
  return swift_bridgeObjectRelease();
}

uint64_t AnnounceCallBellCATs.informDoubleTapToEnd(completion:)()
{
  return OUTLINED_FUNCTION_13(37LL);
}

uint64_t AnnounceCallBellCATs.informDoubleTapToEnd()(uint64_t a1)
{
  uint64_t v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return OUTLINED_FUNCTION_6_15(a1, 0xD000000000000025LL, 0x8000000000342E10LL, (uint64_t)_swiftEmptyArrayStorage, v5);
}

uint64_t AnnounceCallBellCATs.informDoubleTapToEnd()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return OUTLINED_FUNCTION_4_2(0xD000000000000025LL, 0x8000000000342E10LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

{
  return OUTLINED_FUNCTION_14_6(37LL, 0x8000000000342E10LL, (uint64_t)_swiftEmptyArrayStorage);
}

unint64_t lazy protocol witness table accessor for type AnnounceCallBellCATs.Properties and conformance AnnounceCallBellCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATs.Properties and conformance AnnounceCallBellCATs.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATs.Properties and conformance AnnounceCallBellCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATs.Properties,  &type metadata for AnnounceCallBellCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATs.Properties and conformance AnnounceCallBellCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceCallBellCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceCallBellCATs;
  if (!type metadata singleton initialization cache for AnnounceCallBellCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceCallBellCATs);
  }
  return result;
}

uint64_t type metadata completion function for AnnounceCallBellCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnnounceCallBellCATs);
}

uint64_t ObjC metadata update function for AnnounceCallBellCATs()
{
  return type metadata accessor for AnnounceCallBellCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for AnnounceCallBellCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1128D4 + 4 * byte_326105[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_112908 + 4 * byte_326100[v4]))();
}

uint64_t sub_112908(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_112910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x112918LL);
  }
  return result;
}

uint64_t sub_112924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x11292CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_112930(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_112938(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceCallBellCATs.Properties()
{
  return &type metadata for AnnounceCallBellCATs.Properties;
}

void *PhoneCallEntitlements.answerCallNotificationsFromBackground.unsafeMutableAddressor()
{
  return &static PhoneCallEntitlements.answerCallNotificationsFromBackground;
}

unint64_t static PhoneCallEntitlements.answerCallNotificationsFromBackground.getter()
{
  return 0xD000000000000038LL;
}

ValueMetadata *type metadata accessor for PhoneCallEntitlements()
{
  return &type metadata for PhoneCallEntitlements;
}

void *CallingIntentUnsupportedValueFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  return CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

void *CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  *(void *)(v9 + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple) = a6;
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v26);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a5, (uint64_t)v25);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a8, (uint64_t)v24);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a9, (uint64_t)v23);
  swift_retain();
  default argument 5 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)();
  uint64_t v13 = v12;
  default argument 5 of CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)();
  uint64_t v15 = v14;
  default argument 7 of InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)();
  char v16 = CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  a2,  v26,  v13,  a4,  v15,  v25,  a7,  v22,  v24,  v23);
  OUTLINED_FUNCTION_76();
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(a5);
  OUTLINED_FUNCTION_11_12();
  return v16;
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = *v2;
  uint64_t v4 = type metadata accessor for TemplatingResult(0LL);
  v3[23] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  _BYTE v3[24] = v5;
  v3[25] = OUTLINED_FUNCTION_23(v5);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  v3[26] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[27] = v7;
  v3[28] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v3[29] = OUTLINED_FUNCTION_8_30(*(void *)(v8 - 8));
  v3[30] = OUTLINED_FUNCTION_28();
  uint64_t v9 = OUTLINED_FUNCTION_113_3();
  v3[31] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[32] = v10;
  v3[33] = OUTLINED_FUNCTION_23(v10);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)()
{
  uint64_t v42 = v2;
  uint64_t v43 = v3;
  os_log_type_t v41 = v1;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v4, (uint64_t)static Logger.siriPhone);
  os_log_type_t v5 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_124_2(v0))
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v7 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v40 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v1[18] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000003ALL,  0x800000000034A430LL,  &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 18, v1 + 19, v6 + 4);
    OUTLINED_FUNCTION_57_0(&dword_0, v0, v5, "#CallingIntentUnsupportedFlowStrategy %s", v6);
    OUTLINED_FUNCTION_17_0(v7);
    OUTLINED_FUNCTION_0_2(v7);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);
  }

  uint64_t v8 = v1[32];
  uint64_t v9 = v1[30];
  OUTLINED_FUNCTION_105_3();
  uint64_t v10 = OUTLINED_FUNCTION_93_0();
  uint64_t v11 = OUTLINED_FUNCTION_70_9(v10);
  ParameterResolutionRecord.parameter.getter(v11);
  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  v12.value = OUTLINED_FUNCTION_168_1().value;
  uint64_t v13 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v14 = OUTLINED_FUNCTION_158_0(v9, 1LL);
  if (v12.value - 4 < 2)
  {
    uint64_t v16 = v1[29];
    uint64_t v15 = v1[30];
    ((void (*)(uint64_t))NLContextUpdate.init())(v14);
    OUTLINED_FUNCTION_158_0(v16, 0LL);
    outlined assign with take of NLContextUpdate?(v16, v15);
    if (!__swift_getEnumTagSinglePayload(v15, 1LL, v13))
    {
      uint64_t v17 = type metadata accessor for MachineUtteranceBuilder(0LL);
      swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
      MachineUtteranceBuilder.init()();
      if (one-time initialization token for callId != -1) {
        swift_once(&one-time initialization token for callId, one-time initialization function for callId);
      }
      TerminalOntologyNode.name.getter();
      OUTLINED_FUNCTION_135_2();
      uint64_t v19 = UUID.init()(v18);
      uint64_t v20 = UUID.uuidString.getter(v19);
      uint64_t v22 = v21;
      OUTLINED_FUNCTION_114_1();
      uint64_t v23 = OUTLINED_FUNCTION_85_5();
      dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v23, v24, v20, v22);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_16_3();
      uint64_t v25 = swift_bridgeObjectRelease();
      dispatch thunk of MachineUtteranceBuilder.build()(v25);
      OUTLINED_FUNCTION_38_1();
      uint64_t v26 = OUTLINED_FUNCTION_98();
      ((void (*)(uint64_t))NLContextUpdate.nlInput.setter)(v26);
    }

    goto LABEL_12;
  }

  if (v12.value != PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_preferredCallProvider)
  {
LABEL_12:
    uint64_t v37 = (int8x16_t *)OUTLINED_FUNCTION_141_2((uint64_t)_swiftEmptyArrayStorage);
    v1[38] = v37;
    OUTLINED_FUNCTION_111_2(v37);
    uint64_t v38 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v1[39] = v38;
    *uint64_t v38 = v1;
    v38[1] = CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:);
    OUTLINED_FUNCTION_90_5();
    return ((uint64_t (*)(void *, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t), int8x16_t *, uint64_t))withCheckedThrowingContinuation<A>(isolation:function:_:))( v32,  v33,  v34,  v35,  v30,  v31,  v36,  v29);
  }

  uint64_t v27 = (int8x16_t *)swift_task_alloc(32LL);
  v1[34] = v27;
  OUTLINED_FUNCTION_111_2(v27);
  uint64_t v28 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v1[35] = v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v28 = v1;
  v28[1] = CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:);
  unint64_t v30 = 0x800000000034A430LL;
  char v31 = partial apply for closure #1 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:);
  uint64_t v32 = v1 + 17;
  uint64_t v33 = 0LL;
  uint64_t v34 = 0LL;
  unint64_t v35 = 0xD00000000000003ALL;
  uint64_t v36 = v27;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t), int8x16_t *, uint64_t))withCheckedThrowingContinuation<A>(isolation:function:_:))( v32,  v33,  v34,  v35,  v30,  v31,  v36,  v29);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  swift_task_dealloc(v3);
  if (!v1) {
    swift_task_dealloc(*(void *)(v0 + 272));
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t *v0;
  int8x16_t *v1;
  uint64_t **v2;
  __int16 v1 = (int8x16_t *)OUTLINED_FUNCTION_141_2(v0[17]);
  v0[38] = (uint64_t)v1;
  OUTLINED_FUNCTION_111_2(v1);
  v0[39] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = (uint64_t *)CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:);
  OUTLINED_FUNCTION_90_5();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v8 = *v1;
  uint64_t v2 = v8;
  OUTLINED_FUNCTION_39_0(&v8);
  *(void *)(v2 + 320) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  OUTLINED_FUNCTION_72();
  __int16 v1 = *(void *)(v0 + 232);
  PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional v12 = *(void *)(v0 + 240);
  uint64_t v16 = *(void *)(v0 + 264);
  uint64_t v17 = *(void *)(v0 + 224);
  uint64_t v13 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v15 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void **)(v0 + 152);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  OUTLINED_FUNCTION_11_26();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_49_0((void *)(v0 + 56));
  uint64_t v4 = OUTLINED_FUNCTION_120_0();
  os_log_type_t v5 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v4);
  uint64_t v6 = OUTLINED_FUNCTION_51_0();
  outlined init with copy of Result<TemplatingResult, Error>( v6,  v7,  &demangling cache variable for type metadata for NLContextUpdate?);
  uint64_t v8 = type metadata accessor for AceOutput(0LL);
  *(_OWORD *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = 0LL;
  *(_OWORD *)(v0 + outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = 0u;
  v3[3] = v8;
  v3[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v3);
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v13,  v0 + 16,  v5 & 1,  v14,  0LL,  0LL,  v1,  _swiftEmptyArrayStorage);
  uint64_t v9 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_97(v9, &demangling cache variable for type metadata for FlowActivity?);
  outlined destroy of PhoneCallNLIntent?(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_15_0(v15);
  OUTLINED_FUNCTION_133_2();
  outlined destroy of PhoneCallNLIntent?(v12, &demangling cache variable for type metadata for NLContextUpdate?);
  swift_task_dealloc(v16);
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc(v17);
  OUTLINED_FUNCTION_7_8();
  uint64_t v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_36_14(v10);
}

{
  uint64_t v0;
  uint64_t v1;
  swift_task_dealloc(*(void *)(v0 + 272));
  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_97(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_97(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( uint64_t a1, uint64_t *a2)
{
  uint64_t v25 = a1;
  uint64_t v2 = *a2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v3 = *(void *)(v23 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin();
  uint64_t v5 = *(void *)(v2 + 264);
  uint64_t v6 = *(void *)(*(void *)(*(void *)(v2 + 272) + 8LL) + 16LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v21 - v7;
  dispatch thunk of RCHFlowDelegate.makeAceViewProvider()(v5, v6);
  uint64_t v9 = swift_getAssociatedTypeWitness(255LL);
  uint64_t v10 = type metadata accessor for ParameterResolutionRecord(0LL, v9);
  uint64_t v22 = ParameterResolutionRecord.app.getter(v10);
  uint64_t v21 = ParameterResolutionRecord.intent.getter(v10);
  uint64_t v11 = (void *)ParameterResolutionRecord.result.getter(v10);
  uint64_t v12 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v25,  v23);
  uint64_t v13 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = (v13 + 16) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_3FF338, v14 + v4, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))( v15 + v14,  (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v12);
  uint64_t v16 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v6, v5, AssociatedTypeWitness);
  uint64_t v19 = (void *)v21;
  uint64_t v18 = v22;
  dispatch thunk of AceViewProviding.makeAceViewsForLaunchAppWithButton(app:intent:intentResolutionResult:intentResponse:utteranceViews:_:)( v22,  v21,  v11,  0LL,  _swiftEmptyArrayStorage,  partial apply for closure #1 in closure #1 in ContactUnsetRelationshipFlowStrategy.makeMeCardNotFoundResponse(requestedRelationship:resolveRecord:),  v15,  v16,  AssociatedConformanceWitness);
  swift_release(v18);

  swift_release(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v16);
}

uint64_t closure #2 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( uint64_t a1, uint64_t *a2)
{
  uint64_t v48 = a1;
  uint64_t v2 = *a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v47 = *(void *)(v45 + 64);
  __chkstk_darwin();
  uint64_t v44 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = *(void *)(v2 + 264);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(v2 + 272) + 8LL) + 16LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t v49 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v38 - v13;
  dispatch thunk of RCHFlowDelegate.makeDialogTemplating()(v11, v12);
  uint64_t v15 = swift_getAssociatedTypeWitness(255LL);
  uint64_t v16 = type metadata accessor for ParameterResolutionRecord(0LL, v15);
  uint64_t v42 = ParameterResolutionRecord.app.getter(v16);
  uint64_t v17 = ParameterResolutionRecord.parameter.getter(v16);
  uint64_t v18 = ParameterIdentifier.name.getter(v17);
  uint64_t v40 = v19;
  uint64_t v41 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v10, v5);
  uint64_t v39 = ParameterResolutionRecord.result.getter(v16);
  uint64_t v21 = (void *)ParameterResolutionRecord.intent.getter(v16);
  uint64_t v22 = ParameterResolutionRecord.parameter.getter(v16);
  uint64_t v38 = ParameterIdentifier.multicardinalIndex.getter(v22);
  uint64_t v24 = v23 & 1;
  v20(v8, v5);
  uint64_t v25 = v44;
  uint64_t v26 = v45;
  uint64_t v27 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v48, v46);
  uint64_t v28 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v29 = v26;
  uint64_t v30 = (v28 + 16) & ~v28;
  uint64_t v31 = swift_allocObject(&unk_3FF360, v30 + v47, v28 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31 + v30, v25, v27);
  uint64_t v32 = v12;
  uint64_t v33 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v32, v11, AssociatedTypeWitness);
  uint64_t v35 = v42;
  uint64_t v36 = (void *)v39;
  dispatch thunk of DialogTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( v42,  v41,  v40,  v39,  v21,  v38,  v24,  partial apply for closure #1 in closure #2 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:),  v31,  v33,  AssociatedConformanceWitness);
  swift_release(v35);
  swift_bridgeObjectRelease();

  swift_release(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v14, v33);
}

uint64_t closure #1 in closure #2 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of Result<TemplatingResult, Error>( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    uint64_t v13 = *v8;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(throwing:)(&v13, v9);
  }

  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(returning:)(v5, v11);
  }

#error "113C8C: call analysis failed (funcsize=28)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:)( uint64_t a1,  uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  v3[23] = a2;
  _BYTE v3[24] = v2;
  v3[22] = a1;
  v3[25] = *v2;
  uint64_t v4 = *(void *)(OUTLINED_FUNCTION_152_1() - 8);
  v3[26] = v4;
  v3[27] = OUTLINED_FUNCTION_8_30(v4);
  v3[28] = OUTLINED_FUNCTION_28();
  uint64_t v5 = OUTLINED_FUNCTION_94_4();
  v3[29] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[30] = v6;
  v3[31] = OUTLINED_FUNCTION_23(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[32] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = OUTLINED_FUNCTION_94();
  v3[33] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[34] = v9;
  v3[35] = OUTLINED_FUNCTION_23(v9);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:)()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = *(void *)(v1 + 272);
  v0[36] = v2;
  uint64_t v3 = *(void *)(v1 + 264);
  v0[37] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_139_1();
  v0[38] = v4;
  uint64_t v5 = type metadata accessor for ParameterResolutionRecord(0LL, v4);
  v0[39] = v5;
  uint64_t v6 = (void *)ParameterResolutionRecord.intent.getter(v5);
  default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(v3, v2);
  OUTLINED_FUNCTION_144_1();
  v7();

  uint64_t v8 = (void *)ParameterResolutionRecord.intent.getter(v5);
  uint64_t v9 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
  uint64_t v10 = swift_dynamicCastObjCClass(v8, v9);

  if (v10)
  {
    uint64_t v11 = (void *)ParameterResolutionRecord.result.getter(v5);
    uint64_t v12 = (char *)[v11 unsupportedReason];

    if (v12 == (_BYTE *)&dword_4 + 1)
    {
      uint64_t v48 = v0[30];
      uint64_t v49 = v0[29];
      uint64_t v13 = (void *)v0[24];
      uint64_t v14 = v13[42];
      __swift_project_boxed_opaque_existential_1(v13 + 38, v13[41]);
      uint64_t v15 = ParameterResolutionRecord.app.getter(v5);
      __swift_project_boxed_opaque_existential_1(v13 + 3, v13[6]);
      uint64_t v16 = OUTLINED_FUNCTION_51_0();
      v17(v16);
      __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
      uint64_t v18 = OUTLINED_FUNCTION_161_1();
      dispatch thunk of DeviceState.siriLocale.getter(v18, v19);
      uint64_t v20 = OUTLINED_FUNCTION_92_5(v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16));
      uint64_t v22 = v21;
      uint64_t v23 = swift_release(v15);
      OUTLINED_FUNCTION_109_4(v23, v24, v25, v26, v27, v28, v29, v30, v48, v49);
      OUTLINED_FUNCTION_11_12();
      if (v22)
      {
        String.toSpeakableString.getter(v20, v22);
        OUTLINED_FUNCTION_62();
        uint64_t v31 = 0LL;
      }

      else
      {
        uint64_t v31 = 1LL;
      }

      uint64_t v43 = v0[32];
      uint64_t v44 = v0[24];
      uint64_t v45 = OUTLINED_FUNCTION_26_0();
      __swift_storeEnumTagSinglePayload(v43, v31, 1LL, v45);
      uint64_t v46 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                      + **(void **)(v44 + 176)
                                                      + 24));
      v0[40] = v46;
      *uint64_t v46 = v0;
      v46[1] = CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:);
      OUTLINED_FUNCTION_110_4();
      __asm { BR              X1 }
    }
  }

  uint64_t v32 = v0[24];
  uint64_t v33 = *(void **)(v32 + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple);
  uint64_t v34 = OUTLINED_FUNCTION_142_0();
  uint64_t v35 = (void *)ParameterResolutionRecord.intent.getter(v5);
  uint64_t v36 = OUTLINED_FUNCTION_120_0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v36, v37, v4);
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)( v35,  0,  v34,  v4,  AssociatedConformanceWitness);
  v0[51] = v39;
  type metadata accessor for SirikitDeviceState(0LL);
  uint64_t v40 = *(void *)(v32 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v32 + 24), v40);
  OUTLINED_FUNCTION_121_3(v40);
  v0[52] = SirikitDeviceState.__allocating_init(from:)(v50);
  uint64_t v41 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for StartCallCATsSimple + *v33 + 992));
  v0[53] = v41;
  OUTLINED_FUNCTION_142_2( v41,  (uint64_t)CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:));
  OUTLINED_FUNCTION_110_4();
  __asm { BR              X2 }

uint64_t CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:)()
{
  *(void *)(v2 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 336) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v18;
  OUTLINED_FUNCTION_47_4();
  uint64_t v1 = (void *)v0[48];
  uint64_t v2 = v0[24];
  uint64_t v3 = *(void *)(v2 + 48);
  OUTLINED_FUNCTION_82((void *)(v2 + 24));
  OUTLINED_FUNCTION_121_3(v3);
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  OUTLINED_FUNCTION_82(v0 + 12);
  v0[20] = OUTLINED_FUNCTION_149_2();
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  v0[21] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 17);
  OUTLINED_FUNCTION_87_7((uint64_t)boxed_opaque_existential_1);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v9 = OUTLINED_FUNCTION_5_32(v8);
  *(_OWORD *)(v9 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  uint64_t v18 = v9;
  specialized Array._endMutation()(v9, v10, v11, v12);
  v0[49] = v18;
  uint64_t v13 = *(void *)(v5 + 8);
  uint64_t v14 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
  uint64_t v15 = v1;
  uint64_t v16 = (void *)swift_task_alloc(v14);
  v0[50] = v16;
  void *v16 = v0;
  v16[1] = CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:);
  return ((uint64_t (*)(void, void *, uint64_t, void, uint64_t, uint64_t))dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:))( v0[22],  v0 + 17,  v18,  v0[35],  v4,  v13);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 400));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 224);

  outlined destroy of CommonDirectAction(v3, type metadata accessor for ButtonConfigurationModel);
  outlined destroy of PhoneCallNLIntent?(v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  uint64_t v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_50_11();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_106_2();
  OUTLINED_FUNCTION_39_0(v4);
  *(void *)(v1 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc(v5);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_76();
  if (!v0) {
    *(void *)(v1 + 440) = v3;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_67_11(v6, v7, v8);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 456));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v1 = *(void *)(v0 + 272);

  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v2);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void *)(v0 + 272);
  outlined destroy of PhoneCallNLIntent?( *(void *)(v0 + 256),  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_78_8();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void *)(v0 + 272);
  outlined destroy of CommonDirectAction(*(void *)(v0 + 224), type metadata accessor for ButtonConfigurationModel);
  OUTLINED_FUNCTION_97(v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_78_8();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_54_9(*(void *)(v0 + 272));
  OUTLINED_FUNCTION_78_8();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, uint64_t a30)
{
  a29 = v31;
  a30 = v32;
  a28 = v30;
  uint64_t v33 = v30[42];
  uint64_t v34 = v30[38];
  uint64_t v63 = v30[39];
  uint64_t v64 = v30[36];
  uint64_t v35 = v30[27];
  uint64_t v36 = v30[28];
  uint64_t v37 = v30[26];
  uint64_t v38 = v30[24];
  uint64_t v62 = v30[23];
  uint64_t v65 = v30[37];
  dispatch thunk of LabelExecutionResult.subscript.getter();
  OUTLINED_FUNCTION_38_1();
  uint64_t v39 = OUTLINED_FUNCTION_161_1();
  ButtonConfigurationModel.init(label:url:)(v39, v40, 0xD000000000000013LL, v41, v42);
  outlined init with copy of ButtonConfigurationModel(v36, v35);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v44 = OUTLINED_FUNCTION_39_5(v43, *(void *)(v37 + 72));
  v30[43] = v44;
  *(_OWORD *)(v44 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  outlined init with take of ButtonConfigurationModel(v35, v44 + v33);
  a15 = 0LL;
  a16 = 0xE000000000000000LL;
  OUTLINED_FUNCTION_155_0();
  swift_bridgeObjectRelease();
  OutputGenerationManifest.responseViewId.setter(0xD000000000000020LL, 0x800000000034A3B0LL);
  uint64_t v45 = *(void **)(v38 + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple);
  uint64_t v46 = OUTLINED_FUNCTION_142_0();
  uint64_t v47 = (void *)ParameterResolutionRecord.intent.getter(v63);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v64, v65, v34);
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)( v47,  0,  v46,  v34,  AssociatedConformanceWitness);
  v30[44] = v49;
  type metadata accessor for SirikitDeviceState(0LL);
  uint64_t v50 = *(void *)(v38 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v38 + 24), v50);
  OUTLINED_FUNCTION_121_3(v50);
  v30[45] = SirikitDeviceState.__allocating_init(from:)(&a15);
  unint64_t v51 = *(int **)(class metadata base offset for StartCallCATsSimple + *v45 + 1008);
  uint64_t v66 = (char *)v51 + *v51;
  char v52 = (void *)swift_task_alloc(v51[1]);
  v30[46] = v52;
  OUTLINED_FUNCTION_142_2( v52,  (uint64_t)CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:));
  OUTLINED_FUNCTION_68_10();
  return v55( v53,  v54,  v55,  v56,  v57,  v58,  v59,  v60,  a9,  v62,  v63,  v64,  v65,  v66,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:)( uint64_t a1)
{
  v2[47] = v1;
  swift_task_dealloc(v5);
  swift_release(v2[45]);
  OUTLINED_FUNCTION_22();
  if (v1) {
    OUTLINED_FUNCTION_62();
  }
  else {
    v2[48] = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[55];
  OUTLINED_FUNCTION_4_50((void *)(v10[24] + 24LL));
  OUTLINED_FUNCTION_22_24();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_5_32(v12);
  OUTLINED_FUNCTION_14_31(v13, v14, v15, v16, (__n128)xmmword_31FE60);
  v10[56] = a10;
  id v17 = v11;
  uint64_t v18 = (void *)OUTLINED_FUNCTION_48_9();
  v10[57] = v18;
  *uint64_t v18 = v10;
  v18[1] = CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  v5[18] = *v4;
  uint64_t v6 = OUTLINED_FUNCTION_94();
  v5[19] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[20] = v7;
  v5[21] = OUTLINED_FUNCTION_23(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:)()
{
  uint64_t v1 = *(void *)(v0 + 112);
  char v2 = default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)( *(void *)(*(void *)(v0 + 144) + 264LL),  *(void *)(*(void *)(v0 + 144) + 272LL));
  OUTLINED_FUNCTION_53_12(v2);
  uint64_t v3 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
  if (!swift_dynamicCastObjCClass(v1, v3)) {
    goto LABEL_6;
  }
  uint64_t v4 = (char *)[*(id *)(v0 + 120) unsupportedReason];
  uint64_t v5 = (uint64_t)v4;
  if ((unint64_t)(v4 - 2) < 2)
  {
    uint64_t v6 = (void *)swift_task_alloc(dword_432414);
    *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = v6;
    *uint64_t v6 = v0;
    v6[1] = CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:);
    return CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:)( *(void *)(v0 + 104),  v5,  0,  *(void *)(v0 + 128),  *(void *)(v0 + 168));
  }

  if (v4 == (_BYTE *)&dword_0 + 1)
  {
    OUTLINED_FUNCTION_73_10();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple + v8 + 784));
    *(void *)(v0 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
    uint64_t v10 = CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:);
  }

  else
  {
LABEL_6:
    OUTLINED_FUNCTION_73_10();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple + v11 + 736));
    *(void *)(v0 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v9;
    uint64_t v10 = CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:);
  }

  uint64_t v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_8(v9, (uint64_t)v10, v13);
  return OUTLINED_FUNCTION_24_1(v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 184) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_54_9(*(void *)(v0 + 160));
  swift_task_dealloc(*(void *)(v0 + 168));
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_27_7();
  v3[7] = v1;
  v3[8] = v2;
  v3[9] = v0;
  OUTLINED_FUNCTION_73_6();
  *(void *)(v4 + 200) = v0;
  swift_task_dealloc(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_27_7();
  v3[10] = v1;
  v3[11] = v2;
  v3[12] = v0;
  OUTLINED_FUNCTION_73_6();
  *(void *)(v4 + 2outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v0;
  swift_task_dealloc(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 240));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v1 = *(void *)(v0 + 160);

  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_76_1();
  swift_task_dealloc(*(void *)(v0 + 168));
  char v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v2);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_15_0(*(void *)(v0 + 160));
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_15_0(*(void *)(v0 + 160));
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_15_0(*(void *)(v0 + 160));
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[8];
  uint64_t v12 = v10[17];
  v10[28] = v11;
  OUTLINED_FUNCTION_4_50((void *)(v12 + 24));
  OUTLINED_FUNCTION_22_24();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_5_32(v13);
  OUTLINED_FUNCTION_14_31(v14, v15, v16, v17, (__n128)xmmword_31FE60);
  v10[29] = a10;
  id v18 = v11;
  uint64_t v19 = (void *)OUTLINED_FUNCTION_48_9();
  v10[30] = v19;
  *uint64_t v19 = v10;
  v19[1] = CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

{
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  OUTLINED_FUNCTION_44();
  uint64_t v11 = (void *)v10[11];
  uint64_t v12 = v10[17];
  v10[28] = v11;
  OUTLINED_FUNCTION_4_50((void *)(v12 + 24));
  OUTLINED_FUNCTION_22_24();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_5_32(v13);
  OUTLINED_FUNCTION_14_31(v14, v15, v16, v17, (__n128)xmmword_31FE60);
  v10[29] = a10;
  id v18 = v11;
  uint64_t v19 = (void *)OUTLINED_FUNCTION_48_9();
  v10[30] = v19;
  *uint64_t v19 = v10;
  v19[1] = CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactsNoCallHistoryForRedialUnsupportedValueOutput(intent:intentResolutionResult:)( uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v3[10] = *v2;
  uint64_t v4 = OUTLINED_FUNCTION_94();
  v3[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[12] = v5;
  v3[13] = OUTLINED_FUNCTION_23(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactsNoCallHistoryForRedialUnsupportedValueOutput(intent:intentResolutionResult:)()
{
  uint64_t v1 = v0[9];
  char v2 = default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)( *(void *)(v0[10] + 264LL),  *(void *)(v0[10] + 272LL));
  OUTLINED_FUNCTION_53_12(v2);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple
                                                  + **(void **)(v1
                                                                + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple)
                                                  + 848));
  v0[14] = v3;
  uint64_t v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_8( v3,  (uint64_t)CallingIntentUnsupportedValueFlowStrategy.makeContactsNoCallHistoryForRedialUnsupportedValueOutput(intent:intentResolutionResult:),  v6);
  return OUTLINED_FUNCTION_24_1(v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 120) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 144));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v1 = *(void *)(v0 + 96);

  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_7_8();
  char v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v2);
}

{
  uint64_t v0;
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8LL))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactsNoCallHistoryForRedialUnsupportedValueOutput(intent:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[16];
  OUTLINED_FUNCTION_4_50((void *)(v10[9] + 24LL));
  OUTLINED_FUNCTION_22_24();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_5_32(v12);
  OUTLINED_FUNCTION_14_31(v13, v14, v15, v16, (__n128)xmmword_31FE60);
  v10[17] = a10;
  id v17 = v11;
  id v18 = (void *)OUTLINED_FUNCTION_48_9();
  v10[18] = v18;
  *id v18 = v10;
  v18[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactsNoCallHistoryForRedialUnsupportedValueOutput(intent:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 224) = a5;
  *(void *)(v6 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(void *)(v6 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(void *)(v6 + 2outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a4;
  *(_BYTE *)(v6 + 424) = a3;
  *(void *)(v6 + 200) = a1;
  uint64_t v7 = OUTLINED_FUNCTION_82_0();
  *(void *)(v6 + 240) = v7;
  *(void *)(v6 + 24__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = OUTLINED_FUNCTION_94();
  *(void *)(v6 + 2outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v6 + 264) = v9;
  *(void *)(v6 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = *(void *)(OUTLINED_FUNCTION_152_1() - 8);
  *(void *)(v6 + 280) = v10;
  *(void *)(v6 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_8_30(v10);
  *(void *)(v6 + 2outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = OUTLINED_FUNCTION_28();
  uint64_t v11 = OUTLINED_FUNCTION_94_4();
  *(void *)(v6 + 304) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v6 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(void *)(v6 + 320) = OUTLINED_FUNCTION_23(v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v6 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_23(*(void *)(v13 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:)()
{
  uint64_t v27 = v0[39];
  uint64_t v28 = v0[38];
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = v0[27];
  uint64_t v3 = v1[42];
  __swift_project_boxed_opaque_existential_1(v1 + 38, v1[41]);
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v4);
  OUTLINED_FUNCTION_121_3(v4);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  dispatch thunk of DeviceState.siriLocale.getter(v5, v6);
  uint64_t v7 = OUTLINED_FUNCTION_92_5(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 16));
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_109_4(v7, v8, v10, v11, v12, v13, v14, v15, v27, v28);
  OUTLINED_FUNCTION_11_12();
  uint64_t v16 = v0[41];
  if (v9)
  {
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_1_34(v7, v9);
    uint64_t v17 = OUTLINED_FUNCTION_26_0();
    __swift_storeEnumTagSinglePayload(v16, 0LL, 1LL, v17);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v18 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1(v16, v19, v20, v18);
  }

  v0[23] = App.settingsUrl.getter();
  v0[24] = v21;
  v0[42] = v21;
  OUTLINED_FUNCTION_73_10();
  if ((v23 & 1) != 0 || v0[26] != 3LL)
  {
    uint64_t v24 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for StartCallCATsSimple + v22 + 768));
    v0[45] = v24;
    uint64_t v25 = CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:);
  }

  else
  {
    uint64_t v24 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for StartCallCATsSimple + v22 + 752));
    v0[43] = v24;
    uint64_t v25 = CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:);
  }

  *uint64_t v24 = v0;
  v24[1] = v25;
  return v29(v0[41]);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  OUTLINED_FUNCTION_49_3();
  v0[17] = v2;
  v0[18] = v3;
  v0[19] = v1;
  OUTLINED_FUNCTION_39_0(v4);
  v0[44] = v1;
  swift_task_dealloc(v5);
  if (v1) {
    OUTLINED_FUNCTION_140_2();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  OUTLINED_FUNCTION_138_1(*(void *)(v0 + 144));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + v1
                                                  + 16));
  *(void *)(v0 + 384) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_107_2( v2,  (uint64_t)CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:));
  return OUTLINED_FUNCTION_4_31(v3, v4);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  OUTLINED_FUNCTION_49_3();
  v0[20] = v2;
  v0[21] = v3;
  v0[22] = v1;
  OUTLINED_FUNCTION_39_0(v4);
  v0[46] = v1;
  swift_task_dealloc(v5);
  if (v1) {
    OUTLINED_FUNCTION_140_2();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  OUTLINED_FUNCTION_138_1(*(void *)(v0 + 168));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + v1
                                                  + 16));
  *(void *)(v0 + 384) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_107_2( v2,  (uint64_t)CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:));
  return OUTLINED_FUNCTION_4_31(v3, v4);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_49_3();
  uint64_t v2 = v0[48];
  v0[49] = v3;
  v0[50] = v1;
  swift_task_dealloc(v2);
  if (v1) {
    OUTLINED_FUNCTION_140_2();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 416));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = *(void **)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 248);

  uint64_t v3 = OUTLINED_FUNCTION_85_5();
  v4(v3);
  outlined destroy of CommonDirectAction(v2, type metadata accessor for ButtonConfigurationModel);
  OUTLINED_FUNCTION_119_1(v5, &demangling cache variable for type metadata for SpeakableString?);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  swift_task_dealloc(v8);
  uint64_t v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v6);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_79_6();
  OUTLINED_FUNCTION_119_1(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  return OUTLINED_FUNCTION_5_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_47_4();
  OUTLINED_FUNCTION_79_6();
  OUTLINED_FUNCTION_119_1(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  return OUTLINED_FUNCTION_5_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_47_4();

  OUTLINED_FUNCTION_79_6();
  OUTLINED_FUNCTION_119_1(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  return OUTLINED_FUNCTION_5_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v24 = OUTLINED_FUNCTION_49( (uint64_t)[*(id *)(v23 + 392) dialog],  (unint64_t *)&lazy cache variable for type metadata for DialogElement,  DialogElement_ptr);
  OUTLINED_FUNCTION_153_2(v24);
  OUTLINED_FUNCTION_79();
  if (v22 >> 62)
  {
    OUTLINED_FUNCTION_35_19();
    uint64_t v25 = OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v25)
  {
    uint64_t v26 = OUTLINED_FUNCTION_68_9();
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v26, v27, v28);
    uint64_t v29 = (void *)OUTLINED_FUNCTION_38_3();
    uint64_t v99 = *(void **)(v23 + 376);
    uint64_t v30 = *(void *)(v23 + 336);
    uint64_t v31 = *(void *)(v23 + 184);
    uint64_t v33 = *(void *)(v23 + 288);
    uint64_t v32 = *(void *)(v23 + 296);
    uint64_t v34 = *(void *)(v23 + 280);
    uint64_t v96 = *(void *)(v23 + 264);
    uint64_t v97 = *(void *)(v23 + 272);
    uint64_t v98 = *(void *)(v23 + 256);
    uint64_t v35 = *(void *)(v23 + 232);
    uint64_t v95 = *(void *)(v23 + 224);
    OUTLINED_FUNCTION_62();
    id v36 = [v29 fullPrint];

    static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    OUTLINED_FUNCTION_135_2();

    uint64_t v37 = OUTLINED_FUNCTION_85_5();
    ButtonConfigurationModel.init(label:url:)(v37, v38, v31, v30, v39);
    outlined init with copy of ButtonConfigurationModel(v32, v33);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
    uint64_t v41 = OUTLINED_FUNCTION_39_5(v40, *(void *)(v34 + 72));
    *(_OWORD *)(v41 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
    outlined init with take of ButtonConfigurationModel(v33, (uint64_t)v36 + v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v97, v95, v98);
    OUTLINED_FUNCTION_155_0();
    swift_bridgeObjectRelease();
    OutputGenerationManifest.responseViewId.setter(0xD000000000000020LL, 0x800000000034A3B0LL);
    OUTLINED_FUNCTION_49_0((void *)(v35 + 24));
    OUTLINED_FUNCTION_11_26();
    uint64_t v42 = (void *)OUTLINED_FUNCTION_51_0();
    __swift_project_boxed_opaque_existential_1(v42, v43);
    *(void *)(v23 + 120) = OUTLINED_FUNCTION_149_2();
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
    *(void *)(v23 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v44;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v23 + 96));
    OUTLINED_FUNCTION_87_7((uint64_t)boxed_opaque_existential_1);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v47 = OUTLINED_FUNCTION_5_32(v46);
    *(_OWORD *)(v47 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
    *(void *)(v47 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v99;
    uint64_t v100 = v47;
    specialized Array._endMutation()(v47, v48, v49, v50);
    *(void *)(v23 + 40__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v100;
    id v51 = v99;
    char v52 = (void *)OUTLINED_FUNCTION_48_9();
    *(void *)(v23 + 4outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v52;
    *char v52 = v23;
    v52[1] = CallingIntentUnsupportedValueFlowStrategy.generateOutputForCameraOrMicUnavailable(reason:app:outputManifest:);
    OUTLINED_FUNCTION_154_1();
    OUTLINED_FUNCTION_68_10();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v53,  v54,  v55,  v56,  v57,  v58,  v59,  v60,  v95,  v96,  v97,  v98,  v35 + 24,  v23 + 56,  v23 + 96,  v99,  v100,  0xE000000000000000LL,  a19,  a20,  a21,  a22);
  }

  else
  {
    uint64_t v62 = *(void **)(v23 + 392);
    uint64_t v63 = *(void **)(v23 + 376);
    uint64_t v65 = *(void *)(v23 + 240);
    uint64_t v64 = *(uint64_t **)(v23 + 248);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_13_1();
    id v66 = [v62 catId];
    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    uint64_t v69 = v68;

    *uint64_t v64 = v67;
    v64[1] = v69;
    OUTLINED_FUNCTION_179();
    v64[2] = v70;
    v64[3] = v71;
    OUTLINED_FUNCTION_179();
    v64[4] = v72;
    uint64_t v64[5] = v73;
    v64[6] = 278LL;
    uint64_t v74 = OUTLINED_FUNCTION_98();
    swift_storeEnumTagMultiPayload(v74, v75, 3LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    OUTLINED_FUNCTION_4_4(v65, v76);
    PhoneError.logged()(v77);
    outlined destroy of CommonDirectAction((uint64_t)v64, type metadata accessor for PhoneError);
    swift_willThrow(v78, v79, v80, v81, v82, v83, v84, v85);

    OUTLINED_FUNCTION_167(v86, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_68_10();
    return v87( v87,  v88,  v89,  v90,  v91,  v92,  v93,  v94,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
  }

void CallingIntentUnsupportedValueFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)()
{
}

void CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2)
{
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.__ivar_destroyer()
{
  return swift_release(*(void *)(v0
                                 + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple));
}

uint64_t protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance CallingIntentUnsupportedValueFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:)[1]);
  *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v9;
  uint64_t v11 = type metadata accessor for CallingIntentUnsupportedValueFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  v10);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:)(a1, a2, v11, a4);
}

uint64_t type metadata completion function for CallingIntentUnsupportedValueFlowStrategy(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + 280);
}

uint64_t type metadata accessor for CallingIntentUnsupportedValueFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CallingIntentUnsupportedValueFlowStrategy);
}

uint64_t partial apply for closure #2 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( uint64_t a1)
{
  return closure #2 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( a1,  *(uint64_t **)(v1 + 16));
}

uint64_t partial apply for closure #1 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( uint64_t a1)
{
  return closure #1 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( a1,  *(uint64_t **)(v1 + 16));
}

uint64_t outlined assign with take of NLContextUpdate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_115AF0()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
}

uint64_t sub_115AFC()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

uint64_t objectdestroyTm_8(uint64_t *a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = ((v3 + 16) & ~v3) + *(void *)(v2 + 64);
  uint64_t v5 = v3 | 7;
  OUTLINED_FUNCTION_54_9(v2);
  return swift_deallocObject(v1, v4, v5);
}

uint64_t partial apply for closure #1 in closure #2 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( uint64_t a1)
{
  return closure #1 in closure #2 in CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)(a1);
}

void OUTLINED_FUNCTION_1_52()
{
}

uint64_t OUTLINED_FUNCTION_3_54()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

uint64_t OUTLINED_FUNCTION_4_50(void *a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_14_31(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  a1[1] = a5;
  a1[2].n128_u64[0] = v5;
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

  ;
}

void *OUTLINED_FUNCTION_22_24()
{
  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_36_14(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_44_16()
{
  return (*(uint64_t (**)(void, void))(v0[99] + 8LL))(v0[101], v0[98]);
}

void OUTLINED_FUNCTION_47_10(void *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_48_9()
{
  return swift_task_alloc(v0);
}

uint64_t OUTLINED_FUNCTION_53_12(char a1)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void, void))(*(void *)v1 + 256LL))( v2,  0LL,  0LL,  0LL,  0LL,  a1 & 1);
}

uint64_t OUTLINED_FUNCTION_54_9@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t OUTLINED_FUNCTION_55_8(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 24);
}

uint64_t OUTLINED_FUNCTION_56_10()
{
  return swift_task_dealloc(*(void *)(v0 + 120));
}

uint64_t OUTLINED_FUNCTION_60_13@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000034LL,  a1 | 0x8000000000000000LL,  (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_67_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

  ;
}

uint64_t OUTLINED_FUNCTION_70_9(uint64_t a1)
{
  return type metadata accessor for ParameterResolutionRecord(0LL, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_78_8()
{
  return swift_task_dealloc(*(void *)(v0 + 280));
}

void OUTLINED_FUNCTION_81_7()
{
  *(void *)(v1 - __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_85_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_87_7(uint64_t a1)
{
  *(void *)a1 = v2;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1;
  return swift_storeEnumTagMultiPayload(a1, v1, 6LL);
}

uint64_t OUTLINED_FUNCTION_88_6()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v0 & 0xC000000000000001LL) == 0, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_92_5@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3, v4);
}

void OUTLINED_FUNCTION_100_2()
{
}

uint64_t OUTLINED_FUNCTION_102_2()
{
  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_103_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_104_3(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 24);
}

  ;
}

void OUTLINED_FUNCTION_106_2()
{
  *(void *)(v1 - __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *v0;
}

  ;
}

int8x16_t OUTLINED_FUNCTION_111_2(int8x16_t *a1)
{
  int8x16_t result = vextq_s8(v1[10], v1[10], 8uLL);
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_112_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 69LL, a3, 226LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_113_3()
{
  return type metadata accessor for ParameterIdentifier(0LL);
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_121_3(uint64_t a1)
{
  return v1(a1, v2);
}

BOOL OUTLINED_FUNCTION_124_2(os_log_s *a1)
{
  return os_log_type_enabled(a1, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_127_2( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t, uint64_t))
{
  return a16(v16, v17);
}

uint64_t OUTLINED_FUNCTION_129_2()
{
  return ParameterResolutionRecord.intent.getter(*(void *)(v0 + 64));
}

uint64_t OUTLINED_FUNCTION_132_2@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *v2;
  return swift_task_dealloc(a1);
}

uint64_t OUTLINED_FUNCTION_133_2()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_136_1()
{
  return ParameterIdentifier.name.getter();
}

void OUTLINED_FUNCTION_138_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 376) = a1;
}

uint64_t OUTLINED_FUNCTION_139_1()
{
  return swift_getAssociatedTypeWitness(255LL);
}

uint64_t OUTLINED_FUNCTION_140_2()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 336));
}

uint64_t OUTLINED_FUNCTION_141_2@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 2outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = a1;
  return swift_task_alloc(32LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_149_2()
{
  return type metadata accessor for PhoneSnippetDataModels(0LL);
}

uint64_t OUTLINED_FUNCTION_152_1()
{
  return type metadata accessor for ButtonConfigurationModel(0LL);
}

uint64_t OUTLINED_FUNCTION_153_2(uint64_t a1)
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

  ;
}

void OUTLINED_FUNCTION_155_0()
{
}

uint64_t OUTLINED_FUNCTION_166_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v4, a3);
}

PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional OUTLINED_FUNCTION_168_1()
{
  v2._uint64_t countAndFlagsBits = v0;
  v2._object = v1;
  return PhoneCallSlotNames.init(rawValue:)(v2);
}

uint64_t OUTLINED_FUNCTION_169_0()
{
  return swift_task_dealloc(*(void *)(v0 + 88));
}

uint64_t OUTLINED_FUNCTION_170_0()
{
  return swift_errorRelease(*(void *)(v0 + 16));
}

  ;
}

Swift::String __swiftcall SiriKitDisambiguationItem.toSpokenHandleDisambiguation(deviceLocked:)( Swift::Bool deviceLocked)
{
  uint64_t v2 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()(deviceLocked);
  if (v2)
  {
    uint64_t v3 = v2;
    if (!deviceLocked || (SiriKitDisambiguationItemComponent.allowedOnLockScreen.getter() & 1) != 0)
    {
      v4._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_0_50();
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
    }

    uint64_t v2 = swift_release(v3);
  }

  uint64_t v5 = dispatch thunk of SiriKitDisambiguationItem.getFirstComponent()(v2);
  if (v5)
  {
    uint64_t v6 = v5;
    if (!deviceLocked || (SiriKitDisambiguationItemComponent.allowedOnLockScreen.getter() & 1) != 0)
    {
      v7._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_0_50();
      String.append(_:)(v7);
      swift_bridgeObjectRelease();
    }

    swift_release(v6);
  }

  uint64_t v8 = 0LL;
  uint64_t v9 = (void *)0xE000000000000000LL;
  result._object = v9;
  result._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t SiriKitDisambiguationItem.ttsPause(_:)()
{
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt,  &protocol witness table for UInt);
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  v2._uint64_t countAndFlagsBits = 8224092LL;
  v2._object = (void *)0xE300000000000000LL;
  String.append(_:)(v2);
  return 0x5C1B237374747B40LL;
}

uint64_t OUTLINED_FUNCTION_0_50()
{
  return dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)(v0 & 1);
}

BOOL specialized == infix<A>(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

void specialized == infix<A>(_:_:)()
{
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_5();
  __asm { BR              X10 }

{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_56_0();
  if ((v2 & 1) != 0) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0x80000000003464C0LL;
  }
  if ((v0 & 1) != 0) {
    Swift::String v4 = v1;
  }
  else {
    Swift::String v4 = 0x80000000003464C0LL;
  }
  if (v3 == v4) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(0xD00000000000001DLL, v3, 0xD00000000000001DLL, v4);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  OUTLINED_FUNCTION_237();
  __asm { BR              X11 }

{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  OUTLINED_FUNCTION_219();
  if (v0)
  {
    OUTLINED_FUNCTION_168_2();
    uint64_t v1 = OUTLINED_FUNCTION_204();
    if (v7) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v5;
    }
  }

  else
  {
    uint64_t v6 = 0xE700000000000000LL;
    uint64_t v1 = OUTLINED_FUNCTION_172_1() & 0xFFFFFFFFFFFFLL | 0x74000000000000LL;
  }

  if (v2)
  {
    OUTLINED_FUNCTION_168_2();
    OUTLINED_FUNCTION_189_0();
    if (v7) {
      uint64_t v3 = v9;
    }
    else {
      uint64_t v3 = v11;
    }
    if (v7) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v8;
    }
  }

  else
  {
    uint64_t v12 = 0xE700000000000000LL;
  }

  if (v1 == v3 && v6 == v12) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v6, v3, v12);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  OUTLINED_FUNCTION_217_0();
  __asm { BR              X10 }

{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_190_0();
  if (v0) {
    uint64_t v3 = 0xD000000000000015LL;
  }
  else {
    uint64_t v3 = 0x6F56746165706572LL;
  }
  Swift::String v4 = v2 | 0x8000000000000000LL;
  if (v0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0xEF6C69616D656369LL;
  }
  if ((v1 & 1) != 0) {
    uint64_t v6 = 0x6F56746165706572LL;
  }
  else {
    uint64_t v6 = 0xD000000000000015LL;
  }
  if ((v1 & 1) != 0) {
    Swift::String v7 = 0xEF6C69616D656369LL;
  }
  else {
    Swift::String v7 = v4;
  }
  if (v3 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v5, v6, v7);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  OUTLINED_FUNCTION_259();
  OUTLINED_FUNCTION_14_32();
  __asm { BR              X10 }

{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v0 = 0xEB00000000737365LL;
  OUTLINED_FUNCTION_227_0();
  if (v1)
  {
    OUTLINED_FUNCTION_173_1();
    if (v4 == 1) {
      uint64_t v6 = 0xD000000000000012LL;
    }
    else {
      uint64_t v6 = 0x54746C7561666564LL;
    }
    if (v4 == 1) {
      Swift::String v7 = v5;
    }
    else {
      Swift::String v7 = 0xED00007465677261LL;
    }
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_224();
    Swift::String v7 = 0xEB00000000737365LL;
  }

  if (v2)
  {
    OUTLINED_FUNCTION_56_0();
    if (v9 == 1) {
      uint64_t v3 = 0xD000000000000012LL;
    }
    else {
      uint64_t v3 = 0x54746C7561666564LL;
    }
    if (v9 == 1) {
      char v0 = v8;
    }
    else {
      char v0 = 0xED00007465677261LL;
    }
  }

  if (v6 == v3 && v7 == v0) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v6, v7, v3, v0);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  OUTLINED_FUNCTION_217_0();
  __asm { BR              X10 }

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_222();
  if (v0 != v1) {
    OUTLINED_FUNCTION_49_2(v0, 0xEA00000000007974LL, v1, 0xEA00000000007974LL);
  }
  OUTLINED_FUNCTION_7_4(0xEA00000000007974LL);
  OUTLINED_FUNCTION_2();
}

{
  OUTLINED_FUNCTION_230();
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_217_0();
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_195_0();
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_207_1();
  OUTLINED_FUNCTION_216_0();
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_217_0();
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_230();
  __asm { BR              X10 }

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_222();
  if (v0 != v1) {
    OUTLINED_FUNCTION_49_2(v0, 0xE500000000000000LL, v1, 0xE500000000000000LL);
  }
  OUTLINED_FUNCTION_7_4(0xE500000000000000LL);
  OUTLINED_FUNCTION_2();
}

{
  OUTLINED_FUNCTION_136_2();
  OUTLINED_FUNCTION_202_0();
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_136_2();
  OUTLINED_FUNCTION_202_0();
  __asm { BR              X10 }

{
  OUTLINED_FUNCTION_195_0();
  __asm { BR              X10 }

{
  unsigned __int8 v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_137_2();
  uint64_t v3 = v0;
  if (v0)
  {
    if (v0 == 1) {
      Swift::String v4 = 0x7461446567616D69LL;
    }
    else {
      Swift::String v4 = 0x63417463656C6573LL;
    }
    if (v3 == 1) {
      uint64_t v5 = 0xE900000000000061LL;
    }
    else {
      uint64_t v5 = 0xEC0000006E6F6974LL;
    }
  }

  else
  {
    uint64_t v5 = 0xE600000000000000LL;
    Swift::String v4 = OUTLINED_FUNCTION_139_2();
  }

  if (v1)
  {
    if (v1 == 1) {
      Swift::String v2 = 0x7461446567616D69LL;
    }
    else {
      Swift::String v2 = 0x63417463656C6573LL;
    }
    if (v1 == 1) {
      uint64_t v6 = 0xE900000000000061LL;
    }
    else {
      uint64_t v6 = 0xEC0000006E6F6974LL;
    }
  }

  else
  {
    uint64_t v6 = 0xE600000000000000LL;
  }

  if (v4 == v2 && v5 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v5, v2, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  OUTLINED_FUNCTION_187_0();
  if (v2)
  {
    OUTLINED_FUNCTION_173_1();
    OUTLINED_FUNCTION_161_2();
    if (v3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if (v3) {
      uint64_t v1 = v6;
    }
    else {
      uint64_t v1 = v7;
    }
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_244(19LL);
  }

  if (v4)
  {
    OUTLINED_FUNCTION_56_0();
    if (v11 == 1)
    {
      char v0 = v10;
    }

    else
    {
      uint64_t v5 = 0x636972656E6567LL;
      char v0 = 0xE700000000000000LL;
    }
  }

  if (v9 == v5 && v1 == v0) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v9, v1, v5, v0);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_190_0();
  if (v0) {
    uint64_t v3 = 0xD000000000000014LL;
  }
  else {
    uint64_t v3 = 0x31676F6C616964LL;
  }
  Swift::String v4 = v2 | 0x8000000000000000LL;
  if (v0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0xE700000000000000LL;
  }
  if ((v1 & 1) != 0) {
    uint64_t v6 = 0x31676F6C616964LL;
  }
  else {
    uint64_t v6 = 0xD000000000000014LL;
  }
  if ((v1 & 1) != 0) {
    Swift::String v7 = 0xE700000000000000LL;
  }
  else {
    Swift::String v7 = v4;
  }
  if (v3 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v5, v6, v7);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  OUTLINED_FUNCTION_187_0();
  if (v2)
  {
    OUTLINED_FUNCTION_173_1();
    if (v5 == 1) {
      Swift::String v7 = v4 + 1;
    }
    else {
      Swift::String v7 = 0x6143656E4F736168LL;
    }
    if (v5 == 1) {
      uint64_t v1 = v6;
    }
    else {
      uint64_t v1 = 0xEE00657079546C6CLL;
    }
  }

  else
  {
    Swift::String v7 = OUTLINED_FUNCTION_244(19LL);
  }

  if (v3)
  {
    OUTLINED_FUNCTION_56_0();
    if (v10 == 1) {
      Swift::String v4 = v8 + 1;
    }
    else {
      Swift::String v4 = 0x6143656E4F736168LL;
    }
    if (v10 == 1) {
      char v0 = v9;
    }
    else {
      char v0 = 0xEE00657079546C6CLL;
    }
  }

  if (v7 == v4 && v1 == v0) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v7, v1, v4, v0);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  char v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  OUTLINED_FUNCTION_187_0();
  uint64_t v5 = v2;
  if (v2)
  {
    if (v2 == 1) {
      uint64_t v6 = v4 + 6;
    }
    else {
      uint64_t v6 = 0x636972656E6567LL;
    }
    if (v5 == 1) {
      uint64_t v1 = 0x8000000000344D50LL;
    }
    else {
      uint64_t v1 = 0xE700000000000000LL;
    }
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_244(17LL);
  }

  if (v3)
  {
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_161_2();
    if (v7) {
      Swift::String v4 = v9;
    }
    else {
      Swift::String v4 = v11;
    }
    if (v7) {
      char v0 = v8;
    }
    else {
      char v0 = v10;
    }
  }

  if (v6 == v4 && v1 == v0) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v6, v1, v4, v0);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_190_0();
  if (v0) {
    uint64_t v3 = 0xD00000000000001ELL;
  }
  else {
    uint64_t v3 = 0x65766947656D6153LL;
  }
  Swift::String v4 = v2 | 0x8000000000000000LL;
  if (v0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0xED0000656D614E6ELL;
  }
  if ((v1 & 1) != 0) {
    uint64_t v6 = 0x65766947656D6153LL;
  }
  else {
    uint64_t v6 = 0xD00000000000001ELL;
  }
  if ((v1 & 1) != 0) {
    Swift::String v7 = 0xED0000656D614E6ELL;
  }
  else {
    Swift::String v7 = v4;
  }
  if (v3 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v5, v6, v7);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_190_0();
  if (v0) {
    uint64_t v3 = 0x436D7269666E6F43LL;
  }
  else {
    uint64_t v3 = 0xD000000000000012LL;
  }
  Swift::String v4 = v2 | 0x8000000000000000LL;
  if (v0) {
    uint64_t v5 = 0xEE00746361746E6FLL;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v1 & 1) != 0) {
    uint64_t v6 = 0xD000000000000012LL;
  }
  else {
    uint64_t v6 = 0x436D7269666E6F43LL;
  }
  if ((v1 & 1) != 0) {
    Swift::String v7 = v4;
  }
  else {
    Swift::String v7 = 0xEE00746361746E6FLL;
  }
  if (v3 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v5, v6, v7);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  char v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  OUTLINED_FUNCTION_136_2();
  if (v0)
  {
    OUTLINED_FUNCTION_173_1();
    if (v3 == 1) {
      uint64_t v5 = 0xD000000000000011LL;
    }
    else {
      uint64_t v5 = 7565171LL;
    }
    if (v3 == 1) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 0xE300000000000000LL;
    }
  }

  else
  {
    uint64_t v6 = 0xE700000000000000LL;
    uint64_t v5 = OUTLINED_FUNCTION_202_0() | 0x676E6900000000LL;
  }

  if (v1)
  {
    OUTLINED_FUNCTION_56_0();
    if (v8 == 1) {
      Swift::String v2 = 0xD000000000000011LL;
    }
    else {
      Swift::String v2 = 7565171LL;
    }
    if (v8 == 1) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 0xE300000000000000LL;
    }
  }

  else
  {
    uint64_t v9 = 0xE700000000000000LL;
  }

  if (v5 == v2 && v6 == v9) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v2, v9);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_190_0();
  if (v0) {
    uint64_t v3 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v3 = 0xD000000000000016LL;
  }
  Swift::String v4 = v2 | 0x8000000000000000LL;
  if (v0) {
    uint64_t v5 = 0xE700000000000000LL;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v1 & 1) != 0) {
    uint64_t v6 = 0xD000000000000016LL;
  }
  else {
    uint64_t v6 = 0x32676F6C616964LL;
  }
  if ((v1 & 1) != 0) {
    Swift::String v7 = v4;
  }
  else {
    Swift::String v7 = 0xE700000000000000LL;
  }
  if (v3 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v5, v6, v7);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_222();
  if (v0 != v1) {
    OUTLINED_FUNCTION_49_2(v0, 0xE700000000000000LL, v1, 0xE700000000000000LL);
  }
  OUTLINED_FUNCTION_7_4(0xE700000000000000LL);
  OUTLINED_FUNCTION_2();
}

{
  OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_263();
  __asm { BR              X10 }

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  OUTLINED_FUNCTION_110_5();
  if (v2)
  {
    OUTLINED_FUNCTION_173_1();
    if (v5 == 1) {
      Swift::String v7 = 0xD000000000000015LL;
    }
    else {
      Swift::String v7 = 0x696D6F636E496F4ELL;
    }
    if (v5 == 1) {
      uint64_t v1 = v6;
    }
    else {
      uint64_t v1 = v0 + 777;
    }
  }

  else
  {
    Swift::String v7 = OUTLINED_FUNCTION_109_5();
  }

  if (v3)
  {
    OUTLINED_FUNCTION_56_0();
    if (v9 == 1) {
      Swift::String v4 = 0xD000000000000015LL;
    }
    else {
      Swift::String v4 = 0x696D6F636E496F4ELL;
    }
    if (v9 == 1) {
      char v0 = v8;
    }
    else {
      v0 += 777LL;
    }
  }

  if (v7 == v4 && v1 == v0) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v7, v1, v4, v0);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  unsigned __int8 v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_73_11();
  uint64_t v3 = v0;
  if (v0)
  {
    if (v0 == 1) {
      Swift::String v4 = 0x646C6F486E4FLL;
    }
    else {
      Swift::String v4 = 0x676E69676E6952LL;
    }
    if (v3 == 1) {
      uint64_t v5 = 0xE600000000000000LL;
    }
    else {
      uint64_t v5 = 0xE700000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0xE700000000000000LL;
    Swift::String v4 = OUTLINED_FUNCTION_76_9();
  }

  if (v1)
  {
    if (v1 == 1) {
      Swift::String v2 = 0x646C6F486E4FLL;
    }
    else {
      Swift::String v2 = 0x676E69676E6952LL;
    }
    if (v1 == 1) {
      uint64_t v6 = 0xE600000000000000LL;
    }
    else {
      uint64_t v6 = 0xE700000000000000LL;
    }
  }

  else
  {
    uint64_t v6 = 0xE700000000000000LL;
  }

  if (v4 == v2 && v5 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v5, v2, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_263();
  __asm { BR              X10 }

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_222();
  if (v0 != v1) {
    OUTLINED_FUNCTION_49_2(v0, 0xE700000000000000LL, v1, 0xE700000000000000LL);
  }
  OUTLINED_FUNCTION_7_4(0xE700000000000000LL);
  OUTLINED_FUNCTION_2();
}

uint64_t sub_1161F8()
{
  uint64_t v0 = OUTLINED_FUNCTION_274_0();
  return ((uint64_t (*)(uint64_t))((char *)sub_116240 + 4 * byte_326286[v1]))(v0);
}

void sub_116240()
{
  if (v1 == v2 && v0 == 0xE600000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v2, 0xE600000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t specialized == infix<A>(_:_:)(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6563696F76LL;
  }
  else {
    uint64_t v3 = 0x69616D6563696F76LL;
  }
  if (v2) {
    unint64_t v4 = 0xE90000000000006CLL;
  }
  else {
    unint64_t v4 = 0xE500000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6563696F76LL;
  }
  else {
    uint64_t v5 = 0x69616D6563696F76LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE500000000000000LL;
  }
  else {
    unint64_t v6 = 0xE90000000000006CLL;
  }
  if (v3 == v5 && v4 == v6)
  {
    char v8 = 1;
    unint64_t v6 = v4;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0LL);
  }

  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  if (a1)
  {
    if (a1 == 1) {
      BOOL v2 = 1836020326LL;
    }
    else {
      BOOL v2 = 1752459639LL;
    }
    uint64_t v3 = 0xE400000000000000LL;
  }

  else
  {
    uint64_t v3 = 0xE200000000000000LL;
    BOOL v2 = 28532LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      unint64_t v4 = 1836020326LL;
    }
    else {
      unint64_t v4 = 1752459639LL;
    }
    uint64_t v5 = 0xE400000000000000LL;
  }

  else
  {
    uint64_t v5 = 0xE200000000000000LL;
    unint64_t v4 = 28532LL;
  }

  if (v2 == v4 && v3 == v5)
  {
    Swift::String v7 = 1;
    uint64_t v5 = v3;
  }

  else
  {
    Swift::String v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, v4, v5, 0LL);
  }

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v5);
  return v7 & 1;
}

{
  uint64_t v2;
  uint64_t v3;
  char v4;
  if ((a1 & 1) != 0) {
    BOOL v2 = 0x6F65646976LL;
  }
  else {
    BOOL v2 = 0x6F69647561LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x6F65646976LL;
  }
  else {
    uint64_t v3 = 0x6F69647561LL;
  }
  if (v2 == v3) {
    unint64_t v4 = 1;
  }
  else {
    unint64_t v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE500000000000000LL, v3, 0xE500000000000000LL, 0LL);
  }
  swift_bridgeObjectRelease_n(0xE500000000000000LL, 2LL);
  return v4 & 1;
}

void specialized == infix<A>(_:_:)(char a1)
{
  __asm { BR              X10 }

{
  __asm { BR              X12 }

{
  __asm { BR              X10 }

{
  __asm { BR              X12 }

{
  __asm { BR              X10 }

{
  __asm { BR              X10 }

{
  __asm { BR              X10 }

{
  __asm { BR              X10 }

{
  __asm { BR              X10 }

{
  __asm { BR              X12 }

uint64_t sub_116380(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_11641C + 4 * byte_326295[a2]))(5916994LL);
}

void sub_11641C(uint64_t a1)
{
  if (a1 == 5916994 && v1 == 0xE300000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 5916994LL, 0xE300000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

void specialized == infix<A>(_:_:)(char a1, uint64_t a2)
{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))IdentifyIncomingCallerCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))ForcedAppDisambiguationPhase.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))AnnounceVoicemailCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SpecifyingContactAddress.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SlotResolutionError.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))PhoneCallCommonCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))PhoneAppSelectionSignalsGathererType.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))PhoneAppResolutionLogger.CodePathId.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))AnswerCallCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))StartCallCATsSimple.DisambiguateContactsDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))StartCallCATsSimple.ConfirmAppDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))PostCallInquiryAnswerCallCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))AnnounceIncomingCallCATs.Properties.rawValue.getter);
}

void specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))UsoIdentifierNamespaceType.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SuggestionsCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SuggestionsCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))DucFamilyNames.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallSlotNames.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallRecord.CodingKeys.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))PhoneCallControlCATsSimple.UnsupportedSwitchToFaceTimeDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallControlCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallCommonCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallDisplayTextCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallControlAction.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallNLConstants.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallControlCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))PhoneCallCommonCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))AnnounceCallBellCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))AnnounceCallBellCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))OngoingCallCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))OngoingCallCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SearchCallHistoryCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SearchCallHistoryCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SearchCallHistoryCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))HangUpCallCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))HangUpCallCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))StartCallCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))StartCallCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))StartCallCATsSimple.RelationshipDialogIds.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))StartCallCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))SiriPhoneDefaultsKey.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))AddCallParticipantCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))AddCallParticipantCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))AddCallParticipantCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))UnsupportedPhoneCall.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))UnsupportedFlowCATs.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))UnsupportedFlowCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)(a1, a2, (void (*)(void))UnsupportedFlowCATsSimple.Properties.rawValue.getter);
}

{
  specialized == infix<A>(_:_:)( a1,  a2,  (void (*)(void))ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter);
}

uint64_t sub_116524()
{
  unint64_t v0 = OUTLINED_FUNCTION_246();
  return ((uint64_t (*)(unint64_t))((char *)sub_1165BC + 4 * byte_3262A5[v1]))(v0);
}

void sub_1165BC(uint64_t a1@<X8>)
{
  unint64_t v2 = (a1 - 32) | 0x8000000000000000LL;
  OUTLINED_FUNCTION_237();
  if (v3 == v4 && v1 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v1, v4, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1166D8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_116748 + 4 * byte_3262B0[a2]))(0xD000000000000016LL);
}

void sub_116748(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2 - 32;
  if (a1 == 0xD000000000000016LL && v2 == (v3 | 0x8000000000000000LL)) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v2, 0xD000000000000016LL, v3 | 0x8000000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

void specialized == infix<A>(_:_:)(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6D69547472617473LL;
  }
  else {
    uint64_t v3 = 0x69546C65636E6163LL;
  }
  if (v2) {
    uint64_t v4 = 0xEB0000000072656DLL;
  }
  else {
    uint64_t v4 = 0xEA00000000007265LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6D69547472617473LL;
  }
  else {
    uint64_t v5 = 0x69546C65636E6163LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xEA00000000007265LL;
  }
  else {
    uint64_t v6 = 0xEB0000000072656DLL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0xD000000000000015LL;
  }
  else {
    uint64_t v3 = 0x746163696C707041LL;
  }
  if (v2) {
    uint64_t v4 = 0xEC000000736E6F69LL;
  }
  else {
    uint64_t v4 = 0x8000000000341970LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0xD000000000000015LL;
  }
  else {
    uint64_t v5 = 0x746163696C707041LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0x8000000000341970LL;
  }
  else {
    uint64_t v6 = 0xEC000000736E6F69LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v2 = 0xEF74706D6F72506CLL;
  uint64_t v3 = 0x6C6143724F646461LL;
  if (a1)
  {
    OUTLINED_FUNCTION_134_2();
    uint64_t v4 = OUTLINED_FUNCTION_204();
    if (v12) {
      Swift::String v7 = v5;
    }
    else {
      Swift::String v7 = v6;
    }
  }

  else
  {
    uint64_t v4 = 0x6C6143724F646461LL;
    Swift::String v7 = 0xEF74706D6F72506CLL;
  }

  if (a2)
  {
    OUTLINED_FUNCTION_134_2();
    OUTLINED_FUNCTION_56_0();
    if (v9 == 1) {
      uint64_t v3 = v10;
    }
    else {
      uint64_t v3 = 0xD000000000000011LL;
    }
    if (v9 == 1) {
      BOOL v2 = v11;
    }
    else {
      BOOL v2 = v8;
    }
  }

  uint64_t v12 = v4 == v3 && v7 == v2;
  if (v12) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v7, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6143657461657263LL;
  }
  else {
    uint64_t v3 = 0x73746E65636572LL;
  }
  if (v2) {
    uint64_t v4 = 0xE700000000000000LL;
  }
  else {
    uint64_t v4 = 0xEA00000000006C6CLL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6143657461657263LL;
  }
  else {
    uint64_t v5 = 0x73746E65636572LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xEA00000000006C6CLL;
  }
  else {
    uint64_t v6 = 0xE700000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6C61636F6CLL;
  }
  else {
    uint64_t v3 = 0x6E676965726F66LL;
  }
  if (v2) {
    uint64_t v4 = 0xE700000000000000LL;
  }
  else {
    uint64_t v4 = 0xE500000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6C61636F6CLL;
  }
  else {
    uint64_t v5 = 0x6E676965726F66LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xE500000000000000LL;
  }
  else {
    uint64_t v6 = 0xE700000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v2 = 0xD000000000000010LL;
  uint64_t v3 = 0x8000000000341AF0LL;
  if (a1)
  {
    OUTLINED_FUNCTION_143_1();
    if (v5 == 1) {
      char v8 = v6;
    }
    else {
      char v8 = v2;
    }
    if (v5 == 1) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = (v4 - 32) | 0x8000000000000000LL;
    }
  }

  else
  {
    char v8 = 0xD000000000000015LL;
    uint64_t v9 = 0x8000000000341AF0LL;
  }

  if (a2)
  {
    OUTLINED_FUNCTION_143_1();
    uint64_t v15 = (v14 - 32) | 0x8000000000000000LL;
    if (v11 == 1) {
      uint64_t v16 = v12;
    }
    else {
      uint64_t v16 = v10;
    }
    if (v11 == 1) {
      uint64_t v3 = v13;
    }
    else {
      uint64_t v3 = v15;
    }
  }

  else
  {
    uint64_t v16 = v2 + 5;
  }

  if (v8 == v16 && v9 == v3) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v8, v9, v16, v3);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6E6F697461727564LL;
  }
  else {
    uint64_t v3 = 0x73456F54656D6974LL;
  }
  if (v2) {
    uint64_t v4 = 0xEF6873696C626174LL;
  }
  else {
    uint64_t v4 = 0xE800000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6E6F697461727564LL;
  }
  else {
    uint64_t v5 = 0x73456F54656D6974LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xE800000000000000LL;
  }
  else {
    uint64_t v6 = 0xEF6873696C626174LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x7069636974726170LL;
  }
  else {
    uint64_t v3 = 0x7954657469766E69LL;
  }
  if (v2) {
    uint64_t v4 = 0xEA00000000006570LL;
  }
  else {
    uint64_t v4 = 0xEC00000073746E61LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x7069636974726170LL;
  }
  else {
    uint64_t v5 = 0x7954657469766E69LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xEC00000073746E61LL;
  }
  else {
    uint64_t v6 = 0xEA00000000006570LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x644970756F7267LL;
  }
  else {
    uint64_t v3 = 0x6D614E70756F7267LL;
  }
  if (v2) {
    uint64_t v4 = 0xE900000000000065LL;
  }
  else {
    uint64_t v4 = 0xE700000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x644970756F7267LL;
  }
  else {
    uint64_t v5 = 0x6D614E70756F7267LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xE700000000000000LL;
  }
  else {
    uint64_t v6 = 0xE900000000000065LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  BOOL v2 = 0xEF31676F6C616964LL;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0xEF32676F6C616964LL;
    }
    else {
      uint64_t v3 = 0xEF33676F6C616964LL;
    }
  }

  else
  {
    uint64_t v3 = 0xEF31676F6C616964LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      BOOL v2 = 0xEF32676F6C616964LL;
    }
    else {
      BOOL v2 = 0xEF33676F6C616964LL;
    }
  }

  if (v3 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(0x2331686374697773LL, v3, 0x2331686374697773LL, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x656E6F6850657375LL;
  }
  else {
    uint64_t v3 = 0x68506E6F4E657375LL;
  }
  if (v2) {
    uint64_t v4 = 0xEE00707041656E6FLL;
  }
  else {
    uint64_t v4 = 0xEB00000000707041LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x656E6F6850657375LL;
  }
  else {
    uint64_t v5 = 0x68506E6F4E657375LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xEB00000000707041LL;
  }
  else {
    uint64_t v6 = 0xEE00707041656E6FLL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v2 = 0x636972656E6567LL;
  if (a1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_155_1(0xD000000000000016LL);
    if (v7) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v5;
    }
  }

  else
  {
    uint64_t v6 = 0xE700000000000000LL;
    uint64_t v3 = 0x636972656E6567LL;
  }

  if (a2)
  {
    OUTLINED_FUNCTION_179_0();
    if (v7) {
      BOOL v2 = v8 + 1;
    }
    else {
      BOOL v2 = v8;
    }
    if (v7) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = v9;
    }
  }

  else
  {
    uint64_t v11 = 0xE700000000000000LL;
  }

  if (v3 == v2 && v6 == v11) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v6, v2, v11);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v2 = 0xEC0000006C6C6143LL;
  uint64_t v3 = 0x676E696D6F636E69LL;
  if (a1)
  {
    OUTLINED_FUNCTION_100_3();
    uint64_t v4 = OUTLINED_FUNCTION_204();
    if (v12) {
      Swift::String v7 = v5;
    }
    else {
      Swift::String v7 = v6;
    }
  }

  else
  {
    uint64_t v4 = 0x676E696D6F636E69LL;
    Swift::String v7 = 0xEC0000006C6C6143LL;
  }

  if (a2)
  {
    OUTLINED_FUNCTION_100_3();
    OUTLINED_FUNCTION_56_0();
    if (v9 == 1) {
      uint64_t v3 = v10;
    }
    else {
      uint64_t v3 = 0xD000000000000010LL;
    }
    if (v9 == 1) {
      BOOL v2 = v11;
    }
    else {
      BOOL v2 = v8;
    }
  }

  uint64_t v12 = v4 == v3 && v7 == v2;
  if (v12) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v7, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v3 = 0x6573557473726946LL;
  }
  if (v2) {
    uint64_t v4 = 0xE800000000000000LL;
  }
  else {
    uint64_t v4 = 0xE700000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v5 = 0x6573557473726946LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xE700000000000000LL;
  }
  else {
    uint64_t v6 = 0xE800000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6C61436F54646461LL;
  }
  else {
    uint64_t v3 = 0x6C6C614377656ELL;
  }
  if (v2) {
    uint64_t v4 = 0xE700000000000000LL;
  }
  else {
    uint64_t v4 = 0xE90000000000006CLL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6C61436F54646461LL;
  }
  else {
    uint64_t v5 = 0x6C6C614377656ELL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xE90000000000006CLL;
  }
  else {
    uint64_t v6 = 0xE700000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x636972656E6567LL;
  }
  else {
    uint64_t v3 = 0x656D695465636166LL;
  }
  if (v2) {
    uint64_t v4 = 0xE800000000000000LL;
  }
  else {
    uint64_t v4 = 0xE700000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x636972656E6567LL;
  }
  else {
    uint64_t v5 = 0x656D695465636166LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xE700000000000000LL;
  }
  else {
    uint64_t v6 = 0xE800000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0xD000000000000015LL;
  }
  else {
    uint64_t v3 = 0x32676F6C616964LL;
  }
  if (v2) {
    uint64_t v4 = 0xE700000000000000LL;
  }
  else {
    uint64_t v4 = 0x8000000000345FD0LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0xD000000000000015LL;
  }
  else {
    uint64_t v5 = 0x32676F6C616964LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0x8000000000345FD0LL;
  }
  else {
    uint64_t v6 = 0xE700000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = 0x31676F6C616964LL;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0xEE0031676F6C6169LL;
    }
    else {
      uint64_t v3 = 0xEE0032676F6C6169LL;
    }
    uint64_t v4 = OUTLINED_FUNCTION_191() & 0xFFFFFFFFFFFFLL | 0x6423000000000000LL;
  }

  else
  {
    uint64_t v3 = 0xE700000000000000LL;
    uint64_t v4 = 0x31676F6C616964LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v5 = 0xEE0031676F6C6169LL;
    }
    else {
      uint64_t v5 = 0xEE0032676F6C6169LL;
    }
    OUTLINED_FUNCTION_185();
    BOOL v2 = v6 & 0xFFFFFFFFFFFFLL | 0x6423000000000000LL;
  }

  else
  {
    uint64_t v5 = 0xE700000000000000LL;
  }

  if (v4 == v2 && v3 == v5) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v3, v2, v5);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 1735289202LL;
  }
  else {
    uint64_t v3 = 6579297LL;
  }
  if (v2) {
    uint64_t v4 = 0xE300000000000000LL;
  }
  else {
    uint64_t v4 = 0xE400000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 1735289202LL;
  }
  else {
    uint64_t v5 = 6579297LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xE400000000000000LL;
  }
  else {
    uint64_t v6 = 0xE300000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6F725074726F6873LL;
  }
  else {
    uint64_t v3 = 0x6D6F7250676E6F6CLL;
  }
  if (v2) {
    uint64_t v4 = 0xEA00000000007470LL;
  }
  else {
    uint64_t v4 = 0xEB0000000074706DLL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6F725074726F6873LL;
  }
  else {
    uint64_t v5 = 0x6D6F7250676E6F6CLL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v6 = 0xEB0000000074706DLL;
  }
  else {
    uint64_t v6 = 0xEA00000000007470LL;
  }
  if (v3 == v5 && v4 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  if ((a1 & 1) != 0) {
    BOOL v2 = 0x32676F6C616964LL;
  }
  else {
    BOOL v2 = 0x31676F6C616964LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v3 = 0x31676F6C616964LL;
  }
  if (v2 != v3) {
    OUTLINED_FUNCTION_49_2(v2, 0xE700000000000000LL, v3, 0xE700000000000000LL);
  }
  OUTLINED_FUNCTION_7_4(0xE700000000000000LL);
  OUTLINED_FUNCTION_2();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v2 = 0xEF6C6C6143646574LL;
  uint64_t v3 = 0x726F707075736E75LL;
  if (a1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_155_1(0xD000000000000016LL);
    if (v8) {
      Swift::String v7 = v5;
    }
    else {
      Swift::String v7 = v6;
    }
  }

  else
  {
    uint64_t v4 = 0x726F707075736E75LL;
    Swift::String v7 = 0xEF6C6C6143646574LL;
  }

  if (a2)
  {
    OUTLINED_FUNCTION_179_0();
    if (v8) {
      uint64_t v3 = v9 + 1;
    }
    else {
      uint64_t v3 = v9;
    }
    if (v8) {
      BOOL v2 = v11;
    }
    else {
      BOOL v2 = v10;
    }
  }

  if (v4 == v3 && v7 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v7, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_116938(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_116984 + 4 * byte_3262B8[a2]))(a3 - 4);
}

void sub_116984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 - 4;
  if (a1 == v5 && v4 == ((v3 - 32) | 0x8000000000000000LL)) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v4, v5, (v3 - 32) | 0x8000000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

void specialized == infix<A>(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = (unint64_t)a1 << 32;
  if (v2 != (unint64_t)a2 << 32) {
    OUTLINED_FUNCTION_49_2( v2 + 0x31746E6968LL,  0xE500000000000000LL,  ((unint64_t)a2 << 32) + 0x31746E6968LL,  0xE500000000000000LL);
  }
  OUTLINED_FUNCTION_7_4(0xE500000000000000LL);
  OUTLINED_FUNCTION_2();
}

{
  unint64_t v2;
  unint64_t v2 = (unint64_t)a1 << 48;
  if (v2 != (unint64_t)a2 << 48) {
    OUTLINED_FUNCTION_49_2( v2 + 0x31676F6C616964LL,  0xE700000000000000LL,  ((unint64_t)a2 << 48) + 0x31676F6C616964LL,  0xE700000000000000LL);
  }
  OUTLINED_FUNCTION_7_4(0xE700000000000000LL);
  OUTLINED_FUNCTION_2();
}

uint64_t sub_116BF4()
{
  uint64_t v0 = OUTLINED_FUNCTION_274_0();
  return ((uint64_t (*)(uint64_t))((char *)sub_116C34 + 4 * byte_3262C1[v1]))(v0);
}

void sub_116C34()
{
  if (v1 == v2 && v0 == 0xE600000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v2, 0xE600000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_116D7C()
{
  uint64_t v0 = OUTLINED_FUNCTION_139_2() & 0xFFFFFFFFFFFFLL | 0x614E000000000000LL;
  return ((uint64_t (*)(uint64_t))((char *)sub_116DDC + 4 * byte_3262CA[v1]))(v0);
}

void sub_116DDC()
{
  uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL | 0x614E000000000000LL;
  if (v1 == v3 && v0 == 0xEA0000000000656DLL) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v3, 0xEA0000000000656DLL);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_117010()
{
  return ((uint64_t (*)(void))((char *)sub_1170A8 + 4 * byte_3262D4[v0]))();
}

void sub_1170A8(uint64_t a1)
{
  if (a1 == 0x6973734169726953LL && v1 == 0xED0000746E617473LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 0x6973734169726953LL, 0xED0000746E617473LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1171BC@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_117224 + 4 * byte_3262DF[a1]))(a2 + 1);
}

void sub_117224(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 == a2 + 1 && v3 == ((v2 - 32) | 0x8000000000000000LL)) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v3, a2 + 1, (v2 - 32) | 0x8000000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

void specialized == infix<A>(_:_:)(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0xEE00796C6E4F746ELL;
  uint64_t v3 = 0x65746E4934764C4ELL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 7304053LL;
    }
    else {
      uint64_t v5 = 0xD000000000000012LL;
    }
    if (v4 == 1) {
      uint64_t v6 = 0xE300000000000000LL;
    }
    else {
      uint64_t v6 = 0x8000000000346750LL;
    }
  }

  else
  {
    uint64_t v5 = 0x65746E4934764C4ELL;
    uint64_t v6 = 0xEE00796C6E4F746ELL;
  }

  if (a2)
  {
    OUTLINED_FUNCTION_189_0();
    if (v7) {
      uint64_t v3 = v10;
    }
    else {
      uint64_t v3 = v11;
    }
    if (v7) {
      uint64_t v2 = v9;
    }
    else {
      uint64_t v2 = v8;
    }
  }

  if (v5 == v3 && v6 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0x65756E69746E6F63LL;
  uint64_t v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      int v4 = 1886352499LL;
    }
    else {
      int v4 = 0x746165706572LL;
    }
    if (v3 == 1) {
      uint64_t v5 = 0xE400000000000000LL;
    }
    else {
      uint64_t v5 = 0xE600000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0xE800000000000000LL;
    int v4 = 0x65756E69746E6F63LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 1886352499LL;
    }
    else {
      uint64_t v2 = 0x746165706572LL;
    }
    if (a2 == 1) {
      uint64_t v6 = 0xE400000000000000LL;
    }
    else {
      uint64_t v6 = 0xE600000000000000LL;
    }
  }

  else
  {
    uint64_t v6 = 0xE800000000000000LL;
  }

  if (v4 == v2 && v5 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v5, v2, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0x6C61636F6CLL;
  uint64_t v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      int v4 = 0x6C61636F4C6E6F6ELL;
    }
    else {
      int v4 = 1701736302LL;
    }
    if (v3 == 1) {
      uint64_t v5 = 0xE800000000000000LL;
    }
    else {
      uint64_t v5 = 0xE400000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0xE500000000000000LL;
    int v4 = 0x6C61636F6CLL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 0x6C61636F4C6E6F6ELL;
    }
    else {
      uint64_t v2 = 1701736302LL;
    }
    if (a2 == 1) {
      uint64_t v6 = 0xE800000000000000LL;
    }
    else {
      uint64_t v6 = 0xE400000000000000LL;
    }
  }

  else
  {
    uint64_t v6 = 0xE500000000000000LL;
  }

  if (v4 == v2 && v5 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v5, v2, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0xEB00000000656D69LL;
  uint64_t v3 = 0x546563614677656ELL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 28532LL;
    }
    else {
      uint64_t v5 = 0x6F68576F74LL;
    }
    if (v4 == 1) {
      uint64_t v6 = 0xE200000000000000LL;
    }
    else {
      uint64_t v6 = 0xE500000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0x546563614677656ELL;
    uint64_t v6 = 0xEB00000000656D69LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 28532LL;
    }
    else {
      uint64_t v3 = 0x6F68576F74LL;
    }
    if (a2 == 1) {
      uint64_t v2 = 0xE200000000000000LL;
    }
    else {
      uint64_t v2 = 0xE500000000000000LL;
    }
  }

  if (v5 == v3 && v6 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0xEC000000656D756CLL;
  uint64_t v3 = 0x6F5665676E616863LL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6C6F566B63656863LL;
    }
    else {
      uint64_t v5 = 0x636972656E6567LL;
    }
    if (v4 == 1) {
      uint64_t v6 = 0xEB00000000656D75LL;
    }
    else {
      uint64_t v6 = 0xE700000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0x6F5665676E616863LL;
    uint64_t v6 = 0xEC000000656D756CLL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x6C6F566B63656863LL;
    }
    else {
      uint64_t v3 = 0x636972656E6567LL;
    }
    if (a2 == 1) {
      uint64_t v2 = 0xEB00000000656D75LL;
    }
    else {
      uint64_t v2 = 0xE700000000000000LL;
    }
  }

  if (v5 == v3 && v6 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0xE900000000000079LL;
  uint64_t v3 = 0x6E6F6870656C6574LL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x656D697465636166LL;
    }
    else {
      uint64_t v5 = 0x7261506472696874LL;
    }
    if (v4 == 1) {
      uint64_t v6 = 0xE800000000000000LL;
    }
    else {
      uint64_t v6 = 0xEA00000000007974LL;
    }
  }

  else
  {
    uint64_t v5 = 0x6E6F6870656C6574LL;
    uint64_t v6 = 0xE900000000000079LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x656D697465636166LL;
    }
    else {
      uint64_t v3 = 0x7261506472696874LL;
    }
    if (a2 == 1) {
      uint64_t v2 = 0xE800000000000000LL;
    }
    else {
      uint64_t v2 = 0xEA00000000007974LL;
    }
  }

  if (v5 == v3 && v6 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0xE900000000000065LL;
  uint64_t v3 = 0x707954616964656DLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6563696F76LL;
    }
    else {
      uint64_t v5 = 0x656D756C6F76LL;
    }
    if (v4 == 1) {
      uint64_t v6 = 0xE500000000000000LL;
    }
    else {
      uint64_t v6 = 0xE600000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0x707954616964656DLL;
    uint64_t v6 = 0xE900000000000065LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x6563696F76LL;
    }
    else {
      uint64_t v3 = 0x656D756C6F76LL;
    }
    if (a2 == 1) {
      uint64_t v2 = 0xE500000000000000LL;
    }
    else {
      uint64_t v2 = 0xE600000000000000LL;
    }
  }

  if (v5 == v3 && v6 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 6579297LL;
  uint64_t v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      int v4 = 0x654E646E41646E65LL;
    }
    else {
      int v4 = 0x4E646E41646C6F68LL;
    }
    if (v3 == 1) {
      uint64_t v5 = 0xED00006C6C614377LL;
    }
    else {
      uint64_t v5 = 0xEE006C6C61437765LL;
    }
  }

  else
  {
    uint64_t v5 = 0xE300000000000000LL;
    int v4 = 6579297LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 0x654E646E41646E65LL;
    }
    else {
      uint64_t v2 = 0x4E646E41646C6F68LL;
    }
    if (a2 == 1) {
      uint64_t v6 = 0xED00006C6C614377LL;
    }
    else {
      uint64_t v6 = 0xEE006C6C61437765LL;
    }
  }

  else
  {
    uint64_t v6 = 0xE300000000000000LL;
  }

  if (v4 == v2 && v5 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v5, v2, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0x8000000000344B50LL;
  uint64_t v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      int v4 = 0xD000000000000019LL;
    }
    else {
      int v4 = 0x6574736575716552LL;
    }
    if (v3 == 1) {
      uint64_t v5 = 0x8000000000344B70LL;
    }
    else {
      uint64_t v5 = 0xEF656C646E614864LL;
    }
  }

  else
  {
    int v4 = 0xD00000000000001BLL;
    uint64_t v5 = 0x8000000000344B50LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v6 = 0xD000000000000019LL;
    }
    else {
      uint64_t v6 = 0x6574736575716552LL;
    }
    if (a2 == 1) {
      uint64_t v2 = 0x8000000000344B70LL;
    }
    else {
      uint64_t v2 = 0xEF656C646E614864LL;
    }
  }

  else
  {
    uint64_t v6 = 0xD00000000000001BLL;
  }

  if (v4 == v6 && v5 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v5, v6, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0xEC00000065636976LL;
  uint64_t v3 = 0x6544687469575446LL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x756F687469575446LL;
    }
    else {
      uint64_t v5 = 0x636972656E6547LL;
    }
    if (v4 == 1) {
      uint64_t v6 = 0xEF65636976654474LL;
    }
    else {
      uint64_t v6 = 0xE700000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0x6544687469575446LL;
    uint64_t v6 = 0xEC00000065636976LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x756F687469575446LL;
    }
    else {
      uint64_t v3 = 0x636972656E6547LL;
    }
    if (a2 == 1) {
      uint64_t v2 = 0xEF65636976654474LL;
    }
    else {
      uint64_t v2 = 0xE700000000000000LL;
    }
  }

  if (v5 == v3 && v6 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v2 = 0xEB0000000064657ALL;
  uint64_t v3 = 0x696C616974696E69LL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x46676E6974696177LL;
    }
    else {
      uint64_t v5 = 0x6365527475706E69LL;
    }
    if (v4 == 1) {
      uint64_t v6 = 0xEF7475706E49726FLL;
    }
    else {
      uint64_t v6 = 0xED00006465766965LL;
    }
  }

  else
  {
    uint64_t v5 = 0x696C616974696E69LL;
    uint64_t v6 = 0xEB0000000064657ALL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x46676E6974696177LL;
    }
    else {
      uint64_t v3 = 0x6365527475706E69LL;
    }
    if (a2 == 1) {
      uint64_t v2 = 0xEF7475706E49726FLL;
    }
    else {
      uint64_t v2 = 0xED00006465766965LL;
    }
  }

  if (v5 == v3 && v6 == v2) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v5, v6, v3, v2);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v3 = 0xD000000000000012LL;
  int v4 = 0x8000000000346250LL;
  uint64_t v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v6 = 0x65756E69746E6F63LL;
    }
    else {
      uint64_t v6 = 0x43526C65636E6163LL;
    }
    if (v5 == 1) {
      uint64_t v2 = 0xEF776F6C46484352LL;
    }
    else {
      uint64_t v2 = 0xED0000776F6C4648LL;
    }
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_244(18LL);
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x65756E69746E6F63LL;
    }
    else {
      uint64_t v3 = 0x43526C65636E6163LL;
    }
    if (a2 == 1) {
      int v4 = 0xEF776F6C46484352LL;
    }
    else {
      int v4 = 0xED0000776F6C4648LL;
    }
  }

  if (v6 == v3 && v2 == v4) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v6, v2, v3, v4);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1178C0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_11795C + 4 * byte_3262ED[a2]))(0x736C6C6163LL);
}

void sub_11795C()
{
  unint64_t v3 = v2 & 0xFFFF0000FFFFFFFFLL | 0x7300000000LL;
  if (v1 == v3 && v0 == 0xE500000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v3, 0xE500000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_117E0C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_117E44 + 4 * byte_3262FA[a2]))(28526LL);
}

void sub_117E44(uint64_t a1)
{
  if (a1 == 28526 && v1 == 0xE200000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 28526LL, 0xE200000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1180B0()
{
  uint64_t v0 = OUTLINED_FUNCTION_218() & 0xFFFFFFFFFFFFLL | 0x4365000000000000LL;
  return ((uint64_t (*)(uint64_t))((char *)sub_118158 + 4 * byte_326305[v1]))(v0);
}

void sub_118158()
{
  uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL | 0x4365000000000000LL;
  if (v1 == v3 && v0 == 0xED00006172656D61LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v3, 0xED00006172656D61LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_11827C()
{
  return ((uint64_t (*)(void))((char *)sub_1182EC + 4 * byte_326311[v0]))();
}

void sub_1182EC()
{
  if (v1 == v2 && v0 == 0xE900000000000079LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v2, 0xE900000000000079LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1183AC()
{
  return ((uint64_t (*)(void))((char *)sub_118408 + 4 * byte_32631B[v0]))();
}

void sub_118408(uint64_t a1)
{
  if (a1 == 1684828008 && v1 == 0xE400000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 1684828008LL, 0xE400000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1184C8()
{
  uint64_t v0 = OUTLINED_FUNCTION_218() & 0xFFFFFFFFFFFFLL | 0x65000000000000LL;
  return ((uint64_t (*)(uint64_t))((char *)sub_118548 + 4 * byte_326327[v1]))(v0);
}

void sub_118548()
{
  uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL | 0x65000000000000LL;
  if (v1 == v3 && v0 == 0xE700000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v3, 0xE700000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_118618(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_118708 + 4 * byte_32633C[a2]))(0x636162206C6C6163LL);
}

void sub_118708(uint64_t a1)
{
  if (a1 == 0x636162206C6C6163LL && v1 == 0xE90000000000006BLL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 0x636162206C6C6163LL, 0xE90000000000006BLL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_118848(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_118894 + 4 * byte_32634F[a2]))(28526LL);
}

void sub_118894(uint64_t a1)
{
  if (a1 == 28526 && v1 == 0xE200000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 28526LL, 0xE200000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_118B30()
{
  unint64_t v0 = OUTLINED_FUNCTION_138_2();
  return ((uint64_t (*)(unint64_t))((char *)sub_118B8C + 4 * byte_326358[v1]))(v0);
}

void sub_118B8C()
{
  if (v2 == v3 && v1 == v0) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v2, v1, v3, v0);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_118E34()
{
  unint64_t v0 = OUTLINED_FUNCTION_206_0();
  return ((uint64_t (*)(unint64_t))((char *)sub_118E80 + 4 * byte_326360[v1]))(v0);
}

void sub_118E80()
{
  if (v1 == v2 && v0 == (v3 | 0x8000000000000000LL)) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v2, v3 | 0x8000000000000000LL);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_118F50(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_118FDC + 4 * byte_32636A[a2]))(0x756F526F69647561LL);
}

void sub_118FDC(uint64_t a1)
{
  if (a1 == 0x756F526F69647561LL && v1 == 0xEA00000000006574LL) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 0x756F526F69647561LL, 0xEA00000000006574LL);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1191A8()
{
  return ((uint64_t (*)(void))((char *)sub_119288 + 4 * byte_326379[v0]))();
}

void sub_119288()
{
  uint64_t v3 = v2 | 0x6C6F765F00000000LL;
  if (v1 == v3 && v0 == 0xEB00000000656D75LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v1, v0, v3, 0xEB00000000656D75LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_1198F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_119964 + 4 * byte_326386[a2]))(0x73746E65636552LL);
}

void sub_119964(uint64_t a1)
{
  if (a1 == 0x73746E65636552LL && v1 == 0xE700000000000000LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 0x73746E65636552LL, 0xE700000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_119BA8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_119BE8 + 4 * byte_32638E[a2]))();
}

void sub_119BE8()
{
  if (v0 == 0xEC00000032676F6CLL) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(0x61696423316C6C61LL, v0, 0x61696423316C6C61LL, 0xEC00000032676F6CLL);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_119D24(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_119DBC + 4 * byte_326398[a2]))(0x6E6F437974706D45LL);
}

void sub_119DBC(uint64_t a1)
{
  if (a1 == 0x6E6F437974706D45LL && v1 == 0xEC00000074636174LL) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v1, 0x6E6F437974706D45LL, 0xEC00000074636174LL);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_11A3C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_11A448 + 4 * byte_3263A4[a2]))(0xD000000000000012LL);
}

void sub_11A448(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2 - 32;
  if (a1 == 0xD000000000000012LL && v2 == (v3 | 0x8000000000000000LL)) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v2, 0xD000000000000012LL, v3 | 0x8000000000000000LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_11A718(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_11A784 + 4 * byte_3263AF[a2]))();
}

void sub_11A784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a3 && v3 == 0xED00006F69647541LL) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v3, a3, 0xED00006F69647541LL);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t sub_11AD88(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_11AE04 + 4 * byte_3263BB[a2]))();
}

void sub_11AE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a3 && v3 == 0xED00006F65646956LL) {
    OUTLINED_FUNCTION_20_25();
  }
  else {
    OUTLINED_FUNCTION_49_2(a1, v3, a3, 0xED00006F65646956LL);
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

void specialized == infix<A>(_:_:)(char a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = OUTLINED_FUNCTION_192_0();
  if (v4 == v5 && v3 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v3, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

void specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = OUTLINED_FUNCTION_192_0();
  if (v4 == v5 && v3 == v6) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    OUTLINED_FUNCTION_49_2(v4, v3, v5, v6);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_6();
}

uint64_t specialized == infix<A>(_:_:)( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  char v7 = a3;
  a3(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID(a4, v7, a5);
  OUTLINED_FUNCTION_231();
  OUTLINED_FUNCTION_231();
  if (v12 == v10 && v13 == v11) {
    OUTLINED_FUNCTION_7_51();
  }
  else {
    LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = OUTLINED_FUNCTION_49_2(v12, v13, v10, v11);
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  return v7 & 1;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasCallConfirmation(_:)( PhoneCallFlowDelegatePlugin::PhoneCallConfirmation a1)
{
  if (!v9)
  {
    uint64_t v4 = PhoneCallConfirmation.rawValue.getter(v3);
    uint64_t v6 = v5;
    uint64_t v7 = PhoneCallConfirmation.rawValue.getter(a1);
    BOOL v9 = v4 == v7 && v6 == v8;
    if (v9) {
      OUTLINED_FUNCTION_7_51();
    }
    else {
      OUTLINED_FUNCTION_49_2(v4, v6, v7, v8);
    }
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_6();
  return result;
}

void specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3
    || ((uint64_t v7 = a3[4], v8 = a3[5], v7 == a1) ? (v9 = v8 == a2) : (v9 = 0),
        v9 || (OUTLINED_FUNCTION_49_2(v7, v8, a1, a2) & 1) != 0 || v3 == 1))
  {
LABEL_9:
    OUTLINED_FUNCTION_16();
  }

  else
  {
    uint64_t v10 = a3 + 7;
    uint64_t v11 = 1LL;
    while (1)
    {
      uint64_t v12 = v11 + 1;
      if (__OFADD__(v11, 1LL)) {
        break;
      }
      uint64_t v13 = *(v10 - 1);
      uint64_t v14 = *v10;
      if ((v13 != a1 || v14 != a2) && (OUTLINED_FUNCTION_49_2(v13, v14, a1, a2) & 1) == 0)
      {
        v10 += 2;
        ++v11;
        if (v12 != v3) {
          continue;
        }
      }

      goto LABEL_9;
    }

    __break(1u);
  }

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }

  return 0LL;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0LL;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1LL;
  }
  if (v2 == 1) {
    return 0LL;
  }
  for (uint64_t i = 5LL; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1LL)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v3 = v6;
    BOOL v6 = v6 || v5 == v2;
    if (v6) {
      return v3;
    }
  }

  __break(1u);
  return result;
}

BOOL specialized Sequence<>.contains(_:)(uint64_t a1)
{
  return *(void *)(a1 + 16) != 0LL;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasAnyConfirmation()()
{
  uint64_t v2 = *(void (**)(void))(v1 + 64);
  v2();
  OUTLINED_FUNCTION_120_3();
  if (v8)
  {
    OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  }

  else
  {
    uint64_t v6 = PhoneCallConfirmation.rawValue.getter(v3);
    BOOL v8 = v6 == 28526 && v7 == 0xE200000000000000LL;
    if (v8)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
      goto LABEL_20;
    }

    char v9 = OUTLINED_FUNCTION_49_2(v6, v7, 28526LL, 0xE200000000000000LL);
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
    if ((v9 & 1) != 0) {
      goto LABEL_20;
    }
  }

  uint64_t v4 = OUTLINED_FUNCTION_72_8();
  ((void (*)(uint64_t))v2)(v4);
  OUTLINED_FUNCTION_120_3();
  if (!v8)
  {
    uint64_t v10 = PhoneCallConfirmation.rawValue.getter(v5);
    if (v10 == 7562617 && v11 == 0xE300000000000000LL)
    {
      OUTLINED_FUNCTION_225_0();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v10, v11, 7562617LL, 0xE300000000000000LL);
      OUTLINED_FUNCTION_50();
    }
  }

void PhoneCallNLIntent.getPersons()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_51_4(a1, a2);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    uint64_t v4 = v2 + 32;
    do
    {
      outlined init with copy of SiriPhoneContact();
      OUTLINED_FUNCTION_102_3(v16);
      Class isa = SiriPhoneContact.toINPerson()().super.isa;
      uint64_t v13 = OUTLINED_FUNCTION_221((uint64_t)isa, v6, v7, v8, v9, v10, v11, v12, v16[0]);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      uint64_t v14 = v17[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      uint64_t v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, isa);
      specialized ContiguousArray._endMutation()(v15);
      v4 += 40LL;
      --v3;
    }

    while (v3);
    OUTLINED_FUNCTION_39();
  }

  else
  {
    OUTLINED_FUNCTION_39();
  }

  OUTLINED_FUNCTION_235();
}

void PhoneCallNLIntent.getCallRecordType()(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OUTLINED_FUNCTION_111_3(a1, a2);
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  __chkstk_darwin();
  __int128 v10[2] = a1;
  v10[3] = a2;
  void v10[4] = v2;
  unint64_t v7 = specialized Collection.firstIndex(where:)( (uint64_t (*)(char *))partial apply for closure #1 in PhoneCallNLIntent.getCallRecordType(),  (uint64_t)v10,  v6);
  if ((v8 & 1) != 0)
  {
    OUTLINED_FUNCTION_4_1();
    goto LABEL_7;
  }

  if ((v7 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (v7 < *(void *)(v6 + 16))
  {
    unsigned __int8 v9 = *(_BYTE *)(v6 + v7 + 32);
    OUTLINED_FUNCTION_4_1();
    PhoneCallNLIntent.getCallRecordType(attr:)(v9);
LABEL_7:
    OUTLINED_FUNCTION_16();
    return;
  }

  __break(1u);
}

void PhoneCallAVMode.hash(into:)(uint64_t a1, char a2)
{
}

void PhoneCallAVMode.hashValue.getter(uint64_t a1)
{
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallAVMode()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallAVMode(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallAttribute_optional __swiftcall PhoneCallAttribute.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallAttribute.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

_UNKNOWN **static PhoneCallAttribute.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallAttribute.allCases.getter;
}

uint64_t PhoneCallAttribute.rawValue.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_25_31();
  return ((uint64_t (*)(uint64_t))((char *)sub_11BB78 + 4 * byte_32640B[v1]))(v0);
}

uint64_t sub_11BB78()
{
  return OUTLINED_FUNCTION_67_12();
}

uint64_t sub_11BB8C()
{
  return OUTLINED_FUNCTION_27_26();
}

uint64_t sub_11BB9C()
{
  return OUTLINED_FUNCTION_12_46();
}

uint64_t sub_11BBB0()
{
  return OUTLINED_FUNCTION_15_35();
}

uint64_t sub_11BBC4()
{
  return OUTLINED_FUNCTION_53_13() & 0xFFFFFFFFFFFFLL | 0x676E000000000000LL;
}

uint64_t sub_11BC44()
{
  return OUTLINED_FUNCTION_11_41();
}

unint64_t sub_11BC60()
{
  return OUTLINED_FUNCTION_79_7();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallAttribute( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2, (void (*)(void))PhoneCallAttribute.rawValue.getter);
  return v2 & 1;
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallAttribute()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallAttribute(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallAttribute(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallAttribute_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallAttribute@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallAttribute_optional *a2@<X8>)
{
  result.value = PhoneCallAttribute.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallAttribute()
{
  *uint64_t v0 = PhoneCallAttribute.rawValue.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallAttribute( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallAttribute.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

{
  uint64_t (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  OUTLINED_FUNCTION_163();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  unsigned __int8 v9 = v8();
  uint64_t v10 = v3();
  uint64_t v11 = v1();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:))( v7,  v5,  v9,  v10,  v11);
}

PhoneCallFlowDelegatePlugin::PhoneCallAudioRoute_optional __swiftcall PhoneCallAudioRoute.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallAudioRoute.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

_UNKNOWN **static PhoneCallAudioRoute.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallAudioRoute.allCases.getter;
}

uint64_t PhoneCallAudioRoute.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_11BDB8 + 4 * byte_326419[a1]))( 0x7072656B61657073LL,  0xEC000000656E6F68LL);
}

unint64_t sub_11BDB8()
{
  return OUTLINED_FUNCTION_17_8();
}

uint64_t sub_11BDC4()
{
  return OUTLINED_FUNCTION_160_1();
}

uint64_t sub_11BDDC()
{
  return 0x65756C625F746F6ELL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallAudioRoute(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallAudioRoute()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallAudioRoute()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallAudioRoute(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallAudioRoute_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallAudioRoute@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallAudioRoute_optional *a2@<X8>)
{
  result.value = PhoneCallAudioRoute.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallAudioRoute()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallAudioRoute.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallAudioRoute( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallAudioRoute.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAudioRoute()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

PhoneCallFlowDelegatePlugin::PhoneCallCapability_optional __swiftcall PhoneCallCapability.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallCapability.init(rawValue:);
  PhoneCallCapability.init(rawValue:)(rawValue, v1);
  return result;
}

_UNKNOWN **static PhoneCallCapability.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallCapability.allCases.getter;
}

uint64_t PhoneCallCapability.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6F65646976LL;
  }
  else {
    return 0x6F69647561LL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallCapability( char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallCapability()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallCapability(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallCapability(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallCapability_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallCapability@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallCapability_optional *a2@<X8>)
{
  result.value = PhoneCallCapability.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallCapability()
{
  char v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallCapability.rawValue.getter(v1);
  v0[1] = 0xE500000000000000LL;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallCapability( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallCapability.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallCapability()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

uint64_t PhoneCallPreferredProvider.asINPreferredCallProvider.getter(unsigned __int8 a1)
{
  return a1 + 1LL;
}

PhoneCallFlowDelegatePlugin::PhoneCallPreferredProvider_optional __swiftcall PhoneCallPreferredProvider.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallPreferredProvider.init(rawValue:);
  PhoneCallPreferredProvider.init(rawValue:)(rawValue, v1);
  return result;
}

_UNKNOWN **static PhoneCallPreferredProvider.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallPreferredProvider.allCases.getter;
}

uint64_t PhoneCallPreferredProvider.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6E6F6870656C6574LL;
  }
  if (a1 == 1) {
    return 0x656D697465636166LL;
  }
  return 0x7261506472696874LL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallPreferredProvider( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
  return v2 & 1;
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance PhoneCallPreferredProvider()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallPreferredProvider(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallPreferredProvider( uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::PhoneCallPreferredProvider_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallPreferredProvider@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallPreferredProvider_optional *a2@<X8>)
{
  result.value = PhoneCallPreferredProvider.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallPreferredProvider()
{
  char v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallPreferredProvider.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallPreferredProvider( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallPreferredProvider.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallPreferredProvider()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

uint64_t PhoneCallConfirmation.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_239 + 4 * byte_32641D[a1]))( 7562617LL,  0xE300000000000000LL);
}

uint64_t sub_11C0E8()
{
  return OUTLINED_FUNCTION_238();
}

uint64_t PhoneCallConfirmation.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_239_0 + 4 * byte_326422[a1]))( 7562617LL,  0xE300000000000000LL);
}

uint64_t sub_11C130()
{
  return OUTLINED_FUNCTION_238();
}

PhoneCallFlowDelegatePlugin::PhoneCallConfirmation_optional __swiftcall PhoneCallConfirmation.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallConfirmation.init(rawValue:);
  PhoneCallConfirmation.init(rawValue:)(rawValue, v1);
  return result;
}

_UNKNOWN **static PhoneCallConfirmation.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallConfirmation.allCases.getter;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallConfirmation()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallConfirmation()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallConfirmation()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallConfirmation(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallConfirmation_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallConfirmation@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallConfirmation_optional *a2@<X8>)
{
  result.value = PhoneCallConfirmation.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallConfirmation()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallConfirmation.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallConfirmation( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallConfirmation.allCases.getter;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallConfirmation()
{
  return PhoneCallConfirmation.description.getter(*v0);
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallConfirmation()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

_UNKNOWN **static PhoneCallNoun.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallNoun.allCases.getter;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNoun()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallNoun()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallNoun()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNoun(uint64_t a1)
{
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallNoun()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallNoun.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallNoun(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallNoun.allCases.getter;
}

uint64_t PhoneCallReference.ordinalIndex.getter(unsigned __int8 a1)
{
  uint64_t v1 = PhoneCallReference.rawValue.getter(a1);
  BOOL v3 = v1 == 0x7473726966LL && v2 == 0xE500000000000000LL;
  if (v3 || (uint64_t v4 = v1, v5 = v2, (OUTLINED_FUNCTION_49_2(0x7473726966LL, 0xE500000000000000LL, v1, v2) & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  BOOL v7 = v4 == 0x646E6F636573LL && v5 == 0xE600000000000000LL;
  if (v7 || (OUTLINED_FUNCTION_49_2(0x646E6F636573LL, 0xE600000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1LL;
  }

  BOOL v8 = v4 == 0x6472696874LL && v5 == 0xE500000000000000LL;
  if (v8 || (OUTLINED_FUNCTION_49_2(0x6472696874LL, 0xE500000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2LL;
  }

  BOOL v9 = v4 == 0x687472756F66LL && v5 == 0xE600000000000000LL;
  if (v9 || (OUTLINED_FUNCTION_49_2(0x687472756F66LL, 0xE600000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3LL;
  }

  BOOL v10 = v4 == 0x6874666966LL && v5 == 0xE500000000000000LL;
  if (v10 || (OUTLINED_FUNCTION_49_2(0x6874666966LL, 0xE500000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4LL;
  }

  BOOL v11 = v4 == 0x6874786973LL && v5 == 0xE500000000000000LL;
  if (v11 || (OUTLINED_FUNCTION_49_2(0x6874786973LL, 0xE500000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5LL;
  }

  BOOL v12 = v4 == 0x68746E65766573LL && v5 == 0xE700000000000000LL;
  if (v12 || (OUTLINED_FUNCTION_49_2(0x68746E65766573LL, 0xE700000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6LL;
  }

  BOOL v13 = v4 == 0x687468676965LL && v5 == 0xE600000000000000LL;
  if (v13 || (OUTLINED_FUNCTION_49_2(0x687468676965LL, 0xE600000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7LL;
  }

  BOOL v14 = v4 == 0x68746E696ELL && v5 == 0xE500000000000000LL;
  if (v14 || (OUTLINED_FUNCTION_49_2(0x68746E696ELL, 0xE500000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8LL;
  }

  BOOL v15 = v4 == 0x68746E6574LL && v5 == 0xE500000000000000LL;
  if (v15 || (OUTLINED_FUNCTION_49_2(0x68746E6574LL, 0xE500000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9LL;
  }

  BOOL v16 = v4 == 0x68746E6576656C65LL && v5 == 0xE800000000000000LL;
  if (v16 || (OUTLINED_FUNCTION_49_2(0x68746E6576656C65LL, 0xE800000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10LL;
  }

  BOOL v17 = v4 == 0x6874666C657774LL && v5 == 0xE700000000000000LL;
  if (v17 || (OUTLINED_FUNCTION_49_2(0x6874666C657774LL, 0xE700000000000000LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11LL;
  }

  OUTLINED_FUNCTION_119_2();
  if (v3 && v5 == 0xEA00000000006874LL)
  {
    OUTLINED_FUNCTION_232();
LABEL_80:
    swift_bridgeObjectRelease();
    return 12LL;
  }

  if ((OUTLINED_FUNCTION_49_2(0x6E65657472696874LL, 0xEA00000000006874LL, v4, v5) & 1) != 0) {
    goto LABEL_80;
  }
  OUTLINED_FUNCTION_119_2();
  if (v3 && v5 == 0xEA00000000006874LL)
  {
    OUTLINED_FUNCTION_232();
LABEL_88:
    swift_bridgeObjectRelease();
    return 13LL;
  }

  if ((OUTLINED_FUNCTION_49_2(0x6E65657472756F66LL, 0xEA00000000006874LL, v4, v5) & 1) != 0) {
    goto LABEL_88;
  }
  BOOL v20 = v4 == 0x746E656574666966LL && v5 == 0xE900000000000068LL;
  if (v20 || (OUTLINED_FUNCTION_49_2(0x746E656574666966LL, 0xE900000000000068LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14LL;
  }

  BOOL v21 = v4 == 0x746E656574786973LL && v5 == 0xE900000000000068LL;
  if (v21 || (OUTLINED_FUNCTION_49_2(0x746E656574786973LL, 0xE900000000000068LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15LL;
  }

  BOOL v22 = v4 == 0x6565746E65766573LL && v5 == 0xEB0000000068746ELL;
  if (v22 || (OUTLINED_FUNCTION_49_2(0x6565746E65766573LL, 0xEB0000000068746ELL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16LL;
  }

  OUTLINED_FUNCTION_119_2();
  if (v3 && v5 == 0xEA00000000006874LL)
  {
    OUTLINED_FUNCTION_232();
LABEL_114:
    swift_bridgeObjectRelease();
    return 17LL;
  }

  if ((OUTLINED_FUNCTION_49_2(0x6E65657468676965LL, 0xEA00000000006874LL, v4, v5) & 1) != 0) {
    goto LABEL_114;
  }
  OUTLINED_FUNCTION_119_2();
  if (v3 && v5 == 0xEA00000000006874LL)
  {
    OUTLINED_FUNCTION_232();
LABEL_122:
    swift_bridgeObjectRelease();
    return 18LL;
  }

  if ((OUTLINED_FUNCTION_49_2(0x6E656574656E696ELL, 0xEA00000000006874LL, v4, v5) & 1) != 0) {
    goto LABEL_122;
  }
  BOOL v25 = v4 == 0x746569746E657774LL && v5 == 0xE900000000000068LL;
  if (v25 || (OUTLINED_FUNCTION_49_2(0x746569746E657774LL, 0xE900000000000068LL, v4, v5) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19LL;
  }

  else
  {
    BOOL v26 = v4 == 0x662079746E657774LL && v5 == 0xEC00000074737269LL;
    if (v26 || (uint64_t v27 = OUTLINED_FUNCTION_121_0(), (OUTLINED_FUNCTION_49_2(v27, 0xEC00000074737269LL, v4, v5) & 1) != 0))
    {
      swift_bridgeObjectRelease();
      return 20LL;
    }

    else
    {
      BOOL v28 = v4 == 0x732079746E657774LL && v5 == 0xED0000646E6F6365LL;
      if (v28 || (OUTLINED_FUNCTION_49_2(0x732079746E657774LL, 0xED0000646E6F6365LL, v4, v5) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 21LL;
      }

      else
      {
        BOOL v29 = v4 == 0x742079746E657774LL && v5 == 0xEC00000064726968LL;
        if (v29 || (OUTLINED_FUNCTION_49_2(0x742079746E657774LL, 0xEC00000064726968LL, v4, v5) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 22LL;
        }

        else
        {
          BOOL v30 = v4 == 0x662079746E657774LL && v5 == 0xED0000687472756FLL;
          if (v30
            || (uint64_t v31 = OUTLINED_FUNCTION_121_0(), (OUTLINED_FUNCTION_49_2(v31, 0xED0000687472756FLL, v4, v5) & 1) != 0))
          {
            swift_bridgeObjectRelease();
            return 23LL;
          }

          else if (v4 == 0x662079746E657774LL && v5 == 0xEC00000068746669LL)
          {
            swift_bridgeObjectRelease();
            return 24LL;
          }

          else
          {
            uint64_t v33 = OUTLINED_FUNCTION_121_0();
            char v34 = OUTLINED_FUNCTION_49_2(v33, 0xEC00000068746669LL, v4, v5);
            OUTLINED_FUNCTION_39();
            if ((v34 & 1) != 0) {
              return 24LL;
            }
            else {
              return 0LL;
            }
          }
        }
      }
    }
  }

uint64_t PhoneCallReference.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_149_3 + 4 * byte_326430[a1]))( 0x7473726966LL,  0xE500000000000000LL);
}

uint64_t sub_11CC34()
{
  return 0x687472756F66LL;
}

void sub_11CC9C()
{
}

uint64_t sub_11CCB4()
{
  return OUTLINED_FUNCTION_169_1(0x72696874u);
}

uint64_t sub_11CD20()
{
  return OUTLINED_FUNCTION_121_0();
}

uint64_t sub_11CD70()
{
  return 6647407LL;
}

uint64_t sub_11CD88()
{
  return 6645876LL;
}

uint64_t sub_11CD98()
{
  return 0x6573656874LL;
}

PhoneCallFlowDelegatePlugin::PhoneCallReference_optional __swiftcall PhoneCallReference.init(rawValue:)( Swift::String rawValue)
{
  return result;
}

_UNKNOWN **static PhoneCallReference.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallReference.allCases.getter;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallReference( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2, (void (*)(void))PhoneCallReference.rawValue.getter);
  return v2 & 1;
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallReference()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallReference(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallReference(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallReference_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallReference@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallReference_optional *a2@<X8>)
{
  result.value = PhoneCallReference.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallReference()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallReference.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallReference( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallReference.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallReference()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional __swiftcall PhoneCallContactReference.init(rawValue:)( Swift::String rawValue)
{
  return result;
}

_UNKNOWN **static PhoneCallContactReference.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallContactReference.allCases.getter;
}

uint64_t PhoneCallContactReference.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_149_3_0 + 4 * byte_326453[a1]))( 0x7473726966LL,  0xE500000000000000LL);
}

uint64_t sub_11CF30()
{
  return 0x687472756F66LL;
}

void sub_11CF98()
{
}

uint64_t sub_11CFB0()
{
  return OUTLINED_FUNCTION_169_1(0x72696874u);
}

uint64_t sub_11D01C()
{
  return OUTLINED_FUNCTION_121_0();
}

uint64_t sub_11D06C()
{
  return 6647407LL;
}

uint64_t sub_11D084()
{
  return 25960LL;
}

uint64_t sub_11D090()
{
  return 6645875LL;
}

uint64_t sub_11D0A0()
{
  return 31085LL;
}

uint64_t sub_11D0AC()
{
  return 7958113LL;
}

uint64_t sub_11D0BC()
{
  return 0x726568746FLL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallContactReference( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2, (void (*)(void))PhoneCallContactReference.rawValue.getter);
  return v2 & 1;
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallContactReference()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallContactReference(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallContactReference(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallContactReference@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional *a2@<X8>)
{
  result.value = PhoneCallContactReference.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallContactReference()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = PhoneCallContactReference.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallContactReference( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallContactReference.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallContactReference()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

Swift::Bool __swiftcall PhoneCallVerb.isCallOrFaceTime()()
{
  uint64_t v1 = PhoneCallVerb.rawValue.getter(v0);
  if (v1 == 1819042147 && v2 == 0xE400000000000000LL) {
    goto LABEL_16;
  }
  uint64_t v4 = v1;
  uint64_t v5 = v2;
  char v6 = OUTLINED_FUNCTION_49_2(v1, v2, 1819042147LL, 0xE400000000000000LL);
  OUTLINED_FUNCTION_39();
  if ((v6 & 1) == 0)
  {
    if (v4 == 0x656D697465636166LL && v5 == 0xE800000000000000LL) {
      goto LABEL_16;
    }
    uint64_t v8 = OUTLINED_FUNCTION_163_1();
    char v11 = OUTLINED_FUNCTION_49_2(v8, v9, v10, 0xE800000000000000LL);
    OUTLINED_FUNCTION_39();
    if ((v11 & 1) == 0)
    {
      if (v4 != 0x656D697465636166LL || v5 != 0xEE006F6964756120LL)
      {
        uint64_t v13 = OUTLINED_FUNCTION_163_1();
        OUTLINED_FUNCTION_49_2(v13, v14, v15, 0xEE006F6964756120LL);
        OUTLINED_FUNCTION_39();
        goto LABEL_17;
      }

_UNKNOWN **static PhoneCallVerb.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallVerb.allCases.getter;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallVerb( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2, (void (*)(void))PhoneCallVerb.rawValue.getter);
  return v2 & 1;
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallVerb()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallVerb(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallVerb(uint64_t a1)
{
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallVerb()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *unsigned __int8 v0 = PhoneCallVerb.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallVerb(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallVerb.allCases.getter;
}

void one-time initialization function for voiceMailNoun(uint64_t a1)
{
}

uint64_t *VoiceMail.voiceMailNoun.unsafeMutableAddressor()
{
  if (one-time initialization token for voiceMailNoun != -1) {
    swift_once(&one-time initialization token for voiceMailNoun, one-time initialization function for voiceMailNoun);
  }
  return &static VoiceMail.voiceMailNoun;
}

uint64_t static VoiceMail.voiceMailNoun.getter()
{
  return static VoiceMail.voiceMailNoun.getter( &one-time initialization token for voiceMailNoun,  &static VoiceMail.voiceMailNoun);
}

void one-time initialization function for voiceMailVerb(uint64_t a1)
{
}

void one-time initialization function for voiceMailNoun(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  *a4 = TerminalOntologyNode.init(name:multicardinal:)(0x69614D6563696F76LL, a3, 0LL);
  OUTLINED_FUNCTION_2();
}

uint64_t *VoiceMail.voiceMailVerb.unsafeMutableAddressor()
{
  if (one-time initialization token for voiceMailVerb != -1) {
    swift_once(&one-time initialization token for voiceMailVerb, one-time initialization function for voiceMailVerb);
  }
  return &static VoiceMail.voiceMailVerb;
}

uint64_t static VoiceMail.voiceMailVerb.getter()
{
  return static VoiceMail.voiceMailNoun.getter( &one-time initialization token for voiceMailVerb,  &static VoiceMail.voiceMailVerb);
}

uint64_t static VoiceMail.voiceMailNoun.getter(void *a1, void *a2)
{
  if (*a1 != -1LL) {
    swift_once();
  }
  return swift_retain(*a2);
}

PhoneCallFlowDelegatePlugin::VoiceMail::VoiceMailNoun_optional __swiftcall VoiceMail.VoiceMailNoun.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of VoiceMail.VoiceMailNoun.init(rawValue:);
  PhoneCallCapability.init(rawValue:)(rawValue, v1);
  return result;
}

void PhoneCallCapability.init(rawValue:)(Swift::String a1, Swift::OpaquePointer a2)
{
}

_UNKNOWN **static VoiceMail.VoiceMailNoun.allCases.getter()
{
  return &outlined read-only object #0 of static VoiceMail.VoiceMailNoun.allCases.getter;
}

uint64_t VoiceMail.VoiceMailNoun.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6563696F76LL;
  }
  else {
    return 0x69616D6563696F76LL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VoiceMail.VoiceMailNoun( char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance VoiceMail.VoiceMailNoun()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoiceMail.VoiceMailNoun(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VoiceMail.VoiceMailNoun(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::VoiceMail::VoiceMailNoun_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VoiceMail.VoiceMailNoun@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::VoiceMail::VoiceMailNoun_optional *a2@<X8>)
{
  result.value = VoiceMail.VoiceMailNoun.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VoiceMail.VoiceMailNoun()
{
  char v1 = OUTLINED_FUNCTION_38();
  *unsigned __int8 v0 = VoiceMail.VoiceMailNoun.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance VoiceMail.VoiceMailNoun( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static VoiceMail.VoiceMailNoun.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance VoiceMail.VoiceMailNoun()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

PhoneCallFlowDelegatePlugin::VoiceMail::VoiceMailVerb_optional __swiftcall VoiceMail.VoiceMailVerb.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of VoiceMail.VoiceMailVerb.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

_UNKNOWN **static VoiceMail.VoiceMailVerb.allCases.getter()
{
  return &outlined read-only object #0 of static VoiceMail.VoiceMailVerb.allCases.getter;
}

uint64_t VoiceMail.VoiceMailVerb.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_11D614 + 4 * byte_326479[a1]))( 2036427888LL,  0xE400000000000000LL);
}

uint64_t sub_11D614()
{
  return 0x746165706572LL;
}

uint64_t sub_11D628()
{
  return 1885956979LL;
}

uint64_t sub_11D634()
{
  return 0x6573756170LL;
}

uint64_t sub_11D648()
{
  return 0x656D75736572LL;
}

uint64_t sub_11D65C()
{
  return 0x6574656C6564LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance VoiceMail.VoiceMailVerb()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance VoiceMail.VoiceMailVerb()
{
}

void protocol witness for Hashable.hash(into:) in conformance VoiceMail.VoiceMailVerb()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VoiceMail.VoiceMailVerb(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::VoiceMail::VoiceMailVerb_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VoiceMail.VoiceMailVerb@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::VoiceMail::VoiceMailVerb_optional *a2@<X8>)
{
  result.value = VoiceMail.VoiceMailVerb.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VoiceMail.VoiceMailVerb()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *unsigned __int8 v0 = VoiceMail.VoiceMailVerb.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance VoiceMail.VoiceMailVerb( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static VoiceMail.VoiceMailVerb.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance VoiceMail.VoiceMailVerb()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

PhoneCallFlowDelegatePlugin::PhoneCallDestinationType_optional __swiftcall PhoneCallDestinationType.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDestinationType.init(rawValue:);
  PhoneCallConfirmation.init(rawValue:)(rawValue, v1);
  return result;
}

void PhoneCallConfirmation.init(rawValue:)(Swift::String a1, Swift::OpaquePointer a2)
{
}

_UNKNOWN **static PhoneCallDestinationType.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallDestinationType.allCases.getter;
}

uint64_t PhoneCallDestinationType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_11D780 + 4 * byte_32647F[a1]))( 0x6C616D726F6ELL,  0xE600000000000000LL);
}

uint64_t sub_11D780()
{
  return OUTLINED_FUNCTION_162_3();
}

void sub_11D790()
{
}

uint64_t sub_11D7AC()
{
  return 0x6B6361626C6C6163LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDestinationType(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallDestinationType()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallDestinationType(uint64_t a1)
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDestinationType(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDestinationType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDestinationType@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDestinationType_optional *a2@<X8>)
{
  result.value = PhoneCallDestinationType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDestinationType()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *unsigned __int8 v0 = PhoneCallDestinationType.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallDestinationType( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallDestinationType.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallDestinationType()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

uint64_t PhoneCallContactRole.NLv3.asCommonRole.getter(char a1)
{
  return 0x10002u >> (8 * a1);
}

void PhoneCallPreferredProvider.init(rawValue:)(Swift::String a1, Swift::OpaquePointer a2)
{
}

_UNKNOWN **static PhoneCallContactRole.NLv3.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallContactRole.NLv3.allCases.getter;
}

uint64_t PhoneCallContactRole.NLv3.rawValue.getter(char a1)
{
  if (!a1) {
    return 28532LL;
  }
  if (a1 == 1) {
    return 1836020326LL;
  }
  return 1752459639LL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallContactRole.NLv3( char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallContactRole.NLv3()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallContactRole.NLv3(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallContactRole.NLv3(uint64_t a1)
{
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallContactRole.NLv3()
{
  char v1 = OUTLINED_FUNCTION_38();
  *unsigned __int8 v0 = PhoneCallContactRole.NLv3.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallContactRole.NLv3( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallContactRole.NLv3.allCases.getter;
}

void PhoneCallContactRole.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

void PhoneCallContactRole.hashValue.getter(uint64_t a1)
{
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallContactRole()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallContactRole(uint64_t a1)
{
}

void SmsGroup.asINCallGroup.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 8))();
  uint64_t v4 = v3;
  uint64_t v5 = OUTLINED_FUNCTION_99_2();
  uint64_t v7 = v6(v5);
  uint64_t v9 = v8;
  id v10 = objc_allocWithZone(&OBJC_CLASS___INCallGroup);
  @nonobjc INCallGroup.init(groupName:groupId:)(v2, v4, v7, v9);
  OUTLINED_FUNCTION_16();
}

Swift::Bool __swiftcall PhoneCallNLIntent.isPlayVoiceMail()()
{
  int v4 = (*(unsigned __int8 (**)(void))(v3 + 120))();
  OUTLINED_FUNCTION_37_20(v2);
  if (v4 == 2)
  {
    BOOL v5 = 0;
  }

  else
  {
    OUTLINED_FUNCTION_68_11();
    BOOL v5 = !PhoneCallNLIntent.hasCallVerb()();
  }

  OUTLINED_FUNCTION_31_22(v2);
  OUTLINED_FUNCTION_37_20(v0);
  if (!v5)
  {
    OUTLINED_FUNCTION_33_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 112));
    OUTLINED_FUNCTION_171_1();
  }

  OUTLINED_FUNCTION_31_22(v0);
  OUTLINED_FUNCTION_58();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasVoiceMailNoun()()
{
  return !v1;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasVoiceMailVerb()()
{
  return !v2;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isNextAfterPlayingVoiceMail()()
{
  if (!v5)
  {
    uint64_t v3 = VoiceMail.VoiceMailVerb.rawValue.getter(v2);
    BOOL v5 = v3 == 1885956979 && v4 == 0xE400000000000000LL;
    if (v5)
    {
      OUTLINED_FUNCTION_58_10();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v3, v4, 1885956979LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isRepeatAfterPlayingVoiceMail()()
{
  if (!v5)
  {
    uint64_t v3 = VoiceMail.VoiceMailVerb.rawValue.getter(v2);
    BOOL v5 = v3 == 0x746165706572LL && v4 == 0xE600000000000000LL;
    if (v5)
    {
      OUTLINED_FUNCTION_122_3();
    }

    else
    {
      OUTLINED_FUNCTION_208();
      OUTLINED_FUNCTION_49_2(v6, v7, v8, 0xE600000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasWantedToRepeat()()
{
  if (!v5)
  {
    uint64_t v3 = PhoneCallVerb.rawValue.getter(v2);
    BOOL v5 = v3 == 0x65526F54746E6177LL && v4 == 0xEC00000074616570LL;
    if (v5)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v3, v4, 0x65526F54746E6177LL, 0xEC00000074616570LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_6();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isPlayIt()()
{
  uint64_t v2 = __chkstk_darwin();
  OUTLINED_FUNCTION_113_4(v2, v3);
  OUTLINED_FUNCTION_171_1();
  if (v7)
  {
    OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  }

  else
  {
    uint64_t v5 = VoiceMail.VoiceMailVerb.rawValue.getter(v4);
    BOOL v7 = v5 == 2036427888 && v6 == 0xE400000000000000LL;
    if (v7)
    {
      OUTLINED_FUNCTION_58_10();
      OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    }

    else
    {
      char v8 = OUTLINED_FUNCTION_49_2(v5, v6, 2036427888LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
      if ((v8 & 1) == 0) {
        goto LABEL_12;
      }
    }

    OUTLINED_FUNCTION_33_28(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 120));
    OUTLINED_FUNCTION_220();
  }

Swift::Bool __swiftcall PhoneCallNLIntent.hasRelationship()()
{
  unsigned __int8 v4 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for ContactQuery(0LL);
  uint64_t v55 = *(void *)(v5 - 8);
  __chkstk_darwin();
  BOOL v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  char v11 = (char *)v48 - v10;
  BOOL v12 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  uint64_t v52 = v0;
  uint64_t v53 = v1;
  uint64_t v13 = OUTLINED_FUNCTION_72_0(v12);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = v11;
  id v51 = v9;
  uint64_t v49 = v2;
  if (v15)
  {
    uint64_t v17 = v13 + 32;
    swift_bridgeObjectRetain();
    do
    {
      OUTLINED_FUNCTION_36_15();
      uint64_t v19 = v57;
      uint64_t v18 = v58;
      unint64_t v20 = (unint64_t)__swift_project_boxed_opaque_existential_1(v56, v57);
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 416))(v19, v18);
      if (v22)
      {
        uint64_t v23 = v21;
        OUTLINED_FUNCTION_34(v21, v22);
        if ((v20 & 0x2000000000000000LL) != 0) {
          uint64_t v24 = HIBYTE(v20) & 0xF;
        }
        else {
          uint64_t v24 = v23 & 0xFFFFFFFFFFFFLL;
        }
        __swift_destroy_boxed_opaque_existential_1(v56);
        char v11 = v16;
        if (v24)
        {
          OUTLINED_FUNCTION_7_4(v14);
          LOBYTE(v1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 1;
          goto LABEL_13;
        }
      }

      else
      {
        __swift_destroy_boxed_opaque_existential_1(v56);
        char v11 = v16;
      }

      v17 += 40LL;
      --v15;
    }

    while (v15);
    OUTLINED_FUNCTION_7_4(v14);
LABEL_13:
    uint64_t v9 = v51;
    uint64_t v2 = v49;
  }

  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v25 = v53;
  uint64_t v26 = v52;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  v50(v11, v53, v52);
  if ((v15 & 1) != 0)
  {
    LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 1;
  }

  else
  {
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v26, v2);
    uint64_t v27 = *(void *)(v28 + 16);
    if (v27)
    {
      unint64_t v29 = (*(unsigned __int8 *)(v55 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      v48[1] = v28;
      unint64_t v30 = v28 + v29;
      uint64_t v31 = *(void *)(v55 + 72);
      uint64_t v32 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v55 + 16);
      while (1)
      {
        uint64_t v33 = v32(v7, v30, v5);
        ContactQuery.relationship.getter(v33);
        uint64_t v34 = type metadata accessor for ContactRelationshipQuery(0LL);
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1LL, v34);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v4,  &demangling cache variable for type metadata for ContactRelationshipQuery?);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v7, v5);
        if (EnumTagSinglePayload != 1) {
          break;
        }
        v30 += v31;
        if (!--v27)
        {
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }

      swift_bridgeObjectRelease();
      LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 1;
LABEL_23:
      uint64_t v9 = v51;
      uint64_t v26 = v52;
      uint64_t v2 = v49;
      uint64_t v25 = v53;
      char v11 = v16;
    }

    else
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v53;
    }
  }

  id v36 = *(void (**)(char *, uint64_t))(v54 + 8);
  v36(v11, v26);
  v50(v9, v25, v26);
  if ((v27 & 1) == 0)
  {
    PhoneCallNLIntent.getPersons()(v26, v2);
    uint64_t v38 = v37;
    if (v37 >> 62) {
      goto LABEL_39;
    }
    uint64_t v39 = *(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_6_3();
    for (; v39; uint64_t v39 = _CocoaArrayWrapper.endIndex.getter(v46))
    {
      uint64_t v40 = 4LL;
      while (1)
      {
        uint64_t v9 = (char *)(v40 - 4);
        id v41 = (v38 & 0xC000000000000001LL) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40 - 4, v38)
            : *(id *)(v38 + 8 * v40);
        uint64_t v42 = v41;
        uint64_t v43 = v40 - 3;
        if (__OFADD__(v9, 1LL)) {
          break;
        }
        id v44 = [v41 relationship];

        ++v40;
        if (v44) {
          BOOL v45 = 1;
        }
        else {
          BOOL v45 = v43 == v39;
        }
        if (v45)
        {
          uint64_t v9 = v51;
          goto LABEL_43;
        }
      }

      __break(1u);
LABEL_39:
      if (v38 < 0) {
        uint64_t v46 = v38;
      }
      else {
        uint64_t v46 = v38 & 0xFFFFFFFFFFFFFF8LL;
      }
      OUTLINED_FUNCTION_6_3();
    }

Swift::Bool __swiftcall PhoneCallNLIntent.isInferredCallFromRedialOrCallBack()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_95_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v25 = v3;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - v4;
  __chkstk_darwin();
  OUTLINED_FUNCTION_66_9();
  BOOL v7 = *(void (**)(void))(v6 + 104);
  v7();
  OUTLINED_FUNCTION_22_25();
  if (v10)
  {
    char v9 = 0;
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_97_5(v8);
    if (v10) {
      BOOL v13 = v12 == 0xE600000000000000LL;
    }
    else {
      BOOL v13 = 0;
    }
    if (v13)
    {
      OUTLINED_FUNCTION_122_3();
      char v9 = 1;
    }

    else
    {
      char v9 = OUTLINED_FUNCTION_49_2(v11, v12, 0x6C6169646572LL, 0xE600000000000000LL);
      OUTLINED_FUNCTION_70_2();
    }
  }

  OUTLINED_FUNCTION_75_8(v1, v2);
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_140_3();
    BOOL v14 = !PhoneCallNLIntent.isRedial()();
  }

  else
  {
    BOOL v14 = 0;
  }

  OUTLINED_FUNCTION_6_10(v1);
  OUTLINED_FUNCTION_75_8((uint64_t)v5, v2);
  if (!v14)
  {
    uint64_t v15 = OUTLINED_FUNCTION_258();
    ((void (*)(uint64_t))v7)(v15);
    OUTLINED_FUNCTION_22_25();
    if (v10)
    {
      uint64_t v17 = v25;
      OUTLINED_FUNCTION_75_8(v25, (uint64_t)v5);
    }

    else
    {
      uint64_t v19 = OUTLINED_FUNCTION_267(v16);
      if (v18) {
        BOOL v21 = v20 == 0xE90000000000006BLL;
      }
      else {
        BOOL v21 = 0;
      }
      if (v21)
      {
        OUTLINED_FUNCTION_229(107LL);
        uint64_t v17 = v25;
        OUTLINED_FUNCTION_75_8(v25, (uint64_t)v5);
      }

      else
      {
        char v22 = OUTLINED_FUNCTION_49_2(v19, v20, 0x636162206C6C6163LL, 0xE90000000000006BLL);
        OUTLINED_FUNCTION_62();
        uint64_t v17 = v25;
        OUTLINED_FUNCTION_75_8(v25, (uint64_t)v5);
        if ((v22 & 1) == 0) {
          goto LABEL_25;
        }
      }

      OUTLINED_FUNCTION_140_3();
      PhoneCallNLIntent.isCallBack()();
    }

Swift::Bool __swiftcall PhoneCallNLIntent.hasAnyContactReference()()
{
  if (!v2)
  {
    OUTLINED_FUNCTION_39();
    goto LABEL_25;
  }

  OUTLINED_FUNCTION_47_11();
  while (1)
  {
    OUTLINED_FUNCTION_36_15();
    v3.value = OUTLINED_FUNCTION_152_2(v30).value;
    if (v3.value == PhoneCallFlowDelegatePlugin_PhoneCallContactReference_unknownDefault)
    {
      OUTLINED_FUNCTION_61_9();
    }

    else
    {
      uint64_t v4 = PhoneCallContactReference.rawValue.getter(v3.value);
      BOOL v6 = v4 == 6647407 && v5 == 0xE300000000000000LL;
      if (v6)
      {
        OUTLINED_FUNCTION_225_0();
        OUTLINED_FUNCTION_61_9();
        goto LABEL_23;
      }

      char v7 = OUTLINED_FUNCTION_49_2(v4, v5, 6647407LL, 0xE300000000000000LL);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_61_9();
      if ((v7 & 1) != 0) {
        goto LABEL_23;
      }
    }

    v8.value = OUTLINED_FUNCTION_152_2(v29).value;
    if (v8.value != PhoneCallFlowDelegatePlugin_PhoneCallContactReference_unknownDefault) {
      break;
    }
    uint64_t v9 = __swift_destroy_boxed_opaque_existential_1(v29);
    OUTLINED_FUNCTION_99_3(v9, v10, v11, v12, v13);
LABEL_17:
    OUTLINED_FUNCTION_186_0();
    if (v6) {
      goto LABEL_24;
    }
  }

  uint64_t v14 = PhoneCallContactReference.rawValue.getter(v8.value);
  if (v14 != 2037277037 || v15 != 0xE400000000000000LL)
  {
    char v17 = OUTLINED_FUNCTION_49_2(v14, v15, 2037277037LL, 0xE400000000000000LL);
    OUTLINED_FUNCTION_62();
    uint64_t v18 = __swift_destroy_boxed_opaque_existential_1(v29);
    OUTLINED_FUNCTION_99_3(v18, v19, v20, v21, v22);
    if ((v17 & 1) != 0) {
      goto LABEL_24;
    }
    goto LABEL_17;
  }

  OUTLINED_FUNCTION_58_10();
LABEL_23:
  uint64_t v23 = __swift_destroy_boxed_opaque_existential_1(v29);
  OUTLINED_FUNCTION_99_3(v23, v24, v25, v26, v27);
LABEL_24:
  OUTLINED_FUNCTION_2_12();
LABEL_25:
  OUTLINED_FUNCTION_33_1();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isVoiceMailCallOrCallBack()()
{
  uint64_t v4 = v0;
  __chkstk_darwin();
  OUTLINED_FUNCTION_6_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_83_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_66_9();
  Swift::Bool v5 = PhoneCallNLIntent.hasCallVerb()();
  OUTLINED_FUNCTION_43_10(v3, v4);
  if (v5)
  {
    OUTLINED_FUNCTION_140_3();
    Swift::Bool v6 = PhoneCallNLIntent.hasNoContactOrReference()();
  }

  else
  {
    Swift::Bool v6 = 0;
  }

  OUTLINED_FUNCTION_6_10(v3);
  OUTLINED_FUNCTION_43_10(v2, v4);
  if (v6)
  {
    OUTLINED_FUNCTION_6_10(v2);
    OUTLINED_FUNCTION_43_10(v1, v4);
  }

  else
  {
    OUTLINED_FUNCTION_200_0();
    Swift::Bool v7 = PhoneCallNLIntent.isCallBack()();
    OUTLINED_FUNCTION_6_10(v2);
    OUTLINED_FUNCTION_43_10(v1, v4);
    if (!v7) {
      PhoneCallNLIntent.isCallWithReference()();
    }
  }

  OUTLINED_FUNCTION_6_10(v1);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasNoContactOrReference()()
{
  unint64_t v4 = (*(uint64_t (**)(void))(v3 + 144))();
  if (v4 >> 62) {
    uint64_t v5 = OUTLINED_FUNCTION_194_0();
  }
  else {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
  }
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_30_20(v2);
  if (v5)
  {
    BOOL v6 = 0;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_39_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
    OUTLINED_FUNCTION_72_11(v7);
    BOOL v6 = v2 == 0;
  }

  OUTLINED_FUNCTION_31_22(v2);
  OUTLINED_FUNCTION_30_20(v0);
  if (v6)
  {
    uint64_t v8 = OUTLINED_FUNCTION_39_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 128));
    OUTLINED_FUNCTION_72_11(v8);
  }

  OUTLINED_FUNCTION_31_22(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isCallWithReference()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_74_10();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  Swift::Bool v3 = PhoneCallNLIntent.hasCallVerb()();
  OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_16();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasCancellation()()
{
  if (!v4)
  {
    uint64_t v2 = PhoneCallConfirmation.rawValue.getter(v1);
    BOOL v4 = v2 == 0x6C65636E6163LL && v3 == 0xE600000000000000LL;
    if (v4)
    {
      OUTLINED_FUNCTION_122_3();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v2, v3, 0x6C65636E6163LL, 0xE600000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasRejection()()
{
  if (!v4)
  {
    uint64_t v2 = PhoneCallConfirmation.rawValue.getter(v1);
    BOOL v4 = v2 == 28526 && v3 == 0xE200000000000000LL;
    if (v4)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v2, v3, 28526LL, 0xE200000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isSearchCallHistoryWithDate()()
{
  if (OUTLINED_FUNCTION_111_3(v1, v2))
  {
    if (OUTLINED_FUNCTION_182_0() && *(void *)(v0 + 16))
    {
      OUTLINED_FUNCTION_8_1();
      uint64_t v3 = OUTLINED_FUNCTION_25_31();
      return ((uint64_t (*)(uint64_t))((char *)&loc_11E89C + 4 * byte_326492[v4]))(v3);
    }

    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_58();
  return result;
}

void sub_11E988()
{
}

Swift::Bool __swiftcall PhoneCallNLIntent.isSearchCallHistoryWithAppName()()
{
  if (!v0)
  {
    OUTLINED_FUNCTION_71_7();
    OUTLINED_FUNCTION_45_15(v1, 0LL);
    goto LABEL_10;
  }

  uint64_t v9 = OUTLINED_FUNCTION_200_0();
  PhoneCallNLIntent.applicationId.getter(v9, v10, v11);
  if (!v13)
  {
    OUTLINED_FUNCTION_71_7();
    OUTLINED_FUNCTION_45_15(v1, v0);
    goto LABEL_9;
  }

  if (v12 != 0xD000000000000015LL || v13 != 0x8000000000348BF0LL)
  {
    OUTLINED_FUNCTION_237();
    char v18 = OUTLINED_FUNCTION_49_2(v14, v15, v16, v17);
    OUTLINED_FUNCTION_71_7();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_45_15(v1, v0);
    if ((v18 & 1) != 0) {
      goto LABEL_10;
    }
LABEL_9:
    PhoneCallNLIntent.isFind()();
    goto LABEL_10;
  }

  OUTLINED_FUNCTION_71_7();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_45_15(v1, v0);
LABEL_10:
  uint64_t v19 = OUTLINED_FUNCTION_99_2();
  v3(v19);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isSearchCallHistoryWithUnsupportedAttribute()()
{
  if (OUTLINED_FUNCTION_111_3(v1, v2))
  {
    if (OUTLINED_FUNCTION_182_0() && *(void *)(v0 + 16))
    {
      OUTLINED_FUNCTION_8_1();
      uint64_t v3 = OUTLINED_FUNCTION_67_12();
      return v4(v3);
    }

    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_58();
  return result;
}

void sub_11EF1C()
{
}

Swift::Bool __swiftcall PhoneCallNLIntent.isWhoJustCalled()()
{
  uint64_t v1 = __chkstk_darwin();
  uint64_t v3 = OUTLINED_FUNCTION_111_3(v1, v2);
  if (v3)
  {
    uint64_t v4 = v3;
    OUTLINED_FUNCTION_72_8();
    if (PhoneCallNLIntent.isFind()() && *(void *)(v4 + 16))
    {
      OUTLINED_FUNCTION_124();
      OUTLINED_FUNCTION_25_31();
      __asm { BR              X9 }
    }

    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
    OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }

  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

void sub_11F25C()
{
}

void sub_11F268()
{
}

Swift::Bool __swiftcall PhoneCallNLIntent.isAnyCallToReference()()
{
  Swift::Bool v2 = PhoneCallNLIntent.isAudioCall()();
  OUTLINED_FUNCTION_37_20(v1);
  if (v2)
  {
    Swift::Bool v3 = 1;
  }

  else
  {
    OUTLINED_FUNCTION_68_11();
    Swift::Bool v3 = PhoneCallNLIntent.isVideoCall()();
  }

  OUTLINED_FUNCTION_31_22(v1);
  OUTLINED_FUNCTION_37_20(v0);
  if (v3)
  {
    OUTLINED_FUNCTION_69_11();
    PhoneCallNLIntent.hasAnyContactReference()();
  }

  OUTLINED_FUNCTION_31_22(v0);
  OUTLINED_FUNCTION_273_0();
  OUTLINED_FUNCTION_58();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isBusinessRedirectCall()()
{
  uint64_t v2 = OUTLINED_FUNCTION_111_3(v0, v1);
  if (v2)
  {
    if (*(void *)(v2 + 16))
    {
      OUTLINED_FUNCTION_8_1();
      uint64_t v3 = OUTLINED_FUNCTION_25_31();
      return ((uint64_t (*)(uint64_t))((char *)&loc_11F3FC + 4 * byte_3264D8[v4]))(v3);
    }

    OUTLINED_FUNCTION_34_0();
  }

  OUTLINED_FUNCTION_58();
  return result;
}

void sub_11F4E0()
{
}

INCallRecordTypeOptions_optional __swiftcall PhoneCallNLIntent.getCallRecordTypeOption(attr:)( PhoneCallFlowDelegatePlugin::PhoneCallAttribute attr)
{
  int v1 = attr;
  Swift::Bool v2 = 0;
  INCallRecordTypeOptions v3 = 2LL;
  switch(v1)
  {
    case 0:
      break;
    case 4:
      Swift::Bool v2 = 0;
      INCallRecordTypeOptions v3 = 4LL;
      break;
    case 5:
      Swift::Bool v2 = 0;
      INCallRecordTypeOptions v3 = 1LL;
      break;
    case 6:
      Swift::Bool v2 = 0;
      INCallRecordTypeOptions v3 = 8LL;
      break;
    case 8:
      Swift::Bool v2 = 0;
      INCallRecordTypeOptions v3 = 64LL;
      break;
    case 9:
      Swift::Bool v2 = 0;
      INCallRecordTypeOptions v3 = 32LL;
      break;
    case 10:
      Swift::Bool v2 = 0;
      INCallRecordTypeOptions v3 = 128LL;
      break;
    default:
      INCallRecordTypeOptions v3 = 0LL;
      Swift::Bool v2 = 1;
      break;
  }

  result.value = v3;
  result.is_nil = v2;
  return result;
}

BOOL partial apply for closure #1 in PhoneCallNLIntent.getCallRecordType()(unsigned __int8 *a1)
{
  return PhoneCallNLIntent.getCallRecordType(attr:)(*a1) == 0;
}

uint64_t PhoneCallNLIntent.getCallRecordType(attr:)(unsigned __int8 a1)
{
  if (a1 > 0xAu) {
    return 0LL;
  }
  else {
    return qword_327798[(char)a1];
  }
}

uint64_t specialized Collection.firstIndex(where:)(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  uint64_t v7 = a3 + 32;
  while (1)
  {
    char v10 = *(_BYTE *)(v7 + v6);
    char v8 = a1(&v10);
    if (v3 || (v8 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0LL;
    }
  }

  return v6;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasUnsupportedSearchCallHistoryParameter()()
{
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_74_10();
  __chkstk_darwin();
  OUTLINED_FUNCTION_6_4();
  __chkstk_darwin();
  uint64_t v7 = (char *)v29 - v6;
  __chkstk_darwin();
  OUTLINED_FUNCTION_66_9();
  uint64_t v10 = OUTLINED_FUNCTION_111_3(v8, v9);
  if (v10)
  {
    uint64_t v12 = v10;
    uint64_t v33 = v2;
    uint64_t v34 = v7;
    uint64_t v35 = v0;
    uint64_t v36 = v1;
    char v13 = 0;
    uint64_t v14 = 0LL;
    *(void *)&__int128 v11 = 136315138LL;
    __int128 v32 = v11;
    uint64_t v31 = (char *)&type metadata for Any + 8;
    void v29[3] = "Range";
    do
    {
      uint64_t v15 = v14;
      while (1)
      {
        if (v15 >= 3)
        {
          __break(1u);
          JUMPOUT(0x11F9ECLL);
        }

        uint64_t v16 = *((unsigned __int8 *)&outlined read-only object #0 of PhoneCallNLIntent.hasUnsupportedSearchCallHistoryParameter()
              + v15
              + 32);
        uint64_t v14 = v15 + 1;
        if ((specialized Sequence<>.contains(_:)(v16, v12) & 1) != 0) {
          break;
        }
        ++v15;
        if (v14 == 3) {
          goto LABEL_13;
        }
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v17 = OUTLINED_FUNCTION_15_1();
      char v18 = (os_log_s *)OUTLINED_FUNCTION_12_1(v17, (uint64_t)static Logger.siriPhone);
      int v30 = static os_log_type_t.debug.getter(v18, v19);
      if (os_log_type_enabled(v18, (os_log_type_t)v30))
      {
        v29[1] = v5;
        uint64_t v20 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
        v29[0] = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v37 = v29[0];
        v29[2] = v20;
        _DWORD *v20 = v32;
        OUTLINED_FUNCTION_25_31();
        __asm { BR              X8 }
      }

      char v13 = 1;
    }

    while (v15 != 2);
LABEL_13:
    OUTLINED_FUNCTION_70_2();
    uint64_t v21 = v35;
    OUTLINED_FUNCTION_75_8(v3, v35);
    if ((v13 & 1) != 0)
    {
      Swift::Bool v22 = 1;
    }

    else
    {
      OUTLINED_FUNCTION_140_3();
      Swift::Bool v22 = PhoneCallNLIntent.hasPhoneNumber()();
    }

    uint64_t v23 = v36;
    uint64_t v24 = (uint64_t)v34;
    OUTLINED_FUNCTION_56_11(v3);
    OUTLINED_FUNCTION_75_8(v24, v21);
    if (v22)
    {
      OUTLINED_FUNCTION_56_11(v24);
      OUTLINED_FUNCTION_75_8(v23, v21);
    }

    else
    {
      uint64_t v25 = OUTLINED_FUNCTION_258();
      int v27 = v26(v25);
      OUTLINED_FUNCTION_56_11(v24);
      OUTLINED_FUNCTION_75_8(v23, v21);
      if (v27 == 2)
      {
        OUTLINED_FUNCTION_200_0();
        PhoneCallNLIntent.isSearchCallHistoryWithAppName()();
      }
    }

    OUTLINED_FUNCTION_56_11(v23);
  }

  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isTelephonyTargetFromSrr()()
{
  if (*(void *)(OUTLINED_FUNCTION_51_4(v0, v1) + 16))
  {
    OUTLINED_FUNCTION_47_11();
    OUTLINED_FUNCTION_36_15();
    uint64_t v2 = v5[4];
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    uint64_t v3 = (char *)&loc_11FAB4
       + 4 * byte_3264F1[OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))];
    __asm { BR              X9 }
  }

  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_33_1();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasOnlyCallVerb()()
{
  uint64_t v3 = *(void (**)(void))(v2 + 104);
  v3();
  OUTLINED_FUNCTION_22_25();
  if (v6)
  {
    char v5 = 0;
  }

  else
  {
    char v5 = 99;
    uint64_t v7 = OUTLINED_FUNCTION_97_5(v4);
    if (v6) {
      BOOL v9 = v8 == 0xE400000000000000LL;
    }
    else {
      BOOL v9 = 0;
    }
    if (v9)
    {
      OUTLINED_FUNCTION_58_10();
      char v5 = 1;
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v7, v8, 1819042147LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_117_2();
    }
  }

  OUTLINED_FUNCTION_30_20(v1);
  if ((v5 & 1) == 0)
  {
    uint64_t v10 = OUTLINED_FUNCTION_72_8();
    ((void (*)(uint64_t))v3)(v10);
    OUTLINED_FUNCTION_22_25();
    if (v6)
    {
      char v12 = 0;
      goto LABEL_21;
    }

    char v12 = 102;
    uint64_t v14 = OUTLINED_FUNCTION_97_5(v11);
    if (v13) {
      BOOL v16 = v15 == 0xE800000000000000LL;
    }
    else {
      BOOL v16 = 0;
    }
    if (!v16)
    {
      OUTLINED_FUNCTION_49_2(v14, v15, 0x656D697465636166LL, 0xE800000000000000LL);
      OUTLINED_FUNCTION_117_2();
      goto LABEL_21;
    }

    OUTLINED_FUNCTION_210();
  }

  char v12 = 1;
LABEL_21:
  OUTLINED_FUNCTION_31_22(v1);
  OUTLINED_FUNCTION_30_20(v0);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_69_11();
    PhoneCallNLIntent.hasNoContactOrReference()();
  }

  OUTLINED_FUNCTION_31_22(v0);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

void @nonobjc INCallGroup.init(groupName:groupId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    NSString v6 = 0LL;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v7 = 0LL;
    goto LABEL_6;
  }

  NSString v6 = String._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_4_1();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v7 = String._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_34_0();
LABEL_6:
  [v4 initWithGroupName:v6 groupId:v7];

  OUTLINED_FUNCTION_16();
}

unint64_t lazy protocol witness table accessor for type PhoneCallAVMode and conformance PhoneCallAVMode()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAVMode and conformance PhoneCallAVMode;
  if (!lazy protocol witness table cache variable for type PhoneCallAVMode and conformance PhoneCallAVMode)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAVMode,  &type metadata for PhoneCallAVMode);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAVMode and conformance PhoneCallAVMode);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallAttribute and conformance PhoneCallAttribute()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute;
  if (!lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAttribute,  &type metadata for PhoneCallAttribute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute;
  if (!lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAttribute,  &type metadata for PhoneCallAttribute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute;
  if (!lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAttribute,  &type metadata for PhoneCallAttribute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute;
  if (!lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAttribute,  &type metadata for PhoneCallAttribute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute;
  if (!lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAttribute,  &type metadata for PhoneCallAttribute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute;
  if (!lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAttribute,  &type metadata for PhoneCallAttribute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAttribute and conformance PhoneCallAttribute);
  }

  return result;
}

  ;
}

  ;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallAttribute()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute;
  if (!lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAudioRoute,  &type metadata for PhoneCallAudioRoute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute;
  if (!lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAudioRoute,  &type metadata for PhoneCallAudioRoute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute;
  if (!lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAudioRoute,  &type metadata for PhoneCallAudioRoute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute;
  if (!lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAudioRoute,  &type metadata for PhoneCallAudioRoute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute;
  if (!lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAudioRoute,  &type metadata for PhoneCallAudioRoute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute;
  if (!lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallAudioRoute,  &type metadata for PhoneCallAudioRoute);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallAudioRoute and conformance PhoneCallAudioRoute);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallAudioRoute()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallCapability and conformance PhoneCallCapability()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability;
  if (!lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallCapability,  &type metadata for PhoneCallCapability);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability;
  if (!lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallCapability,  &type metadata for PhoneCallCapability);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability;
  if (!lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallCapability,  &type metadata for PhoneCallCapability);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability;
  if (!lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallCapability,  &type metadata for PhoneCallCapability);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability;
  if (!lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallCapability,  &type metadata for PhoneCallCapability);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability;
  if (!lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallCapability,  &type metadata for PhoneCallCapability);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallCapability and conformance PhoneCallCapability);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallCapability()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider;
  if (!lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallPreferredProvider,  &type metadata for PhoneCallPreferredProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider;
  if (!lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallPreferredProvider,  &type metadata for PhoneCallPreferredProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider;
  if (!lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallPreferredProvider,  &type metadata for PhoneCallPreferredProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider;
  if (!lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallPreferredProvider,  &type metadata for PhoneCallPreferredProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider;
  if (!lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallPreferredProvider,  &type metadata for PhoneCallPreferredProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider;
  if (!lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallPreferredProvider,  &type metadata for PhoneCallPreferredProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallPreferredProvider and conformance PhoneCallPreferredProvider);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallPreferredProvider()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallConfirmation and conformance PhoneCallConfirmation()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallConfirmation,  &type metadata for PhoneCallConfirmation);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallConfirmation,  &type metadata for PhoneCallConfirmation);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallConfirmation,  &type metadata for PhoneCallConfirmation);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallConfirmation,  &type metadata for PhoneCallConfirmation);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallConfirmation,  &type metadata for PhoneCallConfirmation);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallConfirmation,  &type metadata for PhoneCallConfirmation);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmation and conformance PhoneCallConfirmation);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallConfirmation()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallNoun and conformance PhoneCallNoun()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun;
  if (!lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallNoun, &type metadata for PhoneCallNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun;
  if (!lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallNoun, &type metadata for PhoneCallNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun;
  if (!lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallNoun, &type metadata for PhoneCallNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun;
  if (!lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallNoun, &type metadata for PhoneCallNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun;
  if (!lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallNoun, &type metadata for PhoneCallNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun;
  if (!lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallNoun, &type metadata for PhoneCallNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNoun and conformance PhoneCallNoun);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallNoun()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallReference and conformance PhoneCallReference()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference;
  if (!lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallReference,  &type metadata for PhoneCallReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference;
  if (!lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallReference,  &type metadata for PhoneCallReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference;
  if (!lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallReference,  &type metadata for PhoneCallReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference;
  if (!lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallReference,  &type metadata for PhoneCallReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference;
  if (!lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallReference,  &type metadata for PhoneCallReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference;
  if (!lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallReference,  &type metadata for PhoneCallReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallReference and conformance PhoneCallReference);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallReference()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallContactReference and conformance PhoneCallContactReference()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference;
  if (!lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactReference,  &type metadata for PhoneCallContactReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference;
  if (!lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactReference,  &type metadata for PhoneCallContactReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference;
  if (!lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactReference,  &type metadata for PhoneCallContactReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference;
  if (!lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactReference,  &type metadata for PhoneCallContactReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference;
  if (!lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactReference,  &type metadata for PhoneCallContactReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference;
  if (!lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactReference,  &type metadata for PhoneCallContactReference);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactReference and conformance PhoneCallContactReference);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallContactReference()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallVerb and conformance PhoneCallVerb()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb;
  if (!lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallVerb, &type metadata for PhoneCallVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb;
  if (!lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallVerb, &type metadata for PhoneCallVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb;
  if (!lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallVerb, &type metadata for PhoneCallVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb;
  if (!lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallVerb, &type metadata for PhoneCallVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb;
  if (!lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallVerb, &type metadata for PhoneCallVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb;
  if (!lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallVerb, &type metadata for PhoneCallVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerb and conformance PhoneCallVerb);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallVerb()
{
}

unint64_t lazy protocol witness table accessor for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun()
{
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailNoun,  &type metadata for VoiceMail.VoiceMailNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailNoun,  &type metadata for VoiceMail.VoiceMailNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailNoun,  &type metadata for VoiceMail.VoiceMailNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailNoun,  &type metadata for VoiceMail.VoiceMailNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailNoun,  &type metadata for VoiceMail.VoiceMailNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailNoun,  &type metadata for VoiceMail.VoiceMailNoun);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailNoun and conformance VoiceMail.VoiceMailNoun);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in VoiceMail.VoiceMailNoun()
{
}

unint64_t lazy protocol witness table accessor for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb()
{
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailVerb,  &type metadata for VoiceMail.VoiceMailVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailVerb,  &type metadata for VoiceMail.VoiceMailVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailVerb,  &type metadata for VoiceMail.VoiceMailVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailVerb,  &type metadata for VoiceMail.VoiceMailVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailVerb,  &type metadata for VoiceMail.VoiceMailVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb;
  if (!lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoiceMail.VoiceMailVerb,  &type metadata for VoiceMail.VoiceMailVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoiceMail.VoiceMailVerb and conformance VoiceMail.VoiceMailVerb);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in VoiceMail.VoiceMailVerb()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallDestinationType and conformance PhoneCallDestinationType()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType;
  if (!lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDestinationType,  &type metadata for PhoneCallDestinationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType;
  if (!lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDestinationType,  &type metadata for PhoneCallDestinationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType;
  if (!lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDestinationType,  &type metadata for PhoneCallDestinationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType;
  if (!lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDestinationType,  &type metadata for PhoneCallDestinationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType;
  if (!lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDestinationType,  &type metadata for PhoneCallDestinationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType;
  if (!lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDestinationType,  &type metadata for PhoneCallDestinationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDestinationType and conformance PhoneCallDestinationType);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallDestinationType()
{
}

unint64_t lazy protocol witness table accessor for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3;
  if (!lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactRole.NLv3,  &type metadata for PhoneCallContactRole.NLv3);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3;
  if (!lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactRole.NLv3,  &type metadata for PhoneCallContactRole.NLv3);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3;
  if (!lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactRole.NLv3,  &type metadata for PhoneCallContactRole.NLv3);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3;
  if (!lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactRole.NLv3,  &type metadata for PhoneCallContactRole.NLv3);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3;
  if (!lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactRole.NLv3,  &type metadata for PhoneCallContactRole.NLv3);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3;
  if (!lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactRole.NLv3,  &type metadata for PhoneCallContactRole.NLv3);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactRole.NLv3 and conformance PhoneCallContactRole.NLv3);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhoneCallContactRole.NLv3()
{
}

void lazy protocol witness table accessor for type [PhoneCallAttribute] and conformance [A]( unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for [A], v3), a1);
  }

  OUTLINED_FUNCTION_2();
}

unint64_t lazy protocol witness table accessor for type PhoneCallContactRole and conformance PhoneCallContactRole()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallContactRole and conformance PhoneCallContactRole;
  if (!lazy protocol witness table cache variable for type PhoneCallContactRole and conformance PhoneCallContactRole)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallContactRole,  &type metadata for PhoneCallContactRole);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallContactRole and conformance PhoneCallContactRole);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallAttribute(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF2) {
    return ((uint64_t (*)(void))((char *)&loc_120A28 + 4 * byte_3264FE[v4]))();
  }
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_120A5C + 4 * byte_3264F9[v4]))();
}

uint64_t sub_120A5C(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_120A64(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x120A6CLL);
  }
  return result;
}

uint64_t sub_120A78(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x120A80LL);
  }
  *(_BYTE *)unint64_t result = a2 + 13;
  return result;
}

uint64_t sub_120A84(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_120A8C(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallReference(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 34 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 34) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xDE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xDD) {
    return ((uint64_t (*)(void))((char *)&loc_120AE4 + 4 * byte_32651C[v4]))();
  }
  *a1 = a2 + 34;
  return ((uint64_t (*)(void))((char *)sub_120B18 + 4 * byte_326517[v4]))();
}

uint64_t sub_120B18(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_120B20(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x120B28LL);
  }
  return result;
}

uint64_t sub_120B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x120B3CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 34;
  return result;
}

uint64_t sub_120B40(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_120B48(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for PhoneCallContactReference(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xDB)
  {
    if (a2 + 37 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 37) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 38;
    return (v5 + 1);
  }

void type metadata accessor for PhoneCallContactReference()
{
}

void type metadata accessor for VoiceMail()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallAVMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_120C40 + 4 * byte_32653A[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_254_0 + 4 * byte_326535[v4]))();
}

uint64_t sub_120C78(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x120C80LL);
  }
  return result;
}

_BYTE *sub_120C88(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x120C90LL);
  }
  return OUTLINED_FUNCTION_253((_BYTE *)a1, a2 + 1);
}

void type metadata accessor for PhoneCallContactRole()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallPreferredProvider( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_120CF8 + 4 * byte_326558[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_254_1 + 4 * byte_326553[v4]))();
}

uint64_t sub_120D30(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x120D38LL);
  }
  return result;
}

_BYTE *sub_120D40(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x120D48LL);
  }
  return OUTLINED_FUNCTION_253((_BYTE *)a1, a2 + 2);
}

void type metadata accessor for PhoneCallContactRole.NLv3()
{
}

uint64_t OUTLINED_FUNCTION_11_41()
{
  return 0x6563696F5677656ELL;
}

uint64_t OUTLINED_FUNCTION_12_46()
{
  return 0x64657661736E75LL;
}

uint64_t OUTLINED_FUNCTION_13_43()
{
  return 0x676E69676E6972LL;
}

uint64_t OUTLINED_FUNCTION_14_32()
{
  return 0x7373656E69737562LL;
}

uint64_t OUTLINED_FUNCTION_15_35()
{
  return 0x6465766965636572LL;
}

uint64_t OUTLINED_FUNCTION_18_33()
{
  return 0x746E6572727563LL;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_23_25()
{
  return 0x646C6F486E6FLL;
}

uint64_t OUTLINED_FUNCTION_30_20(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_31_22(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_33_28@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void OUTLINED_FUNCTION_36_15()
{
}

uint64_t OUTLINED_FUNCTION_37_20(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_38_18(uint64_t a1)
{
  return v2(a1, v3, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_43_10(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_45_15(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_47_11()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_49_14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t OUTLINED_FUNCTION_50_17()
{
  return 0x615265746164LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_53_13()
{
  return 0x696F6774756FLL;
}

uint64_t OUTLINED_FUNCTION_54_10()
{
  return 0x676E696F6774756FLL;
}

uint64_t OUTLINED_FUNCTION_55_9()
{
  return 0x7072656B61657073LL;
}

uint64_t OUTLINED_FUNCTION_56_11(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_58_10()
{
  return swift_bridgeObjectRelease(0xE400000000000000LL);
}

uint64_t OUTLINED_FUNCTION_60_14(void *a1)
{
  return SiriPhoneContact.getEmergencyType()(v1, v2);
}

void OUTLINED_FUNCTION_61_9()
{
}

uint64_t OUTLINED_FUNCTION_67_12()
{
  return 7824750LL;
}

uint64_t OUTLINED_FUNCTION_68_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_69_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_7()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_72_11(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_75_8(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_76_9()
{
  return 0x636972656E6547LL;
}

uint64_t OUTLINED_FUNCTION_78_9()
{
  return 0x206D7269666E6F63LL;
}

Swift::Int OUTLINED_FUNCTION_80_6(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  return _findStringSwitchCase(cases:string:)(cases, v3);
}

uint64_t OUTLINED_FUNCTION_81_8()
{
  return 0x676E615265746164LL;
}

uint64_t OUTLINED_FUNCTION_82_8()
{
  return 0x732079746E657774LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_84_7()
{
  return swift_bridgeObjectRelease(0xEE006F6964756120LL);
}

uint64_t OUTLINED_FUNCTION_85_6()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_86_6()
{
  return 0x7072656B61657073LL;
}

uint64_t OUTLINED_FUNCTION_88_7(uint64_t a1)
{
  *(void *)(v3 - outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 176, v3 - 168, v2, v1 + 12);
}

  ;
}

uint64_t OUTLINED_FUNCTION_90_6()
{
  return 1953718636LL;
}

uint64_t OUTLINED_FUNCTION_91_6()
{
  return 0x4C6F546472696874LL;
}

uint64_t OUTLINED_FUNCTION_92_6()
{
  return 0x6F54646E6F636573LL;
}

uint64_t OUTLINED_FUNCTION_93_3()
{
  return 0x7261506472696854LL;
}

uint64_t OUTLINED_FUNCTION_94_5()
{
  return 0x742079746E657774LL;
}

uint64_t OUTLINED_FUNCTION_97_5(unsigned __int8 a1)
{
  return PhoneCallVerb.rawValue.getter(a1);
}

uint64_t OUTLINED_FUNCTION_98_4()
{
  return 0x206D7269666E6F63LL;
}

uint64_t OUTLINED_FUNCTION_99_4()
{
  return 1953718636LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_102_3(void *a1)
{
  return v1;
}

uint64_t OUTLINED_FUNCTION_103_4(uint64_t a1)
{
  return v3(a1, v2, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_111_3(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t OUTLINED_FUNCTION_113_4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

  ;
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  return 0x54746C7561666564LL;
}

uint64_t OUTLINED_FUNCTION_116_4()
{
  return 0x63207463656A6572LL;
}

uint64_t OUTLINED_FUNCTION_117_2()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  return swift_bridgeObjectRelease(0xE600000000000000LL);
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  return 0x5F6C6172656E6567LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_125_4()
{
  return 0x73756F6976657270LL;
}

uint64_t OUTLINED_FUNCTION_126_2()
{
  return 0x68746E6576656C65LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_129_3(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_131_1(uint64_t a1)
{
  *(void *)(v4 - outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 - 176, v3, v1, v2 + 22);
}

unint64_t OUTLINED_FUNCTION_132_3()
{
  return 0xD000000000000010LL;
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

unint64_t OUTLINED_FUNCTION_138_2()
{
  return 0xD000000000000010LL;
}

uint64_t OUTLINED_FUNCTION_139_2()
{
  return 0x6E6F73726570LL;
}

uint64_t OUTLINED_FUNCTION_140_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_141_3()
{
  return 0x656D697465636166LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_144_2(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_147_0()
{
  return 0x6C65636E6163LL;
}

uint64_t OUTLINED_FUNCTION_148_2()
{
  return 0x656C6464696DLL;
}

uint64_t OUTLINED_FUNCTION_149_3()
{
  return 0x646E6F636573LL;
}

uint64_t OUTLINED_FUNCTION_150_1(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional OUTLINED_FUNCTION_152_2(void *a1)
{
  return SiriPhoneContact.getContactReference()();
}

void OUTLINED_FUNCTION_153_3(void *a1)
{
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, v1);
  PhoneCallNLIntent.applicationId.getter(v1, v2, (uint64_t)v3);
}

void OUTLINED_FUNCTION_154_2(void *a1)
{
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, v1);
  PhoneCallNLIntent.appName.getter(v1, v2, (uint64_t)v3);
}

uint64_t OUTLINED_FUNCTION_155_1@<X0>(uint64_t a1@<X8>)
{
  if (v1 == 1) {
    return a1 + 1;
  }
  else {
    return a1;
  }
}

void OUTLINED_FUNCTION_156_1(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_169_1(unsigned int a1)
{
  return a1 | 0x6E65657400000000LL;
}

uint64_t OUTLINED_FUNCTION_170_1()
{
  return 0x68746E696ELL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_172_1()
{
  return 0x6361746E6F63LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_174_1()
{
  return 2037277037LL;
}

uint64_t OUTLINED_FUNCTION_175_2()
{
  return 1954047342LL;
}

void *OUTLINED_FUNCTION_177_1(uint64_t a1, ...)
{
  return __swift_project_boxed_opaque_existential_1(va, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_181_1()
{
  return 0x6472696874LL;
}

BOOL OUTLINED_FUNCTION_182_0()
{
  return PhoneCallNLIntent.isFind()();
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_191()
{
  return 0x317473726966LL;
}

uint64_t OUTLINED_FUNCTION_192_0()
{
  return v0(v1);
}

uint64_t OUTLINED_FUNCTION_194_0()
{
  if (v0 < 0) {
    return _CocoaArrayWrapper.endIndex.getter(v0);
  }
  else {
    return _CocoaArrayWrapper.endIndex.getter(v0 & 0xFFFFFFFFFFFFFF8LL);
  }
}

void OUTLINED_FUNCTION_199_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t OUTLINED_FUNCTION_200_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_202_0()
{
  return 1819042147LL;
}

  ;
}

  ;
}

unint64_t OUTLINED_FUNCTION_206_0()
{
  return 0xD000000000000015LL;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_214()
{
  return 0x656D697465636166LL;
}

uint64_t OUTLINED_FUNCTION_215()
{
  return 0x6C6169646572LL;
}

uint64_t OUTLINED_FUNCTION_216_0()
{
  return 0x656C62616E65LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_218()
{
  return 0x6C6261736964LL;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_224()
{
  return 0x6E69737542727273LL;
}

uint64_t OUTLINED_FUNCTION_225_0()
{
  return swift_bridgeObjectRelease(0xE300000000000000LL);
}

  ;
}

  ;
}

void *OUTLINED_FUNCTION_228_0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr))(a2 + 16))((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_229(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1 & 0xFFFFFFFFFFFFLL | 0xE900000000000000LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_231()
{
  return dispatch thunk of RawRepresentable.rawValue.getter(v1, v0);
}

unint64_t OUTLINED_FUNCTION_232()
{
  return 0xEA00000000006874LL;
}

uint64_t OUTLINED_FUNCTION_233_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)(a1, a2, v4, a4);
}

uint64_t OUTLINED_FUNCTION_234()
{
  return static os_log_type_t.debug.getter();
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_238()
{
  return 0x63207463656A6572LL;
}

uint64_t OUTLINED_FUNCTION_239()
{
  return 28526LL;
}

uint64_t OUTLINED_FUNCTION_243(uint64_t a1, unint64_t a2)
{
  return specialized Optional<A>.isNilOrEmpty.getter(a1, a2);
}

unint64_t OUTLINED_FUNCTION_244(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_245()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_246()
{
  return 0xD000000000000015LL;
}

  ;
}

  ;
}

void *OUTLINED_FUNCTION_249()
{
  *(void *)(v2 - outlined init with take of AppSelectionSignalComponent(v2, v1 + 136) = v0;
  *(void *)(v2 - outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v1;
  return __swift_allocate_boxed_opaque_existential_1((void *)(v2 - 160));
}

uint64_t OUTLINED_FUNCTION_251(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_254(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_256_0@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_257_0(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_258()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_262()
{
}

uint64_t OUTLINED_FUNCTION_263()
{
  return 0x656D695465636146LL;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_267(unsigned __int8 a1)
{
  return PhoneCallVerb.rawValue.getter(a1);
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_272()
{
  return 0x6573756170LL;
}

uint64_t OUTLINED_FUNCTION_273_0()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_274_0()
{
  return 0x746165706572LL;
}

uint64_t OUTLINED_FUNCTION_275()
{
  return 0x656D75736572LL;
}

uint64_t OUTLINED_FUNCTION_276_0()
{
  return 0x6574656C6564LL;
}

  ;
}

uint64_t PhoneCallMetrics.Builder.timeToEstablish.getter()
{
  return *(void *)(v0 + 16);
}

void PhoneCallMetrics.Builder.timeToEstablish.setter(uint64_t a1, char a2)
{
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  OUTLINED_FUNCTION_26_1();
}

uint64_t PhoneCallMetrics.Builder.duration.getter()
{
  return *(void *)(v0 + 32);
}

void PhoneCallMetrics.Builder.duration.setter(uint64_t a1, char a2)
{
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallMetrics.Builder.duration.modify(uint64_t a1)
{
}

uint64_t PhoneCallMetrics.Builder.__allocating_init()()
{
  uint64_t result = OUTLINED_FUNCTION_8_2(v0, 41LL);
  *(void *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
  *(_BYTE *)(result + 24) = 1;
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(_BYTE *)(result + 40) = 1;
  return result;
}

uint64_t PhoneCallMetrics.Builder.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
  *(_BYTE *)(v0 + 24) = 1;
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(_BYTE *)(v0 + 40) = 1;
  return result;
}

uint64_t PhoneCallMetrics.Builder.withTimeToEstablish(_:)(uint64_t a1, char a2)
{
  return swift_retain(v2);
}

uint64_t PhoneCallMetrics.Builder.withDuration(_:)(uint64_t a1, char a2)
{
  return swift_retain(v2);
}

void PhoneCallMetrics.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhoneCallMetrics();
  OUTLINED_FUNCTION_8_2(v0, 49LL);
  uint64_t v1 = swift_retain();
  PhoneCallMetrics.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

void PhoneCallMetrics.__allocating_init(builder:)(uint64_t a1)
{
}

uint64_t type metadata accessor for PhoneCallMetrics()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin16PhoneCallMetrics);
}

uint64_t PhoneCallMetrics.Builder.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 41LL, 7LL);
}

unint64_t static PhoneCallMetrics.catTypeName.getter()
{
  return 0xD000000000000011LL;
}

uint64_t key path setter for PhoneCallMetrics.mockGlobals : PhoneCallMetrics(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 128LL);
  id v4 = *a1;
  return v3(v2);
}

void PhoneCallMetrics.mockGlobals.setter(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
}

uint64_t PhoneCallMetrics.timeToEstablish.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t PhoneCallMetrics.duration.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t PhoneCallMetrics.init(builder:)(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
  *(void *)(v2 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96LL))(a1);
  *(_BYTE *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4 & 1;
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)a1 + 120LL))();
  char v7 = v6;
  swift_release(a1);
  *(void *)(v2 + 40) = v5;
  *(_BYTE *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7 & 1;
  return v2;
}

uint64_t PhoneCallMetrics.__allocating_init(timeToEstablish:duration:)( uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v9 = type metadata accessor for PhoneCallMetrics.Builder();
  uint64_t v10 = OUTLINED_FUNCTION_8_2(v9, 41LL);
  *(void *)(v10 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
  *(_BYTE *)(v10 + 24) = 1;
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(_BYTE *)(v10 + 40) = 1;
  OUTLINED_FUNCTION_25_0(v10 + 16, (uint64_t)v13, 1LL);
  *(void *)(v10 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(_BYTE *)(v10 + 24) = a2 & 1;
  OUTLINED_FUNCTION_25_0(v10 + 32, (uint64_t)&v12, 1LL);
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(_BYTE *)(v10 + 40) = a4 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 144))(v10);
}

uint64_t type metadata accessor for PhoneCallMetrics.Builder()
{
  return objc_opt_self(&OBJC_CLASS____TtCC27PhoneCallFlowDelegatePlugin16PhoneCallMetrics7Builder);
}

uint64_t PhoneCallMetrics.getProperty(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (result != 0x73456F54656D6974LL || a2 != 0xEF6873696C626174LL)
  {
    uint64_t v7 = result;
    uint64_t result = OUTLINED_FUNCTION_1_3(0x73456F54656D6974LL, 0xEF6873696C626174LL);
    if ((result & 1) == 0)
    {
      BOOL v9 = v7 == 0x6E6F697461727564LL && a2 == 0xE800000000000000LL;
      if (v9 || (uint64_t result = OUTLINED_FUNCTION_1_3(0x6E6F697461727564LL, 0xE800000000000000LL), (result & 1) != 0))
      {
        if ((*(_BYTE *)(v3 + 48) & 1) == 0)
        {
          uint64_t v8 = *(void *)(v3 + 40);
          goto LABEL_16;
        }
      }

PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional __swiftcall PhoneCallMetrics.CodingKeys.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallMetrics.CodingKeys.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallMetrics_CodingKeys_duration;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallMetrics_CodingKeys_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t PhoneCallMetrics.CodingKeys.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6E6F697461727564LL;
  }
  else {
    return 0x73456F54656D6974LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallMetrics.CodingKeys( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallMetrics.CodingKeys()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallMetrics.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallMetrics.CodingKeys( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallMetrics.CodingKeys@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallMetrics.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallMetrics.CodingKeys( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallMetrics.CodingKeys.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneCallMetrics.CodingKeys()
{
  return PhoneCallMetrics.CodingKeys.rawValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneCallMetrics.CodingKeys@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallMetrics.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneCallMetrics.CodingKeys( _BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallMetrics.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneCallMetrics.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TrialSmartAppSelectionConfigProvider.deinit()
{
  return v0;
}

uint64_t PhoneCallMetrics.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 49LL, 7LL);
}

uint64_t PhoneCallMetrics.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneCallMetrics.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  unint64_t v11 = lazy protocol witness table accessor for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for PhoneCallMetrics.CodingKeys,  &type metadata for PhoneCallMetrics.CodingKeys,  v11,  v9,  v10);
  uint64_t v12 = *(void *)(v3 + 24);
  uint64_t v13 = *(unsigned __int8 *)(v3 + 32);
  char v19 = 0;
  OUTLINED_FUNCTION_3_55(v12, v13, (uint64_t)&v19);
  if (!v2)
  {
    uint64_t v14 = *(void *)(v3 + 40);
    uint64_t v15 = *(unsigned __int8 *)(v3 + 48);
    char v18 = 1;
    OUTLINED_FUNCTION_3_55(v14, v15, (uint64_t)&v18);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallMetrics.CodingKeys,  &type metadata for PhoneCallMetrics.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallMetrics.CodingKeys,  &type metadata for PhoneCallMetrics.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallMetrics.CodingKeys,  &type metadata for PhoneCallMetrics.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallMetrics.CodingKeys,  &type metadata for PhoneCallMetrics.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys);
  }

  return result;
}

uint64_t PhoneCallMetrics.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, 49LL, 7LL);
  PhoneCallMetrics.init(from:)(a1);
  return v3;
}

uint64_t PhoneCallMetrics.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneCallMetrics.CodingKeys>);
  __chkstk_darwin();
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  unint64_t v7 = lazy protocol witness table accessor for type PhoneCallMetrics.CodingKeys and conformance PhoneCallMetrics.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for PhoneCallMetrics.CodingKeys,  &type metadata for PhoneCallMetrics.CodingKeys,  v7,  v5,  v6);
  if (v2)
  {

    uint64_t v9 = type metadata accessor for PhoneCallMetrics();
    swift_deallocPartialClassInstance(v1, v9, 49LL, 7LL);
  }

  else
  {
    char v15 = 0;
    *(void *)(v1 + 24) = OUTLINED_FUNCTION_6_46((uint64_t)&v15);
    *(_BYTE *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8 & 1;
    char v14 = 1;
    uint64_t v11 = OUTLINED_FUNCTION_6_46((uint64_t)&v14);
    char v13 = v12;
    OUTLINED_FUNCTION_8_4();
    *(void *)(v3 + 40) = v11;
    *(_BYTE *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v13 & 1;
  }

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

void base witness table accessor for Decodable in PhoneCallMetrics()
{
}

void base witness table accessor for Encodable in PhoneCallMetrics()
{
}

void lazy protocol witness table accessor for type PhoneCallMetrics and conformance PhoneCallMetrics( unint64_t *a1, uint64_t a2)
{
  if (!*a1)
  {
    uint64_t v4 = type metadata accessor for PhoneCallMetrics();
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }

  OUTLINED_FUNCTION_2();
}

void (*protocol witness for CATType.mockGlobals.modify in conformance PhoneCallMetrics( void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 136LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneCallMetrics@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneCallMetrics()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168LL))();
}

void sub_122F6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = (*(uint64_t (**)(void))(**(void **)a1 + 96LL))();
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_122FA0()
{
}

void sub_122FC0()
{
  *(void *)uint64_t v0 = v1();
  *(_BYTE *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_122FE8()
{
}

void sub_123008()
{
  *uint64_t v0 = v1();
  OUTLINED_FUNCTION_2();
}

uint64_t storeEnumTagSinglePayload for PhoneCallMetrics.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_123078 + 4 * byte_3277F5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1230AC + 4 * byte_3277F0[v4]))();
}

uint64_t sub_1230AC(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_1230B4(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x1230BCLL);
  }
  return result;
}

uint64_t sub_1230C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x1230D0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1230D4(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_1230DC(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallMetrics.CodingKeys()
{
  return &type metadata for PhoneCallMetrics.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_3_55(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_6_46(uint64_t a1)
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)(a1, v1);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_10_43@<X0>(uint64_t a1@<X8>)
{
  return v2(a1, v1);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay13SiriInference08ResolvedD10KitContactVG_So8INPersonCs5NeverOTg5035_s27PhoneCallFlowDelegatePlugin0A15h79ResolverC8signpost33_3D9467E65F3897762758A24265D9663FLL10configHash6aroundSay13d21Inference08Resolvedq3g39F0VGAA0fG14ConfigHashableV_AKyKXEtKFSo8I54CAJcfu_32c461fba76c558c5101ea1ecd6accfaeeAjOTf3nnnpk_nTf1cn_n( uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    uint64_t v4 = *(void *)(type metadata accessor for ResolvedSiriKitContact(0LL) - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = ResolvedSiriKitContact.person.getter();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      uint64_t v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v5 += v6;
      --v2;
    }

    while (v2);
    return _swiftEmptyArrayStorage;
  }

  return result;
}

void *specialized Sequence.compactMap<A>(_:)(uint64_t a1)
{
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4LL;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v4 - 3;
      if (__OFADD__(v4 - 4, 1LL)) {
        break;
      }
      id v7 = v5;
      id v8 = [v7 personHandle];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = [v8 faceTimeType];

        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v3 = v12;
        }

        unint64_t v11 = v3[2];
        if (v11 >= v3[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v3 = v13;
        }

        v3[2] = v11 + 1;
        v3[v11 + 4] = v10;
      }

      else
      {
      }

      ++v4;
      if (v6 == v2) {
        goto LABEL_23;
      }
    }

    __break(1u);
LABEL_18:
    if (a1 < 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease();
  return v3;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void v21[2];
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  id v7 = type metadata accessor for SpeakableString(0LL);
  uint64_t v25 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v26 = (uint64_t)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v24 = (uint64_t)v21 - v9;
  id v10 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v10; id v10 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v21[1] = v2;
    unint64_t v11 = a1 & 0xC000000000000001LL;
    char v12 = _swiftEmptyArrayStorage;
    char v13 = 4LL;
    Swift::Bool v22 = a1 & 0xC000000000000001LL;
    uint64_t v23 = a1;
    while (1)
    {
      if (v11)
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a1);
      }

      else
      {
        uint64_t v14 = *(void *)(a1 + 8 * v13);
        swift_retain();
      }

      uint64_t v2 = v13 - 3;
      if (__OFADD__(v13 - 4, 1LL)) {
        break;
      }
      dispatch thunk of DialogPerson.toString.getter();
      swift_release(v14);
      if (__swift_getEnumTagSinglePayload(v6, 1LL, v7) == 1)
      {
        outlined destroy of SpeakableString?(v6, &demangling cache variable for type metadata for SpeakableString?);
      }

      else
      {
        char v15 = v24;
        OUTLINED_FUNCTION_11_1(v24, v6);
        OUTLINED_FUNCTION_11_1(v26, v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
        {
          OUTLINED_FUNCTION_4_95();
          char v12 = v17;
        }

        BOOL v16 = v12[2];
        if (v16 >= v12[3] >> 1)
        {
          OUTLINED_FUNCTION_4_95();
          char v12 = v18;
        }

        v12[2] = v16 + 1;
        OUTLINED_FUNCTION_11_1( (uint64_t)v12 + ((*(unsigned __int8 *)(v25 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))
        + *(void *)(v25 + 72) * v16,
          v26);
        unint64_t v11 = v22;
        a1 = v23;
      }

      ++v13;
      if (v2 == v10)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }

    __break(1u);
LABEL_18:
    if (a1 < 0) {
      char v19 = a1;
    }
    else {
      char v19 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t protocol witness for SiriKitContactResolverProtocol.resolve(queries:config:) in conformance SiriKitContactResolver()
{
  return SiriKitContactResolver.resolve(queries:config:)();
}

void PhoneContactResolver.__allocating_init(configCache:queryCache:resolver:)( uint64_t a1, uint64_t a2, void *a3)
{
}

void PhoneContactResolver.init(configCache:queryCache:resolver:)(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t PhoneContactResolver.resolve(queries:config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v10;
  uint64_t v6 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v9);
  return v7;
}

uint64_t closure #1 in PhoneContactResolver.resolveContacts(queries:configHash:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v10;
  uint64_t v6 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a3, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v9);
  return v7;
}

uint64_t PhoneContactResolver.signpost(configHash:around:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = mach_continuous_time();
  __int128 v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  uint64_t v8 = specialized static Signpost.wrap<A>(_:around:)( "ResolveCRR",  10LL,  258,  (void *(*)(uint64_t *__return_ptr))partial apply for closure #1 in PhoneContactResolver.signpost(configHash:around:),  (uint64_t)v11);
  if (!v3 && (ContactResolverConfigHashable.isFaceTime.getter() & 1) != 0)
  {
    uint64_t v9 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay13SiriInference08ResolvedD10KitContactVG_So8INPersonCs5NeverOTg5035_s27PhoneCallFlowDelegatePlugin0A15h79ResolverC8signpost33_3D9467E65F3897762758A24265D9663FLL10configHash6aroundSay13d21Inference08Resolvedq3g39F0VGAA0fG14ConfigHashableV_AKyKXEtKFSo8I54CAJcfu_32c461fba76c558c5101ea1ecd6accfaeeAjOTf3nnnpk_nTf1cn_n(v8);
    PhoneContactResolver.emitFaceTimeEvents(beginTimestamp:persons:)(v7, (uint64_t)v9);
    OUTLINED_FUNCTION_62();
  }

  return v8;
}

uint64_t closure #1 in PhoneContactResolver.signpost(configHash:around:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  static SiriKitEventSender.current.getter(v8, a1);
  uint64_t v6 = specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)( 300,  v4,  v5,  (uint64_t)v8,  (void (*)(uint64_t *__return_ptr))partial apply for closure #1 in closure #1 in PhoneContactResolver.signpost(configHash:around:));
  if (!v2) {
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1(v8);
}

uint64_t specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)( int a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr))
{
  uint64_t v10 = type metadata accessor for PhoneSelfPerformanceLogger();
  swift_initStackObject(v10, v23);
  swift_bridgeObjectRetain();
  uint64_t v11 = PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)(v24, a1, a2, a3);
  a5(&v22);
  if (v5)
  {
    uint64_t v12 = v11;
    PhoneSelfPerformanceLogger.createAndLogFailureEvent()();
    swift_willThrow(v13, v14, v15, v16, v17, v18, v19, v20, v22, v23[0], v23[1], v23[2], v23[3], v23[4]);
  }

  else
  {
    uint64_t v12 = v22;
  }

  swift_release(v11);
  return v12;
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[96];
  void v15[5];
  outlined init with copy of SharedGlobalsProviding(a4, (uint64_t)v15);
  uint64_t v9 = type metadata accessor for PhoneSelfPerformanceLogger();
  swift_initStackObject(v9, v14);
  swift_bridgeObjectRetain();
  uint64_t v10 = PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)(v15, a1, a2, a3);
  a5(&v13);
  uint64_t v11 = v13;
  swift_release(v10);
  return v11;
}

uint64_t specialized static Signpost.wrap<A>(_:around:)( const char *a1, uint64_t a2, __int16 a3, void *(*a4)(uint64_t *__return_ptr), uint64_t a5)
{
  void *(*v31)(uint64_t *__return_ptr);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v32 = a5;
  uint64_t v31 = a4;
  uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for OSSignposter(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = __swift_project_value_buffer(v11, (uint64_t)static OSSignposter.siriPhone);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v17 = OSSignposter.logHandle.getter(v16);
  uint64_t result = OSSignpostID.init(log:)(v17);
  uint64_t v29 = v8;
  uint64_t v30 = v7;
  uint64_t v28 = v12;
  if ((a3 & 1) != 0)
  {
LABEL_6:
    if ((unint64_t)a1 >> 32)
    {
      __break(1u);
    }

    else
    {
      if (a1 >> 11 == 27)
      {
LABEL_21:
        __break(1u);
        return result;
      }

      if (a1 >> 16 <= 0x10)
      {
        a1 = &v36;
        goto LABEL_10;
      }
    }

    __break(1u);
    goto LABEL_21;
  }

  if (!a1)
  {
    __break(1u);
    goto LABEL_6;
  }

void PhoneContactResolver.emitFaceTimeEvents(beginTimestamp:persons:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    if (v3 != 1) {
      return;
    }
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (a2 & 0xC000000000000001LL) == 0, a2);
    id v4 = (a2 & 0xC000000000000001LL) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a2)
       : *(id *)(a2 + 32);
    outlined bridged method (ob) of @objc INPerson.siriMatches.getter(v4);
    if (!v5) {
      return;
    }
    a2 = v5;
    uint64_t v6 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_6_3();
    if (!v6) {
      goto LABEL_24;
    }
LABEL_9:
    uint64_t v7 = 4LL;
    while (1)
    {
      id v8 = (a2 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a2)
         : *(id *)(a2 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      id v11 = OUTLINED_FUNCTION_13_44();
      if (!v11) {
        goto LABEL_22;
      }
      outlined bridged method (ob) of @objc INPersonHandle.value.getter(v11);
      if (!v13) {
        goto LABEL_22;
      }
      uint64_t v14 = v12;
      unint64_t v15 = v13;
      swift_bridgeObjectRelease();
      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000LL) == 0) {
        uint64_t v16 = v14 & 0xFFFFFFFFFFFFLL;
      }
      if (v16 && (id v17 = OUTLINED_FUNCTION_13_44()) != 0LL)
      {
        uint64_t v18 = v17;
        id v19 = [v17 faceTimeType];

        if (!v19)
        {
          char v27 = 1;
          goto LABEL_25;
        }
      }

      else
      {
LABEL_22:
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_24;
      }
    }

LABEL_45:
    __break(1u);
LABEL_46:
    if (a2 < 0) {
      uint64_t v28 = a2;
    }
    else {
      uint64_t v28 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_3();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v28);
    OUTLINED_FUNCTION_62();
  }

  if (v5 >= 0) {
    uint64_t v29 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v29 = v5;
  }
  OUTLINED_FUNCTION_6_3();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (v6) {
    goto LABEL_9;
  }
LABEL_24:
  char v27 = 0;
LABEL_25:
  OUTLINED_FUNCTION_62();
  uint64_t v20 = specialized Sequence.compactMap<A>(_:)(a2);
  OUTLINED_FUNCTION_62();
  uint64_t v21 = v20[2];
  if (!v21) {
    goto LABEL_41;
  }
  uint64_t v22 = 0LL;
  a2 = 0LL;
  while (2)
  {
    uint64_t v23 = v22 + 1;
    if (__OFADD__(v22, 1LL))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }

    while (2)
    {
      uint64_t v24 = v20[v22 + 4];
      uint64_t v22 = v23;
      if (v24 < -64 || v24 > 64) {
        goto LABEL_30;
      }
      if (v24 < 0)
      {
        if ((unint64_t)v24 > 0xFFFFFFFFFFFFFFC0LL)
        {
          uint64_t v26 = 0LL;
          goto LABEL_40;
        }

        goto LABEL_30;
      }

      if ((unint64_t)v24 >= 0x40)
      {
LABEL_30:
        if (v23 == v21) {
          goto LABEL_41;
        }
        if (__OFADD__(v23++, 1LL)) {
          goto LABEL_44;
        }
        continue;
      }

      break;
    }

    uint64_t v26 = 1LL << v24;
LABEL_40:
    a2 |= v26;
    if (v23 != v21) {
      continue;
    }
    break;
  }

      OUTLINED_FUNCTION_50();
      return;
    }

  uint64_t v78 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a2 + 160))( v89,  v37,  a2);
  *uint64_t v79 = !*v79;
  v78(v89, 0LL);
  swift_unknownObjectRetain(a1);
  uint64_t v80 = (os_log_s *)OUTLINED_FUNCTION_62_18();
  uint64_t v82 = static os_log_type_t.debug.getter(v80, v81);
  if (os_log_type_enabled(v80, v82))
  {
    uint64_t v83 = (_DWORD *)OUTLINED_FUNCTION_7_0(8LL);
    *uint64_t v83 = 67109120;
    v87(v37, a2);
    OUTLINED_FUNCTION_3_127();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v84, v85, v86);
    OUTLINED_FUNCTION_8_93();
    OUTLINED_FUNCTION_4_110(&dword_0, v80, v82, "#CameraControlFlow camera is enabled: %{BOOL}d");
    OUTLINED_FUNCTION_0_2((uint64_t)v83);
  }

  else
  {

    OUTLINED_FUNCTION_8_93();
  }

uint64_t PhoneContactResolver.deinit()
{
  return v0;
}

uint64_t PhoneContactResolver.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t protocol witness for SiriKitContactResolverProtocol.resolve(queries:config:) in conformance PhoneContactResolver()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184LL))();
}

void specialized closure #1 in OSSignposter.withIntervalSignpost<A>(_:id:_:around:)( uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, void *(*a7)(uint64_t *__return_ptr))
{
  id v11 = (os_log_s *)OSSignposter.logHandle.getter();
  os_signpost_type_t v12 = static os_signpost_type_t.begin.getter();
  os_signpost_id_t v13 = OSSignpostID.rawValue.getter();
  buf = a1;
  _os_signpost_emit_with_name_impl(&dword_0, v11, v12, v13, a5, a6, a1, a2);
  uint64_t v14 = a7(&v20);
  if (!v19)
  {
    os_signpost_type_t v15 = static os_signpost_type_t.end.getter(v14);
    os_signpost_id_t v16 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v11, v15, v16, a5, a6, buf, a2);
  }
}

uint64_t specialized PhoneContactResolver.init(configCache:queryCache:resolver:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  id v11 = __swift_allocate_boxed_opaque_existential_1(&v13);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32LL))(v11, a3, a5);
  *(void *)(a4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(a4 + 24) = a2;
  outlined init with take of AppSelectionSignalComponent(&v13, a4 + 32);
  return a4;
}

uint64_t partial apply for closure #1 in PhoneContactResolver.resolveContacts(queries:configHash:)()
{
  return closure #1 in PhoneContactResolver.resolveContacts(queries:configHash:)(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for PhoneContactResolver()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin20PhoneContactResolver);
}

uint64_t partial apply for closure #1 in PhoneContactResolver.signpost(configHash:around:)@<X0>( uint64_t *a1@<X8>)
{
  return closure #1 in PhoneContactResolver.signpost(configHash:around:)(*(void *)(v1 + 16), a1);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneContactResolver.signpost(configHash:around:)@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_56()
{
  return specialized PhoneContactResolver.init(configCache:queryCache:resolver:)(v2, v1, v5, v0, v3, v4);
}

uint64_t OUTLINED_FUNCTION_8_42(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t OUTLINED_FUNCTION_9_46()
{
  return swift_bridgeObjectRetain_n(v0, 2LL);
}

id OUTLINED_FUNCTION_13_44()
{
  return [v0 *(SEL *)(v1 + 1424)];
}

uint64_t OUTLINED_FUNCTION_17_34()
{
  return type metadata accessor for ContactQuery(0LL);
}

uint64_t OUTLINED_FUNCTION_19_25()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_20_26(uint64_t a1)
{
  return Array.description.getter(a1, v1);
}

void (*static DICodableOverride.undoEncoding<A>(name:type:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(uint64_t *a1)
{
  os_signpost_type_t v12 = (void *)swift_allocObject(&unk_3FFF20, 64LL, 7LL);
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a3;
  swift_bridgeObjectRetain();
  return partial apply for closure #1 in static DICodableOverride.undoEncoding<A>(name:type:);
}

void closure #1 in static DICodableOverride.undoEncoding<A>(name:type:)( uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    goto LABEL_9;
  }

  swift_bridgeObjectRetain();
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v13 & 1) == 0)
  {
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }

  outlined init with copy of Any(*(void *)(v6 + 56) + 32 * v12, (uint64_t)&v44);
  swift_bridgeObjectRelease();
  if (!*((void *)&v45 + 1))
  {
LABEL_9:
    outlined destroy of Any?((uint64_t)&v44);
    return;
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
  if ((swift_dynamicCast(&v43, &v44, (char *)&type metadata for Any + 8) & 1) != 0)
  {
    uint64_t v14 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&__int128 v44 = 0LL;
    id v16 = [v14 dataWithPropertyList:isa format:200 options:0 error:&v44];

    id v17 = (id)v44;
    if (v16)
    {
      uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
      unint64_t v20 = v19;

      uint64_t v21 = type metadata accessor for PropertyListDecoder(0LL);
      swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      uint64_t v22 = PropertyListDecoder.init()();
      *((void *)&v45 + Hasher._combine(_:)(v1 & 1) = a5;
      uint64_t v23 = __swift_allocate_boxed_opaque_existential_1(&v44);
      dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v23, a5, v18, v20, a5, a6);
      swift_release(v22);
      swift_bridgeObjectRetain();
      specialized Dictionary.subscript.setter((uint64_t)&v44, a2, a3);
      outlined consume of Data._Representation(v18, v20);
    }

    else
    {
      uint64_t v24 = v17;
      uint64_t v25 = _convertNSErrorToError(_:)(v17);

      swift_willThrow(v26, v27, v28, v29, v30, v31, v32, v33);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v34 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
      uint64_t v35 = swift_bridgeObjectRetain_n(a3, 2LL);
      uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
      os_log_type_t v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc(22LL, -1LL);
        uint64_t v39 = swift_slowAlloc(64LL, -1LL);
        *(void *)&__int128 v44 = v39;
        *(_DWORD *)uint64_t v38 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, (uint64_t *)&v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v38 + 4);
        swift_bridgeObjectRelease_n(a3, 3LL);
        *(_WORD *)(v38 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v43 = a4;
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata(a5);
        uint64_t v41 = String.init<A>(describing:)(&v43, MetatypeMetadata);
        uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, (uint64_t *)&v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v38 + 14);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v36, v37, "Could not undo encoding for property %s of type %s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy(v39, 2LL);
        swift_slowDealloc(v39, -1LL, -1LL);
        swift_slowDealloc(v38, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      swift_errorRelease(v25);
    }
  }

uint64_t sub_1244D0()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

void partial apply for closure #1 in static DICodableOverride.undoEncoding<A>(name:type:)(uint64_t *a1)
{
}

uint64_t (*static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))(uint64_t a1)
{
  uint64_t v35 = a2;
  uint64_t v36 = a7;
  uint64_t v30 = a6;
  uint64_t v31 = a1;
  uint64_t v33 = a3;
  uint64_t v34 = a5;
  uint64_t v29 = a4;
  uint64_t v11 = type metadata accessor for Transformer(0LL, a4, a5);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v16 = (char *)&v27 - v15;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v32((char *)&v27 - v15, a3, v11);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = (v17 + 64) & ~v17;
  uint64_t v19 = v18 + v13;
  uint64_t v28 = v17 | 7;
  unint64_t v20 = (char *)swift_allocObject(&unk_3FFF48, v19, v17 | 7);
  *((void *)v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  uint64_t v21 = v34;
  *((void *)v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v34;
  *((void *)v20 + 4) = a6;
  uint64_t v22 = v36;
  *((void *)v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v36;
  *((void *)v20 + 6) = a1;
  uint64_t v23 = v35;
  *((void *)v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = v35;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24(&v20[v18], v16, v11);
  v32(v14, v33, v11);
  uint64_t v25 = (char *)swift_allocObject(&unk_3FFF70, v19, v28);
  *((void *)v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
  *((void *)v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v21;
  *((void *)v25 + 4) = v30;
  *((void *)v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v22;
  *((void *)v25 + 6) = v31;
  *((void *)v25 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = v23;
  v24(&v25[v18], v14, v11);
  swift_bridgeObjectRetain_n(v23, 2LL);
  return partial apply for closure #1 in static DICodableOverride.transform<A, B>(name:transformer:);
}

void closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v42 = *(void *)(a6 - 8);
  uint64_t v43 = a4;
  __chkstk_darwin();
  __int128 v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Optional(0LL, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  id v16 = (char *)&v39 - v15;
  uint64_t v17 = *(void *)(a5 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = a1;
  uint64_t v20 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v40 = a2;
  specialized Dictionary.subscript.getter(a2, a3, v20, &v46);
  swift_bridgeObjectRelease();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  if ((swift_dynamicCast(v16, &v46, v21) & 1) != 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0LL, 1LL, a5);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a5);
    uint64_t v22 = type metadata accessor for Transformer(0LL, a5, a6);
    uint64_t v23 = (void (*)(char *))Transformer.transform.getter(v22);
    uint64_t v25 = v24;
    uint64_t v26 = v44;
    v23(v19);
    swift_release(v25);
    uint64_t v47 = a6;
    os_log_type_t v37 = __swift_allocate_boxed_opaque_existential_1(&v46);
    uint64_t v38 = v42;
    (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v37, v26, a6);
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v46, v40, a3);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v26, a6);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a5);
  }

  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1LL, 1LL, a5);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
    if (os_log_type_enabled(v29, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v33 = swift_slowAlloc(32LL, -1LL);
      uint64_t v45 = a5;
      *(void *)&__int128 v46 = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata(a5);
      uint64_t v35 = String.init<A>(describing:)(&v45, MetatypeMetadata);
      uint64_t v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, (uint64_t *)&v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v32 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v29, v31, "No entry in userData of type %s to override", v32, 0xCu);
      swift_arrayDestroy(v33, 1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
    }
  }

uint64_t partial apply for closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t a1)
{
  return partial apply for closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)( a1,  (uint64_t (*)(uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))closure #1 in static DICodableOverride.transform<A, B>(name:transformer:));
}

void closure #2 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v43 = a4;
  __chkstk_darwin();
  __int128 v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Optional(0LL, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  id v16 = (char *)&v39 - v15;
  uint64_t v17 = *(void *)(a6 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = a1;
  uint64_t v20 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v40 = a2;
  specialized Dictionary.subscript.getter(a2, a3, v20, &v46);
  swift_bridgeObjectRelease();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  if ((swift_dynamicCast(v16, &v46, v21) & 1) != 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0LL, 1LL, a6);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a6);
    uint64_t v22 = type metadata accessor for Transformer(0LL, a5, a6);
    uint64_t v23 = (void (*)(char *))Transformer.reverseTransform.getter(v22);
    uint64_t v25 = v24;
    uint64_t v26 = v44;
    v23(v19);
    swift_release(v25);
    uint64_t v47 = a5;
    os_log_type_t v37 = __swift_allocate_boxed_opaque_existential_1(&v46);
    uint64_t v38 = v42;
    (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v37, v26, a5);
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v46, v40, a3);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v26, a5);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a6);
  }

  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1LL, 1LL, a6);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
    if (os_log_type_enabled(v29, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v33 = swift_slowAlloc(32LL, -1LL);
      uint64_t v45 = a6;
      *(void *)&__int128 v46 = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata(a6);
      uint64_t v35 = String.init<A>(describing:)(&v45, MetatypeMetadata);
      uint64_t v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, (uint64_t *)&v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v32 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v29, v31, "No entry in userData of type %s to override", v32, 0xCu);
      swift_arrayDestroy(v33, 1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
    }
  }

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v1 = type metadata accessor for Transformer(0LL, *((void *)v0 + 2), *((void *)v0 + 3));
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease(*((void *)v0 + 7));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #2 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t a1)
{
  return partial apply for closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)( a1,  (uint64_t (*)(uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))closure #2 in static DICodableOverride.transform<A, B>(name:transformer:));
}

uint64_t partial apply for closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *((void *)v2 + 2);
  uint64_t v5 = *((void *)v2 + 3);
  uint64_t v6 = *((void *)v2 + 4);
  uint64_t v7 = *((void *)v2 + 5);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Transformer(0LL, v4, v5) - 8) + 80LL);
  return a2(a1, *((void *)v2 + 6), *((void *)v2 + 7), &v2[(v8 + 64) & ~v8], v4, v5, v6, v7);
}

Swift::Void __swiftcall DICodableOverride.applyAfterEncoding(_:)(Swift::OpaquePointer *a1)
{
}

Swift::Void __swiftcall DICodableOverride.applyBeforeDecoding(_:)(Swift::OpaquePointer *a1)
{
}

uint64_t destroy for DICodableOverride(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 24));
}

uint64_t initializeWithCopy for DICodableOverride(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  __int128 v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  *(void *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

void *assignWithCopy for DICodableOverride(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for DICodableOverride(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  uint64_t v5 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for DICodableOverride()
{
  return &type metadata for DICodableOverride;
}

void *__swift_deallocate_boxed_opaque_existential_0(void *result)
{
  uint64_t v1 = *(void *)(result[3] - 8LL);
  if ((*(_DWORD *)(v1 + 80) & 0x20000) != 0) {
    return (void *)swift_slowDealloc( *result,  *(void *)(v1 + 64)
  }
                     + ((*(_DWORD *)(v1 + 80) + 16LL) & ~(unint64_t)*(_DWORD *)(v1 + 80)),
                       *(_DWORD *)(v1 + 80) | 7LL);
  return result;
}

uint64_t SwitchToFaceTimeControlFlow.executeAction(currentCall:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  unsigned __int8 v8 = *(_BYTE *)(v4 + 56);
  PhoneCallControlAction.isSwitchToFaceTimeAction.getter(v8);
  if ((v9 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v18 = OUTLINED_FUNCTION_15_1();
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl( &dword_0,  v20,  v21,  "#SwitchToFaceTimeControlFlow used to handle a call control not related to switch to FaceTime.",  v22,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v22);
    }

    unint64_t v23 = lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    uint64_t v24 = OUTLINED_FUNCTION_4_4( (uint64_t)&type metadata for ActionableCallControlFlow.ActionableCallControlFlowError,  v23);
    char v32 = 0;
    *(_BYTE *)uint64_t v25 = v8;
    goto LABEL_17;
  }

  uint64_t v10 = static PhoneCallControlRequestSupportPolicy.unsupportedSwitchToFaceTimeReason(for:action:sharedGlobals:)( a1,  a2,  v8,  v4 + 16);
  if (v10 != 10)
  {
    uint64_t v33 = v10;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v34 = OUTLINED_FUNCTION_15_1();
    uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
    unint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v38 = static os_log_type_t.debug.getter(v36, v37);
    if (os_log_type_enabled(v36, v38))
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v40 = OUTLINED_FUNCTION_7_0(32LL);
      v61[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      specialized UnsupportedAction.description.getter( v33,  (uint64_t)&type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason,  &demangling cache variable for type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.Type,  (uint64_t (*)(uint64_t))ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter);
      uint64_t v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v39 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v36, v38, "#SwitchToFaceTimeControlFlow cannot switch to facetime because %s", v39, 0xCu);
      swift_arrayDestroy(v40, 1LL);
      OUTLINED_FUNCTION_0_2(v40);
      OUTLINED_FUNCTION_0_2((uint64_t)v39);
    }

    v61[3] = (uint64_t)&type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
    unint64_t v43 = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason();
    v61[4] = v43;
    LOBYTE(v61[0]) = v33;
    outlined init with take of ActionableCallControlFlow.State((uint64_t)v61, (uint64_t)&v59);
    swift_beginAccess(v4 + 72, v58, 33LL, 0LL);
    outlined assign with take of ActionableCallControlFlow.State((uint64_t)&v59, v4 + 72);
    swift_endAccess(v58);
    unint64_t v44 = lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    uint64_t v24 = OUTLINED_FUNCTION_4_4( (uint64_t)&type metadata for ActionableCallControlFlow.ActionableCallControlFlowError,  v44);
    *(void *)(v25 + 24) = &type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
    *(void *)(v25 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v43;
    *(_BYTE *)uint64_t v25 = v33;
    char v32 = 1;
LABEL_17:
    *(_BYTE *)(v25 + 40) = v32;
    return swift_willThrow(v24, v25, v26, v27, v28, v29, v30, v31);
  }

  uint64_t v62 = a3;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = swift_unknownObjectRetain(a1);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    id v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)id v16 = 67109120;
    uint64_t ObjectType = swift_getObjectType(a1);
    LOBYTE(v61[0]) = OUTLINED_FUNCTION_13_45(ObjectType, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32)) & 1;
    LODWORD(v61[0]) = LOBYTE(v61[0]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v61, (char *)v61 + 4, v16 + 4);
    swift_unknownObjectRelease(a1);
    _os_log_impl(&dword_0, v13, v15, "#SwitchToFaceTimeControlFlow current call is FaceTime = %{BOOL}d", v16, 8u);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  else
  {

    swift_unknownObjectRelease(a1);
  }

  uint64_t v46 = swift_getObjectType(a1);
  if ((OUTLINED_FUNCTION_13_45(v46, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40)) & 1) != 0
    || (SPHCall.isFTAudio.getter(v46, a2), (v47 & 1) != 0))
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 184))(v46, a2);
  }

  uint64_t v48 = OUTLINED_FUNCTION_8_43();
  if (v48 == 0xD000000000000010LL && (OUTLINED_FUNCTION_6_47(), v50))
  {
    OUTLINED_FUNCTION_18_18(v49);
  }

  else
  {
    OUTLINED_FUNCTION_0_51(v48);
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_2_44(*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 128));
  uint64_t v51 = OUTLINED_FUNCTION_8_43();
  if (v51 == 0xD000000000000010LL && (OUTLINED_FUNCTION_6_47(), v50))
  {
    OUTLINED_FUNCTION_18_18(v52);
  }

  else
  {
    OUTLINED_FUNCTION_0_51(v51);
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_2_44(*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 152));
  uint64_t v53 = OUTLINED_FUNCTION_8_43();
  if (v53 == 0xD000000000000010LL && (OUTLINED_FUNCTION_6_47(), v50))
  {
    uint64_t result = OUTLINED_FUNCTION_18_18(v54);
  }

  else
  {
    char v55 = OUTLINED_FUNCTION_0_51(v53);
    uint64_t result = OUTLINED_FUNCTION_62();
    if ((v55 & 1) == 0)
    {
      uint64_t v56 = v62;
      *uint64_t v62 = 0LL;
      v56[1] = 0LL;
      uint64_t v56[2] = 0LL;
      __int128 v57 = xmmword_31F950;
      goto LABEL_39;
    }
  }

  uint64_t v56 = v62;
  *uint64_t v62 = 0LL;
  v56[1] = 0LL;
  uint64_t v56[2] = 0LL;
  __int128 v57 = xmmword_327AF0;
LABEL_39:
  *(_OWORD *)(v56 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v57;
  return result;
}

void specialized UnsupportedAction.description.getter(uint64_t a1)
{
}

{
  specialized UnsupportedAction.description.getter( a1,  (uint64_t)&type metadata for ActionableCallControlFlow.UnsupportedHoldActionReason,  &demangling cache variable for type metadata for ActionableCallControlFlow.UnsupportedHoldActionReason.Type,  (uint64_t (*)(uint64_t))ActionableCallControlFlow.UnsupportedHoldActionReason.rawValue.getter);
}

void specialized UnsupportedAction.description.getter()
{
}

{
  specialized UnsupportedAction.description.getter( (uint64_t)&type metadata for ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason,  &demangling cache variable for type metadata for ActionableCallControlFlow.UnsupportedSpeakerphoneActionReason.Type,  0xD000000000000023LL,  (void *)0x8000000000341DE0LL);
}

void specialized UnsupportedAction.description.getter( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_11_42(v6, v7, v8, v9, v10, v11, v12, v13, a2);
  OUTLINED_FUNCTION_3_57();
  v14._uint64_t countAndFlagsBits = a4(a1);
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_0();
}

void specialized UnsupportedAction.description.getter(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_11_42(v6, v7, v8, v9, v10, v11, v12, v13, a1);
  OUTLINED_FUNCTION_3_57();
  v14._uint64_t countAndFlagsBits = a3;
  v14._object = a4;
  String.append(_:)(v14);
  OUTLINED_FUNCTION_24_0();
}

unint64_t lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason()
{
  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason,  &type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason,  &type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason,  &type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
  if (!lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason,  &type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason);
  }

  return result;
}

uint64_t outlined init with take of ActionableCallControlFlow.State(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined assign with take of ActionableCallControlFlow.State(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t type metadata accessor for SwitchToFaceTimeControlFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin27SwitchToFaceTimeControlFlow);
}

uint64_t OUTLINED_FUNCTION_0_51(uint64_t a1)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)( a1,  v1,  0xD000000000000010LL,  (v2 - 32) | 0x8000000000000000LL,  0LL);
}

uint64_t OUTLINED_FUNCTION_2_44@<X0>(uint64_t (*a1)(void, uint64_t, uint64_t)@<X8>)
{
  return a1(v3 & 1, v2, v1);
}

void OUTLINED_FUNCTION_3_57()
{
  v0._uint64_t countAndFlagsBits = 46LL;
  v0._object = (void *)0xE100000000000000LL;
  String.append(_:)(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_8_43()
{
  return PhoneCallControlAction.rawValue.getter(v0);
}

uint64_t OUTLINED_FUNCTION_11_42( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return String.init<A>(describing:)(&a9, a1);
}

uint64_t OUTLINED_FUNCTION_13_45@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t IncomingCallIntentResponse.isIncomingCall.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t (**)(void))(a2 + 8);
  if (v4() == 2) {
    return 1LL;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    uint64_t v9 = 4LL;
    while (1)
    {
      id v10 = (v7 & 0xC000000000000001LL) != 0 ? (id)OUTLINED_FUNCTION_5_49(v9 - 4) : *(id *)(v7 + 8 * v9);
      uint64_t v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1LL)) {
        break;
      }
      uint64_t v13 = (char *)[v10 callRecordType];

      BOOL v14 = v13 == (_BYTE *)&dword_4 + 2;
      BOOL v5 = v13 == (_BYTE *)&dword_4 + 2;
      ++v9;
      BOOL v14 = v14 || v12 == v8;
      if (v14) {
        goto LABEL_27;
      }
    }

    __break(1u);
LABEL_22:
    if (v7 < 0) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  BOOL v5 = 0LL;
LABEL_27:
  swift_bridgeObjectRelease_n(v7, 2LL);
  return v5;
}

void specialized IncomingCallIntentResponse.hasCallHistory.getter(uint64_t (*a1)(uint64_t))
{
  if (OUTLINED_FUNCTION_3_58(a1))
  {
    OUTLINED_FUNCTION_0_52();
    if (v3)
    {
      if (v1 >= 0) {
        uint64_t v4 = v2;
      }
      else {
        uint64_t v4 = v1;
      }
      _CocoaArrayWrapper.endIndex.getter(v4);
    }

    OUTLINED_FUNCTION_39();
  }

  OUTLINED_FUNCTION_2();
}

void IncomingCallIntentResponse.hasCallHistory.getter(uint64_t a1, uint64_t a2)
{
  if ((*(uint64_t (**)(void))(a2 + 16))())
  {
    OUTLINED_FUNCTION_0_52();
    if (v3) {
      OUTLINED_FUNCTION_4_51(v2);
    }
    OUTLINED_FUNCTION_39();
  }

  OUTLINED_FUNCTION_2();
}

id specialized IncomingCallIntentResponse.latestCallRecord.getter(uint64_t (*a1)(uint64_t))
{
  if (!OUTLINED_FUNCTION_3_58(a1)) {
    return 0LL;
  }
  OUTLINED_FUNCTION_0_52();
  if (v3)
  {
    if (v1 >= 0) {
      uint64_t v7 = v2;
    }
    else {
      uint64_t v7 = v1;
    }
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v7);
    if (v4) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }

  uint64_t v4 = *(void *)(v2 + 16);
  if (!v4)
  {
LABEL_11:
    OUTLINED_FUNCTION_39();
    return 0LL;
  }

id IncomingCallIntentResponse.latestCallRecord.getter(uint64_t a1, uint64_t a2)
{
  if (v4)
  {
    uint64_t v5 = OUTLINED_FUNCTION_4_51(v3);
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }

  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5)
  {
LABEL_8:
    OUTLINED_FUNCTION_39();
    return 0LL;
  }

void specialized IncomingCallIntentResponse.unknownCaller.getter(uint64_t (*a1)(uint64_t))
{
  id v1 = specialized IncomingCallIntentResponse.latestCallRecord.getter(a1);
  id v2 = [v1 caller];

  if (v2) {
  OUTLINED_FUNCTION_2();
  }
}

void IncomingCallIntentResponse.unknownCaller.getter(uint64_t a1, uint64_t a2)
{
  id v2 = IncomingCallIntentResponse.latestCallRecord.getter(a1, a2);
  id v3 = [v2 caller];

  if (v3) {
  OUTLINED_FUNCTION_2();
  }
}

void specialized IncomingCallIntentResponse.canCallBack.getter(uint64_t (*a1)(uint64_t))
{
  if ((v2 & 1) != 0) {
    specialized IncomingCallIntentResponse.unknownCaller.getter(a1);
  }
  OUTLINED_FUNCTION_2();
}

uint64_t IncomingCallIntentResponse.canCallBack.getter(uint64_t a1, uint64_t a2)
{
  if ((v4 & 1) != 0)
  {
    IncomingCallIntentResponse.unknownCaller.getter(a1, a2);
    char v6 = v5 ^ 1;
  }

  else
  {
    char v6 = 0;
  }

  return v6 & 1;
}

uint64_t INAnswerCallIntentResponse.followUpOfferType.getter()
{
  if ((v1 & 1) != 0) {
    return 3LL;
  }
  specialized IncomingCallIntentResponse.hasCallHistory.getter((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INAnswerCallIntentResponse.callRecords.getter);
  return (v3 & 1) == 0;
}

id @nonobjc INAnswerCallIntentResponse.statusCode.getter()
{
  return [v0 statusCode];
}

void @nonobjc INAnswerCallIntentResponse.callRecords.getter()
{
}

char *INIdentifyIncomingCallerIntentResponse.followUpOfferType.getter()
{
  unint64_t result = (char *)[v0 statusCode];
  if (result != (_BYTE *)&dword_0 + 2)
  {
    if (result == (_BYTE *)&dword_0 + 1)
    {
      specialized IncomingCallIntentResponse.canCallBack.getter((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.getter);
      if ((v2 & 1) != 0)
      {
        return (_BYTE *)(&dword_0 + 3);
      }

      else
      {
        specialized IncomingCallIntentResponse.hasCallHistory.getter((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.getter);
        if ((v3 & 1) != 0) {
          return (char *)&dword_4;
        }
        else {
          return 0LL;
        }
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

uint64_t @nonobjc INIdentifyIncomingCallerIntentResponse.callRecords.getter()
{
  return outlined bridged method (pb) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.getter(v0);
}

uint64_t outlined bridged method (pb) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.getter( void *a1)
{
  id v1 = [a1 callRecords];
  if (!v1) {
    return 0LL;
  }
  char v2 = v1;
  unint64_t v3 = type metadata accessor for INCallRecord();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

unint64_t type metadata accessor for INCallRecord()
{
  unint64_t result = lazy cache variable for type metadata for INCallRecord;
  if (!lazy cache variable for type metadata for INCallRecord)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INCallRecord);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for INCallRecord);
  }

  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_3_58(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

uint64_t OUTLINED_FUNCTION_4_51@<X0>(uint64_t a1@<X8>)
{
  if (v1 >= 0) {
    return _CocoaArrayWrapper.endIndex.getter(a1);
  }
  else {
    return _CocoaArrayWrapper.endIndex.getter(v1);
  }
}

uint64_t static PicsUtils.shouldUsePicsDisambiguationFormat(persons:sharedGlobals:)(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
LABEL_18:
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_8_1();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (!v2) {
      goto LABEL_15;
    }
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_8_1();
    if (!v2) {
      goto LABEL_15;
    }
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (a1 & 0xC000000000000001LL) == 0, a1);
  if ((a1 & 0xC000000000000001LL) != 0) {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
  }
  else {
    id v3 = *(id *)(a1 + 32);
  }
  uint64_t v4 = v3;
  BOOL v5 = INPerson.isProvidedByPlus.getter();

  if (v5)
  {
    uint64_t v2 = 1LL;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = v2 - 1;
    do
    {
      uint64_t v2 = v7 != v6;
      if (v7 == v6) {
        break;
      }
      unint64_t v8 = v6 + 1;
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 + 1, a1);
      }

      else
      {
        id v9 = *(id *)(a1 + 8 * v6 + 40);
      }

      id v10 = v9;
      if (__OFADD__(v8, 1LL))
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }

      BOOL v11 = INPerson.isProvidedByPlus.getter();

      ++v6;
    }

    while (!v11);
  }

void static PicsUtils.splitPicsPerson(persons:speakableStrings:)(unint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a1;
  BOOL v5 = (void *)(a1 >> 62);
  if (a1 >> 62)
  {
LABEL_34:
    if (v4 < 0) {
      uint64_t v29 = v4;
    }
    else {
      uint64_t v29 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_124();
    unint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v29);
    OUTLINED_FUNCTION_4_1();
  }

  else
  {
    unint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v7 = *a2;
  if (v6 != *(void *)(*a2 + 16)) {
    goto LABEL_25;
  }
  if (v5)
  {
    if (v4 < 0) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_124();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v8) {
      goto LABEL_24;
    }
  }

  else
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_124();
    if (!v8) {
      goto LABEL_24;
    }
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v4 & 0xC000000000000001LL) == 0, v4);
  if ((v4 & 0xC000000000000001LL) != 0) {
LABEL_39:
  }
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v4);
  else {
    id v10 = *(id *)(v4 + 32);
  }
  BOOL v5 = v10;
  if (INPerson.isProvidedByPlus.getter())
  {
    OUTLINED_FUNCTION_4_1();
    unint64_t v11 = 0LL;
  }

  else
  {

    if (v8 == 1)
    {
LABEL_24:
      OUTLINED_FUNCTION_4_1();
LABEL_25:
      OUTLINED_FUNCTION_8_1();
      return;
    }

    uint64_t v2 = v4 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v12 = 5LL;
    while (1)
    {
      unint64_t v13 = v12 - 4;
      if ((v4 & 0xC000000000000001LL) != 0)
      {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v4);
      }

      else
      {
        if (v13 >= *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
          goto LABEL_39;
        }

        id v14 = *(id *)(v4 + 8 * v12);
      }

      BOOL v5 = v14;
      BOOL v15 = __OFADD__(v13, 1LL);
      uint64_t v16 = v12 - 3;
      if (v15)
      {
        __break(1u);
        goto LABEL_34;
      }

      if (INPerson.isProvidedByPlus.getter()) {
        break;
      }

      ++v12;
      if (v16 == v8) {
        goto LABEL_24;
      }
    }

    OUTLINED_FUNCTION_4_1();
    unint64_t v11 = v12 - 4;
    if (v12 - 4 < 0) {
      goto LABEL_45;
    }
  }

  unint64_t v17 = *(void *)(v7 + 16);
  if (v11 >= v17)
  {
    __break(1u);
  }

  else if (--v6 < v17)
  {
    uint64_t v31 = a2;
    uint64_t v18 = (uint64_t **)(v7 + 32 + 16 * v11);
    a2 = *v18;
    uint64_t v8 = (uint64_t)v18[1];
    uint64_t v19 = (uint64_t *)(v7 + 32 + 16 * v6);
    uint64_t v2 = *v19;
    uint64_t v4 = v19[1];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_124();
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) != 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }

  __break(1u);
LABEL_42:
  specialized _ArrayBuffer._consumeAndCreateNew()(v7);
  uint64_t v7 = v30;
LABEL_30:
  uint64_t v20 = (uint64_t **)(v7 + 32 + 16 * v6);
  os_log_s *v20 = a2;
  v20[1] = (uint64_t *)v8;
  swift_bridgeObjectRelease();
  if (v11 >= *(void *)(v7 + 16))
  {
    __break(1u);
  }

  else
  {
    os_log_type_t v21 = (uint64_t *)(v7 + 32 + 16 * v11);
    uint64_t *v21 = v2;
    v21[1] = v4;
    swift_bridgeObjectRelease();
    *uint64_t v31 = v7;
    uint64_t v22 = specialized Collection.prefix(_:)(v6, v7);
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    unint64_t v28 = v27;
    OUTLINED_FUNCTION_8_1();
    specialized Array.init<A>(_:)(v22, v24, v26, v28);
    if (v6 < *(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain();

      return;
    }
  }

  __break(1u);
LABEL_45:
  __break(1u);
}

ValueMetadata *type metadata accessor for PicsUtils()
{
  return &type metadata for PicsUtils;
}

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATs::Properties_optional __swiftcall AnnounceIncomingCallCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AnnounceIncomingCallCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_AnnounceIncomingCallCATs_Properties_offerFollowUpIntent;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_AnnounceIncomingCallCATs_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceIncomingCallCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceIncomingCallCATs::Properties_optional *a2@<X8>)
{
  result.value = AnnounceIncomingCallCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceIncomingCallCATs.Properties@<X0>( unint64_t *a1@<X8>)
{
  unint64_t result = AnnounceIncomingCallCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnnounceIncomingCallCATs.intentHandledResponse(incomingCallConcept:completion:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  swift_retain();
  OUTLINED_FUNCTION_23_19(0xD00000000000002ALL);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t AnnounceIncomingCallCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceIncomingCallCATs.intentHandledResponse(incomingCallConcept:));
}

uint64_t AnnounceIncomingCallCATs.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v2 = v1[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[5] = v4;
  *(_OWORD *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  unint64_t v6 = (void *)swift_task_alloc(v0);
  v1[6] = v6;
  *unint64_t v6 = v1;
  v6[1] = PhoneCallCommonCATs.orList(items:);
  return v8(v1[2], 0xD00000000000002ALL, 0x8000000000342A90LL, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t);
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  unint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *unint64_t v6 = v1;
  v6[1] = UnsupportedFlowCATs.unsupportedOnDeviceType(device:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD00000000000002ALL);
  return v9(v7);
}

uint64_t AnnounceIncomingCallCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceIncomingCallCATs.intentHandledResponse(incomingCallConcept:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002ALL, 0x8000000000342A90LL, v3);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t AnnounceIncomingCallCATs.offerFollowUpIntent(followUpOfferType:completion:)(uint64_t a1)
{
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1LL, v8);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_1(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  OUTLINED_FUNCTION_23_19(0xD000000000000028LL);
  return swift_bridgeObjectRelease();
}

uint64_t AnnounceIncomingCallCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AnnounceIncomingCallCATs.offerFollowUpIntent(followUpOfferType:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  v0[6] = v2;
  *(_OWORD *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = AnswerCallCATs.offerFollowUpIntent(followUpOfferType:);
  return v9(v0[2], 0xD000000000000028LL, 0x8000000000342AC0LL, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
  *uint64_t v7 = v0;
  v7[1] = UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:);
  uint64_t v8 = OUTLINED_FUNCTION_21_19(0xD000000000000028LL);
  return v10(v8);
}

uint64_t AnnounceIncomingCallCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *boxed_opaque_existential_1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v4, 1LL, v8) == 1)
  {
    outlined destroy of SpeakableString?(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000028LL, 0x8000000000342AC0LL, v6);
  return swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type AnnounceIncomingCallCATs.Properties and conformance AnnounceIncomingCallCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceIncomingCallCATs.Properties and conformance AnnounceIncomingCallCATs.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceIncomingCallCATs.Properties and conformance AnnounceIncomingCallCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceIncomingCallCATs.Properties,  &type metadata for AnnounceIncomingCallCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceIncomingCallCATs.Properties and conformance AnnounceIncomingCallCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceIncomingCallCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceIncomingCallCATs;
  if (!type metadata singleton initialization cache for AnnounceIncomingCallCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceIncomingCallCATs);
  }
  return result;
}

uint64_t type metadata completion function for AnnounceIncomingCallCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnnounceIncomingCallCATs);
}

uint64_t ObjC metadata update function for AnnounceIncomingCallCATs()
{
  return type metadata accessor for AnnounceIncomingCallCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for AnnounceIncomingCallCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_126FB0 + 4 * byte_327BC5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_126FE4 + 4 * asc_327BC0[v4]))();
}

uint64_t sub_126FE4(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_126FEC(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x126FF4LL);
  }
  return result;
}

uint64_t sub_127000(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x127008LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_12700C(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_127014(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceIncomingCallCATs.Properties()
{
  return &type metadata for AnnounceIncomingCallCATs.Properties;
}

void HangUpCallRCHFlowDelegate.__allocating_init(sharedGlobals:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a1,  v3 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals);
  BaseRCHFlowDelegate.init()(v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_2();
}

void HangUpCallRCHFlowDelegate.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

void HangUpCallRCHFlowDelegate.init(sharedGlobals:)(void *a1)
{
}

uint64_t HangUpCallRCHFlowDelegate.makeDialogTemplating()()
{
  uint64_t v1 = OUTLINED_FUNCTION_42_10();
  type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  OUTLINED_FUNCTION_65();
  uint64_t v2 = OUTLINED_FUNCTION_42_10();
  type metadata accessor for PhoneCallCommonCATs(0LL);
  OUTLINED_FUNCTION_65();
  uint64_t v3 = OUTLINED_FUNCTION_42_10();
  uint64_t v4 = type metadata accessor for AppInfoBuilder();
  uint64_t v5 = swift_allocObject(v4, 16LL, 7LL);
  uint64_t v6 = type metadata accessor for HangUpCallTemplatingService(0LL);
  uint64_t v7 = (void *)swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  return specialized HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( v9,  v1,  v2,  v3,  v5,  v7);
}

Swift::Bool __swiftcall HangUpCallRCHFlowDelegate.shouldShowDialogAfterIntentHandled(intent:intentResponse:)( INHangUpCallIntent intent, INHangUpCallIntentResponse intentResponse)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v4, v6, "Suppress intentHandled dialog for HangUpCallIntent.", v7, 2u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  return 0;
}

void HangUpCallRCHFlowDelegate.init()(uint64_t a1, uint64_t a2)
{
}

uint64_t HangUpCallRCHFlowDelegate.__ivar_destroyer()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                             + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals));
}

void HangUpCallRCHFlowDelegate.deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals));
  OUTLINED_FUNCTION_2();
}

uint64_t HangUpCallRCHFlowDelegate.__deallocating_deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals));
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

void protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance HangUpCallRCHFlowDelegate( uint64_t a1@<X8>)
{
}

uint64_t specialized HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  unint64_t v13 = (char *)&v19[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)((char *)a6 + direct field offset for HangUpCallTemplatingService.hangUpCallCatFamily) = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v19);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v14 = swift_retain();
  static CATOption.defaultMode.getter(v14);
  uint64_t v15 = CATWrapper.__allocating_init(options:globals:)(v13, 0LL);
  swift_retain();
  uint64_t v16 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0x61437055676E6168LL,  0xEF32764355446C6CLL,  v19,  a3,  a4,  a5,  0LL,  0LL,  0LL,  0LL,  v15,  a6);
  swift_release(a5);
  swift_release(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v16;
}

void instantiation function for generic protocol witness table for HangUpCallRCHFlowDelegate(uint64_t a1)
{
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v2;
}

uint64_t type metadata accessor for HangUpCallRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for HangUpCallRCHFlowDelegate;
  if (!type metadata singleton initialization cache for HangUpCallRCHFlowDelegate) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HangUpCallRCHFlowDelegate);
  }
  return result;
}

uint64_t type metadata completion function for HangUpCallRCHFlowDelegate(uint64_t a1)
{
  uint64_t v2 = "(";
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + class metadata base offset for HangUpCallRCHFlowDelegate);
}

uint64_t ObjC metadata update function for HangUpCallRCHFlowDelegate()
{
  return type metadata accessor for HangUpCallRCHFlowDelegate(0LL);
}

uint64_t sub_1279F4()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_3_59(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 53LL, a3, 6LL, 0LL);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ContactPromptResponse()
{
  return ContactPromptResponse.debugDescription.getter(*v0);
}

uint64_t getEnumTagSinglePayload for ContactPromptResponse(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF9)
  {
    unsigned int v6 = *a1;
    if (v6 >= 5) {
      unsigned int v7 = v6 - 4;
    }
    else {
      unsigned int v7 = 0;
    }
    if (v7 >= 4) {
      return v7 - 3;
    }
    else {
      return 0LL;
    }
  }

  else
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_127A88 + 4 * byte_327D10[v4]))();
  }

uint64_t storeEnumTagSinglePayload for ContactPromptResponse(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v4;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (a2 <= 0xF8) {
    return ((uint64_t (*)(void))((char *)&loc_127B34 + 4 * byte_327D1A[v5]))();
  }
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_127B68 + 4 * byte_327D15[v5]))();
}

uint64_t sub_127B68(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_127B70(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x127B78LL);
  }
  return result;
}

uint64_t sub_127B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x127B8CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 7;
  return result;
}

uint64_t sub_127B90(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_127B98(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t getEnumTag for ContactPromptResponse(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 5) {
    return v1 - 4;
  }
  else {
    return 0LL;
  }
}

_BYTE *destructiveInjectEnumTag for ContactPromptResponse(_BYTE *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactPromptResponse()
{
  return &type metadata for ContactPromptResponse;
}

ValueMetadata *type metadata accessor for ContactPromptResponseParser()
{
  return &type metadata for ContactPromptResponseParser;
}

uint64_t OUTLINED_FUNCTION_0_53@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_5_50();
  type metadata accessor for SirikitDeviceState(v0);
  OUTLINED_FUNCTION_1_53();
  OUTLINED_FUNCTION_9_47();
  uint64_t v1 = OUTLINED_FUNCTION_10_22((uint64_t)&unk_400360);
  uint64_t v2 = OUTLINED_FUNCTION_7_52(v1);
  static DialogPhase.error.getter(v2);
  OUTLINED_FUNCTION_11_43();
  uint64_t v3 = OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_15_2(v3);
  OUTLINED_FUNCTION_8_44();
  OUTLINED_FUNCTION_58();
}

void static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)(uint64_t a1)
{
  uint64_t v2 = swift_retain();
  static DialogPhase.canceled.getter(v2);
  outlined init with copy of SignalProviding(a1, (uint64_t)v4);
  uint64_t v3 = OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_15_2(v3);
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
}

void static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_5_50();
  uint64_t v4 = type metadata accessor for PhoneError(v3);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  unsigned int v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  uint64_t v8 = &v12[-v7];
  outlined init with copy of Parse?(a2, (uint64_t)v6);
  swift_storeEnumTagMultiPayload(v6, v4, 10LL);
  PhoneError.logged()((uint64_t)v8);
  outlined destroy of PhoneError((uint64_t)v6);
  outlined destroy of PhoneError((uint64_t)v8);
  type metadata accessor for SirikitDeviceState(0LL);
  OUTLINED_FUNCTION_1_53();
  OUTLINED_FUNCTION_9_47();
  uint64_t v9 = OUTLINED_FUNCTION_10_22((uint64_t)&unk_400388);
  uint64_t v10 = OUTLINED_FUNCTION_7_52(v9);
  static DialogPhase.error.getter(v10);
  OUTLINED_FUNCTION_11_43();
  uint64_t v11 = OUTLINED_FUNCTION_13_46();
  OUTLINED_FUNCTION_15_2(v11);
  OUTLINED_FUNCTION_8_44();
  OUTLINED_FUNCTION_58();
}

uint64_t closure #1 in static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)( void *a1, uint64_t a2)
{
  uint64_t v4 = *(int **)(class metadata base offset for StartCallCATsSimple + *a1 + 464);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for PhoneIntentResolving.resolve<A>(nlIntent:skIntent:rchFlowContext:sharedGlobals:) in conformance PhoneIntentResolver;
  return v7(a2);
}

uint64_t partial apply for closure #1 in static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_432CDC);
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  uint64_t v2 = (void *)OUTLINED_FUNCTION_142_2( v1,  (uint64_t)partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:));
  return closure #1 in static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)(v2, v3);
}

uint64_t closure #1 in static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)( void *a1, uint64_t a2)
{
  uint64_t v4 = *(int **)(class metadata base offset for StartCallCATsSimple + *a1 + 608);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v7(a2);
}

uint64_t closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)( void *a1)
{
  uint64_t v2 = *(int **)(class metadata base offset for PhoneCallCommonCATsSimple + *a1 + 48);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:);
  return v5();
}

uint64_t outlined init with copy of Parse?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_9()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for closure #1 in static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_432CF4);
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  uint64_t v2 = (void *)OUTLINED_FUNCTION_142_2( v1,  (uint64_t)partial apply for specialized implicit closure #4 in implicit closure #3 in AnyIntentResolver.init<A>(_:));
  return closure #1 in static CommonOutputs.conversionError(sharedGlobals:parse:startCallCATsSimple:)(v2, v3);
}

ValueMetadata *type metadata accessor for CommonOutputs()
{
  return &type metadata for CommonOutputs;
}

uint64_t OUTLINED_FUNCTION_1_53()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_7_52(uint64_t a1)
{
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  return swift_retain(v2);
}

void OUTLINED_FUNCTION_8_44()
{
}

uint64_t OUTLINED_FUNCTION_9_47()
{
  return SirikitDeviceState.__allocating_init(from:)(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_11_43()
{
  return outlined init with copy of SignalProviding(v0, v1 - 104);
}

uint64_t OUTLINED_FUNCTION_12_47()
{
  return type metadata accessor for DialogPhase(0LL);
}

uint64_t OUTLINED_FUNCTION_13_46()
{
  return type metadata accessor for DialogOutputFactory(0LL);
}

uint64_t protocol witness for IncomingCallFlowOutputStrategy.makePromptForConfirmationFlow<A>(app:intentResponse:sharedGlobals:) in conformance AnswerCallOutputStrategy( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return IncomingCallFlowOutputStrategy.makePromptForConfirmationFlow<A>(app:intentResponse:sharedGlobals:)( a1,  a2,  a3,  a6,  a4,  a7,  a5);
}

uint64_t IncomingCallFlowOutputStrategy.makePromptForConfirmationFlow<A>(app:intentResponse:sharedGlobals:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v18)(__int128 *__return_ptr, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t WitnessTable;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v13 = type metadata accessor for IncomingCallActionConfirmation(255LL);
  unint64_t v14 = lazy protocol witness table accessor for type IncomingCallActionConfirmation and conformance IncomingCallActionConfirmation();
  uint64_t v15 = type metadata accessor for PromptForConfirmationFlowAsync(0LL, a5, v13, v14);
  uint64_t v41 = a2;
  uint64_t v17 = type metadata accessor for IncomingCallActionConfirmationStrategy(0LL, a5, a7, v16);
  uint64_t v18 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a6 + 8);
  uint64_t v19 = a2;
  v18(&v34, a4, a6);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)&v38);
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  os_log_type_t v21 = v20;
  default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)((uint64_t *)v37);
  IncomingCallActionConfirmationStrategy.__allocating_init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)( (uint64_t)v19,  &v34,  &v38,  0LL,  0,  v21,  v37);
  uint64_t v23 = v22;
  uint64_t v24 = a3[3];
  uint64_t v25 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v24);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v25 + 16))(&v34, v24, v25);
  uint64_t v26 = v35;
  unint64_t v27 = v36;
  unint64_t v28 = __swift_project_boxed_opaque_existential_1(&v34, v35);
  uint64_t v39 = v26;
  uint64_t v40 = v27;
  uint64_t v29 = __swift_allocate_boxed_opaque_existential_1(&v38);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16LL))(v29, v28, v26);
  uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for IncomingCallActionConfirmationStrategy<A>,  v17);
  uint64_t v31 = PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)( &v41,  v23,  &v38,  v17,  WitnessTable);
  __swift_destroy_boxed_opaque_existential_1(&v34);
  *(void *)&uint64_t v34 = v31;
  swift_getWitnessTable(&protocol conformance descriptor for PromptForConfirmationFlowAsync<A, B>, v15);
  char v32 = Flow.eraseToAnyValueFlow()(v15);
  swift_release(v31);
  return v32;
}

uint64_t IncomingCallFlowOutputStrategy.announceCallsContext.getter()
{
  return 0LL;
}

uint64_t AnnounceVoicemailHintHistory.daysSinceLastHint.getter(double a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_53();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = Date.init(timeIntervalSince1970:)(a1);
  Date.init()(v8);
  double v9 = Date.distance(to:)(v5);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v7, v2);
  double v12 = v9 / 86400.0;
  if (v9 / 86400.0 < 0.0) {
    double v12 = 0.0;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }

  if (v12 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  if (v12 < 9.22337204e18) {
    return (uint64_t)v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailHintHistory __swiftcall AnnounceVoicemailHintHistory.init()()
{
  uint64_t v1 = OUTLINED_FUNCTION_53();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  uint64_t v3 = static Date.distantFuture.getter();
  Date.timeIntervalSince1970.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  OUTLINED_FUNCTION_2_45();
  result.lastHintTimestamp = v6;
  result.hintCount = v5;
  result.count = v4;
  return result;
}

void AnnounceVoicemailHintHistory.init(count:hintCount:lastHintDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = OUTLINED_FUNCTION_53();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a3, v4);
  OUTLINED_FUNCTION_2_45();
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailHintHistory __swiftcall AnnounceVoicemailHintHistory.makeUpdatedHistoryAfterAnnouncement(announcementCount:didReadHint:)( Swift::Int announcementCount, Swift::Bool didReadHint)
{
  double v6 = v5;
  Swift::Int v7 = v3;
  uint64_t v8 = v2;
  uint64_t v11 = OUTLINED_FUNCTION_53();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  BOOL v16 = __OFADD__(v8, announcementCount);
  Swift::Int v17 = v8 + announcementCount;
  if (v16)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (didReadHint)
  {
    BOOL v16 = __OFADD__(v7++, 1LL);
    if (!v16)
    {
      uint64_t v18 = Date.init()(v13);
      double v6 = Date.timeIntervalSince1970.getter(v18);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v11);
      goto LABEL_5;
    }

uint64_t AnnounceVoicemailHintHistory.description.getter(double a1)
{
  v9[0] = 0LL;
  v9[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(50LL);
  v2._uint64_t countAndFlagsBits = 0x3A746E756F630A7BLL;
  v2._object = (void *)0xE900000000000020LL;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_1_54();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x6F43746E69680A2CLL;
  v4._object = (void *)0xED0000203A746E75LL;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_1_54();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x800000000034A780LL;
  v6._uint64_t countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v6);
  Double.write<A>(to:)( v9,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation,  a1);
  v7._uint64_t countAndFlagsBits = 32010LL;
  v7._object = (void *)0xE200000000000000LL;
  String.append(_:)(v7);
  return v9[0];
}

BOOL static AnnounceVoicemailHintHistory.__derived_struct_equals(_:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  BOOL v7 = a1 == a3 && a2 == a4;
  return a5 == a6 && v7;
}

uint64_t AnnounceVoicemailHintHistory.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x746E756F63LL && a2 == 0xE500000000000000LL)
  {
    unint64_t v5 = 0xE500000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E756F63LL, 0xE500000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6E756F43746E6968LL && a2 == 0xE900000000000074LL)
  {
    unint64_t v8 = 0xE900000000000074LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E756F43746E6968LL, 0xE900000000000074LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000011LL && a2 == 0x800000000034A7A0LL)
  {
    swift_bridgeObjectRelease(0x800000000034A7A0LL);
    return 2LL;
  }

  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x800000000034A7A0LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0) {
      return 2LL;
    }
    else {
      return 3LL;
    }
  }

uint64_t AnnounceVoicemailHintHistory.CodingKeys.stringValue.getter(char a1)
{
  if (!a1) {
    return 0x746E756F63LL;
  }
  if (a1 == 1) {
    return 0x6E756F43746E6968LL;
  }
  return 0xD000000000000011LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AnnounceVoicemailHintHistory.CodingKeys()
{
  return AnnounceVoicemailHintHistory.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AnnounceVoicemailHintHistory.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = AnnounceVoicemailHintHistory.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

PhoneCallFlowDelegatePlugin::PhoneCallProvider::CodingKeys_optional protocol witness for CodingKey.init(intValue:) in conformance AnnounceVoicemailHintHistory.CodingKeys@<W0>( Swift::Int a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallProvider::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallProvider.CodingKeys.init(intValue:)(a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnnounceVoicemailHintHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnnounceVoicemailHintHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AnnounceVoicemailHintHistory.encode(to:)(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AnnounceVoicemailHintHistory.CodingKeys>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v15 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_400518, &unk_400518, v15, v13, v14);
  char v20 = 0;
  OUTLINED_FUNCTION_6_48(a2, (uint64_t)&v20);
  if (!v4)
  {
    char v19 = 1;
    OUTLINED_FUNCTION_6_48(a3, (uint64_t)&v19);
    char v18 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v18, v9, a4);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailHintHistory.CodingKeys,  &unk_400518);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailHintHistory.CodingKeys,  &unk_400518);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailHintHistory.CodingKeys,  &unk_400518);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailHintHistory.CodingKeys,  &unk_400518);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys);
  }

  return result;
}

double AnnounceVoicemailHintHistory.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnnounceVoicemailHintHistory.CodingKeys>);
  __chkstk_darwin();
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  unint64_t v7 = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory.CodingKeys and conformance AnnounceVoicemailHintHistory.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_400518, &unk_400518, v7, v5, v6);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  else
  {
    char v11 = 0;
    OUTLINED_FUNCTION_3_60((uint64_t)&v11);
    char v10 = 1;
    OUTLINED_FUNCTION_3_60((uint64_t)&v10);
    char v9 = 2;
    double v2 = KeyedDecodingContainer.decode(_:forKey:)(&v9, v4);
    OUTLINED_FUNCTION_0_54();
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  return v2;
}

Swift::Int protocol witness for SiriPhoneDefaultsCodable.init() in conformance AnnounceVoicemailHintHistory@<X0>( uint64_t a1@<X8>)
{
  PhoneCallFlowDelegatePlugin::AnnounceVoicemailHintHistory v3 = AnnounceVoicemailHintHistory.init()();
  *(void *)a1 = 0LL;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
  *(Swift::Double *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3.lastHintTimestamp;
  return v3.count;
}

unint64_t instantiation function for generic protocol witness table for AnnounceVoicemailHintHistory( void *a1)
{
  a1[1] = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  a1[2] = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  unint64_t result = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for AnnounceVoicemailHintHistory( uint64_t a1)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  unint64_t result = lazy protocol witness table accessor for type AnnounceVoicemailHintHistory and conformance AnnounceVoicemailHintHistory();
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnnounceVoicemailHintHistory()
{
  return AnnounceVoicemailHintHistory.description.getter(*(double *)(v0 + 16));
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceVoicemailHintHistory( uint64_t a1, uint64_t a2)
{
  return static AnnounceVoicemailHintHistory.__derived_struct_equals(_:_:)( *(void *)a1,  *(void *)(a1 + 8),  *(void *)a2,  *(void *)(a2 + 8),  *(double *)(a1 + 16),  *(double *)(a2 + 16));
}

void protocol witness for Decodable.init(from:) in conformance AnnounceVoicemailHintHistory( void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = AnnounceVoicemailHintHistory.init(from:)(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
    *(double *)(a2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v6;
  }

uint64_t protocol witness for Encodable.encode(to:) in conformance AnnounceVoicemailHintHistory(void *a1)
{
  return AnnounceVoicemailHintHistory.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(double *)(v1 + 16));
}

uint64_t getEnumTagSinglePayload for AnnounceVoicemailHintHistory(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailHintHistory(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
    *(void *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailHintHistory()
{
  return &type metadata for AnnounceVoicemailHintHistory;
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailHintHistory.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_128E6C + 4 * byte_327DE5[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_128EA0 + 4 * byte_327DE0[v4]))();
}

uint64_t sub_128EA0(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_128EA8(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x128EB0LL);
  }
  return result;
}

uint64_t sub_128EBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x128EC4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_128EC8(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_128ED0(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

void *type metadata accessor for AnnounceVoicemailHintHistory.CodingKeys()
{
  return &unk_400518;
}

uint64_t OUTLINED_FUNCTION_0_54()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_54()
{
  return dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_3_60(uint64_t a1)
{
  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_6_48(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, v2);
}

void *PhoneAppResolutionHelper.appUsageLookUpDays.unsafeMutableAddressor()
{
  return &static PhoneAppResolutionHelper.appUsageLookUpDays;
}

uint64_t static PhoneAppResolutionHelper.appUsageLookUpDays.getter()
{
  return 7LL;
}

void PhoneAppResolutionHelper.__allocating_init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_7_46(v2, v3, v12);
  OUTLINED_FUNCTION_7_53(v4, v5, v6, v7, v8, v9, v10, v11, v13);
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_7_5();
}

void PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_7_46(v2, v3, v12);
  OUTLINED_FUNCTION_7_53(v4, v5, v6, v7, v8, v9, v10, v11, v13);
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_7_5();
}

Swift::Bool __swiftcall PhoneAppResolutionHelper.areFirstPartyAppsOnly(apps:)(Swift::OpaquePointer apps)
{
  uint64_t v2 = *(void *)((char *)&dword_10 + ((unint64_t)apps._rawValue & 0xFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_8_1();
  if (v2)
  {
    while (1)
    {
      else {
        swift_retain();
      }
      Swift::Bool v3 = App.isFirstParty()();
      OUTLINED_FUNCTION_38_1();
      if (!v3) {
        break;
      }
      if (v2 != 1)
      {
        uint64_t v6 = 5LL;
        while (1)
        {
          if (((unint64_t)apps._rawValue & 0xC000000000000001LL) != 0)
          {
            uint64_t v7 = OUTLINED_FUNCTION_5_49(v6 - 4);
          }

          else
          {
            uint64_t v7 = *((void *)apps._rawValue + v6);
            swift_retain();
          }

          uint64_t v8 = v6 - 3;
          if (__OFADD__(v6 - 4, 1LL)) {
            break;
          }
          Swift::Bool v4 = App.isFirstParty()();
          swift_release(v7);
          if (v4)
          {
            ++v6;
            if (v8 != v2) {
              continue;
            }
          }

          goto LABEL_9;
        }

        __break(1u);
LABEL_19:
        OUTLINED_FUNCTION_8_1();
        uint64_t v2 = OUTLINED_FUNCTION_61_1();
        if (v2) {
          continue;
        }
      }

      goto LABEL_7;
    }

    Swift::Bool v4 = 0;
  }

  else
  {
LABEL_7:
    Swift::Bool v4 = 1;
  }

Swift::String __swiftcall PhoneAppResolutionHelper.mapInCallServiceToMobile(appId:)(Swift::String appId)
{
  Swift::String v1 = String.lowercased()();
  uint64_t v2 = OUTLINED_FUNCTION_42_14();
  if (v1._countAndFlagsBits == v2 && v1._object == v3)
  {
    OUTLINED_FUNCTION_7_4((uint64_t)v1._object);
  }

  else
  {
    OUTLINED_FUNCTION_15_36(v2, (uint64_t)v3);
    OUTLINED_FUNCTION_53_14();
    OUTLINED_FUNCTION_13_1();
    if ((v1._countAndFlagsBits & 1) == 0) {
      OUTLINED_FUNCTION_8_1();
    }
  }

  String.lowercased()();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_16();
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

Swift::String __swiftcall PhoneAppResolutionHelper.mapMobileToInCallService(appId:)(Swift::String appId)
{
  Swift::String v1 = String.lowercased()();
  uint64_t v2 = OUTLINED_FUNCTION_42_14();
  if (v1._countAndFlagsBits == v2 && v1._object == v3)
  {
    OUTLINED_FUNCTION_7_4((uint64_t)v1._object);
  }

  else
  {
    OUTLINED_FUNCTION_15_36(v2, (uint64_t)v3);
    OUTLINED_FUNCTION_53_14();
    OUTLINED_FUNCTION_13_1();
    if ((v1._countAndFlagsBits & 1) == 0) {
      OUTLINED_FUNCTION_6_3();
    }
  }

  OUTLINED_FUNCTION_16();
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t PhoneAppResolutionHelper.isSameAppId(app:appId:)()
{
  uint64_t countAndFlagsBits = App.appIdentifier.getter();
  if (v1)
  {
    Swift::String v2 = String.lowercased()();
    uint64_t countAndFlagsBits = v2._countAndFlagsBits;
    object = v2._object;
    OUTLINED_FUNCTION_4_1();
  }

  else
  {
    object = 0LL;
  }

  Swift::String v4 = String.lowercased()();
  if (object)
  {
    if (countAndFlagsBits == v4._countAndFlagsBits && object == v4._object) {
      char v6 = 1;
    }
    else {
      char v6 = OUTLINED_FUNCTION_49_2(countAndFlagsBits, (uint64_t)object, v4._countAndFlagsBits, (uint64_t)v4._object);
    }
    OUTLINED_FUNCTION_39();
  }

  else
  {
    char v6 = 0;
  }

  OUTLINED_FUNCTION_34_0();
  return v6 & 1;
}

void PhoneAppResolutionHelper.rankBasedOnAppUsageTime(apps:)(unint64_t a1)
{
  unint64_t v3 = a1 >> 62;
  if (a1 >> 62)
  {
    if ((a1 & 0x8000000000000000LL) != 0LL) {
      uint64_t v18 = a1;
    }
    else {
      uint64_t v18 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_48_0();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v18);
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_48_0();
  }

  unint64_t v19 = v3;
  uint64_t v20 = v1;
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_22();
      swift_release(v21);
      __break(1u);
      return;
    }

    uint64_t v5 = 0LL;
    char v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((a1 & 0xC000000000000001LL) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      }
      else {
        OUTLINED_FUNCTION_12_27(a1 + 8 * v5);
      }
      uint64_t v7 = App.appIdentifier.getter();
      unint64_t v9 = v8;
      OUTLINED_FUNCTION_38_1();
      if (!v9)
      {
        uint64_t v7 = 0LL;
        unint64_t v9 = 0xE000000000000000LL;
      }

      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      {
        OUTLINED_FUNCTION_17_35(0LL, v6[2] + 1LL);
        char v6 = v13;
      }

      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1)
      {
        OUTLINED_FUNCTION_17_35(v10 > 1, v11 + 1);
        char v6 = v14;
      }

      ++v5;
      __int128 v6[2] = v11 + 1;
      uint64_t v12 = &v6[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
    }

    while (v4 != v5);
  }

  else
  {
    char v6 = _swiftEmptyArrayStorage;
  }

  OUTLINED_FUNCTION_34_0();
  uint64_t v15 = (*(uint64_t (**)(void *, uint64_t))(**(void **)(v1 + 144) + 80LL))(v6, 7LL);
  OUTLINED_FUNCTION_4_1();
  if (v19)
  {
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_6_3();
    specialized _copyCollectionToContiguousArray<A>(_:)(a1);
    uint64_t v16 = v17;
    OUTLINED_FUNCTION_34_0();
  }

  else
  {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8LL;
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_6_3();
  }

  uint64_t v21 = v16;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_6_3();
  specialized MutableCollection<>.sort(by:)(&v21, v20, v15);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_7_4(v15);
  OUTLINED_FUNCTION_18_7();
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *a1;
  swift_retain_n(a2, 2LL);
  swift_bridgeObjectRetain_n(a3, 2LL);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
  *a1 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = specialized _ContiguousArrayBuffer._consumeAndCreateNew()(v7);
    *a1 = v7;
  }

  uint64_t v9 = *(void *)(v7 + 16);
  v12[0] = v7 + 32;
  v12[1] = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v10 = specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v12, a2, a3);
  specialized ContiguousArray._endMutation()(v10);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_release_n(a2, 2LL);
    swift_release(a2);
    return swift_bridgeObjectRelease_n(a3, 2LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a3, 3LL);
    return swift_release_n(a2, 3LL);
  }

uint64_t specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = a2;
  Swift::Int v8 = a1[1];
  swift_retain_n(a2, 3LL);
  swift_bridgeObjectRetain_n(a3, 3LL);
  Swift::Int v9 = _minimumMergeRunLength(_:)(v8);
  if (v9 >= v8)
  {
    if (v8 < 0) {
      goto LABEL_132;
    }
    if (v8)
    {
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0LL, v8, 1LL, a1, v6, a3);
      swift_release(v6);
    }

    else
    {
      swift_bridgeObjectRelease();
      swift_release_n(v6, 2LL);
    }

    goto LABEL_109;
  }

  Swift::Int v10 = v9;
  uint64_t v126 = v6;
  specialized static Array._allocateUninitialized(_:)(v8 / 2);
  uint64_t v125 = v11;
  uint64_t v138 = v12;
  uint64_t v124 = v8;
  uint64_t v121 = a1;
  if (v8 <= 0)
  {
    uint64_t v14 = (char *)_swiftEmptyArrayStorage;
    unint64_t v42 = _swiftEmptyArrayStorage[2];
LABEL_93:
    uint64_t v110 = v4;
    if (v42 >= 2)
    {
      uint64_t v111 = *v121;
      uint64_t v131 = *v121;
      while (1)
      {
        unint64_t v112 = v42 - 2;
        if (v42 < 2) {
          break;
        }
        if (!v111) {
          goto LABEL_141;
        }
        uint64_t v113 = v110;
        uint64_t v114 = *(void *)&v14[16 * v112 + 32];
        uint64_t v115 = *(void *)&v14[16 * v42 + 24];
        uint64_t v134 = (void *)(v111 + 8LL * *(void *)&v14[16 * v42 + 16]);
        uint64_t v136 = (void *)(v111 + 8 * v114);
        unint64_t v116 = v111 + 8 * v115;
        swift_retain();
        swift_bridgeObjectRetain();
        specialized _merge<A>(low:mid:high:buffer:by:)(v136, v134, v116, v125, v126, a3);
        uint64_t v110 = v113;
        if (v113)
        {
          uint64_t v105 = v124;
          goto LABEL_90;
        }

        if (v115 < v114) {
          goto LABEL_127;
        }
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0) {
          uint64_t v14 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v14);
        }
        if (v112 >= *((void *)v14 + 2)) {
          goto LABEL_128;
        }
        uint64_t v117 = &v14[16 * v112 + 32];
        *(void *)uint64_t v117 = v114;
        *((void *)v117 + Hasher._combine(_:)(v1 & 1) = v115;
        unint64_t v118 = *((void *)v14 + 2);
        if (v42 > v118) {
          goto LABEL_129;
        }
        memmove(&v14[16 * v42 + 16], &v14[16 * v42 + 32], 16 * (v118 - v42));
        *((void *)v14 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v118 - 1;
        unint64_t v42 = v118 - 1;
        uint64_t v111 = v131;
        if (v118 <= 2) {
          goto LABEL_106;
        }
      }

LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }

          __break(1u);
          goto LABEL_127;
        }

LABEL_60:
        if ((v68 & 1) != 0) {
          goto LABEL_121;
        }
        uint64_t v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_123;
        }
        if (v79 < v67) {
          goto LABEL_77;
        }
LABEL_68:
        a3 = v45 - 1;
        if (v45 - 1 >= v42)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
          goto LABEL_126;
        }

        if (!v39) {
          goto LABEL_139;
        }
        uint64_t v84 = v39;
        uint64_t v85 = &v43[16 * a3];
        uint64_t v86 = v43;
        uint64_t v87 = *(void *)v85;
        unint64_t v88 = v45;
        uint64_t v89 = &v86[16 * v45];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v129 = (void *)(v84 + 8LL * *(void *)v89);
        unint64_t v132 = (void *)(v84 + 8LL * *(void *)v85);
        unint64_t v127 = v84 + 8 * v90;
        swift_retain();
        swift_bridgeObjectRetain();
        specialized _merge<A>(low:mid:high:buffer:by:)(v132, v129, v127, v125, v126, v137);
        if (v38)
        {
          a3 = v137;
          uint64_t v105 = v124;
LABEL_90:
          uint64_t v106 = swift_bridgeObjectRelease();
          if (v105 >= -1)
          {
            *(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)) = 0LL;
            goto LABEL_108;
          }

          Swift::Int v37 = 1;
        }

            UsoEntitySpan.payloadAttachmentInfo.getter(v106);
            uint64_t v107 = type metadata accessor for PayloadAttachmentInfo(0LL);
            uint64_t v108 = OUTLINED_FUNCTION_35(v66, 1LL, v107);
            if (v86)
            {
              outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v66,  &demangling cache variable for type metadata for PayloadAttachmentInfo?);
              OUTLINED_FUNCTION_34_13(v104, 1LL);
            }

            else
            {
              PayloadAttachmentInfo.attachmentType.getter(v108);
              uint64_t v109 = OUTLINED_FUNCTION_98_0();
              v110(v109);
            }

            uint64_t v111 = v191;
            (*(void (**)(uint64_t, void, uint64_t))(v199 + 104))(v68, v172, v65);
            OUTLINED_FUNCTION_34_13(v68, 0LL);
            unint64_t v112 = v178;
            uint64_t v113 = v178 + *(int *)(v192 + 48);
            OUTLINED_FUNCTION_19_56(v104, v178);
            OUTLINED_FUNCTION_19_56(v68, v113);
            OUTLINED_FUNCTION_35(v112, 1LL, v65);
            if (v86)
            {
              OUTLINED_FUNCTION_11_74(v68);
              OUTLINED_FUNCTION_11_74(v104);
              OUTLINED_FUNCTION_35(v113, 1LL, v65);
              if (v86)
              {
                outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v178,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
                uint64_t v163 = v205;
LABEL_102:
                OUTLINED_FUNCTION_39();
                OUTLINED_FUNCTION_41_34(v163);
                OUTLINED_FUNCTION_18_36((uint64_t)&v199);
                OUTLINED_FUNCTION_27_53();
                OUTLINED_FUNCTION_11_48(v186, v164);
                OUTLINED_FUNCTION_27_53();
                v165(v169, v201);
                goto LABEL_15;
              }

              goto LABEL_71;
            }

            uint64_t v114 = OUTLINED_FUNCTION_98_0();
            OUTLINED_FUNCTION_19_56(v114, v115);
            OUTLINED_FUNCTION_35(v113, 1LL, v65);
            if (v116)
            {
              OUTLINED_FUNCTION_11_74(v68);
              OUTLINED_FUNCTION_11_74(v104);
              (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v111, v65);
LABEL_71:
              outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v178,  &demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
              goto LABEL_73;
            }

            uint64_t v117 = v111;
            unint64_t v118 = v199;
            uint64_t v119 = v184;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 32))(v184, v113, v65);
            lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PayloadAttachmentInfo.AttachmentType and conformance PayloadAttachmentInfo.AttachmentType,  (uint64_t (*)(uint64_t))&type metadata accessor for PayloadAttachmentInfo.AttachmentType,  (uint64_t)&protocol conformance descriptor for PayloadAttachmentInfo.AttachmentType);
            uint64_t v120 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v119, v65);
            uint64_t v121 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
            v121(v119, v65);
            OUTLINED_FUNCTION_9_19(v188);
            OUTLINED_FUNCTION_9_19(v198);
            Swift::Int v122 = v117;
            char v68 = v188;
            v121(v122, v65);
            OUTLINED_FUNCTION_9_19(v112);
            uint64_t v163 = v205;
            if ((v120 & 1) != 0) {
              goto LABEL_102;
            }
LABEL_73:
            uint64_t v124 = UsoEntitySpan.startIndex.getter(v123);
            if ((v124 & 0x100000000LL) != 0)
            {
              uint64_t v67 = v193;
              BOOL v66 = v194;
            }

            else
            {
              uint64_t v125 = v124;
              uint64_t v47 = UsoEntitySpan.endIndex.getter(v124);
              uint64_t v67 = v193;
              BOOL v66 = v194;
              if ((v47 & 0x100000000LL) == 0)
              {
                if (v47 < (unint64_t)v125)
                {
                  __break(1u);
                  goto LABEL_104;
                }

                IndexSet.remove(integersIn:)(v125);
              }
            }

    double v21 = 0;
    goto LABEL_41;
  }

  if (v20 != 45)
  {
    double v29 = (v20 - 48);
    if (v23 == 1) {
      goto LABEL_39;
    }
    OUTLINED_FUNCTION_8_94();
    if (!v36 & v35) {
      goto LABEL_37;
    }
    double v29 = 10LL * (v20 - 48) + v48;
    double v28 = v12;
    double v30 = v57;
    if (v47 != 2)
    {
      uint64_t v12 = v55;
      while (1)
      {
        OUTLINED_FUNCTION_13_91();
        if (!v36 & v35) {
          goto LABEL_69;
        }
        OUTLINED_FUNCTION_6_107();
        if (!v36) {
          goto LABEL_69;
        }
        double v29 = v50 + v49;
        if (__OFADD__(v50, v49)) {
          goto LABEL_69;
        }
        OUTLINED_FUNCTION_15_86();
        if (v36) {
          goto LABEL_42;
        }
      }
    }

    goto LABEL_60;
  }

  if (v23)
  {
    if (v23 != 1)
    {
      OUTLINED_FUNCTION_8_94();
      if (!(!v36 & v35))
      {
        if (v33 == 2)
        {
          double v21 = 0;
          double v29 = -(uint64_t)v34;
LABEL_40:
          double v28 = v12;
          double v30 = v57;
LABEL_41:
          uint64_t v12 = v55;
          goto LABEL_42;
        }

        if ((BYTE2(v20) - 48) <= 9u)
        {
          double v29 = -10LL * v34 - (BYTE2(v20) - 48);
          double v28 = v12;
          double v30 = v57;
          if (v33 == 3) {
            goto LABEL_60;
          }
          OUTLINED_FUNCTION_20_69();
          while (1)
          {
            OUTLINED_FUNCTION_13_91();
            if (!v36 & v35) {
              break;
            }
            OUTLINED_FUNCTION_6_107();
            if (!v36) {
              break;
            }
            double v29 = v52 - v51;
            if (__OFSUB__(v52, v51)) {
              break;
            }
            OUTLINED_FUNCTION_15_86();
            if (v36) {
              goto LABEL_42;
            }
          }

LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }

        if (v90 < v87) {
          goto LABEL_112;
        }
        if (v88 > *((void *)v14 + 2)) {
          goto LABEL_113;
        }
        unint64_t v91 = v88;
        *(void *)uint64_t v85 = v87;
        unint64_t v43 = v14 + 32;
        *(void *)&v14[16 * a3 + 40] = v90;
        unint64_t v92 = *((void *)v14 + 2);
        if (v88 >= v92) {
          goto LABEL_114;
        }
        unint64_t v42 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v91));
        *((void *)v14 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v92 - 1;
        uint64_t v39 = v135;
        a3 = v137;
        if (v92 <= 2) {
          goto LABEL_77;
        }
      }
    }

    unint64_t v42 = 1LL;
LABEL_77:
    uint64_t v4 = v38;
    uint64_t v13 = v123;
    Swift::Int v8 = v124;
    if (v123 >= v124) {
      goto LABEL_93;
    }
  }

      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
      goto LABEL_140;
    }

    uint64_t v105 = v128;
LABEL_114:
    uint64_t v117 = swift_bridgeObjectRelease();
    if (v105 < -1)
    {
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
    }

    else
    {
      *(void *)((char *)&dword_10 + (v134 & 0xFFFFFFFFFFFFF8LL)) = 0LL;
      specialized Array._endMutation()(v117, v118, v119, v120);
      swift_bridgeObjectRelease();
    }
  }

      uint64_t v145 = v219;
      swift_bridgeObjectRetain();
LABEL_144:
      uint64_t v142 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_145;
    }

LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  swift_bridgeObjectRelease_n(a3, 3LL);
  swift_release_n(v126, 3LL);
  __break(1u);
LABEL_139:
  swift_bridgeObjectRelease_n(v137, 3LL);
  swift_release_n(v126, 3LL);
  __break(1u);
LABEL_140:
  swift_bridgeObjectRelease_n(a3, 3LL);
  swift_release_n(v126, 3LL);
  __break(1u);
LABEL_141:
  swift_bridgeObjectRelease_n(a3, 3LL);
  uint64_t result = swift_release_n(v126, 3LL);
  __break(1u);
  return result;
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v9 = *a4;
    uint64_t v10 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v11 = *(void *)(v9 + 8 * v7);
      uint64_t v12 = a1;
      uint64_t v13 = (uint64_t *)v10;
      do
      {
        uint64_t v14 = *v13;
        swift_retain();
        swift_retain();
        PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a6);
        double v16 = v15;
        PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a6);
        double v18 = v17;
        swift_release(v11);
        uint64_t result = swift_release(v14);
        if (v18 >= v16) {
          break;
        }
        if (!v9)
        {
          __break(1u);
          return result;
        }

        uint64_t v20 = *v13;
        uint64_t v11 = v13[1];
        *uint64_t v13 = v11;
        v13[1] = v20;
        --v13;
        ++v12;
      }

      while (v7 != v12);
      ++v7;
      v10 += 8LL;
      if (v7 != a2) {
        continue;
      }
      break;
    }
  }

  swift_release(a5);
  return swift_bridgeObjectRelease();
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)( void *a1, void *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a4;
  Swift::Int v8 = a2;
  uint64_t v9 = a1;
  uint64_t v10 = (char *)a2 - (char *)a1;
  uint64_t v11 = a2 - a1;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 8;
  if (v11 >= v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v14 = &v6[v13];
    if (v9 >= v8 || v12 < 8) {
      goto LABEL_38;
    }
    double v27 = (void *)(a3 - 8);
    unint64_t v42 = v6;
    while (1)
    {
      unint64_t v43 = v27 + 1;
      double v28 = v14 - 1;
      uint64_t v29 = *(v14 - 1);
      double v30 = v8 - 1;
      uint64_t v31 = *(v8 - 1);
      unint64_t v32 = (unint64_t)v14;
      swift_retain();
      swift_retain();
      PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a6);
      double v34 = v33;
      PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a6);
      double v36 = v35;
      swift_release(v29);
      swift_release(v31);
      if (v36 >= v34)
      {
        uint64_t v6 = v42;
        BOOL v38 = v43 != (void *)v32 || (unint64_t)v27 >= v32;
        double v30 = v28;
        uint64_t v14 = v28;
        if (!v38) {
          goto LABEL_34;
        }
      }

      else
      {
        uint64_t v6 = v42;
        BOOL v37 = v43 != v8 || v27 >= v8;
        --v8;
        uint64_t v14 = (void *)v32;
        if (!v37) {
          goto LABEL_34;
        }
      }

      *double v27 = *v30;
LABEL_34:
      --v27;
      if (v8 <= v9 || v14 <= v6) {
        goto LABEL_38;
      }
    }
  }

  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2 - a1, a4);
  uint64_t v14 = &v6[v11];
  if ((unint64_t)v8 < a3 && v10 >= 8)
  {
    do
    {
      unint64_t v16 = (unint64_t)v14;
      uint64_t v17 = *v8;
      uint64_t v18 = *v6;
      swift_retain();
      swift_retain();
      PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a6);
      double v20 = v19;
      PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a6);
      double v22 = v21;
      swift_release(v17);
      swift_release(v18);
      if (v22 >= v20)
      {
        Swift::Int v23 = v6;
        BOOL v24 = v9 == v6++;
      }

      else
      {
        Swift::Int v23 = v8;
        BOOL v24 = v9 == v8++;
      }

      uint64_t v14 = (void *)v16;
      if (!v24) {
        *uint64_t v9 = *v23;
      }
      ++v9;
    }

    while ((unint64_t)v6 < v16 && (unint64_t)v8 < a3);
  }

  Swift::Int v8 = v9;
LABEL_38:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v6, v14 - v6, v8);
  swift_bridgeObjectRelease();
  swift_release(a5);
  return 1LL;
}

uint64_t specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v47[3] = a8;
  v47[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v47);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32LL))(boxed_opaque_existential_1, a2, a8);
  uint64_t v18 = (uint64_t *)(a7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix);
  uint64_t v19 = type metadata accessor for PhoneAppResolutionHelper(0LL);
  *uint64_t v18 = v19;
  v18[1] = (uint64_t)&outlined read-only object #0 of specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:);
  void v18[2] = 0LL;
  void v18[3] = 0LL;
  OUTLINED_FUNCTION_16_29(v19, a7 + 56);
  outlined init with copy of SignalProviding((uint64_t)v47, a7 + 16);
  uint64_t v20 = a7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_appResolver;
  uint64_t v21 = type metadata accessor for AppResolver(0LL);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16LL))(v20, a6, v21);
  *(void *)(a7 + 144) = a5;
  if (a3)
  {
    OUTLINED_FUNCTION_95();
    uint64_t v23 = a3;
  }

  else
  {
    OUTLINED_FUNCTION_16_29(v22, (uint64_t)&v44);
    BOOL v24 = (void *)objc_opt_self(&OBJC_CLASS___TRIClient);
    OUTLINED_FUNCTION_95();
    id v25 = [v24 clientWithIdentifier:112];
    uint64_t v26 = type metadata accessor for TrialSmartAppSelectionConfigProvider();
    uint64_t v27 = OUTLINED_FUNCTION_8_2(v26, 24LL);
    *(void *)(v27 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v25;
    uint64_t v28 = type metadata accessor for DiagnosticLogPermission();
    uint64_t v29 = OUTLINED_FUNCTION_8_2(v28, 16LL);
    uint64_t v30 = type metadata accessor for SmartAppSelectionFeatureManager();
    OUTLINED_FUNCTION_8_2(v30, 104LL);
    SmartAppSelectionFeatureManager.init(sharedGlobals:trialSmartAppSelectionConfigProvider:diagnosticLogPermission:)( &v44,  v27,  v29);
  }

  *(void *)(a7 + outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = v23;
  outlined init with copy of PhoneAppResolutionLogging?(a4, (uint64_t)&v42);
  if (v43)
  {
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_34_20();
    outlined destroy of PhoneAppResolutionLogging?(a4);
    __swift_destroy_boxed_opaque_existential_1(v47);
    __swift_destroy_boxed_opaque_existential_1(a1);
    outlined init with take of AppSelectionSignalComponent(&v42, (uint64_t)&v44);
  }

  else
  {
    uint64_t v38 = a4;
    swift_retain();
    uint64_t v31 = outlined destroy of PhoneAppResolutionLogging?((uint64_t)&v42);
    OUTLINED_FUNCTION_16_29(v31, (uint64_t)&v42);
    id v32 = [(id)objc_opt_self(AssistantSiriAnalytics) sharedAnalytics];
    id v33 = [v32 defaultMessageStream];

    if (one-time initialization token for instance != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    uint64_t v34 = static EligibleAppFinder.instance;
    uint64_t v40 = type metadata accessor for EligibleAppFinder();
    unint64_t v41 = &protocol witness table for EligibleAppFinder;
    *(void *)&__int128 v39 = v34;
    unint64_t v45 = &type metadata for PhoneAppResolutionLogger;
    uint64_t v46 = &protocol witness table for PhoneAppResolutionLogger;
    uint64_t v35 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4005F8, 160LL);
    double v36 = (void *)(v35 + 16);
    *(void *)&__int128 v44 = v35;
    swift_retain();
    PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)(&v42, (uint64_t)v33, &v39, v36);
    swift_release(a3);
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_34_20();
    outlined destroy of PhoneAppResolutionLogging?(v38);
    __swift_destroy_boxed_opaque_existential_1(v47);
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  outlined init with take of AppSelectionSignalComponent(&v44, a7 + 104);
  return a7;
}

uint64_t ObjC metadata update function for PhoneAppResolutionHelper()
{
  return type metadata accessor for PhoneAppResolutionHelper(0LL);
}

uint64_t type metadata completion function for PhoneAppResolutionHelper(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[3] = "(";
  void v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for AppResolver(319LL);
  if (v3 <= 0x3F)
  {
    void v4[5] = *(void *)(result - 8) + 64LL;
    v4[6] = &unk_328078;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t outlined destroy of PhoneAppResolutionLogging?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneAppResolutionLogging?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_12A688()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_0_55(void *a1)
{
  return v1;
}

uint64_t OUTLINED_FUNCTION_7_53( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)( v14,  v16,  v13,  v12,  v11,  v9,  v10,  v15,  a9);
}

uint64_t OUTLINED_FUNCTION_15_36(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2, 0LL);
}

uint64_t OUTLINED_FUNCTION_16_29(uint64_t a1, uint64_t a2)
{
  return outlined init with copy of SignalProviding(v2, a2);
}

void OUTLINED_FUNCTION_17_35(uint64_t a1, uint64_t a2)
{
}

void OUTLINED_FUNCTION_19_26(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - outlined init with take of AppSelectionSignalComponent(v2, v1 + 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_22_26( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return swift_arrayDestroy(a12, 1LL);
}

uint64_t OUTLINED_FUNCTION_34_20()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_42_14()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_46_15()
{
  return v0(v1, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_52_11( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  return outlined init with copy of SignalProviding((uint64_t)&a14, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_53_14()
{
  return swift_bridgeObjectRelease(v0);
}

void OUTLINED_FUNCTION_56_12()
{
}

uint64_t IdiomKeyedHintHistory<>.hintCount(deviceState:)(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  int v5 = DeviceState.idiom.getter(v3, v4);
  uint64_t result = specialized Dictionary.subscript.getter(v5, a2);
  if ((v7 & 1) != 0) {
    return 0LL;
  }
  return result;
}

uint64_t IdiomKeyedHintHistory<>.incrementHintCount(deviceState:)(void *a1)
{
  uint64_t v3 = *v1;
  int v4 = OUTLINED_FUNCTION_0_56(a1);
  uint64_t result = specialized Dictionary.subscript.getter(v4, v3);
  if ((v6 & 1) != 0) {
    uint64_t v7 = 0LL;
  }
  else {
    uint64_t v7 = result;
  }
  if (__OFADD__(v7, 1LL))
  {
    __break(1u);
  }

  else
  {
    OUTLINED_FUNCTION_0_56(a1);
    return specialized Dictionary._Variant.setValue(_:forKey:)();
  }

  return result;
}

unint64_t OneTimeHintHistory.description.getter()
{
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  v2._uint64_t countAndFlagsBits = 32010LL;
  v2._object = (void *)0xE200000000000000LL;
  String.append(_:)(v2);
  return 0xD000000000000011LL;
}

uint64_t OneTimeHintHistory.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E756F43746E6968LL && a2 == 0xE900000000000074LL)
  {
    swift_bridgeObjectRelease(0xE900000000000074LL);
    char v5 = 0;
  }

  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E756F43746E6968LL, 0xE900000000000074LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    char v5 = v4 ^ 1;
  }

  return v5 & 1;
}

uint64_t OneTimeHintHistory.CodingKeys.stringValue.getter()
{
  return 0x6E756F43746E6968LL;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance OneTimeHintHistory.CodingKeys@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = OneTimeHintHistory.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance OneTimeHintHistory.CodingKeys()
{
  return AnnounceVoicemailDirectAction.CodingKeys.intValue.getter();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance OneTimeHintHistory.CodingKeys@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = CallingIntentContinueInAppStrategy.shouldCheckResponseModeToOutputIntentHandledDialog.getter();
  *a1 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance OneTimeHintHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance OneTimeHintHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t OneTimeHintHistory.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<OneTimeHintHistory.CodingKeys>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_400708, &unk_400708, v10, v8, v9);
  KeyedEncodingContainer.encode(_:forKey:)(a2, v11, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *OneTimeHintHistory.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<OneTimeHintHistory.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v10 = lazy protocol witness table accessor for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys();
  uint64_t v11 = dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_400708, &unk_400708, v10, v7, v8);
  if (!v1)
  {
    uint64_t v9 = (void *)KeyedDecodingContainer.decode(_:forKey:)(v11, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

void protocol witness for SiriPhoneDefaultsCodable.init() in conformance OneTimeHintHistory(void *a1@<X8>)
{
  *a1 = 0LL;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance OneTimeHintHistory()
{
  return OneTimeHintHistory.description.getter();
}

void *protocol witness for Decodable.init(from:) in conformance OneTimeHintHistory@<X0>( void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = OneTimeHintHistory.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance OneTimeHintHistory(void *a1)
{
  return OneTimeHintHistory.encode(to:)(a1, *v1);
}

unint64_t lazy protocol witness table accessor for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OneTimeHintHistory.CodingKeys, &unk_400708);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OneTimeHintHistory.CodingKeys, &unk_400708);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable("Ʌ\r", &unk_400708);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OneTimeHintHistory.CodingKeys, &unk_400708);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OneTimeHintHistory.CodingKeys and conformance OneTimeHintHistory.CodingKeys);
  }

  return result;
}

unint64_t instantiation function for generic protocol witness table for OneTimeHintHistory( void *a1)
{
  a1[1] = lazy protocol witness table accessor for type OneTimeHintHistory and conformance OneTimeHintHistory();
  a1[2] = lazy protocol witness table accessor for type OneTimeHintHistory and conformance OneTimeHintHistory();
  unint64_t result = lazy protocol witness table accessor for type OneTimeHintHistory and conformance OneTimeHintHistory();
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for OneTimeHintHistory( uint64_t a1)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = lazy protocol witness table accessor for type OneTimeHintHistory and conformance OneTimeHintHistory();
  unint64_t result = lazy protocol witness table accessor for type OneTimeHintHistory and conformance OneTimeHintHistory();
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for OneTimeHintHistory()
{
  return &type metadata for OneTimeHintHistory;
}

uint64_t storeEnumTagSinglePayload for OneTimeHintHistory.CodingKeys(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_12AE80 + 4 * byte_328090[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_12AEA0 + 4 * byte_328095[v4]))();
  }
}

_BYTE *sub_12AE80(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_12AEA0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_12AEA8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_12AEB0(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_12AEB8(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_12AEC0(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void *type metadata accessor for OneTimeHintHistory.CodingKeys()
{
  return &unk_400708;
}

uint64_t OUTLINED_FUNCTION_0_56(void *a1)
{
  return DeviceState.idiom.getter(v1, v2);
}

char **PhoneSignpost.searchForBurstVoicemails.unsafeMutableAddressor()
{
  return &static PhoneSignpost.searchForBurstVoicemails;
}

char **PhoneSignpost.nLv4SettingsForCallControlNLIntent.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4SettingsForCallControlNLIntent;
}

char **PhoneSignpost.nLv3TransformNLIntent.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv3TransformNLIntent;
}

char **PhoneSignpost.nLv4TransformNLIntent.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformNLIntent;
}

char **PhoneSignpost.announceVoicemailBurstUpdate.unsafeMutableAddressor()
{
  return &static PhoneSignpost.announceVoicemailBurstUpdate;
}

char **PhoneSignpost.findApp.unsafeMutableAddressor()
{
  return &static PhoneSignpost.findApp;
}

char **PhoneSignpost.skTransformer.unsafeMutableAddressor()
{
  return &static PhoneSignpost.skTransformer;
}

char **PhoneSignpost.skTransformerForIntent.unsafeMutableAddressor()
{
  return &static PhoneSignpost.skTransformerForIntent;
}

char **PhoneSignpost.resolveCRR.unsafeMutableAddressor()
{
  return &static PhoneSignpost.resolveCRR;
}

uint64_t static Signpost.wrap<A>(_:around:)@<X0>( const char *a1@<X0>, __int16 a2@<W2>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v34 = v11 - v10;
  uint64_t v12 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for OSSignposter(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = __swift_project_value_buffer(v16, (uint64_t)static OSSignposter.siriPhone);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v5, v18, v16);
  uint64_t v20 = OSSignposter.logHandle.getter(v19);
  uint64_t result = OSSignpostID.init(log:)(v20);
  uint64_t v35 = a4;
  uint64_t v28 = v9;
  if ((a2 & 1) != 0)
  {
LABEL_6:
    if ((unint64_t)a1 >> 32)
    {
      __break(1u);
    }

    else
    {
      if (a1 >> 11 == 27)
      {
LABEL_21:
        __break(1u);
        return result;
      }

      if (a1 >> 16 <= 0x10)
      {
        a1 = &v38;
        goto LABEL_10;
      }
    }

    __break(1u);
    goto LABEL_21;
  }

  if (!a1)
  {
    __break(1u);
    goto LABEL_6;
  }

char **PhoneSignpost.resolveCRRFaceTime.unsafeMutableAddressor()
{
  return &static PhoneSignpost.resolveCRRFaceTime;
}

void static Signpost.emitSyntheticInterval(_:beginTimestamp:)()
{
  uint64_t v42 = v2;
  uint64_t v43 = v1;
  __int16 v4 = v3;
  uint64_t v5 = OUTLINED_FUNCTION_11_44();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_6_4();
  __chkstk_darwin();
  uint64_t v8 = (char *)v40 - v7;
  uint64_t v9 = OUTLINED_FUNCTION_6_49();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  __swift_project_value_buffer(v9, (uint64_t)static OSSignposter.siriPhone);
  uint64_t v10 = OUTLINED_FUNCTION_31_23();
  uint64_t v12 = v11(v10);
  uint64_t v13 = OSSignposter.logHandle.getter(v12);
  OSSignpostID.init(log:)(v13);
  lazy protocol witness table accessor for type UInt64 and conformance UInt64();
  uint64_t v14 = default argument 1 of OSLogInterpolation.appendInterpolation<A>(_:format:align:privacy:attributes:)();
  uint64_t v18 = (void *)OUTLINED_FUNCTION_35_21(v14, v15, v16, v17);
  int v41 = static os_signpost_type_t.event.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v19 = v0;
  __int16 v20 = v4;
  if ((v4 & 1) == 0)
  {
    if (!v43)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      OUTLINED_FUNCTION_23_26();
LABEL_19:
      OUTLINED_FUNCTION_7_5();
      return;
    }

char **PhoneSignpost.resolveCRRFaceTimeHandleType.unsafeMutableAddressor()
{
  return &static PhoneSignpost.resolveCRRFaceTimeHandleType;
}

void static Signpost.event(_:number1:)()
{
  uint64_t v42 = v0;
  uint64_t v43 = v1;
  unint64_t v3 = v2;
  unsigned __int16 v5 = v4;
  uint64_t v45 = v6;
  uint64_t v7 = OUTLINED_FUNCTION_11_44();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_14_33(v9, v39[0]);
  __chkstk_darwin();
  uint64_t v11 = (char *)v39 - v10;
  uint64_t v12 = OUTLINED_FUNCTION_6_49();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  __swift_project_value_buffer(v12, (uint64_t)static OSSignposter.siriPhone);
  uint64_t v13 = OUTLINED_FUNCTION_31_23();
  uint64_t v15 = v14(v13);
  uint64_t v16 = OSSignposter.logHandle.getter(v15);
  OSSignpostID.init(log:)(v16);
  lazy protocol witness table accessor for type UInt and conformance UInt();
  OUTLINED_FUNCTION_33_29(v3);
  uint64_t v17 = default argument 1 of OSLogInterpolation.appendInterpolation<A>(_:format:align:privacy:attributes:)();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_35_21(v17, v18, v19, v20);
  int v41 = static os_signpost_type_t.event.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
    goto LABEL_7;
  }
  int v40 = v5;
  if ((v5 & 1) == 0)
  {
    if (!v45)
    {
      OUTLINED_FUNCTION_12_48(v3);
      __break(1u);
LABEL_7:

      OUTLINED_FUNCTION_12_48(v3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      OUTLINED_FUNCTION_24_21();
LABEL_19:
      OUTLINED_FUNCTION_7_5();
      return;
    }

char **PhoneSignpost.resolveCRRFaceTimeUndefined.unsafeMutableAddressor()
{
  return &static PhoneSignpost.resolveCRRFaceTimeUndefined;
}

char **PhoneSignpost.appsToDisambiguate.unsafeMutableAddressor()
{
  return &static PhoneSignpost.appsToDisambiguate;
}

uint64_t one-time initialization function for siriPhone()
{
  uint64_t v5 = v4 - v3;
  uint64_t v6 = OUTLINED_FUNCTION_6_49();
  __swift_allocate_value_buffer(v6, static OSSignposter.siriPhone);
  __swift_project_value_buffer(v6, (uint64_t)static OSSignposter.siriPhone);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v5, v7, v0);
  return OSSignposter.init(logger:)(v5);
}

uint64_t OSSignposter.siriPhone.unsafeMutableAddressor()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v0 = OUTLINED_FUNCTION_6_49();
  return __swift_project_value_buffer(v0, (uint64_t)static OSSignposter.siriPhone);
}

uint64_t static OSSignposter.siriPhone.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_6_49();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static OSSignposter.siriPhone);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v3, v2);
}

void PhoneSignpost.enableTelemetry.getter()
{
}

  ;
}

void static Signpost.begin(_:message:)()
{
  unint64_t v1 = v0;
  uint64_t v38 = v2;
  int v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = OUTLINED_FUNCTION_11_44();
  uint64_t v42 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_14_33(v10, (uint64_t)v32);
  __chkstk_darwin();
  os_signpost_id_t v39 = (char *)&v32 - v11;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = OUTLINED_FUNCTION_6_49();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  __swift_project_value_buffer(v14, (uint64_t)static OSSignposter.siriPhone);
  uint64_t v40 = v15;
  uint64_t v16 = OUTLINED_FUNCTION_22_27(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  OSSignposter.logHandle.getter(v16);
  OUTLINED_FUNCTION_30_21();
  uint64_t v17 = swift_bridgeObjectRetain_n(v1, 2LL);
  uint64_t v18 = (void *)OSSignposter.logHandle.getter(v17);
  int v37 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
  {
    OUTLINED_FUNCTION_7_4(v1);

    uint64_t v19 = v42;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v41, v13, v9);
LABEL_19:
    uint64_t v31 = OUTLINED_FUNCTION_36_16();
    OUTLINED_FUNCTION_15_2(v31);
    OUTLINED_FUNCTION_10_44();
    OUTLINED_FUNCTION_37_1(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    OUTLINED_FUNCTION_21_27(v40);
    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v35 = v8;
  uint64_t v36 = v6;
  int v34 = v4;
  if ((v4 & 1) != 0)
  {
    if ((unint64_t)v8 >> 32)
    {
      __break(1u);
    }

    else
    {
      if (v8 >> 11 == 27)
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }

      if (v8 >> 16 <= 0x10)
      {
        uint64_t v32 = (const char *)&v45;
        goto LABEL_12;
      }
    }

    __break(1u);
    goto LABEL_22;
  }

  if (v8)
  {
    uint64_t v32 = v8;
LABEL_12:
    uint64_t v20 = v38;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    v33(v39, v13, v9);
    uint64_t v21 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v44 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v1, &v44);
    uint64_t v38 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 4);
    OUTLINED_FUNCTION_32_10(v1);
    *(_WORD *)(v21 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    if ((v34 & 0x100) != 0) {
      uint64_t v23 = " enableTelemetry=YES";
    }
    else {
      uint64_t v23 = "";
    }
    if ((v34 & 0x100) != 0) {
      uint64_t v24 = 20LL;
    }
    else {
      uint64_t v24 = 0LL;
    }
    uint64_t v25 = OUTLINED_FUNCTION_17_36((uint64_t)v23, v24);
    uint64_t v43 = OUTLINED_FUNCTION_16_30(v25, v26);
    uint64_t v27 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 14);
    uint64_t v28 = swift_bridgeObjectRelease();
    uint64_t v29 = v39;
    os_signpost_id_t v30 = OSSignpostID.rawValue.getter(v28);
    _os_signpost_emit_with_name_impl( &dword_0,  (os_log_t)v18,  (os_signpost_type_t)v37,  v30,  v32,  "%s%s",  (uint8_t *)v21,  0x16u);
    swift_arrayDestroy(v22, 2LL);
    OUTLINED_FUNCTION_0_2(v22);
    OUTLINED_FUNCTION_0_2(v21);

    uint64_t v19 = v42;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v27);
    v33(v41, v13, v27);
    goto LABEL_19;
  }

void static Signpost.event(_:)()
{
  __int16 v4 = v3;
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_11_44();
  OUTLINED_FUNCTION_38_19();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_6_4();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - v9;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_6_49();
  __swift_project_value_buffer(v11, (uint64_t)static OSSignposter.siriPhone);
  uint64_t v12 = OUTLINED_FUNCTION_32_22();
  uint64_t v13 = OSSignpostID.init(log:)(v12);
  uint64_t v14 = (void *)OSSignposter.logHandle.getter(v13);
  int v15 = static os_signpost_type_t.event.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
  {

    OUTLINED_FUNCTION_0_14(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
LABEL_19:
    OUTLINED_FUNCTION_7_5();
    return;
  }

  __int16 v16 = v4;
  int v32 = v15;
  if ((v4 & 1) == 0)
  {
    if (v6)
    {
      uint64_t v31 = v6;
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v1, v10, v0);
      uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v18 = OUTLINED_FUNCTION_7_0(32LL);
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v33 = v18;
      if ((v16 & 0x100) != 0) {
        uint64_t v19 = " enableTelemetry=YES";
      }
      else {
        uint64_t v19 = "";
      }
      if ((v16 & 0x100) != 0) {
        uint64_t v20 = 20LL;
      }
      else {
        uint64_t v20 = 0LL;
      }
      uint64_t v21 = OUTLINED_FUNCTION_17_36((uint64_t)v19, v20);
      unint64_t v23 = v22;
      uint64_t v24 = OUTLINED_FUNCTION_16_30(v21, v22);
      uint64_t v25 = OUTLINED_FUNCTION_15_15(v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v25, v26, v17 + 4, v17 + 12);
      uint64_t v27 = swift_bridgeObjectRelease(v23);
      os_signpost_id_t v28 = OSSignpostID.rawValue.getter(v27);
      _os_signpost_emit_with_name_impl(&dword_0, (os_log_t)v14, (os_signpost_type_t)v32, v28, v31, "%s", v17, 0xCu);
      OUTLINED_FUNCTION_17_0(v18);
      OUTLINED_FUNCTION_0_2(v18);
      OUTLINED_FUNCTION_0_2((uint64_t)v17);

      uint64_t v29 = *(void (**)(char *, uint64_t))(v2 + 8);
      v29(v10, v0);
      v29(v1, v0);
      goto LABEL_19;
    }

    __break(1u);
    goto LABEL_21;
  }

  if ((unint64_t)v6 >> 32)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  if (v6 >> 11 != 27)
  {
    if (v6 >> 16 <= 0x10)
    {
      uint64_t v31 = (const char *)&v34;
      goto LABEL_12;
    }

    goto LABEL_22;
  }

uint64_t default argument 1 of OSLogInterpolation.appendInterpolation<A>(_:format:align:privacy:attributes:)()
{
  return static OSLogIntegerFormatting.decimal.getter();
}

uint64_t Signpost.OpenSignpost.signpost.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

char **PhoneSignpost.makeFlow.unsafeMutableAddressor()
{
  return &static PhoneSignpost.makeFlow;
}

void static PhoneSignpost.makeFlow.getter()
{
}

void static PhoneSignpost.findApp.getter()
{
}

char **PhoneSignpost.entitlementCheckWithRBS.unsafeMutableAddressor()
{
  return &static PhoneSignpost.entitlementCheckWithRBS;
}

void static PhoneSignpost.entitlementCheckWithRBS.getter()
{
}

char **PhoneSignpost.pluginWarmup.unsafeMutableAddressor()
{
  return &static PhoneSignpost.pluginWarmup;
}

void static PhoneSignpost.pluginWarmup.getter()
{
}

void static PhoneSignpost.skTransformer.getter()
{
}

void static PhoneSignpost.skTransformerForIntent.getter()
{
}

char **PhoneSignpost.startCallDelegatePrewarm.unsafeMutableAddressor()
{
  return &static PhoneSignpost.startCallDelegatePrewarm;
}

void static PhoneSignpost.startCallDelegatePrewarm.getter()
{
}

char **PhoneSignpost.makeAceViewProvider.unsafeMutableAddressor()
{
  return &static PhoneSignpost.makeAceViewProvider;
}

void static PhoneSignpost.makeAceViewProvider.getter()
{
}

char **PhoneSignpost.makeNLContextProvider.unsafeMutableAddressor()
{
  return &static PhoneSignpost.makeNLContextProvider;
}

void static PhoneSignpost.makeNLContextProvider.getter()
{
}

char **PhoneSignpost.makeDialogTemplating.unsafeMutableAddressor()
{
  return &static PhoneSignpost.makeDialogTemplating;
}

void static PhoneSignpost.makeDialogTemplating.getter()
{
}

char **PhoneSignpost.meCardFetch.unsafeMutableAddressor()
{
  return &static PhoneSignpost.meCardFetch;
}

void static PhoneSignpost.meCardFetch.getter()
{
}

char **PhoneSignpost.fetchContactById.unsafeMutableAddressor()
{
  return &static PhoneSignpost.fetchContactById;
}

void static PhoneSignpost.fetchContactById.getter()
{
}

char **PhoneSignpost.fetchContactByHandle.unsafeMutableAddressor()
{
  return &static PhoneSignpost.fetchContactByHandle;
}

void static PhoneSignpost.fetchContactByHandle.getter()
{
}

char **PhoneSignpost.labelMapping.unsafeMutableAddressor()
{
  return &static PhoneSignpost.labelMapping;
}

void static PhoneSignpost.labelMapping.getter()
{
}

char **PhoneSignpost.idiomSensitiveViewBuilder.unsafeMutableAddressor()
{
  return &static PhoneSignpost.idiomSensitiveViewBuilder;
}

void static PhoneSignpost.idiomSensitiveViewBuilder.getter()
{
}

char **PhoneSignpost.resolveEntitySRR.unsafeMutableAddressor()
{
  return &static PhoneSignpost.resolveEntitySRR;
}

void static PhoneSignpost.resolveEntitySRR.getter()
{
}

char **PhoneSignpost.convertDataSRR.unsafeMutableAddressor()
{
  return &static PhoneSignpost.convertDataSRR;
}

void static PhoneSignpost.convertDataSRR.getter()
{
}

char **PhoneSignpost.lazyContainerLazyInit.unsafeMutableAddressor()
{
  return &static PhoneSignpost.lazyContainerLazyInit;
}

void static PhoneSignpost.lazyContainerLazyInit.getter()
{
}

char **PhoneSignpost.templatingOperationManager.unsafeMutableAddressor()
{
  return &static PhoneSignpost.templatingOperationManager;
}

void static PhoneSignpost.templatingOperationManager.getter()
{
}

char **PhoneSignpost.templatingOperation.unsafeMutableAddressor()
{
  return &static PhoneSignpost.templatingOperation;
}

void static PhoneSignpost.templatingOperation.getter()
{
}

char **PhoneSignpost.callCancel.unsafeMutableAddressor()
{
  return &static PhoneSignpost.callCancel;
}

void static PhoneSignpost.callCancel.getter()
{
}

char **PhoneSignpost.makeInterstitialDialog.unsafeMutableAddressor()
{
  return &static PhoneSignpost.makeInterstitialDialog;
}

void static PhoneSignpost.makeInterstitialDialog.getter()
{
}

char **PhoneSignpost.parameterPrompt.unsafeMutableAddressor()
{
  return &static PhoneSignpost.parameterPrompt;
}

void static PhoneSignpost.parameterPrompt.getter()
{
}

char **PhoneSignpost.parameterConfirmation.unsafeMutableAddressor()
{
  return &static PhoneSignpost.parameterConfirmation;
}

void static PhoneSignpost.parameterConfirmation.getter()
{
}

char **PhoneSignpost.parameterDisambiguation.unsafeMutableAddressor()
{
  return &static PhoneSignpost.parameterDisambiguation;
}

void static PhoneSignpost.parameterDisambiguation.getter()
{
}

char **PhoneSignpost.parameterUnsupported.unsafeMutableAddressor()
{
  return &static PhoneSignpost.parameterUnsupported;
}

void static PhoneSignpost.parameterUnsupported.getter()
{
}

char **PhoneSignpost.intentConfirmation.unsafeMutableAddressor()
{
  return &static PhoneSignpost.intentConfirmation;
}

void static PhoneSignpost.intentConfirmation.getter()
{
}

char **PhoneSignpost.intentHandled.unsafeMutableAddressor()
{
  return &static PhoneSignpost.intentHandled;
}

void static PhoneSignpost.intentHandled.getter()
{
}

char **PhoneSignpost.intentHandledHelper.unsafeMutableAddressor()
{
  return &static PhoneSignpost.intentHandledHelper;
}

void static PhoneSignpost.intentHandledHelper.getter()
{
}

char **PhoneSignpost.emergencyContactResolution.unsafeMutableAddressor()
{
  return &static PhoneSignpost.emergencyContactResolution;
}

void static PhoneSignpost.emergencyContactResolution.getter()
{
}

void static PhoneSignpost.resolveCRR.getter()
{
}

void static PhoneSignpost.resolveCRRFaceTime.getter()
{
}

void static PhoneSignpost.resolveCRRFaceTimeHandleType.getter()
{
}

void static PhoneSignpost.resolveCRRFaceTimeUndefined.getter()
{
}

char **PhoneSignpost.updateSiriKitIntentContactResolution.unsafeMutableAddressor()
{
  return &static PhoneSignpost.updateSiriKitIntentContactResolution;
}

void static PhoneSignpost.updateSiriKitIntentContactResolution.getter()
{
}

void static PhoneSignpost.announceVoicemailBurstUpdate.getter()
{
}

void static PhoneSignpost.searchForBurstVoicemails.getter()
{
}

char **PhoneSignpost.fetchCallState.unsafeMutableAddressor()
{
  return &static PhoneSignpost.fetchCallState;
}

void static PhoneSignpost.fetchCallState.getter()
{
}

char **PhoneSignpost.NLv3PlusServerConversion.unsafeMutableAddressor()
{
  return &static PhoneSignpost.NLv3PlusServerConversion;
}

void static PhoneSignpost.NLv3PlusServerConversion.getter()
{
}

char **PhoneSignpost.transformSiriPhoneContactToINPerson.unsafeMutableAddressor()
{
  return &static PhoneSignpost.transformSiriPhoneContactToINPerson;
}

void static PhoneSignpost.transformSiriPhoneContactToINPerson.getter()
{
}

void static PhoneSignpost.nLv3TransformNLIntent.getter()
{
}

char **PhoneSignpost.nLv3TransformPhoneCallNLIntentToTTYType.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv3TransformPhoneCallNLIntentToTTYType;
}

void static PhoneSignpost.nLv3TransformPhoneCallNLIntentToTTYType.getter()
{
}

char **PhoneSignpost.nLv3TransformIncomingCallIntentResponseToInput.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv3TransformIncomingCallIntentResponseToInput;
}

void static PhoneSignpost.nLv3TransformIncomingCallIntentResponseToInput.getter()
{
}

void static PhoneSignpost.nLv4TransformNLIntent.getter()
{
}

void static PhoneSignpost.nLv4SettingsForCallControlNLIntent.getter()
{
}

char **PhoneSignpost.nLv4TransformIncomingCall.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformIncomingCall;
}

void static PhoneSignpost.nLv4TransformIncomingCall.getter()
{
}

char **PhoneSignpost.nLv4FindPositionReference.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4FindPositionReference;
}

void static PhoneSignpost.nLv4FindPositionReference.getter()
{
}

char **PhoneSignpost.nLv4CreateNLIntent.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4CreateNLIntent;
}

void static PhoneSignpost.nLv4CreateNLIntent.getter()
{
}

char **PhoneSignpost.nLv4TransformerInputToPhoneCallNLIntent.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformerInputToPhoneCallNLIntent;
}

void static PhoneSignpost.nLv4TransformerInputToPhoneCallNLIntent.getter()
{
}

char **PhoneSignpost.nLv4TransformIncomingCallIntentResponseToInput.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformIncomingCallIntentResponseToInput;
}

void static PhoneSignpost.nLv4TransformIncomingCallIntentResponseToInput.getter()
{
}

char **PhoneSignpost.nLv4TransformUserDialogActToUserDialogActParse.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformUserDialogActToUserDialogActParse;
}

void static PhoneSignpost.nLv4TransformUserDialogActToUserDialogActParse.getter()
{
}

char **PhoneSignpost.nLv4ToPhoneCallAudioRoute.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4ToPhoneCallAudioRoute;
}

void static PhoneSignpost.nLv4ToPhoneCallAudioRoute.getter()
{
}

char **PhoneSignpost.nLv4TransformUsoTaskToPhoneCallAudioRoute.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformUsoTaskToPhoneCallAudioRoute;
}

void static PhoneSignpost.nLv4TransformUsoTaskToPhoneCallAudioRoute.getter()
{
}

char **PhoneSignpost.nLv4TransformUsoTaskToTargetContacts.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformUsoTaskToTargetContacts;
}

void static PhoneSignpost.nLv4TransformUsoTaskToTargetContacts.getter()
{
}

char **PhoneSignpost.nLv4GetINPersonsFromAgents.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4GetINPersonsFromAgents;
}

void static PhoneSignpost.nLv4GetINPersonsFromAgents.getter()
{
}

char **PhoneSignpost.nLv4TransformUsoTaskToPhoneCallVerb.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformUsoTaskToPhoneCallVerb;
}

void static PhoneSignpost.nLv4TransformUsoTaskToPhoneCallVerb.getter()
{
}

char **PhoneSignpost.nLv4TransformUsoTaskToVoicemailVerb.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformUsoTaskToVoicemailVerb;
}

void static PhoneSignpost.nLv4TransformUsoTaskToVoicemailVerb.getter()
{
}

char **PhoneSignpost.nLv4TransformPhoneNumberToUsoTask.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformPhoneNumberToUsoTask;
}

void static PhoneSignpost.nLv4TransformPhoneNumberToUsoTask.getter()
{
}

char **PhoneSignpost.nLv4TransformContactAddressToPersonHandle.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformContactAddressToPersonHandle;
}

void static PhoneSignpost.nLv4TransformContactAddressToPersonHandle.getter()
{
}

char **PhoneSignpost.nLv4CheckUnsupported.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4CheckUnsupported;
}

void static PhoneSignpost.nLv4CheckUnsupported.getter()
{
}

char **PhoneSignpost.nLv4TransformUsoTaskToSiriPhoneContacts.unsafeMutableAddressor()
{
  return &static PhoneSignpost.nLv4TransformUsoTaskToSiriPhoneContacts;
}

void static PhoneSignpost.nLv4TransformUsoTaskToSiriPhoneContacts.getter()
{
}

char **PhoneSignpost.appSelectionSignalCollection.unsafeMutableAddressor()
{
  return &static PhoneSignpost.appSelectionSignalCollection;
}

void static PhoneSignpost.appSelectionSignalCollection.getter()
{
}

char **PhoneSignpost.findEligibleAppsForIntent.unsafeMutableAddressor()
{
  return &static PhoneSignpost.findEligibleAppsForIntent;
}

void static PhoneSignpost.findEligibleAppsForIntent.getter()
{
}

char **PhoneSignpost.appFinderListApps.unsafeMutableAddressor()
{
  return &static PhoneSignpost.appFinderListApps;
}

void static PhoneSignpost.appFinderListApps.getter()
{
}

void static PhoneSignpost.appsToDisambiguate.getter()
{
}

char **PhoneSignpost.executeSmartAppSelect.unsafeMutableAddressor()
{
  return &static PhoneSignpost.executeSmartAppSelect;
}

void static PhoneSignpost.executeSmartAppSelect.getter()
{
}

char **PhoneSignpost.unnamed.unsafeMutableAddressor()
{
  return &static PhoneSignpost.unnamed;
}

void static PhoneSignpost.unnamed.getter()
{
}

void closure #1 in OSSignposter.withIntervalSignpost<A>(_:id:_:around:)( uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t (*a7)(void))
{
  uint64_t v11 = (os_log_s *)OSSignposter.logHandle.getter();
  os_signpost_type_t v12 = static os_signpost_type_t.begin.getter();
  os_signpost_id_t v13 = OSSignpostID.rawValue.getter();
  uint64_t v17 = a5;
  _os_signpost_emit_with_name_impl(&dword_0, v11, v12, v13, a5, a6, a1, a2);
  uint64_t v14 = a7();
  if (!v19)
  {
    os_signpost_type_t v15 = static os_signpost_type_t.end.getter(v14);
    os_signpost_id_t v16 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v11, v15, v16, v17, a6, a1, a2);
  }
}

unint64_t lazy protocol witness table accessor for type UInt64 and conformance UInt64()
{
  unint64_t result = lazy protocol witness table cache variable for type UInt64 and conformance UInt64;
  if (!lazy protocol witness table cache variable for type UInt64 and conformance UInt64)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UInt64, &type metadata for UInt64);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UInt64 and conformance UInt64);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type UInt and conformance UInt()
{
  unint64_t result = lazy protocol witness table cache variable for type UInt and conformance UInt;
  if (!lazy protocol witness table cache variable for type UInt and conformance UInt)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UInt, &type metadata for UInt);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UInt and conformance UInt);
  }

  return result;
}

void type metadata accessor for Signpost()
{
}

uint64_t initializeWithCopy for Signpost.OpenSignpost(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)a1 = *a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(_OWORD *)(a2 + 1);
  *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for Signpost.OpenSignpost(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = *((_BYTE *)a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for Signpost.OpenSignpost(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + Hasher._combine(_:)(v1 & 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = *((_BYTE *)a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for Signpost.OpenSignpost(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 26))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Signpost.OpenSignpost(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
    *(void *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0LL;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 26) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for Signpost.OpenSignpost()
{
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PhoneSignpost(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneSignpost(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 1__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 1__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 1__swift_destroy_boxed_opaque_existential_1(v0 + 7) = a2 + 1;
    }
  }

  return result;
}

void type metadata accessor for PhoneSignpost()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_6_49()
{
  return type metadata accessor for OSSignposter(0LL);
}

uint64_t OUTLINED_FUNCTION_10_44()
{
  return OSSignpostIntervalState.init(id:isOpen:)(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_11_44()
{
  return type metadata accessor for OSSignpostID(0LL);
}

uint64_t OUTLINED_FUNCTION_12_48(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 4LL);
}

uint64_t OUTLINED_FUNCTION_13_47()
{
  return v0 - 104;
}

void OUTLINED_FUNCTION_14_33(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_15_37(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_16_30(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_17_36(uint64_t a1, uint64_t a2)
{
  return StaticString.description.getter(a1, a2, 2LL);
}

uint64_t OUTLINED_FUNCTION_22_27@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a1(v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_23_26()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_24_21()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_30_21()
{
  return OSSignpostID.init(log:)();
}

uint64_t OUTLINED_FUNCTION_31_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_22()
{
  return OSSignposter.logHandle.getter();
}

uint64_t OUTLINED_FUNCTION_33_29(uint64_t a1)
{
  return swift_bridgeObjectRetain_n(a1, 4LL);
}

uint64_t OUTLINED_FUNCTION_35_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = outlined consume of (@escaping @callee_guaranteed () -> ())?(a3, a4);
  return OSSignposter.logHandle.getter(v4);
}

uint64_t OUTLINED_FUNCTION_36_16()
{
  return type metadata accessor for OSSignpostIntervalState(0LL);
}

  ;
}

uint64_t key path setter for IntentConversionFlow.input : <A>IntentConversionFlow<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Input(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 160LL))(v6);
}

void IntentConversionFlow.input.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + direct field offset for IntentConversionFlow.input;
  OUTLINED_FUNCTION_25_0(v3, (uint64_t)v5, 0LL);
  uint64_t v4 = OUTLINED_FUNCTION_3_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
  OUTLINED_FUNCTION_60_2();
}

void IntentConversionFlow.input.setter(uint64_t a1)
{
  uint64_t v3 = v1 + direct field offset for IntentConversionFlow.input;
  OUTLINED_FUNCTION_25_0(v3, (uint64_t)v5, 33LL);
  uint64_t v4 = OUTLINED_FUNCTION_3_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(v3, a1, v4);
  swift_endAccess(v5);
  OUTLINED_FUNCTION_60_2();
}

uint64_t (*IntentConversionFlow.input.modify(uint64_t a1))()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t IntentConversionFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + direct field offset for IntentConversionFlow.sharedGlobals, a1);
}

uint64_t IntentConversionFlow.__allocating_init(input:app:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v7 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  IntentConversionFlow.init(input:app:sharedGlobals:)(a1, a2, a3, v8);
  return v7;
}

uint64_t *IntentConversionFlow.init(input:app:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  void v4[2] = 0LL;
  uint64_t v9 = (uint64_t *)((char *)v4 + direct field offset for IntentConversionFlow.logPrefix);
  *uint64_t v9 = type metadata accessor for IntentConversionFlow(0LL, *(void *)(v8 + 80), (uint64_t)a3, a4);
  v9[1] = (uint64_t)&outlined read-only object #0 of IntentConversionFlow.init(input:app:sharedGlobals:);
  void v9[2] = 0LL;
  void v9[3] = 0LL;
  uint64_t v10 = (char *)v4 + direct field offset for IntentConversionFlow.input;
  uint64_t v11 = OUTLINED_FUNCTION_3_4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v10, a1, v11);
  *(uint64_t *)((char *)v4 + direct field offset for IntentConversionFlow.appResolved) = a2;
  outlined init with take of AppSelectionSignalComponent( a3,  (uint64_t)v4 + direct field offset for IntentConversionFlow.sharedGlobals);
  return v4;
}

uint64_t type metadata accessor for IntentConversionFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentConversionFlow);
}

uint64_t IntentConversionFlow.on(input:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OUTLINED_FUNCTION_3_4();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v30 - v8;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = *(void *)(v5 + 16);
  OUTLINED_FUNCTION_12_49((uint64_t)v9);
  uint64_t v12 = swift_retain();
  os_signpost_id_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
  int v16 = v15;
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v17 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v34 = v11;
    uint64_t v18 = v17;
    uint64_t v19 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v33 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v30 = v18 + 4;
    uint64_t v35 = v7;
    uint64_t v36 = a1;
    uint64_t v21 = *(void *)(v2 + direct field offset for IntentConversionFlow.logPrefix);
    uint64_t v20 = *(void *)(v2 + direct field offset for IntentConversionFlow.logPrefix + 8);
    int v32 = v16;
    uint64_t v22 = *(void *)(v2 + direct field offset for IntentConversionFlow.logPrefix + 16);
    unint64_t v23 = *(void **)(v2 + direct field offset for IntentConversionFlow.logPrefix + 24);
    uint64_t v37 = 0LL;
    unint64_t v38 = 0xE000000000000000LL;
    uint64_t v39 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_log_t v31 = v13;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v21, v20, v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = OUTLINED_FUNCTION_8_20();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v30);
    swift_release(v2);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v18 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    unint64_t v24 = lazy protocol witness table accessor for type Input and conformance Input();
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v4, v24);
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v39);
    uint64_t v7 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v18 + 14);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_48();
    os_log_t v27 = v31;
    _os_log_impl(&dword_0, v31, (os_log_type_t)v32, "%s.on: %s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy(v33, 2LL);
    OUTLINED_FUNCTION_0_2(v28);
    OUTLINED_FUNCTION_0_2(v18);
  }

  else
  {
    swift_release(v2);
    OUTLINED_FUNCTION_9_48();
  }

  OUTLINED_FUNCTION_12_49((uint64_t)v7);
  (*(void (**)(char *))(*(void *)v2 + 160LL))(v7);
  return 1LL;
}

void IntentConversionFlow.prepare(completion:)(void (*a1)(void))
{
  void *(*v27)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void v42[4];
  uint64_t v3 = *v1;
  uint64_t v36 = type metadata accessor for PrepareResponse(0LL);
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  unint64_t v38 = v5 - v4;
  uint64_t v6 = OUTLINED_FUNCTION_3_4();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v37 = v3;
  uint64_t v10 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = swift_retain();
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    uint64_t v33 = a1;
    uint64_t v15 = OUTLINED_FUNCTION_7_0(22LL);
    int v32 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v40 = v32;
    int v41 = 0LL;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v17 = *(uint64_t *)((char *)v1 + direct field offset for IntentConversionFlow.logPrefix);
    uint64_t v16 = *(uint64_t *)((char *)v1 + direct field offset for IntentConversionFlow.logPrefix + 8);
    uint64_t v18 = *(uint64_t *)((char *)v1 + direct field offset for IntentConversionFlow.logPrefix + 16);
    uint64_t v19 = *(void **)((char *)v1 + direct field offset for IntentConversionFlow.logPrefix + 24);
    v42[0] = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v17, v16, v18, v19);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39();
    int v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, 0xE000000000000000LL, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v15 + 4);
    swift_release(v1);
    OUTLINED_FUNCTION_39();
    *(_WORD *)(v15 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v20 = v37;
    uint64_t v21 = _typeName(_:qualified:)(*(void *)(v37 + 80), 0LL);
    int v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v15 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v12, v14, "%s.prepare: intent type: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v32, 2LL);
    OUTLINED_FUNCTION_0_2(v32);
    uint64_t v23 = v15;
    a1 = v33;
    OUTLINED_FUNCTION_0_2(v23);
  }

  else
  {

    swift_release(v1);
    uint64_t v20 = v3;
  }

  uint64_t v24 = *(uint64_t *)((char *)v1 + direct field offset for IntentConversionFlow.appResolved);
  uint64_t v25 = *(uint64_t *)((char *)v1 + direct field offset for IntentConversionFlow.sharedGlobals + 24);
  uint64_t v26 = *(uint64_t *)((char *)v1 + direct field offset for IntentConversionFlow.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1( (uint64_t *)((char *)v1 + direct field offset for IntentConversionFlow.sharedGlobals),  v25);
  os_log_t v27 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v26 + 80);
  swift_retain();
  uint64_t v28 = v27(&v41, v25, v26);
  (*(void (**)(void *))(*v1 + 152))(v28);
  SKTransformer.convertToSKIntent<A>(input:rchFlowContext:)(v9, v24, 0LL, 0LL, *(void *)(v20 + 80));
  uint64_t v30 = v29;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v9, v35);
  outlined destroy of SKTransformer((uint64_t)&v41);
  os_log_t v31 = (*(uint64_t (**)(uint64_t))(*v1 + 136))(v30);
  static PrepareResponse.complete()(v31);
  a1(v38);
  swift_release(v24);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v36);
  OUTLINED_FUNCTION_7_5();
}

void IntentConversionFlow.execute(completion:)(void (*a1)(void))
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = swift_retain();
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    uint64_t v28 = a1;
    os_log_type_t v14 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v27 = OUTLINED_FUNCTION_7_0(32LL);
    *(_DWORD *)os_log_type_t v14 = 136315138;
    uint64_t v25 = v14 + 4;
    uint64_t v26 = v14;
    uint64_t v15 = v2 + direct field offset for IntentConversionFlow.logPrefix;
    uint64_t v16 = v4;
    uint64_t v18 = *(void *)(v2 + direct field offset for IntentConversionFlow.logPrefix);
    uint64_t v17 = *(void *)(v2 + direct field offset for IntentConversionFlow.logPrefix + 8);
    uint64_t v24 = v2;
    uint64_t v19 = v5;
    uint64_t v21 = *(void *)(v15 + 16);
    uint64_t v20 = *(void **)(v15 + 24);
    v30[0] = 0xE000000000000000LL;
    v30[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v18;
    uint64_t v4 = v16;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v22, v17, v21, v20);
    uint64_t v5 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = OUTLINED_FUNCTION_8_20();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v25);
    swift_release(v24);
    OUTLINED_FUNCTION_62();
    _os_log_impl(&dword_0, v11, v13, "%s.execute", v26, 0xCu);
    swift_arrayDestroy(v27, 1LL);
    OUTLINED_FUNCTION_0_2(v27);
    a1 = v28;
    OUTLINED_FUNCTION_0_2((uint64_t)v26);
  }

  else
  {

    uint64_t v23 = swift_release(v2);
  }

  static ExecuteResponse.complete()(v23);
  a1(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  OUTLINED_FUNCTION_7_5();
}

uint64_t IntentConversionFlow.deinit()
{
  uint64_t v1 = v0 + direct field offset for IntentConversionFlow.input;
  uint64_t v2 = OUTLINED_FUNCTION_3_4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_release(*(void *)(v0 + direct field offset for IntentConversionFlow.appResolved));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + direct field offset for IntentConversionFlow.sharedGlobals));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39();
  return v0;
}

uint64_t IntentConversionFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.on(input:) in conformance IntentConversionFlow<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184LL))() & 1;
}

uint64_t protocol witness for Flow.execute() in conformance IntentConversionFlow<A1>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.execute()[1]);
  *(void *)(v3 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return Flow.execute()(a1, a2, a3);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance IntentConversionFlow<A>@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 128LL))();
  *a1 = result;
  return result;
}

uint64_t protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance IntentConversionFlow<A>@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding( *v1 + direct field offset for IntentConversionFlow.sharedGlobals,  a1);
}

unint64_t lazy protocol witness table accessor for type Input and conformance Input()
{
  unint64_t result = lazy protocol witness table cache variable for type Input and conformance Input;
  if (!lazy protocol witness table cache variable for type Input and conformance Input)
  {
    uint64_t v1 = type metadata accessor for Input(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Input, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input);
  }

  return result;
}

uint64_t sub_12D8AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 128LL))();
  *a2 = result;
  return result;
}

void *sub_12D8E4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_12D8F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 152LL))();
}

uint64_t type metadata completion function for IntentConversionFlow(uint64_t a1)
{
  v4[0] = "\b";
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[3] = &unk_3283C0;
    void v4[4] = &unk_3283D8;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 5LL, v4, a1 + 88);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_9_48()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_49(uint64_t a1)
{
  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_14_34()
{
  return 8LL;
}

void specialized Result<>.merge(with:behaviorAfterSpeaking:)()
{
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  outlined init with copy of Result<TemplatingResult, Error>( v2,  (uint64_t)v1,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v1, v12) == 1)
  {
    *uint64_t v6 = *v1;
    swift_storeEnumTagMultiPayload(v6, v12, 1LL);
  }

  else
  {
    OUTLINED_FUNCTION_56_4(v11, (uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    specialized closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)(v11, v4, (uint64_t)v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t specialized closure #1 in Result<>.merge(with:behaviorAfterSpeaking:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BehaviorAfterSpeaking?);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  os_log_type_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin();
  uint64_t v15 = (uint64_t *)((char *)&v24 - v14);
  outlined init with copy of Result<TemplatingResult, Error>( a2,  (uint64_t)v13,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    uint64_t *v15 = *v13;
    uint64_t v16 = 1LL;
  }

  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 32))(v10, v13, v7);
    uint64_t v17 = type metadata accessor for BehaviorAfterSpeaking(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1LL, 1LL, v17);
    TemplatingResult.merge(with:behaviorAfterSpeaking:)((uint64_t)v10, (uint64_t)v6, (uint64_t)v15);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v6,  &demangling cache variable for type metadata for BehaviorAfterSpeaking?);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v16 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v15, v11, v16);
  if (swift_getEnumCaseMultiPayload(v15, v11) == 1)
  {
    uint64_t v18 = *v15;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    uint64_t v20 = v25;
    v19(v25, a1, v7);
    swift_storeEnumTagMultiPayload(v20, v11, 0LL);
    return swift_errorRelease(v18);
  }

  else
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v8 + 32);
    uint64_t v23 = v25;
    v22(v25, v15, v7);
    return swift_storeEnumTagMultiPayload(v23, v11, 0LL);
  }

uint64_t StartCallCatTemplatingService.startCallCatFamily.getter()
{
  return OUTLINED_FUNCTION_59_12(direct field offset for StartCallCatTemplatingService.startCallCatFamily);
}

uint64_t StartCallCatTemplatingService.unsupportedFlowCats.getter()
{
  return OUTLINED_FUNCTION_59_12(direct field offset for StartCallCatTemplatingService.unsupportedFlowCats);
}

void StartCallCatTemplatingService.__allocating_init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  OUTLINED_FUNCTION_29_2();
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = (void *)v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  os_log_type_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = *(void *)(v4 + 24);
  uint64_t v16 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v17);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v20 = v19 - v18;
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  v23(v15, v13, v11, v9, v7, v20, v3, v22, v17, v16);
  OUTLINED_FUNCTION_13_19();
  __swift_destroy_boxed_opaque_existential_1(v5);
  OUTLINED_FUNCTION_119_3();
  OUTLINED_FUNCTION_7_5();
}

void StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)()
{
}

void StartCallCatTemplatingService.slotTemplating(for:)(char a1@<W0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = (uint64_t *)OUTLINED_FUNCTION_15_1();
  uint64_t v6 = *(v5 - 1);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  switch(a1)
  {
    case 2:
      OUTLINED_FUNCTION_14_35(*v2);
      OUTLINED_FUNCTION_37_21(direct field offset for StartCallCatTemplatingService.startCallCatFamily);
      OUTLINED_FUNCTION_54_11();
      specialized SlotTemplating.toAnySlotTemplating()();
      uint64_t v8 = (uint64_t *)&demangling cache variable for type metadata for DestinationTypeSlotTemplating<INStartCallIntent, INIntentResponse>;
      goto LABEL_5;
    case 3:
      OUTLINED_FUNCTION_14_35(*v2);
      OUTLINED_FUNCTION_37_21(direct field offset for StartCallCatTemplatingService.startCallCatFamily);
      OUTLINED_FUNCTION_54_11();
      specialized SlotTemplating.toAnySlotTemplating()();
      uint64_t v8 = (uint64_t *)&demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartCallIntent, INIntentResponse>;
LABEL_5:
      uint64_t v10 = &v30;
      goto LABEL_7;
    case 5:
      outlined init with copy of SharedGlobalsProviding( (uint64_t)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 40),  (uint64_t)v29);
      uint64_t v11 = *(uint64_t *)((char *)v2 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
      uint64_t v12 = OUTLINED_FUNCTION_25_1();
      uint64_t v13 = DucTemplatingService.locale.getter(v12);
      uint64_t v15 = v14;
      uint64_t v16 = type metadata accessor for AppInfoBuilder();
      uint64_t v17 = OUTLINED_FUNCTION_8_2(v16, 16LL);
      v29[11] = v16;
      v29[12] = (uint64_t)&protocol witness table for AppInfoBuilder;
      v29[5] = v11;
      v29[6] = v13;
      v29[7] = v15;
      v29[8] = v17;
      uint64_t v5 = &v30;
      specialized SlotTemplating.toAnySlotTemplating()();
      uint64_t v8 = (uint64_t *)&demangling cache variable for type metadata for ContactsSlotTemplating<INStartCallIntent, INIntentResponse>;
      uint64_t v10 = v29;
LABEL_7:
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  v8);
      goto LABEL_9;
    case 8:
      OUTLINED_FUNCTION_14_35(*v2);
      OUTLINED_FUNCTION_37_21(direct field offset for StartCallCatTemplatingService.startCallCatFamily);
      OUTLINED_FUNCTION_54_11();
      specialized SlotTemplating.toAnySlotTemplating()(v9);
      outlined destroy of CallCapabilitySlotTemplating(&v30);
      goto LABEL_9;
    case 13:
      OUTLINED_FUNCTION_14_35(*v2);
      OUTLINED_FUNCTION_37_21(direct field offset for StartCallCatTemplatingService.startCallCatFamily);
      OUTLINED_FUNCTION_54_11();
      specialized SlotTemplating.toAnySlotTemplating()(v18);
      outlined destroy of CallRecordToCallBackSlotTemplating(&v30);
LABEL_9:
      __int128 v19 = *((_OWORD *)v5 + 1);
      __int128 v20 = *((_OWORD *)v5 + 2);
      __int128 v21 = *((_OWORD *)v5 + 3);
      *a2 = *(_OWORD *)v5;
      a2[1] = v19;
      a2[2] = v20;
      a2[3] = v21;
      break;
    default:
      uint64_t v22 = v7;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v23 = __swift_project_value_buffer((uint64_t)v5, (uint64_t)static Logger.siriPhone);
      uint64_t v24 = OUTLINED_FUNCTION_56_4(v22, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
      uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v28 = OUTLINED_FUNCTION_7_0(32LL);
        v29[0] = v28;
        *(_DWORD *)uint64_t v27 = 136315138;
        uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000004DLL,  0x800000000034B0F0LL,  v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v27 + 4);
        OUTLINED_FUNCTION_57_0(&dword_0, v25, v26, "%s", v27);
        OUTLINED_FUNCTION_17_0(v28);
        OUTLINED_FUNCTION_0_2(v28);
        OUTLINED_FUNCTION_0_2((uint64_t)v27);
      }

      static SiriKitLifecycle._logCrashToEventBus(_:)(0xD00000000000004DLL, 0x800000000034B0F0LL);
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000004DLL,  0x800000000034B0F0LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
      __break(1u);
      break;
  }

uint64_t StartCallCatTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15, void (*a16)(uint64_t, uint64_t, void *, uint64_t, uint64_t, void, uint64_t (*)(), uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  a32 = v34;
  a33 = v35;
  uint64_t v37 = v36;
  uint64_t v65 = v39;
  uint64_t v66 = v38;
  uint64_t v41 = v40;
  uint64_t v67 = v42;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v47 = static Signpost.begin(_:parameterName:)((uint64_t)"ParameterConfirmation", 21LL, 2LL, v45, v43);
  uint64_t v63 = v49;
  uint64_t v64 = v48;
  __int16 v51 = v50;
  OUTLINED_FUNCTION_89_7();
  uint64_t v53 = *(void *)((char *)v33 + v52 + 24);
  uint64_t v54 = *(void *)((char *)v33 + v52 + 32);
  OUTLINED_FUNCTION_94_6((void *)((char *)v33 + v52));
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 56))(v53, v54);
  char v56 = (*(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCatTemplatingService
                                                    + *v33
                                                    + 56))( v41,  v55);
  OUTLINED_FUNCTION_50_2();
  swift_bridgeObjectRetain();
  v57._uint64_t countAndFlagsBits = v46;
  v57._object = v44;
  v58.value = PhoneCallSlotNames.init(rawValue:)(v57).value;
  StartCallCatTemplatingService.slotTemplating(for:)(v58.value, &a15);
  uint64_t v59 = OUTLINED_FUNCTION_7_54((uint64_t)&unk_4010D0);
  *(void *)(v59 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v47;
  *(void *)(v59 + 24) = v64;
  *(void *)(v59 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v63;
  *(_BYTE *)(v59 + 40) = v51;
  *(_BYTE *)(v59 + 4Hasher._combine(_:)(v1 & 1) = HIBYTE(v51) & 1;
  *(void *)(v59 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v65;
  *(void *)(v59 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v37;
  uint64_t v60 = a16;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_59();
  v60(v66, v46, v44, v67, v41, v56 & 1, partial apply for closure #1 in Signpost.OpenSignpost.end(_:), v59);
  OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_16_3();
  swift_release(a19);
  uint64_t v61 = a21;
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_5_51(v61);
}

uint64_t static Signpost.begin(_:parameterName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v7._uint64_t countAndFlagsBits = a4;
  v7._object = a5;
  String.append(_:)(v7);
  static Signpost.begin(_:message:)();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_39();
  return v9;
}

uint64_t (*Signpost.OpenSignpost.end(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6))()
{
  uint64_t v12 = OUTLINED_FUNCTION_7_54((uint64_t)&unk_4010F8);
  *(void *)(v12 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  *(void *)(v12 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(_BYTE *)(v12 + 40) = a6;
  *(_BYTE *)(v12 + 4Hasher._combine(_:)(v1 & 1) = HIBYTE(a6) & 1;
  *(void *)(v12 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  *(void *)(v12 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a2;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_95_1();
  return partial apply for closure #1 in Signpost.OpenSignpost.end(_:);
}

uint64_t StartCallCatTemplatingService.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15, uint64_t a16, uint64_t a17, void (*a18)(uint64_t, uint64_t, void *, uint64_t, uint64_t, void, uint64_t, uint64_t (*)()), uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34)
{
  a32 = v35;
  a33 = v36;
  uint64_t v38 = v37;
  uint64_t v69 = v39;
  unsigned int v68 = v40;
  uint64_t v42 = v41;
  uint64_t v66 = v43;
  uint64_t v67 = v44;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v49 = a34;
  uint64_t v50 = static Signpost.begin(_:parameterName:)((uint64_t)"ParameterDisambiguation", 23LL, 2LL, v47, v45);
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  __int16 v56 = v55;
  swift_bridgeObjectRetain();
  v57._uint64_t countAndFlagsBits = v48;
  v57._object = v46;
  v58.value = PhoneCallSlotNames.init(rawValue:)(v57).value;
  StartCallCatTemplatingService.slotTemplating(for:)(v58.value, &a15);
  uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                             + *v34
                                                             + 216))( v42,  v38,  v49);
  uint64_t v61 = v60;
  uint64_t v62 = OUTLINED_FUNCTION_7_54((uint64_t)&unk_401120);
  *(void *)(v62 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v50;
  *(void *)(v62 + 24) = v52;
  *(void *)(v62 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v54;
  *(_BYTE *)(v62 + 40) = v56;
  *(_BYTE *)(v62 + 4Hasher._combine(_:)(v1 & 1) = HIBYTE(v56) & 1;
  *(void *)(v62 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v59;
  *(void *)(v62 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v61;
  uint64_t v63 = a18;
  OUTLINED_FUNCTION_3_8();
  v63(v66, v48, v46, v67, v42, v68, v69, partial apply for closure #1 in Signpost.OpenSignpost.end(_:));
  swift_release(v62);
  swift_release(*((void *)&a15 + 1));
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_16_3();
  uint64_t v64 = a21;
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_5_51(v64);
}

uint64_t StartCallCatTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void (*a20)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, void, uint64_t (*)()), uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34)
{
  a32 = v34;
  a33 = v35;
  uint64_t v37 = v36;
  uint64_t v64 = v38;
  uint64_t v65 = v39;
  uint64_t v63 = v40;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v61 = v45;
  uint64_t v46 = a34;
  unsigned int v62 = v47 & 1;
  uint64_t v48 = static Signpost.begin(_:parameterName:)((uint64_t)"ParameterUnsupported", 20LL, 2LL, v43, v41);
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  __int16 v54 = v53;
  swift_bridgeObjectRetain();
  v55._uint64_t countAndFlagsBits = v44;
  v55._object = v42;
  v56.value = PhoneCallSlotNames.init(rawValue:)(v55).value;
  StartCallCatTemplatingService.slotTemplating(for:)(v56.value, &a15);
  uint64_t v57 = OUTLINED_FUNCTION_7_54((uint64_t)&unk_401148);
  *(void *)(v57 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v48;
  *(void *)(v57 + 24) = v50;
  *(void *)(v57 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v52;
  *(_BYTE *)(v57 + 40) = v54;
  *(_BYTE *)(v57 + 4Hasher._combine(_:)(v1 & 1) = HIBYTE(v54) & 1;
  *(void *)(v57 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v37;
  *(void *)(v57 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v46;
  PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional v58 = a20;
  OUTLINED_FUNCTION_3_8();
  swift_retain();
  v58(v61, v44, v42, v63, v64, v65, v62, partial apply for closure #1 in Signpost.OpenSignpost.end(_:));
  OUTLINED_FUNCTION_164_0();
  swift_release(*((void *)&a15 + 1));
  swift_release(a17);
  uint64_t v59 = a19;
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_38_1();
  return OUTLINED_FUNCTION_5_51(v59);
}

void StartCallCatTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:)()
{
  uint64_t v161 = v1;
  uint64_t v162 = v2;
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v152 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = OUTLINED_FUNCTION_94_4();
  uint64_t v154 = *(void *)(v11 - 8);
  uint64_t v155 = v11;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v153 = v12;
  uint64_t v149 = type metadata accessor for ResponseMode(0LL);
  uint64_t v145 = *(void *)(v149 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_65_9(v13, v142);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ResponseMode?, ResponseMode?));
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_64_9(v14, v142);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ResponseMode?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v146 = (uint64_t)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v142 - v16;
  __chkstk_darwin();
  __int128 v19 = (char *)&v142 - v18;
  OUTLINED_FUNCTION_93_4();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  __int16 v27 = v26;
  uint64_t v28 = OUTLINED_FUNCTION_7_54((uint64_t)&unk_401170);
  *(void *)(v28 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v21;
  *(void *)(v28 + 24) = v23;
  *(void *)(v28 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v25;
  *(_BYTE *)(v28 + 40) = v27;
  *(_BYTE *)(v28 + 4Hasher._combine(_:)(v1 & 1) = HIBYTE(v27) & 1;
  *(void *)(v28 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v152;
  *(void *)(v28 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v5;
  uint64_t v150 = v28;
  uint64_t v151 = v21;
  OUTLINED_FUNCTION_44_1();
  swift_retain();
  uint64_t v152 = v10;
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v10, v8);
  if ((v29 & 1) != 0)
  {
    uint64_t v143 = v8;
    OUTLINED_FUNCTION_89_7();
    uint64_t v30 = v3;
    uint64_t v32 = *(void *)(v3 + v31 + 32);
    OUTLINED_FUNCTION_49_0((void *)(v3 + v31));
    uint64_t v33 = OUTLINED_FUNCTION_67();
    if (v34(v33, v32))
    {
      CurrentRequest.responseMode.getter();
      OUTLINED_FUNCTION_38_1();
      uint64_t v35 = 0LL;
    }

    else
    {
      uint64_t v35 = 1LL;
    }

    uint64_t v65 = v148;
    uint64_t v64 = v149;
    uint64_t v66 = OUTLINED_FUNCTION_44_2((uint64_t)v19, v35);
    static ResponseMode.voiceOnly.getter(v66);
    OUTLINED_FUNCTION_44_2((uint64_t)v17, 0LL);
    uint64_t v67 = v65 + *(int *)(v147 + 48);
    outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v19,  v65,  &demangling cache variable for type metadata for ResponseMode?);
    outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v17,  v67,  &demangling cache variable for type metadata for ResponseMode?);
    OUTLINED_FUNCTION_83_7(v65);
    if (v69)
    {
      OUTLINED_FUNCTION_133_1((uint64_t)v17);
      OUTLINED_FUNCTION_133_1((uint64_t)v19);
      OUTLINED_FUNCTION_83_7(v67);
      if (v69)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v65,  &demangling cache variable for type metadata for ResponseMode?);
LABEL_36:
        uint64_t v74 = *(void **)(v30 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
        uint64_t v75 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4011C0, 56LL);
        uint64_t v76 = v152;
        uint64_t v77 = v143;
        v75[2] = v152;
        v75[3] = v77;
        v75[4] = v30;
        v75[5] = partial apply for closure #1 in Signpost.OpenSignpost.end(_:);
        uint64_t v78 = v150;
        v75[6] = v150;
        uint64_t v79 = *(void (**)(uint64_t (*)(), void *))(class metadata base offset for StartCallCATs
                                                                        + *v74
                                                                        + 1056);
        id v80 = v77;
        swift_retain();
        OUTLINED_FUNCTION_29_3();
        id v81 = v76;
        v79( partial apply for closure #2 in StartCallCatTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:),  v75);
        OUTLINED_FUNCTION_22();
LABEL_73:
        OUTLINED_FUNCTION_125_5();
        uint64_t v94 = v78;
        goto LABEL_74;
      }
    }

    else
    {
      uint64_t v68 = v146;
      outlined init with copy of Result<TemplatingResult, Error>( v65,  v146,  &demangling cache variable for type metadata for ResponseMode?);
      OUTLINED_FUNCTION_83_7(v67);
      if (!v69)
      {
        uint64_t v71 = v144;
        uint64_t v70 = v145;
        OUTLINED_FUNCTION_56_4(v144, v67, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 32));
        lazy protocol witness table accessor for type ResponseMode and conformance ResponseMode();
        char v72 = dispatch thunk of static Equatable.== infix(_:_:)(v68, v71, v64);
        BOOL v73 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
        v73(v71, v64);
        OUTLINED_FUNCTION_9_19((uint64_t)v17);
        OUTLINED_FUNCTION_9_19((uint64_t)v19);
        v73(v68, v64);
        OUTLINED_FUNCTION_9_19(v65);
        if ((v72 & 1) != 0) {
          goto LABEL_36;
        }
LABEL_37:
        uint64_t v82 = *(void **)(v30 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
        id v83 = OUTLINED_FUNCTION_107_3();
        OUTLINED_FUNCTION_58_11();
        uint64_t v85 = v84;
        OUTLINED_FUNCTION_50_6();
        OUTLINED_FUNCTION_70_10();
        outlined init with copy of SharedGlobalsProviding(v30 + v86, (uint64_t)v156);
        uint64_t v87 = SirikitDeviceState.__allocating_init(from:)(v156);
        unint64_t v88 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_401198, 56LL);
        uint64_t v89 = v143;
        v88[2] = v83;
        v88[3] = v89;
        v88[4] = v30;
        v88[5] = partial apply for closure #1 in Signpost.OpenSignpost.end(_:);
        uint64_t v90 = v150;
        v88[6] = v150;
        unint64_t v91 = *(void (**)(uint64_t, uint64_t, void, uint64_t (*)(), void *))(class metadata base offset for StartCallCATs
                                                                                                  + *v82
                                                                                                  + 1024);
        id v92 = v89;
        swift_retain();
        OUTLINED_FUNCTION_44_1();
        id v93 = v83;
        v91( v85,  v87,  0LL,  partial apply for closure #2 in StartCallCatTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:),  v88);
        OUTLINED_FUNCTION_16_3();
        OUTLINED_FUNCTION_76();
        swift_release(v88);
        OUTLINED_FUNCTION_125_5();
        uint64_t v94 = v90;
LABEL_74:
        swift_release(v94);
        OUTLINED_FUNCTION_7_5();
        return;
      }

      OUTLINED_FUNCTION_133_1((uint64_t)v17);
      OUTLINED_FUNCTION_133_1((uint64_t)v19);
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v68, v64);
    }

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v65,  &demangling cache variable for type metadata for (ResponseMode?, ResponseMode?));
    goto LABEL_37;
  }

  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v36 = v8;
  id v37 = [v8 confirmationReason];
  if (v37 != (id)_INStartCallIntentConfirmationReasonHasRestrictedContacts) {
    goto LABEL_24;
  }
  outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(v8);
  if (!v38) {
    goto LABEL_24;
  }
  uint64_t v39 = v38;
  OUTLINED_FUNCTION_71();
  if (v41)
  {
    uint64_t v95 = v39 >= 0 ? v40 : v39;
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter(v95);
  }

  else
  {
    uint64_t v42 = *(void *)(v40 + 16);
  }

  OUTLINED_FUNCTION_39();
  if (!v42)
  {
LABEL_24:
    unsigned int v62 = *(void **)(v3 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
    OUTLINED_FUNCTION_107_3();
    OUTLINED_FUNCTION_58_11();
    uint64_t v63 = v150;
    (*(void (**)(void))(class metadata base offset for StartCallCATs + *v62 + 992))();
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_125_5();
    swift_release(v63);
    return;
  }

  outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(v8);
  uint64_t v44 = _swiftEmptyArrayStorage;
  uint64_t v142 = v3;
  if (v43)
  {
    uint64_t v45 = v43;
    char v159 = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_71();
    if (v47)
    {
      if (v45 >= 0) {
        uint64_t v96 = v46;
      }
      else {
        uint64_t v96 = v45;
      }
      OUTLINED_FUNCTION_8_1();
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter(v96);
      if (v48) {
        goto LABEL_13;
      }
    }

    else
    {
      uint64_t v48 = *(void *)(v46 + 16);
      OUTLINED_FUNCTION_8_1();
      if (v48)
      {
LABEL_13:
        uint64_t v143 = v36;
        OUTLINED_FUNCTION_18_22();
        if (v48 < 1)
        {
          __break(1u);
          goto LABEL_76;
        }

        uint64_t v49 = 0LL;
        uint64_t v50 = v153;
        do
        {
          if ((v45 & 0xC000000000000001LL) != 0) {
            OUTLINED_FUNCTION_5_49(v49);
          }
          else {
            OUTLINED_FUNCTION_27_10(v45 + 8 * v49);
          }
          OUTLINED_FUNCTION_109_6();
          uint64_t v51 = v157;
          uint64_t v52 = v158;
          __swift_project_boxed_opaque_existential_1(v156, v157);
          dispatch thunk of DeviceState.siriLocale.getter(v51, v52);
          __swift_destroy_boxed_opaque_existential_1(v156);
          static PhonePerson.make(phonePerson:options:locale:)(v36, 0, v50);
          uint64_t v54 = v53;
          (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v50, v155);

          if (v54)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
            OUTLINED_FUNCTION_132_4();
            if (v57) {
              OUTLINED_FUNCTION_3_25((uint64_t)v36 + 1, v56);
            }
            uint64_t v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v54);
            specialized Array._endMutation()(v58, v59, v60, v61);
          }

          ++v49;
        }

        while (v48 != v49);
        OUTLINED_FUNCTION_39();
        uint64_t v44 = v159;
        uint64_t v36 = v143;
        goto LABEL_47;
      }
    }

    OUTLINED_FUNCTION_39();
LABEL_47:
    OUTLINED_FUNCTION_39();
    uint64_t v3 = v142;
  }

  uint64_t v97 = type metadata accessor for PhonePersonList();
  uint64_t v98 = PhonePersonList.__allocating_init(list:)((uint64_t)v44);
  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v152);
  unint64_t v100 = v99;
  double v101 = _swiftEmptyArrayStorage;
  if (!v99)
  {
LABEL_65:
    uint64_t v116 = PhonePersonList.__allocating_init(list:)((uint64_t)v101);
    if (v100)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v117 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v117, (uint64_t)static Logger.siriPhone);
      id v118 = v36;
      OUTLINED_FUNCTION_151();
      id v119 = v118;
      uint64_t v120 = (os_log_s *)Logger.logObject.getter(v119);
      os_log_type_t v122 = static os_log_type_t.debug.getter(v120, v121);
      if (os_log_type_enabled(v120, v122))
      {
        uint64_t v123 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v124 = OUTLINED_FUNCTION_7_0(64LL);
        uint64_t v149 = v98;
        uint64_t v125 = v124;
        v156[0] = v124;
        *(_DWORD *)uint64_t v123 = 136315394;
        unint64_t v126 = OUTLINED_FUNCTION_68();
        uint64_t v127 = swift_bridgeObjectRetain();
        uint64_t v128 = Array.description.getter(v127, v126);
        unint64_t v130 = v129;
        OUTLINED_FUNCTION_34_0();
        char v159 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v128, v130, v156);
        OUTLINED_FUNCTION_128_3((uint64_t)v159, (uint64_t)v160, v131, v123 + 12);
        OUTLINED_FUNCTION_7_4(v100);
        OUTLINED_FUNCTION_129();
        *(_WORD *)(v123 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(v119);
        char v159 = v132;
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
        uint64_t v134 = String.init<A>(describing:)(&v159, v133);
        char v159 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v134, v135, v156);
        uint64_t v3 = v142;
        OUTLINED_FUNCTION_128_3((uint64_t)v159, (uint64_t)v160, v136, v123 + 22);

        swift_bridgeObjectRelease();
        _os_log_impl( &dword_0,  v120,  v122,  "User needs to confirm by Yes/No the updated contacts: %s because of the restricted contacts: %s",  (uint8_t *)v123,  0x16u);
        swift_arrayDestroy(v125, 2LL);
        uint64_t v137 = v125;
        uint64_t v98 = v149;
        OUTLINED_FUNCTION_0_2(v137);
        OUTLINED_FUNCTION_0_2(v123);
      }

      else
      {

        OUTLINED_FUNCTION_7_4(v100);
      }

      uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
      v156[0] = v100;
      NSObject.update(with:at:)((uint64_t)v156, 0x73746361746E6F63LL, 0xE800000000000000LL);
      __swift_destroy_boxed_opaque_existential_1(v156);
    }

    uint64_t v138 = *(void **)(v3 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
    OUTLINED_FUNCTION_107_3();
    OUTLINED_FUNCTION_58_11();
    uint64_t v140 = v139;
    char v141 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t))(class metadata base offset for StartCallCATs
                                                                                               + *v138
                                                                                               + 1088);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    uint64_t v78 = v150;
    v141(v140, v116, v98, partial apply for closure #1 in Signpost.OpenSignpost.end(_:), v150);
    OUTLINED_FUNCTION_22();
    swift_release_n(v116, 2LL);
    swift_release_n(v98, 2LL);
    goto LABEL_73;
  }

  id v102 = v36;
  unint64_t v100 = (unint64_t)specialized _ArrayProtocol.filter(_:)(v100, (uint64_t)v36);
  char v159 = _swiftEmptyArrayStorage;
  if (!(v100 >> 62))
  {
    uint64_t v103 = *(void *)((char *)&dword_10 + (v100 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_151();
    if (v103) {
      goto LABEL_51;
    }
LABEL_63:
    OUTLINED_FUNCTION_34_0();
    double v101 = _swiftEmptyArrayStorage;
LABEL_64:
    OUTLINED_FUNCTION_34_0();
    goto LABEL_65;
  }

  OUTLINED_FUNCTION_151();
  uint64_t v103 = OUTLINED_FUNCTION_15_4();
  if (!v103) {
    goto LABEL_63;
  }
LABEL_51:
  uint64_t v148 = v97;
  uint64_t v149 = v98;
  uint64_t v143 = v36;
  OUTLINED_FUNCTION_18_22();
  if (v103 >= 1)
  {
    uint64_t v104 = 0LL;
    uint64_t v105 = v153;
    do
    {
      if ((v100 & 0xC000000000000001LL) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)(v104, v100);
      }
      else {
        OUTLINED_FUNCTION_27_10(v100 + 8 * v104);
      }
      OUTLINED_FUNCTION_109_6();
      uint64_t v106 = v157;
      uint64_t v107 = v158;
      OUTLINED_FUNCTION_94_6(v156);
      dispatch thunk of DeviceState.siriLocale.getter(v106, v107);
      __swift_destroy_boxed_opaque_existential_1(v156);
      static PhonePerson.make(phonePerson:options:locale:)(v36, 0, v105);
      uint64_t v109 = v108;
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v105, v155);

      if (v109)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v110);
        OUTLINED_FUNCTION_132_4();
        if (v57) {
          OUTLINED_FUNCTION_3_25((uint64_t)v36 + 1, v111);
        }
        uint64_t v112 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v109);
        specialized Array._endMutation()(v112, v113, v114, v115);
      }

      ++v104;
    }

    while (v103 != v104);
    OUTLINED_FUNCTION_34_0();
    double v101 = v159;
    uint64_t v3 = v142;
    uint64_t v36 = v143;
    uint64_t v98 = v149;
    goto LABEL_64;
  }

void closure #1 in StartCallCatTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:)()
{
  uint64_t v40 = v3;
  uint64_t v41 = v2;
  uint64_t v5 = v4;
  uint64_t v42 = v6;
  uint64_t v8 = v7;
  uint64_t v39 = v9;
  uint64_t v10 = type metadata accessor for BehaviorAfterSpeaking(0LL);
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_28_25();
  __chkstk_darwin();
  uint64_t v18 = (uint64_t *)((char *)&v36 - v17);
  OUTLINED_FUNCTION_70_10();
  uint64_t v20 = v5 + v19;
  uint64_t v21 = v8;
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v8, v42);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v22;
  outlined init with copy of SharedGlobalsProviding(v20, (uint64_t)&v43);
  if ((v8 & 1) == 0)
  {
    OUTLINED_FUNCTION_57_4();
    goto LABEL_6;
  }

  uint64_t v23 = (uint64_t)v18;
  char v24 = static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(v21);
  OUTLINED_FUNCTION_57_4();
  if ((v24 & 1) != 0)
  {
LABEL_6:
    v41(v39);
    goto LABEL_9;
  }

  outlined init with copy of Result<TemplatingResult, Error>( v39,  (uint64_t)v1,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v25 = v16;
  if (swift_getEnumCaseMultiPayload(v1, v16) == 1)
  {
    *uint64_t v18 = *v1;
    uint64_t v26 = 1LL;
  }

  else
  {
    uint64_t v36 = v15;
    uint64_t v27 = v0;
    uint64_t v28 = v14;
    uint64_t v29 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(v15 + 32))(v0, v1, v14);
    uint64_t v30 = TemplatingResult.templateIdentifier.getter(v29);
    uint64_t v32 = v31;
    uint64_t v33 = TemplatingResult.speak.getter(v30);
    uint64_t v34 = TemplatingResult.print.getter(v33);
    (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))( v13,  enum case for BehaviorAfterSpeaking.continueWithoutListening(_:),  v38);
    uint64_t v35 = v32;
    uint64_t v25 = v16;
    TemplatingResult.init(templateIdentifier:speak:print:behaviorAfterSpeaking:)(v30, v35, v33, v34, v13);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v28);
    uint64_t v26 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v23, v25, v26);
  v41(v23);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v23,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
LABEL_9:
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCatTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  static Signpost.event(_:)();
  outlined bridged method (pb) of @objc INIntent.intentId.getter(a2);
  if (v14)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    BOOL v17 = App.isFirstParty()();
    if (v17 && (INStartCallIntent.isThirdPartyCallKitCallBack.getter(v17), (v18 & 1) == 0))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v30 = v15;
      uint64_t v19 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_9();
      os_log_type_t v20 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_71_8(v20))
      {
        uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_0, (os_log_t)a2, v6, "Eagerly calling IntentHandled", v21, 2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v21);
      }

      uint64_t v22 = *(void *)(v5 + direct field offset for StartCallCatTemplatingService.operationManager);
      uint64_t v23 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4011E8, 48LL);
      __int128 v23[2] = v7;
      void v23[3] = a1;
      v23[4] = a2;
      v23[5] = a3;
      char v24 = *(void (**)(uint64_t, uint64_t, void (*)(), void *))(*(void *)v22 + 160LL);
      id v25 = a3;
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_59();
      id v26 = a2;
      v24( v30,  v16,  partial apply for closure #1 in StartCallCatTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:),  v23);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_164_0();
    }

    else
    {
      OUTLINED_FUNCTION_70_2();
    }
  }

  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v28 = (uint64_t (*)(uint64_t, void *, void *, uint64_t, uint64_t))method lookup function for DucTemplatingService( v27,  &method descriptor for DucTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:));
  return v28(a1, a2, a3, a4, a5);
}

uint64_t StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_93_4();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  __int16 v17 = v16;
  uint64_t v18 = OUTLINED_FUNCTION_7_54((uint64_t)&unk_401210);
  *(void *)(v18 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v11;
  *(void *)(v18 + 24) = v13;
  *(void *)(v18 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  *(_BYTE *)(v18 + 40) = v17;
  *(_BYTE *)(v18 + 4Hasher._combine(_:)(v1 & 1) = HIBYTE(v17) & 1;
  *(void *)(v18 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a4;
  *(void *)(v18 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a5;
  uint64_t v19 = *(void *)(v5 + direct field offset for StartCallCatTemplatingService.operationManager);
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_59();
  outlined bridged method (pb) of @objc INIntent.intentId.getter(a2);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v24 = (void *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_401238);
  v24[2] = partial apply for closure #1 in Signpost.OpenSignpost.end(_:);
  v24[3] = v18;
  v24[4] = v6;
  void v24[5] = a1;
  void v24[6] = a2;
  v24[7] = a3;
  id v25 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v19 + 176LL);
  id v26 = a3;
  OUTLINED_FUNCTION_95_1();
  swift_retain();
  swift_retain();
  id v27 = a2;
  v25( v21,  v23,  partial apply for closure #1 in StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:),  v24);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_50_2();
  return swift_bridgeObjectRelease();
}

void closure #1 in StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)( uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  v17[1] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  __chkstk_darwin();
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of Result<TemplatingResult, Error>( a1,  (uint64_t)v7,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v8) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v7,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
    StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)();
  }

  else
  {
    outlined init with take of Result<TemplatingResult, Error>((uint64_t)v7, (uint64_t)v10);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v11 = type metadata accessor for Logger(0LL);
    uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
    if (os_log_type_enabled(v13, v15))
    {
      __int16 v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)__int16 v16 = 0;
      _os_log_impl(&dword_0, v13, v15, "Retrieving result from eagerly calling IntentHandled", v16, 2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    a2(v10);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }

void StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v110 = v10;
  type metadata accessor for DispatchQoS(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v106 = v11;
  uint64_t v12 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v107 = *(void *)(v12 - 8);
  uint64_t v108 = v12;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_64_9(v13, v97);
  uint64_t v14 = OUTLINED_FUNCTION_94_4();
  uint64_t v102 = *(void *)(v14 - 8);
  uint64_t v103 = v14;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_65_9(v15, v98);
  OUTLINED_FUNCTION_93_4();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  __int16 v23 = v22;
  uint64_t v24 = OUTLINED_FUNCTION_7_54((uint64_t)&unk_401278);
  *(void *)(v24 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v17;
  *(void *)(v24 + 24) = v19;
  *(void *)(v24 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v21;
  *(_BYTE *)(v24 + 40) = v23;
  *(_BYTE *)(v24 + 4Hasher._combine(_:)(v1 & 1) = HIBYTE(v23) & 1;
  *(void *)(v24 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(void *)(v24 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v3;
  uint64_t v109 = v17;
  OUTLINED_FUNCTION_95_1();
  swift_retain();
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v9, v7);
  if ((v25 & 1) != 0)
  {
    OUTLINED_FUNCTION_89_7();
    id v27 = (void *)((char *)v1 + v26);
    uint64_t v28 = *(void *)((char *)v1 + v26 + 32);
    OUTLINED_FUNCTION_49_0((void *)((char *)v1 + v26));
    uint64_t v29 = OUTLINED_FUNCTION_67();
    uint64_t v31 = (os_log_s *)v30(v29, v28);
    char v32 = (*(uint64_t (**)(uint64_t))(*(void *)v31 + 120LL))(1LL);
    OUTLINED_FUNCTION_38_1();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v33 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v34 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v31, v34))
    {
      uint64_t v35 = (uint8_t *)OUTLINED_FUNCTION_7_0(8LL);
      *(_DWORD *)uint64_t v35 = 67109120;
      LODWORD(v113[0]) = v32 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v113, (char *)v113 + 4, v35 + 4);
      _os_log_impl( &dword_0,  v31,  v34,  "#StartCallCatTemplatingService is emergency confirmation reprompt: %{BOOL}d",  v35,  8u);
      OUTLINED_FUNCTION_0_2((uint64_t)v35);
    }

    if ((v32 & 1) != 0)
    {
      uint64_t v36 = v27[3];
      uint64_t v37 = v27[4];
      __swift_project_boxed_opaque_existential_1(v27, v36);
      uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 224))(v36, v37);
      (*(void (**)(uint64_t))(*(void *)v38 + 128LL))(v38);
      OUTLINED_FUNCTION_38_1();
    }

    uint64_t v39 = *(void **)((char *)v1 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
    id v40 = v9;
    OUTLINED_FUNCTION_58_11();
    uint64_t v42 = v41;
    OUTLINED_FUNCTION_70_10();
    static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v40, v7);
    char v44 = v43;
    OUTLINED_FUNCTION_99_5();
    char v45 = 0;
    if ((v44 & 1) != 0) {
      char v45 = static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(v40);
    }
    __swift_destroy_boxed_opaque_existential_1(v113);
    OUTLINED_FUNCTION_50_6();
    OUTLINED_FUNCTION_99_5();
    uint64_t v46 = SirikitDeviceState.__allocating_init(from:)(v113);
    (*(void (**)(uint64_t, void, void, void, uint64_t, uint64_t (*)(), uint64_t))(class metadata base offset for StartCallCATs + *v39 + 1152))( v42,  v45 & 1,  0LL,  v32 & 1,  v46,  partial apply for closure #1 in Signpost.OpenSignpost.end(_:),  v24);
    swift_release(v109);
    OUTLINED_FUNCTION_16_3();
    swift_release(v42);
    goto LABEL_32;
  }

  INStartCallIntent.isThirdPartyCallKitCallBack.getter(v25);
  uint64_t v100 = v24;
  if ((v47 & 1) != 0 && v7 && (INStartCallIntentResponse.thirdPartyCallKitCallBackBundleId.getter(), v49))
  {
    uint64_t v50 = v48;
    unint64_t v51 = v49;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v52 = OUTLINED_FUNCTION_15_1();
    uint64_t v53 = (os_log_s *)__swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
    uint64_t v54 = swift_bridgeObjectRetain_n(v51, 2LL);
    Logger.logObject.getter(v54);
    os_log_type_t v55 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_71_8(v55))
    {
      unint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v57 = v50;
      uint64_t v58 = OUTLINED_FUNCTION_7_0(32LL);
      v113[0] = v58;
      *(_DWORD *)unint64_t v56 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v112 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v51, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113, v56 + 4);
      swift_bridgeObjectRelease_n(v51, 3LL);
      OUTLINED_FUNCTION_57_0( &dword_0,  v53,  (os_log_type_t)v9,  "CallKitCallBack case: using bundleId from userActivity launchId: %s",  v56);
      OUTLINED_FUNCTION_17_0(v58);
      OUTLINED_FUNCTION_0_2(v58);
      OUTLINED_FUNCTION_0_2((uint64_t)v56);
    }

    else
    {

      OUTLINED_FUNCTION_7_4(v51);
    }

    type metadata accessor for App(0LL);
    uint64_t v60 = OUTLINED_FUNCTION_67();
    uint64_t v59 = App.__allocating_init(appIdentifier:)(v60, v51);
  }

  else
  {
    uint64_t v59 = v110;
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_90_7();
  v61(v9);
  id v62 = v9;
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
  uint64_t v104 = v63;
  unint64_t v111 = v62;
  if (!App.isFirstParty()()) {
    goto LABEL_27;
  }
  uint64_t v64 = App.appIdentifier.getter();
  if (!v65) {
    goto LABEL_28;
  }
  if (v64 != 0xD000000000000010LL || v65 != 0x800000000034B0D0LL)
  {
    char v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, 0xD000000000000010LL, 0x800000000034B0D0LL, 0LL);
    OUTLINED_FUNCTION_62();
    if ((v66 & 1) != 0) {
      goto LABEL_27;
    }
LABEL_28:
    uint64_t v99 = 0LL;
    uint64_t v74 = 0LL;
    uint64_t v75 = v106;
    goto LABEL_29;
  }

  OUTLINED_FUNCTION_62();
LABEL_27:
  OUTLINED_FUNCTION_90_7();
  uint64_t v68 = *(void *)((char *)v1 + v67 + 24);
  uint64_t v69 = *(void *)((char *)v1 + v67 + 32);
  OUTLINED_FUNCTION_49_0((void *)((char *)v1 + v67));
  uint64_t v70 = (void *)((char *)v1 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v1 + 40));
  uint64_t v71 = v70[3];
  uint64_t v72 = v70[4];
  OUTLINED_FUNCTION_94_6(v70);
  dispatch thunk of DeviceState.siriLocale.getter(v71, v72);
  uint64_t v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 16))(v59, v101, v68, v69);
  uint64_t v74 = v73;
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
  uint64_t v75 = v106;
LABEL_29:
  OUTLINED_FUNCTION_50_6();
  OUTLINED_FUNCTION_88_8();
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v1 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + v76 + 40),  (uint64_t)v113);
  uint64_t v77 = SirikitDeviceState.__allocating_init(from:)(v113);
  *uint64_t v105 = 500LL;
  uint64_t v78 = (*(uint64_t (**)(void *, void, uint64_t))(v107 + 104))( v105,  enum case for DispatchTimeInterval.milliseconds(_:),  v108);
  static DispatchQoS.userInteractive.getter(v78);
  uint64_t v79 = type metadata accessor for TemplatingParallelizer(0LL);
  swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
  TemplatingParallelizer.init(name:timeout:qos:)((uint64_t)"IntentHandled", 13LL, 2, (uint64_t)v105, v75);
  uint64_t v81 = v80;
  uint64_t v82 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4012A0, 72LL);
  v82[2] = v111;
  v82[3] = v1;
  v82[4] = v104;
  v82[5] = v77;
  v82[6] = v99;
  v82[7] = v74;
  v82[8] = v59;
  id v83 = *(uint64_t (**)(void, void *))(*(void *)v81 + 176LL);
  id v84 = v111;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  uint64_t v85 = v83( partial apply for closure #1 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:),  v82);
  swift_release(v85);
  OUTLINED_FUNCTION_50_2();
  OUTLINED_FUNCTION_89_7();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v1 + v86, (uint64_t)&v114);
  LOBYTE(v113[0]) = 1;
  v113[1] = 0xD000000000000013LL;
  v113[2] = 0x8000000000343C20LL;
  uint64_t v87 = specialized SiriPhoneHintGenerator.generateHint()();
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  outlined destroy of HangUpTipGenerator((uint64_t)v113);
  if (v89)
  {
    uint64_t v94 = (void *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_4012F0);
    v94[2] = v1;
    v94[3] = v77;
    v94[4] = v87;
    v94[5] = v89;
    v94[6] = v91;
    v94[7] = v93;
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_3_8();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_44_1();
    v83( partial apply for closure #2 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:),  v94);
    OUTLINED_FUNCTION_50_2();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_38_1();
    swift_release(v94);
  }

  uint64_t v95 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4012C8, 32LL);
  *(void *)(v95 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in Signpost.OpenSignpost.end(_:);
  *(void *)(v95 + 24) = v100;
  uint64_t v96 = *(void (**)(void (*)(uint64_t), uint64_t))(*(void *)v81 + 184LL);
  OUTLINED_FUNCTION_25_1();
  v96( partial apply for closure #3 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:),  v95);
  swift_release(v81);
  swift_release(v95);
  OUTLINED_FUNCTION_22();
  swift_release(v104);
  swift_release(v109);
  OUTLINED_FUNCTION_16_3();
LABEL_32:
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_7_5();
}

void closure #1 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v56 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Locale(0LL);
  uint64_t v58 = *(void *)(v17 - 8);
  uint64_t v59 = v17;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(a3);
  uint64_t v57 = a2;
  uint64_t v55 = a7;
  if (v20)
  {
    uint64_t v21 = v20;
    unint64_t v63 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v20 >> 62)
    {
      if (v20 >= 0) {
        uint64_t v38 = v20 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v38 = v20;
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v38);
      if (v22) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v22 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain();
      if (v22)
      {
LABEL_4:
        uint64_t v54 = a8;
        type metadata accessor for PhonePerson(0LL);
        if (v22 < 1)
        {
          __break(1u);
          return;
        }

        uint64_t v50 = a5;
        unint64_t v51 = v16;
        uint64_t v52 = a6;
        uint64_t v53 = a1;
        for (uint64_t i = 0LL; i != v22; ++i)
        {
          if ((v21 & 0xC000000000000001LL) != 0) {
            id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
          }
          else {
            id v24 = *(id *)(v21 + 8 * i + 32);
          }
          uint64_t v25 = v24;
          static Device.current.getter(v60);
          uint64_t v27 = v61;
          uint64_t v26 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          dispatch thunk of DeviceState.siriLocale.getter(v27, v26);
          __swift_destroy_boxed_opaque_existential_1(v60);
          static PhonePerson.make(phonePerson:options:locale:)(v25, 0, (uint64_t)v19);
          uint64_t v29 = v28;
          (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v59);

          if (v29)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
            unint64_t v32 = *(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFFF8LL));
            unint64_t v31 = *(void *)((char *)&dword_18 + (v63 & 0xFFFFFFFFFFFFFF8LL));
            if (v32 >= v31 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1LL);
            }
            uint64_t v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
            specialized Array._endMutation()(v33, v34, v35, v36);
          }
        }

        swift_bridgeObjectRelease();
        uint64_t v37 = (void *)v63;
        a6 = v52;
        a1 = v53;
        a5 = v50;
        uint64_t v16 = v51;
        a8 = v54;
        goto LABEL_21;
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v37 = _swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }

  uint64_t v37 = _swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v39 = type metadata accessor for PhonePersonList.Builder();
  uint64_t v40 = swift_allocObject(v39, 24LL, 7LL);
  *(void *)(v40 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess(v40 + 16, v60, 1LL, 0LL);
  *(void *)(v40 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v37;
  swift_bridgeObjectRelease();
  uint64_t v41 = type metadata accessor for PhonePersonList();
  swift_allocObject(v41, 32LL, 7LL);
  uint64_t v42 = PhonePersonList.init(builder:)(v40);
  char v43 = *(void **)(v56 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
  if (a8)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    SpeakableString.init(print:speak:)(v55, a8, 0LL, 0LL);
    uint64_t v44 = type metadata accessor for SpeakableString(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0LL, 1LL, v44);
  }

  else
  {
    uint64_t v45 = type metadata accessor for SpeakableString(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1LL, 1LL, v45);
    swift_retain();
  }

  Swift::Bool v46 = App.isFirstParty()();
  uint64_t v47 = App.appIdentifier.getter();
  if (v48)
  {
    if (v47 == 0xD000000000000010LL && v48 == 0x800000000034B0D0LL) {
      char v49 = 1;
    }
    else {
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, 0xD000000000000010LL, 0x800000000034B0D0LL, 0LL);
    }
    swift_bridgeObjectRelease();
  }

  else
  {
    char v49 = 0;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t, char *, Swift::Bool, void, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v43 + 1120))( a5,  v42,  a6,  v16,  v46,  v49 & 1,  0LL,  a1,  v57);
  swift_release_n(v42, 2LL);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v16,  &demangling cache variable for type metadata for SpeakableString?);
}

void closure #2 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = *(void **)(a3 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
  String.toSpeakableString.getter(a5, a6);
  uint64_t v19 = type metadata accessor for SpeakableString(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0LL, 1LL, v19);
  uint64_t v20 = (void *)swift_allocObject(&unk_401318, 64LL, 7LL);
  __int128 v20[2] = a5;
  void v20[3] = a6;
  v20[4] = a7;
  v20[5] = a8;
  void v20[6] = a1;
  v20[7] = a2;
  uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t (*)(uint64_t), void *))(class metadata base offset for StartCallCATs
                                                                                          + *v18
                                                                                          + 960);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v21( a4,  v17,  partial apply for closure #1 in closure #2 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:),  v20);
  swift_release(v20);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v17,  &demangling cache variable for type metadata for SpeakableString?);
}

uint64_t closure #1 in closure #2 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  return a6(a1);
}

void closure #3 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1, void (*a2)(char *))
{
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>)
                 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    outlined init with copy of Result<TemplatingResult, Error>( a1 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)),  (uint64_t)v8,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    if (v11 == 1)
    {
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v8,  (uint64_t)v10,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    }

    else
    {
      uint64_t v12 = type metadata accessor for BehaviorAfterSpeaking(0LL);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1LL, 1LL, v12);
      specialized Result<>.merge(with:behaviorAfterSpeaking:)();
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v5,  &demangling cache variable for type metadata for BehaviorAfterSpeaking?);
    }

    a2(v10);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v8,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }

  else
  {
    __break(1u);
  }

void StartCallCatTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)()
{
  uint64_t v91 = v3;
  uint64_t v92 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_94_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_28_25();
  __chkstk_darwin();
  uint64_t v11 = (char *)&v87 - v10;
  switch((unint64_t)OUTLINED_FUNCTION_104_4())
  {
    case 6uLL:
      OUTLINED_FUNCTION_26_28();
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v12 + 704))(v91, v5);
      goto LABEL_37;
    case 7uLL:
      uint64_t v90 = v5;
      uint64_t v15 = v92;
      OUTLINED_FUNCTION_90_7();
      uint64_t v89 = __swift_project_boxed_opaque_existential_1((void *)(v15 + v16), *(void *)(v15 + v16 + 24));
      OUTLINED_FUNCTION_70_10();
      uint64_t v18 = (void *)(v15 + v17);
      uint64_t v20 = *(void *)(v15 + v17 + 24);
      uint64_t v19 = *(void *)(v15 + v17 + 32);
      __swift_project_boxed_opaque_existential_1(v18, v20);
      dispatch thunk of DeviceState.siriLocale.getter(v20, v19);
      uint64_t v21 = OUTLINED_FUNCTION_127_4();
      uint64_t v23 = v22(v21);
      uint64_t v25 = v24;
      OUTLINED_FUNCTION_35_22();
      if (v25)
      {
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_0_19(v23);
        uint64_t v26 = OUTLINED_FUNCTION_26_0();
        __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v26);
        OUTLINED_FUNCTION_39();
      }

      else
      {
        uint64_t v72 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1(v2, v73, v74, v72);
      }

      OUTLINED_FUNCTION_26_28();
      (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v75 + 736))(v2);
      uint64_t v76 = v2;
      goto LABEL_36;
    case 8uLL:
      static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v9, v7);
      char v28 = v27;
      uint64_t v29 = *(void **)(v92 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
      OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_88_8();
      OUTLINED_FUNCTION_13_48(v30);
      uint64_t v31 = OUTLINED_FUNCTION_75_9();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                + *v29
                                                                + 576))( v31,  v28 & 1,  v91,  v5);
      goto LABEL_8;
    case 9uLL:
      OUTLINED_FUNCTION_26_28();
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v33 + 864))(v91, v5);
      goto LABEL_37;
    case 0xAuLL:
      uint64_t v90 = v5;
      uint64_t v34 = v92;
      OUTLINED_FUNCTION_90_7();
      uint64_t v89 = __swift_project_boxed_opaque_existential_1((void *)(v34 + v35), *(void *)(v34 + v35 + 24));
      OUTLINED_FUNCTION_70_10();
      uint64_t v37 = (void *)(v34 + v36);
      uint64_t v38 = *(void *)(v34 + v36 + 24);
      uint64_t v39 = v37[4];
      __swift_project_boxed_opaque_existential_1(v37, v38);
      dispatch thunk of DeviceState.siriLocale.getter(v38, v39);
      uint64_t v40 = OUTLINED_FUNCTION_127_4();
      uint64_t v42 = v41(v40);
      uint64_t v44 = v43;
      OUTLINED_FUNCTION_35_22();
      if (v44)
      {
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_0_19(v42);
        uint64_t v45 = OUTLINED_FUNCTION_26_0();
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0LL, 1LL, v45);
        OUTLINED_FUNCTION_39();
      }

      else
      {
        uint64_t v77 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1((uint64_t)v11, v78, v79, v77);
      }

      OUTLINED_FUNCTION_26_28();
      (*(void (**)(char *))(class metadata base offset for StartCallCATs + v80 + 608))(v11);
      uint64_t v76 = (uint64_t)v11;
LABEL_36:
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v76,  &demangling cache variable for type metadata for SpeakableString?);
      goto LABEL_37;
    case 0xBuLL:
      OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_88_8();
      OUTLINED_FUNCTION_13_48(v46);
      OUTLINED_FUNCTION_75_9();
      OUTLINED_FUNCTION_76_10();
      uint64_t v48 = *(void (**)(void))(class metadata base offset for StartCallCATs + v47 + 640);
      goto LABEL_15;
    case 0xCuLL:
      OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_88_8();
      OUTLINED_FUNCTION_13_48(v49);
      OUTLINED_FUNCTION_75_9();
      OUTLINED_FUNCTION_76_10();
      uint64_t v48 = *(void (**)(void))(class metadata base offset for StartCallCATs + v50 + 672);
      goto LABEL_15;
    default:
      id v13 = OUTLINED_FUNCTION_104_4();
      if ((id)_INStartCallIntentResponseCodeFailureScreenTimeRestrictionEnabled == v13)
      {
        OUTLINED_FUNCTION_26_28();
        (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v14 + 832))(v91, v5);
        goto LABEL_37;
      }

      if ((id)_INStartCallIntentResponseCodeFailureDownTimeRestrictionEnabled == v13)
      {
        outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v9);
        uint64_t v52 = _swiftEmptyArrayStorage;
        if (!v51)
        {
          uint64_t v83 = v5;
          goto LABEL_43;
        }

        unint64_t v53 = (unint64_t)v51;
        unint64_t v93 = (unint64_t)_swiftEmptyArrayStorage;
        OUTLINED_FUNCTION_71();
        if (v55)
        {
          OUTLINED_FUNCTION_36();
          uint64_t v56 = OUTLINED_FUNCTION_15_4();
          if (v56) {
            goto LABEL_21;
          }
        }

        else
        {
          uint64_t v56 = *(void *)(v54 + 16);
          OUTLINED_FUNCTION_36();
          if (v56)
          {
LABEL_21:
            uint64_t v90 = OUTLINED_FUNCTION_18_22();
            if (v56 < 1)
            {
              __break(1u);
              JUMPOUT(0x131154LL);
            }

            uint64_t v57 = 0LL;
            unint64_t v87 = v53 & 0xC000000000000001LL;
            uint64_t v88 = v56;
            uint64_t v89 = (void *)v53;
            do
            {
              uint64_t v58 = v5;
              if (v87) {
                id v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v53);
              }
              else {
                id v59 = OUTLINED_FUNCTION_27_10(v53 + 8 * v57);
              }
              uint64_t v60 = v59;
              static Device.current.getter(v94);
              uint64_t v61 = v94[4];
              OUTLINED_FUNCTION_49_0(v94);
              uint64_t v62 = OUTLINED_FUNCTION_67();
              dispatch thunk of DeviceState.siriLocale.getter(v62, v61);
              OUTLINED_FUNCTION_57_4();
              static PhonePerson.make(phonePerson:options:locale:)(v60, 0, v1);
              uint64_t v64 = v63;
              OUTLINED_FUNCTION_35_22();

              uint64_t v5 = v58;
              if (v64)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
                unint64_t v67 = *(void *)((char *)&dword_10 + (v93 & 0xFFFFFFFFFFFFFF8LL));
                unint64_t v66 = *(void *)((char *)&dword_18 + (v93 & 0xFFFFFFFFFFFFFF8LL));
                if (v67 >= v66 >> 1) {
                  OUTLINED_FUNCTION_3_25(v67 + 1, v66);
                }
                uint64_t v68 = OUTLINED_FUNCTION_102_4(v67);
                specialized Array._endMutation()(v68, v69, v70, v71);
              }

              ++v57;
              unint64_t v53 = (unint64_t)v89;
            }

            while (v88 != v57);
            OUTLINED_FUNCTION_70_2();
            uint64_t v52 = (void *)v93;
            goto LABEL_42;
          }
        }

        OUTLINED_FUNCTION_70_2();
LABEL_42:
        uint64_t v83 = v5;
        OUTLINED_FUNCTION_70_2();
LABEL_43:
        uint64_t v84 = v91;
        uint64_t v85 = *(void **)(v92 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
        id v86 = v9;
        OUTLINED_FUNCTION_58_11();
        OUTLINED_FUNCTION_66_10();
        uint64_t v31 = PhonePersonList.__allocating_init(list:)((uint64_t)v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                   + *v85
                                                                   + 768))( v5,  v31,  v84,  v83);
        OUTLINED_FUNCTION_16_3();
LABEL_8:
        uint64_t v32 = v31;
        goto LABEL_16;
      }

      OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_88_8();
      OUTLINED_FUNCTION_13_48(v81);
      OUTLINED_FUNCTION_75_9();
      OUTLINED_FUNCTION_76_10();
      uint64_t v48 = *(void (**)(void))(class metadata base offset for StartCallCATs + v82 + 544);
LABEL_15:
      v48();
      uint64_t v32 = v5;
LABEL_16:
      swift_release(v32);
LABEL_37:
      OUTLINED_FUNCTION_7_5();
      return;
  }

uint64_t StartCallCatTemplatingService.makeGenericErrorDialog(app:_:)()
{
  uint64_t v1 = *(void **)((char *)v0 + direct field offset for StartCallCatTemplatingService.startCallCatFamily);
  OUTLINED_FUNCTION_50_6();
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 40),  (uint64_t)v3);
  SirikitDeviceState.__allocating_init(from:)(v3);
  (*(void (**)(void))(class metadata base offset for StartCallCATs + *v1 + 928))();
  return OUTLINED_FUNCTION_76();
}

Swift::Bool __swiftcall StartCallCatTemplatingService.isRelationshipRequest(intent:)(INStartCallIntent intent)
{
  Swift::Bool v26 = 0;
  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(intent.super.super.isa);
  if (v2)
  {
    uint64_t v3 = v2;
    OUTLINED_FUNCTION_71();
    if (v5) {
      goto LABEL_17;
    }
    uint64_t v6 = *(void *)(v4 + 16);
    OUTLINED_FUNCTION_8_1();
    for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v14))
    {
      uint64_t v7 = 4LL;
      while (1)
      {
        id v8 = (v3 & 0xC000000000000001LL) != 0 ? (id)OUTLINED_FUNCTION_5_49(v7 - 4) : *(id *)(v3 + 8 * v7);
        uint64_t v9 = v8;
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1LL)) {
          break;
        }
        id v11 = [v8 relationship];

        BOOL v12 = v11 != 0LL;
        ++v7;
        if (v11) {
          BOOL v13 = 1;
        }
        else {
          BOOL v13 = v10 == v6;
        }
        if (v13) {
          goto LABEL_22;
        }
      }

      __break(1u);
LABEL_17:
      if (v3 >= 0) {
        uint64_t v14 = v4;
      }
      else {
        uint64_t v14 = v3;
      }
      OUTLINED_FUNCTION_8_1();
    }

    BOOL v12 = 0;
LABEL_22:
    OUTLINED_FUNCTION_7_4(v3);
    Swift::Bool v26 = v12;
  }

  else
  {
    BOOL v12 = 0;
  }

  (*(void (**)(__int128 *__return_ptr))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                 + *v1
                                                 + 88))(&v23);
  if (v24)
  {
    outlined init with take of AppSelectionSignalComponent(&v23, (uint64_t)v25);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v25, (uint64_t)&v23);
    if (v12)
    {
      Swift::Bool v15 = 1;
    }

    else
    {
      OUTLINED_FUNCTION_49_0(&v23);
      Swift::Bool v15 = PhoneCallNLIntent.hasRelationship()();
    }

    __swift_destroy_boxed_opaque_existential_1(v25);
    __swift_destroy_boxed_opaque_existential_1(&v23);
    Swift::Bool v26 = v15;
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v23,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  BOOL v17 = v26;
  uint64_t v18 = (os_log_s *)OUTLINED_FUNCTION_9();
  os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v21 = 67109120;
    LODWORD(v25[0]) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v25, (char *)v25 + 4, v21 + 4);
    _os_log_impl(&dword_0, v18, v20, "#StartCallCatTemplatingService isRelationshipRequest: %{BOOL}d", v21, 8u);
    OUTLINED_FUNCTION_0_2((uint64_t)v21);
  }

  swift_beginAccess(&v26, v25, 0LL, 0LL);
  return v26;
}

uint64_t StartCallCatTemplatingService.getContactsInferenceSource(intent:featureManager:)(void *a1)
{
  if (!v1) {
    return 1LL;
  }
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_71();
  if (v4)
  {
    if (v2 >= 0) {
      uint64_t v21 = v3;
    }
    else {
      uint64_t v21 = v2;
    }
    OUTLINED_FUNCTION_8_1();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v21);
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v5 = *(void *)(v3 + 16);
  }

  if (v5 != 1
    || ((specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v2 & 0xC000000000000001LL) == 0, v2),
         (v2 & 0xC000000000000001LL) != 0)
      ? (id v6 = (id)OUTLINED_FUNCTION_5_49(0LL))
      : (id v6 = *(id *)(v2 + 32)),
        outlined bridged method (ob) of @objc INPerson.siriMatches.getter(v6),
        !v7))
  {
    OUTLINED_FUNCTION_39();
    return 1LL;
  }

  uint64_t v8 = v7;
  unint64_t v9 = v7 & 0xC000000000000001LL;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v7 & 0xC000000000000001LL) == 0, v7);
  if (v9) {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v8);
  }
  else {
    id v10 = *(id *)(v8 + 32);
  }
  id v11 = v10;
  OUTLINED_FUNCTION_62();
  if (!INPerson.isProvidedByPlus.getter())
  {
    OUTLINED_FUNCTION_39();

    return 1LL;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  BOOL v13 = (os_log_s *)__swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v14 = OUTLINED_FUNCTION_8_1();
  Logger.logObject.getter(v14);
  os_log_type_t v15 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    BOOL v17 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v16 = 138412290;
    if ((v2 & 0xC000000000000001LL) != 0) {
      id v18 = (id)OUTLINED_FUNCTION_5_49(0LL);
    }
    else {
      id v18 = *(id *)(v2 + 32);
    }
    id v20 = v18;
    id v22 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v16 + 4);
    *BOOL v17 = v20;
    OUTLINED_FUNCTION_7_4(v2);
    OUTLINED_FUNCTION_57_0( &dword_0,  v13,  v15,  "#StartCallCatTemplatingService Found a contact that is inferred by PLUS: %@",  v16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v17);
    OUTLINED_FUNCTION_0_2((uint64_t)v17);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  else
  {

    OUTLINED_FUNCTION_7_4(v2);
  }

  return 0LL;
}

void StartCallCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( uint64_t a1, uint64_t a2)
{
}

uint64_t StartCallCatTemplatingService.__ivar_destroyer()
{
  return swift_release(*(void *)(v0 + direct field offset for StartCallCatTemplatingService.unsupportedFlowCats));
}

void StartCallCatTemplatingService.deinit()
{
}

void specialized PhoneCallBaseCatTemplatingService.deinit()
{
  uint64_t v0 = DucTemplatingService.deinit();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_45();
  OUTLINED_FUNCTION_69_12(*(void *)(v1 + 24));
  OUTLINED_FUNCTION_11_45();
  OUTLINED_FUNCTION_69_12(*(void *)(v2 + 32));
  OUTLINED_FUNCTION_11_45();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + *(void *)(v3 + 40)));
  OUTLINED_FUNCTION_11_45();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + *(void *)(v4 + 48)));
  OUTLINED_FUNCTION_11_45();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0 + *(void *)(v5 + 56),  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  OUTLINED_FUNCTION_11_45();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + *(void *)(v6 + 64)));
  OUTLINED_FUNCTION_11_45();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + *(void *)(v7 + 72)));
  OUTLINED_FUNCTION_11_45();
  OUTLINED_FUNCTION_69_12(*(void *)(v8 + 80));
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCatTemplatingService.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 280LL, 7LL);
}

uint64_t closure #1 in Signpost.OpenSignpost.end(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  return a6(a1);
}

void outlined bridged method (ob) of @objc INPerson.siriMatches.getter(void *a1)
{
  id v2 = [a1 siriMatches];

  if (v2)
  {
    unint64_t v3 = OUTLINED_FUNCTION_68();
    OUTLINED_FUNCTION_153_2(v3);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t outlined bridged method (pb) of @objc INCallGroup.groupName.getter(void *a1)
{
  return outlined bridged method (pb) of @objc INCallGroup.groupName.getter(a1, (SEL *)&selRef_groupName);
}

uint64_t outlined bridged method (pb) of @objc INCallGroup.groupId.getter(void *a1)
{
  return outlined bridged method (pb) of @objc INCallGroup.groupName.getter(a1, (SEL *)&selRef_groupId);
}

uint64_t outlined bridged method (pb) of @objc INCallGroup.groupName.getter(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];
  if (!v3) {
    return 0LL;
  }
  uint64_t v4 = OUTLINED_FUNCTION_126_3((uint64_t)v3);

  return v4;
}

void outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(void *a1)
{
  id v1 = [a1 restrictedContacts];
  if (v1)
  {
    id v2 = v1;
    unint64_t v3 = OUTLINED_FUNCTION_68();
    OUTLINED_FUNCTION_153_2(v3);
  }

  OUTLINED_FUNCTION_2();
}

void specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)()
{
  uint64_t v4 = v3;
  uint64_t v5 = 0x4E574F4E4B4E55LL;
  OUTLINED_FUNCTION_94_4();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_23_27(v6, v85);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_24_22();
  __chkstk_darwin();
  OUTLINED_FUNCTION_28_25();
  uint64_t v7 = __chkstk_darwin();
  OUTLINED_FUNCTION_86_7(v7, v8, v9, v10, v11, v12, v13, v14, v86);
  uint64_t v15 = __chkstk_darwin();
  OUTLINED_FUNCTION_111_4(v15, v16, v17, v18, v19, v20, v21, v22, v87);
  id v24 = OUTLINED_FUNCTION_23_24(v23, "callCapability");
  if (!v24)
  {
    OUTLINED_FUNCTION_4_52();
    goto LABEL_10;
  }

  int BackingType = INCallCapabilityGetBackingType(v24);
  if (BackingType == 2)
  {
    Swift::Bool v26 = @"VIDEO_CALL";
  }

  else
  {
    if (BackingType != 1)
    {
      OUTLINED_FUNCTION_18_34();
      objc_claimAutoreleasedReturnValue([v28 stringWithFormat:@"(unknown: %i)"]);
      OUTLINED_FUNCTION_13_19();
      goto LABEL_9;
    }

    Swift::Bool v26 = @"AUDIO_CALL";
  }

  char v27 = v26;
LABEL_9:
  id v29 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_47_12((uint64_t)v29);
  OUTLINED_FUNCTION_20_27();
LABEL_10:
  OUTLINED_FUNCTION_0_19((uint64_t)v0);
  OUTLINED_FUNCTION_26_0();
  uint64_t v30 = OUTLINED_FUNCTION_21_28(v91);
  id v31 = OUTLINED_FUNCTION_23_24(v30, "audioRoute");
  if (!v31)
  {
    OUTLINED_FUNCTION_4_52();
    goto LABEL_21;
  }

  int v32 = INCallAudioRouteGetBackingType(v31);
  switch(v32)
  {
    case 4:
      uint64_t v33 = @"HEY_SIRI_AUDIO_ROUTE";
      break;
    case 3:
      uint64_t v33 = @"BLUETOOTH_AUDIO_ROUTE";
      break;
    case 2:
      uint64_t v33 = @"SPEAKERPHONE_AUDIO_ROUTE";
      break;
    default:
      OUTLINED_FUNCTION_18_34();
      objc_claimAutoreleasedReturnValue([v35 stringWithFormat:@"(unknown: %i)"]);
      OUTLINED_FUNCTION_13_19();
      goto LABEL_20;
  }

  uint64_t v34 = v33;
LABEL_20:
  id v36 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_47_12((uint64_t)v36);
  OUTLINED_FUNCTION_20_27();
LABEL_21:
  OUTLINED_FUNCTION_0_19((uint64_t)v0);
  uint64_t v37 = OUTLINED_FUNCTION_21_28(v92);
  id v38 = OUTLINED_FUNCTION_23_24(v37, "preferredCallProvider");
  if (!v38)
  {
    OUTLINED_FUNCTION_4_52();
    goto LABEL_32;
  }

  int v39 = INPreferredCallProviderGetBackingType(v38);
  switch(v39)
  {
    case 4:
      uint64_t v40 = @"THIRD_PARTY_PROVIDER";
      break;
    case 3:
      uint64_t v40 = @"FACETIME_PROVIDER";
      break;
    case 2:
      uint64_t v40 = @"TELEPHONY_PROVIDER";
      break;
    default:
      OUTLINED_FUNCTION_18_34();
      objc_claimAutoreleasedReturnValue([v42 stringWithFormat:@"(unknown: %i)"]);
      OUTLINED_FUNCTION_13_19();
      goto LABEL_31;
  }

  uint64_t v41 = v40;
LABEL_31:
  id v43 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_47_12((uint64_t)v43);
  OUTLINED_FUNCTION_20_27();
LABEL_32:
  OUTLINED_FUNCTION_0_19((uint64_t)v0);
  uint64_t v44 = OUTLINED_FUNCTION_21_28(v2);
  id v45 = OUTLINED_FUNCTION_23_24(v44, "destinationType");
  if (v45)
  {
    switch(INCallDestinationTypeGetBackingType(v45))
    {
      case 1u:
        uint64_t v46 = @"NORMAL_DESTINATION";
        goto LABEL_41;
      case 2u:
        uint64_t v46 = @"EMERGENCY_DESTINATION";
        goto LABEL_41;
      case 3u:
        uint64_t v46 = @"VOICEMAIL_DESTINATION";
        goto LABEL_41;
      case 4u:
        uint64_t v46 = @"REDIAL_DESTINATION";
        goto LABEL_41;
      case 5u:
        uint64_t v46 = @"CALL_BACK_DESTINATION";
LABEL_41:
        uint64_t v48 = v46;
        break;
      default:
        OUTLINED_FUNCTION_18_34();
        objc_claimAutoreleasedReturnValue([v47 stringWithFormat:@"(unknown: %i)"]);
        OUTLINED_FUNCTION_13_19();
        break;
    }

    id v49 = OUTLINED_FUNCTION_4_20();
    uint64_t v5 = OUTLINED_FUNCTION_126_3((uint64_t)v49);
  }

  OUTLINED_FUNCTION_0_19(v5);
  OUTLINED_FUNCTION_21_28(v1);
  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v4);
  uint64_t v88 = v2;
  uint64_t v89 = v1;
  uint64_t v90 = v4;
  if (v50)
  {
    uint64_t v51 = v50;
    void v94[5] = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_71();
    if (v52)
    {
      OUTLINED_FUNCTION_73_12();
      uint64_t v5 = OUTLINED_FUNCTION_15_4();
      if (v5) {
        goto LABEL_46;
      }
    }

    else
    {
      OUTLINED_FUNCTION_106_3();
      if (v5)
      {
LABEL_46:
        OUTLINED_FUNCTION_18_22();
        if (v5 < 1)
        {
          __break(1u);
          goto LABEL_80;
        }

        OUTLINED_FUNCTION_105_4();
        do
        {
          if (v2) {
            OUTLINED_FUNCTION_117_3();
          }
          else {
            OUTLINED_FUNCTION_27_10(v51 + 8 * v92);
          }
          OUTLINED_FUNCTION_110_6();
          OUTLINED_FUNCTION_27_28();
          __swift_destroy_boxed_opaque_existential_1(v94);
          OUTLINED_FUNCTION_55_10(v4, 0);
          uint64_t v54 = v53;
          OUTLINED_FUNCTION_36_17();

          if (v54)
          {
            OUTLINED_FUNCTION_101_4();
            OUTLINED_FUNCTION_100_4();
            if (v56) {
              OUTLINED_FUNCTION_3_25((uint64_t)v4 + 1, v55);
            }
            uint64_t v57 = OUTLINED_FUNCTION_102_4((uint64_t)v4);
            specialized Array._endMutation()(v57, v58, v59, v60);
          }

          OUTLINED_FUNCTION_97_6();
        }

        while (!v61);
        OUTLINED_FUNCTION_129();
        goto LABEL_60;
      }
    }

    OUTLINED_FUNCTION_129();
LABEL_60:
    OUTLINED_FUNCTION_129();
  }

  type metadata accessor for PhonePersonList();
  uint64_t v62 = OUTLINED_FUNCTION_22_10();
  outlined bridged method (pb) of @objc INStartCallIntent.callGroups.getter(v4);
  if (v63)
  {
    uint64_t v64 = v63;
    v94[0] = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_71();
    if (v66)
    {
      OUTLINED_FUNCTION_36();
      uint64_t v67 = OUTLINED_FUNCTION_15_4();
      if (v67)
      {
LABEL_64:
        type metadata accessor for PhoneCallGroup(0LL);
        if (v67 >= 1)
        {
          uint64_t v93 = v62;
          for (uint64_t i = 0LL; i != v67; ++i)
          {
            if ((v64 & 0xC000000000000001LL) != 0) {
              id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v64);
            }
            else {
              id v69 = OUTLINED_FUNCTION_27_10(v64 + 8 * i);
            }
            uint64_t v70 = v69;
            uint64_t v71 = outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v69, (SEL *)&selRef_groupName);
            unint64_t v73 = v72;
            uint64_t v74 = outlined bridged method (pb) of @objc INCallGroup.groupName.getter(v70, (SEL *)&selRef_groupId);
            static PhoneCallGroup.make(groupName:groupId:)(v71, v73, v74, v75);
            uint64_t v77 = v76;

            swift_bridgeObjectRelease();
            uint64_t v78 = swift_bridgeObjectRelease();
            if (v77)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
              unint64_t v80 = *(void *)((char *)&dword_10 + (v94[0] & 0xFFFFFFFFFFFFFF8LL));
              unint64_t v79 = *(void *)((char *)&dword_18 + (v94[0] & 0xFFFFFFFFFFFFFF8LL));
              if (v80 >= v79 >> 1) {
                OUTLINED_FUNCTION_3_25(v80 + 1, v79);
              }
              uint64_t v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v77);
              specialized Array._endMutation()(v81, v82, v83, v84);
            }
          }

          OUTLINED_FUNCTION_70_2();
          uint64_t v62 = v93;
          goto LABEL_77;
        }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int BackingType;
  __CFString *v23;
  __CFString *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  int v31;
  __CFString *v32;
  __CFString *v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  int v38;
  __CFString *v39;
  __CFString *v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  __CFString *v45;
  id v46;
  __CFString *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void v70[6];
  OUTLINED_FUNCTION_29_2();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_94_4();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_23_27(v5, v65);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_24_22();
  __chkstk_darwin();
  OUTLINED_FUNCTION_28_25();
  uint64_t v6 = __chkstk_darwin();
  OUTLINED_FUNCTION_86_7(v6, v7, v8, v9, v10, v11, v12, v13, v66);
  uint64_t v14 = __chkstk_darwin();
  OUTLINED_FUNCTION_111_4(v14, v15, v16, v17, v18, v19, v20, v21, v67);
  int BackingType = INCallCapabilityGetBackingType(1LL);
  if (BackingType == 2)
  {
    uint64_t v23 = @"VIDEO_CALL";
    goto LABEL_5;
  }

  if (BackingType == 1)
  {
    uint64_t v23 = @"AUDIO_CALL";
LABEL_5:
    id v24 = v23;
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_18_34();
  objc_claimAutoreleasedReturnValue([v25 stringWithFormat:@"(unknown: %i)"]);
  OUTLINED_FUNCTION_13_19();
LABEL_7:
  Swift::Bool v26 = 0x4E574F4E4B4E55LL;
  char v27 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_72_12((uint64_t)v27);
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_1_34((uint64_t)v0, v1);
  id v28 = OUTLINED_FUNCTION_26_0();
  id v29 = OUTLINED_FUNCTION_22_28(v68);
  uint64_t v30 = OUTLINED_FUNCTION_23_24(v29, "audioRoute");
  if (!v30)
  {
    OUTLINED_FUNCTION_4_52();
    goto LABEL_18;
  }

  id v31 = INCallAudioRouteGetBackingType(v30);
  switch(v31)
  {
    case 4:
      int v32 = @"HEY_SIRI_AUDIO_ROUTE";
      break;
    case 3:
      int v32 = @"BLUETOOTH_AUDIO_ROUTE";
      break;
    case 2:
      int v32 = @"SPEAKERPHONE_AUDIO_ROUTE";
      break;
    default:
      OUTLINED_FUNCTION_18_34();
      objc_claimAutoreleasedReturnValue([v34 stringWithFormat:@"(unknown: %i)"]);
      OUTLINED_FUNCTION_13_19();
      goto LABEL_17;
  }

  uint64_t v33 = v32;
LABEL_17:
  id v35 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_47_12((uint64_t)v35);
  OUTLINED_FUNCTION_20_27();
LABEL_18:
  OUTLINED_FUNCTION_0_19((uint64_t)v0);
  id v36 = OUTLINED_FUNCTION_22_28(v69);
  uint64_t v37 = OUTLINED_FUNCTION_23_24(v36, "preferredCallProvider");
  if (!v37)
  {
    OUTLINED_FUNCTION_4_52();
    goto LABEL_29;
  }

  id v38 = INPreferredCallProviderGetBackingType(v37);
  switch(v38)
  {
    case 4:
      int v39 = @"THIRD_PARTY_PROVIDER";
      break;
    case 3:
      int v39 = @"FACETIME_PROVIDER";
      break;
    case 2:
      int v39 = @"TELEPHONY_PROVIDER";
      break;
    default:
      OUTLINED_FUNCTION_18_34();
      objc_claimAutoreleasedReturnValue([v41 stringWithFormat:@"(unknown: %i)"]);
      OUTLINED_FUNCTION_13_19();
      goto LABEL_28;
  }

  uint64_t v40 = v39;
LABEL_28:
  id v42 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_47_12((uint64_t)v42);
  OUTLINED_FUNCTION_20_27();
LABEL_29:
  OUTLINED_FUNCTION_0_19((uint64_t)v0);
  id v43 = OUTLINED_FUNCTION_22_28(v2);
  uint64_t v44 = OUTLINED_FUNCTION_23_24(v43, "destinationType");
  if (v44)
  {
    switch(INCallDestinationTypeGetBackingType(v44))
    {
      case 1u:
        id v45 = @"NORMAL_DESTINATION";
        goto LABEL_38;
      case 2u:
        id v45 = @"EMERGENCY_DESTINATION";
        goto LABEL_38;
      case 3u:
        id v45 = @"VOICEMAIL_DESTINATION";
        goto LABEL_38;
      case 4u:
        id v45 = @"REDIAL_DESTINATION";
        goto LABEL_38;
      case 5u:
        id v45 = @"CALL_BACK_DESTINATION";
LABEL_38:
        id v47 = v45;
        break;
      default:
        OUTLINED_FUNCTION_18_34();
        objc_claimAutoreleasedReturnValue([v46 stringWithFormat:@"(unknown: %i)"]);
        OUTLINED_FUNCTION_13_19();
        break;
    }

    uint64_t v48 = OUTLINED_FUNCTION_4_20();
    Swift::Bool v26 = OUTLINED_FUNCTION_126_3((uint64_t)v48);
  }

  OUTLINED_FUNCTION_0_19(v26);
  id v49 = (void *)OUTLINED_FUNCTION_122_4();
  outlined bridged method (pb) of @objc INStartAudioCallIntent.contacts.getter(v49);
  if (v50)
  {
    uint64_t v51 = v50;
    v70[5] = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_71();
    if (v52)
    {
      OUTLINED_FUNCTION_73_12();
      id v28 = OUTLINED_FUNCTION_15_4();
      if (v28) {
        goto LABEL_43;
      }
    }

    else
    {
      OUTLINED_FUNCTION_106_3();
      if (v28)
      {
LABEL_43:
        OUTLINED_FUNCTION_18_22();
        if (v28 < 1)
        {
          __break(1u);
          JUMPOUT(0x1323FCLL);
        }

        OUTLINED_FUNCTION_105_4();
        do
        {
          if (v2) {
            OUTLINED_FUNCTION_117_3();
          }
          else {
            OUTLINED_FUNCTION_27_10(v51 + 8 * v69);
          }
          OUTLINED_FUNCTION_110_6();
          OUTLINED_FUNCTION_27_28();
          __swift_destroy_boxed_opaque_existential_1(v70);
          OUTLINED_FUNCTION_55_10(v4, 0);
          uint64_t v54 = v53;
          OUTLINED_FUNCTION_36_17();

          if (v54)
          {
            OUTLINED_FUNCTION_101_4();
            OUTLINED_FUNCTION_100_4();
            if (v56) {
              OUTLINED_FUNCTION_3_25((uint64_t)v4 + 1, v55);
            }
            uint64_t v57 = OUTLINED_FUNCTION_102_4((uint64_t)v4);
            specialized Array._endMutation()(v57, v58, v59, v60);
          }

          OUTLINED_FUNCTION_97_6();
        }

        while (!v61);
        OUTLINED_FUNCTION_129();
        goto LABEL_57;
      }
    }

    OUTLINED_FUNCTION_129();
LABEL_57:
    OUTLINED_FUNCTION_129();
  }

  OUTLINED_FUNCTION_142_0();
  OUTLINED_FUNCTION_66_10();
  uint64_t v62 = OUTLINED_FUNCTION_22_10();
  OUTLINED_FUNCTION_78_10(v68, v69, v63, v64, v62);

  OUTLINED_FUNCTION_119_3();
  OUTLINED_FUNCTION_7_5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int BackingType;
  __CFString *v13;
  __CFString *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int v21;
  __CFString *v22;
  __CFString *v23;
  id v24;
  id v25;
  int v26;
  __CFString *v27;
  __CFString *v28;
  id v29;
  id v30;
  __CFString *v31;
  id v32;
  __CFString *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t i;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  OUTLINED_FUNCTION_29_2();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = OUTLINED_FUNCTION_94_4();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_23_27(v8, v57[0]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_24_22();
  __chkstk_darwin();
  OUTLINED_FUNCTION_28_25();
  __chkstk_darwin();
  uint64_t v10 = (char *)v57 - v9;
  __chkstk_darwin();
  uint64_t v60 = (uint64_t)v57 - v11;
  int BackingType = INCallCapabilityGetBackingType(2LL);
  if (BackingType == 2)
  {
    uint64_t v13 = @"VIDEO_CALL";
    goto LABEL_5;
  }

  if (BackingType == 1)
  {
    uint64_t v13 = @"AUDIO_CALL";
LABEL_5:
    uint64_t v14 = v13;
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_18_34();
  objc_claimAutoreleasedReturnValue([v15 stringWithFormat:@"(unknown: %i)"]);
  OUTLINED_FUNCTION_13_19();
LABEL_7:
  uint64_t v16 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_72_12((uint64_t)v16);
  OUTLINED_FUNCTION_41_19();
  uint64_t v17 = v60;
  OUTLINED_FUNCTION_1_34(v0, v1);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  uint64_t v19 = OUTLINED_FUNCTION_22_28(v17);
  uint64_t v20 = OUTLINED_FUNCTION_23_24(v19, "audioRoute");
  if (!v20)
  {
    OUTLINED_FUNCTION_4_52();
    goto LABEL_18;
  }

  uint64_t v21 = INCallAudioRouteGetBackingType(v20);
  switch(v21)
  {
    case 4:
      uint64_t v22 = @"HEY_SIRI_AUDIO_ROUTE";
      break;
    case 3:
      uint64_t v22 = @"BLUETOOTH_AUDIO_ROUTE";
      break;
    case 2:
      uint64_t v22 = @"SPEAKERPHONE_AUDIO_ROUTE";
      break;
    default:
      OUTLINED_FUNCTION_18_34();
      objc_claimAutoreleasedReturnValue([v24 stringWithFormat:@"(unknown: %i)"]);
      OUTLINED_FUNCTION_13_19();
      goto LABEL_17;
  }

  uint64_t v23 = v22;
LABEL_17:
  uint64_t v25 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_47_12((uint64_t)v25);
  OUTLINED_FUNCTION_20_27();
LABEL_18:
  OUTLINED_FUNCTION_0_19(v0);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0LL, 1LL, v18);
  Swift::Bool v26 = INPreferredCallProviderGetBackingType(1LL);
  switch(v26)
  {
    case 4:
      char v27 = @"THIRD_PARTY_PROVIDER";
      goto LABEL_24;
    case 3:
      char v27 = @"FACETIME_PROVIDER";
      goto LABEL_24;
    case 2:
      char v27 = @"TELEPHONY_PROVIDER";
LABEL_24:
      id v28 = v27;
      goto LABEL_26;
  }

  OUTLINED_FUNCTION_18_34();
  objc_claimAutoreleasedReturnValue([v29 stringWithFormat:@"(unknown: %i)"]);
  OUTLINED_FUNCTION_13_19();
LABEL_26:
  uint64_t v30 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_72_12((uint64_t)v30);
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_1_34(v0, v1);
  __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v18);
  switch(INCallDestinationTypeGetBackingType(1LL))
  {
    case 1u:
      id v31 = @"NORMAL_DESTINATION";
      goto LABEL_33;
    case 2u:
      id v31 = @"EMERGENCY_DESTINATION";
      goto LABEL_33;
    case 3u:
      id v31 = @"VOICEMAIL_DESTINATION";
      goto LABEL_33;
    case 4u:
      id v31 = @"REDIAL_DESTINATION";
      goto LABEL_33;
    case 5u:
      id v31 = @"CALL_BACK_DESTINATION";
LABEL_33:
      uint64_t v33 = v31;
      break;
    default:
      OUTLINED_FUNCTION_18_34();
      objc_claimAutoreleasedReturnValue([v32 stringWithFormat:@"(unknown: %i)"]);
      OUTLINED_FUNCTION_13_19();
      break;
  }

  uint64_t v34 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_72_12((uint64_t)v34);
  OUTLINED_FUNCTION_41_19();
  OUTLINED_FUNCTION_1_34(v0, v1);
  id v35 = (void *)OUTLINED_FUNCTION_122_4();
  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v35);
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v59 = v10;
    uint64_t v67 = (unint64_t)_swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_71();
    if (v39)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = OUTLINED_FUNCTION_15_4();
      if (v40) {
        goto LABEL_37;
      }
    }

    else
    {
      uint64_t v40 = *(void *)(v38 + 16);
      swift_bridgeObjectRetain();
      if (v40)
      {
LABEL_37:
        char v61 = OUTLINED_FUNCTION_18_22();
        if (v40 < 1)
        {
          __break(1u);
          JUMPOUT(0x1328E0LL);
        }

        v57[1] = v2;
        uint64_t v58 = v6;
        for (uint64_t i = 0LL; i != v40; ++i)
        {
          if ((v37 & 0xC000000000000001LL) != 0) {
            id v42 = OUTLINED_FUNCTION_5_49(i);
          }
          else {
            id v42 = (uint64_t)OUTLINED_FUNCTION_27_10(v37 + 8 * i);
          }
          id v43 = (void *)v42;
          static Device.current.getter(&v64);
          uint64_t v44 = v65;
          id v45 = v66;
          __swift_project_boxed_opaque_existential_1(&v64, v65);
          dispatch thunk of DeviceState.siriLocale.getter(v44, v45);
          __swift_destroy_boxed_opaque_existential_1(&v64);
          OUTLINED_FUNCTION_55_10(v43, v4 & 1);
          id v47 = v46;
          OUTLINED_FUNCTION_36_17();

          if (v47)
          {
            OUTLINED_FUNCTION_101_4();
            id v49 = *(void *)((char *)&dword_10 + (v67 & 0xFFFFFFFFFFFFFF8LL));
            uint64_t v48 = *(void *)((char *)&dword_18 + (v67 & 0xFFFFFFFFFFFFFF8LL));
            if (v49 >= v48 >> 1) {
              OUTLINED_FUNCTION_3_25(v49 + 1, v48);
            }
            uint64_t v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
            specialized Array._endMutation()(v50, v51, v52, v53);
          }
        }

        OUTLINED_FUNCTION_39();
        uint64_t v6 = v58;
        goto LABEL_50;
      }
    }

    swift_bridgeObjectRelease();
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t v10 = v59;
  }

  OUTLINED_FUNCTION_142_0();
  OUTLINED_FUNCTION_66_10();
  uint64_t v54 = OUTLINED_FUNCTION_22_10();
  OUTLINED_FUNCTION_78_10(v60, (uint64_t)v10, v55, v56, v54);

  OUTLINED_FUNCTION_119_3();
  OUTLINED_FUNCTION_7_5();
}

LABEL_80:
        __break(1u);
        JUMPOUT(0x131F88LL);
      }
    }

    else
    {
      uint64_t v67 = *(void *)(v65 + 16);
      OUTLINED_FUNCTION_36();
      if (v67) {
        goto LABEL_64;
      }
    }

    OUTLINED_FUNCTION_70_2();
LABEL_77:
    OUTLINED_FUNCTION_70_2();
  }

  OUTLINED_FUNCTION_142_0();
  PhoneStartCallIntent.__allocating_init(callCapability:audioRoute:preferredCallProvider:destinationType:contacts:callGroups:)( v91,  v92,  v88,  v89,  v62);

  OUTLINED_FUNCTION_119_3();
  OUTLINED_FUNCTION_7_5();
}

    uint64_t v152 = v221;
    if ((unint64_t)v221 >> 62)
    {
      if (v221 < 0) {
        uint64_t v172 = v221;
      }
      else {
        uint64_t v172 = v221 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      uint64_t v153 = _CocoaArrayWrapper.endIndex.getter(v172);
      uint64_t v123 = swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v153 = *(void *)((char *)&dword_10 + (v221 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v154 = v201;
    uint64_t v155 = v189;
    if (v153)
    {
      static Transformer<>.transformer.getter(v123);
      __chkstk_darwin();
      *(&v184 - __swift_destroy_boxed_opaque_existential_1(v0 + 2) = (uint64_t)v155;
      swift_bridgeObjectRetain();
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology23UsoEntity_common_PersonCG_So8INPersonCsAE_pTg5( (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))partial apply for closure #3 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:),  (uint64_t)(&v184 - 4),  v152);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v186 + 8))(v155, v187);
LABEL_91:
        (*(void (**)(char *, uint64_t))(v194 + 8))(v154, v195);
        swift_bridgeObjectRelease();
        uint64_t v160 = v193;
        Signpost.OpenSignpost.end()();
        return swift_release(v160);
      }

      uint64_t v142 = v156;
      swift_bridgeObjectRelease();
      if ((unint64_t)v152 >> 62)
      {
        if (v152 < 0) {
          uint64_t v177 = v152;
        }
        else {
          uint64_t v177 = v152 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain();
        uint64_t v161 = _CocoaArrayWrapper.endIndex.getter(v177);
      }

      else
      {
        uint64_t v161 = *(void *)((char *)&dword_10 + (v152 & 0xFFFFFFFFFFFFF8LL));
        swift_bridgeObjectRetain();
      }

      uint64_t v202 = 0LL;
      if (!v161)
      {
        swift_bridgeObjectRelease();
LABEL_109:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v186 + 8))(v189, v187);
LABEL_110:
        uint64_t v145 = 0LL;
LABEL_145:
        swift_bridgeObjectRetain();
        static PhoneCallNLv4Intent.appendNewContactQueries(contactQueries:persons:)();
        uint64_t v143 = v180;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v181 = *(void (**)(char *, uint64_t))(v194 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v181(v154, v195);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v182 = v193;
        Signpost.OpenSignpost.end()();
        uint64_t result = swift_release(v182);
        uint64_t v144 = 0LL;
        uint64_t v146 = 0LL;
        uint64_t v151 = 0;
        goto LABEL_146;
      }

      uint64_t v217 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if ((v161 & 0x8000000000000000LL) == 0)
      {
        uint64_t v162 = 0LL;
        uint64_t v163 = v217;
        do
        {
          if ((v152 & 0xC000000000000001LL) != 0)
          {
            uint64_t v164 = specialized _ArrayBuffer._getElementSlowPath(_:)(v162, v152);
            uint64_t v165 = v164;
          }

          else
          {
            uint64_t v165 = *(void *)(v152 + 8 * v162 + 32);
            uint64_t v164 = swift_retain();
          }

          if ((v226 & 1) != 0)
          {
            UsoEntity_common_Person.toContactQuery()(v164);
          }

          else
          {
            uint64_t v166 = UsoEntity_common_Person.getRedactCommonPerson()(v164);
            UsoEntity_common_Person.toContactQuery()(v166);
            swift_release(v165);
            uint64_t v165 = v166;
          }

          swift_release(v165);
          uint64_t v217 = v163;
          uint64_t v167 = v163[2];
          if (v167 >= v163[3] >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v163 = v217;
          }

          ++v162;
          v163[2] = v167 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v208 + 32))( (unint64_t)v163 + ((*(unsigned __int8 *)(v208 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))
          + *(void *)(v208 + 72) * v167,
            v210,
            v209);
        }

        while (v161 != v162);
        swift_bridgeObjectRelease();
        uint64_t v154 = v201;
        goto LABEL_109;
      }

      __break(1u);
      goto LABEL_139;
    }

    swift_bridgeObjectRelease();
    uint64_t v157 = v220;
    if ((unint64_t)v220 >> 62)
    {
      if (v220 < 0) {
        uint64_t v175 = v220;
      }
      else {
        uint64_t v175 = v220 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      uint64_t v176 = _CocoaArrayWrapper.endIndex.getter(v175);
      swift_bridgeObjectRelease();
      if (v176) {
        goto LABEL_87;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v220 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_87:
      if (one-time initialization token for transformer != -1) {
        swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
      }
      uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Agent, INPerson?>);
      __swift_project_value_buffer(v158, (uint64_t)static Transformer<>.transformer);
      *(&v184 - __swift_destroy_boxed_opaque_existential_1(v0 + 2) = __chkstk_darwin();
      specialized Sequence.compactMap<A>(_:)( (void *(*)(uint64_t *__return_ptr, uint64_t *))partial apply for closure #5 in static Transformer<>.getTargetContactsListFromRecipients(recipients:referenceResolver:phoneCallVerb:featureManager:isRedirectBusinessCall:siriKitEventSender:),  (uint64_t)(&v184 - 4),  v157);
      if (v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_91;
      }

      uint64_t v142 = v159;
      uint64_t v202 = 0LL;
      swift_bridgeObjectRelease();
      goto LABEL_110;
    }

    swift_bridgeObjectRelease();
    uint64_t v142 = v219;
    if (!((unint64_t)v219 >> 62))
    {
      if (!*(void *)((char *)&dword_10 + (v219 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_143:
        uint64_t v145 = 0LL;
        goto LABEL_144;
      }

      os_log_type_t v122 = (void *)v144[5];
      swift_retain();
      uint64_t v123 = INPreferredCallProviderGetBackingType(2LL);
      uint64_t v139 = v22;
      switch((_DWORD)v123)
      {
        case 4:
          uint64_t v124 = @"THIRD_PARTY_PROVIDER";
          goto LABEL_86;
        case 3:
          uint64_t v124 = @"FACETIME_PROVIDER";
          goto LABEL_86;
        case 2:
          uint64_t v124 = @"TELEPHONY_PROVIDER";
LABEL_86:
          uint64_t v125 = v124;
          goto LABEL_88;
      }

      uint64_t v124 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v123));
LABEL_88:
      unint64_t v126 = v124;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v126);

      uint64_t v127 = OUTLINED_FUNCTION_150_9();
      OUTLINED_FUNCTION_1_34(v127, v128);
      unint64_t v129 = OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_42_30(v129);
      OUTLINED_FUNCTION_18_22();
      ContactRelatedOr = specialized INPersonContainingIntent.isFirstContactRelatedOrMyself.getter();
      OUTLINED_FUNCTION_60_6();
      uint64_t v131 = v148;
      unint64_t v132 = v149;
      __swift_project_boxed_opaque_existential_1(v147, v148);
      dispatch thunk of DeviceState.siriLocale.getter(v131, v132);
      __swift_destroy_boxed_opaque_existential_1(v147);
      static PhonePerson.make(phonePerson:options:locale:)(v116, ContactRelatedOr & 1, v42);
      uint64_t v134 = v133;
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v42, v142);
      unint64_t v135 = v139;
      OUTLINED_FUNCTION_98_17( v139,  (uint64_t)v37,  v134,  v140,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(class metadata base offset for StartCallCATs + *v122 + 1792));
      OUTLINED_FUNCTION_31_1(v135);
      OUTLINED_FUNCTION_22();

      OUTLINED_FUNCTION_164_0();
      outlined destroy of PhoneCallNLIntent?( (uint64_t)v37,  &demangling cache variable for type metadata for SpeakableString?);
      unint64_t v111 = OUTLINED_FUNCTION_150_9();
LABEL_89:
      outlined destroy of PhoneCallNLIntent?(v111, v110);
LABEL_90:

      OUTLINED_FUNCTION_7_5();
      return;
    case 4uLL:
      OUTLINED_FUNCTION_182_4();
      if (!v62) {
        goto LABEL_65;
      }
      uint64_t v63 = v62;
      uint64_t v146 = (unint64_t)_swiftEmptyArrayStorage;
      OUTLINED_FUNCTION_71();
      if (v65)
      {
        OUTLINED_FUNCTION_8_1();
        uint64_t v66 = OUTLINED_FUNCTION_61_1();
        if (!v66) {
          goto LABEL_64;
        }
      }

      else
      {
        uint64_t v66 = *(void *)(v64 + 16);
        OUTLINED_FUNCTION_8_1();
        if (!v66) {
          goto LABEL_64;
        }
      }

      uint64_t v137 = a21;
      OUTLINED_FUNCTION_18_22();
      if (v66 < 1)
      {
        __break(1u);
LABEL_92:
        OUTLINED_FUNCTION_29_7();
        goto LABEL_53;
      }

      for (uint64_t i = 0LL; i != v66; ++i)
      {
        if ((v63 & 0xC000000000000001LL) != 0)
        {
          uint64_t v68 = OUTLINED_FUNCTION_150_9();
          uint64_t v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v68, v69);
        }

        else
        {
          uint64_t v70 = OUTLINED_FUNCTION_27_10(v63 + 8 * i);
        }

        uint64_t v71 = v70;
        OUTLINED_FUNCTION_60_6();
        OUTLINED_FUNCTION_34_40(v147);
        __swift_destroy_boxed_opaque_existential_1(v147);
        OUTLINED_FUNCTION_70_23(v71, 0, (uint64_t)v44);
        unint64_t v73 = v72;
        OUTLINED_FUNCTION_120_13();

        if (v73)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
          uint64_t v76 = *(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v75 = *(void *)((char *)&dword_18 + (v146 & 0xFFFFFFFFFFFFFF8LL));
          if (v76 >= v75 >> 1) {
            OUTLINED_FUNCTION_3_25(v76 + 1, v75);
          }
          uint64_t v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v73);
          specialized Array._endMutation()(v77, v78, v79, v80);
        }
      }

uint64_t specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  Swift::Bool v26 = a1;
  uint64_t v27 = a10;
  uint64_t v16 = *(void *)(a9 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(a8 + direct field offset for OUTLINED_FUNCTION_69_12(direct field offset for StartCallCatTemplatingService.startCallCatFamily) = a2;
  *(void *)(a8 + direct field offset for OUTLINED_FUNCTION_69_12(direct field offset for StartCallCatTemplatingService.unsupportedFlowCats) = a5;
  *(void *)(a8 + direct field offset for StartCallCatTemplatingService.operationManager) = a7;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v30);
  type metadata accessor for StartCallCATs(0LL);
  swift_retain();
  swift_retain();
  uint64_t v21 = swift_retain();
  static CATOption.defaultMode.getter(v21);
  uint64_t v22 = CATWrapper.__allocating_init(options:globals:)(v20, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a6, a9);
  uint64_t v23 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0x6C61437472617473LL,  0xEF3256736375446CLL,  v30,  v28,  v29,  v18,  0LL,  0LL,  0LL,  0LL,  v22,  a8,  a9,  v27);
  swift_release(a2);
  swift_release(a5);
  swift_release(a7);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a6, a9);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return v23;
}

uint64_t specialized StartCallCatTemplatingService.__allocating_init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v22 = a5;
  uint64_t v23 = a7;
  uint64_t v15 = *(void *)(a9 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for StartCallCatTemplatingService(0LL);
  uint64_t v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a6, a9);
  uint64_t v20 = specialized StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)( a1,  a2,  a3,  a4,  v22,  (uint64_t)v17,  v23,  v19,  a9,  a10);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a6, a9);
  return v20;
}

uint64_t objectdestroy_18Tm()
{
  OUTLINED_FUNCTION_90_3();
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

void partial apply for closure #2 in StartCallCatTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:)()
{
}

unint64_t lazy protocol witness table accessor for type ResponseMode and conformance ResponseMode()
{
  unint64_t result = lazy protocol witness table cache variable for type ResponseMode and conformance ResponseMode;
  if (!lazy protocol witness table cache variable for type ResponseMode and conformance ResponseMode)
  {
    uint64_t v1 = type metadata accessor for ResponseMode(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ResponseMode, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ResponseMode and conformance ResponseMode);
  }

  return result;
}

uint64_t sub_132C70()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void partial apply for closure #1 in StartCallCatTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)()
{
}

uint64_t sub_132CD8()
{
  uint64_t v1 = OUTLINED_FUNCTION_48_10();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t partial apply for closure #1 in StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)( uint64_t a1)
{
  return partial apply for closure #1 in StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void))closure #1 in StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:));
}

uint64_t type metadata accessor for StartCallCatTemplatingService(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartCallCatTemplatingService;
  if (!type metadata singleton initialization cache for StartCallCatTemplatingService) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartCallCatTemplatingService);
  }
  return result;
}

uint64_t type metadata completion function for StartCallCatTemplatingService(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + class metadata base offset for StartCallCatTemplatingService);
}

uint64_t ObjC metadata update function for StartCallCatTemplatingService()
{
  return type metadata accessor for StartCallCatTemplatingService(0LL);
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0 = OUTLINED_FUNCTION_48_10();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t partial apply for closure #1 in Signpost.OpenSignpost.end(_:)(uint64_t a1)
{
  if (*(_BYTE *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return closure #1 in Signpost.OpenSignpost.end(_:)( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  v2 | *(unsigned __int8 *)(v1 + 40),  *(uint64_t (**)(uint64_t))(v1 + 48));
}

uint64_t sub_132DEC()
{
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_90_3();
  OUTLINED_FUNCTION_115_3();
  swift_bridgeObjectRelease();
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

void partial apply for closure #1 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2)
{
}

uint64_t sub_132E5C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void partial apply for closure #3 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1)
{
}

uint64_t sub_132E84()
{
  uint64_t v0 = OUTLINED_FUNCTION_48_10();
  return swift_deallocObject(v0, v1, v2);
}

void partial apply for closure #2 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2)
{
}

uint64_t sub_132EBC()
{
  uint64_t v0 = OUTLINED_FUNCTION_48_10();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t partial apply for closure #1 in closure #2 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:)( uint64_t a1)
{
  return partial apply for closure #1 in StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void))closure #1 in closure #2 in StartCallCatTemplatingService.makeIntentHandledDialogHelper(app:intent:intentResponse:_:));
}

uint64_t partial apply for closure #1 in StartCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t outlined init with take of Result<TemplatingResult, Error>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void *outlined destroy of CallRecordToCallBackSlotTemplating(void *a1)
{
  return a1;
}

void *outlined destroy of CallCapabilitySlotTemplating(void *a1)
{
  return a1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_7_54(uint64_t a1)
{
  return swift_allocObject(a1, 64LL, 7LL);
}

  ;
}

void OUTLINED_FUNCTION_13_48(uint64_t a1@<X8>)
{
}

void OUTLINED_FUNCTION_14_35(uint64_t a1@<X8>)
{
}

  ;
}

void OUTLINED_FUNCTION_20_27()
{
}

uint64_t OUTLINED_FUNCTION_22_28(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v1);
}

void OUTLINED_FUNCTION_23_27(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_35_22()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_36_17()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 144) + 8LL))(v0, *(void *)(v1 - 136));
}

uint64_t OUTLINED_FUNCTION_37_21@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + a1);
  *(void *)(v2 - 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  return swift_retain(v3);
}

void OUTLINED_FUNCTION_41_19()
{
}

uint64_t OUTLINED_FUNCTION_47_12(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_48_10()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_55_10(void *a1, char a2)
{
}

void OUTLINED_FUNCTION_58_11()
{
}

uint64_t OUTLINED_FUNCTION_59_12@<X0>(uint64_t a1@<X8>)
{
  return swift_retain(*(void *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_69_12@<X0>(uint64_t a1@<X8>)
{
  return swift_release(*(void *)(v1 + a1));
}

  ;
}

BOOL OUTLINED_FUNCTION_71_8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_72_12(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_73_12()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_75_9()
{
  return SirikitDeviceState.__allocating_init(from:)(v0 - 120);
}

  ;
}

void OUTLINED_FUNCTION_78_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t OUTLINED_FUNCTION_83_7(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

void OUTLINED_FUNCTION_86_7( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = (char *)&a9 - v9;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_91_7(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 57LL, a3, 111LL, 0LL);
}

void OUTLINED_FUNCTION_93_4()
{
}

void *OUTLINED_FUNCTION_94_6(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

  ;
}

void OUTLINED_FUNCTION_99_5()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_101_4()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t OUTLINED_FUNCTION_102_4(uint64_t a1)
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v1);
}

id OUTLINED_FUNCTION_104_4()
{
  return [v1 *(SEL *)(v0 + 2104)];
}

  ;
}

uint64_t OUTLINED_FUNCTION_106_3()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_110_6()
{
  return static Device.current.getter();
}

void OUTLINED_FUNCTION_111_4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_112_2()
{
  return swift_release(*(void *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_115_3()
{
  return swift_release(*(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_117_3()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_122_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_125_5()
{
  return swift_release(*(void *)(v0 - 184));
}

uint64_t OUTLINED_FUNCTION_126_3(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_127_4()
{
  return v0;
}

  ;
}

id one-time initialization function for videoCallImage(uint64_t a1)
{
  return one-time initialization function for videoCallImage(a1, 0LL, &static CallHistoryImage.videoCallImage);
}

void *CallHistoryImage.videoCallImage.unsafeMutableAddressor()
{
  if (one-time initialization token for videoCallImage != -1) {
    swift_once(&one-time initialization token for videoCallImage, one-time initialization function for videoCallImage);
  }
  return &static CallHistoryImage.videoCallImage;
}

id static CallHistoryImage.videoCallImage.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for videoCallImage,  (id *)&static CallHistoryImage.videoCallImage);
}

id one-time initialization function for outgoingCallImage(uint64_t a1)
{
  return one-time initialization function for videoCallImage(a1, 1LL, &static CallHistoryImage.outgoingCallImage);
}

void *CallHistoryImage.outgoingCallImage.unsafeMutableAddressor()
{
  if (one-time initialization token for outgoingCallImage != -1) {
    swift_once( &one-time initialization token for outgoingCallImage,  one-time initialization function for outgoingCallImage);
  }
  return &static CallHistoryImage.outgoingCallImage;
}

id static CallHistoryImage.outgoingCallImage.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for outgoingCallImage,  (id *)&static CallHistoryImage.outgoingCallImage);
}

id static CallHistoryImage.videoCallImage.getter(void *a1, id *a2)
{
  if (*a1 != -1LL) {
    swift_once();
  }
  return *a2;
}

id one-time initialization function for emptyImage(uint64_t a1)
{
  return one-time initialization function for emptyImage(a1, &static CallHistoryImage.emptyImage);
}

void *CallHistoryImage.emptyImage.unsafeMutableAddressor()
{
  if (one-time initialization token for emptyImage != -1) {
    swift_once(&one-time initialization token for emptyImage, one-time initialization function for emptyImage);
  }
  return &static CallHistoryImage.emptyImage;
}

id static CallHistoryImage.emptyImage.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for emptyImage,  (id *)&static CallHistoryImage.emptyImage);
}

id one-time initialization function for unreadImage(uint64_t a1)
{
  return one-time initialization function for videoCallImage(a1, 2LL, &static CallHistoryImage.unreadImage);
}

id one-time initialization function for videoCallImage(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone(SFLocalImage) init];
  [v5 setLocalImageType:a2];
  id result = OUTLINED_FUNCTION_0_57(v5, "setSize:");
  *a3 = v5;
  return result;
}

void *CallHistoryImage.unreadImage.unsafeMutableAddressor()
{
  if (one-time initialization token for unreadImage != -1) {
    swift_once(&one-time initialization token for unreadImage, one-time initialization function for unreadImage);
  }
  return &static CallHistoryImage.unreadImage;
}

id static CallHistoryImage.unreadImage.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for unreadImage,  (id *)&static CallHistoryImage.unreadImage);
}

id one-time initialization function for emptyImageVoicemail(uint64_t a1)
{
  return one-time initialization function for emptyImage(a1, &static CallHistoryImage.emptyImageVoicemail);
}

id one-time initialization function for emptyImage(uint64_t a1, void *a2)
{
  id v3 = [objc_allocWithZone(SFLocalImage) init];
  id result = OUTLINED_FUNCTION_0_57(v3, "setSize:");
  *a2 = v3;
  return result;
}

void *CallHistoryImage.emptyImageVoicemail.unsafeMutableAddressor()
{
  if (one-time initialization token for emptyImageVoicemail != -1) {
    swift_once( &one-time initialization token for emptyImageVoicemail,  one-time initialization function for emptyImageVoicemail);
  }
  return &static CallHistoryImage.emptyImageVoicemail;
}

id static CallHistoryImage.emptyImageVoicemail.getter()
{
  return static CallHistoryImage.videoCallImage.getter( &one-time initialization token for emptyImageVoicemail,  (id *)&static CallHistoryImage.emptyImageVoicemail);
}

ValueMetadata *type metadata accessor for CallHistoryImage()
{
  return &type metadata for CallHistoryImage;
}

id OUTLINED_FUNCTION_0_57(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v3, v2);
}

void UsoTask.hasFaceTimeAudioSemantics.getter()
{
  uint64_t v2 = type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_25_6();
  uint64_t v6 = v4 - v5;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v34[-v9 - 8];
  __chkstk_darwin(v8);
  uint64_t v12 = &v34[-v11 - 8];
  OUTLINED_FUNCTION_10_45();
  if (!v36[3])
  {
    uint64_t v30 = &demangling cache variable for type metadata for Any?;
    id v31 = v36;
LABEL_13:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v31,  v30);
    goto LABEL_18;
  }

  uint64_t v13 = OUTLINED_FUNCTION_27_29();
  uint64_t v14 = v35;
  uint64_t v15 = swift_retain(v35);
  dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter(v36, v15);
  OUTLINED_FUNCTION_122();
  uint64_t v16 = v36[0];
  if (!v36[0])
  {
    uint64_t v32 = v14;
LABEL_17:
    swift_release(v32);
    goto LABEL_18;
  }

  uint64_t v17 = swift_retain(v36[0]);
  uint64_t v18 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v17);
  OUTLINED_FUNCTION_77_0();
  if (!v18)
  {
    OUTLINED_FUNCTION_122();
    OUTLINED_FUNCTION_77_0();
    goto LABEL_18;
  }

  UsoEntity_common_App.applicationId.getter();
  uint64_t v33 = v19;
  uint64_t v21 = v20;
  uint64_t v22 = OUTLINED_FUNCTION_38_1();
  if (!v21)
  {
    OUTLINED_FUNCTION_122();
    uint64_t v32 = v16;
    goto LABEL_17;
  }

  uint64_t v23 = dispatch thunk of UsoEntity_common_PhoneCall.mode.getter(v22);
  if (!v23)
  {
    __swift_storeEnumTagSinglePayload(v0, 1LL, 1LL, v2);
    goto LABEL_20;
  }

  dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter(v23);
  OUTLINED_FUNCTION_38_1();
  if (__swift_getEnumTagSinglePayload(v0, 1LL, v2) == 1)
  {
LABEL_20:
    OUTLINED_FUNCTION_122();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_87_0();
    uint64_t v30 = &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?;
    id v31 = (void *)v0;
    goto LABEL_13;
  }

  OUTLINED_FUNCTION_142((uint64_t)v12, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject(v24, v34);
  *(_OWORD *)(inited + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D880;
  *(void *)(inited + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000012LL;
  *(void *)(inited + 40) = 0x80000000003479B0LL;
  if (one-time initialization token for macFaceTimeBundleId != -1) {
    swift_once( &one-time initialization token for macFaceTimeBundleId,  one-time initialization function for macFaceTimeBundleId);
  }
  uint64_t v26 = unk_477F50;
  *(void *)(inited + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
  *(void *)(inited + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v26;
  swift_bridgeObjectRetain(v26);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  specialized Set.contains(_:)(v33, v21, v27);
  char v29 = v28;
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_142((uint64_t)v10, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  if ((v29 & 1) != 0)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))( v6,  enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Audio(_:),  v2);
    specialized == infix<A>(_:_:)((uint64_t)v10, v6);
    OUTLINED_FUNCTION_122();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_22_29(v6);
    OUTLINED_FUNCTION_22_29((uint64_t)v10);
    OUTLINED_FUNCTION_22_29((uint64_t)v12);
  }

  else
  {
    OUTLINED_FUNCTION_122();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_12_50((uint64_t)v10);
    OUTLINED_FUNCTION_12_50((uint64_t)v12);
  }

uint64_t UsoTask.isSettingsTask.getter()
{
  uint64_t v0 = UsoTask.baseEntityAsString.getter();
  if (v0 == 0x535F6E6F6D6D6F63LL && v1 == 0xEE00676E69747465LL)
  {
    swift_bridgeObjectRelease(0xEE00676E69747465LL);
    return 1LL;
  }

  else
  {
    uint64_t v3 = v1;
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v0, v1, 0x535F6E6F6D6D6F63LL, 0xEE00676E69747465LL, 0LL);
    swift_bridgeObjectRelease(v3);
    return v4 & 1;
  }

uint64_t UsoTask.usoCodeGenConvertedTask.getter()
{
  return static UsoTask_CodegenConverter.convert(task:)(v0);
}

uint64_t UsoTask.isReadOrSummarizeVoicemail.getter()
{
  return UsoTask.isReadOrSummarizeVoicemail.getter( (void (*)(void))&type metadata accessor for UsoTask_summarise_common_Voicemail,  (void (*)(void))&type metadata accessor for UsoTask_read_common_Voicemail);
}

uint64_t UsoTask.isReadOrSummarizeCallHistory.getter()
{
  return UsoTask.isReadOrSummarizeVoicemail.getter( (void (*)(void))&type metadata accessor for UsoTask_summarise_common_PhoneCall,  (void (*)(void))&type metadata accessor for UsoTask_read_common_PhoneCall);
}

uint64_t UsoTask.isReadOrSummarizeVoicemail.getter( void (*a1)(void), void (*a2)(void))
{
  if (v24)
  {
    a1(0LL);
    if (swift_dynamicCast(v22, v23, (char *)&type metadata for Any + 8))
    {
      uint64_t v12 = v22[0];
      goto LABEL_6;
    }
  }

  else
  {
    OUTLINED_FUNCTION_23_28(v5, &demangling cache variable for type metadata for Any?, v6, v7, v8, v9, v10, v11);
  }

  uint64_t v12 = 0LL;
LABEL_6:
  outlined init with take of Any?((uint64_t)v25, (uint64_t)v23);
  if (v12)
  {
    uint64_t v13 = OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_23_28(v13, &demangling cache variable for type metadata for Any?, v14, v15, v16, v17, v18, v19);
    return 1LL;
  }

  outlined init with take of Any?((uint64_t)v23, (uint64_t)v22);
  if (v22[3])
  {
    a2(0LL);
    if ((swift_dynamicCast(&v21, v22, (char *)&type metadata for Any + 8) & 1) != 0)
    {
      swift_release(v21);
      return 1LL;
    }
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v22,  &demangling cache variable for type metadata for Any?);
  }

  return 0LL;
}

uint64_t OUTLINED_FUNCTION_0_58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  return swift_dynamicCast(va1, (uint64_t *)va, v5, a4, 0LL);
}

uint64_t OUTLINED_FUNCTION_4_53@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return swift_dynamicCast(v2 - 120, v2 - 112, a2 + 8, a1, 6LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_8_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return swift_dynamicCast(v7 - 72, va, v6, a4, 0LL);
}

uint64_t OUTLINED_FUNCTION_10_45()
{
  return static UsoTask_CodegenConverter.convert(task:)(v0);
}

uint64_t OUTLINED_FUNCTION_12_50(uint64_t a1)
{
  return v2(a1, v1);
}

void OUTLINED_FUNCTION_20_28(Swift::String a1)
{
}

uint64_t OUTLINED_FUNCTION_22_29(uint64_t a1)
{
  return v2(a1, v1);
}

void OUTLINED_FUNCTION_23_28( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void OUTLINED_FUNCTION_24_23( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
}

uint64_t HandleIntentSubmitter.aceServiceInvoker.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 16, a1);
}

uint64_t CallStateGuardFlow.checks.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 56));
}

uint64_t key path setter for CallStateGuardFlow.exitValue : CallStateGuardFlow(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess(*a2 + 64, v5, 1LL, 0LL);
  *(_BYTE *)(v3 + 64) = v2;
  return result;
}

uint64_t CallStateGuardFlow.exitValue.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

void CallStateGuardFlow.__allocating_init(checks:sharedGlobals:)(uint64_t a1, __int128 *a2)
{
}

uint64_t CallStateGuardFlow.init(checks:sharedGlobals:)(uint64_t a1, __int128 *a2)
{
  *(_BYTE *)(v2 + 64) = 1;
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, v2 + 16);
  return v2;
}

void static CallStateGuardFlow.expectNoRingingCall(else:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallStateGuardCheck>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 64LL);
  *(_OWORD *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401410, 33LL);
  *(_OWORD *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_3284C0;
  *(_BYTE *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  uint64_t v7 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401438, 33LL);
  *(void *)(v7 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v6;
  *(void *)(v7 + 24) = 0LL;
  *(_BYTE *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 3;
  uint64_t v8 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401460, 33LL);
  *(void *)(v8 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v6;
  *(void *)(v8 + 24) = 0LL;
  *(_BYTE *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 3;
  uint64_t v9 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401488, 32LL);
  *(void *)(v9 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for implicit closure #1 in static CallStateGuardFlow.expectNoRingingCall(else:sharedGlobals:);
  *(void *)(v9 + 24) = a1;
  uint64_t v10 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4014B0, 48LL);
  __int128 v10[2] = partial apply for implicit closure #3 in CallStateGuardCheck.init(_:onFail:);
  v10[3] = v8;
  void v10[4] = thunk for @callee_guaranteed () -> ()partial apply;
  void v10[5] = v9;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = partial apply for implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:);
  *(void *)(v5 + 40) = v7;
  *(void *)(v5 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = partial apply for closure #1 in CallStateGuardCheck.init(_:description:onFail:);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v10;
  outlined init with copy of SignalProviding(a2, (uint64_t)v12);
  uint64_t v11 = type metadata accessor for CallStateGuardFlow();
  OUTLINED_FUNCTION_8_2(v11, 65LL);
  CallStateGuardFlow.init(checks:sharedGlobals:)(v5, v12);
  OUTLINED_FUNCTION_3_8();
  swift_retain();
  OUTLINED_FUNCTION_25_32();
}

uint64_t outlined consume of CommonCallStatePredicate(uint64_t result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      goto LABEL_3;
    case 2:
    case 3:
    case 4:
    case 5:
      a2 = result;
LABEL_3:
      uint64_t result = swift_release(a2);
      break;
    default:
      return result;
  }

  return result;
}

void CallStateGuardCheck.init(_:onFail:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4014D8, 33LL);
  *(void *)(v10 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(_BYTE *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  uint64_t v11 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401500, 33LL);
  *(void *)(v11 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(_BYTE *)(v11 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  uint64_t v12 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401528, 32LL);
  *(void *)(v12 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  uint64_t v13 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_401550, 48LL);
  __int128 v13[2] = implicit closure #3 in CallStateGuardCheck.init(_:onFail:)partial apply;
  v13[3] = v11;
  v13[4] = thunk for @callee_guaranteed () -> ()partial apply;
  v13[5] = v12;
  OUTLINED_FUNCTION_8_46(a1);
  OUTLINED_FUNCTION_58();
}

void static CallStateGuardFlow.expectActiveCall(else:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallStateGuardCheck>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 64LL);
  *(_OWORD *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401578, 33LL);
  *(_OWORD *)(v6 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D8A0;
  *(_BYTE *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  uint64_t v7 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4015A0, 33LL);
  *(_OWORD *)(v7 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D8A0;
  *(_BYTE *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  uint64_t v8 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4015C8, 32LL);
  *(void *)(v8 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for implicit closure #1 in static CallStateGuardFlow.expectNoRingingCall(else:sharedGlobals:);
  *(void *)(v8 + 24) = a1;
  uint64_t v9 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4015F0, 48LL);
  void v9[2] = implicit closure #3 in CallStateGuardCheck.init(_:onFail:)partial apply;
  void v9[3] = v7;
  v9[4] = thunk for @callee_guaranteed () -> ()partial apply;
  void v9[5] = v8;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = partial apply for implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:);
  *(void *)(v5 + 40) = v6;
  *(void *)(v5 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = closure #1 in CallStateGuardCheck.init(_:description:onFail:)partial apply;
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v9;
  outlined init with copy of SignalProviding(a2, (uint64_t)v11);
  uint64_t v10 = type metadata accessor for CallStateGuardFlow();
  OUTLINED_FUNCTION_8_2(v10, 65LL);
  CallStateGuardFlow.init(checks:sharedGlobals:)(v5, v11);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_32();
}

uint64_t CallStateGuardFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CallStateGuardFlow();
  unint64_t v5 = lazy protocol witness table accessor for type CallStateGuardFlow and conformance CallStateGuardFlow();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t CallStateGuardFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  return swift_task_switch(CallStateGuardFlow.execute(), 0LL, 0LL);
}

uint64_t CallStateGuardFlow.execute()()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  OUTLINED_FUNCTION_82(v1 + 2);
  uint64_t v30 = (void *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 120))(v2, v3);
  uint64_t v4 = (void *)v1[7];
  uint64_t v5 = v4[2];
  if (!v5) {
    goto LABEL_9;
  }
  uint64_t v6 = (uint64_t (*)(void *))v4[4];
  uint64_t v8 = (uint64_t (*)(uint64_t))v4[6];
  uint64_t v7 = v4[7];
  swift_bridgeObjectRetain();
  swift_retain();
  OUTLINED_FUNCTION_25_1();
  if ((v6(v30) & 1) != 0)
  {
    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_16_3();
    if (v5 != 1)
    {
      uint64_t v9 = v4 + 11;
      unint64_t v10 = 1LL;
      while (v10 < v4[2])
      {
        uint64_t v8 = (uint64_t (*)(uint64_t))*(v9 - 1);
        uint64_t v7 = *v9;
        uint64_t v11 = (uint64_t (*)(void *))*(v9 - 3);
        swift_retain();
        OUTLINED_FUNCTION_25_1();
        if ((v11(v30) & 1) == 0) {
          goto LABEL_13;
        }
        OUTLINED_FUNCTION_76();
        OUTLINED_FUNCTION_16_3();
        ++v10;
        v9 += 4;
        if (v5 == v10) {
          goto LABEL_8;
        }
      }

      __break(1u);
      goto LABEL_20;
    }

uint64_t CallStateGuardFlow.deinit()
{
  return v0;
}

uint64_t CallStateGuardFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 65LL, 7LL);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance CallStateGuardFlow@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)v1 + 104LL))();
  *a1 = result & 1;
  return result;
}

uint64_t key path getter for CallStateGuardCheck.condition : CallStateGuardCheck@<X0>( uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject(&unk_401870, 32LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CallStateProviding) -> (@unowned Bool);
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for CallStateGuardCheck.condition : CallStateGuardCheck( uint64_t *a1, uint64_t (**a2)())
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject(&unk_401848, 32LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = a2[1];
  swift_retain();
  uint64_t result = swift_release(v6);
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CallStateProviding) -> (@out Bool);
  a2[1] = (uint64_t (*)())v5;
  return result;
}

void CallStateGuardCheck.condition.getter()
{
}

uint64_t key path getter for CallStateGuardCheck.flowOnFailure : CallStateGuardCheck@<X0>( uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = swift_allocObject(&unk_401820, 32LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned AnyFlow);
  a2[1] = v5;
  return swift_retain();
}

uint64_t key path setter for CallStateGuardCheck.flowOnFailure : CallStateGuardCheck(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject(&unk_4017F8, 32LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = *(void *)(a2 + 24);
  swift_retain();
  uint64_t result = swift_release(v6);
  *(void *)(a2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for thunk for @escaping @callee_guaranteed () -> (@out AnyFlow);
  *(void *)(a2 + 24) = v5;
  return result;
}

void CallStateGuardCheck.flowOnFailure.getter()
{
}

void closure #1 in CallStateGuardCheck.init(_:description:onFail:)( uint64_t (*a1)(void), uint64_t a2, void (*a3)(uint64_t))
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = swift_retain_n(a2, 2LL);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v10 = static os_log_type_t.debug.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v12 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v17 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = a1();
    uint64_t v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v11 + 4);
    OUTLINED_FUNCTION_6_8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, v10, "#CallStateGuardCheck Condition failed! %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1LL);
    OUTLINED_FUNCTION_0_2(v12);
    OUTLINED_FUNCTION_0_2((uint64_t)v11);
  }

  else
  {

    uint64_t v15 = OUTLINED_FUNCTION_6_8();
  }

  a3(v15);
  OUTLINED_FUNCTION_25_32();
}

void CommonCallStatePredicate.test(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }

BOOL sub_1347B0()
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  OUTLINED_FUNCTION_82(v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 16))(v8, v2, v3);
  uint64_t v4 = v8[3];
  uint64_t v5 = v8[4];
  OUTLINED_FUNCTION_82(v8);
  BOOL v6 = (v0 & ~(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5)) == 0;
  __swift_destroy_boxed_opaque_existential_1(v8);
  return v6;
}

void partial apply for implicit closure #3 in CallStateGuardCheck.init(_:onFail:)()
{
}

void CommonCallStatePredicate.debugDescription.getter(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }

uint64_t sub_1349DC()
{
  id v1 = (id)((uint64_t (*)(uint64_t))AFCallStateGetNames)(v0);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);
  }

  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }

  v4._uint64_t countAndFlagsBits = Array.description.getter(v3, &type metadata for String);
  String.append(_:)(v4);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();
  return 0x6174536C6C61632ELL;
}

void implicit closure #4 in CallStateGuardCheck.init(_:onFail:)(void (*a1)(void))
{
}

void partial apply for closure #1 in CallStateGuardCheck.init(_:description:onFail:)()
{
}

uint64_t type metadata accessor for CallStateGuardFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin18CallStateGuardFlow);
}

uint64_t sub_134CE4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t outlined copy of CommonCallStatePredicate(uint64_t result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      goto LABEL_3;
    case 2:
    case 3:
    case 4:
    case 5:
      a2 = result;
LABEL_3:
      uint64_t result = swift_retain(a2);
      break;
    default:
      return result;
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type CallStateGuardFlow and conformance CallStateGuardFlow()
{
  unint64_t result = lazy protocol witness table cache variable for type CallStateGuardFlow and conformance CallStateGuardFlow;
  if (!lazy protocol witness table cache variable for type CallStateGuardFlow and conformance CallStateGuardFlow)
  {
    uint64_t v1 = type metadata accessor for CallStateGuardFlow();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CallStateGuardFlow, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type CallStateGuardFlow and conformance CallStateGuardFlow);
  }

  return result;
}

void CallStateGuardCheck.init(_:description:onFail:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401618, 33LL);
  *(void *)(v14 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(_BYTE *)(v14 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  uint64_t v15 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401640, 32LL);
  *(void *)(v15 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  uint64_t v16 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401668, 32LL);
  *(void *)(v16 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a6;
  *(void *)(v16 + 24) = a7;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_401690, 48LL);
  void v17[2] = AnyIntentCarPlayRCHFlowProvider.makeRCHFlow(input:);
  void v17[3] = v15;
  v17[4] = AnyIntentCarPlayRCHFlowProvider.makeRCHFlow(input:);
  void v17[5] = v16;
  OUTLINED_FUNCTION_58();
}

uint64_t specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:)()
{
  return 0x5465636146207349LL;
}

unint64_t specialized implicit closure #3 in CallStateGuardCheck.init(_:description:onFail:)()
{
  return 0xD000000000000014LL;
}

{
  return 0xD000000000000010LL;
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CommonCallStatePredicate()
{
}

uint64_t objectdestroyTm_11()
{
  return swift_deallocObject(v0, 33LL, 7LL);
}

void partial apply for implicit closure #2 in implicit closure #1 in CallStateGuardCheck.init(_:onFail:)( uint64_t a1)
{
}

uint64_t objectdestroy_11Tm()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_134F24(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(void **)a1 + 104LL))() & 1;
  OUTLINED_FUNCTION_2();
}

ValueMetadata *type metadata accessor for CallStateGuardCheck()
{
  return &type metadata for CallStateGuardCheck;
}

uint64_t destroy for CommonCallStatePredicate(uint64_t a1)
{
  return outlined consume of CommonCallStatePredicate(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void initializeBufferWithCopyOfBuffer for CommonCallStatePredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  outlined copy of CommonCallStatePredicate(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  *(_BYTE *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v5;
  OUTLINED_FUNCTION_6();
}

uint64_t assignWithCopy for CommonCallStatePredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  outlined copy of CommonCallStatePredicate(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  char v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v5;
  outlined consume of CommonCallStatePredicate(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CommonCallStatePredicate(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  outlined consume of CommonCallStatePredicate(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonCallStatePredicate(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 250;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 5) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonCallStatePredicate( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0;
    *(void *)unint64_t result = a2 - 251;
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
    if (a3 >= 0xFB) {
      *(_BYTE *)(result + 1__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFB) {
      *(_BYTE *)(result + 1__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = -(char)a2;
    }
  }

  return result;
}

uint64_t getEnumTag for CommonCallStatePredicate(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t destructiveInjectEnumTag for CommonCallStatePredicate(uint64_t result, char a2)
{
  *(_BYTE *)(result + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CommonCallStatePredicate()
{
  return &type metadata for CommonCallStatePredicate;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed () -> (@out AnyFlow)()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

void partial apply for thunk for @escaping @callee_guaranteed () -> (@owned AnyFlow)(void *a1@<X8>)
{
  *a1 = (*(uint64_t (**)(void))(v1 + 16))();
  OUTLINED_FUNCTION_2();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CallStateProviding) -> (@out Bool)()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CallStateProviding) -> (@unowned Bool)( _BYTE *a1@<X8>)
{
  *a1 = (*(uint64_t (**)(void))(v1 + 16))() & 1;
  OUTLINED_FUNCTION_2();
}

void OUTLINED_FUNCTION_2_47()
{
  uint64_t v1 = *((void *)v0 - 2);
  uint64_t v2 = *((void *)v0 - 1);
  char v3 = *v0;
  outlined copy of CommonCallStatePredicate(v1, v2, *v0);
  CommonCallStatePredicate.debugDescription.getter(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_4_54()
{
  return outlined consume of CommonCallStatePredicate(v0, v1, v2);
}

void OUTLINED_FUNCTION_6_51()
{
}

uint64_t OUTLINED_FUNCTION_8_46(uint64_t a1)
{
  return outlined copy of CommonCallStatePredicate(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_11_46()
{
  return outlined consume of CommonCallStatePredicate(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_15_38()
{
  return outlined consume of CommonCallStatePredicate(v0, v1, 2);
}

uint64_t OUTLINED_FUNCTION_16_31()
{
  return outlined consume of CommonCallStatePredicate(v0, v1, 1);
}

void OUTLINED_FUNCTION_17_37()
{
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  uint64_t v5 = v0 + 16 * v4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  *(void *)(v5 + 40) = v2;
}

uint64_t OUTLINED_FUNCTION_18_35()
{
  return CommonCallStatePredicate.test(_:)(v0, *((void *)v1 - 2), *((void *)v1 - 1), *v1);
}

void StartCallAceViewProvider.__allocating_init(templatingService:isDirectInvocation:sharedGlobals:)( uint64_t a1, char a2, void *a3)
{
}

void StartCallAceViewProvider.init(templatingService:isDirectInvocation:sharedGlobals:)( uint64_t a1, char a2, void *a3)
{
  *(void *)(v3 + direct field offset for StartCallAceViewProvider.templatingService) = a1;
  uint64_t v6 = outlined init with copy of SignalProviding( (uint64_t)a3,  v3 + direct field offset for StartCallAceViewProvider.sharedGlobals);
  *(_BYTE *)(v3 + direct field offset for StartCallAceViewProvider.isDirectInvocation) = a2;
  DefaultAceViewProvider.init()(v6);
  __swift_destroy_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_6();
}

uint64_t StartCallAceViewProvider.makeAceViewsForResolveNeedsConfirmation(app:parameterName:intent:intentResolutionResult:_:)( uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(void, void), uint64_t a7)
{
  void (*v30)(void *__return_ptr, uint64_t, uint64_t);
  id v31;
  id v32;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, void *, void *, void *, void (*)(void, void), uint64_t);
  char v36;
  void (*v37)(void, void);
  void v38[2];
  void v39[7];
  char v40;
  uint64_t v41;
  uint64_t v9 = v7;
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = a2;
  v17._object = a3;
  if (PhoneCallSlotNames.init(rawValue:)(v17).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_contacts)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v18 = OUTLINED_FUNCTION_15_1();
    uint64_t v19 = (os_log_s *)OUTLINED_FUNCTION_12_1(v18, (uint64_t)static Logger.siriPhone);
    os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
    if (os_log_type_enabled(v19, v21))
    {
      uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_16_32(v22);
      OUTLINED_FUNCTION_5(&dword_0, v19, v21, "#StartCallAceViewProvider Building call/cancel confirmation buttons", v8);
      OUTLINED_FUNCTION_0_2((uint64_t)v8);
    }

    uint64_t v37 = a6;

    uint64_t v23 = *(void *)(v9 + direct field offset for StartCallAceViewProvider.templatingService);
    os_log_type_t v24 = (void *)(v9 + direct field offset for StartCallAceViewProvider.sharedGlobals);
    id v36 = *(_BYTE *)(v9 + direct field offset for StartCallAceViewProvider.isDirectInvocation);
    Logger.logObject.getter(v25);
    os_log_type_t v26 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled((os_log_t)a3, v26))
    {
      uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_16_32(v27);
      OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)a3,  v26,  "#StartCallViewBuilders Providing CallCancelSlotConfirmationButtonsBuilder",  v8);
      OUTLINED_FUNCTION_0_2((uint64_t)v8);
    }

    uint64_t v28 = v24[3];
    uint64_t v29 = v24[4];
    __swift_project_boxed_opaque_existential_1(v24, v28);
    uint64_t v30 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v29 + 8);
    id v31 = a4;
    OUTLINED_FUNCTION_44_1();
    v30(v39, v28, v29);
    outlined init with copy of SignalProviding((uint64_t)v24, (uint64_t)&v41);
    v38[0] = v31;
    v38[1] = v23;
    v39[5] = a1;
    v39[6] = a5;
    uint64_t v40 = v36;
    swift_retain();
    uint64_t v32 = a5;
    specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)((uint64_t)_swiftEmptyArrayStorage, v37, a7);
    return outlined destroy of CallCancelSlotConfirmationButtonsBuilder((uint64_t)v38);
  }

  else
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultAceViewProvider<INStartCallIntent, INStartCallIntentResponse>);
    uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, void *, void *, void *, void (*)(void, void), uint64_t))method lookup function for DefaultAceViewProvider(v34, &method descriptor for DefaultAceViewProvider.makeAceViewsForResolveNeedsConfirmation(app:parameterName:intent:intentResolutionResult:_:));
    return v35(a1, a2, a3, a4, a5, a6, a7);
  }

uint64_t outlined destroy of CallCancelSlotConfirmationButtonsBuilder(uint64_t a1)
{
  return a1;
}

void StartCallAceViewProvider.makeAceViewsForResolveNeedsDisambiguation(app:parameterName:intent:utteranceViews:disambiguationList:deviceIsLocked:_:)( uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, int a7, void (*a8)(void, void), uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v59 = a9;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = a2;
  v21._object = a3;
  LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = PhoneCallSlotNames.init(rawValue:)(v21);
  if (v22 != 5)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v34 = OUTLINED_FUNCTION_15_1();
    uint64_t v35 = (os_log_s *)OUTLINED_FUNCTION_12_1(v34, (uint64_t)static Logger.siriPhone);
    os_log_type_t v37 = static os_log_type_t.debug.getter(v35, v36);
    if (OUTLINED_FUNCTION_10(v37))
    {
      id v38 = a8;
      int v39 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)int v39 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v35,  (os_log_type_t)a7,  "#StartCallAceViewProvider Not building disambiguation snippet - not disambiguating contacts",  v39);
      uint64_t v40 = (uint64_t)v39;
      a8 = v38;
      OUTLINED_FUNCTION_0_2(v40);
    }

    goto LABEL_15;
  }

  int v57 = a7;
  uint64_t v58 = a8;
  uint64_t v25 = SiriKitDisambiguationList.rawItems.getter(v22, v23, v24);
  os_log_type_t v26 = (os_log_s *)specialized _arrayConditionalCast<A, B>(_:)(v25);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v43 = OUTLINED_FUNCTION_15_1();
    uint64_t v44 = (os_log_s *)OUTLINED_FUNCTION_12_1(v43, (uint64_t)static Logger.siriPhone);
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10(v45))
    {
      uint64_t v46 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v46 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v44,  OS_LOG_TYPE_DEFAULT,  "#StartCallAceViewProvider DisambiguationItem for contacts slot was not an INPerson",  v46);
      OUTLINED_FUNCTION_0_2((uint64_t)v46);
    }

    a8 = v58;
    if ((unint64_t)a5 >> 62)
    {
LABEL_22:
      if (a5 < 0) {
        uint64_t v47 = a5;
      }
      else {
        uint64_t v47 = a5 & 0xFFFFFFFFFFFFFF8LL;
      }
      unint64_t v48 = OUTLINED_FUNCTION_21_24();
      OUTLINED_FUNCTION_6_1();
      uint64_t v42 = _bridgeCocoaArray<A>(_:)(v47, v48);
      swift_bridgeObjectRelease();
      a5 = v42;
      goto LABEL_16;
    }

uint64_t StartCallAceViewProvider.makeAceViewsForConfirmIntentWithUser(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = v5 + direct field offset for StartCallAceViewProvider.sharedGlobals;
  uint64_t v13 = *(void *)(v5 + direct field offset for StartCallAceViewProvider.sharedGlobals + 24);
  uint64_t v14 = *(void *)(v5 + direct field offset for StartCallAceViewProvider.sharedGlobals + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(v5 + direct field offset for StartCallAceViewProvider.sharedGlobals),  v13);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v28, v13, v14);
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(a2, a3);
  char v16 = v15;
  outlined init with copy of SignalProviding((uint64_t)v28, (uint64_t)v30);
  if ((v16 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1(v30);
    __swift_destroy_boxed_opaque_existential_1(v28);
    goto LABEL_9;
  }

  uint64_t v17 = static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(a2);
  __swift_destroy_boxed_opaque_existential_1(v30);
  __swift_destroy_boxed_opaque_existential_1(v28);
  if ((v17 & 1) != 0)
  {
LABEL_9:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultAceViewProvider<INStartCallIntent, INStartCallIntentResponse>);
    char v27 = (uint64_t (*)(uint64_t, void *, void *, uint64_t, uint64_t))method lookup function for DefaultAceViewProvider( v26,  &method descriptor for DefaultAceViewProvider.makeAceViewsForConfirmIntentWithUser(app:intent:intentResponse:_:));
    return v27(a1, a2, a3, a4, a5);
  }

  uint64_t v18 = *(void *)(v6 + direct field offset for StartCallAceViewProvider.templatingService);
  uint64_t v19 = *(unsigned __int8 *)(v6 + direct field offset for StartCallAceViewProvider.isDirectInvocation);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v20, (uint64_t)static Logger.siriPhone);
  os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_11_5(v21))
  {
    uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_16_32(v22);
    OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v17,  (os_log_type_t)v6,  "#StartCallViewBuilders Providing EmergencyCountdownBuilder",  (uint8_t *)v19);
    OUTLINED_FUNCTION_0_2(v19);
  }

  outlined init with copy of SignalProviding(v12, (uint64_t)v29);
  v28[0] = v18;
  v28[1] = a1;
  v28[2] = a2;
  v28[3] = a3;
  v29[40] = v19;
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_95();
  id v23 = a2;
  id v24 = a3;
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)((uint64_t)_swiftEmptyArrayStorage, a4, a5);
  return outlined destroy of EmergencyCountdownBuilder((uint64_t)v28);
}

void StartCallAceViewProvider.makeAceViewsForLaunchAppWithButton(app:intent:intentResolutionResult:intentResponse:utteranceViews:_:)( uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void (*a6)(uint64_t, void), uint64_t a7)
{
  char v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a3
    || [a3 resolutionResultCode] != (char *)&dword_0 + 1
    || (uint64_t v17 = objc_opt_self(&OBJC_CLASS___INStartCallPreferredCallProviderResolutionResult),
        (uint64_t v18 = swift_dynamicCastObjCClass(a3, v17)) == 0))
  {
    uint64_t v27 = *(void *)((char *)v7 + direct field offset for StartCallAceViewProvider.templatingService);
    v40[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallBaseCatTemplatingService<INStartCallIntent, INStartCallIntentResponse>);
    v40[4] = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
    v40[0] = v27;
    uint64_t v28 = (void *)((char *)v7 + direct field offset for StartCallAceViewProvider.sharedGlobals);
    OUTLINED_FUNCTION_95();
    static StartCallViewBuilders.makeErrorButtonBuilder(templatingService:app:intent:intentResponse:sharedGlobals:)( a1,  a2,  a4,  v28,  (uint64_t)&v35);
    __swift_destroy_boxed_opaque_existential_1(v40);
    uint64_t v29 = v37;
    uint64_t v30 = v38;
    __swift_project_boxed_opaque_existential_1(&v35, v37);
    (*(void (**)(uint64_t, void (*)(uint64_t, void), uint64_t, uint64_t, uint64_t))(v30 + 8))( a5,  a6,  a7,  v29,  v30);
    __swift_destroy_boxed_opaque_existential_1(&v35);
LABEL_12:
    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v19 = (uint8_t *)v18;
  id v20 = a3;
  if ([a2 preferredCallProvider] == (char *)&dword_0 + 2
    && (char *)-[uint8_t unsupportedReason](v19, "unsupportedReason") - 5 <= (_BYTE *)&dword_0 + 1)
  {
    uint64_t v21 = *(void *)((char *)v7 + direct field offset for StartCallAceViewProvider.templatingService);
    uint64_t v22 = (uint64_t)v7 + direct field offset for StartCallAceViewProvider.sharedGlobals;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
    os_log_type_t v24 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_11_5(v24))
    {
      uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_16_32(v25);
      OUTLINED_FUNCTION_5( &dword_0,  v7,  (os_log_type_t)a3,  "#StartCallViewBuilders Providing FaceTimeSettingsBuilder",  v19);
      OUTLINED_FUNCTION_0_2((uint64_t)v19);
    }

    outlined init with copy of SignalProviding(v22, (uint64_t)&v36);
    uint64_t v35 = v21;
    type metadata accessor for PhoneCallDisplayTextCATs(0LL);
    uint64_t v26 = swift_retain();
    static CATOption.defaultMode.getter(v26);
    uint64_t v39 = CATWrapper.__allocating_init(options:globals:)(v16, 0LL);
    specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(a5, a6, a7);

    outlined destroy of FaceTimeSettingsBuilder(&v35);
    goto LABEL_12;
  }

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0) {
      uint64_t v33 = a5;
    }
    else {
      uint64_t v33 = a5 & 0xFFFFFFFFFFFFFF8LL;
    }
    unint64_t v34 = OUTLINED_FUNCTION_21_24();
    OUTLINED_FUNCTION_6_1();
    uint64_t v32 = _bridgeCocoaArray<A>(_:)(v33, v34);
    swift_bridgeObjectRelease();
    a5 = v32;
  }

  else
  {
    uint64_t v31 = OUTLINED_FUNCTION_6_1();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v31);
    OUTLINED_FUNCTION_21_24();
    uint64_t v32 = a5;
  }

  a6(v32, 0LL);

  OUTLINED_FUNCTION_3_6(a5);
}

void StartCallAceViewProvider.init()(uint64_t a1, uint64_t a2)
{
}

uint64_t StartCallAceViewProvider.__ivar_destroyer()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                             + direct field offset for StartCallAceViewProvider.sharedGlobals));
}

uint64_t StartCallAceViewProvider.deinit()
{
  uint64_t v0 = DefaultAceViewProvider.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartCallAceViewProvider.templatingService));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartCallAceViewProvider.sharedGlobals));
  return v0;
}

uint64_t StartCallAceViewProvider.__deallocating_deinit()
{
  uint64_t v0 = StartCallAceViewProvider.deinit();
  return swift_deallocClassInstance(v0, 65LL, 7LL);
}

uint64_t outlined destroy of DefaultDisambiguationBuilder<INStartCallIntent>(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DefaultDisambiguationBuilder<INStartCallIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void *outlined destroy of ForeignEmergencyButtonsBuilder(void *a1)
{
  return a1;
}

uint64_t outlined destroy of EmergencyCountdownBuilder(uint64_t a1)
{
  return a1;
}

void *outlined destroy of FaceTimeSettingsBuilder(void *a1)
{
  return a1;
}

uint64_t type metadata accessor for StartCallAceViewProvider(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartCallAceViewProvider;
  if (!type metadata singleton initialization cache for StartCallAceViewProvider) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartCallAceViewProvider);
  }
  return result;
}

uint64_t type metadata completion function for StartCallAceViewProvider(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  void v2[2] = &unk_328618;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + class metadata base offset for StartCallAceViewProvider);
}

uint64_t ObjC metadata update function for StartCallAceViewProvider()
{
  return type metadata accessor for StartCallAceViewProvider(0LL);
}

uint64_t OUTLINED_FUNCTION_10_46(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 52LL, a3, 6LL, 0LL);
}

_WORD *OUTLINED_FUNCTION_16_32(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t PhoneIncomingCall.__allocating_init(intentResponse:siriLocale:options:appInfoBuilder:)( void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  return specialized PhoneIncomingCall.__allocating_init(intentResponse:siriLocale:options:appInfoBuilder:)( a1,  a3,  a4,  a5,  v5,  ObjectType,  a2);
}

uint64_t specialized PhoneIncomingCall.__allocating_init(intentResponse:siriLocale:options:appInfoBuilder:)( void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v53 = a2;
  id v54 = a4;
  uint64_t v12 = type metadata accessor for Locale(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  char v16 = (char *)IncomingCallIntentResponse.latestCallRecord.getter(a6, a7);
  if (v16)
  {
    unint64_t v48 = v16;
    uint64_t v50 = v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v49 = a5;
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
    if (os_log_type_enabled(v19, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v23 = swift_slowAlloc(32LL, -1LL);
      uint64_t v47 = v13;
      uint64_t v24 = v23;
      v56[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      unint64_t v25 = PhoneCallRecord.Options.description.getter(a3);
      uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v22 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v19, v21, "#PhoneIncomingCall PhoneCallRecord w/ options: %s", v22, 0xCu);
      swift_arrayDestroy(v24, 1LL);
      uint64_t v27 = v24;
      uint64_t v13 = v47;
      OUTLINED_FUNCTION_0_2(v27);
      OUTLINED_FUNCTION_0_2((uint64_t)v22);
    }

    uint64_t v28 = type metadata accessor for PhoneCallRecord(0LL);
    outlined init with copy of SignalProviding((uint64_t)v54, (uint64_t)v56);
    uint64_t v12 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v53, v50);
    uint64_t v29 = v57;
    uint64_t v30 = v58;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v56, v57);
    __chkstk_darwin();
    uint64_t v32 = (char *)&v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v33 + 16))(v32);
    specialized PhoneCallRecord.__allocating_init(callRecord:options:appInfoBuilder:locale:)( v48,  a3,  (uint64_t)v32,  (uint64_t)v15,  v28,  v29,  v30);
    uint64_t v35 = v34;
    __swift_destroy_boxed_opaque_existential_1(v56);
    a5 = v49;
  }

  else
  {
    uint64_t v35 = 0LL;
  }

  uint64_t v36 = type metadata accessor for PhoneIncomingCall.Builder();
  swift_allocObject(v36, 32LL, 7LL);
  uint64_t v37 = PhoneIncomingCall.Builder.init()();
  uint64_t v38 = v51;
  uint64_t v39 = v52;
  char v40 = IncomingCallIntentResponse.isIncomingCall.getter(v51, v52);
  uint64_t v41 = (*(uint64_t (**)(void))(*(void *)v37 + 184LL))(v40 & 1);
  swift_release(v37);
  IncomingCallIntentResponse.unknownCaller.getter(v38, v39);
  uint64_t v43 = (*(uint64_t (**)(void))(*(void *)v41 + 192LL))(v42 & 1);
  swift_release(v41);
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v43 + 200LL))(v35);
  swift_release(v43);
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(a5 + 152))(v44);

  swift_release(v35);
  __swift_destroy_boxed_opaque_existential_1(v54);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v53, v12);
  return v45;
}

PhoneCallFlowDelegatePlugin::OngoingCallCATs::Properties_optional __swiftcall OngoingCallCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of OngoingCallCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5) {
    return (PhoneCallFlowDelegatePlugin::OngoingCallCATs::Properties_optional)5;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::OngoingCallCATs::Properties_optional)v3;
  }
}

uint64_t OngoingCallCATs.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_136638 + 4 * byte_328630[a1]))( 0xD00000000000001BLL,  0x8000000000343540LL);
}

uint64_t sub_136638()
{
  return v0 + 19;
}

unint64_t sub_136670()
{
  return 0xD000000000000019LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance OngoingCallCATs.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance OngoingCallCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OngoingCallCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance OngoingCallCATs.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::OngoingCallCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance OngoingCallCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::OngoingCallCATs::Properties_optional *a2@<X8>)
{
  result.value = OngoingCallCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance OngoingCallCATs.Properties@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = OngoingCallCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t OngoingCallCATs.addOrCallPrompt(completion:)()
{
  return OUTLINED_FUNCTION_13(27LL);
}

uint64_t OngoingCallCATs.addOrCallPrompt()(uint64_t a1)
{
  unint64_t v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return OUTLINED_FUNCTION_6_15(a1, 0xD00000000000001BLL, 0x8000000000343540LL, (uint64_t)_swiftEmptyArrayStorage, v5);
}

uint64_t OngoingCallCATs.addOrCallPrompt()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return OUTLINED_FUNCTION_4_2(0xD00000000000001BLL, 0x8000000000343540LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

{
  return OUTLINED_FUNCTION_14_6(27LL, 0x8000000000343540LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:completion:)( unint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_26_29(a1, a2, a3, 44LL);
}

uint64_t OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:));
}

uint64_t OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  v0[5] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_1_55(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v4);
  OUTLINED_FUNCTION_2_3();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_8_47(v6, 0xD00000000000002CLL, v7, (uint64_t)v3, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_18_3();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v8)(void);
  uint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  v0[4] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_1_55(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v4);
  OUTLINED_FUNCTION_2_3();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD00000000000002CLL, v6, (uint64_t)v3, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_3_5();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v2 + 8));
  }

uint64_t OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:));
}

uint64_t OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:)(unint64_t a1)
{
  return OUTLINED_FUNCTION_27_30(a1, 44LL, 0x8000000000343560LL);
}

uint64_t OngoingCallCATs.confirmHangUpForLocalEmergency(completion:)()
{
  return OUTLINED_FUNCTION_13(42LL);
}

uint64_t OngoingCallCATs.confirmHangUpForLocalEmergency()(uint64_t a1)
{
  unint64_t v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.deleteVoicemail();
  return OUTLINED_FUNCTION_6_15(a1, 0xD00000000000002ALL, 0x8000000000343590LL, (uint64_t)_swiftEmptyArrayStorage, v5);
}

uint64_t OngoingCallCATs.confirmHangUpForLocalEmergency()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  return OUTLINED_FUNCTION_4_2(0xD00000000000002ALL, 0x8000000000343590LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

{
  return OUTLINED_FUNCTION_14_6(42LL, 0x8000000000343590LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t OngoingCallCATs.informHangUpForEmergency(currentCall:completion:)( unint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_26_29(a1, a2, a3, 36LL);
}

uint64_t OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:completion:)( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_15_3(v6);
  OUTLINED_FUNCTION_0_59(v7, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v8 = OUTLINED_FUNCTION_17_38();
    unint64_t v9 = a1;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_54_0();
    v7[3].n128_u64[1] = 0LL;
    v7[4].n128_u64[0] = 0LL;
  }

  v7[3].n128_u64[0] = v9;
  v7[4].n128_u64[1] = v8;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a4);
  return swift_bridgeObjectRelease();
}

uint64_t OngoingCallCATs.informHangUpForEmergency(currentCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATs.informHangUpForEmergency(currentCall:));
}

uint64_t OngoingCallCATs.informHangUpForEmergency(currentCall:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  v0[5] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_1_55(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v4);
  OUTLINED_FUNCTION_2_3();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = OngoingCallCATs.informHangUpForEmergency(currentCall:);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_8_47(v6, 0xD000000000000024LL, v7, (uint64_t)v3, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_18_3();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v8)(void);
  uint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  v0[4] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_1_55(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for PhoneCallRecord(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v4);
  OUTLINED_FUNCTION_2_3();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = OngoingCallCATs.informHangUpForEmergency(currentCall:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD000000000000024LL, v6, (uint64_t)v3, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_3_5();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v2 + 8));
  }

uint64_t OngoingCallCATs.informHangUpForEmergency(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATs.informHangUpForEmergency(currentCall:));
}

uint64_t OngoingCallCATs.informHangUpForEmergency(currentCall:)(unint64_t a1)
{
  return OUTLINED_FUNCTION_27_30(a1, 36LL, 0x80000000003435C0LL);
}

uint64_t OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:)( unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_15_3(v6);
  OUTLINED_FUNCTION_0_59(v7, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v8 = OUTLINED_FUNCTION_17_38();
    unint64_t v9 = a1;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_32_23();
  }

  v7[3].n128_u64[0] = v9;
  v7[4].n128_u64[1] = v8;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(a2, a3, v7);
  return OUTLINED_FUNCTION_1_41((uint64_t)v7);
}

uint64_t OngoingCallCATs.newCallPrompt(currentCall:targetCall:completion:)( unint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 128LL);
  OUTLINED_FUNCTION_0_59(v5, (__n128)xmmword_31D880);
  if (a1)
  {
    OUTLINED_FUNCTION_17_38();
    unint64_t v6 = a1;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    v5[3].n128_u64[1] = 0LL;
    v5[4].n128_u64[0] = 0LL;
  }

  v5[3].n128_u64[0] = v6;
  OUTLINED_FUNCTION_37_22();
  v5[4].n128_u64[1] = v7;
  v5[5].n128_u64[0] = v8;
  v5[5].n128_u64[1] = 0xEA00000000006C6CLL;
  if (a2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_17_38();
    unint64_t v10 = a2;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_54_0();
    v5[6].n128_u64[1] = 0LL;
    v5[7].n128_u64[0] = 0LL;
  }

  v5[6].n128_u64[0] = v10;
  v5[7].n128_u64[1] = v9;
  swift_retain();
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000019LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v5);
}

uint64_t OngoingCallCATs.newCallPrompt(currentCall:targetCall:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATs.newCallPrompt(currentCall:targetCall:));
}

uint64_t OngoingCallCATs.newCallPrompt(currentCall:targetCall:)()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 128LL);
  v0[6] = v4;
  OUTLINED_FUNCTION_0_59(v4, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v5 = OUTLINED_FUNCTION_17_38();
    uint64_t v6 = v2;
  }

  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_32_23();
  }

  unint64_t v7 = v0[4];
  uint64_t v8 = OUTLINED_FUNCTION_15_39(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  v4[6].n128_u64[0] = v7;
  v4[7].n128_u64[1] = v8;
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_25_1();
  uint64_t v9 = (void *)swift_task_alloc(v1);
  v0[7] = v9;
  *uint64_t v9 = v0;
  v9[1] = OngoingCallCATs.newCallPrompt(currentCall:targetCall:);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_8_47(v10, 0xD000000000000019LL, v11, (uint64_t)v4, v13);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *v1;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v3 + 8));
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v12)(void);
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 128LL);
  v0[5] = v4;
  OUTLINED_FUNCTION_0_59(v4, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v5 = OUTLINED_FUNCTION_17_38();
    uint64_t v6 = v2;
  }

  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_32_23();
  }

  unint64_t v7 = v0[3];
  uint64_t v8 = OUTLINED_FUNCTION_15_39(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  v4[6].n128_u64[0] = v7;
  v4[7].n128_u64[1] = v8;
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_25_1();
  uint64_t v9 = (void *)swift_task_alloc(v1);
  v0[6] = v9;
  *uint64_t v9 = v0;
  v9[1] = OngoingCallCATs.newCallPrompt(currentCall:targetCall:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD000000000000019LL, v10, (uint64_t)v4, v12);
}

uint64_t OngoingCallCATs.newCallPrompt(currentCall:targetCall:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)OngoingCallCATs.newCallPrompt(currentCall:targetCall:));
}

uint64_t OngoingCallCATs.newCallPrompt(currentCall:targetCall:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 48);
  uint64_t v5 = *v2;
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v6, v7, v8);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_8_3(a1, *(uint64_t (**)(void))(v5 + 8));
  }

uint64_t OngoingCallCATs.newCallPrompt(currentCall:targetCall:)(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 128LL);
  OUTLINED_FUNCTION_0_59(v5, (__n128)xmmword_31D880);
  if (a1)
  {
    OUTLINED_FUNCTION_17_38();
    unint64_t v6 = a1;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    v5[3].n128_u64[1] = 0LL;
    v5[4].n128_u64[0] = 0LL;
  }

  v5[3].n128_u64[0] = v6;
  OUTLINED_FUNCTION_37_22();
  v5[4].n128_u64[1] = v7;
  v5[5].n128_u64[0] = v8;
  v5[5].n128_u64[1] = 0xEA00000000006C6CLL;
  if (a2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_17_38();
    unint64_t v10 = a2;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_54_0();
    v5[6].n128_u64[1] = 0LL;
    v5[7].n128_u64[0] = 0LL;
  }

  v5[6].n128_u64[0] = v10;
  v5[7].n128_u64[1] = v9;
  swift_retain();
  OUTLINED_FUNCTION_25_1();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000019LL, 0x80000000003435F0LL, v5);
  return OUTLINED_FUNCTION_1_41((uint64_t)v5);
}

unint64_t lazy protocol witness table accessor for type OngoingCallCATs.Properties and conformance OngoingCallCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type OngoingCallCATs.Properties and conformance OngoingCallCATs.Properties;
  if (!lazy protocol witness table cache variable for type OngoingCallCATs.Properties and conformance OngoingCallCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for OngoingCallCATs.Properties,  &type metadata for OngoingCallCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OngoingCallCATs.Properties and conformance OngoingCallCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for OngoingCallCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for OngoingCallCATs;
  if (!type metadata singleton initialization cache for OngoingCallCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for OngoingCallCATs);
  }
  return result;
}

uint64_t type metadata completion function for OngoingCallCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for OngoingCallCATs);
}

uint64_t ObjC metadata update function for OngoingCallCATs()
{
  return type metadata accessor for OngoingCallCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for OngoingCallCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_137450 + 4 * byte_32863A[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_137484 + 4 * byte_328635[v4]))();
}

uint64_t sub_137484(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_13748C(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x137494LL);
  }
  return result;
}

uint64_t sub_1374A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x1374A8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_1374AC(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_1374B4(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OngoingCallCATs.Properties()
{
  return &type metadata for OngoingCallCATs.Properties;
}

__n128 *OUTLINED_FUNCTION_0_59(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x43746E6572727563LL;
  result[2].n128_u64[1] = 0xEB000000006C6C61LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_55(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x43746E6572727563LL;
  a1[2].n128_u64[1] = 0xEB000000006C6C61LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_8_47(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_15_39@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  void v2[9] = a1;
  v2[10] = 0x6143746567726174LL;
  v2[11] = 0xEA00000000006C6CLL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_17_38()
{
  return type metadata accessor for PhoneCallRecord(0LL);
}

uint64_t OUTLINED_FUNCTION_19_27()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_26_29(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:completion:)( a1,  a2,  a3,  a4 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL);
}

uint64_t OUTLINED_FUNCTION_32_23()
{
  uint64_t result = 0LL;
  *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0LL;
  *(void *)(v0 + 64) = 0LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_36_18(uint64_t result)
{
  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  return result;
}

  ;
}

void *specialized Sequence.compactMap<A>(_:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    unint64_t v23 = v2 & 0xC000000000000001LL;
    uint64_t v22 = *(uint64_t (**)(uint64_t, unint64_t))(*(void *)a2 + 256LL);
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = 4LL;
    while (1)
    {
      if (v23)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v2);
      }

      else
      {
        uint64_t v6 = *(void *)(v2 + 8 * v5);
        swift_retain();
      }

      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1LL)) {
        break;
      }
      uint64_t v8 = v2;
      uint64_t v9 = App.appIdentifier.getter();
      if (v10)
      {
        unint64_t v11 = v10;
      }

      else
      {
        uint64_t v9 = 0LL;
        unint64_t v11 = 0xE000000000000000LL;
      }

      uint64_t v12 = v22(v9, v11);
      uint64_t v14 = v13;
      swift_release(v6);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  v4[2] + 1LL,  1LL,  (uint64_t)v4);
        uint64_t v4 = v18;
      }

      unint64_t v16 = v4[2];
      unint64_t v15 = v4[3];
      if (v16 >= v15 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v15 > 1,  v16 + 1,  1LL,  (uint64_t)v4);
        uint64_t v4 = v19;
      }

      void v4[2] = v16 + 1;
      uint64_t v17 = &v4[2 * v16];
      v17[4] = v12;
      void v17[5] = v14;
      ++v5;
      uint64_t v2 = v8;
      if (v7 == v3)
      {
        swift_release(a2);
        goto LABEL_23;
      }
    }

    __break(1u);
LABEL_18:
    if (v2 < 0) {
      uint64_t v20 = v2;
    }
    else {
      uint64_t v20 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  swift_release(a2);
  uint64_t v4 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a5[3];
  uint64_t v14 = a5[4];
  unint64_t v15 = __swift_project_boxed_opaque_existential_1(a5, v13);
  return specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( a1,  a2,  a3,  a4,  (uint64_t)v15,  a6,  a7,  v13,  v14);
}

uint64_t static AppSelectionSignalsGatheringHelper.getCommunicationType(phoneCallNLIntent:skIntent:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a2)
  {
    uint64_t ObjectType = swift_getObjectType(a2);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 136))(ObjectType, a3);
    Swift::Bool v8 = v7;
    OUTLINED_FUNCTION_22_30(v7);
    if (v8)
    {
      __swift_destroy_boxed_opaque_existential_1(v13);
      goto LABEL_6;
    }
  }

  else
  {
    OUTLINED_FUNCTION_22_30(a1);
  }

  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  Swift::Bool v8 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  __swift_destroy_boxed_opaque_existential_1(v13);
  if (!v8)
  {
    OUTLINED_FUNCTION_10_47();
    uint64_t v12 = OUTLINED_FUNCTION_23_29();
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104LL))( a4,  enum case for CommunicationTypeSignal.CommunicationType.audioCall(_:),  v12);
  }

void *static AppSelectionSignalsGatheringHelper.getShowedForcedAppDisambiguationList(sharedGlobals:)( void *a1)
{
  uint64_t v2 = (uint8_t *)type metadata accessor for Date(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  os_log_type_t v5 = v4 - v3;
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(v7 + 64))(&v51, v6, v7);
  uint64_t v8 = v52[2];
  uint64_t v9 = v52[3];
  OUTLINED_FUNCTION_49_0(&v51);
  uint64_t v10 = static Date.distantPast.getter();
  double v11 = Date.timeIntervalSince1970.getter(v10);
  OUTLINED_FUNCTION_20_29();
  v46[0] = 0;
  double v47 = v11;
  unint64_t v48 = _swiftEmptyArrayStorage;
  unint64_t v12 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  SiriPhoneDefaultsProviding.getOrDefault<A>(key:defaultValue:)( 2LL,  (uint64_t)v46,  v8,  (uint64_t)&type metadata for ForcedAppDisambiguationHistory,  v9,  v12,  (uint64_t)&v49);
  int v13 = v49;
  double v14 = *(double *)v50;
  uint64_t v15 = v50[1];
  __swift_destroy_boxed_opaque_existential_1(&v51);
  if (v13) {
    unint64_t v16 = 0x80000000003464E0LL;
  }
  else {
    unint64_t v16 = 0x80000000003464C0LL;
  }
  if (v13 != 1 || 0x80000000003464E0LL == 0x80000000003464C0LL)
  {
    uint64_t v18 = OUTLINED_FUNCTION_62();
  }

  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)( 0xD00000000000001DLL,  v16,  0xD00000000000001DLL,  0x80000000003464C0LL,  0LL);
    uint64_t v18 = OUTLINED_FUNCTION_62();
    if ((v17 & 1) == 0)
    {
      OUTLINED_FUNCTION_39();
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v19 = OUTLINED_FUNCTION_15_1();
      uint64_t v20 = (os_log_s *)OUTLINED_FUNCTION_12_1(v19, (uint64_t)static Logger.siriPhone);
      os_log_type_t v22 = static os_log_type_t.debug.getter(v20, v21);
      if (!OUTLINED_FUNCTION_10(v22)) {
        goto LABEL_18;
      }
      unint64_t v23 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v23);
      uint64_t v24 = "#AppSelectionSignalsGatheringHelper: don't find showedForcedAppDisambiguation from user default, return empt"
            "y apps list and will not trigger data collection";
      unint64_t v25 = v20;
      os_log_type_t v26 = v16;
      uint64_t v27 = v2;
      uint32_t v28 = 2;
LABEL_17:
      _os_log_impl(&dword_0, v25, v26, v24, v27, v28);
      OUTLINED_FUNCTION_0_2((uint64_t)v2);
LABEL_18:

      return _swiftEmptyArrayStorage;
    }
  }

  uint64_t v29 = Date.init()(v18);
  double v30 = Date.timeIntervalSince1970.getter(v29);
  OUTLINED_FUNCTION_20_29();
  double v31 = v30 - v14;
  if (v31 > 10.0)
  {
    OUTLINED_FUNCTION_39();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = OUTLINED_FUNCTION_15_1();
    uint64_t v20 = (os_log_s *)OUTLINED_FUNCTION_12_1(v32, (uint64_t)static Logger.siriPhone);
    os_log_type_t v34 = static os_log_type_t.debug.getter(v20, v33);
    if (!OUTLINED_FUNCTION_10(v34)) {
      goto LABEL_18;
    }
    uint64_t v2 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    *(_DWORD *)uint64_t v2 = 134217984;
    double v51 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v2 + 4, v2 + 12);
    uint64_t v24 = "#AppSelectionSignalsGatheringHelper: interval since app disambiguation is showed %fs ago, which exceeds 10s";
    unint64_t v25 = v20;
    os_log_type_t v26 = v5;
    uint64_t v27 = v2;
    uint32_t v28 = 12;
    goto LABEL_17;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v35 = OUTLINED_FUNCTION_15_1();
  uint64_t v36 = (os_log_s *)__swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
  uint64_t v37 = swift_bridgeObjectRetain_n(v15, 2LL);
  Logger.logObject.getter(v37);
  os_log_type_t v38 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v36, v38))
  {
    uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v40 = OUTLINED_FUNCTION_7_0(32LL);
    double v51 = *(double *)&v40;
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v41 = OUTLINED_FUNCTION_8_1();
    uint64_t v42 = Array.description.getter(v41, &type metadata for String);
    unint64_t v44 = v43;
    OUTLINED_FUNCTION_39();
    uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v44, (uint64_t *)&v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v39 + 4, v39 + 12);
    OUTLINED_FUNCTION_2_12();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v36, v38, "#AppSelectionSignalsGatheringHelper: retrieve app list %s", v39, 0xCu);
    swift_arrayDestroy(v40, 1LL);
    OUTLINED_FUNCTION_0_2(v40);
    OUTLINED_FUNCTION_0_2((uint64_t)v39);
  }

  else
  {

    OUTLINED_FUNCTION_2_12();
  }

  return (void *)v15;
}

void static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint8_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v16 = v15 - v14;
  if (!a2) {
    goto LABEL_26;
  }
  if (!((unint64_t)a2 >> 62))
  {
    uint64_t v17 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_6_1();
    if (v17) {
      goto LABEL_4;
    }
    goto LABEL_25;
  }

  if (a2 >= 0) {
    uint64_t v35 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v35 = a2;
  }
  OUTLINED_FUNCTION_6_1();
  if (!_CocoaArrayWrapper.endIndex.getter(v35))
  {
LABEL_25:
    OUTLINED_FUNCTION_50();
LABEL_26:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v36 = OUTLINED_FUNCTION_15_1();
    uint64_t v37 = OUTLINED_FUNCTION_12_1(v36, (uint64_t)static Logger.siriPhone);
    os_log_type_t v24 = OUTLINED_FUNCTION_28_26(v37);
    if (!OUTLINED_FUNCTION_6_9(v39)) {
      goto LABEL_31;
    }
    os_log_type_t v38 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_9_27(v38);
    os_log_type_t v26 = "#AppSelectionSignalsGatheringHelper triggerForcedAppDisambiguationSignalCollection doesn't expect contacts is "
          "empty, cancel signal collection";
    goto LABEL_30;
  }

  OUTLINED_FUNCTION_6_1();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v35);
  OUTLINED_FUNCTION_50();
LABEL_4:
  if (v17 != 1)
  {
    OUTLINED_FUNCTION_50();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = OUTLINED_FUNCTION_15_1();
    uint64_t v28 = OUTLINED_FUNCTION_12_1(v27, (uint64_t)static Logger.siriPhone);
    os_log_type_t v24 = OUTLINED_FUNCTION_28_26(v28);
    if (!OUTLINED_FUNCTION_6_9(v39)) {
      goto LABEL_31;
    }
    uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_9_27(v29);
    os_log_type_t v26 = "#AppSelectionSignalsGatheringHelper triggerForcedAppDisambiguationSignalCollection there are more than one con"
          "tacts, ForcedAppDisambiguation shouldn't triggered, cancel signal collection";
    goto LABEL_30;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (a2 & 0xC000000000000001LL) == 0, a2);
  if ((a2 & 0xC000000000000001LL) != 0) {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a2);
  }
  else {
    id v18 = *(id *)(a2 + 32);
  }
  outlined bridged method (ob) of @objc INPerson.siriMatches.getter(v18);
  if (!v19) {
    goto LABEL_19;
  }
  uint64_t v20 = v19 & 0xFFFFFFFFFFFFFF8LL;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v20 = v19;
    }
    uint64_t v39 = (os_log_s *)v19;
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  }

  else
  {
    uint64_t v21 = *(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFFF8LL));
  }

  swift_bridgeObjectRelease();
  if (v21 < 2)
  {
LABEL_19:
    uint64_t v30 = type metadata accessor for TaskPriority(0LL);
    OUTLINED_FUNCTION_29_1(v16, v31, v32, v30);
    outlined init with copy of SignalProviding(a1, (uint64_t)v41);
    outlined init with copy of SignalProviding(a3, (uint64_t)v40);
    uint64_t v33 = (void *)swift_allocObject(&unk_401A60, 152LL, 7LL);
    v33[2] = 0LL;
    v33[3] = 0LL;
    outlined init with take of AppSelectionSignalComponent(v41, (uint64_t)(v33 + 4));
    v33[9] = a5;
    v33[10] = a4;
    v33[11] = a6;
    v33[12] = a7;
    v33[13] = a2;
    outlined init with take of AppSelectionSignalComponent(v40, (uint64_t)(v33 + 14));
    swift_bridgeObjectRetain();
    swift_retain();
    OUTLINED_FUNCTION_8_1();
    uint64_t v34 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v16,  (uint64_t)&async function pointer to partial apply for closure #1 in static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:),  (uint64_t)v33);
    swift_release(v34);
    return;
  }

  OUTLINED_FUNCTION_50();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v22 = OUTLINED_FUNCTION_15_1();
  uint64_t v23 = OUTLINED_FUNCTION_12_1(v22, (uint64_t)static Logger.siriPhone);
  os_log_type_t v24 = OUTLINED_FUNCTION_28_26(v23);
  if (OUTLINED_FUNCTION_6_9(v39))
  {
    unint64_t v25 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_9_27(v25);
    os_log_type_t v26 = "#AppSelectionSignalsGatheringHelper triggerForcedAppDisambiguationSignalCollection requests needs disambiguati"
          "on, waiting signal collection after disambiguation";
LABEL_30:
    OUTLINED_FUNCTION_5(&dword_0, v39, v24, v26, a4);
    OUTLINED_FUNCTION_0_2((uint64_t)a4);
  }

LABEL_31:
}

        OUTLINED_FUNCTION_182_1(v46, &demangling cache variable for type metadata for Parse?);
        return 0LL;
      }

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v48);
LABEL_25:
      uint64_t v91 = v134;
      uint64_t v92 = v135;
      uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v135, v52, v20);
      uint64_t v94 = OUTLINED_FUNCTION_182_1(v93, &demangling cache variable for type metadata for Parse?);
      uint64_t v95 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter(v94);
      if ((v95 & 1) == 0)
      {
        uint64_t v96 = Siri_Nlu_External_UserDialogAct.hasRejected.getter(v95);
        uint64_t v97 = v128;
        uint64_t v98 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v128, v92, v20);
        if ((v96 & 1) != 0)
        {
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v97, v20);
        }

        else
        {
          uint64_t v99 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter(v98);
          uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
          v100(v97, v20);
          if ((v99 & 1) == 0)
          {
            unint64_t v111 = v127;
            uint64_t v112 = v127[3];
            uint64_t v113 = v127[4];
            __swift_project_boxed_opaque_existential_1(v127, v112);
            uint64_t v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 72))(v112, v113);
            (*(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)v114 + 216LL))(&v149, v92);
            OUTLINED_FUNCTION_38_1();
            if (v150)
            {
              outlined init with take of AppSelectionSignalComponent(&v149, (uint64_t)&v151);
              a4 = (void *)(*(uint64_t (**)(uint64_t *, uint64_t, void *, void *, void, uint64_t, uint64_t))(v142 + 24))( &v151,  v125,  v111,  a4,  0LL,  v126,  v141);
              __swift_destroy_boxed_opaque_existential_1(&v151);
              v100(v92, v20);
              return a4;
            }

            uint64_t v148 = v20;
            outlined destroy of SpeakableString?( (uint64_t)&v149,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v115 = (void *)OUTLINED_FUNCTION_14_40();
            uint64_t v116 = static os_log_type_t.error.getter();
            if (OUTLINED_FUNCTION_7_7(v116))
            {
              uint64_t v117 = OUTLINED_FUNCTION_7_0(12LL);
              id v118 = OUTLINED_FUNCTION_7_0(32LL);
              OUTLINED_FUNCTION_4_62(v118, 4.8149e-34);
              OUTLINED_FUNCTION_1_59( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
              id v119 = OUTLINED_FUNCTION_2_55();
              OUTLINED_FUNCTION_13_50(v119);
              OUTLINED_FUNCTION_62();
              OUTLINED_FUNCTION_7_60( &dword_0,  v120,  v121,  "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.");
              OUTLINED_FUNCTION_10_49();
              OUTLINED_FUNCTION_0_2(v118);
              OUTLINED_FUNCTION_0_2(v117);

              os_log_type_t v122 = v135;
            }

            else
            {

              os_log_type_t v122 = v92;
            }

            v100(v122, v148);
            goto LABEL_36;
          }
        }
      }

      uint64_t v101 = (void *)OUTLINED_FUNCTION_14_40();
      uint64_t v103 = static os_log_type_t.debug.getter(v101, v102);
      if (OUTLINED_FUNCTION_7_7(v103))
      {
        uint64_t v104 = OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v105 = OUTLINED_FUNCTION_7_0(32LL);
        OUTLINED_FUNCTION_4_62(v105, 4.8149e-34);
        OUTLINED_FUNCTION_1_59( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
        uint64_t v106 = OUTLINED_FUNCTION_2_55();
        OUTLINED_FUNCTION_13_50(v106);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_7_60(&dword_0, v107, v108, "%s NLv4 parse is a confirmation. Returning previousIntent.");
        OUTLINED_FUNCTION_10_49();
        OUTLINED_FUNCTION_0_2(v105);
        OUTLINED_FUNCTION_0_2(v104);

        (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v135, v20);
      }

      else
      {

        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v92, v20);
      }

  if (!(_DWORD)v16)
  {
LABEL_13:
    if ((_DWORD)v21) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v83 & 0xC000000000000001LL) == 0, v83);
  if ((v83 & 0xC000000000000001LL) != 0)
  {
    uint64_t v84 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v83);
  }

  else
  {
    uint64_t v84 = *(void *)(v83 + 32);
    swift_retain(v84);
  }

  swift_bridgeObjectRelease(v83);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v11, v104);
  *a2 = v84;
  a2[1] = v20;
  uint64_t v85 = v102;
  Signpost.OpenSignpost.end()();
  uint64_t v81 = v85;
  return swift_release(v81);
}

void static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint8_t *a4)
{
  uint64_t v10 = v9 - v8;
  if (!a2) {
    goto LABEL_16;
  }
  if (!((unint64_t)a2 >> 62))
  {
    uint64_t v11 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_8_1();
    if (v11) {
      goto LABEL_4;
    }
    goto LABEL_15;
  }

  if (a2 >= 0) {
    uint64_t v22 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v22 = a2;
  }
  OUTLINED_FUNCTION_8_1();
  if (!_CocoaArrayWrapper.endIndex.getter(v22))
  {
LABEL_15:
    OUTLINED_FUNCTION_39();
LABEL_16:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    os_log_type_t v26 = (os_log_s *)OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
    os_log_type_t v14 = static os_log_type_t.debug.getter(v26, v24);
    if (!OUTLINED_FUNCTION_6_9(v26)) {
      goto LABEL_21;
    }
    unint64_t v25 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_9_27(v25);
    uint64_t v16 = "#AppSelectionSignalsGatheringHelper doesn't expect contacts is empty, return";
    goto LABEL_20;
  }

  OUTLINED_FUNCTION_8_1();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v22);
  OUTLINED_FUNCTION_39();
LABEL_4:
  if (v11 < 2)
  {
    uint64_t v17 = type metadata accessor for TaskPriority(0LL);
    OUTLINED_FUNCTION_29_1(v10, v18, v19, v17);
    outlined init with copy of SignalProviding(a1, (uint64_t)v28);
    outlined init with copy of SignalProviding(a3, (uint64_t)v27);
    uint64_t v20 = (void *)swift_allocObject(&unk_401A88, 128LL, 7LL);
    __int128 v20[2] = 0LL;
    void v20[3] = 0LL;
    outlined init with take of AppSelectionSignalComponent(v28, (uint64_t)(v20 + 4));
    v20[9] = a4;
    outlined init with take of AppSelectionSignalComponent(v27, (uint64_t)(v20 + 10));
    v20[15] = a2;
    swift_retain();
    uint64_t v21 = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5( v10,  (uint64_t)&async function pointer to partial apply for closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:),  (uint64_t)v20);
    swift_release(v21);
    return;
  }

  OUTLINED_FUNCTION_39();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  os_log_type_t v26 = (os_log_s *)OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v26, v13);
  if (OUTLINED_FUNCTION_6_9(v26))
  {
    uint64_t v15 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_9_27(v15);
    uint64_t v16 = "#AppSelectionSignalsGatheringHelper there are more than one match, wait logging after disambiguation";
LABEL_20:
    OUTLINED_FUNCTION_5(&dword_0, v26, v14, v16, a4);
    OUTLINED_FUNCTION_0_2((uint64_t)a4);
  }

uint64_t closure #1 in static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = v12;
  _BYTE v8[16] = v13;
  void v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[10] = a4;
  uint64_t v9 = type metadata accessor for Date(0LL);
  v8[17] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[18] = v10;
  v8[19] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( closure #1 in static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:),  0LL,  0LL);
}

uint64_t closure #1 in static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  uint64_t v41 = (os_log_s *)__swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v41);
  os_log_type_t v3 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v3))
  {
    char v4 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)char v4 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v41,  v0,  "#AppSelectionSignalsGatheringHelper triggerSignalCollection for ForcedAppDisambiguationSignalCollection asynchronously",  v4);
    OUTLINED_FUNCTION_0_2((uint64_t)v4);
  }

  uint64_t v6 = *(void *)(v1 + 144);
  uint64_t v5 = *(void *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v37 = *(void *)(v1 + 112);
  uint64_t v38 = *(void *)(v1 + 120);
  uint64_t v8 = *(void *)(v1 + 96);
  uint64_t v9 = *(void **)(v1 + 80);
  uint64_t v35 = *(void *)(v1 + 88);
  uint64_t v36 = *(void *)(v1 + 104);

  static Signpost.begin(_:)();
  uint64_t v40 = v10;
  uint64_t v12 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v12);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 192))(v12, v11);
  uint64_t v13 = v9[3];
  uint64_t v14 = v9[4];
  OUTLINED_FUNCTION_49_0(v9);
  (*(void (**)(uint64_t, uint64_t))(v14 + 64))(v13, v14);
  uint64_t v15 = *(void *)(v1 + 40);
  uint64_t v16 = *(void *)(v1 + 48);
  uint64_t v17 = OUTLINED_FUNCTION_49_0((void *)(v1 + 16));
  uint64_t v18 = Date.init()(v17);
  double v19 = Date.timeIntervalSince1970.getter(v18);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  *(_BYTE *)(v1 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 1;
  *(double *)(v1 + 64) = v19;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = _swiftEmptyArrayStorage;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v16 + 16);
  unint64_t v21 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  v20(2LL, v1 + 56, &type metadata for ForcedAppDisambiguationHistory, v21, v15, v16);
  __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 16));
  swift_retain();
  specialized Sequence.compactMap<A>(_:)(v35, v8);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 256LL))(v36, v37);
  uint64_t v24 = v23;
  OUTLINED_FUNCTION_30_22(v22, v23, v38);
  uint64_t v25 = *(void *)(v1 + 120);
  if ((v38 & 0xC000000000000001LL) != 0) {
    id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v25);
  }
  else {
    id v26 = *(id *)(v25 + 32);
  }
  uint64_t v27 = v26;
  (*(void (**)(void))(*(void *)v39 + 144LL))();
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();

  Signpost.OpenSignpost.end()();
  Logger.logObject.getter(v28);
  os_log_type_t v29 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v29))
  {
    uint64_t v30 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v30);
    OUTLINED_FUNCTION_5_13(&dword_0, v31, v32, "#AppSelectionSignalsGatheringHelper triggerSignalCollection finished");
    OUTLINED_FUNCTION_0_2(v24);
  }

  uint64_t v33 = *(void *)(v1 + 152);

  swift_release(v39);
  swift_release(v40);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  void v7[9] = a4;
  v7[10] = a5;
  uint64_t v8 = type metadata accessor for Date(0LL);
  v7[13] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[14] = v9;
  v7[15] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:),  0LL,  0LL);
}

uint64_t closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  v1[16] = v3;
  char v4 = (void *)v3;
  Logger.logObject.getter(v3);
  os_log_type_t v5 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v5))
  {
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v6);
    OUTLINED_FUNCTION_5_13( &dword_0,  v7,  v8,  "#AppSelectionSignalsGatheringHelper triggerSignalCollection for specified app name asynchronously");
    OUTLINED_FUNCTION_0_2(v0);
  }

  uint64_t v9 = (void *)v1[9];
  uint64_t v10 = v1[10];

  uint64_t v11 = v9[3];
  uint64_t v12 = v9[4];
  OUTLINED_FUNCTION_82(v9);
  v1[17] = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 192))(v11, v12);
  uint64_t v13 = *(int **)(*(void *)v10 + 168LL);
  uint64_t v16 = (uint64_t (*)(void))((char *)v13 + *v13);
  uint64_t v14 = (void *)swift_task_alloc(v13[1]);
  v1[18] = v14;
  *uint64_t v14 = v1;
  v14[1] = closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:);
  return v16(v1[11]);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  double v13;
  void (*v14)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v37 = *(void *)(v0 + 112);
  uint64_t v38 = *(void *)(v0 + 104);
  uint64_t v3 = *(void **)(v0 + 88);
  uint64_t v39 = *(void *)(v0 + 96);
  char v4 = *(void **)(v0 + 72);
  os_log_type_t v5 = *(void *)(v0 + 80);
  swift_retain();
  uint64_t v6 = specialized Sequence.compactMap<A>(_:)(v1, v5);
  OUTLINED_FUNCTION_62();
  uint64_t v7 = v4[3];
  uint64_t v8 = v4[4];
  OUTLINED_FUNCTION_82(v4);
  (*(void (**)(uint64_t, uint64_t))(v8 + 64))(v7, v8);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v11 = OUTLINED_FUNCTION_82((void *)(v0 + 16));
  Date.init()(v11);
  uint64_t v12 = OUTLINED_FUNCTION_8_1();
  uint64_t v13 = Date.timeIntervalSince1970.getter(v12);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v2, v38);
  *(double *)(v0 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v13;
  *(void *)(v0 + 64) = v6;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v15 = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory and conformance AppNameSpecifiedByUserSignalCollectionHistory();
  v14(3LL, v0 + 56, &type metadata for AppNameSpecifiedByUserSignalCollectionHistory, v15, v9, v10);
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  uint64_t v16 = v3[3];
  uint64_t v17 = v3[4];
  uint64_t v18 = __swift_project_boxed_opaque_existential_1(v3, v16);
  PhoneCallNLIntent.applicationId.getter(v16, v17, (uint64_t)v18);
  if (v20)
  {
    unint64_t v21 = v20;
  }

  else
  {
    double v19 = 0LL;
    unint64_t v21 = 0xE000000000000000LL;
  }

  (*(void (**)(uint64_t, unint64_t))(*(void *)v5 + 256LL))(v19, v21);
  uint64_t v23 = v22;
  uint64_t v24 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_22(v24, v25, v39);
  id v26 = *(void *)(v0 + 96);
  if ((v39 & 0xC000000000000001LL) != 0) {
    uint64_t v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v26);
  }
  else {
    uint64_t v27 = *(id *)(v26 + 32);
  }
  uint64_t v28 = v27;
  os_log_type_t v29 = *(void **)(v0 + 128);
  (*(void (**)(void))(**(void **)(v0 + 136) + 144LL))();
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();

  Logger.logObject.getter(v30);
  uint64_t v31 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v31))
  {
    uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v32);
    OUTLINED_FUNCTION_5_13(&dword_0, v33, v34, "#AppSelectionSignalsGatheringHelper triggerSignalCollection finished ");
    OUTLINED_FUNCTION_0_2(v23);
  }

  uint64_t v35 = *(void *)(v0 + 120);
  swift_release(*(void *)(v0 + 136));

  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release(*(void *)(v0 + 136));
  swift_task_dealloc(v1);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)( uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 144);
  *(void *)(*v2 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:);
  }

  else
  {
    *(void *)(v4 + 160) = a1;
    uint64_t v6 = closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:);
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1LL, v6);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of TaskPriority?(a1);
    uint64_t v8 = "/System/Library/PrivateFrameworks/SiriFlowEnvironment.framework/SiriFlowEnvironment";
  }

  else
  {
    unsigned __int8 v9 = TaskPriority.rawValue.getter(EnumTagSinglePayload);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
    uint64_t v8 = (char *)(v9 | 0x1C00LL);
  }

  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType(*(void *)(a3 + 16));
    swift_unknownObjectRetain(v10);
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
    uint64_t v15 = v14;
    swift_unknownObjectRelease(v10);
  }

  else
  {
    uint64_t v13 = 0LL;
    uint64_t v15 = 0LL;
  }

  if (v15 | v13)
  {
    v18[0] = 0LL;
    v18[1] = 0LL;
    uint64_t v16 = v18;
    void v18[2] = v13;
    void v18[3] = v15;
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  return swift_task_create(v8, v16, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v52[1] = a7;
  v52[2] = a6;
  id v54 = a3;
  v52[0] = a2;
  uint64_t v53 = a9;
  type metadata accessor for AppResolver(0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v18 = (char *)v52 - v17;
  uint64_t v55 = v19;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20((char *)v52 - v17, a5, a8);
  unint64_t v21 = static AppSelectionSignalsGatheringHelper.getShowedForcedAppDisambiguationList(sharedGlobals:)(a1);
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v59);
  if (a4)
  {
    swift_retain();
  }

  else
  {
    outlined init with copy of SignalProviding((uint64_t)v59, (uint64_t)&v64);
    uint64_t v22 = (void *)objc_opt_self(&OBJC_CLASS___TRIClient);
    id v23 = objc_msgSend(v22, "clientWithIdentifier:", 112, v52[0]);
    uint64_t v24 = type metadata accessor for TrialSmartAppSelectionConfigProvider();
    uint64_t v25 = swift_allocObject(v24, 24LL, 7LL);
    *(void *)(v25 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v23;
    uint64_t v26 = type metadata accessor for DiagnosticLogPermission();
    uint64_t v27 = swift_allocObject(v26, 16LL, 7LL);
    uint64_t v28 = type metadata accessor for SmartAppSelectionFeatureManager();
    swift_allocObject(v28, 104LL, 7LL);
    SmartAppSelectionFeatureManager.init(sharedGlobals:trialSmartAppSelectionConfigProvider:diagnosticLogPermission:)( &v64,  v25,  v27);
    a4 = v29;
  }

  __swift_destroy_boxed_opaque_existential_1(v59);
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)&v64);
  uint64_t v30 = type metadata accessor for AppUsageProvider();
  __int128 v61 = 0u;
  __int128 v62 = 0u;
  *(void *)&__int128 v63 = 0LL;
  uint64_t v31 = swift_allocObject(v30, 16LL, 7LL);
  swift_retain();
  AppResolver.init(appResolutionRules:)(_swiftEmptyArrayStorage);
  uint64_t v32 = type metadata accessor for PhoneAppResolutionHelper(0LL);
  uint64_t v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v20(v16, (uint64_t)v18, a8);
  uint64_t v34 = (uint8_t *)specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)( &v64,  (uint64_t)v16,  a4,  (uint64_t)&v61,  v31,  (uint64_t)v14,  v33,  a8,  v53);
  if (v21[2])
  {
    uint64_t v35 = a1[3];
    uint64_t v36 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v35);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v36 + 152))(v56, v35, v36);
    uint64_t v37 = v57;
    uint64_t v38 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v38 + 24))(v60, v37, v38);
    outlined init with take of AnnotatedApp?( (uint64_t)v60,  (uint64_t)&v61,  &demangling cache variable for type metadata for AnnotatedApp?);
    uint64_t v39 = v54;
    if ((void)v61)
    {
      __int128 v64 = v61;
      __int128 v65 = v62;
      __int128 v66 = v63;
      __swift_destroy_boxed_opaque_existential_1(v56);
      if (v66 == 4)
      {
        uint64_t v40 = v64;
        uint64_t v41 = App.appIdentifier.getter();
        if (v42) {
          uint64_t v43 = v41;
        }
        else {
          uint64_t v43 = 0LL;
        }
        if (v42) {
          uint64_t v44 = v42;
        }
        else {
          uint64_t v44 = 0xE000000000000000LL;
        }
        static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:)( (uint64_t)a1,  v52[0],  (uint64_t)v39,  v34,  (uint64_t)v21,  v43,  v44);
        swift_release(v40);
        swift_bridgeObjectRelease();
        swift_release(v34);
        swift_release(a4);
        uint64_t v67 = *((void *)&v64 + 1);
        outlined release of Set<String>(&v67);
        outlined init with take of AnnotatedApp?( (uint64_t)&v65,  (uint64_t)v56,  &demangling cache variable for type metadata for String?);
        outlined release of String?((uint64_t)v56);
        uint64_t v68 = *((void *)&v66 + 1);
        outlined release of Set<String>(&v68);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v18, a8);
      }

      swift_bridgeObjectRelease();
      swift_release(v64);
      uint64_t v67 = *((void *)&v64 + 1);
      outlined release of Set<String>(&v67);
      outlined init with take of AnnotatedApp?( (uint64_t)&v65,  (uint64_t)v56,  &demangling cache variable for type metadata for String?);
      outlined release of String?((uint64_t)v56);
      uint64_t v68 = *((void *)&v66 + 1);
      outlined release of Set<String>(&v68);
    }

    else
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v56);
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = v54;
  }

  uint64_t v45 = v39[3];
  uint64_t v46 = v39[4];
  double v47 = __swift_project_boxed_opaque_existential_1(v39, v45);
  PhoneCallNLIntent.applicationId.getter(v45, v46, (uint64_t)v47);
  uint64_t v49 = v48;
  uint64_t v50 = swift_bridgeObjectRelease();
  if (v49 && ((*(uint64_t (**)(uint64_t))(*(void *)a4 + 128LL))(v50) & 1) != 0) {
    static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)( (uint64_t)a1,  v52[0],  (uint64_t)v39,  v34);
  }
  swift_release(v34);
  swift_release(a4);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v18, a8);
}

ValueMetadata *type metadata accessor for AppSelectionSignalsGatheringHelper()
{
  return &type metadata for AppSelectionSignalsGatheringHelper;
}

uint64_t sub_13924C()
{
  return swift_deallocObject(v0, 152LL, 7LL);
}

uint64_t partial apply for closure #1 in static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:)()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = (void *)swift_task_alloc(dword_4332D4);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  OUTLINED_FUNCTION_26_30();
  return closure #1 in static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:)( v5,  v6,  v7,  v8,  v9,  v10,  v2,  v3);
}

uint64_t sub_139340()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t partial apply for closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = (void *)swift_task_alloc(dword_4332E4);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_26_30();
  return closure #1 in static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)( v4,  v5,  v6,  v7,  v8,  v9,  v2);
}

BOOL OUTLINED_FUNCTION_10_47()
{
  return PhoneCallNLIntent.isVideoCall()();
}

uint64_t OUTLINED_FUNCTION_20_29()
{
  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_30(uint64_t a1, ...)
{
  return outlined init with copy of SignalProviding(v1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_23_29()
{
  return type metadata accessor for CommunicationTypeSignal.CommunicationType(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_28_26(uint64_t a1)
{
  *(void *)(v1 - outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 168) = a1;
  return static os_log_type_t.debug.getter();
}

uint64_t OUTLINED_FUNCTION_30_22(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (v3) {
    uint64_t v4 = 1LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, v4, a3);
}

uint64_t *BiomeEventSender.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  return &static BiomeEventSender.instance;
}

unint64_t PhoneDiscoverabilityEvent.identifier.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD000000000000025LL;
  }
}

uint64_t PhoneDiscoverabilityEvent.userInfo.getter()
{
  return Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
}

id one-time initialization function for instance()
{
  id result = BiomeEventSender.init()();
  static BiomeEventSender.instance = (uint64_t)result;
  return result;
}

id BiomeEventSender.init()()
{
  id v0 = (id)BiomeLibrary();
  id v1 = [v0 Discoverability];
  swift_unknownObjectRelease(v0);
  id v2 = [v1 Signals];
  swift_unknownObjectRelease(v1);
  id v3 = [v2 source];

  return v3;
}

id static BiomeEventSender.instance.getter()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  return (id)static BiomeEventSender.instance;
}

Swift::Void __swiftcall BiomeEventSender.donateTipKitEvent(_:)( PhoneCallFlowDelegatePlugin::PhoneDiscoverabilityEvent a1)
{
  id v2 = v1;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = 0xD00000000000001CLL;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v9 = static os_log_type_t.debug.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    uint64_t v17 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    if ((a1 & 1) != 0)
    {
      unint64_t v12 = 0x800000000034B3D0LL;
    }

    else
    {
      uint64_t v4 = 0xD000000000000025LL;
      unint64_t v12 = 0x800000000034B3F0LL;
    }

    uint64_t v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v10 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v7, v9, "#BiomeEventSender Donating %s event to discoverabilitySignal", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL);
    OUTLINED_FUNCTION_0_2(v11);
    OUTLINED_FUNCTION_0_2((uint64_t)v10);
  }

  else
  {

    if ((a1 & 1) == 0) {
      uint64_t v4 = 0xD000000000000025LL;
    }
  }

  if ((a1 & 1) != 0) {
    uint64_t v13 = 0x800000000034B3D0LL;
  }
  else {
    uint64_t v13 = 0x800000000034B3F0LL;
  }
  id v14 = objc_allocWithZone(&OBJC_CLASS___BMDiscoverabilitySignals);
  id v15 = @nonobjc BMDiscoverabilitySignals.init(contentIdentifier:context:osBuild:userInfo:)( v4,  v13,  0LL,  0LL,  0LL,  0LL,  0LL,  0xF000000000000000LL);
  [v2 sendEvent:v15];
}

void protocol witness for BiomeEventSending.donateTipKitEvent(_:) in conformance BiomeEventSender(char a1)
{
}

id @nonobjc BMDiscoverabilitySignals.init(contentIdentifier:context:osBuild:userInfo:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    NSString v14 = 0LL;
    if (a6) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }

  NSString v13 = 0LL;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a6)
  {
LABEL_4:
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }

unint64_t lazy protocol witness table accessor for type PhoneDiscoverabilityEvent and conformance PhoneDiscoverabilityEvent()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneDiscoverabilityEvent and conformance PhoneDiscoverabilityEvent;
  if (!lazy protocol witness table cache variable for type PhoneDiscoverabilityEvent and conformance PhoneDiscoverabilityEvent)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneDiscoverabilityEvent,  &type metadata for PhoneDiscoverabilityEvent);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneDiscoverabilityEvent and conformance PhoneDiscoverabilityEvent);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneDiscoverabilityEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 1;
  }
  else {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_139A04 + 4 * byte_328755[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_139A38 + 4 * asc_328750[v4]))();
}

uint64_t sub_139A38(uint64_t result)
{
  *(_BYTE *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_139A40(uint64_t result, int a2)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (a2) {
    JUMPOUT(0x139A48LL);
  }
  return result;
}

uint64_t sub_139A54(uint64_t result, int a2)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = 0;
  if (!a2) {
    JUMPOUT(0x139A5CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_139A60(uint64_t result)
{
  *(_DWORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

uint64_t sub_139A68(uint64_t result)
{
  *(_WORD *)(result + Hasher._combine(_:)(v1 & 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneDiscoverabilityEvent()
{
  return &type metadata for PhoneDiscoverabilityEvent;
}

ValueMetadata *type metadata accessor for BiomeEventSender()
{
  return &type metadata for BiomeEventSender;
}

uint64_t IncomingCallNLContextProvider.makeOfferFollowUpIntentContext(intentResponse:isAnnouncement:)@<X0>( uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    uint64_t v6 = (*(uint64_t (**)(void))(*(void *)(*(void *)v3 + 88LL) + 24LL))(*(void *)(*(void *)v3 + 80LL));
    return (*(uint64_t (**)(uint64_t, void))(*(void *)v3 + 104LL))(v6, a2 & 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for NLContextUpdate(0LL);
    return __swift_storeEnumTagSinglePayload(a3, 1LL, 1LL, v8);
  }

uint64_t IncomingCallNLContextProvider.makeOfferFollowUpIntentContext(followUpOfferType:isAnnouncement:)@<X0>( char a1@<W0>, os_log_type_t a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = (void *)(v10 - v9);
  FollowUpOfferType.requiresConfirmation.getter(a1);
  if ((v12 & 1) == 0) {
    return __swift_storeEnumTagSinglePayload(a3, 1LL, 1LL, v7);
  }
  IncomingCallNLContextProvider.makeFollowUpConfirmationContext(followUpOfferType:)(a1);
  switch(a1)
  {
    case 1:
      OUTLINED_FUNCTION_21_30();
      if (!v13) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v21 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v21, (uint64_t)static Logger.siriPhone);
      os_log_type_t v22 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_5(v22))
      {
        id v23 = (_WORD *)OUTLINED_FUNCTION_1_0();
        *id v23 = 0;
        OUTLINED_FUNCTION_3_61(&dword_0, v24, v25, "#IncomingCallNLContextProvider: Adding NLv4 context for startCall");
        OUTLINED_FUNCTION_0_2((uint64_t)v23);
      }

      IncomingCallNLContextProvider.nlContextUpdateForCall()();
      goto LABEL_21;
    case 2:
      OUTLINED_FUNCTION_21_30();
      if (!v13) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v26 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v26, (uint64_t)static Logger.siriPhone);
      os_log_type_t v27 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_5(v27))
      {
        uint64_t v28 = (_WORD *)OUTLINED_FUNCTION_1_0();
        *uint64_t v28 = 0;
        OUTLINED_FUNCTION_3_61(&dword_0, v29, v30, "#IncomingCallNLContextProvider: Adding NLv4 context for answerCall");
        OUTLINED_FUNCTION_0_2((uint64_t)v28);
      }

      IncomingCallNLContextProvider.nlContextUpdateForAnswer()();
      goto LABEL_21;
    case 3:
      OUTLINED_FUNCTION_21_30();
      if (!v13) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v14 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v14, (uint64_t)static Logger.siriPhone);
      os_log_type_t v15 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_5(v15))
      {
        uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_1_0();
        _WORD *v16 = 0;
        OUTLINED_FUNCTION_3_61(&dword_0, v17, v18, "#IncomingCallNLContextProvider: Adding NLv4 context for callBack");
        OUTLINED_FUNCTION_0_2((uint64_t)v16);
      }

      IncomingCallNLContextProvider.nlContextUpdateForCallBack()();
LABEL_21:
      uint64_t v3 = v11;
      NLContextUpdate.nluSystemDialogActs.setter(v19);
      break;
  }

  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_30();
    if (!v13) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v31 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v31, (uint64_t)static Logger.siriPhone);
    os_log_type_t v32 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_93(v32))
    {
      uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v33 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v3,  a2,  "#NLContextUpdate: Setting Announce Calls NLContextUpdate fields",  v33);
      OUTLINED_FUNCTION_0_2((uint64_t)v33);
    }

    NLContextUpdate.submitAsSpokenNotificationContext.setter(1LL);
    NLContextUpdate.weightedPromptStrict.setter(0LL);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v35 = OUTLINED_FUNCTION_5_32(v34);
    *(_OWORD *)(v35 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAAceConfirmationReasonCONFIRM_ANSWER_CALLValue);
    uint64_t v38 = v37;
    id v39 = [objc_allocWithZone(SAAceConfirmationContext) init];
    outlined bridged method (mbnn) of @objc SAAceConfirmationContext.reason.setter(v36, v38, v39);
    *(void *)(v35 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v39;
    specialized Array._endMutation()(v40, v41, v42, v43);
    NLContextUpdate.conversationStateAttachments.setter(v35);
  }

  (*(void (**)(uint64_t, void *, uint64_t))(v8 + 32))(a3, v11, v7);
  return __swift_storeEnumTagSinglePayload(a3, 0LL, 1LL, v7);
}

void IncomingCallNLContextProvider.makeFollowUpConfirmationContext(followUpOfferType:)(unsigned __int8 a1)
{
  int v3 = a1;
  uint64_t v4 = *v1;
  unint64_t v5 = type metadata accessor for INIntent();
  type metadata accessor for PhoneCallNLContextProvider(0LL, v5, *(void *)(v4 + 80), v6);
  static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
  if (v3 == 2)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v9 = swift_allocObject(v8, 48LL, 7LL);
    *(_OWORD *)(v9 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
    OUTLINED_FUNCTION_125_0();
    *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    *(void *)(v9 + 40) = v11;
    uint64_t v12 = swift_allocObject(v8, 64LL, 7LL);
    *(_OWORD *)(v12 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D880;
    Swift::String v33 = String.uppercased()();
    uint64_t v31 = 32LL;
    unint64_t v32 = 0xE100000000000000LL;
    uint64_t v29 = 95LL;
    unint64_t v30 = 0xE100000000000000LL;
    lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_7_55((uint64_t)&v31, (uint64_t)&v29);
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_125_0();
    OUTLINED_FUNCTION_5_53();
    Swift::String v13 = String.uppercased()();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_70_2();
    object = v33._object;
    *(void *)(v12 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v33._countAndFlagsBits;
    *(void *)(v12 + 40) = object;
    Swift::String v33 = String.uppercased()();
    uint64_t v31 = 32LL;
    unint64_t v32 = 0xE100000000000000LL;
    uint64_t v29 = 95LL;
    unint64_t v30 = 0xE100000000000000LL;
    OUTLINED_FUNCTION_7_55((uint64_t)&v31, (uint64_t)&v29);
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_125_0();
    OUTLINED_FUNCTION_5_53();
    Swift::String v15 = String.uppercased()();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    uint64_t v7 = swift_bridgeObjectRelease();
    uint64_t v16 = v33._object;
    *(void *)(v12 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v33._countAndFlagsBits;
    *(void *)(v12 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v16;
  }

  uint64_t v17 = NLContextUpdate.weightedPromptResponseTargets.getter(v7);
  if (v17) {
    uint64_t v18 = (void *)v17;
  }
  else {
    uint64_t v18 = _swiftEmptyArrayStorage;
  }
  v33._uint64_t countAndFlagsBits = (uint64_t)v18;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  uint64_t v19 = NLContextUpdate.weightedPromptResponseTargets.setter(v33._countAndFlagsBits);
  uint64_t v20 = NLContextUpdate.weightedPromptResponseOptions.getter(v19);
  swift_bridgeObjectRelease();
  if (v20) {
    uint64_t v21 = (void *)v20;
  }
  else {
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  v33._uint64_t countAndFlagsBits = (uint64_t)v21;
  specialized Array.append<A>(contentsOf:)();
  NLContextUpdate.weightedPromptResponseOptions.setter(v33._countAndFlagsBits);
  IncomingCallNLContextProvider.getConfirmationAttachment(for:)(a1);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v25 = OUTLINED_FUNCTION_5_32(v24);
    *(_OWORD *)(v25 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
    *(void *)(v25 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v23;
    v33._uint64_t countAndFlagsBits = v25;
    specialized Array._endMutation()(v25, v26, v27, v28);
    NLContextUpdate.conversationStateAttachments.setter(v33._countAndFlagsBits);
  }

void IncomingCallNLContextProvider.getConfirmationAttachment(for:)(char a1)
{
  if (a1 == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v8 = OUTLINED_FUNCTION_15_1();
    uint64_t v9 = (os_log_s *)OUTLINED_FUNCTION_12_1(v8, (uint64_t)static Logger.siriPhone);
    os_log_type_t v11 = static os_log_type_t.debug.getter(v9, v10);
    if (OUTLINED_FUNCTION_10(v11))
    {
      uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v12 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v9, v1, "#IncomingCallNLContextProvider: Adding NLv3 context for startCall", v12);
      OUTLINED_FUNCTION_0_2((uint64_t)v12);
    }

    uint64_t v7 = &SAAceConfirmationReasonCONFIRM_START_CALLValue;
    goto LABEL_13;
  }

  if (a1 == 3)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v2 = OUTLINED_FUNCTION_15_1();
    int v3 = (os_log_s *)OUTLINED_FUNCTION_12_1(v2, (uint64_t)static Logger.siriPhone);
    os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
    if (OUTLINED_FUNCTION_10(v5))
    {
      uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v6 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v3, v1, "#IncomingCallNLContextProvider: Adding NLv3 context for callBack", v6);
      OUTLINED_FUNCTION_0_2((uint64_t)v6);
    }

    uint64_t v7 = &SAAceConfirmationReasonCONFIRM_CALL_BACKValue;
LABEL_13:
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v7);
    outlined bridged method (mbnn) of @objc SAAceConfirmationContext.reason.setter( v13,  v14,  [objc_allocWithZone(SAAceConfirmationContext) init]);
  }

  OUTLINED_FUNCTION_6();
}

void IncomingCallNLContextProvider.nlContextUpdateForCallBack()()
{
}

void IncomingCallNLContextProvider.nlContextUpdateForAnswer()()
{
}

void IncomingCallNLContextProvider.nlContextUpdateForCall()()
{
}

void IncomingCallNLContextProvider.nlContextUpdateForCallBack()( uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t a3, unint64_t a4)
{
  uint64_t v7 = a1(0LL);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  uint64_t v8 = a2();
  IncomingCallNLContextProvider.createNLUSystemDialogAct(taskBuilder:typeForLogging:)(v8, a3, a4);
  swift_release(v8);
  OUTLINED_FUNCTION_6();
}

uint64_t IncomingCallNLContextProvider.createNLUSystemDialogAct(taskBuilder:typeForLogging:)( uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v74 = a3;
  uint64_t v70 = a2;
  uint64_t v77 = type metadata accessor for PhoneError(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v76 = v4;
  __chkstk_darwin();
  unint64_t v75 = (char *)v68 - v5;
  uint64_t v73 = OUTLINED_FUNCTION_15_1();
  v68[1] = *(void *)(v73 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  v68[0] = v7 - v6;
  uint64_t v81 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v79 = *(void *)(v81 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v69 = v8;
  __chkstk_darwin();
  uint64_t v84 = (char *)v68 - v9;
  uint64_t v80 = type metadata accessor for Siri_Nlu_External_SystemOffered(0LL);
  uint64_t v71 = *(void *)(v80 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v78 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)v68 - v11;
  uint64_t v85 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v83 = *(void *)(v85 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v14 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)v68 - v15;
  type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v19 = v18 - v17;
  uint64_t v82 = type metadata accessor for Siri_Nlu_External_UserWantedToProceed(0LL);
  uint64_t v20 = *(void *)(v82 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v24 = (char *)v68 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v29 = OUTLINED_FUNCTION_5_32(v28);
  *(_OWORD *)(v29 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v29 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  v88[0] = v29;
  specialized Array._endMutation()(v29, v30, v31, v32);
  uint64_t v33 = v88[0];
  uint64_t v34 = type metadata accessor for UsoBuilderOptions(0LL);
  __swift_storeEnumTagSinglePayload(v27, 1LL, 1LL, v34);
  swift_retain();
  uint64_t v35 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v33, v27);
  swift_bridgeObjectRelease();
  uint64_t v36 = outlined destroy of UsoBuilderOptions?(v27);
  Siri_Nlu_External_UserWantedToProceed.init()(v36);
  uint64_t v72 = v35;
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v35, 0LL);
  uint64_t v37 = Siri_Nlu_External_UserWantedToProceed.reference.setter(v19);
  Siri_Nlu_External_UserDialogAct.init()(v37);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  unint64_t v75 = v24;
  v38(v22, v24, v82);
  uint64_t v39 = Siri_Nlu_External_UserDialogAct.wantedToProceed.setter(v22);
  Siri_Nlu_External_SystemOffered.init()(v39);
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v14, v16, v85);
  uint64_t v40 = Siri_Nlu_External_SystemOffered.offeredAct.setter(v14);
  Siri_Nlu_External_SystemDialogAct.init()(v40);
  uint64_t v41 = v71;
  uint64_t v42 = v78;
  uint64_t v43 = v80;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v78, v12, v80);
  Siri_Nlu_External_SystemDialogAct.offered.setter(v42);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v76 = v20;
  uint64_t v77 = (uint64_t)v16;
  uint64_t v78 = v12;
  uint64_t v44 = (os_log_s *)__swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
  unint64_t v45 = v74;
  uint64_t v46 = swift_bridgeObjectRetain_n(v74, 2LL);
  Logger.logObject.getter(v46);
  os_log_type_t v47 = OUTLINED_FUNCTION_6_0();
  BOOL v48 = os_log_type_enabled(v44, v47);
  uint64_t v49 = v81;
  if (v48)
  {
    uint64_t v50 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v51 = v41;
    uint64_t v52 = OUTLINED_FUNCTION_7_0(64LL);
    v88[0] = v52;
    *(_DWORD *)uint64_t v50 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v45, v88);
    uint64_t v54 = OUTLINED_FUNCTION_22_31(v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, v55, v50 + 4);
    uint64_t v56 = swift_bridgeObjectRelease_n(v45, 3LL);
    *(_WORD *)(v50 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v57 = v84;
    OUTLINED_FUNCTION_17_39(v56, (uint64_t)v87);
    uint64_t v58 = v79;
    uint64_t v59 = v69;
    OUTLINED_FUNCTION_19_28(v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 16));
    uint64_t v60 = specialized String.init(describing:)(v59);
    uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v61, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, v87, v50 + 14);
    uint64_t v49 = v81;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v44, v47, "Returning NLUUserDialogAct.NLUSystemOffered for %s: %s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy(v52, 2LL);
    uint64_t v62 = v52;
    uint64_t v41 = v51;
    uint64_t v43 = v80;
    OUTLINED_FUNCTION_0_2(v62);
    OUTLINED_FUNCTION_0_2(v50);
  }

  else
  {

    swift_bridgeObjectRelease_n(v45, 2LL);
    uint64_t v58 = v79;
    uint64_t v57 = v84;
  }

  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  uint64_t v64 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v65 = (v64 + 32) & ~v64;
  uint64_t v66 = swift_allocObject(v63, v65 + *(void *)(v58 + 72), v64 | 7);
  *(_OWORD *)(v66 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_17_39(v66, (uint64_t)v88);
  OUTLINED_FUNCTION_19_28(v66 + v65, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 16));
  swift_release(v72);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v78, v43);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v77, v85);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v82);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v49);
  return v66;
}

void outlined bridged method (mbnn) of @objc SAAceConfirmationContext.reason.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setReason:v5];
}

uint64_t type metadata completion function for IncomingCallNLContextProvider(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + 96);
}

uint64_t type metadata accessor for IncomingCallNLContextProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for IncomingCallNLContextProvider);
}

unint64_t type metadata accessor for INIntent()
{
  unint64_t result = lazy cache variable for type metadata for INIntent;
  if (!lazy cache variable for type metadata for INIntent)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INIntent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for INIntent);
  }

  return result;
}

void OUTLINED_FUNCTION_3_61(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_7_55(uint64_t a1, uint64_t a2)
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(a1, a2, 0LL, 0LL, 0LL, 1LL, v2, v2);
}

uint64_t OUTLINED_FUNCTION_17_39(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(v2, a2, 0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_19_28@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_22_31(uint64_t a1)
{
  *(void *)(v1 - outlined init with take of AppSelectionSignalComponent(v0, v1 + 176) = a1;
  return v1 - 176;
}

void specialized PhoneFlow.init(sharedGlobals:)(__int128 *a1)
{
}

{
  specialized PhoneFlow.init(sharedGlobals:)( a1,  &demangling cache variable for type metadata for PhoneCallFlowState<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
}

{
  specialized PhoneFlow.init(sharedGlobals:)( a1,  &demangling cache variable for type metadata for PhoneCallFlowState<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
}

{
  specialized PhoneFlow.init(sharedGlobals:)( a1,  &demangling cache variable for type metadata for PhoneCallFlowState<INStartCallIntent, INStartCallIntentResponse>);
}

void specialized PhoneFlow.init(sharedGlobals:)(__int128 *a1, uint64_t *a2)
{
  void v2[2] = 0x6F6C46656E6F6850LL;
  void v2[3] = 0xE900000000000077LL;
  uint64_t v4 = (char *)v2 + *(void *)(*v2 + 112LL);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_storeEnumTagMultiPayload(v4, v5, 5LL);
  outlined init with take of AppSelectionSignalComponent(a1, (uint64_t)v2 + *(void *)(*v2 + 120LL));
  OUTLINED_FUNCTION_6();
}

void specialized PhoneFlow.deinit()
{
}

{
  specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
}

{
  specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
}

{
  specialized PhoneFlow.deinit(&demangling cache variable for type metadata for PhoneCallFlowState<INStartCallIntent, INStartCallIntentResponse>);
}

void specialized PhoneFlow.deinit(uint64_t *a1)
{
}

uint64_t one-time initialization function for typeName()
{
  uint64_t v3 = type metadata accessor for AddCallParticipantFlow(0LL);
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AddCallParticipantFlow.Type);
  uint64_t result = String.init<A>(describing:)(&v3, v0);
  static AddCallParticipantFlow.typeName = result;
  unk_433380 = v2;
  return result;
}

{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v3 = type metadata accessor for DismissSiriFlow();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DismissSiriFlow.Type);
  uint64_t result = String.init<A>(describing:)(&v3, v0);
  static DismissSiriFlow.typeName = result;
  unk_434C30 = v2;
  return result;
}

void AddCallParticipantFlow.__allocating_init(nlIntent:app:sharedGlobals:)( void *a1, uint64_t a2, void *a3)
{
}

uint64_t AddCallParticipantFlow.init(nlIntent:app:sharedGlobals:)(void *a1, uint64_t a2, void *a3)
{
  *(void *)(v3 + direct field offset for AddCallParticipantFlow.app) = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)v10);
  specialized PhoneFlow.init(sharedGlobals:)( v10,  &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v8;
}

uint64_t AddCallParticipantFlow.execute()(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[20] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  v2[21] = v4;
  unint64_t v5 = (*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[22] = swift_task_alloc(v5);
  v2[23] = swift_task_alloc(v5);
  return swift_task_switch(AddCallParticipantFlow.execute(), 0LL, 0LL);
}

uint64_t AddCallParticipantFlow.execute()()
{
  void (*v39)(uint64_t *__return_ptr, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51[5];
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void (**)(void))(**(void **)(v0 + 152) + 128LL);
  v3();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  switch((int)EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v5 = *(void *)(v0 + 152);
      uint64_t v6 = *(void *)(v0 + 160);
      uint64_t v7 = **(void **)(v0 + 184);
      (*(void (**)(void))(*(void *)v5 + 152LL))();
      uint64_t v8 = type metadata accessor for AddCallParticipantCATsSimple(0LL);
      static CATOption.defaultMode.getter(v8);
      uint64_t v9 = CATWrapperSimple.__allocating_init(options:globals:)(v6, 0LL);
      uint64_t v10 = type metadata accessor for AddCallParticipantGuardFlowFactory();
      uint64_t v11 = swift_allocObject(v10, 64LL, 7LL);
      outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 56), v11 + 16);
      *(void *)(v11 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v9;
      uint64_t v12 = AddCallParticipantGuardFlowFactory.makeGuardFlow()();
      swift_release(v11);
      *(void *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v7;
      *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
      uint64_t v13 = OUTLINED_FUNCTION_91_4();
      uint64_t v14 = type metadata accessor for GuardFlow(0LL);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>> and conformance AnyValueFlow<A>,  &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>>);
      uint64_t v16 = Flow.guarded<A>(by:)(v0 + 112, v13, v14, v15);
      *(void *)(v0 + 120) = v16;
      swift_retain();
      uint64_t v17 = OUTLINED_FUNCTION_91_4();
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ConditionalFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>> and conformance ConditionalFlow<A>,  &demangling cache variable for type metadata for ConditionalFlow<RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>>);
      static ExecuteResponse.ongoing<A>(next:childCompletion:)( v0 + 120,  partial apply for implicit closure #2 in implicit closure #1 in AddCallParticipantFlow.execute(),  v5,  v17);
      swift_release(v12);
      swift_release(v7);
      swift_release(v5);
      uint64_t v18 = v16;
      goto LABEL_10;
    case 5:
      uint64_t v35 = *(void *)(v0 + 168);
      uint64_t v34 = *(uint64_t **)(v0 + 176);
      uint64_t v36 = *(void *)(v0 + 152);
      uint64_t v37 = type metadata accessor for AddCallParticipantRCHFlow(0LL);
      outlined init with copy of SharedGlobalsProviding( v36 + direct field offset for AddCallParticipantFlow.nlIntent,  v0 + 16);
      uint64_t v38 = *(void *)(v36 + direct field offset for AddCallParticipantFlow.app);
      uint64_t v39 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v36 + 152LL);
      uint64_t v40 = swift_retain();
      v39(v51, v40);
      uint64_t v41 = AddCallParticipantRCHFlow.__allocating_init(phoneCallNLIntent:app:sharedGlobals:)( (void *)(v0 + 16),  v38,  v51);
      *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v2, v1 + 136) = v41;
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AddCallParticipantRCHFlow and conformance PhoneIntentRCHFlow<A, B>,  type metadata accessor for AddCallParticipantRCHFlow);
      uint64_t v42 = Flow.eraseToAnyValueFlow()(v37);
      swift_release(v41);
      *uint64_t v34 = v42;
      swift_storeEnumTagMultiPayload(v34, v35, 2LL);
      uint64_t v43 = *(void (**)(uint64_t *))(*(void *)v36 + 136LL);
      swift_retain();
      v43(v34);
      static ExecuteResponse.ongoing(requireInput:)(0LL);
      uint64_t v18 = v42;
LABEL_10:
      swift_release(v18);
      break;
    case 6:
      (*(void (**)(void))(**(void **)(v0 + 152) + 232LL))();
      break;
    case 7:
      static ExecuteResponse.complete()(EnumCaseMultiPayload);
      break;
    default:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v19 = *(void *)(v0 + 152);
      uint64_t v20 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
      uint64_t v21 = swift_retain_n(v19, 2LL);
      uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc(22LL, -1LL);
        uint64_t v50 = swift_slowAlloc(64LL, -1LL);
        v51[0] = v50;
        *(_DWORD *)uint64_t v24 = 136315394;
        if (one-time initialization token for typeName != -1) {
          swift_once(&one-time initialization token for typeName, one-time initialization function for typeName);
        }
        uint64_t v25 = *(void *)(v0 + 176);
        uint64_t v26 = *(void *)(v0 + 152);
        uint64_t v28 = static AddCallParticipantFlow.typeName;
        unint64_t v27 = unk_433380;
        swift_bridgeObjectRetain();
        *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v27, v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v24 + 4);
        uint64_t v29 = swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        ((void (*)(uint64_t))v3)(v29);
        specialized PhoneCallFlowState.description.getter( &demangling cache variable for type metadata for RCHFlowResult<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>,  &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
        uint64_t v31 = v30;
        unint64_t v33 = v32;
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v25,  &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
        *(void *)(v0 + outlined init with take of AppSelectionSignalComponent(v4, v1 + 96) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v24 + 14);
        swift_bridgeObjectRelease();
        swift_release_n(v26, 2LL);
        _os_log_impl(&dword_0, v22, v23, "%s: execute called with flow in unexpected state: %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy(v50, 2LL);
        OUTLINED_FUNCTION_0_2(v50);
        OUTLINED_FUNCTION_0_2(v24);
      }

      else
      {
        swift_release_n(*(void *)(v0 + 152), 2LL);
      }

      unint64_t v45 = *(void *)(v0 + 176);
      uint64_t v44 = *(void *)(v0 + 184);
      uint64_t v46 = *(void *)(v0 + 152);
      swift_storeEnumTagMultiPayload(v45, *(void *)(v0 + 168), 7LL);
      (*(void (**)(uint64_t))(*(void *)v46 + 136LL))(v45);
      static ExecuteResponse.ongoing(requireInput:)(0LL);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v44,  &demangling cache variable for type metadata for PhoneCallFlowState<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
      break;
  }

  os_log_type_t v47 = *(void *)(v0 + 176);
  BOOL v48 = *(void *)(v0 + 160);
  swift_task_dealloc(*(void *)(v0 + 184));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void AddCallParticipantFlow.init(sharedGlobals:)()
{
}

void AddCallParticipantFlow.init(state:sharedGlobals:)()
{
}

uint64_t AddCallParticipantFlow.__ivar_destroyer()
{
  return swift_release(*(void *)(v0 + direct field offset for AddCallParticipantFlow.app));
}

void AddCallParticipantFlow.deinit()
{
  uint64_t v1 = v0;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + direct field offset for AddCallParticipantFlow.nlIntent));
  swift_release(*(void *)(v1 + direct field offset for AddCallParticipantFlow.app));
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

void specialized PhoneCallFlowState.description.getter()
{
}

void specialized PhoneCallFlowState.description.getter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_91_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v7 = v6 - v5;
  outlined init with copy of Result<TemplatingResult, Error>(v2, v6 - v5, a2);
  uint64_t v8 = (char *)sub_13B7E4 + 4 * byte_32886C[swift_getEnumCaseMultiPayload(v7, v4)];
  __asm { BR              X10 }

uint64_t sub_13B7E4()
{
  *(void *)(v3 - 120) = 0xD000000000000012LL;
  *(void *)(v3 - 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x800000000034B530LL;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input);
  v5._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_6_52(v4);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_24();
  uint64_t v6 = *(void *)(v3 - 120);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  return v6;
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AddCallParticipantFlow.execute()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224LL))();
}

uint64_t type metadata accessor for AddCallParticipantFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantFlow;
  if (!type metadata singleton initialization cache for AddCallParticipantFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddCallParticipantFlow);
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantFlow(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256LL, 2LL, v2, a1 + 256);
}

void OUTLINED_FUNCTION_2_48(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._uint64_t countAndFlagsBits = 0xD000000000000015LL;
  String.append(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_3_62()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v3, v0);
}

uint64_t OUTLINED_FUNCTION_6_52(uint64_t a1)
{
  return dispatch thunk of CustomStringConvertible.description.getter(v1, a1);
}

void OUTLINED_FUNCTION_7_56()
{
  *(void *)(v0 - 120) = 0LL;
  *(void *)(v0 - 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE000000000000000LL;
}

void OUTLINED_FUNCTION_11_47()
{
  v0._uint64_t countAndFlagsBits = 8236LL;
  v0._object = (void *)0xE200000000000000LL;
  String.append(_:)(v0);
}

uint64_t TemplatingParallelizer.__allocating_init(name:timeout:qos:)( uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  TemplatingParallelizer.init(name:timeout:qos:)(a1, a2, a3 & 0x1FF, a4, a5);
  return v11;
}

void TemplatingParallelizer.init(name:timeout:qos:)( uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v30 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v11 = *(void *)(v30 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v28 = v13 - v12;
  type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v21 = v20 - v19;
  *(void *)(v6 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_catCalls) = _swiftEmptyArrayStorage;
  *(void *)(v6 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results) = _swiftEmptyArrayStorage;
  uint64_t v22 = v6 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name;
  *(void *)uint64_t v22 = a1;
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(_BYTE *)(v22 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a3;
  *(_BYTE *)(v22 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 7) = HIBYTE(a3) & 1;
  uint64_t v23 = v6 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_timeout;
  uint64_t v24 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, a4, v24);
  type metadata accessor for OS_dispatch_queue();
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v21, a5, v17);
  static OS_dispatch_queue.Attributes.concurrent.getter(v26);
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))( v28,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v30);
  uint64_t v27 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000016LL,  0x80000000003288B0LL,  v21,  v16,  v28,  0LL);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a5, v17);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a4, v24);
  *(void *)(v6 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_queue) = v27;
  OUTLINED_FUNCTION_7_5();
}

unint64_t type metadata accessor for OS_dispatch_queue()
{
  unint64_t result = lazy cache variable for type metadata for OS_dispatch_queue;
  if (!lazy cache variable for type metadata for OS_dispatch_queue)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  }

  return result;
}

void TemplatingParallelizer.addCall(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for PhoneError(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v13 = swift_allocObject(&unk_401CC0, 32LL, 7LL);
  *(void *)(v13 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a1;
  *(void *)(v13 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_catCalls);
  OUTLINED_FUNCTION_2_49();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v15 = *(void *)(*v14 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  uint64_t v16 = *v14;
  *(void *)(v16 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v15 + 1;
  uint64_t v17 = v16 + 16 * v15;
  *(void *)(v17 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TRTA;
  *(void *)(v17 + 40) = v13;
  swift_endAccess(v24);
  *(_OWORD *)uint64_t v10 = xmmword_3288B0;
  *(void *)(v10 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = 0xD000000000000038LL;
  *(void *)(v10 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0x800000000034B550LL;
  *(_OWORD *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = xmmword_3288C0;
  *(void *)(v10 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 55LL;
  *(_BYTE *)(v10 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0;
  swift_storeEnumTagMultiPayload(v10, v7, 2LL);
  uint64_t v18 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
  uint64_t v19 = swift_allocError(v7, v18, 0LL, 0LL);
  PhoneError.logged()(v20);
  outlined destroy of PhoneError(v10);
  *uint64_t v3 = v19;
  swift_storeEnumTagMultiPayload(v3, v11, 1LL);
  uint64_t v21 = (uint64_t *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results);
  OUTLINED_FUNCTION_2_49();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v22 = *(void *)(*v21 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  uint64_t v23 = *v21;
  *(void *)(v23 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v22 + 1;
  outlined init with take of Result<TemplatingResult, Error>( (uint64_t)v3,  v23 + ((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
  + *(void *)(v12 + 72) * v22);
  swift_endAccess(v24);
  swift_retain();
  OUTLINED_FUNCTION_7_5();
}

uint64_t _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TR( uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject(&unk_401DD8, 32LL, 7LL);
  *(void *)(v5 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  *(void *)(v5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  swift_retain();
  a2( partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>) -> (),  v5);
  return swift_release(v5);
}

uint64_t sub_13C120()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TRTA( uint64_t *a1)
{
  return _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGIegn_Iegg_xq_Ri_zRi0_zRi__Ri0__r0_lyAGytIsegnr_ytIegnr_TR( a1,  *(void (**)(uint64_t (*)(), uint64_t))(v1 + 16));
}

uint64_t TemplatingParallelizer.execute(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v29 = *(void *)(v7 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  __int16 v19 = v18;
  uint64_t v20 = swift_allocObject(&unk_401CE8, 72LL, 7LL);
  *(void *)(v20 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v4;
  *(void *)(v20 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v13;
  *(void *)(v20 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  *(void *)(v20 + 40) = v17;
  *(_BYTE *)(v20 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v19;
  *(_BYTE *)(v20 + 49) = HIBYTE(v19) & 1;
  *(void *)(v20 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a1;
  *(void *)(v20 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  aBlock[4] = partial apply for closure #1 in TemplatingParallelizer.execute(_:);
  uint64_t v32 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_1;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v22 = swift_retain();
  static DispatchQoS.unspecified.getter(v22);
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v23 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  unint64_t v25 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v24, v25, v7, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11);
  _Block_release(v21);
  swift_release(v13);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v11, v28);
  return swift_release(v32);
}

uint64_t closure #1 in TemplatingParallelizer.execute(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v67 = a2;
  uint64_t v68 = a7;
  uint64_t v66 = a6;
  int v65 = a5;
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v70 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchTime(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  unint64_t v61 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v62 = (char *)&v54 - v17;
  __int16 v18 = dispatch_group_create();
  uint64_t v72 = a1;
  uint64_t v19 = a1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_catCalls;
  swift_beginAccess(v19, v80, 0LL, 0LL);
  uint64_t v20 = *(void *)(*(void *)v19 + 16LL);
  uint64_t v71 = v9;
  if (v20)
  {
    uint64_t v56 = v15;
    uint64_t v57 = v14;
    uint64_t v58 = v12;
    uint64_t v60 = v11;
    uint64_t v59 = v8;
    uint64_t v21 = 0LL;
    uint64_t v55 = swift_bridgeObjectRetain();
    uint64_t v22 = (uint64_t *)(v55 + 40);
    uint64_t v23 = v72;
    do
    {
      unint64_t v25 = (void (*)(void ***))*(v22 - 1);
      uint64_t v24 = *v22;
      uint64_t v26 = v21 + 1;
      swift_retain();
      dispatch_group_enter(v18);
      uint64_t v27 = (void *)swift_allocObject(&unk_401D38, 40LL, 7LL);
      __int128 v27[2] = v23;
      v27[3] = v21;
      void v27[4] = v18;
      uint64_t v28 = swift_allocObject(&unk_401D60, 32LL, 7LL);
      *(void *)(v28 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in closure #1 in TemplatingParallelizer.execute(_:);
      *(void *)(v28 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v27;
      aBlock = (void **)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>) -> ();
      uint64_t v75 = v28;
      swift_retain();
      uint64_t v29 = v18;
      swift_retain();
      v25(&aBlock);
      swift_release(v24);
      swift_release(v27);
      swift_release(v28);
      v22 += 2;
      uint64_t v21 = v26;
    }

    while (v20 != v26);
    swift_bridgeObjectRelease();
    uint64_t v8 = v59;
    uint64_t v11 = v60;
    uint64_t v12 = v58;
    uint64_t v14 = v57;
    uint64_t v15 = v56;
  }

  uint64_t v30 = v61;
  static DispatchTime.now()();
  uint64_t v31 = v72;
  uint64_t v32 = v62;
  + infix(_:_:)(v30, v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_timeout);
  unint64_t v33 = *(void (**)(char *, uint64_t))(v15 + 8);
  v33(v30, v14);
  LOBYTE(v30) = OS_dispatch_group.wait(timeout:)(v32);
  v33(v32, v14);
  if ((v30 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v34 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
    uint64_t v35 = swift_retain_n(v31, 2LL);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v39 = (void **)swift_slowAlloc(32LL, -1LL);
      aBlock = v39;
      uint64_t v60 = v11;
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v40 = StaticString.description.getter( *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name),  *(void *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name + 8),  *(unsigned __int8 *)(v72 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name + 16));
      uint64_t v73 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, (uint64_t *)&aBlock);
      uint64_t v11 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &aBlock, v38 + 4);
      swift_release_n(v72, 2LL);
      uint64_t v31 = v72;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v36, v37, "Timed out for parallel CAT task: %s", v38, 0xCu);
      swift_arrayDestroy(v39, 1LL);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    else
    {

      swift_release_n(v31, 2LL);
    }
  }

  type metadata accessor for OS_dispatch_queue();
  uint64_t v42 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v43 = swift_allocObject(&unk_401D88, 72LL, 7LL);
  uint64_t v45 = v67;
  uint64_t v44 = v68;
  *(void *)(v43 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v31;
  *(void *)(v43 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v45;
  uint64_t v46 = v64;
  *(void *)(v43 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v63;
  *(void *)(v43 + 40) = v46;
  BYTE1(v46) = BYTE1(v65);
  *(_BYTE *)(v43 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v65;
  *(_BYTE *)(v43 + 49) = BYTE1(v46) & 1;
  *(void *)(v43 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v66;
  *(void *)(v43 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v44;
  uint64_t v78 = partial apply for closure #2 in closure #1 in TemplatingParallelizer.execute(_:);
  uint64_t v79 = v43;
  aBlock = _NSConcreteStackBlock;
  uint64_t v75 = 1107296256LL;
  uint64_t v76 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  uint64_t v77 = &block_descriptor_15;
  os_log_type_t v47 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  uint64_t v48 = swift_retain();
  uint64_t v49 = v69;
  static DispatchQoS.unspecified.getter(v48);
  uint64_t v73 = _swiftEmptyArrayStorage;
  uint64_t v50 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  unint64_t v52 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v73, v51, v52, v8, v50);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v49, v11, v42, v47);
  _Block_release(v47);

  (*(void (**)(char *, uint64_t))(v71 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v12);
  return swift_release(v79);
}

void closure #1 in closure #1 in TemplatingParallelizer.execute(_:)( uint64_t a1, uint64_t a2, unint64_t a3, dispatch_group_s *a4)
{
  uint64_t v7 = (void *)(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results);
  swift_beginAccess(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results, v12, 33LL, 0LL);
  uint64_t v8 = *v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
  *uint64_t v7 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a3 & 0x8000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }

  specialized _ArrayBuffer._consumeAndCreateNew()();
  uint64_t v8 = v11;
  *uint64_t v7 = v11;
  if ((a3 & 0x8000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v8 + 16) > a3)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    outlined assign with copy of Result<TemplatingResult, Error>( a1,  v8 + ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL))
    + *(void *)(*(void *)(v10 - 8) + 72LL) * a3);
    swift_endAccess(v12);
    dispatch_group_leave(a4);
    return;
  }

uint64_t closure #2 in closure #1 in TemplatingParallelizer.execute(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = swift_retain_n(a1, 2LL);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v12 = static os_log_type_t.debug.getter(v10, v11);
  uint64_t v13 = &metaclass for StartCallCatTemplatingService;
  if (os_log_type_enabled(v10, v12))
  {
    uint64_t v14 = swift_slowAlloc(22LL, -1LL);
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    v24[0] = v21;
    *(_DWORD *)uint64_t v14 = 134218242;
    uint64_t v15 = a1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results;
    swift_beginAccess(a1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results, v23, 0LL, 0LL);
    uint64_t v22 = *(void *)(*(void *)v15 + 16LL);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v14 + 4);
    *(_WORD *)(v14 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v16 = StaticString.description.getter( *(void *)(a1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name),  *(void *)(a1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name + 8),  *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_name + 16));
    uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v14 + 14);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v12, "Sending back %ld results for parallel CAT task: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v21, 1LL);
    swift_slowDealloc(v21, -1LL, -1LL);
    uint64_t v18 = v14;
    uint64_t v13 = &metaclass for StartCallCatTemplatingService;
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  Signpost.OpenSignpost.end()();
  swift_beginAccess((char *)v13[179] + a1, v24, 0LL, 0LL);
  uint64_t v19 = swift_bridgeObjectRetain();
  a6(v19);
  return swift_bridgeObjectRelease();
}

uint64_t TemplatingParallelizer.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_timeout;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);

  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_catCalls));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22TemplatingParallelizer_results));
  return v0;
}

uint64_t TemplatingParallelizer.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t partial apply for closure #1 in TemplatingParallelizer.execute(_:)()
{
  return partial apply for closure #1 in TemplatingParallelizer.execute(_:)((uint64_t (*)(void, void, void, void, void, void, void))closure #1 in TemplatingParallelizer.execute(_:));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A];
  if (!lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A])
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  }

  return result;
}

uint64_t ObjC metadata update function for TemplatingParallelizer()
{
  return type metadata accessor for TemplatingParallelizer(0LL);
}

uint64_t type metadata accessor for TemplatingParallelizer(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for TemplatingParallelizer;
  if (!type metadata singleton initialization cache for TemplatingParallelizer) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TemplatingParallelizer);
  }
  return result;
}

uint64_t type metadata completion function for TemplatingParallelizer(uint64_t a1)
{
  uint64_t result = type metadata accessor for DispatchTimeInterval(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_3288F0;
    void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_13CEB0()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void partial apply for closure #1 in closure #1 in TemplatingParallelizer.execute(_:)(uint64_t a1)
{
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>) -> ()()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t objectdestroy_2Tm_2()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t partial apply for closure #2 in closure #1 in TemplatingParallelizer.execute(_:)()
{
  return partial apply for closure #1 in TemplatingParallelizer.execute(_:)((uint64_t (*)(void, void, void, void, void, void, void))closure #2 in closure #1 in TemplatingParallelizer.execute(_:));
}

uint64_t partial apply for closure #1 in TemplatingParallelizer.execute(_:)( uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(_BYTE *)(v1 + 49)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1( *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  v2 | *(unsigned __int8 *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t outlined assign with copy of Result<TemplatingResult, Error>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_49()
{
  return swift_beginAccess(v0, v1 - 104, 33LL, 0LL);
}

ValueMetadata *type metadata accessor for EntitlementChecker()
{
  return &type metadata for EntitlementChecker;
}

uint64_t _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo23SAUIConfirmationOptionsCTg50125_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV22getConfirmationOptionsyyys6a7OySo016f5T0Cs5E56_pGcFyAGySS4call_SS6canceltsAJ_pGcfU_AISSAL_SSAMt_tXEfU_So32SAIntentGroupLaunchAppWithIntentC9launchApp_So20SAClientBoundCommand_p0D7CommandtTf1cn_n( uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = v13[0];
  uint64_t v6 = v13[1];
  uint64_t v9 = v13[2];
  uint64_t v8 = v13[3];
  outlined init with take of AnnotatedApp?( a1,  (uint64_t)v14,  &demangling cache variable for type metadata for Result<(call: String, cancel: String), Error>);
  if ((v14[32] & 1) != 0)
  {
    swift_errorRetain(v7);
  }

  else
  {
    v12[0] = v7;
    v12[1] = v6;
    __int128 v12[2] = v9;
    v12[3] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    closure #1 in closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)(v12, a2, a3, &v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v11;
  }

  swift_unknownObjectRelease(a3);

  return v7;
}

uint64_t _ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo25SASTSideBySideButtonsItemCTg50101_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV09gethg66S7Buttons10callAction06cancelW0_ySo019SASTCommandTemplateW0C_AIys6a18OySo08SASTSidetsU4j3Cs5E51_pGctFyAKySS0V0_SS0X0tsAN_pGcfU_AMSSAP_SSAQt_tXEfU_So25SASTCommandTemplateActionCALTf1cn_n( uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = v17[0];
  uint64_t v6 = v17[1];
  uint64_t v9 = v17[2];
  uint64_t v8 = v17[3];
  outlined init with take of AnnotatedApp?( a1,  (uint64_t)v18,  &demangling cache variable for type metadata for Result<(call: String, cancel: String), Error>);
  if ((v18[32] & 1) != 0)
  {
    swift_errorRetain(v7);
  }

  else
  {
    id v10 = objc_allocWithZone(&OBJC_CLASS___SASTSideBySideButtonsItem);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = [v10 init];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUISideBySideButtonsViewStyleViewStyleRightPrimaryValue);
    outlined bridged method (mbnn) of @objc SASTSideBySideButtonsItem.buttonsViewStyle.setter(v12, v13, v11);
    [v11 setPrimaryButtonAction:a2];
    [v11 setPrimaryButtonEnabled:1];
    outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.primaryButtonLabel.setter(v7, v6, v11);
    uint64_t v15 = (void *)static ColorFactory.white.getter(v14);
    [v11 setPrimaryButtonTextColor:v15];

    [v11 setSecondaryButtonAction:a3];
    [v11 setSecondaryButtonEnabled:1];
    outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.secondaryButtonLabel.setter(v9, v8, v11);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (uint64_t)v11;
  }

  return v7;
}

uint64_t _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSaySo9SAAceViewCGTg5( void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v3 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of Result<TemplatingResult, Error>(v1, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  a1(&v11, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v11;
}

uint64_t _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSS4call_SS6canceltTg5@<X0>( void (*a1)(_OWORD *__return_ptr, char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v11 = (void *)((char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of Result<TemplatingResult, Error>(v2, (uint64_t)v11);
  uint64_t result = swift_getEnumCaseMultiPayload(v11, v9);
  if ((_DWORD)result == 1)
  {
    *(void *)&__int128 v13 = *v11;
    __int128 v14 = 0uLL;
    char v15 = 1;
  }

  else
  {
    (*(void (**)(char *, void *, uint64_t))(v6 + 32))(v8, v11, v5);
    a1(v16, v8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __int128 v13 = v16[0];
    __int128 v14 = v16[1];
    char v15 = v17;
  }

  *(_OWORD *)a2 = v13;
  *(_OWORD *)(a2 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v14;
  *(_BYTE *)(a2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  return result;
}

id static StartCallViewBuilders.makeEmergencyCountdownViewBuilder(templatingService:app:intent:intentResponse:sharedGlobals:isDirectInvocation:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  char v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v17 = static os_log_type_t.debug.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v15, v17, "#StartCallViewBuilders Providing EmergencyCountdownBuilder", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  outlined init with copy of SignalProviding(a5, a7 + 32);
  *(void *)a7 = a1;
  *(void *)(a7 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(void *)(a7 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a3;
  *(void *)(a7 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  *(_BYTE *)(a7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6 & 1;
  swift_retain();
  swift_retain();
  id v19 = a3;
  return a4;
}

void EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (void *)EmergencyCountdownBuilder.getButtonCommands()();
  uint64_t v10 = v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v12 = OUTLINED_FUNCTION_8_2(v11, 40LL);
  *(_OWORD *)(v12 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v12 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  OUTLINED_FUNCTION_7_57(v12, v13, v14, v15);
  id v16 = objc_allocWithZone(&OBJC_CLASS___SASTCommandTemplateAction);
  id v29 = v8;
  id v17 = [v16 init];
  outlined bridged method (mbnn) of @objc SASTCommandTemplateAction.commands.setter(v30[0], (uint64_t)v17);
  uint64_t v18 = OUTLINED_FUNCTION_8_2(v11, 40LL);
  *(_OWORD *)(v18 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v18 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  OUTLINED_FUNCTION_7_57(v18, v19, v20, v21);
  id v22 = objc_allocWithZone(&OBJC_CLASS___SASTCommandTemplateAction);
  swift_unknownObjectRetain(v10);
  id v23 = [v22 init];
  outlined bridged method (mbnn) of @objc SASTCommandTemplateAction.commands.setter(v30[0], (uint64_t)v23);
  uint64_t v24 = (void *)*v3;
  outlined init with copy of EmergencyCountdownBuilder(v4, (uint64_t)v30);
  unint64_t v25 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_402000, 136LL);
  OUTLINED_FUNCTION_4_55(v25 + 2, v30);
  v25[12] = v17;
  v25[13] = v23;
  v25[14] = a2;
  v25[15] = a3;
  v25[16] = a1;
  uint64_t v26 = *(void (**)(uint64_t (*)(uint64_t), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                         + *v24
                                                                         + 152);
  id v27 = v17;
  id v28 = v23;
  swift_retain();
  swift_bridgeObjectRetain();
  v26(partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:), v25);
  swift_release(v25);

  swift_unknownObjectRelease(v10);
}

uint64_t EmergencyCountdownBuilder.getButtonCommands()()
{
  uint64_t v1 = type metadata accessor for CommonDirectAction(0LL);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v14[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
  uint64_t v4 = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)( *(void *)(v0 + 8),  *(void *)(v0 + 16),  *(void *)(v0 + 24));
  if (*(_BYTE *)(v0 + 72) == 1)
  {
    swift_storeEnumTagMultiPayload(v3, v1, 7LL);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 64);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 32), v6);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v14, v6, v5);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SKIDirectInvocationPayload,  &OBJC_CLASS___SKIDirectInvocationPayload_ptr);
    CommonDirectAction.identifier.getter();
    SKIDirectInvocationPayload.__allocating_init(identifier:)();
    uint64_t v8 = v7;
    CommonDirectAction.userData.getter();
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v9);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    outlined bridged method (mbnn) of @objc SKIDirectInvocationPayload.userData.setter(v11, v8);
    SKIDirectInvocationPayload.toStartLocalRequest(deviceState:)(v14);

    __swift_destroy_boxed_opaque_existential_1(v14);
    outlined destroy of CommonDirectAction((uint64_t)v3);
  }

  else
  {
    if (one-time initialization token for cancelUtterance != -1) {
      swift_once( &one-time initialization token for cancelUtterance,  one-time initialization function for cancelUtterance);
    }
    static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)( static PhoneStartRequestUtterances.cancelUtterance,  qword_477F30);
  }

  return v4;
}

uint64_t closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1, uint64_t *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  id v27 = a4;
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>)
                  - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of EmergencyCountdownBuilder(a2, (uint64_t)__src);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  unint64_t v16 = (v15 + v13 + 87) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v18 = swift_allocObject(&unk_402028, v17 + 8, v14 | 7);
  *(void *)(v18 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a5;
  *(void *)(v18 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a6;
  outlined init with take of AnnotatedApp?( (uint64_t)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v18 + v15,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  memcpy((void *)(v18 + ((v15 + v13 + 7) & 0xFFFFFFFFFFFFFFF8LL)), __src, 0x49uLL);
  *(void *)(v18 + voutlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = a3;
  *(void *)(v18 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v26;
  uint64_t v19 = (void *)*a2;
  uint64_t v20 = (void *)swift_allocObject(&unk_402050, 48LL, 7LL);
  __int128 v20[2] = partial apply for closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:);
  void v20[3] = v18;
  uint64_t v21 = v27;
  v20[4] = a3;
  v20[5] = v21;
  id v22 = *(void (**)(void (*)(uint64_t), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                      + *v19
                                                                      + 144);
  id v23 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v24 = v21;
  v22(partial apply for closure #1 in EmergencyCountdownBuilder.getSideBySideButtons(callAction:cancelAction:_:), v20);
  swift_release(v18);
  return swift_release(v20);
}

uint64_t closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  uint64_t v4 = _ss6ResultO7flatMapyAByqd__q_GADxXERi_d__lF11SiriKitFlow010TemplatingA0V_s5Error_pSaySo9SAAceViewCGTg5((void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:));
  char v6 = v5 & 1;
  a3(v4, v5 & 1);
  return outlined consume of Result<[SAAceView], Error>(v4, v6);
}

void closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( void *a1@<X1>, char a2@<W2>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
  }

  else
  {
    uint64_t v13 = a1;
    outlined copy of Result<SABaseCommand, Error>(a1, 0);
    closure #1 in closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( &v13,  a3,  a4,  a5,  (uint64_t *)&v12);
    outlined consume of Result<SABaseCommand, Error>(v7, 0);
    uint64_t v7 = v12;
  }

  *(void *)a6 = v7;
  *(_BYTE *)(a6 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2 & 1;
}

void closure #1 in closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = (void *)TemplatingResult.print.getter(a1);
  if (v10[2])
  {
    uint64_t v11 = v10[4];
    uint64_t v12 = v10[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v13 = EmergencyCountdownBuilder.makeCountdownItem(sashTitle:callAction:)(v11, v12, a3);
    swift_bridgeObjectRelease();
    id v14 = [objc_allocWithZone(SASTItemGroup) init];
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v16 = swift_allocObject(v15, 48LL, 7LL);
    *(_OWORD *)(v16 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FBC0;
    *(void *)(v16 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
    *(void *)(v16 + 40) = v9;
    v30[0] = v16;
    specialized Array._endMutation()(v16, v17, v18, v19);
    id v20 = v13;
    id v21 = v9;
    outlined bridged method (mbnn) of @objc SASTItemGroup.templateItems.setter(v30[0], (uint64_t)v14);
    type metadata accessor for SiriKitAceViewBuilder(0LL);
    id v22 = a2 + 4;
    uint64_t v24 = a2[7];
    uint64_t v23 = a2[8];
    __swift_project_boxed_opaque_existential_1(v22, v24);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v23 + 8))(v30, v24, v23);
    uint64_t v25 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v30);
    __swift_destroy_boxed_opaque_existential_1(v30);
    uint64_t v26 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a4);
    swift_release(v25);
    uint64_t v27 = dispatch thunk of SiriKitAceViewBuilder.addButtonGroup(buttonGroup:)(v14);
    uint64_t v28 = swift_release(v26);
    uint64_t v29 = dispatch thunk of SiriKitAceViewBuilder.build()(v28);
    swift_release(v27);

    *a5 = v29;
  }

  else
  {
    __break(1u);
  }

id EmergencyCountdownBuilder.makeCountdownItem(sashTitle:callAction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone(SASTCountdownTimerItem) init];
  [v6 setAction:a3];
  uint64_t v7 = (void *)static ColorFactory.white.getter([v6 setActionDelayInSeconds:5]);
  [v6 setBodyBackgroundColor:v7];

  uint64_t v8 = (void *)static ColorFactory.black.getter();
  [v6 setCountdownTextColor:v8];

  uint64_t v10 = (void *)static ColorFactory.white.getter(v9);
  [v6 setHeaderBackgroundColor:v10];

  outlined bridged method (mbgnn) of @objc SASTCountdownTimerItem.headerText.setter(a1, a2, v6);
  uint64_t v11 = (void *)static ColorFactory.emergencyRed.getter();
  [v6 setHeaderTextColor:v11];

  return v6;
}

uint64_t EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [objc_allocWithZone(SAPhoneCallEmergencySnippet) init];
  uint64_t v9 = (void *)static ColorFactory.emergencyRed.getter([v8 setCountDownSeconds:5]);
  OUTLINED_FUNCTION_1_56((uint64_t)v9, "setHeaderTextColor:");

  uint64_t v11 = (void *)static ColorFactory.white.getter(v10);
  OUTLINED_FUNCTION_1_56((uint64_t)v11, "setHeaderBackgroundColor:");

  uint64_t v12 = (void *)static ColorFactory.black.getter();
  OUTLINED_FUNCTION_1_56((uint64_t)v12, "setBodyTextColor:");

  id v14 = (void *)static ColorFactory.white.getter(v13);
  OUTLINED_FUNCTION_1_56((uint64_t)v14, "setBodyBackgroundColor:");

  outlined init with copy of EmergencyCountdownBuilder(v3, (uint64_t)v22);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_401FB0, 128LL);
  void v15[2] = a2;
  v15[3] = a3;
  v15[4] = v8;
  OUTLINED_FUNCTION_4_55(v15 + 5, v22);
  v15[15] = a1;
  uint64_t v16 = (void *)*v3;
  outlined init with copy of EmergencyCountdownBuilder(v4, (uint64_t)v21);
  uint64_t v17 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_401FD8, 112LL);
  OUTLINED_FUNCTION_4_55(v17 + 2, v21);
  v17[12] = partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:);
  v17[13] = v15;
  uint64_t v18 = *(void (**)(uint64_t (*)(), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                  + *v16
                                                                  + 144);
  swift_retain();
  id v19 = v8;
  OUTLINED_FUNCTION_5_54();
  swift_retain();
  v18(closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)partial apply, v17);
  swift_release(v15);

  return swift_release(v17);
}

uint64_t closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:)( void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  id v8 = a1;
  uint64_t v9 = a2 & 1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
  }

  else
  {
    [a5 setConfirmationOptions:a1];
    type metadata accessor for SiriKitAceViewBuilder(0LL);
    uint64_t v13 = a6[7];
    uint64_t v14 = a6[8];
    __swift_project_boxed_opaque_existential_1(a6 + 4, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v21, v13, v14);
    uint64_t v15 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v21);
    __swift_destroy_boxed_opaque_existential_1(v21);
    uint64_t v16 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a7);
    swift_release(v15);
    uint64_t v17 = dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(a5);
    uint64_t v18 = swift_release(v16);
    uint64_t v19 = dispatch thunk of SiriKitAceViewBuilder.build()(v18);
    swift_release(v17);
    outlined consume of Result<SABaseCommand, Error>(v8, 0);
    id v8 = (void *)v19;
  }

  a3(v8, v9);
  return outlined consume of Result<[SAAceView], Error>((uint64_t)v8, v9);
}

uint64_t EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v8 = (void *)static CasinoFactory.makePlaceholderCardSection()();
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SACardSnippet,  &OBJC_CLASS___SACardSnippet_ptr);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v10 = OUTLINED_FUNCTION_8_2(v9, 40LL);
  *(_OWORD *)(v10 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  v24[0] = v10;
  specialized Array._endMutation()(v10, v11, v12, v13);
  uint64_t v14 = v3[2];
  uint64_t v15 = v4[3];
  id v16 = v8;
  uint64_t v17 = (void *)static SACardSnippet.makeFromCardSectionsWithIntentData(cardSections:intent:intentResponse:shouldGenerateAceId:)( v24[0],  v14,  v15,  1LL);
  swift_bridgeObjectRelease();
  outlined init with copy of EmergencyCountdownBuilder(v4, (uint64_t)v24);
  uint64_t v18 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_401F10, 128LL);
  void v18[2] = a2;
  void v18[3] = a3;
  void v18[4] = v17;
  OUTLINED_FUNCTION_4_55(v18 + 5, v24);
  _BYTE v18[15] = a1;
  uint64_t v19 = (void *)*v4;
  uint64_t v20 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_401F38, 32LL);
  *(void *)(v20 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:);
  *(void *)(v20 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v18;
  id v21 = *(void (**)(void *(*)(uint64_t), uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                        + *v19
                                                                        + 152);
  swift_retain();
  id v22 = v17;
  OUTLINED_FUNCTION_5_54();
  swift_retain();
  v21(partial apply for closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:), v20);
  swift_release(v18);

  return swift_release(v20);
}

uint64_t closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, void *a6, uint64_t *a7, uint64_t a8)
{
  if ((a3 & 1) != 0)
  {
    swift_errorRetain(a1);
    a4(a1, 1LL);
    return outlined consume of Result<String, Error>(a1, a2, 1);
  }

  else
  {
    id v15 = [objc_allocWithZone(SAUISash) init];
    id v16 = (void *)static ColorFactory.emergencyRed.getter(v15);
    [v15 setBackgroundColor:v16];

    uint64_t v18 = (void *)static ColorFactory.white.getter(v17);
    [v15 setTextColor:v18];

    outlined bridged method (mbgnn) of @objc SAUISash.title.setter(a1, a2, v15);
    [a6 setSash:v15];
    outlined init with copy of EmergencyCountdownBuilder(a7, (uint64_t)__src);
    uint64_t v19 = (void *)swift_allocObject(&unk_401F60, 128LL, 7LL);
    v19[2] = a4;
    void v19[3] = a5;
    void v19[4] = a6;
    memcpy(v19 + 5, __src, 0x49uLL);
    v19[15] = a8;
    uint64_t v20 = (void *)*a7;
    outlined init with copy of EmergencyCountdownBuilder(a7, (uint64_t)v25);
    id v21 = (void *)swift_allocObject(&unk_401F88, 112LL, 7LL);
    memcpy(v21 + 2, v25, 0x49uLL);
    v21[12] = partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:);
    v21[13] = v19;
    id v22 = *(void (**)(void (*)(uint64_t), void *))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                                        + *v20
                                                                        + 144);
    swift_retain();
    id v23 = a6;
    swift_bridgeObjectRetain();
    swift_retain();
    v22(partial apply for closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:), v21);
    swift_release(v19);

    return swift_release(v21);
  }

void closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    a3(a1, 1LL);
    outlined consume of Result<SABaseCommand, Error>(a1, 1);
  }

  else
  {
    [a5 setConfirmationOptions:a1];
    type metadata accessor for SiriKitAceViewBuilder(0LL);
    uint64_t v12 = a6[7];
    uint64_t v13 = a6[8];
    __swift_project_boxed_opaque_existential_1(a6 + 4, v12);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v19, v12, v13);
    uint64_t v14 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v19);
    __swift_destroy_boxed_opaque_existential_1(v19);
    uint64_t v15 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a7);
    swift_release(v14);
    uint64_t v16 = dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(a5);
    uint64_t v17 = swift_release(v15);
    uint64_t v18 = dispatch thunk of SiriKitAceViewBuilder.build()(v17);
    swift_release(v16);
    a3((void *)v18, 0LL);
    swift_bridgeObjectRelease();
    outlined consume of Result<SABaseCommand, Error>(a1, 0);
  }

void *closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:)( uint64_t a1, void (*a2)(uint64_t, uint64_t, BOOL))
{
  uint64_t v4 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = 0LL;
    uint64_t v13 = *v10;
LABEL_5:
    a2(v13, v12, EnumCaseMultiPayload == 1);
    return (void *)outlined consume of Result<String, Error>(v13, v12, EnumCaseMultiPayload == 1);
  }

  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
  uint64_t result = (void *)TemplatingResult.print.getter(v14);
  if (result[2])
  {
    uint64_t v13 = result[4];
    uint64_t v12 = result[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)( uint64_t a1, uint64_t a2, void (*a3)(void *, void))
{
  uint64_t v5 = (void *)EmergencyCountdownBuilder.getButtonCommands()();
  uint64_t v7 = v6;
  id v8 = v5;
  swift_unknownObjectRetain(v7);
  uint64_t v9 = (void *)_ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo23SAUIConfirmationOptionsCTg50125_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV22getConfirmationOptionsyyys6a7OySo016f5T0Cs5E56_pGcFyAGySS4call_SS6canceltsAJ_pGcfU_AISSAL_SSAMt_tXEfU_So32SAIntentGroupLaunchAppWithIntentC9launchApp_So20SAClientBoundCommand_p0D7CommandtTf1cn_n( a1,  v8,  v7);
  char v11 = v10 & 1;
  a3(v9, v10 & 1);
  swift_unknownObjectRelease(v7);

  outlined consume of Result<SABaseCommand, Error>(v9, v11);
}

void closure #1 in closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v34 = a1[2];
  uint64_t v33 = a1[3];
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAUIConfirmationOption,  &OBJC_CLASS___SAUIConfirmationOption_ptr);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeCONFIRMValue);
  uint64_t v9 = v8;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeNewCallValue);
  uint64_t v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v14 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v14 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  specialized Array._endMutation()(v14, v15, v16, v17);
  swift_bridgeObjectRetain();
  id v18 = a2;
  id v19 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v5, v6, v7, v9, v10, v12);
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeDENYValue);
  uint64_t v22 = v21;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeCancelValue);
  uint64_t v25 = v24;
  uint64_t v26 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v26 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31FE60;
  *(void *)(v26 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  specialized Array._endMutation()(v26, v27, v28, v29);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain(a3);
  id v30 = SAUIConfirmationOption.init(label:type:iconType:commands:)(v34, v33, v20, v22, v23, v25);
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAUIConfirmationOptions,  &OBJC_CLASS___SAUIConfirmationOptions_ptr);
  SAUIConfirmationOptions.init(denyOption:confirmOption:)(v30, v19);
  *a4 = v31;
}

void closure #1 in EmergencyCountdownBuilder.getSideBySideButtons(callAction:cancelAction:_:)( uint64_t a1, void (*a2)(void *, void), uint64_t a3, void *a4, void *a5)
{
  uint64_t v6 = (void *)_ss6ResultO3mapyAByqd__q_Gqd__xXERi_d__lFSS4call_SS6cancelt_s5Error_pSo25SASTSideBySideButtonsItemCTg50101_s27PhoneCallFlowDelegatePlugin25EmergencyCountdownBuilder33_E7A85A90C78CDE0239CBAF9B487F0F40LLV09gethg66S7Buttons10callAction06cancelW0_ySo019SASTCommandTemplateW0C_AIys6a18OySo08SASTSidetsU4j3Cs5E51_pGctFyAKySS0V0_SS0X0tsAN_pGcfU_AMSSAP_SSAQt_tXEfU_So25SASTCommandTemplateActionCALTf1cn_n( a1,  a4,  a5);
  char v8 = v7 & 1;
  a2(v6, v7 & 1);
  outlined consume of Result<SABaseCommand, Error>(v6, v8);
}

_UNKNOWN **sub_13EAC0()
{
  return &protocol witness table for EmergencyCountdownBuilder;
}

uint64_t destroy for EmergencyCountdownBuilder(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 32));
}

uint64_t initializeWithCopy for EmergencyCountdownBuilder(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  uint64_t v6 = (void *)a2[2];
  char v7 = (void *)a2[3];
  *(void *)(a1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v6;
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v7;
  char v8 = a2 + 4;
  __int128 v9 = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
  swift_retain(v4);
  swift_retain(v5);
  id v12 = v6;
  id v13 = v7;
  v11(a1 + 32, v8, v10);
  *(_BYTE *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_BYTE *)a2 + 72);
  return a1;
}

uint64_t *assignWithCopy for EmergencyCountdownBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  uint64_t v5 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v5);
  uint64_t v6 = (void *)a2[2];
  char v7 = (void *)a1[2];
  a1[2] = (uint64_t)v6;
  id v8 = v6;

  __int128 v9 = (void *)a2[3];
  uint64_t v10 = (void *)a1[3];
  a1[3] = (uint64_t)v9;
  id v11 = v9;

  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  *((_BYTE *)a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_BYTE *)a2 + 72);
  return a1;
}

void *__swift_memcpy73_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t *assignWithTake for EmergencyCountdownBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  uint64_t v5 = a1[1];
  a1[1] = a2[1];
  swift_release(v5);
  uint64_t v6 = (void *)a1[2];
  a1[2] = a2[2];

  char v7 = (void *)a1[3];
  a1[3] = a2[3];

  __swift_destroy_boxed_opaque_existential_1(a1 + 4);
  __int128 v8 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v8;
  a1[8] = a2[8];
  *((_BYTE *)a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_BYTE *)a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownBuilder(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 73))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_BYTE *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownBuilder()
{
  return &type metadata for EmergencyCountdownBuilder;
}

uint64_t outlined init with copy of EmergencyCountdownBuilder(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, uint64_t a2, char a3)
{
  return closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( a1,  a2,  a3 & 1,  *(void (**)(uint64_t, uint64_t))(v3 + 16),  *(void *)(v3 + 24),  *(void **)(v3 + 32),  (uint64_t *)(v3 + 40),  *(void *)(v3 + 120));
}

uint64_t sub_13EDC0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void *partial apply for closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:)(uint64_t a1)
{
  return closure #1 in EmergencyCountdownBuilder.getEmergencySashTitle(_:)( a1,  *(void (**)(uint64_t, uint64_t, BOOL))(v1 + 16));
}

uint64_t outlined consume of Result<String, Error>(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  else {
    return swift_bridgeObjectRelease(a2);
  }
}

void outlined bridged method (mbgnn) of @objc SASTCountdownTimerItem.headerText.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setHeaderText:v4];
}

void outlined bridged method (mbgnn) of @objc SAUISash.title.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setTitle:v4];
}

uint64_t partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, char a2)
{
  return partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( a1,  a2,  (uint64_t (*)(uint64_t, void, void, void, void, void *, void))closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:));
}

void partial apply for closure #1 in EmergencyCountdownBuilder.getConfirmationOptions(_:)(uint64_t a1)
{
}

uint64_t objectdestroyTm_12()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 72));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:)( uint64_t a1, char a2)
{
  return partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( a1,  a2,  (uint64_t (*)(uint64_t, void, void, void, void, void *, void))closure #1 in EmergencyCountdownBuilder.makeViewsForCar(utteranceViews:_:));
}

uint64_t partial apply for closure #2 in closure #1 in EmergencyCountdownBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, char a2, uint64_t (*a3)(uint64_t, void, void, void, void, void *, void))
{
  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3 + 5, v3[15]);
}

uint64_t objectdestroy_9Tm()
{
  return swift_deallocObject(v0, 112LL, 7LL);
}

uint64_t sub_13EF64()
{
  swift_release(*(void *)(v0 + 120));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t partial apply for closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1)
{
  return closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  (uint64_t *)(v1 + 16),  *(void **)(v1 + 96),  *(void **)(v1 + 104),  *(void *)(v1 + 112),  *(void *)(v1 + 120),  *(void *)(v1 + 128));
}

uint64_t sub_13EFD0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  OUTLINED_FUNCTION_37();
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*(void *)(v0 + v4));
  }

  else
  {
    uint64_t v6 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v0 + v4, v6);
  }

  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v4 + v5 + 87) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v9 = v3 | 7;
  uint64_t v10 = v0 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  swift_release(*(void *)v10);
  swift_release(*(void *)(v10 + 8));

  __swift_destroy_boxed_opaque_existential_1((void *)(v10 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8, v9);
}

uint64_t partial apply for closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1, char a2)
{
  uint64_t v4 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  return closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( a1,  v4,  *(void (**)(uint64_t, void))(v2 + 16));
}

uint64_t sub_13F14C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void partial apply for closure #1 in EmergencyCountdownBuilder.getSideBySideButtons(callAction:cancelAction:_:)( uint64_t a1)
{
}

void outlined bridged method (mbnn) of @objc SASTSideBySideButtonsItem.buttonsViewStyle.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setButtonsViewStyle:v5];
}

void outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.primaryButtonLabel.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setPrimaryButtonLabel:v4];
}

void outlined bridged method (mbgnn) of @objc SASTSideBySideButtonsItem.secondaryButtonLabel.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setSecondaryButtonLabel:v4];
}

void partial apply for closure #1 in closure #1 in closure #1 in EmergencyCountdownBuilder.makeViewsForWatch(utteranceViews:_:)( uint64_t a1@<X8>)
{
}

id OUTLINED_FUNCTION_1_56(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

void OUTLINED_FUNCTION_3_63()
{
}

void *OUTLINED_FUNCTION_4_55(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

void OUTLINED_FUNCTION_6_53()
{
}

uint64_t OUTLINED_FUNCTION_7_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = (void *)OUTLINED_FUNCTION_0_16(a1, a2, a3, a4, a5, a6);
  return OUTLINED_FUNCTION_10_48(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v53)(uint64_t *__return_ptr, void *);
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  id v56;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *__return_ptr, void *);
  void *v74;
  Swift::Bool v75;
  int v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  os_log_type_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  os_log_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  void *v112;
  id v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  id v128;
  unint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  char v137;
  os_log_type_t v138;
  uint8_t *v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  void *v144;
  unint64_t v145;
  uint64_t v146;
  os_log_s *v147;
  id v148;
  Swift::Bool v149;
  os_log_type_t v150;
  uint8_t *v151;
  void *v152;
  id v153;
  id v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  void *v161;
  os_log_s *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  __int128 v187;
  uint64_t v188;
  char v189[8];
  uint64_t v190;
  uint64_t v191;
  uint64_t v192[5];
  void v193[5];
  uint64_t v178 = a4;
  uint64_t v174 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordFilter?>);
  OUTLINED_FUNCTION_15_40(*(void *)(v13 - 8));
  __chkstk_darwin();
  uint64_t v15 = (char *)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  OUTLINED_FUNCTION_15_40(*(void *)(v16 - 8));
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v17);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  OUTLINED_FUNCTION_15_40(*(void *)(v176 - 8));
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v18);
  uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_15_40(*(void *)(v177 - 8));
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v19);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallCapability>);
  uint64_t v20 = *(void *)(v181 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v21);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v22 = *(void *)(v175 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v23);
  v193[3] = a7;
  v193[4] = a8;
  uint64_t v167 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v193);
  uint64_t v25 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16LL);
  uint64_t v166 = boxed_opaque_existential_1;
  v25(boxed_opaque_existential_1, a6, a7);
  OUTLINED_FUNCTION_13_49();
  if (PhoneCallNLIntent.hasAnyConfirmation()())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v26 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    uint64_t v27 = (uint64_t)v178;
    id v28 = v178;
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
    if (os_log_type_enabled(v29, v31))
    {
      uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v33 = OUTLINED_FUNCTION_7_0(32LL);
      v192[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t v188 = v27;
      id v34 = v28;
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent?);
      uint64_t v36 = String.init<A>(describing:)(&v188, v35);
      uint64_t v188 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v192);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v188, v189, v32 + 4);

      uint64_t v27 = (uint64_t)v178;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0( &dword_0,  v29,  v31,  "#INStartCallIntentConversion is confirmation, returning previousIntent: %s.",  v32);
      OUTLINED_FUNCTION_17_0(v33);
      OUTLINED_FUNCTION_0_2(v33);
      OUTLINED_FUNCTION_0_2((uint64_t)v32);
    }

    else
    {
    }

    uint64_t v56 = v28;
    goto LABEL_13;
  }

  char v170 = v16;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v165 = v22;
  uint64_t v171 = v20;
  uint64_t v38 = type metadata accessor for Logger(0LL);
  uint64_t v168 = __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v168);
  os_log_type_t v41 = static os_log_type_t.debug.getter(v39, v40);
  if (os_log_type_enabled(v39, v41))
  {
    uint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl( &dword_0,  v39,  v41,  "#INStartCallIntentConversion makeIntentFromParse called with NLv4IntentOnly",  v42,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v42);
  }

  uint64_t v43 = a3[3];
  uint64_t v44 = a3[4];
  uint64_t v45 = __swift_project_boxed_opaque_existential_1(a3, v43);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v44 + 8))(v192, v43, v44);
  OUTLINED_FUNCTION_20_30();
  uint64_t v46 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4020A8, 64LL);
  OUTLINED_FUNCTION_4_56(v46);
  v45[7] = 0LL;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0LL);
  OUTLINED_FUNCTION_28_27((uint64_t)partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:));
  OUTLINED_FUNCTION_20_30();
  uint64_t v48 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4020D0, 64LL);
  OUTLINED_FUNCTION_4_56(v48);
  uint64_t v49 = v174;
  v45[7] = v174;
  type metadata accessor for INCallCapability(0LL);
  OUTLINED_FUNCTION_32_24();
  OUTLINED_FUNCTION_23_30((uint64_t)partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:app:));
  OUTLINED_FUNCTION_20_30();
  uint64_t v50 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4020F8, 64LL);
  OUTLINED_FUNCTION_4_56(v50);
  v45[7] = v49;
  type metadata accessor for INPreferredCallProvider(0LL);
  OUTLINED_FUNCTION_32_24();
  OUTLINED_FUNCTION_23_30((uint64_t)partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:));
  type metadata accessor for INCallDestinationType(0LL);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:),  0LL,  v47);
  outlined init with copy of SignalProviding((uint64_t)v192, (uint64_t)&v188);
  outlined init with copy of SignalProviding((uint64_t)v193, (uint64_t)&v187);
  uint64_t v51 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_402120, 96LL);
  OUTLINED_FUNCTION_4_56(v51);
  outlined init with take of AppSelectionSignalComponent(&v187, (uint64_t)(v45 + 7));
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:),  v45,  v52);
  uint64_t v53 = (void (*)(uint64_t *__return_ptr, void *))Transformer.transform.getter(v181);
  v53(&v188, a1);
  OUTLINED_FUNCTION_38_1();
  uint64_t v54 = v188;
  uint64_t v55 = (uint64_t (*)(uint64_t))Transformer.transform.getter(v177);
  OUTLINED_FUNCTION_5_55(v55);
  OUTLINED_FUNCTION_38_1();
  uint64_t v163 = v188;
  uint64_t v58 = (uint64_t (*)(uint64_t))OUTLINED_FUNCTION_34_21();
  OUTLINED_FUNCTION_5_55(v58);
  uint64_t v161 = (void *)v54;
  OUTLINED_FUNCTION_38_1();
  uint64_t v160 = v188;
  uint64_t v59 = a1[3];
  uint64_t v60 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v59);
  unint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 128))(v59, v60);
  uint64_t v162 = (os_log_s *)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_bridgeObjectRetain();
  LODWORD(v60) = PhoneCallNLIntent.isEmergencyContactCall()();
  uint64_t v62 = (uint64_t (*)(uint64_t))OUTLINED_FUNCTION_34_21();
  OUTLINED_FUNCTION_5_55(v62);
  uint64_t v164 = v61;
  char v159 = v60;
  OUTLINED_FUNCTION_38_1();
  uint64_t v158 = v188;
  uint64_t v162 = (os_log_s *)OUTLINED_FUNCTION_34_21();
  uint64_t v64 = v63;
  uint64_t v66 = a1[3];
  int v65 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v66);
  uint64_t v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 136))(v66, v65);
  ((void (*)(__int128 *__return_ptr, uint64_t *))v162)(&v187, &v188);
  swift_bridgeObjectRelease();
  swift_release(v64);
  uint64_t v162 = (os_log_s *)v187;
  uint64_t v67 = a1[4];
  uint64_t v68 = OUTLINED_FUNCTION_13_49();
  PhoneCallNLIntent.getPersons()(v68, v67);
  uint64_t v70 = v69;
  uint64_t v71 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_402148, 32LL);
  uint64_t v72 = (uint64_t)v161;
  *(void *)(v71 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v161;
  *(void *)(v71 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v70;
  uint64_t v157 = v70;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
  OUTLINED_FUNCTION_28_27((uint64_t)partial apply for closure #1 in static Transformer<>.transformer(device:callCapability:participants:));
  uint64_t v73 = (void (*)(uint64_t *__return_ptr, void *))Transformer.transform.getter(v13);
  (*(void (**)(char *, uint64_t))(v169 + 8))(v15, v13);
  v73(&v188, a1);
  OUTLINED_FUNCTION_38_1();
  unint64_t v74 = (void *)v188;
  LODWORD(v5__swift_destroy_boxed_opaque_existential_1(v0 + 2) = type metadata accessor for INStartCallIntent();
  OUTLINED_FUNCTION_13_49();
  uint64_t v75 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  uint64_t v76 = v52;
  INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:isGroupCall:callGroups:)( v74,  0LL,  v158,  v160,  v163,  v157,  0LL,  v72,  v75,  (uint64_t)v162);
  char v186 = v77;
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)&v188);
  uint64_t v78 = v174;
  swift_retain_n(v174, 2LL);
  uint64_t v79 = v164;
  swift_bridgeObjectRetain_n(v164, 2LL);
  OUTLINED_FUNCTION_12_51();
  uint64_t v80 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v80))
  {
    uint64_t v81 = OUTLINED_FUNCTION_7_0(42LL);
    uint64_t v82 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v161 = v82;
    uint64_t v169 = OUTLINED_FUNCTION_7_0(96LL);
    uint64_t v184 = v169;
    *(_DWORD *)uint64_t v81 = 138413058;
    LODWORD(v16__swift_destroy_boxed_opaque_existential_1(v0 + 3) = v76;
    swift_beginAccess(&v186, &v187, 0LL, 0LL);
    uint64_t v162 = (os_log_s *)v74;
    uint64_t v83 = v186;
    char v183 = (uint64_t)v186;
    uint64_t v84 = v186;
    uint64_t v85 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, &v184, v81 + 4);
    *uint64_t v82 = v83;
    *(_WORD *)(v81 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v86 = dispatch thunk of App.debugDescription.getter(v85);
    uint64_t v88 = OUTLINED_FUNCTION_27_31(v86, v87);
    uint64_t v89 = OUTLINED_FUNCTION_16_33(v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v89, v90, v81 + 14);
    swift_release_n(v174, 2LL);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v81 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v160 = v81 + 24;
    uint64_t v91 = v190;
    uint64_t v92 = v191;
    OUTLINED_FUNCTION_49_0(&v188);
    uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 24))(v91, v92);
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
    uint64_t v95 = Array.description.getter(v93, v94);
    uint64_t v97 = v96;
    swift_bridgeObjectRelease();
    uint64_t v98 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v95, v97, &v184);
    uint64_t v99 = OUTLINED_FUNCTION_16_33(v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v99, v100, v160);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(&v188);
    *(_WORD *)(v81 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v101 = type metadata accessor for ContactQuery(0LL);
    uint64_t v102 = Array.debugDescription.getter(v79, v101);
    uint64_t v104 = OUTLINED_FUNCTION_27_31(v102, v103);
    uint64_t v105 = OUTLINED_FUNCTION_16_33(v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v105, v106, v81 + 34);
    swift_bridgeObjectRelease_n(v79, 3LL);
    OUTLINED_FUNCTION_62();
    uint64_t v107 = v162;
    _os_log_impl( &dword_0,  v162,  (os_log_type_t)v163,  "#INStartCallIntentConversion Starts with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s",  (uint8_t *)v81,  0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    uint64_t v108 = (uint64_t)v161;
    OUTLINED_FUNCTION_17_0((uint64_t)v161);
    OUTLINED_FUNCTION_0_2(v108);
    uint64_t v109 = v169;
    swift_arrayDestroy(v169, 3LL);
    OUTLINED_FUNCTION_0_2(v109);
    OUTLINED_FUNCTION_0_2(v81);
  }

  else
  {
    swift_bridgeObjectRelease_n(v79, 2LL);

    __swift_destroy_boxed_opaque_existential_1(&v188);
    swift_bridgeObjectRelease();
    swift_release_n(v78, 2LL);
  }

  uint64_t v110 = v170;
  swift_beginAccess(&v186, &v188, 1LL, 0LL);
  unint64_t v111 = v186;
  uint64_t v112 = (void *)specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)();

  uint64_t v113 = v186;
  char v186 = v112;

  type metadata accessor for App(0LL);
  uint64_t v114 = v112;
  uint64_t v115 = App.appIdentifier.getter();
  uint64_t v117 = App.__allocating_init(appIdentifier:)(v115, v116);
  specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( (uint64_t)v114,  v79,  v159 & 1,  v117,  a1,  (uint64_t)a3,  (uint64_t)v166,  a7,  v167);

  swift_bridgeObjectRelease();
  swift_release(v117);
  id v118 = v114;
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v118);
  uint64_t v120 = v119;
  uint64_t v121 = one-time initialization token for instance;
  os_log_type_t v122 = v118;
  if (v121 != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v123 = static EligibleAppFinder.instance;
  swift_retain();
  specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( a3,  v120,  a1,  0LL,  v123);
  swift_release(v123);

  swift_bridgeObjectRelease();
  uint64_t v124 = v192[3];
  uint64_t v125 = v192[4];
  OUTLINED_FUNCTION_49_0(v192);
  unint64_t v126 = dispatch thunk of DeviceState.isXRDevice.getter(v124, v125);
  uint64_t v127 = v171;
  if ((v126 & 1) == 0) {
    goto LABEL_59;
  }
  uint64_t v128 = v122;
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v128);
  if (v129)
  {
    if (v129 >> 62)
    {
      if (OUTLINED_FUNCTION_70(v129 & 0xFFFFFFFFFFFFFF8LL)) {
        goto LABEL_23;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v129 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_23:
      OUTLINED_FUNCTION_6_54();
      if (v125) {
        unint64_t v130 = OUTLINED_FUNCTION_38_3();
      }
      else {
        unint64_t v130 = (uint64_t)OUTLINED_FUNCTION_31_24();
      }
      uint64_t v131 = (void *)v130;
      goto LABEL_26;
    }

    OUTLINED_FUNCTION_62();
  }

  os_log_type_t v122 = v128;
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v122);
  if (!v142) {
    goto LABEL_59;
  }
  if (!(v142 >> 62))
  {
LABEL_55:
    OUTLINED_FUNCTION_62();
    goto LABEL_59;
  }

  if (!OUTLINED_FUNCTION_70(v142 & 0xFFFFFFFFFFFFFF8LL)) {
    goto LABEL_55;
  }
LABEL_45:
  OUTLINED_FUNCTION_6_54();
  if (v125) {
    uint64_t v143 = OUTLINED_FUNCTION_38_3();
  }
  else {
    uint64_t v143 = (uint64_t)OUTLINED_FUNCTION_31_24();
  }
  uint64_t v144 = (void *)v143;
  OUTLINED_FUNCTION_62();
  outlined bridged method (ob) of @objc INPerson.siriMatches.getter(v144);
  if (v145)
  {
    if (v145 >> 62)
    {
      if (OUTLINED_FUNCTION_70(v145 & 0xFFFFFFFFFFFFFF8LL)) {
        goto LABEL_50;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_50:
      OUTLINED_FUNCTION_6_54();
      if (v144) {
        uint64_t v146 = OUTLINED_FUNCTION_38_3();
      }
      else {
        uint64_t v146 = (uint64_t)OUTLINED_FUNCTION_31_24();
      }
      uint64_t v131 = (void *)v146;
      OUTLINED_FUNCTION_14_36();
LABEL_26:
      OUTLINED_FUNCTION_62();
      unint64_t v132 = outlined bridged method (pb) of @objc INPerson.sourceAppBundleIdentifier.getter(v131);
      if (v133)
      {
        uint64_t v134 = v133;
      }

      else
      {
        unint64_t v132 = 0LL;
        uint64_t v134 = 0xE000000000000000LL;
      }

      static PhoneReferenceResolution.getContactSourceType(contactSource:)(v132, v134);
      uint64_t v136 = v135;
      OUTLINED_FUNCTION_62();
      static PhoneReferenceResolution.isTelephonyTargetFromSrr(contactSourceType:)(v136);
      if ((v137 & 1) != 0)
      {
        OUTLINED_FUNCTION_12_51();
        uint64_t v138 = OUTLINED_FUNCTION_41();
        if (os_log_type_enabled((os_log_t)v128, v138))
        {
          uint64_t v139 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v127 = OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v184 = v127;
          *(_DWORD *)uint64_t v139 = 136315138;
          if (v136)
          {
            if (v136 == 1)
            {
              uint64_t v140 = 0x80000000003440E0LL;
              char v141 = 0xD000000000000012LL;
            }

            else
            {
              uint64_t v140 = 0xED00007465677261LL;
              char v141 = 0x54746C7561666564LL;
            }
          }

          else
          {
            uint64_t v140 = 0xEB00000000737365LL;
            char v141 = 0x6E69737542727273LL;
          }

          char v183 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v141, v140, &v184);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, &v184, v139 + 4);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v128,  v138,  "#INStartCallIntentConversion detected Telephony target(%s from srr, update PreferredCallProvider to telephonyProvider",  v139);
          OUTLINED_FUNCTION_17_0(v127);
          OUTLINED_FUNCTION_0_2(v127);
          OUTLINED_FUNCTION_0_2((uint64_t)v139);

          OUTLINED_FUNCTION_14_36();
        }

        else
        {
        }

        os_log_type_t v122 = v186;
        INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(1LL);
      }

      else
      {

        os_log_type_t v122 = v128;
      }

      goto LABEL_59;
    }

    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_14_36();
  }

ValueMetadata *type metadata accessor for StartCallIntentConversion()
{
  return &type metadata for StartCallIntentConversion;
}

uint64_t sub_140500()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t objectdestroy_2Tm_3()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( a1,  (void *)(v2 + 16),  *(void *)(v2 + 56),  a2);
}

uint64_t sub_140590()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_1405B8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id partial apply for closure #1 in static Transformer<>.transformer(device:callCapability:participants:)@<X0>( void *a1@<X0>, void *a2@<X8>)
{
  return closure #1 in static Transformer<>.transformer(device:callCapability:participants:)( a1,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  a2);
}

uint64_t OUTLINED_FUNCTION_4_56(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 208), a1 + 16);
}

uint64_t OUTLINED_FUNCTION_6_54()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v0 & 0xC000000000000001LL) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_7_58()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 448) + 8LL))( *(void *)(v0 - 296),  *(void *)(v0 - 360));
}

uint64_t OUTLINED_FUNCTION_10_48( void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
}

uint64_t OUTLINED_FUNCTION_11_48@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_12_51()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_13_49()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_15_40(uint64_t a1@<X8>)
{
  *(void *)(v1 - 2outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a1;
}

uint64_t OUTLINED_FUNCTION_16_33(uint64_t a1)
{
  *(void *)(v1 - 280) = a1;
  return v1 - 280;
}

uint64_t OUTLINED_FUNCTION_18_36@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(a1 - 256));
}

uint64_t OUTLINED_FUNCTION_20_30()
{
  return outlined init with copy of SignalProviding(v0, v1 - 208);
}

uint64_t OUTLINED_FUNCTION_23_30(uint64_t a1)
{
  return Transformer.init(transform:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_24_24()
{
  return *(void *)(v0 - 304);
}

uint64_t OUTLINED_FUNCTION_28_27(uint64_t a1)
{
  return Transformer.init(transform:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_30_23()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
}

id OUTLINED_FUNCTION_31_24()
{
  return *(id *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_32_24()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_34_21()
{
  return Transformer.transform.getter();
}

void AddCallParticipantHandleIntentFollowUpFlow.__allocating_init(rchRecord:sharedGlobals:patterns:)( uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.rchRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_rchRecord;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

void AddCallParticipantHandleIntentFollowUpFlow.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

void AddCallParticipantHandleIntentFollowUpFlow.patterns.getter(uint64_t a1@<X8>)
{
}

void AddCallParticipantHandleIntentFollowUpFlow.init(rchRecord:sharedGlobals:patterns:)( uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  return swift_task_switch(AddCallParticipantHandleIntentFollowUpFlow.execute(), 0LL, 0LL);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.execute()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v2 = (void *)IntentResolutionRecord.intentResponse.getter(v1);
  uint64_t v3 = (char *)[v2 code];

  if (v3 == (_BYTE *)&dword_0 + 3)
  {
    uint64_t v4 = (void *)OUTLINED_FUNCTION_18_37();
    uint64_t v5 = outlined bridged method (ob) of @objc INAddCallParticipantIntentResponse.invites.getter( v4,  (SEL *)&selRef_invites,  &lazy cache variable for type metadata for INCallInvite,  &OBJC_CLASS___INCallInvite_ptr);
    if (v5)
    {
      uint64_t v6 = v5;
      if ((unint64_t)v5 >> 62)
      {
        if (v5 >= 0) {
          v5 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v5);
        if (v7)
        {
LABEL_5:
          OUTLINED_FUNCTION_17_40(v7, (v6 & 0xC000000000000001LL) == 0);
          if ((v6 & 0xC000000000000001LL) != 0) {
            id v8 = (id)OUTLINED_FUNCTION_38_3();
          }
          else {
            id v8 = *(id *)(v6 + 32);
          }
          id v9 = v8;
          OUTLINED_FUNCTION_62();
          if ([v9 inviteType] == (char *)&dword_0 + 3)
          {
            id v9 = v9;
            AddCallParticipantHandleIntentFollowUpFlow.handleFaceTimeLinkInvite(linkInvite:)(v9);

LABEL_21:
            return (*(uint64_t (**)(void))(v0 + 8))();
          }

uint64_t AddCallParticipantHandleIntentFollowUpFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AddCallParticipantHandleIntentFollowUpFlow and conformance AddCallParticipantHandleIntentFollowUpFlow,  type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow,  (uint64_t)&protocol conformance descriptor for AddCallParticipantHandleIntentFollowUpFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.handleFaceTimeLinkInvite(linkInvite:)(void *a1)
{
  void (*v30)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_s *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void v46[5];
  uint64_t v47;
  void v48[22];
  __int128 v49;
  void v50[4];
  uint64_t v51;
  _BYTE v52[16];
  uint64_t v53;
  uint64_t v2 = v1;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v9 = (char *)&v43 - v8;
  id v10 = [a1 callURL];
  if (v10)
  {
    uint64_t v11 = v10;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);

    uint64_t v12 = type metadata accessor for URL(0LL);
    uint64_t v13 = (uint64_t)v7;
    uint64_t v14 = 0LL;
  }

  else
  {
    uint64_t v12 = type metadata accessor for URL(0LL);
    uint64_t v13 = (uint64_t)v7;
    uint64_t v14 = 1LL;
  }

  __swift_storeEnumTagSinglePayload(v13, v14, 1LL, v12);
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( (uint64_t)v7,  (uint64_t)v9,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  type metadata accessor for URL(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1LL, v12) == 1)
  {
    outlined destroy of UUID?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for URL?);
LABEL_23:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v38 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    uint64_t v39 = (os_log_s *)OUTLINED_FUNCTION_9();
    uint64_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      os_log_type_t v41 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)os_log_type_t v41 = 0;
      _os_log_impl(&dword_0, v39, v40, "#AddCallParticipantHandleIntentFollowUpFlow: Invalid call invite", v41, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v41);
    }

    return static ExecuteResponse.complete()(v42);
  }

  uint64_t v15 = URL.absoluteString.getter();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8LL))(v9, v12);
  uint64_t v18 = outlined bridged method (pb) of @objc INCallInvite.participants.getter(a1);
  if (!v18)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }

  uint64_t v19 = v18;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 >= 0) {
      uint64_t v36 = v18 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v36 = v18;
    }
    swift_bridgeObjectRetain();
    unint64_t v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }

  if (!*(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }

uint64_t AddCallParticipantHandleIntentFollowUpFlow.handleInvite()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                 + 24);
  uint64_t v3 = *(void *)(v0
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                 + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals),  v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 16))(v12, v2, v3);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v11[3] = v4;
  v11[4] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16LL))(boxed_opaque_existential_1, v6, v4);
  uint64_t v8 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_retain();
  uint64_t v9 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v11,  &async function pointer to partial apply for closure #1 in AddCallParticipantHandleIntentFollowUpFlow.handleInvite(),  v1);
  __swift_destroy_boxed_opaque_existential_1(v12);
  v12[0] = v9;
  static ExecuteResponse.complete<A>(next:)(v12);
  return swift_release(v9);
}

uint64_t closure #1 in AddCallParticipantHandleIntentFollowUpFlow.handleInvite()(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_433744);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()(a1);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[20] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[21] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[22] = v5;
  v2[23] = OUTLINED_FUNCTION_23(v5);
  uint64_t v6 = type metadata accessor for Locale(0LL);
  _BYTE v2[24] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[25] = v7;
  v2[26] = OUTLINED_FUNCTION_23(v7);
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 248);
  *(void *)(v3 + 2outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = a1;
  *(void *)(v3 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    uint64_t v5 = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_76_1();
    uint64_t v5 = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v2 = v1[20];
  uint64_t v3 = (void *)(v1[19] + v1[29]);
  static DialogPhase.completion.getter(a1);
  OutputGenerationManifest.init(dialogPhase:_:)( v2,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  OUTLINED_FUNCTION_82(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 136))(v4, v5);
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  OUTLINED_FUNCTION_82(v1 + 12);
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  v1[34] = v9;
  *uint64_t v9 = v1;
  v9[1] = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)( v1[18],  v1[32],  v1[23],  v6,  v8);
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = (os_log_s *)OUTLINED_FUNCTION_9();
  os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
  if (os_log_type_enabled(v3, v5))
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v7 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v63 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[17] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000001BLL,  0x800000000034B650LL,  &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 17, v0 + 18, v6 + 4);
    _os_log_impl(&dword_0, v3, v5, "#AddCallParticipantHandleIntentFollowUpFlow %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL);
    OUTLINED_FUNCTION_0_2(v7);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);
  }

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  uint64_t v9 = (void *)IntentResolutionRecord.intentResponse.getter(v8);
  uint64_t v10 = outlined bridged method (ob) of @objc INAddCallParticipantIntentResponse.invites.getter( v9,  (SEL *)&selRef_invites,  &lazy cache variable for type metadata for INCallInvite,  &OBJC_CLASS___INCallInvite_ptr);
  if (!v10) {
    goto LABEL_16;
  }
  uint64_t v11 = v10;
  if (!((unint64_t)v10 >> 62))
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8LL));
    if (v12) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }

  if (v10 >= 0) {
    v10 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v12)
  {
LABEL_15:
    OUTLINED_FUNCTION_62();
LABEL_16:
    uint64_t v14 = 0LL;
    goto LABEL_17;
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v2 = *(void *)(*(void *)v1 + 272LL);
  *(void *)(*(void *)v1 + 28swift_beginAccess(v0 + 64, v2, 0LL, 0LL) = v0;
  swift_task_dealloc(v2);
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  os_log_type_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = *(void **)(v0 + 216);
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_15_41();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_15_41();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()( uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v9 = (char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for SirikitDeviceState(0LL);
  uint64_t v10 = *(void *)(a2
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                  + 24);
  uint64_t v11 = *(void *)(a2
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                  + 32);
  __swift_project_boxed_opaque_existential_1( (void *)(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals),  v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v31, v10, v11);
  uint64_t v12 = SirikitDeviceState.__allocating_init(from:)(v31);
  swift_release(a1[1]);
  a1[1] = v12;
  uint64_t v13 = type metadata accessor for PhoneCallInvite.Builder(0LL);
  uint64_t v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v15 = v14 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v16 = type metadata accessor for SpeakableString(0LL);
  uint64_t v17 = 1LL;
  __swift_storeEnumTagSinglePayload(v15, 1LL, 1LL, v16);
  *(void *)(v14 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  if (a3)
  {
    if (![a3 inviteType])
    {
      unint64_t v20 = 0xE700000000000000LL;
      uint64_t v21 = 0x4E574F4E4B4E55LL;
LABEL_13:
      String.toSpeakableString.getter(v21, v20);
      swift_bridgeObjectRelease();
      uint64_t v17 = 0LL;
      goto LABEL_14;
    }

    uint64_t BackingType = INCallInviteTypeGetBackingType();
    switch((_DWORD)BackingType)
    {
      case 3:
        uint64_t v19 = @"LINK";
        break;
      case 2:
        uint64_t v19 = @"RING";
        break;
      case 1:
        uint64_t v19 = @"ADD";
        break;
      default:
        uint64_t v19 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        goto LABEL_12;
    }

    uint64_t v22 = v19;
LABEL_12:
    uint64_t v23 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    unint64_t v20 = v24;

    goto LABEL_13;
  }

void AddCallParticipantHandleIntentFollowUpFlow.deinit()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  OUTLINED_FUNCTION_2_0(v1);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns));
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantHandleIntentFollowUpFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AddCallParticipantHandleIntentFollowUpFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t outlined bridged method (pb) of @objc INCallInvite.participants.getter(void *a1)
{
  id v1 = [a1 participants];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t outlined bridged method (ob) of @objc INAddCallParticipantIntentResponse.invites.getter( void *a1, SEL *a2, unint64_t *a3, void *a4)
{
  id v7 = [a1 *a2];

  if (!v7) {
    return 0LL;
  }
  uint64_t v8 = type metadata accessor for CNContactStore(0LL, a3, a4);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  return v9;
}

uint64_t specialized AddCallParticipantHandleIntentFollowUpFlow.init(rchRecord:sharedGlobals:patterns:)( uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (void *)(a4
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns);
  v11[3] = a5;
  v11[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32LL))(boxed_opaque_existential_1, a3, a5);
  uint64_t v13 = a4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_rchRecord;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v13, a1, v14);
  outlined init with take of AppSelectionSignalComponent( a2,  a4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
  return a4;
}

uint64_t type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantHandleIntentFollowUpFlow;
  if (!type metadata singleton initialization cache for AddCallParticipantHandleIntentFollowUpFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddCallParticipantHandleIntentFollowUpFlow);
  }
  return result;
}

uint64_t ObjC metadata update function for AddCallParticipantHandleIntentFollowUpFlow()
{
  return type metadata accessor for AddCallParticipantHandleIntentFollowUpFlow(0LL);
}

void type metadata completion function for AddCallParticipantHandleIntentFollowUpFlow(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "(";
    void v4[2] = "(";
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
  }

void type metadata accessor for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>( uint64_t a1)
{
  if (!lazy cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>)
  {
    uint64_t v2 = type metadata accessor for CNContactStore( 255LL,  (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent,  &OBJC_CLASS___INAddCallParticipantIntent_ptr);
    uint64_t v3 = type metadata accessor for CNContactStore( 255LL,  &lazy cache variable for type metadata for INAddCallParticipantIntentResponse,  &OBJC_CLASS___INAddCallParticipantIntentResponse_ptr);
    unint64_t v4 = type metadata accessor for IntentResolutionRecord(a1, v2, v3);
    if (!v5) {
      atomic_store( v4,  (unint64_t *)&lazy cache variable for type metadata for IntentResolutionRecord<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
    }
  }

uint64_t partial apply for closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()( uint64_t *a1)
{
  return closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse()( a1,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void *)(v1 + 32));
}

uint64_t sub_142148()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

uint64_t partial apply for closure #1 in AddCallParticipantHandleIntentFollowUpFlow.handleInvite()( uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_433814);
  *(void *)(v1 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in AddCallParticipantHandleIntentFollowUpFlow.handleInvite()(a1);
}

uint64_t OUTLINED_FUNCTION_4_57()
{
  return specialized AddCallParticipantHandleIntentFollowUpFlow.init(rchRecord:sharedGlobals:patterns:)( v2,  v1,  v5,  v0,  v3,  v4);
}

uint64_t OUTLINED_FUNCTION_15_41()
{
  return swift_task_dealloc(*(void *)(v0 + 208));
}

uint64_t OUTLINED_FUNCTION_17_40(uint64_t a1, uint64_t a2)
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, a2, v2);
}

uint64_t OUTLINED_FUNCTION_18_37()
{
  return IntentResolutionRecord.intentResponse.getter(v0);
}

INPerson __swiftcall INPerson.with(alternatives:)(Swift::OpaquePointer alternatives)
{
  return (INPerson)OUTLINED_FUNCTION_73_13(v3);
}

void INPerson.hasNameComponents.getter()
{
  uint64_t v2 = &v23[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v3 = OUTLINED_FUNCTION_30_12();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_15();
  __chkstk_darwin();
  OUTLINED_FUNCTION_93_5();
  id v6 = OUTLINED_FUNCTION_68_12(v5, "nameComponents");
  if (!v6)
  {
    uint64_t EnumTagSinglePayload = OUTLINED_FUNCTION_120_4((uint64_t)v2, 1LL);
    goto LABEL_12;
  }

  id v7 = v6;
  static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = *(void (**)(void))(v4 + 32);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v8)(v2, v0, v3);
  OUTLINED_FUNCTION_120_4((uint64_t)v2, 0LL);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v2, 1LL, v3);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
LABEL_12:
    OUTLINED_FUNCTION_52_12( EnumTagSinglePayload,  &demangling cache variable for type metadata for PersonNameComponents?);
    goto LABEL_14;
  }

  uint64_t v10 = OUTLINED_FUNCTION_146_1();
  v8(v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  uint64_t inited = swift_initStackObject(v11, v23);
  *(_OWORD *)(inited + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31F580;
  *(void *)(inited + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = PersonNameComponents.givenName.getter();
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = PersonNameComponents.middleName.getter();
  *(void *)(inited + outlined init with take of AppSelectionSignalComponent(v3, v1 + 56) = v14;
  *(void *)(inited + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = PersonNameComponents.familyName.getter();
  *(void *)(inited + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  uint64_t v16 = PersonNameComponents.nickname.getter();
  uint64_t v17 = 0LL;
  *(void *)(inited + 80) = v16;
  *(void *)(inited + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v18;
  do
  {
    unint64_t v19 = *(void *)(inited + v17 + 40);
    if (v19)
    {
      if ((v19 & 0x2000000000000000LL) != 0 ? HIBYTE(v19) & 0xF : *(void *)(inited + v17 + 32) & 0xFFFFFFFFFFFFLL) {
        break;
      }
    }

    v17 += 16LL;
  }

  while (v17 != 64);
  uint64_t v21 = OUTLINED_FUNCTION_34_1();
  v22(v21);
  OUTLINED_FUNCTION_124_4();
  specialized _ContiguousArrayStorage.__deallocating_deinit(&demangling cache variable for type metadata for String?);
LABEL_14:
  OUTLINED_FUNCTION_16();
}

void static INPlayVoicemailIntent.makeFirstPartyHandleIntent(identifier:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_34_1();
  id v2 = @nonobjc INPlayVoicemailIntent.init(callRecordIdentifier:)(v0, v1);
  id v3 = [objc_allocWithZone(_INPBIntentMetadata) init];
  uint64_t v4 = v3;
  if (v3)
  {
    uint64_t v5 = one-time initialization token for inCallServiceLaunchId;
    id v6 = v3;
    if (v5 != -1) {
      swift_once( &one-time initialization token for inCallServiceLaunchId,  one-time initialization function for inCallServiceLaunchId);
    }
    uint64_t v7 = static PhoneCallAppNameConstants.inCallServiceLaunchId;
    uint64_t v8 = unk_477F60;
    swift_bridgeObjectRetain();
    outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.launchId.setter(v7, v8, v6);

    swift_bridgeObjectRelease();
    id v9 = v6;
    outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.systemExtensionBundleId.setter( 0xD00000000000002FLL,  0x800000000034B6A0LL,  v9);
  }

  id v10 = OUTLINED_FUNCTION_89_0(v2, "_setMetadata:");
  OUTLINED_FUNCTION_49( (uint64_t)v10,  &lazy cache variable for type metadata for SAIntentGroupHandleIntent,  &OBJC_CLASS___SAIntentGroupHandleIntent_ptr);
  id v11 = v2;
  SAIntentGroupHandleIntent.init(intent:appIdentifier:)(v11, 0LL, 0LL);

  OUTLINED_FUNCTION_16();
}

uint64_t FollowUpOfferType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1425E4 + 4 * byte_328A90[a1]))( 1162760014LL,  0xE400000000000000LL);
}

unint64_t sub_1425E4()
{
  return 0xD000000000000012LL;
}

unint64_t sub_14261C()
{
  return 0xD000000000000011LL;
}

uint64_t sub_142638()
{
  return 0x4C41435F44414552LL;
}

void *INIntent.parameterMetadata.getter()
{
  unint64_t v1 = outlined bridged method (ob) of @objc INIntentDescription.slotDescriptions()([v0 _intentInstanceDescription]);
  if (!v1)
  {
LABEL_23:
    __break(1u);
    uint64_t result = (void *)swift_release(v23);
    __break(1u);
    return result;
  }

  if (v1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8LL;
  OUTLINED_FUNCTION_8_1();
  while (1)
  {
    uint64_t v23 = v2;
    specialized MutableCollection<>.sort(by:)(&v23);
    OUTLINED_FUNCTION_39();
    uint64_t v3 = v23;
    if (v23 < 0 || (v23 & 0x4000000000000000LL) != 0) {
      break;
    }
    uint64_t v4 = *(void *)(v23 + 16);
    if (!v4) {
      goto LABEL_19;
    }
LABEL_7:
    uint64_t v23 = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }

    uint64_t v5 = 0LL;
    while (v4 != v5)
    {
      if ((v3 & 0xC000000000000001LL) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      }
      else {
        id v6 = *(id *)(v3 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      outlined bridged method (pb) of @objc INPersonHandle.value.getter(v6, (SEL *)&selRef_name);
      if (!v9) {
        goto LABEL_22;
      }
      uint64_t v10 = v8;
      uint64_t v11 = v9;
      ++v5;
      BOOL v12 = [v7 resolveSelector] != 0;
      uint64_t v13 = type metadata accessor for SiriKitParameterMetadata(0LL);
      OUTLINED_FUNCTION_15_2(v13);
      uint64_t v14 = SiriKitParameterMetadata.init(parameterName:shouldResolve:confirmationStates:)( v10,  v11,  v12,  _swiftEmptyArrayStorage);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      uint64_t v16 = *(void *)(v23 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      uint64_t v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized ContiguousArray._endMutation()(v17);
      if (v4 == v5)
      {
        uint64_t v18 = v23;
        OUTLINED_FUNCTION_22();
        return (void *)v18;
      }
    }

    __break(1u);
LABEL_17:
    unint64_t v19 = OUTLINED_FUNCTION_8_1();
    specialized _copyCollectionToContiguousArray<A>(_:)( v19,  (void (*)(void *, uint64_t, unint64_t))specialized Array._copyContents(initializing:));
    uint64_t v2 = v20;
    OUTLINED_FUNCTION_39();
  }

  uint64_t v21 = OUTLINED_FUNCTION_8_1();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v21);
  OUTLINED_FUNCTION_22();
  if (v4) {
    goto LABEL_7;
  }
LABEL_19:
  OUTLINED_FUNCTION_22();
  return _swiftEmptyArrayStorage;
}

void INPreferredCallProvider.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = INPreferredCallProviderGetBackingType(a1);
    switch((_DWORD)v1)
    {
      case 4:
        uint64_t v2 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v2 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v2 = @"TELEPHONY_PROVIDER";
        break;
      default:
        objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"(unknown: %i)", v1));
        goto LABEL_11;
    }

    uint64_t v3 = v2;
LABEL_11:
    id v4 = OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_126_3((uint64_t)v4);
    OUTLINED_FUNCTION_16_34();
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_1_23();
LABEL_12:
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_24_0();
}

void INCallCapability.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallCapabilityGetBackingType(a1);
    if ((_DWORD)BackingType == 2)
    {
      uint64_t v2 = @"VIDEO_CALL";
    }

    else
    {
      if ((_DWORD)BackingType != 1)
      {
        objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        goto LABEL_9;
      }

      uint64_t v2 = @"AUDIO_CALL";
    }

    uint64_t v3 = v2;
LABEL_9:
    id v4 = OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_126_3((uint64_t)v4);
    OUTLINED_FUNCTION_16_34();
    goto LABEL_10;
  }

  OUTLINED_FUNCTION_1_23();
LABEL_10:
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_24_0();
}

void INCallAudioRoute.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallAudioRouteGetBackingType(a1);
    switch((_DWORD)BackingType)
    {
      case 4:
        uint64_t v2 = @"HEY_SIRI_AUDIO_ROUTE";
        break;
      case 3:
        uint64_t v2 = @"BLUETOOTH_AUDIO_ROUTE";
        break;
      case 2:
        uint64_t v2 = @"SPEAKERPHONE_AUDIO_ROUTE";
        break;
      default:
        objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        goto LABEL_11;
    }

    uint64_t v3 = v2;
LABEL_11:
    id v4 = OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_126_3((uint64_t)v4);
    OUTLINED_FUNCTION_16_34();
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_1_23();
LABEL_12:
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_24_0();
}

void INCallDestinationType.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallDestinationTypeGetBackingType(a1);
    switch((int)BackingType)
    {
      case 1:
        uint64_t v2 = @"NORMAL_DESTINATION";
        goto LABEL_10;
      case 2:
        uint64_t v2 = @"EMERGENCY_DESTINATION";
        goto LABEL_10;
      case 3:
        uint64_t v2 = @"VOICEMAIL_DESTINATION";
        goto LABEL_10;
      case 4:
        uint64_t v2 = @"REDIAL_DESTINATION";
        goto LABEL_10;
      case 5:
        uint64_t v2 = @"CALL_BACK_DESTINATION";
LABEL_10:
        uint64_t v3 = v2;
        break;
      default:
        objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        break;
    }

    id v4 = OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_126_3((uint64_t)v4);
    OUTLINED_FUNCTION_16_34();
  }

  else
  {
    OUTLINED_FUNCTION_1_23();
  }

  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_24_0();
}

Swift::Bool __swiftcall INStartCallIntent.isGroupCall()()
{
  id v1 = [v0 isGroupCall];
  if (v1)
  {
    uint64_t v2 = v1;
    OUTLINED_FUNCTION_49( (uint64_t)v1,  (unint64_t *)&lazy cache variable for type metadata for NSNumber,  &OBJC_CLASS___NSNumber_ptr);
    Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
    static NSObject.== infix(_:_:)(v2, isa);
  }

  OUTLINED_FUNCTION_6();
  return result;
}

uint64_t INPerson.buildDisplayImage(supportsCompactView:isDeviceLocked:)@<X0>( uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  if ((a1 & 1) == 0) {
    goto LABEL_11;
  }
  if ((a2 & 1) == 0)
  {
    id v13 = OUTLINED_FUNCTION_46_7(a1, "image");
    if (v13)
    {
      *a3 = (uint64_t)v13;
      BOOL v12 = (unsigned int *)&enum case for Image.fromApp(_:);
      goto LABEL_12;
    }

    uint64_t v14 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v3);
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v17 = v15;
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v19 = OUTLINED_FUNCTION_8_2(v18, 48LL);
      *(_OWORD *)(v19 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
      *(void *)(v19 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
      *(void *)(v19 + 40) = v17;
      *a3 = v19;
      goto LABEL_10;
    }

void INIntent.typed<A>(as:)(uint64_t a1, uint64_t a2)
{
  if (swift_dynamicCastUnknownClass(v2, a2))
  {
    id v4 = v2;
  }

  else
  {
    id v5 = (id)INTypedIntentWithIntent(v2);
    if (v5)
    {
      id v6 = v5;
      if (!swift_dynamicCastUnknownClass(v5, a2)) {
    }
      }
  }

  OUTLINED_FUNCTION_6();
}

INStartAudioCallIntent_optional __swiftcall INStartCallIntent.toStartAudioCallIntent()()
{
  id v0 = [objc_allocWithZone(INStartAudioCallIntent) init];
  OUTLINED_FUNCTION_144_3( (uint64_t)v0,  (SEL *)&selRef_contacts,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
  if (v1)
  {
    OUTLINED_FUNCTION_49( v1,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    v2.super.Class isa = OUTLINED_FUNCTION_67_13().super.isa;
    OUTLINED_FUNCTION_34_0();
  }

  else
  {
    v2.super.Class isa = 0LL;
  }

  [v0 setContacts:v2.super.isa];

  objc_msgSend(v0, "setDestinationType:", OUTLINED_FUNCTION_46_7(v3, "destinationType"));
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___INStartAudioCallIntent);
  if (!swift_dynamicCastObjCClass(v0, v4)) {

  }
  OUTLINED_FUNCTION_16();
  result.value.super.super.Class isa = v5;
  result.is_nil = v6;
  return result;
}

void INPerson.hasHandleLabel.getter()
{
  id v2 = [v0 personHandle];
  if (v2)
  {
    id v3 = OUTLINED_FUNCTION_17_5((uint64_t)v2, "label");
    OUTLINED_FUNCTION_88_9();
    if (v1)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
      OUTLINED_FUNCTION_16_34();
    }
  }

  uint64_t v4 = OUTLINED_FUNCTION_34_1();
  specialized Optional<A>.isNilOrEmpty.getter(v4, v5);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_6();
}

void INPersonRelationship.toSpeakableString(startCallCats:)()
{
  Swift::Bool v6 = v5;
  uint64_t v27 = v7;
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  BOOL v12 = (void *)(v10 - v11);
  __chkstk_darwin();
  OUTLINED_FUNCTION_92_7();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<SpeakableString, Error>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin();
  uint64_t v14 = OUTLINED_FUNCTION_128_4();
  INPersonRelationship.nlString.getter(v14);
  SpeakableString.init(print:speak:)(v15, v16, 0LL, 0LL);
  uint64_t v17 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_14(v1, 0LL);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + *v6 + 1464))(v1);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for SpeakableString?);
  _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0( v4,  (uint64_t)v12,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v12, v9) == 1)
  {
    *id v0 = *v12;
    uint64_t v18 = 1LL;
  }

  else
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v25 + 32))(v2, v12, v26);
    closure #1 in INPersonRelationship.toSpeakableString(startCallCats:)();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v2, v26);
    uint64_t v18 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v0, v13, v18);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v4,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  OUTLINED_FUNCTION_125_6(v19, v20, &demangling cache variable for type metadata for Result<SpeakableString, Error>);
  if (swift_getEnumCaseMultiPayload(v3, v13) == 1)
  {
    uint64_t v28 = *v3;
    uint64_t v21 = v28;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    swift_willThrowTypedImpl(&v28, v22, &protocol self-conformance witness table for Error);
    uint64_t v23 = swift_errorRelease(v21);
    uint64_t v24 = 1LL;
  }

  else
  {
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 32LL))(v27, v3, v17);
    uint64_t v24 = 0LL;
  }

  OUTLINED_FUNCTION_52_12(v23, &demangling cache variable for type metadata for Result<SpeakableString, Error>);
  OUTLINED_FUNCTION_14(v27, v24);
  OUTLINED_FUNCTION_7_5();
}

void INIntent.typedOrThrow<A>(as:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneError(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  INIntent.typed<A>(as:)(v5, a2);
  if (!v6)
  {
    swift_storeEnumTagMultiPayload(v2, v4, 13LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    swift_allocError(v4, v7, 0LL, 0LL);
    PhoneError.logged()(v8);
    uint64_t v9 = outlined destroy of PhoneError(v2);
    swift_willThrow(v9, v10, v11, v12, v13, v14, v15, v16);
  }

INPerson __swiftcall INPerson.init(personHandle:)(INPersonHandle personHandle)
{
  return result;
}

BOOL INPerson.isProvidedByPlus.getter()
{
  return [v0 searchProvider] == (char *)&dword_0 + 1;
}

void INStartCallIntent.isThirdPartyCallKitCallBack.getter(uint64_t a1)
{
  if (OUTLINED_FUNCTION_46_7(a1, "preferredCallProvider") == (char *)&dword_0 + 3)
  {
    uint64_t v1 = (int *)OUTLINED_FUNCTION_46_7(3LL, "destinationType");
    if (v1 != &dword_4) {
      OUTLINED_FUNCTION_46_7((uint64_t)v1, "destinationType");
    }
  }

  OUTLINED_FUNCTION_2();
}

void INStartCallIntentResponse.thirdPartyCallKitCallBackBundleId.getter()
{
  id v2 = [v1 userActivity];
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 interaction];
    OUTLINED_FUNCTION_51_9();
    if (v0)
    {
      id v6 = OUTLINED_FUNCTION_17_5(v5, "intent");
      OUTLINED_FUNCTION_79();
      outlined bridged method (ob) of @objc INPersonHandle.value.getter(v3, (SEL *)&selRef_launchId);
    }
  }

void FollowUpOfferType.requiresConfirmation.getter(char a1)
{
  __asm { BR              X11 }

void sub_143380()
{
}

void INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:isGroupCall:callGroups:)( void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  if (a6)
  {
    OUTLINED_FUNCTION_49( (uint64_t)a1,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    v17.super.Class isa = OUTLINED_FUNCTION_127_5().super.isa;
    OUTLINED_FUNCTION_39();
  }

  else
  {
    v17.super.Class isa = 0LL;
  }

  id v18 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithCallRecordFilter:a1 callRecordToCallBack:a2 audioRoute:a3 destinationType:a4 preferredCallProvider:a5 contacts:v17.super.isa ttyTyp e:a7 callCapability:a8];

  id v19 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  id v20 = v18;
  id v21 = [v19 initWithBool:a9 & 1];
  OUTLINED_FUNCTION_89_0(v20, "setIsGroupCall:");

  if (a10)
  {
    OUTLINED_FUNCTION_49( v22,  (unint64_t *)&lazy cache variable for type metadata for INCallGroup,  &OBJC_CLASS___INCallGroup_ptr);
    v23.super.Class isa = OUTLINED_FUNCTION_67_13().super.isa;
    OUTLINED_FUNCTION_34_0();
  }

  else
  {
    v23.super.Class isa = 0LL;
  }

  OUTLINED_FUNCTION_89_0(v20, "setCallGroups:");

  OUTLINED_FUNCTION_25_32();
}

void INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(uint64_t a1)
{
}

void INCallInviteType.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallInviteTypeGetBackingType();
    switch((_DWORD)BackingType)
    {
      case 3:
        id v2 = @"LINK";
        break;
      case 2:
        id v2 = @"RING";
        break;
      case 1:
        id v2 = @"ADD";
        break;
      default:
        objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        goto LABEL_11;
    }

    id v3 = v2;
LABEL_11:
    id v4 = OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_126_3((uint64_t)v4);
    OUTLINED_FUNCTION_16_34();
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_1_23();
LABEL_12:
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_24_0();
}

id INIntent.copyMetadata(from:)(void *a1)
{
  id v1 = [a1 _metadata];
  OUTLINED_FUNCTION_89_0(v3, "_setMetadata:");

  return v3;
}

void INIntent.setPeerInfoMetadata(from:)(void *a1)
{
  id v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  dispatch thunk of PeerInfoProviding.getIdsIdentifier()(v4, v5);
  if (v6
    || (outlined bridged method (pb) of @objc INPersonHandle.value.getter( v1,  (SEL *)&selRef__originatingDeviceIDSIdentifier),  v6))
  {
    uint64_t v7 = v6;
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }

  else
  {
    NSString v8 = 0LL;
  }

  [v2 _setOriginatingDeviceIdsIdentifier:v8];

  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  dispatch thunk of PeerInfoProviding.getRapportEffectiveIdentifier()(v9, v10);
  if (v11
    || (outlined bridged method (pb) of @objc INPersonHandle.value.getter( v2,  (SEL *)&selRef__originatingDeviceRapportEffectiveIdentifier),  v11))
  {
    uint64_t v12 = v11;
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    NSString v13 = 0LL;
  }

  [v2 _setOriginatingDeviceRapportEffectiveIdentifier:v13];

  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  dispatch thunk of PeerInfoProviding.getMediaSystemIdentifier()(v14, v15);
  if (v16
    || (outlined bridged method (pb) of @objc INPersonHandle.value.getter( v2,  (SEL *)&selRef__originatingDeviceRapportMediaSystemIdentifier),  v16))
  {
    uint64_t v17 = v16;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }

  else
  {
    NSString v18 = 0LL;
  }

  [v2 _setOriginatingDeviceRapportMediaSystemIdentifier:v18];

  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  id v21 = objc_msgSend( objc_allocWithZone(NSNumber),  "initWithBool:",  dispatch thunk of PeerInfoProviding.isOwnedByCurrentUser()(v19, v20) & 1);
  [v2 _setIsOwnedByCurrentUser:v21];

  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  uint64_t v24 = dispatch thunk of PeerInfoProviding.getMediaRouteIdentifier()(v22, v23);
  if (v25)
  {
    uint64_t v26 = v24;
    uint64_t v27 = v25;
    uint64_t v28 = outlined bridged method (pb) of @objc INIntent.airPlayRouteIds.getter(v2);
    if (v28 && (uint64_t v29 = *(void *)(v28 + 16), swift_bridgeObjectRelease(v28), v29))
    {
      swift_bridgeObjectRelease(v27);
    }

    else
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v31 = swift_allocObject(v30, 48LL, 7LL);
      *(_OWORD *)(v31 + outlined init with take of AppSelectionSignalComponent(v5, v1 + 16) = xmmword_31D870;
      *(void *)(v31 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v26;
      *(void *)(v31 + 40) = v27;
      outlined bridged method (mbnn) of @objc INIntent.airPlayRouteIds.setter(v31, v2);
    }
  }

#error "1439A0: call analysis failed (funcsize=101)"
void INIntent.setAppMetadata(from:cachedApp:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void v19[6];
  void v20[6];
  void v21[3];
  uint64_t v22;
  id v3 = v2;
  outlined init with take of PersonNameComponents?( a2,  (uint64_t)v21,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (v21[0])
  {
    uint64_t v6 = v22;
    if (v22)
    {
      uint64_t v7 = v21[2];
      swift_bridgeObjectRetain();
LABEL_6:
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter( v7,  v6,  v3,  (SEL *)&selRef__setLaunchId_);
      goto LABEL_8;
    }
  }

  if (!a1)
  {
    swift_bridgeObjectRelease(0LL);
    goto LABEL_8;
  }

  uint64_t v7 = App.appIdentifier.getter();
  uint64_t v6 = v8;
  swift_bridgeObjectRelease(0LL);
  if (v6) {
    goto LABEL_6;
  }
LABEL_8:
  outlined init with take of PersonNameComponents?( a2,  (uint64_t)v20,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (v20[0])
  {
    uint64_t v9 = App.systemExtensionBundleId.getter();
    if (v10)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v10;
LABEL_13:
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter( v11,  v12,  v3,  (SEL *)&selRef__setExtensionBundleId_);
      goto LABEL_15;
    }
  }

  if (!a1)
  {
    swift_bridgeObjectRelease(0LL);
    goto LABEL_15;
  }

  uint64_t v11 = App.systemExtensionBundleId.getter();
  uint64_t v12 = v13;
  swift_bridgeObjectRelease(0LL);
  if (v12) {
    goto LABEL_13;
  }
LABEL_15:
  outlined init with take of PersonNameComponents?( a2,  (uint64_t)v19,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (v19[0])
  {
    uint64_t v14 = App.systemUIExtensionBundleId.getter();
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v17 = v15;
LABEL_20:
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter( v16,  v17,  v3,  (SEL *)&selRef__setUiExtensionBundleId_);
      return;
    }
  }

  if (a1)
  {
    uint64_t v16 = App.systemUIExtensionBundleId.getter();
    uint64_t v17 = v18;
    swift_bridgeObjectRelease(0LL);
    if (!v17) {
      return;
    }
    goto LABEL_20;
  }

  swift_bridgeObjectRelease(0LL);
}

void INStartCallIntent.updateAudioRoute(audioRoute:)(uint64_t a1)
{
}

void INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone(NSNumber) initWithInteger:a1];
  v6[3] = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for NSNumber,  &OBJC_CLASS___NSNumber_ptr);
  v6[0] = v5;
  NSObject.update(with:at:)((uint64_t)v6, a2, a3);
  __swift_destroy_boxed_opaque_existential_1(v6);
  OUTLINED_FUNCTION_62_9();
}

void INStartCallIntent.updateCallCapability(callCapability:)(uint64_t a1)
{
}

Swift::Void __swiftcall INStartCallIntent.overwriteCallGroups(newCallGroups:)(Swift::OpaquePointer newCallGroups)
{
  if ((unint64_t)newCallGroups._rawValue >> 62)
  {
    OUTLINED_FUNCTION_8_1();
    uint64_t v3 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + ((unint64_t)newCallGroups._rawValue & 0xFFFFFFFFFFFFF8LL));
  }

  id v4 = [objc_allocWithZone(NSNumber) initWithBool:v3 != 0];
  OUTLINED_FUNCTION_46_7((uint64_t)v4, "setIsGroupCall:");
  OUTLINED_FUNCTION_3_64(v4);
}

void INStartCallIntent.setLaunchId(app:)()
{
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_116_5();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  id v7 = OUTLINED_FUNCTION_46_7(v6, "_metadata");
  if (v7)
  {
    outlined bridged method (ob) of @objc INPersonHandle.value.getter(v7, (SEL *)&selRef_launchId);
    if (v8)
    {
      swift_bridgeObjectRelease();
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
      uint64_t v55 = (os_log_s *)OUTLINED_FUNCTION_9();
      os_log_type_t v10 = static os_log_type_t.debug.getter(v55, v9);
      if (os_log_type_enabled(v55, v10))
      {
        uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl(&dword_0, v55, v10, "launchId is already configured, nothing to do.", v11, 2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v11);
      }

      OUTLINED_FUNCTION_7_5();

      return;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  NSString v13 = (os_log_s *)__swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v14 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_29_5(v14))
  {
    uint64_t v15 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    _WORD *v15 = 0;
    OUTLINED_FUNCTION_3_61(&dword_0, v16, v17, "No launchId configured for intent. Applying based on the resolved app.");
    OUTLINED_FUNCTION_0_2((uint64_t)v15);
  }

  id v19 = OUTLINED_FUNCTION_17_5(v18, "_metadata");
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = [v19 copy];

    _bridgeAnyObjectToAny(_:)(&v57, v21);
    uint64_t v22 = swift_unknownObjectRelease(v21);
    OUTLINED_FUNCTION_49( v22,  &lazy cache variable for type metadata for _INPBIntentMetadata,  &OBJC_CLASS____INPBIntentMetadata_ptr);
    if ((swift_dynamicCast(&v56, &v57, &type metadata for Any[1]) & 1) != 0)
    {
      id v23 = v56;
      goto LABEL_16;
    }
  }

  id v23 = [objc_allocWithZone(_INPBIntentMetadata) init];
  if (v23)
  {
LABEL_16:
    if (v5)
    {
      uint64_t v24 = App.appIdentifier.getter();
      if (v25)
      {
        uint64_t v26 = v24;
        uint64_t v27 = v25;
        uint64_t v57 = 0LL;
        uint64_t v58 = 0xE000000000000000LL;
        _StringGuts.grow(_:)(21LL);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_179();
        uint64_t v57 = v28;
        uint64_t v58 = v29;
        v30._uint64_t countAndFlagsBits = v26;
        v30._object = v27;
        String.append(_:)(v30);
        OUTLINED_FUNCTION_34_0();
        outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter( v57,  v58,  v23,  (SEL *)&selRef_setLaunchId_);
      }
    }

    id v31 = v23;
    uint64_t v32 = v13;
    Logger.logObject.getter(v31);
    os_log_type_t v33 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v13, v33))
    {
      unint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v35 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v57 = v35;
      *(_DWORD *)unint64_t v34 = 136315138;
      outlined bridged method (pb) of @objc INPersonHandle.value.getter(v31, (SEL *)&selRef_launchId);
      if (v37)
      {
        unint64_t v38 = v37;
      }

      else
      {
        uint64_t v36 = 0x3E6C696E3CLL;
        unint64_t v38 = 0xE500000000000000LL;
      }

      uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, &v57);
      uint64_t v40 = OUTLINED_FUNCTION_117_4(v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v40, v41, v34 + 4);

      OUTLINED_FUNCTION_70_2();
      _os_log_impl(&dword_0, v32, v33, "Updating intent metadata with app information: launchId=%s", v34, 0xCu);
      swift_arrayDestroy(v35, 1LL);
      OUTLINED_FUNCTION_0_2(v35);
      OUTLINED_FUNCTION_0_2((uint64_t)v34);
    }

    else
    {
    }

    OUTLINED_FUNCTION_138_3(v42, "_setMetadata:");

    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v43 = (*(uint64_t (**)(uint64_t, os_log_s *, uint64_t))(v3 + 16))(v2, v13, v1);
  uint64_t v44 = (void *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_87(v45))
  {
    uint64_t v46 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v47 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v57 = v47;
    OUTLINED_FUNCTION_97_7(4.8149e-34);
    uint64_t v49 = OUTLINED_FUNCTION_47_0(36LL, v48, &v57);
    uint64_t v50 = OUTLINED_FUNCTION_117_4(v49);
    OUTLINED_FUNCTION_32_18(v50, v51);
    OUTLINED_FUNCTION_9_4(&dword_0, v52, v53, "%s");
    OUTLINED_FUNCTION_8_24();
    OUTLINED_FUNCTION_0_2(v47);
    OUTLINED_FUNCTION_0_2(v46);
  }

  OUTLINED_FUNCTION_33_21(36LL);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  36LL,  v54,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
}