uint64_t protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>(uint64_t a1)
{
  uint64_t v1;
  OUTLINED_FUNCTION_22_2();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t protocol witness for Flow.on(input:) in conformance ContactNeedsValueGuardFlow<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160LL))() & 1;
}

void ContactNeedsValueGuardFlow.on(input:)(uint64_t a1)
{
  v2 = v1;
  uint64_t v4 = *(void *)v1;
  type metadata accessor for UUID(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_16_5(v6, v63);
  uint64_t v7 = OUTLINED_FUNCTION_31_7();
  uint64_t v70 = *(void *)(v7 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v69 = v9;
  uint64_t v10 = OUTLINED_FUNCTION_4_3();
  uint64_t v72 = *(void *)(v10 - 8);
  uint64_t v73 = v10;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_11_0();
  uint64_t v71 = v12;
  uint64_t v15 = OUTLINED_FUNCTION_32_4(v13, *(void *)(v4 + 80), *(void *)(v4 + 88), v14);
  uint64_t v74 = *(void *)(v15 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_10_1();
  uint64_t v75 = v17;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v18);
  v78 = (char *)&v63 - v19;
  uint64_t v20 = type metadata accessor for Input(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_10_1();
  uint64_t v67 = v22;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v23);
  v25 = (char *)&v63 - v24;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v26 = OUTLINED_FUNCTION_15_1();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
  v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v66((uint64_t)v25, a1, v20);
  uint64_t v28 = swift_retain_n(v2, 2LL);
  uint64_t v76 = v27;
  v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc(22LL, -1LL);
    uint64_t v77 = v15;
    uint64_t v32 = v31;
    uint64_t v63 = swift_slowAlloc(64LL, -1LL);
    uint64_t v80 = v63;
    *(_DWORD *)uint64_t v32 = 136315394;
    uint64_t v65 = a1;
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v20, v33);
    unint64_t v36 = v35;
    uint64_t v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v80);
    uint64_t v64 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v32 + 4, v32 + 12);
    swift_bridgeObjectRelease(v36);
    uint64_t v37 = OUTLINED_FUNCTION_20_4();
    *(_WORD *)(v32 + 12) = 2080;
    v38 = v78;
    (*(void (**)(uint64_t))(*(void *)v2 + 128LL))(v37);
    OUTLINED_FUNCTION_22();
    uint64_t v39 = ContactNeedsValueGuardFlow.FlowState.description.getter(v77);
    unint64_t v41 = v40;
    (*(void (**)(_BYTE *, uint64_t))(v74 + 8))(v38, v77);
    uint64_t v79 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v80);
    uint64_t v7 = v64;
    a1 = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v32 + 14, v32 + 22);
    swift_bridgeObjectRelease(v41);
    OUTLINED_FUNCTION_22();
    _os_log_impl(&dword_0, v29, v30, "#ContactNeedsValueGuardFlow on(input:) %s, state = %s", (uint8_t *)v32, 0x16u);
    uint64_t v42 = v63;
    swift_arrayDestroy(v63, 2LL);
    OUTLINED_FUNCTION_0_2(v42);
    uint64_t v43 = v32;
    uint64_t v15 = v77;
    OUTLINED_FUNCTION_0_2(v43);
  }

  else
  {
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_22();

    v38 = v78;
  }

  uint64_t v44 = v75;
  v45 = v2;
  (*(void (**)(void))(*(void *)v2 + 128LL))();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v44, v15);
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v44, v15);
LABEL_10:
    swift_storeEnumTagMultiPayload(v38, v15, 2LL);
    OUTLINED_FUNCTION_17_13();
    OUTLINED_FUNCTION_26_3();
    os_log_type_t v48 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v48))
    {
      v49 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)v49 = 0;
      v50 = "#ContactNeedsValueGuardFlow on(input:) fallback (to server or Emergency plugin) did not succeed, re-run wrapped flow.";
LABEL_17:
      OUTLINED_FUNCTION_5(&dword_0, v45, (os_log_type_t)v44, v50, v49);
      OUTLINED_FUNCTION_0_2((uint64_t)v49);
      goto LABEL_18;
    }

    goto LABEL_18;
  }

  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v47 = v44
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v47, v73);
    goto LABEL_10;
  }

  uint64_t v44 = v71;
  Input.parse.getter();
  v45 = (os_log_s *)static ExecutionPath.choosePath(for:sharedGlobals:)( v44,  (os_log_s *)((char *)v2 + *(void *)(*(void *)v2 + 112LL)));
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v44, v73);
  switch(v45)
  {
    case 3u:
LABEL_15:
      OUTLINED_FUNCTION_26_3();
      os_log_type_t v51 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v51))
      {
        v49 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)v49 = 0;
        v50 = "#ContactNeedsValueGuardFlow on(input:) delegate to wrapped flow";
        goto LABEL_17;
      }

LABEL_18:
      dispatch thunk of AnyValueFlow.on(input:)(a1);
      break;
    case 4u:
      OUTLINED_FUNCTION_26_3();
      os_log_type_t v52 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v52))
      {
        v53 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)v53 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v45,  (os_log_type_t)v44,  "#ContactNeedsValueGuardFlow on(input:) .deferToEmergencyPlugin",  v53);
        uint64_t v54 = (uint64_t)v53;
        v38 = v78;
        OUTLINED_FUNCTION_0_2(v54);
      }

      uint64_t v55 = v67;
      uint64_t v56 = OUTLINED_FUNCTION_30_4(v67, v66);
      uint64_t v57 = v68;
      UUID.init()(v56);
      uint64_t v58 = v69;
      PluginAction.init(flowHandlerId:input:loggingId:)(0xD000000000000022LL, 0x80000000003470E0LL, v55, v57);
      uint64_t v59 = v70;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v70 + 16))(v38, v58, v7);
      swift_storeEnumTagMultiPayload(v38, v15, 0LL);
      OUTLINED_FUNCTION_17_13();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v7);
      break;
    case 5u:
      goto LABEL_15;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ExecutionPath.FallbackLocation, Parse));
      _BYTE *v38 = (_BYTE)v45;
      Input.parse.getter();
      swift_storeEnumTagMultiPayload(v38, v15, 1LL);
      OUTLINED_FUNCTION_17_13();
      v60 = (os_log_s *)OUTLINED_FUNCTION_26_3();
      os_log_type_t v61 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)v62 = 0;
        OUTLINED_FUNCTION_5(&dword_0, v60, v61, "#ContactNeedsValueGuardFlow on(input:) .deferToServer", v62);
        OUTLINED_FUNCTION_0_2((uint64_t)v62);
      }

      break;
  }

  OUTLINED_FUNCTION_7_5();
}

  __break(1u);
}

    OUTLINED_FUNCTION_25_21();
    OUTLINED_FUNCTION_18();
    goto LABEL_19;
  }

  v38 = OUTLINED_FUNCTION_5_33();
  SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)(v38, v39, v40, v41, v42);
  if (!v7)
  {
    OUTLINED_FUNCTION_12_34();
    goto LABEL_18;
  }

  OUTLINED_FUNCTION_12_34();
LABEL_11:
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_26_7();
  os_log_type_t v48 = OUTLINED_FUNCTION_26_7();
  Logger.logObject.getter(v48);
  v49 = OUTLINED_FUNCTION_33_18();
  if (OUTLINED_FUNCTION_16_20(v49))
  {
    v50 = OUTLINED_FUNCTION_7_0(22LL);
    v62 = v12;
    os_log_type_t v51 = OUTLINED_FUNCTION_7_0(64LL);
    v69[0] = v51;
    *(_DWORD *)v50 = 136315394;
    os_log_type_t v52 = OUTLINED_FUNCTION_31_16((uint64_t)&v74);
    uint64_t v70 = OUTLINED_FUNCTION_24_13(v52, v53);
    OUTLINED_FUNCTION_27_18((uint64_t)&v70, v54, v55, v50 + 12);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v50 + 12) = 2080;
    swift_getErrorValue(v7, v68, v65);
    uint64_t v56 = Error.localizedDescription.getter(v66, v67);
    uint64_t v70 = OUTLINED_FUNCTION_24_13(v56, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v50 + 14, v50 + 22);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_33_6( &dword_0,  v36,  (os_log_type_t)v16,  "#SKTransformer Error converting PhoneCallNLIntent to %s: %s",  (uint8_t *)v50);
    OUTLINED_FUNCTION_42_2(v51);
    uint64_t v58 = v51;
    uint64_t v12 = v62;
    OUTLINED_FUNCTION_0_2(v58);
    OUTLINED_FUNCTION_0_2(v50);

    OUTLINED_FUNCTION_3_24();
  }

  else
  {
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_3_24();
  }

  uint64_t v16 = v59;
  OUTLINED_FUNCTION_25_21();
LABEL_19:
  OUTLINED_FUNCTION_26_19();
  Signpost.OpenSignpost.end()();
  swift_release(v12);
  swift_release(v16);
  OUTLINED_FUNCTION_7_5();
}

  uint64_t v17 = 0LL;
LABEL_19:
  uint64_t v18 = specialized Optional<A>.isNilOrEmpty.getter((uint64_t)v14, v17);
  OUTLINED_FUNCTION_70_2();
  if (!(_DWORD)v5)
  {

LABEL_24:
    uint64_t v21 = 0;
    return v21 & 1;
  }

  INPersonContainingIntent.hasSiriMatches.getter(v1, v3);
  uint64_t v20 = v19;

  if ((v20 & 1) != 0 || ((v12 ^ 1) & 1) != 0) {
    goto LABEL_24;
  }
  uint64_t v21 = v18 ^ 1;
  return v21 & 1;
}

  v29 = a1;
  os_log_type_t v30 = *v37;
  *(void *)(*v37 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  result = outlined init with take of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?( v29,  *(void *)(v30 + 48) + *(void *)(v40 + 72) * a2);
  uint64_t v32 = *(void *)(v30 + 16);
  uint64_t v33 = __OFADD__(v32, 1LL);
  uint64_t v34 = v32 + 1;
  if (v33)
  {
    __break(1u);
LABEL_21:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v11,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_22:
    result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v36);
    __break(1u);
  }

  else
  {
    *(void *)(v30 + 16) = v34;
  }

  return result;
}

  result = swift_bridgeObjectRelease();
  if (!(_DWORD)a1)
  {
LABEL_9:
    if (!(_DWORD)v17) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }

  __break(1u);
}

    uint64_t v4 = (v7 - 1) & v7;
    uint64_t v3 = v8;
  }

  __break(1u);
  return result;
}

    v112 = OUTLINED_FUNCTION_14_13( v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v135,  v142,  v143,  v144,  v145,  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v153,  *((uint64_t *)&v153 + 1),  v154,  *((uint64_t *)&v154 + 1),  v155,  *((uint64_t *)&v155 + 1),  v156);
    OUTLINED_FUNCTION_3_27( v112,  v113,  v114,  v115,  v116,  v117,  v118,  v119,  v140,  v142,  v143,  v144,  v145,  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v153,  *((uint64_t *)&v153 + 1),  v154,  *((uint64_t *)&v154 + 1),  v155,  *((uint64_t *)&v155 + 1),  v156,  *((uint64_t *)&v156 + 1));
    v122 = OUTLINED_FUNCTION_13_20((uint64_t)&v157, v120, &demangling cache variable for type metadata for String?, v121);
    OUTLINED_FUNCTION_17_19(v122);

    OUTLINED_FUNCTION_0_3();
    goto LABEL_19;
  }

  uint64_t v12 = __swift_project_boxed_opaque_existential_1(v2, v1[8]);
  OUTLINED_FUNCTION_7_24((uint64_t)v12);
  uint64_t v10 = v145;
  uint64_t v13 = v146;
  __swift_project_boxed_opaque_existential_1(&v142, v145);
  uint64_t v14 = dispatch thunk of DeviceState.isHomePod.getter(v10, v13);
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_11_6(v14);
  if ((v15 & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v10 = v1[8];
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(v2, v10);
  OUTLINED_FUNCTION_7_24((uint64_t)v16);
  uint64_t v17 = v145;
  uint64_t v18 = v146;
  __swift_project_boxed_opaque_existential_1(&v142, v145);
  uint64_t v19 = DeviceState.isAuthenticatedForPhone.getter(v17, v18);
  LOBYTE(v17) = v19;
  uint64_t v20 = OUTLINED_FUNCTION_11_6(v19);
  if ((v17 & 1) != 0)
  {
LABEL_5:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v28 = OUTLINED_FUNCTION_15_1();
    v29 = OUTLINED_FUNCTION_4_23(v28, (uint64_t)static Logger.siriPhone);
    os_log_type_t v30 = (void *)Logger.logObject.getter(v29);
    uint64_t v32 = static os_log_type_t.debug.getter(v30, v31);
    uint64_t v33 = OUTLINED_FUNCTION_93(v32);
    if (v33)
    {
      unint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v42 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_9_20(4.8149e-34);
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneIntentsRestrictedGuardFlow.Type);
      v45 = OUTLINED_FUNCTION_12_21(v43, v44);
      v53 = OUTLINED_FUNCTION_16_11(v45, v46, v47, v48, v49, v50, v51, v52, v135);
      OUTLINED_FUNCTION_6_25(v53, v54, v55, v56, v57, v58, v59, v60, v136, v142);
      OUTLINED_FUNCTION_0_3();
      swift_bridgeObjectRelease();
      os_log_type_t v61 = "#%s Device does not require unlock";
LABEL_17:
      _os_log_impl(&dword_0, (os_log_t)v30, (os_log_type_t)v10, v61, v41, 0xCu);
      swift_arrayDestroy(v42, 1LL);
      OUTLINED_FUNCTION_0_2(v42);
      OUTLINED_FUNCTION_0_2((uint64_t)v41);

      v101 = OUTLINED_FUNCTION_14_13( v93,  v94,  v95,  v96,  v97,  v98,  v99,  v100,  v137,  v142,  v143,  v144,  v145,  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v153,  *((uint64_t *)&v153 + 1),  v154,  *((uint64_t *)&v154 + 1),  v155,  *((uint64_t *)&v155 + 1),  v156);
      OUTLINED_FUNCTION_3_27( v101,  v102,  v103,  v104,  v105,  v106,  v107,  v108,  v139,  v142,  v143,  v144,  v145,  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v153,  *((uint64_t *)&v153 + 1),  v154,  *((uint64_t *)&v154 + 1),  v155,  *((uint64_t *)&v155 + 1),  v156,  *((uint64_t *)&v156 + 1));
      v111 = OUTLINED_FUNCTION_13_20( (uint64_t)&v157,  v109,  &demangling cache variable for type metadata for String?,  v110);
      OUTLINED_FUNCTION_17_19(v111);
LABEL_19:
      swift_bridgeObjectRelease();
      return 0LL;
    }

    goto LABEL_18;
  }

  v124 = OUTLINED_FUNCTION_14_13( v20,  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v135,  v142,  v143,  v144,  v145,  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v153,  *((uint64_t *)&v153 + 1),  v154,  *((uint64_t *)&v154 + 1),  v155,  *((uint64_t *)&v155 + 1),  v156);
  OUTLINED_FUNCTION_3_27( v124,  v125,  v126,  v127,  v128,  v129,  v130,  v131,  v141,  v142,  v143,  v144,  v145,  v146,  v147,  v148,  v149,  v150,  v151,  v152,  v153,  *((uint64_t *)&v153 + 1),  v154,  *((uint64_t *)&v154 + 1),  v155,  *((uint64_t *)&v155 + 1),  v156,  *((uint64_t *)&v156 + 1));
  v134 = OUTLINED_FUNCTION_13_20((uint64_t)&v157, v132, &demangling cache variable for type metadata for String?, v133);
  OUTLINED_FUNCTION_17_19(v134);
  swift_bridgeObjectRelease();
  return 1LL;
}

    uint64_t v7 = (v13 - 1) & v13;
    uint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    uint64_t v6 = v14;
  }

  __break(1u);
  return result;
}

  OUTLINED_FUNCTION_23_13();
  return result;
}

        v38 = (void *)v25;
        swift_release(v23);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v19, v96);
        __swift_destroy_boxed_opaque_existential_1(v102);
        if (!v38) {
          return 0LL;
        }
        goto LABEL_19;
      }

      outlined init with copy of SharedGlobalsProviding(v98, (uint64_t)v102);
      os_log_type_t v52 = swift_allocObject(&unk_3FB740, 72LL, 7LL);
      v53 = v100;
      uint64_t v54 = v101;
      *(void *)(v52 + 16) = v100;
      *(void *)(v52 + 24) = v54;
      outlined init with take of AppSelectionSignalComponent(v102, v52 + 32);
      uint64_t v55 = v54;
      swift_retain_n(v53, 2LL);
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
      uint64_t v57 = v91;
      Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v52,  v56);
      uint64_t v58 = v93;
      uint64_t v59 = (void (*)(__int128 *__return_ptr, void *))Transformer.transform.getter(v93);
      os_log_type_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v92 + 8))(v57, v58);
      v62 = v97;
      v59(v102, v99);
      if (v62)
      {
        swift_release(v61);
        v50 = v53;
        return swift_release(v50);
      }

      swift_release(v61);
      uint64_t v63 = v53;
    }

    swift_release(v63);
    v38 = *(void **)&v102[0];
LABEL_19:
    result = swift_dynamicCastUnknownClass(v38, a5);
    if (!result)
    {

      return 0LL;
    }

    return result;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  v85 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  v86 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v85, v7);
  v87 = (os_log_s *)Logger.logObject.getter(v86);
  v88 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    v90 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v102[0] = v90;
    *(_DWORD *)v89 = 136315138;
    v103 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000032LL,  0x8000000000348F40LL,  (uint64_t *)v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v89 + 4, v89 + 12);
    _os_log_impl(&dword_0, v87, v88, "%s", v89, 0xCu);
    swift_arrayDestroy(v90, 1LL);
    swift_slowDealloc(v90, -1LL, -1LL);
    swift_slowDealloc(v89, -1LL, -1LL);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000032LL, 0x8000000000348F40LL);
  result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000032LL,  0x8000000000348F40LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
  __break(1u);
  return result;
}

  OUTLINED_FUNCTION_26_19();
  Signpost.OpenSignpost.end()();
  swift_release(v21);
  swift_release(v26);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_50();
LABEL_19:
  OUTLINED_FUNCTION_20_17();
}

  OUTLINED_FUNCTION_50();
LABEL_19:
  OUTLINED_FUNCTION_20_17();
}

    uint64_t v10 = 0LL;
    goto LABEL_20;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = OUTLINED_FUNCTION_6_0();
  if (!OUTLINED_FUNCTION_7(v12)) {
    goto LABEL_18;
  }
  uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_1_0();
  *(_WORD *)uint64_t v9 = 0;
  uint64_t v13 = "#CommunalDeviceExecutionFlow request is neither Answer or HangUp. Not executing locally";
LABEL_16:
  OUTLINED_FUNCTION_5(&dword_0, v2, (os_log_type_t)v0, v13, v9);
  uint64_t v10 = 0LL;
LABEL_17:
  OUTLINED_FUNCTION_0_2((uint64_t)v9);
LABEL_20:

  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v10);
}

  OUTLINED_FUNCTION_2_12();
LABEL_19:
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_7_5();
}

        OUTLINED_FUNCTION_56_14((uint64_t)v18);
        os_log_type_t v48 = OUTLINED_FUNCTION_36_21(v0);
        if ((v39 & 1) != 0)
        {
          v49 = UsoIdentifier.value.getter(v48);
          os_log_type_t v51 = v50;
          swift_bridgeObjectRelease(v50);
          if ((v51 & 0x2000000000000000LL) != 0) {
            os_log_type_t v52 = HIBYTE(v51) & 0xF;
          }
          else {
            os_log_type_t v52 = v49 & 0xFFFFFFFFFFFFLL;
          }
          OUTLINED_FUNCTION_56_14(v0);
          if (v52)
          {
            os_log_type_t v30 = v88;
            OUTLINED_FUNCTION_87_0();
            uint64_t v28 = v89;
            OUTLINED_FUNCTION_142( (uint64_t)v89,  (uint64_t)v20,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32));
            OUTLINED_FUNCTION_8_7((uint64_t)v28);
            OUTLINED_FUNCTION_87_0();
            uint64_t v6 = v90;
            v1 = v92;
            v81 = v95;
            v2 = v98;
            goto LABEL_31;
          }
        }

        else
        {
          OUTLINED_FUNCTION_56_14(v0);
        }

        OUTLINED_FUNCTION_56_14((uint64_t)v20);
        v33 += v99;
        if (!--v31)
        {
          os_log_type_t v30 = v88;
          OUTLINED_FUNCTION_87_0();
          uint64_t v28 = v89;
          uint64_t v6 = v90;
          v1 = v92;
          v2 = v98;
          goto LABEL_29;
        }
      }
    }

    OUTLINED_FUNCTION_76_4();
    v1 = v92;
LABEL_29:
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 1LL, 1LL, v3);
    OUTLINED_FUNCTION_87_0();
  }

  else
  {
    OUTLINED_FUNCTION_120_4((uint64_t)v28, 1LL);
  }

  v81 = v95;
LABEL_31:
  v53 = v94;
  outlined init with copy of TransformationResult?( (uint64_t)v28,  v94,  &demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_3_7(v53);
  if (!v40)
  {
    OUTLINED_FUNCTION_87_0();
    v78 = v100;
    uint64_t v79 = v91;
    OUTLINED_FUNCTION_142(v91, v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32));
    OUTLINED_FUNCTION_77_9();
    OUTLINED_FUNCTION_76_12();
    OUTLINED_FUNCTION_41_2(v79, *(uint64_t (**)(uint64_t, uint64_t))(v78 + 8));
    uint64_t v80 = (uint64_t)v28;
    goto LABEL_68;
  }

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v53,  &demangling cache variable for type metadata for UsoIdentifier?);
  if (!v30)
  {
    OUTLINED_FUNCTION_120_4(v1, 1LL);
    goto LABEL_60;
  }

  uint64_t v54 = *(void *)(v30 + 16);
  if (!v54) {
    goto LABEL_58;
  }
  v92 = v1;
  v89 = v28;
  v90 = v6;
  OUTLINED_FUNCTION_37_2();
  uint64_t v56 = v30 + v55;
  uint64_t v58 = *(void *)(v57 + 72);
  v88 = v30;
  OUTLINED_FUNCTION_76_4();
  v99 = (unint64_t)"email";
  v94 = 0x8000000000341970LL;
  do
  {
    uint64_t v59 = OUTLINED_FUNCTION_49_17(v2, v56);
    v60 = UsoIdentifier.namespace.getter(v59);
    LOBYTE(v62) = v61;
    if (!v61)
    {
      uint64_t v64 = v96;
      OUTLINED_FUNCTION_49_17(v96, v2);
      uint64_t v65 = v2;
      goto LABEL_52;
    }

    uint64_t v63 = v60 == 0x656D614E707061LL && v61 == 0xE700000000000000LL;
    uint64_t v64 = v96;
    if (v63)
    {
      OUTLINED_FUNCTION_62();
      uint64_t v67 = OUTLINED_FUNCTION_49_17(v64, v2);
LABEL_45:
      uint64_t v68 = UsoIdentifier.appBundleId.getter(v67);
      uint64_t v70 = v69;
      v71._countAndFlagsBits = v68;
      v71._object = v70;
      v62 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of UsoIdentifierAppBundleType.init(rawValue:),  v71);
      OUTLINED_FUNCTION_129();
      if (v62)
      {
        if (v62 != 1)
        {
          LOBYTE(v62) = 0;
          goto LABEL_51;
        }

        uint64_t v72 = v99 | 0x8000000000000000LL;
      }

      else
      {
        v62 = OUTLINED_FUNCTION_49_2( 0x746163696C707041LL,  0xEC000000736E6F69LL,  0xD000000000000015LL,  v94);
        uint64_t v72 = 0xEC000000736E6F69LL;
      }

      swift_bridgeObjectRelease(v72);
LABEL_51:
      uint64_t v65 = v98;
      goto LABEL_52;
    }

    uint64_t v65 = v2;
    v66 = OUTLINED_FUNCTION_49_2(v60, v61, 0x656D614E707061LL, 0xE700000000000000LL);
    OUTLINED_FUNCTION_62();
    uint64_t v67 = OUTLINED_FUNCTION_49_17(v64, v65);
    LOBYTE(v62) = 0;
    if ((v66 & 1) != 0) {
      goto LABEL_45;
    }
LABEL_52:
    OUTLINED_FUNCTION_6_10(v64);
    uint64_t v73 = v97;
    uint64_t v74 = OUTLINED_FUNCTION_49_17(v97, v65);
    if ((v62 & 1) != 0)
    {
      v101[2] = UsoIdentifier.value.getter(v74);
      v101[3] = v75;
      v101[0] = 46LL;
      v101[1] = 0xE100000000000000LL;
      uint64_t v76 = lazy protocol witness table accessor for type String and conformance String();
      uint64_t v77 = StringProtocol.contains<A>(_:)(v101, &type metadata for String, &type metadata for String, v76, v76);
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_6_10(v97);
      if ((v77 & 1) != 0)
      {
        OUTLINED_FUNCTION_62();
        v1 = v92;
        OUTLINED_FUNCTION_142(v92, v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32));
        OUTLINED_FUNCTION_8_7(v1);
        OUTLINED_FUNCTION_62();
        uint64_t v28 = v89;
        uint64_t v6 = v90;
        v81 = v95;
        goto LABEL_60;
      }
    }

    else
    {
      OUTLINED_FUNCTION_6_10(v73);
    }

    v2 = v98;
    OUTLINED_FUNCTION_6_10(v98);
    v56 += v58;
    --v54;
  }

  while (v54);
  OUTLINED_FUNCTION_87_0();
  uint64_t v28 = v89;
  uint64_t v6 = v90;
  v1 = v92;
  v81 = v95;
LABEL_58:
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v3);
  OUTLINED_FUNCTION_87_0();
LABEL_60:
  outlined init with copy of TransformationResult?( v1,  v81,  &demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_3_7(v81);
  if (v40)
  {
    OUTLINED_FUNCTION_133_1(v1);
    OUTLINED_FUNCTION_133_1((uint64_t)v28);
    OUTLINED_FUNCTION_133_1(v81);
  }

  else
  {
    OUTLINED_FUNCTION_142(v6, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32));
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    v82 = OUTLINED_FUNCTION_15_1();
    v83 = __swift_project_value_buffer(v82, (uint64_t)static Logger.siriPhone);
    v84 = (os_log_s *)Logger.logObject.getter(v83);
    v85 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)v86 = 0;
      _os_log_impl(&dword_0, v84, v85, "#UsoEntity_common_App falling back to appId from VocFile", v86, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v86);
    }

    OUTLINED_FUNCTION_77_9();
    OUTLINED_FUNCTION_76_12();
    OUTLINED_FUNCTION_41_2(v6, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
    OUTLINED_FUNCTION_133_1(v1);
    uint64_t v80 = (uint64_t)v28;
LABEL_68:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v80,  &demangling cache variable for type metadata for UsoIdentifier?);
  }

  OUTLINED_FUNCTION_7_5();
}

            OUTLINED_FUNCTION_7_4(v13);
            swift_bridgeObjectRelease();
            uint64_t v8 = a3 + 32;
            uint64_t v6 = v27;
            uint64_t v9 = v26;
          }
        }
      }

      if (++v10 == v6)
      {
        v25 = 0LL;
        uint64_t v13 = a3;
LABEL_28:
        OUTLINED_FUNCTION_7_4(v13);
        return v25;
      }
    }
  }

  return 0LL;
}

    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    goto LABEL_12;
  }

  if (!__OFSUB__(v80, a4))
  {
    v29 = result;
    result = String.index(_:offsetBy:limitedBy:)(15LL, v80 - a4, v26, a2, a3);
    if ((v30 & 1) == 0)
    {
      if (result >> 14 >= v29 >> 14)
      {
LABEL_16:
        uint64_t v65 = v81;
        *v81 = v29;
        v65[1] = result;
        return result;
      }

      __break(1u);
    }

    goto LABEL_11;
  }

  __break(1u);
  return result;
}

    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    goto LABEL_12;
  }

  if (!__OFSUB__(v64, a5))
  {
    v29 = result;
    os_log_type_t v30 = String.index(_:offsetBy:limitedBy:)(15LL, v64 - a5, v26, a3, a4);
    if ((v31 & 1) == 0)
    {
      if (v30 >> 14 >= v29 >> 14) {
        return v29;
      }
      __break(1u);
    }

    goto LABEL_11;
  }

  __break(1u);
  return result;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v53 & 0xC000000000000001LL) == 0, v53);
  if ((v53 & 0xC000000000000001LL) != 0)
  {
    uint64_t v54 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v53);
  }

  else
  {
    uint64_t v54 = *(void *)(v53 + 32);
    swift_retain();
  }

  swift_bridgeObjectRelease();
LABEL_25:
  static UsoTask_CodegenConverter.convert(task:)(v54);
  swift_release(v10);
  swift_release(v64);
  swift_release(v18);
  swift_release(v36);
  swift_release(v20);
  swift_release(v54);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v68)
  {
LABEL_29:
    v50 = &demangling cache variable for type metadata for Any?;
    os_log_type_t v51 = &v66;
    goto LABEL_30;
  }

  type metadata accessor for UsoTask_noVerb_uso_NoEntity(0LL);
  else {
    return 0LL;
  }
}

uint64_t type metadata accessor for ContactNeedsValueGuardFlow.FlowState( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for ContactNeedsValueGuardFlow.FlowState);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(void *)(a1 - 8) + 82LL) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0LL, 0LL, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }

  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }

    swift_bridgeObjectRetain(a2);
  }

  __swift_destroy_boxed_opaque_existential_1(v12);
  return v7;
}

void *specialized _StringGuts._deconstructUTF8<A>(scratch:)( void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      specialized UnsafeMutableRawPointer.initializeMemory<A>(as:from:count:)((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter(0LL, HIBYTE(a6) & 0xF, __dst, a3);
      result = 0LL;
      *a1 = __dst;
      return result;
    }

    goto LABEL_11;
  }

  if ((a6 & 0x1000000000000000LL) != 0)
  {
LABEL_11:
    result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v12;
    return result;
  }

  if ((a5 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }

  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter(a5, a6);
    if (!v8)
    {
      result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL);
      __break(1u);
      return result;
    }
  }

  *a1 = v8;
  if ((a6 & 0x8000000000000000LL) != 0) {
    return 0LL;
  }
  else {
    return (void *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
  }
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t ContactNeedsValueGuardFlow.flowState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess(v4, v8, 0LL, 0LL);
  uint64_t v6 = type metadata accessor for ContactNeedsValueGuardFlow.FlowState( 0LL,  *(void *)(v3 + 80),  *(void *)(v3 + 88),  v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, v4, v6);
}

_BYTE *initializeWithCopy for ContactNeedsValueGuardFlow.FlowState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = type metadata accessor for Parse(0LL);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v14 - 8) + 16LL))(v12, v13, v14);
    uint64_t v8 = a1;
    uint64_t v9 = a3;
    uint64_t v10 = 1LL;
  }

  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      return a1;
    }

    uint64_t v7 = type metadata accessor for PluginAction(0LL);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a1;
    uint64_t v9 = a3;
    uint64_t v10 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

uint64_t ContactNeedsValueGuardFlow.FlowState.description.getter(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000013LL;
  uint64_t v3 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_34_7(v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, a1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ExecutionPath.FallbackLocation, Parse));
      uint64_t v8 = OUTLINED_FUNCTION_4_3();
      OUTLINED_FUNCTION_2_0(v8);
      return 0x6F5472656665642ELL;
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
    return 0xD000000000000017LL;
  }

  return v2;
}

uint64_t destroy for ContactNeedsValueGuardFlow.FlowState(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    uint64_t v4 = type metadata accessor for Parse(0LL);
  }

  else
  {
    if ((_DWORD)result) {
      return result;
    }
    uint64_t v4 = type metadata accessor for PluginAction(0LL);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v2, v4);
}

uint64_t static ExecutionPath.choosePath(for:sharedGlobals:)(os_log_s *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  OUTLINED_FUNCTION_13_18(a1);
  if (!PhoneCallNLIntent.isEmergencyResourceCall()())
  {
    OUTLINED_FUNCTION_13_18(v3);
    if (PhoneCallNLIntent.isEmergencyCall()())
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v10 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v10, (uint64_t)static Logger.siriPhone);
      os_log_type_t v11 = OUTLINED_FUNCTION_41();
      if (!OUTLINED_FUNCTION_10(v11)) {
        goto LABEL_28;
      }
      uint64_t v12 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v12);
      uint64_t v15 = "#ExecutionPath: Parse should be routed for local execution for emergency calling";
    }

    else if ((static ExecutionPath.shouldRouteToLocalSearch(nlIntent:sharedGlobals:)(v3) & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v16 = OUTLINED_FUNCTION_15_1();
      uint64_t v3 = (os_log_s *)__swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v3);
      os_log_type_t v17 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v3, v17))
      {
        uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v18 = 0;
        OUTLINED_FUNCTION_5(&dword_0, v3, v17, "#ExecutionPath: should route to local search", v18);
        OUTLINED_FUNCTION_0_2((uint64_t)v18);
      }

      uint64_t v19 = static ExecutionPath.isCompositionFlowEnabled(sharedGlobals:)((void *)a2);
      if ((v19 & 1) != 0)
      {
        Logger.logObject.getter(v19);
        os_log_type_t v20 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_7(v20))
        {
          uint64_t v9 = 2LL;
          uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_1_0();
          *(_WORD *)uint64_t v21 = 0;
          OUTLINED_FUNCTION_5(&dword_0, v3, (os_log_type_t)v3, "#ExecutionPath: Returning BusinessComposition.", v21);
          OUTLINED_FUNCTION_0_2((uint64_t)v21);
        }

        else
        {

          return 2LL;
        }

        return v9;
      }

      uint64_t v25 = *(void *)(a2 + 24);
      uint64_t v26 = *(void *)(a2 + 32);
      __swift_project_boxed_opaque_existential_1((void *)a2, v25);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 8))(v33, v25, v26);
      uint64_t v27 = v34;
      uint64_t v28 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      a2 = dispatch thunk of DeviceState.isXRDevice.getter(v27, v28);
      uint64_t v29 = __swift_destroy_boxed_opaque_existential_1(v33);
      if ((a2 & 1) == 0) {
        return 0LL;
      }
      Logger.logObject.getter(v29);
      os_log_type_t v30 = OUTLINED_FUNCTION_41();
      if (!OUTLINED_FUNCTION_10(v30))
      {
LABEL_28:

        return 5LL;
      }

      uint64_t v31 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v31);
      uint64_t v15 = "#ExecutionPath: Returning .localExecution.";
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v22 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v22, (uint64_t)static Logger.siriPhone);
      os_log_type_t v23 = OUTLINED_FUNCTION_41();
      if (!OUTLINED_FUNCTION_10(v23)) {
        goto LABEL_28;
      }
      uint64_t v24 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v24);
      uint64_t v15 = "#ExecutionPath: Parse can be processed locally";
    }

    OUTLINED_FUNCTION_2_2(&dword_0, v13, v14, v15);
    OUTLINED_FUNCTION_0_2((uint64_t)v3);
    goto LABEL_28;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v4, (uint64_t)static Logger.siriPhone);
  os_log_type_t v5 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v5))
  {
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v6);
    OUTLINED_FUNCTION_2_2(&dword_0, v7, v8, "#ExecutionPath: Parse should be routed to emergency resource flow");
    OUTLINED_FUNCTION_0_2((uint64_t)v3);
  }

  return 4LL;
}

uint64_t static ExecutionPath.choosePath(for:sharedGlobals:)(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 72))(v4, v5);
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 120))(v35, v7, v8);
  (*(void (**)(void *__return_ptr, uint64_t, void *))(*(void *)v6 + 184LL))(v36, a1, v35);
  swift_release(v6);
  __swift_destroy_boxed_opaque_existential_1(v35);
  outlined init with copy of AnyPhoneNLIntent?((uint64_t)v36, (uint64_t)v30);
  if (v31)
  {
    uint64_t v9 = (os_log_s *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPhoneNLIntent);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    if ((swift_dynamicCast(&v32, v30, v9, v10, 6LL) & 1) != 0)
    {
      if (*((void *)&v33 + 1))
      {
        outlined init with take of AppSelectionSignalComponent(&v32, (uint64_t)v35);
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v11 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v11, (uint64_t)static Logger.siriPhone);
        os_log_type_t v12 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_7(v12))
        {
          uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_1_0();
          *(_WORD *)uint64_t v13 = 0;
          OUTLINED_FUNCTION_5( &dword_0,  v9,  (os_log_type_t)a1,  "#ExecutionPath successfully transformed parse to phoneCallNLIntent",  v13);
          OUTLINED_FUNCTION_0_2((uint64_t)v13);
        }

        uint64_t v14 = static ExecutionPath.choosePath(for:sharedGlobals:)((os_log_s *)v35, (uint64_t)v2);
        uint64_t v15 = __swift_destroy_boxed_opaque_existential_1(v35);
        OUTLINED_FUNCTION_12_18(v15, &demangling cache variable for type metadata for AnyPhoneNLIntent?);
        return v14;
      }
    }

    else
    {
      uint64_t v34 = 0LL;
      __int128 v32 = 0u;
      __int128 v33 = 0u;
    }
  }

  else
  {
    outlined destroy of SpeakableString?( (uint64_t)v30,  &demangling cache variable for type metadata for AnyPhoneNLIntent?);
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    uint64_t v34 = 0LL;
  }

  outlined destroy of SpeakableString?( (uint64_t)&v32,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  outlined init with copy of AnyPhoneNLIntent?((uint64_t)v36, (uint64_t)v35);
  if (v35[3])
  {
    uint64_t v2 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPhoneNLIntent);
    uint64_t v16 = type metadata accessor for PhoneCallControlNLIntent();
    if ((swift_dynamicCast(&v32, v35, v2, v16, 6LL) & 1) != 0)
    {
      swift_release(v32);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v17 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v17, (uint64_t)static Logger.siriPhone);
      os_log_type_t v18 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v18))
      {
        uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v19);
        OUTLINED_FUNCTION_0_2(a1);
      }

      OUTLINED_FUNCTION_12_18(v22, &demangling cache variable for type metadata for AnyPhoneNLIntent?);
      return 5LL;
    }
  }

  else
  {
    outlined destroy of SpeakableString?( (uint64_t)v35,  &demangling cache variable for type metadata for AnyPhoneNLIntent?);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
  os_log_type_t v24 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v24))
  {
    uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v25);
    OUTLINED_FUNCTION_2_2( &dword_0,  v26,  v27,  "#ExecutionPath: Could not create NL intent from current parse. We should reject this parse.");
    OUTLINED_FUNCTION_0_2(a1);
  }

  OUTLINED_FUNCTION_12_18(v28, &demangling cache variable for type metadata for AnyPhoneNLIntent?);
  return 3LL;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t EmergencyCountdownOutputBuilder.app.getter()
{
  return swift_retain(*v0);
}

uint64_t specialized SharedGlobalsProviding.callStateProvider.getter@<X0>(uint64_t *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  a1[3] = (uint64_t)&type metadata for CallStateProvider;
  a1[4] = (uint64_t)&protocol witness table for CallStateProvider;
  uint64_t v2 = swift_allocObject(&unk_419AC8, 80LL, 7LL);
  *a1 = v2;
  return outlined init with copy of CallStateProvider((uint64_t)static CallStateProvider.instance, v2 + 16);
}

uint64_t outlined init with copy of CallStateProvider(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for CallStateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  __int128 v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

void NLTransformer.transformToAnyPhoneNLIntent(parse:callStateProvider:)()
{
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  __int128 v7 = (os_log_s *)type metadata accessor for Parse(0LL);
  uint64_t v8 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_25_6();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_53_5();
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*v0 + 280LL))(v4);
  if (v13)
  {
    uint64_t v14 = v13;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
    uint64_t v16 = OUTLINED_FUNCTION_11_18((uint64_t)v0);
    Logger.logObject.getter(v16);
    os_log_type_t v17 = OUTLINED_FUNCTION_64_1();
    if (OUTLINED_FUNCTION_14_15(v17))
    {
      uint64_t v51 = v14;
      os_log_type_t v18 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v49 = OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&__int128 v55 = v49;
      *(_DWORD *)os_log_type_t v18 = 136315138;
      uint64_t v19 = v2[4];
      uint64_t v6 = v2[7];
      OUTLINED_FUNCTION_67_4();
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_66_2(v19);
      OUTLINED_FUNCTION_82_3();
      OUTLINED_FUNCTION_129();
      uint64_t v20 = v58[0];
      uint64_t v57 = OUTLINED_FUNCTION_29_9(v57, v21, (uint64_t *)&v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v18 + 4, v18 + 12);
      OUTLINED_FUNCTION_31_1((uint64_t)v2);
      uint64_t v22 = v20;
      uint64_t v14 = v51;
      swift_bridgeObjectRelease(v22);
      OUTLINED_FUNCTION_57_0(&dword_0, v7, (os_log_type_t)v11, "%s parse transformed to a call control NL intent", v18);
      OUTLINED_FUNCTION_17_0(v49);
      OUTLINED_FUNCTION_0_2(v49);
      OUTLINED_FUNCTION_0_2((uint64_t)v18);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v0);
    }

    *(void *)(v6 + 24) = type metadata accessor for PhoneCallControlNLIntent();
    *(void *)(v6 + 32) = &protocol witness table for PhoneCallControlNLIntent;
    *(void *)uint64_t v6 = v14;
  }

  else
  {
    (*(void (**)(__int128 *__return_ptr, uint64_t))(*v0 + 192LL))(&v55, v4);
    if (v56)
    {
      outlined init with take of AppSelectionSignalComponent(&v55, (uint64_t)&v57);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v23 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
      uint64_t v24 = OUTLINED_FUNCTION_11_18((uint64_t)v0);
      Logger.logObject.getter(v24);
      os_log_type_t v25 = OUTLINED_FUNCTION_64_1();
      if (OUTLINED_FUNCTION_14_15(v25))
      {
        uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v52 = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v54 = v52;
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v27 = v0[4];
        uint64_t v6 = v0[7];
        *(void *)&__int128 v55 = 0LL;
        *((void *)&v55 + 1) = 0xE000000000000000LL;
        swift_bridgeObjectRetain(v6);
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_66_2(v27);
        OUTLINED_FUNCTION_82_3();
        OUTLINED_FUNCTION_129();
        *(void *)&__int128 v55 = OUTLINED_FUNCTION_10_3(v55, v28, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, (char *)&v55 + 8, v26 + 4, v26 + 12);
        OUTLINED_FUNCTION_31_1((uint64_t)v0);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_57_0(&dword_0, v7, (os_log_type_t)v11, "%s parse transformed to a phone call NL Intent", v26);
        OUTLINED_FUNCTION_17_0(v52);
        OUTLINED_FUNCTION_0_2(v52);
        OUTLINED_FUNCTION_0_2((uint64_t)v26);
      }

      else
      {

        OUTLINED_FUNCTION_31_1((uint64_t)v0);
      }

      uint64_t v42 = v59;
      uint64_t v43 = v60;
      uint64_t v44 = __swift_project_boxed_opaque_existential_1(&v57, v59);
      *(void *)(v6 + 24) = v42;
      *(void *)(v6 + 32) = *(void *)(v43 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)v6);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16LL))( boxed_opaque_existential_1,  v44,  v42);
      __swift_destroy_boxed_opaque_existential_1(&v57);
    }

    else
    {
      outlined destroy of PhoneCallNLIntent?( (uint64_t)&v55,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v29 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_70_3(v29, (uint64_t)static Logger.siriPhone);
      os_log_type_t v30 = *(void (**)(uint64_t, uint64_t, os_log_s *))(v8 + 16);
      v30(v1, v4, v7);
      uint64_t v31 = OUTLINED_FUNCTION_11_18((uint64_t)v0);
      __int128 v32 = (os_log_s *)Logger.logObject.getter(v31);
      os_log_type_t v33 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v50 = OUTLINED_FUNCTION_7_0(64LL);
        *(void *)&__int128 v55 = v50;
        *(_DWORD *)uint64_t v34 = 136315394;
        uint64_t v46 = v2[4];
        os_log_type_t v48 = v32;
        uint64_t v47 = v30;
        uint64_t v35 = v2[5];
        uint64_t v36 = v2[6];
        uint64_t v53 = v6;
        uint64_t v37 = (void *)v2[7];
        OUTLINED_FUNCTION_67_4();
        swift_bridgeObjectRetain(v35);
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v46, v35, v36, v37);
        v38 = v37;
        uint64_t v6 = v53;
        swift_bridgeObjectRelease(v38);
        OUTLINED_FUNCTION_39();
        uint64_t v57 = OUTLINED_FUNCTION_29_9(v57, v39, (uint64_t *)&v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v34 + 4, v34 + 12);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_39();
        *(_WORD *)(v34 + 12) = 2080;
        v47(v11, v1, v7);
        uint64_t v40 = String.init(describing:)(v11);
        uint64_t v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, (uint64_t *)&v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v34 + 14, v34 + 22);
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
        __int128 v32 = v48;
        OUTLINED_FUNCTION_12_24();
        OUTLINED_FUNCTION_0_2(v50);
        OUTLINED_FUNCTION_0_2(v34);
      }

      else
      {
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      }

      *(void *)(v6 + 32) = 0LL;
      *(_OWORD *)uint64_t v6 = 0u;
      *(_OWORD *)(v6 + 16) = 0u;
    }
  }

  OUTLINED_FUNCTION_7_5();
}

void NLTransformer.transformToCallControlNLIntent(parse:)()
{
}

void PhoneCallControlNLTransformer.transformToCallControlNLIntent(parse:)(uint64_t a1)
{
  void (*v68)(uint64_t *__return_ptr, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  os_log_type_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  os_log_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_log_t v98;
  uint64_t v99;
  uint64_t v100;
  uint8_t *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v2);
  OUTLINED_FUNCTION_8();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  v101 = *(uint8_t **)(v6 - 8);
  v102 = v6;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  v99 = *(void *)(v11 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_8();
  v100 = v14 - v13;
  uint64_t v15 = (os_log_s *)type metadata accessor for Parse(0LL);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = __chkstk_darwin(v15);
  v98 = (os_log_t)((char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v91 - v19;
  uint64_t v21 = type metadata accessor for USOParse(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_8();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = *(void (**)(os_log_t, uint64_t, os_log_s *))(v16 + 16);
  v97 = a1;
  uint64_t v27 = a1;
  uint64_t v28 = v26;
  v26((os_log_t)v20, v27, v15);
  if ((*(unsigned int (**)(char *, os_log_s *))(v16 + 88))(v20, v15) == enum case for Parse.uso(_:))
  {
    v94 = v16;
    OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96));
    v95 = v21;
    v96 = v22;
    uint64_t v29 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v20, v21);
    uint64_t v30 = USOParse.userParse.getter(v29);
    Siri_Nlu_External_UserParse.userDialogActs.getter(v30);
    (*((void (**)(uint64_t, uint64_t))v101 + 1))(v10, v102);
    specialized Collection.first.getter();
    OUTLINED_FUNCTION_62();
    if (__swift_getEnumTagSinglePayload(v5, 1LL, v11) == 1)
    {
      outlined destroy of Siri_Nlu_External_UserDialogAct?(v5);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v31 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v31, (uint64_t)static Logger.siriPhone);
      v28(v98, v97, v15);
      __int128 v32 = v103;
      uint64_t v33 = OUTLINED_FUNCTION_11_18((uint64_t)v103);
      uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
      os_log_type_t v35 = static os_log_type_t.error.getter();
      int v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v37 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v38 = OUTLINED_FUNCTION_7_0(64LL);
        v101 = (uint8_t *)v38;
        *(_DWORD *)uint64_t v37 = 136315394;
        v99 = v37 + 4;
        uint64_t v39 = v32[7];
        uint64_t v40 = v32[8];
        v102 = v25;
        uint64_t v41 = v32[9];
        uint64_t v42 = (void *)v32[10];
        v104 = 0LL;
        v105 = 0xE000000000000000LL;
        v106 = v38;
        swift_bridgeObjectRetain(v42);
        OUTLINED_FUNCTION_36_1();
        LODWORD(v100) = v36;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v39, v40, v41, v42);
        swift_bridgeObjectRelease(v42);
        OUTLINED_FUNCTION_129();
        v104 = OUTLINED_FUNCTION_24_7();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v99, v37 + 12);
        OUTLINED_FUNCTION_31_1((uint64_t)v32);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v37 + 12) = 2080;
        Swift::String v43 = Parse.typeForLogging()();
        uint64_t v44 = OUTLINED_FUNCTION_34_10(v43._countAndFlagsBits, (unint64_t)v43._object);
        OUTLINED_FUNCTION_18_13(v44, v45, v46, v37 + 22);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_17_17();
        _os_log_impl( &dword_0,  v34,  (os_log_type_t)v100,  "%s %s: No user dialog act found in userParse.",  (uint8_t *)v37,  0x16u);
        uint64_t v47 = (uint64_t)v101;
        swift_arrayDestroy(v101, 2LL);
        OUTLINED_FUNCTION_0_2(v47);
        OUTLINED_FUNCTION_0_2(v37);

LABEL_18:
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v102, v95);
        goto LABEL_19;
      }

      OUTLINED_FUNCTION_17_17();
      OUTLINED_FUNCTION_31_1((uint64_t)v32);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v25, v95);
    }

    else
    {
      uint64_t v59 = v11;
      uint64_t v61 = v99;
      uint64_t v60 = v100;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v100, v5, v59);
      v62 = v103;
      uint64_t v63 = v103 + 2;
      uint64_t v64 = v103[5];
      uint64_t v65 = v103[6];
      __swift_project_boxed_opaque_existential_1(v103 + 2, v64);
      if (!(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v60, v64, v65))
      {
        uint64_t v66 = v95;
        if (one-time initialization token for transformer != -1) {
          swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
        }
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<Siri_Nlu_External_UserDialogAct, UserDialogActParse>);
        __swift_project_value_buffer(v67, (uint64_t)&static Transformer<>.transformer);
        uint64_t v68 = (void (*)(uint64_t *__return_ptr, uint64_t))Transformer.transform.getter(v67);
        uint64_t v70 = v69;
        v68(&v104, v60);
        swift_release(v70);
        swift_bridgeObjectRelease(v105);
        uint64_t v71 = OUTLINED_FUNCTION_25_1();
        PhoneCallControlNLTransformer.transformToCallControlNLIntent(usoTask:)(v71);
        uint64_t v73 = v72;
        OUTLINED_FUNCTION_16_3();
        if (v73)
        {
          v102 = v25;
          uint64_t v74 = v62[5];
          uint64_t v75 = v62[6];
          __swift_project_boxed_opaque_existential_1(v63, v74);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 8))(v60, v73, v74, v75);
          OUTLINED_FUNCTION_16_3();
          OUTLINED_FUNCTION_4_18();
          (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v102, v95);
          goto LABEL_19;
        }

        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v76 = OUTLINED_FUNCTION_15_1();
        uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)static Logger.siriPhone);
        v78 = OUTLINED_FUNCTION_11_18((uint64_t)v62);
        Logger.logObject.getter(v78);
        uint64_t v79 = OUTLINED_FUNCTION_41();
        if (!OUTLINED_FUNCTION_10(v79))
        {
          OUTLINED_FUNCTION_31_1((uint64_t)v62);

          OUTLINED_FUNCTION_16_3();
          OUTLINED_FUNCTION_4_18();
          (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v25, v66);
          goto LABEL_19;
        }

        v98 = (os_log_t)v63;
        uint64_t v80 = OUTLINED_FUNCTION_7_0(12LL);
        LODWORD(v94) = v77;
        v81 = (uint8_t *)v80;
        v82 = OUTLINED_FUNCTION_7_0(32LL);
        v97 = v82;
        v101 = (uint8_t *)v59;
        v102 = v25;
        *(_DWORD *)v81 = 136315138;
        v92 = v81 + 4;
        v93 = v81;
        v84 = v62[7];
        v83 = v62[8];
        v85 = v62[9];
        v86 = (void *)v62[10];
        OUTLINED_FUNCTION_19_10(v82);
        swift_bridgeObjectRetain(v83);
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v84, v83, v85, v86);
        OUTLINED_FUNCTION_70_2();
        OUTLINED_FUNCTION_39();
        v104 = OUTLINED_FUNCTION_29_9(v104, v87, &v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v92, v81 + 12);
        OUTLINED_FUNCTION_31_1((uint64_t)v62);
        OUTLINED_FUNCTION_39();
        v88 = v98;
        v89 = v93;
        v90 = v97;
        swift_arrayDestroy(v97, 1LL);
        OUTLINED_FUNCTION_0_2(v90);
        OUTLINED_FUNCTION_0_2((uint64_t)v89);

        OUTLINED_FUNCTION_16_3();
        (*(void (**)(uint64_t, uint8_t *))(v61 + 8))(v100, v101);
        goto LABEL_18;
      }

      OUTLINED_FUNCTION_4_18();
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v25, v95);
    }
  }

  else
  {
    OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v48 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v48, (uint64_t)static Logger.siriPhone);
    uint64_t v49 = v103;
    uint64_t v50 = OUTLINED_FUNCTION_11_18((uint64_t)v103);
    Logger.logObject.getter(v50);
    os_log_type_t v51 = OUTLINED_FUNCTION_41();
    if (os_log_type_enabled(v15, v51))
    {
      uint64_t v52 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v53 = OUTLINED_FUNCTION_7_0(32LL);
      v102 = v53;
      *(_DWORD *)uint64_t v52 = 136315138;
      v101 = v52 + 4;
      uint64_t v54 = v49[7];
      uint64_t v55 = v49[8];
      uint64_t v56 = v49[9];
      uint64_t v57 = (void *)v49[10];
      OUTLINED_FUNCTION_19_10(v53);
      OUTLINED_FUNCTION_36_1();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v54, v55, v56, v57);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_129();
      v104 = OUTLINED_FUNCTION_24_7();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v101, v52 + 12);
      OUTLINED_FUNCTION_31_1((uint64_t)v49);
      OUTLINED_FUNCTION_62();
      _os_log_impl( &dword_0,  v15,  v51,  "%s only USO parses are supported for call controls. This is not a call controls parse.",  v52,  0xCu);
      uint64_t v58 = v102;
      swift_arrayDestroy(v102, 1LL);
      OUTLINED_FUNCTION_0_2(v58);
      OUTLINED_FUNCTION_0_2((uint64_t)v52);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v49);
    }
  }

LABEL_19:
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_58();
  return result;
}

    uint64_t v10 = (v15 - 1) & v15;
    uint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    if (*(double *)(*(void *)(a3 + 56) + 8 * v13) > a4)
    {
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v13;
      if (__OFADD__(v5++, 1LL))
      {
        __break(1u);
LABEL_24:
        specialized _NativeDictionary.extractDictionary(using:count:)(a1, a2, v5);
        return;
      }
    }
  }

  uint64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  uint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    uint64_t v6 = v16;
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    uint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }

    return;
  }

  uint64_t v14 = (uint64_t *)(a3 + 16 * a4);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  uint64_t v17 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000LL) == 0) {
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
LABEL_15:
    if (one-time initialization token for siriPhone == -1) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }

  uint64_t v18 = v5;
  swift_bridgeObjectRetain_n(v15, 2LL);
  if (!objc_msgSend(v5, "respondsToSelector:", Selector.init(_:)(v16, v15)))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }

  if (__OFSUB__(v6, a4))
  {
    __break(1u);
  }

  else
  {
    if (v6 - a4 == 1)
    {
      uint64_t v22 = a1[3];
      uint64_t v23 = __swift_project_boxed_opaque_existential_1(a1, v22);
      uint64_t v24 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v22);
      oslog = (os_log_s *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v18 setValue:v24 forKey:oslog];
      swift_unknownObjectRelease(v24);
      goto LABEL_19;
    }

    osloga = (os_log_t)String._bridgeToObjectiveC()();
    uint64_t v27 = [v5 valueForKey:osloga];

    if (v27)
    {
      _bridgeAnyObjectToAny(_:)(v39, v27);
      swift_unknownObjectRelease(v27);
    }

    else
    {
      memset(v39, 0, sizeof(v39));
    }

    outlined init with take of Any?((uint64_t)v39, (uint64_t)v40);
    if (v41)
    {
      uint64_t v28 = type metadata accessor for NSObject();
      if ((swift_dynamicCast(&v38, v40, (char *)&type metadata for Any + 8, v28, 6LL) & 1) != 0)
      {
        uint64_t v29 = v38;
        uint64_t v30 = specialized ArraySlice.subscript.getter(a4 + 1, v6, a2, a3, a4, a5);
        NSObject.update(with:at:)(a1, v30, v31, v32, v33);
        uint64_t v34 = v29;
        os_log_type_t v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v18 setValue:v34 forKey:v35];
        swift_unknownObjectRelease(v30);
      }

      else
      {
        swift_bridgeObjectRelease();
      }
    }

    else
    {
      swift_bridgeObjectRelease();
      outlined destroy of Any?((uint64_t)v40);
    }
  }

  uint64_t result = swift_bridgeObjectRelease();
  if (!(_DWORD)v17)
  {
LABEL_10:
    if (!v18) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  uint64_t v15 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v18 = 0LL;
LABEL_20:
  *a3 = v15;
  a3[1] = v14;
  a3[2] = v17;
  a3[3] = v16;
  a3[4] = v19;
  a3[5] = v18;
}

    uint64_t v8 = (v13 - 1) & v13;
    uint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_20:
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = closure #1 in static Transformer<>.findSmsChatIdsToRemove(_:)(v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
      *(void *)(a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v11;
      if (__OFADD__(v23++, 1LL))
      {
        __break(1u);
LABEL_24:
        specialized _NativeDictionary.extractDictionary(using:count:)(a1, a2, v23);
        return;
      }
    }
  }

  uint64_t v14 = v12 + 3;
  if (v14 >= v9) {
    goto LABEL_24;
  }
  uint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    uint64_t v4 = v14;
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_24;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }

    OUTLINED_FUNCTION_4_1();
    return;
  }

  uint64_t v5 = v3 & 0xC000000000000001LL;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v3 & 0xC000000000000001LL) == 0, v3);
  if ((v3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_0_66();
    uint64_t v1 = v6;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_2_57();
  }

  dispatch thunk of SiriKitDisambiguationItem.getThirdComponent()(v6);
  OUTLINED_FUNCTION_31_21();
  if (v1
    || (!v5 ? (uint64_t v7 = OUTLINED_FUNCTION_2_57()) : (uint64_t v7 = OUTLINED_FUNCTION_0_66(), v1 = v7),
        dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()(v7),
        OUTLINED_FUNCTION_31_21(),
        v1))
  {
    OUTLINED_FUNCTION_50();
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v14 = OUTLINED_FUNCTION_0_47(v13);
    *(_OWORD *)(v14 + 16) = xmmword_31D870;
    *(void *)(v14 + 32) = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)(v22 & 1);
    *(void *)(v14 + 40) = v15;
    OUTLINED_FUNCTION_38_1();
  }

  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v17 = OUTLINED_FUNCTION_0_47(v16);
    *(_OWORD *)(v17 + 16) = xmmword_31D870;
    if (v5) {
      OUTLINED_FUNCTION_0_66();
    }
    else {
      swift_retain();
    }
    OUTLINED_FUNCTION_50();
    uint64_t v18 = dispatch thunk of SiriKitDisambiguationItem.toSpokenString(deviceLocked:)(v22 & 1);
    uint64_t v20 = v19;
    OUTLINED_FUNCTION_38_1();
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v20;
  }

      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      uint64_t v17 = _swiftEmptyArrayStorage[2];
      if (v17 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v17 + 1;
      uint64_t v18 = &_swiftEmptyArrayStorage[2 * v17];
      v18[4] = v8;
      v18[5] = v10;
      a2 = v22;
    }

    while (v5 != v4);
  }

  OUTLINED_FUNCTION_23_32();
  if (!v45) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v56 = OUTLINED_FUNCTION_15_1();
  v82 = OUTLINED_FUNCTION_60_16(v56, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v82);
  uint64_t v57 = OUTLINED_FUNCTION_41();
  if (!OUTLINED_FUNCTION_87(v57))
  {

    OUTLINED_FUNCTION_1_2(v82);
    return;
  }

  uint64_t v58 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
  uint64_t v59 = (void *)OUTLINED_FUNCTION_7_0(8LL);
  *uint64_t v58 = 138412290;
  v83 = v82;
  uint64_t v60 = v82;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v58 + 1, v58 + 3);
  *uint64_t v59 = v82;

  OUTLINED_FUNCTION_9_4(&dword_0, v61, v62, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@");
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
  OUTLINED_FUNCTION_17_0((uint64_t)v59);
  OUTLINED_FUNCTION_0_2((uint64_t)v59);
  OUTLINED_FUNCTION_0_2((uint64_t)v58);

LABEL_25:
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_98_0();
  OUTLINED_FUNCTION_23_13();
}

  uint64_t v52 = OUTLINED_FUNCTION_46_7(v48, "unsupportedReason");
  if ((id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v52)
  {
    OUTLINED_FUNCTION_8_26();
    uint64_t v54 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v53 + 1600);
LABEL_21:
    OUTLINED_FUNCTION_165_4(v54);
    OUTLINED_FUNCTION_1_2(v145);
    return;
  }

  switch((unint64_t)v52)
  {
    case 2uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v54 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v55 + 1664);
      goto LABEL_21;
    case 3uLL:
      uint64_t v22 = specialized static PhoneStartCallIntent.makeForSlotTemplating(intent:isRelationshipRequest:)(v29, 0);
      if (v145
        && (uint64_t v57 = [v145 personHandle]) != 0
        && (uint64_t v58 = v57, v59 = [v57 label], v58, v59))
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
        OUTLINED_FUNCTION_16_34();
        OUTLINED_FUNCTION_8_1();
        uint64_t v60 = v140;
        OUTLINED_FUNCTION_1_34(v31, (uint64_t)v58);
        uint64_t v61 = OUTLINED_FUNCTION_26_0();
        __swift_storeEnumTagSinglePayload(v60, 0LL, 1LL, v61);
        OUTLINED_FUNCTION_39();
      }

      else
      {
        v84 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1(v140, v85, v86, v84);
      }

      v87 = *(void *)(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts);
      if (!v87) {
        goto LABEL_68;
      }
      v88 = *(void *)(v87 + 24);
      if (v88 >> 62)
      {
        OUTLINED_FUNCTION_8_1();
        v90 = OUTLINED_FUNCTION_61_1();
        if (v90) {
          goto LABEL_51;
        }
LABEL_67:
        OUTLINED_FUNCTION_39();
LABEL_68:
        v92 = 0LL;
        goto LABEL_69;
      }

      v89 = *(void *)((char *)&dword_10 + (v88 & 0xFFFFFFFFFFFFF8LL));
      v90 = OUTLINED_FUNCTION_8_1();
      if (!v89) {
        goto LABEL_67;
      }
LABEL_51:
      OUTLINED_FUNCTION_6_7(v90, (v88 & 0xC000000000000001LL) == 0);
      if ((v88 & 0xC000000000000001LL) != 0) {
        goto LABEL_92;
      }
      OUTLINED_FUNCTION_210_1();
LABEL_53:
      v91 = OUTLINED_FUNCTION_39();
      v92 = DialogPerson.personHandle.getter(v91);
      OUTLINED_FUNCTION_38_1();
LABEL_69:
      specialized INPersonContainingIntent.hasSiriMatches.getter();
      v138 = v92;
      if ((v115 & 1) != 0)
      {
        if (v145)
        {
          v116 = [v145 siriMatches];
          if (!v116) {
            goto LABEL_80;
          }
          v117 = OUTLINED_FUNCTION_68();
          v118 = OUTLINED_FUNCTION_106_14(v117);

          if (v118 >> 62)
          {
            OUTLINED_FUNCTION_6_3();
            v116 = (id)OUTLINED_FUNCTION_15_4();
            v119 = OUTLINED_FUNCTION_62();
            if (v116) {
              goto LABEL_74;
            }
          }

          else
          {
            v116 = *(id *)((char *)&dword_10 + (v118 & 0xFFFFFFFFFFFFF8LL));
            if (v116)
            {
LABEL_74:
              OUTLINED_FUNCTION_17_40(v119, (v118 & 0xC000000000000001LL) == 0);
              if ((v118 & 0xC000000000000001LL) != 0) {
                v120 = OUTLINED_FUNCTION_38_3();
              }
              else {
                v120 = (uint64_t)OUTLINED_FUNCTION_31_24();
              }
              v116 = (id)v120;
            }
          }

          OUTLINED_FUNCTION_62();
          goto LABEL_80;
        }

        v116 = 0LL;
      }

      else
      {
        v121 = v145;
        v116 = v145;
      }

  uint64_t v30 = [a4 unsupportedReason];
  if ((id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v30)
  {
    (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                             + **(void **)(v120 + 40)
                                             + 1600))( v119,  a9);
    goto LABEL_98;
  }

  switch((unint64_t)v30)
  {
    case 2uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)(v120 + 40)
                                               + 1664))( v119,  a9);
      goto LABEL_98;
    case 3uLL:
      uint64_t v9 = specialized static PhoneStartCallIntent.makeForSlotTemplating(intent:isRelationshipRequest:)(a5, 0);
      if (v121
        && (uint64_t v31 = [v121 personHandle]) != 0
        && (__int128 v32 = v31, v33 = [v31 label], v32, v33)
        && (uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33), v36 = v35, v33, v36))
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = v116;
        SpeakableString.init(print:speak:)(v34, v36, 0LL, 0LL);
        uint64_t v38 = type metadata accessor for SpeakableString(0LL);
        __swift_storeEnumTagSinglePayload(v37, 0LL, 1LL, v38);
        swift_bridgeObjectRelease();
      }

      else
      {
        uint64_t v57 = type metadata accessor for SpeakableString(0LL);
        __swift_storeEnumTagSinglePayload(v116, 1LL, 1LL, v57);
      }

      uint64_t v58 = *(void *)(v9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts);
      if (!v58) {
        goto LABEL_76;
      }
      uint64_t v41 = *(void *)(v58 + 24);
      if ((unint64_t)v41 >> 62)
      {
        if (v41 < 0) {
          v87 = *(void *)(v58 + 24);
        }
        else {
          v87 = v41 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter(v87)) {
          goto LABEL_52;
        }
LABEL_75:
        swift_bridgeObjectRelease();
LABEL_76:
        v62 = 0LL;
        goto LABEL_77;
      }

      uint64_t v59 = *(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain();
      if (!v59) {
        goto LABEL_75;
      }
LABEL_52:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v41 & 0xC000000000000001LL) == 0, v41);
      if ((v41 & 0xC000000000000001LL) != 0) {
        goto LABEL_100;
      }
      uint64_t v60 = *(void *)(v41 + 32);
      swift_retain();
LABEL_54:
      uint64_t v61 = swift_bridgeObjectRelease();
      v62 = DialogPerson.personHandle.getter(v61);
      swift_release(v60);
LABEL_77:
      specialized INPersonContainingIntent.hasSiriMatches.getter((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter);
      v114 = v62;
      if ((v88 & 1) != 0)
      {
        if (v121)
        {
          v89 = [v121 siriMatches];
          if (!v89) {
            goto LABEL_88;
          }
          v90 = type metadata accessor for INPerson();
          v91 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v89, v90);

          if ((unint64_t)v91 >> 62)
          {
            if (v91 < 0) {
              v111 = v91;
            }
            else {
              v111 = v91 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain();
            v89 = (id)_CocoaArrayWrapper.endIndex.getter(v111);
            swift_bridgeObjectRelease();
            if (!v89) {
              goto LABEL_85;
            }
          }

          else
          {
            v89 = *(id *)((char *)&dword_10 + (v91 & 0xFFFFFFFFFFFFF8LL));
            if (!v89)
            {
LABEL_85:
              swift_bridgeObjectRelease();
              goto LABEL_88;
            }
          }

          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v91 & 0xC000000000000001LL) == 0, v91);
          if ((v91 & 0xC000000000000001LL) != 0) {
            v92 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v91);
          }
          else {
            v92 = *(id *)(v91 + 32);
          }
          v89 = v92;
          goto LABEL_85;
        }

        v89 = 0LL;
      }

      else
      {
        v93 = v121;
        v89 = v121;
      }

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

void specialized Collection.first.getter(uint64_t a1)
{
  uint64_t v2 = specialized Dictionary.startIndex.getter(a1);
  if ((v4 & 1) != 0) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }

  if (v2 == 1LL << *(_BYTE *)(a1 + 32)) {
    OUTLINED_FUNCTION_19_1();
  }
  else {
    specialized Dictionary.subscript.getter(&v5, v2, v3, 0LL, a1);
  }
}

uint64_t specialized Collection.first.getter()
{
  return specialized Collection.first.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v3 = OUTLINED_FUNCTION_73_0();
  uint64_t v5 = v4(v3);
  uint64_t v6 = v5;
  if (v2)
  {
    OUTLINED_FUNCTION_71_1( v1 + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL)),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL));
    uint64_t v7 = 0LL;
  }

  else
  {
    uint64_t v7 = 1LL;
  }

  return OUTLINED_FUNCTION_32_6(v0, v7, 1LL, v6);
}

{
  return specialized Collection.first.getter();
}

{
  return specialized Collection.first.getter();
}

{
  return specialized Collection.first.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v3 = OUTLINED_FUNCTION_73_0();
  char v4 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(v3);
  uint64_t v5 = v4;
  if (v2)
  {
    uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80LL);
    outlined init with copy of DisambiguationItemWithDirectInvocationModel(v1 + ((v6 + 32) & ~v6), v0);
    uint64_t v7 = 0LL;
  }

  else
  {
    uint64_t v7 = 1LL;
  }

  return OUTLINED_FUNCTION_32_6(v0, v7, 1LL, v5);
}

{
  return specialized Collection.first.getter();
}

{
  return specialized Collection.first.getter();
}

{
  return specialized Collection.first.getter();
}

{
  return specialized Collection.first.getter();
}

{
  return specialized Collection.first.getter();
}

double specialized Collection.first.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    OUTLINED_FUNCTION_75_0(a1 + 32, a2);
  }

  else
  {
    *(void *)(a2 + 32) = 0LL;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }

  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

uint64_t protocol witness for IntentCacheProviding.getCachedIntent(matching:) in conformance SingleIntentCacheProvider()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152LL))();
}

uint64_t SingleIntentCacheProvider.getCachedIntent(matching:)()
{
  if (Siri_Nlu_External_UserDialogAct.hashValue.getter() == *(void *)(v0 + 16)) {
    return swift_retain(*(void *)(v0 + 24));
  }
  else {
    return 0LL;
  }
}

void static Signpost.begin(_:)()
{
  __int16 v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_11_44();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v34 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - v14;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_6_49();
  __swift_project_value_buffer(v16, (uint64_t)static OSSignposter.siriPhone);
  OUTLINED_FUNCTION_32_22();
  uint64_t v17 = OUTLINED_FUNCTION_30_21();
  uint64_t v18 = (void *)OSSignposter.logHandle.getter(v17);
  int v40 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
  {

    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
LABEL_19:
    OUTLINED_FUNCTION_40_15((uint64_t)v10, v19);
    uint64_t v33 = OUTLINED_FUNCTION_36_16();
    OUTLINED_FUNCTION_15_2(v33);
    OUTLINED_FUNCTION_10_44();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v38 = v5;
  uint64_t v39 = v3;
  os_log_t v36 = (os_log_t)v18;
  uint64_t v37 = v10;
  if ((v1 & 1) == 0)
  {
    if (v5)
    {
      uint64_t v34 = v5;
LABEL_12:
      os_log_type_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      OUTLINED_FUNCTION_40_15((uint64_t)v13, v35);
      uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v21 = OUTLINED_FUNCTION_7_0(32LL);
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v41 = v21;
      if ((v1 & 0x100) != 0) {
        uint64_t v22 = " enableTelemetry=YES";
      }
      else {
        uint64_t v22 = "";
      }
      if ((v1 & 0x100) != 0) {
        uint64_t v23 = 20LL;
      }
      else {
        uint64_t v23 = 0LL;
      }
      uint64_t v24 = OUTLINED_FUNCTION_17_36((uint64_t)v22, v23);
      unint64_t v26 = v25;
      uint64_t v27 = OUTLINED_FUNCTION_16_30(v24, v25);
      uint64_t v28 = OUTLINED_FUNCTION_15_15(v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v28, v29, v20 + 4, v20 + 12);
      uint64_t v30 = swift_bridgeObjectRelease(v26);
      os_signpost_id_t v31 = OSSignpostID.rawValue.getter(v30);
      os_log_t v32 = v36;
      _os_signpost_emit_with_name_impl(&dword_0, v36, (os_signpost_type_t)v40, v31, v34, "%s", v20, 0xCu);
      OUTLINED_FUNCTION_17_0(v21);
      OUTLINED_FUNCTION_0_2(v21);
      OUTLINED_FUNCTION_0_2((uint64_t)v20);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v19 = v35;
      uint64_t v10 = v37;
      goto LABEL_19;
    }

    __break(1u);
    goto LABEL_21;
  }

  if ((unint64_t)v5 >> 32)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  if (v5 >> 11 != 27)
  {
    if (v5 >> 16 <= 0x10)
    {
      uint64_t v34 = (const char *)&v42;
      goto LABEL_12;
    }

    goto LABEL_22;
  }

LABEL_23:
  __break(1u);
}

  OUTLINED_FUNCTION_12_48(v1);
  OUTLINED_FUNCTION_12_48(v5);
  __break(1u);
}

  swift_bridgeObjectRelease(a1);
  uint64_t v22 = 0LL;
LABEL_24:
  swift_bridgeObjectRelease(v7);
  return v22;
}

  uint64_t v19 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  uint64_t v20 = (uint64_t *)(*(void *)(v19 + 48) + 16 * a3);
  *uint64_t v20 = v8;
  v20[1] = a2;
  uint64_t v21 = *(void *)(v19 + 16);
  uint64_t v22 = __OFADD__(v21, 1LL);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_26:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
    double result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
    __break(1u);
  }

  else
  {
    *(void *)(v19 + 16) = v23;
  }

  return result;
}

    uint64_t v11 = (v17 - 1) & v17;
  }

  uint64_t v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_35:
    double result = swift_release(v3);
    uint64_t v2 = v28;
    goto LABEL_37;
  }

  uint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    uint64_t v7 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_35;
    }
    uint64_t v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

    uint64_t v10 = (v17 - 1) & v17;
  }

  uint64_t v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_35:
    double result = swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_37;
  }

  uint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    uint64_t v13 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_35;
    }
    uint64_t v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

    uint64_t v9 = (v16 - 1) & v16;
  }

  uint64_t v17 = v15 + 3;
  if (v17 >= v33)
  {
LABEL_35:
    double result = swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_37;
  }

  uint64_t v16 = *(void *)(v32 + 8 * v17);
  if (v16)
  {
    uint64_t v12 = v17;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v12 >= v33) {
      goto LABEL_35;
    }
    uint64_t v16 = *(void *)(v32 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }

    uint64_t v53 = v25;
    uint64_t v54 = (v24 - 1) & v24;
  }

  unint64_t v26 = v21 + 4;
  if (v21 + 4 >= v51)
  {
LABEL_38:
    double result = swift_release_n(v11, 2LL);
    uint64_t v2 = v47;
    goto LABEL_40;
  }

  uint64_t v24 = *(void *)(v50 + 8 * v26);
  if (v24)
  {
    unint64_t v25 = v21 + 4;
    goto LABEL_23;
  }

  while (1)
  {
    unint64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1LL)) {
      break;
    }
    if (v25 >= v51) {
      goto LABEL_38;
    }
    uint64_t v24 = *(void *)(v50 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_23;
    }
  }

      uint64_t v10 = (v18 - 1) & v18;
    }
  }

  double result = swift_release(v3);
  void *v2 = v6;
  return result;
}

    uint64_t v10 = (v16 - 1) & v16;
    uint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = v9[5];
    uint64_t v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    double result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1LL << *((_BYTE *)v9 + 32);
    uint64_t v21 = result & ~v20;
    uint64_t v22 = v21 >> 6;
    if (((-1LL << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) == 0)
    {
      uint64_t v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        unint64_t v26 = v22 == v25;
        if (v22 == v25) {
          uint64_t v22 = 0LL;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
        if (v27 != -1)
        {
          uint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }

      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    uint64_t v23 = __clz(__rbit64((-1LL << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1LL)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }

  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_35;
  }
  uint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_35;
    }
    uint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }

      __break(1u);
      goto LABEL_24;
    }

    __break(1u);
    goto LABEL_23;
  }

  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }

  if (a4 < 0) {
    uint64_t v8 = a4;
  }
  else {
    uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v9 = __CocoaSet.element(at:)(a1, a2, v8);
  uint64_t v19 = v9;
  type metadata accessor for INPlayVoicemailIntent( 0LL,  &lazy cache variable for type metadata for TUHandle,  &OBJC_CLASS___TUHandle_ptr);
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v20, &v19, (char *)&type metadata for Swift.AnyObject + 8);
  swift_unknownObjectRelease(v9);
}

  OUTLINED_FUNCTION_7_4(v1);
  __break(1u);
}

  __break(1u);
}

    uint64_t v66 = *(void *)(v1 + 112);
    uint64_t v68 = *(void *)(v1 + 88);
    uint64_t v67 = *(void *)(v1 + 96);
    v106 = 0u;
    v107 = 0u;
    IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v106, v104, v68);
LABEL_24:
    uint64_t v69 = static DisambiguationResult.chosenItem(_:)(v66, v67);
    OUTLINED_FUNCTION_31_29(v69, v70, v71, v72, v73, v74, v75, v76, v92, v95, v97, v99, ata, v104);
    OUTLINED_FUNCTION_18_43();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  atb = v11;
  uint64_t v60 = *(void *)(v1 + 88);
  uint64_t v61 = *(void *)(swift_getAssociatedConformanceWitness(*(void *)(v1 + 72), *(void *)(v1 + 80), v60) + 8);
  *(void *)(v1 + 168) = v61;
  v62 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8);
  *(void *)(v1 + 176) = v62;
  outlined copy of ContactDisambiguationPromptResponse(v46, 1u);
  uint64_t v63 = v62(v60, v61);
  if (v63) {
    uint64_t v64 = v63;
  }
  else {
    uint64_t v64 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v64 >> 62)
  {
    if (v64 < 0) {
      v90 = v64;
    }
    else {
      v90 = v64 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v65 = _CocoaArrayWrapper.endIndex.getter(v90);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v65 = *(void *)((char *)&dword_10 + (v64 & 0xFFFFFFFFFFFFF8LL));
  }

  OUTLINED_FUNCTION_62();
  if (atb >= v65) {
    INPersonContainingIntent.appendContact(person:)((INPerson)v46);
  }
  else {
    INPersonContainingIntent.replaceContact(at:person:)(atb, (INPerson)v46);
  }
  v78 = v104;
  uint64_t v79 = (os_log_s *)OUTLINED_FUNCTION_23_34();
  v81 = static os_log_type_t.debug.getter(v79, v80);
  if (os_log_type_enabled(v79, v81))
  {
    v93 = *(void *)(v1 + 88);
    v82 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    v105 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)&v106 = v105;
    *(_DWORD *)v82 = 136315138;
    v62(v93, v61);
    v83 = OUTLINED_FUNCTION_68();
    v84 = OUTLINED_FUNCTION_14_43(v83);
    v86 = v85;
    OUTLINED_FUNCTION_62();
    *(void *)(v1 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v86, (uint64_t *)&v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v82 + 4);
    OUTLINED_FUNCTION_4_1();

    OUTLINED_FUNCTION_57_0( &dword_0,  v79,  v81,  "#ContactNeedsDisambiguationFlowStrategy contacts after user disambiguated: %s",  v82);
    OUTLINED_FUNCTION_17_0(v105);
    OUTLINED_FUNCTION_0_2(v105);
    OUTLINED_FUNCTION_0_2((uint64_t)v82);
  }

  else
  {
  }

  v87 = ParameterResolutionRecord.app.getter(v97);
  *(void *)(v1 + 184) = v87;
  v88 = (void *)swift_task_alloc(dword_435B14);
  *(void *)(v1 + 192) = v88;
  *v88 = v1;
  v88[1] = ContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:);
  return ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:)( (uint64_t)v46,  (uint64_t)v78,  v87,  atb);
}

  OUTLINED_FUNCTION_39();
LABEL_24:
  OUTLINED_FUNCTION_34_0();
LABEL_25:
  OUTLINED_FUNCTION_16();
}

        __break(1u);
        goto LABEL_24;
      }

      if (EnumCaseMultiPayload == 5)
      {
        os_log_type_t v35 = *(void *)(v0 + 56);
        os_log_t v36 = (*(uint64_t (**)(void, uint64_t, void))(*(void *)(v0 + 136) + 16LL))( *(void *)(v0 + 152),  v32,  *(void *)(v0 + 128));
        uint64_t v37 = *(uint64_t (**)(void))(*(void *)v35 + 160LL);
        ((void (*)(uint64_t))v37)(v36);
        uint64_t v38 = *(void *)(v37() + 16);
        OUTLINED_FUNCTION_39();
        uint64_t v39 = OUTLINED_FUNCTION_34_0();
        int v40 = ((uint64_t (*)(uint64_t))v37)(v39);
        if (v38)
        {
          if (v38 <= *(void *)(v40 + 16))
          {
            uint64_t v41 = v40 + 32 * v38;
            *(void *)(v0 + 256) = *(void *)(v41 + 8);
            *(void *)(v0 + 264) = *(void *)(v41 + 24);
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_59();
            OUTLINED_FUNCTION_62();
            uint64_t v42 = (void *)OUTLINED_FUNCTION_69_22();
            *(void *)(v0 + 272) = v42;
            *uint64_t v42 = v0;
            v42[1] = BargeInCapablePromptForConfirmationFlow.execute();
            OUTLINED_FUNCTION_107_11();
            return v90();
          }
        }

        else
        {
          __break(1u);
        }

        __break(1u);
        goto LABEL_23;
      }

      swift_release(v30);
LABEL_19:
      uint64_t v53 = *(void *)(v0 + 224);
      uint64_t v55 = *(void *)(v0 + 176);
      uint64_t v54 = *(void *)(v0 + 184);
      uint64_t v56 = *(void *)(v0 + 160);
      uint64_t v57 = *(void *)(v0 + 168);
      uint64_t v59 = *(uint64_t **)(v0 + 80);
      uint64_t v58 = *(void *)(v0 + 88);
      uint64_t v60 = *(void *)(v0 + 72);
      *(void *)(v0 + 16) = **(void **)(v0 + 56);
      uint64_t v61 = type metadata accessor for BargeInCapablePromptForConfirmationFlow(255LL, v56, v58, v57);
      MetatypeMetadata = swift_getMetatypeMetadata(v61);
      uint64_t v63 = String.init<A>(describing:)(v0 + 16, MetatypeMetadata);
      uint64_t v65 = v64;
      v21();
      BargeInCapablePromptForConfirmationFlow.State.description.getter();
      uint64_t v67 = v66;
      uint64_t v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
      *uint64_t v59 = v63;
      v59[1] = v65;
      v59[2] = v67;
      v59[3] = v69;
      swift_storeEnumTagMultiPayload(v59, v60, 7LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
      uint64_t v71 = OUTLINED_FUNCTION_4_4(v60, v70);
      PhoneError.logged()(v72);
      uint64_t v73 = outlined destroy of PhoneError((uint64_t)v59);
      swift_willThrow(v73, v74, v75, v76, v77, v78, v79, v80);
      v81 = *(uint64_t **)(v0 + 224);
      v82 = *(void *)(v0 + 176);
      v83 = *(void *)(v0 + 64);
      OUTLINED_FUNCTION_11_20( *(void *)(v0 + 216),  *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v0 + 184) + 8LL));
      *v81 = v71;
      swift_storeEnumTagMultiPayload(v81, v82, 4LL);
      swift_errorRetain(v71);
      BargeInCapablePromptForConfirmationFlow.state.setter((uint64_t)v81);
      v84 = type metadata accessor for StartCallCATsSimple(0LL);
      static CATOption.defaultMode.getter(v84);
      CATWrapperSimple.__allocating_init(options:globals:)(v83, 0LL);
      static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)();
      v86 = v85;
      v87 = OUTLINED_FUNCTION_38_1();
      v88 = (*(uint64_t (**)(uint64_t))(*(void *)v86 + 112LL))(v87);
      swift_release(v86);
      *(void *)(v0 + 24) = v88;
      type metadata accessor for SimpleOutputFlowAsync(0LL);
      static ExecuteResponse.complete<A>(next:)(v0 + 24);
      swift_errorRelease(v71);
      OUTLINED_FUNCTION_38_1();
LABEL_20:
      swift_task_dealloc();
      OUTLINED_FUNCTION_23_3();
      OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_92_0();
      OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_14_3();
      OUTLINED_FUNCTION_29_17();
      OUTLINED_FUNCTION_25();
      swift_task_dealloc();
      return OUTLINED_FUNCTION_4_12(*(uint64_t (**)(void))(v0 + 8));
    default:
      goto LABEL_19;
  }

    swift_bridgeObjectRelease();
    goto LABEL_24;
  }

  int v40 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_63(v40, &demangling cache variable for type metadata for PersonNameComponents?);
LABEL_24:
  v163 = 0LL;
  v149 = 0LL;
LABEL_25:
  uint64_t v34 = v164;
LABEL_26:
  uint64_t v50 = [v33 isMe];
  os_log_type_t v51 = *v34;
  uint64_t v52 = (*(uint64_t (**)(id))(*(void *)*v34 + 320LL))(v50);
  uint64_t v53 = OUTLINED_FUNCTION_38_37(v52, "contactIdentifier");
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    uint64_t v57 = v56;
  }

  else
  {
    uint64_t v55 = 0LL;
    uint64_t v57 = 0LL;
  }

  (*(void (**)(uint64_t, uint64_t))(*(void *)v51 + 272LL))(v55, v57);
  uint64_t v58 = OUTLINED_FUNCTION_31_43();
  if (v58)
  {
    uint64_t v59 = v58;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v60 = 0LL;
  }

  else
  {
    uint64_t v60 = 1LL;
  }

  v62 = v159;
  uint64_t v61 = v160;
  OUTLINED_FUNCTION_1_38((uint64_t)v17, v60);
  OUTLINED_FUNCTION_120_11((uint64_t)v17, v63, &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v64 = OUTLINED_FUNCTION_13_21((uint64_t)v19);
  if ((_DWORD)v64)
  {
    v159 = 0LL;
    v160 = 0LL;
  }

  else
  {
    uint64_t v64 = PersonNameComponents.givenName.getter();
    v159 = v65;
    v160 = v64;
  }

  uint64_t v66 = v158;
  OUTLINED_FUNCTION_190(v64, &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v67 = OUTLINED_FUNCTION_31_43();
  if (v67)
  {
    uint64_t v68 = v67;
    uint64_t v69 = v157;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v70 = v69;
    uint64_t v71 = 0LL;
    uint64_t v72 = v162;
  }

  else
  {
    uint64_t v71 = 1LL;
    uint64_t v72 = v162;
    uint64_t v70 = v157;
  }

  OUTLINED_FUNCTION_1_38(v70, v71);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( v70,  v66,  &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21(v66))
  {
    v157 = 0LL;
    v158 = 0LL;
  }

  else
  {
    uint64_t v73 = PersonNameComponents.middleName.getter();
    v157 = v74;
    v158 = v73;
  }

  outlined destroy of UUID?(v66, &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v75 = OUTLINED_FUNCTION_31_43();
  if (v75)
  {
    uint64_t v76 = v75;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v77 = 0LL;
  }

  else
  {
    uint64_t v77 = 1LL;
  }

  OUTLINED_FUNCTION_1_38(v62, v77);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( v62,  v61,  &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21(v61))
  {
    v78 = 0LL;
    uint64_t v79 = 0LL;
  }

  else
  {
    v78 = PersonNameComponents.familyName.getter();
    uint64_t v79 = v80;
  }

  outlined destroy of UUID?(v61, &demangling cache variable for type metadata for PersonNameComponents?);
  v81 = OUTLINED_FUNCTION_31_43();
  if (v81)
  {
    v82 = v81;
    v83 = v161;
    OUTLINED_FUNCTION_142_10();

    v84 = 0LL;
  }

  else
  {
    v84 = 1LL;
    v83 = v161;
  }

  OUTLINED_FUNCTION_1_38(v83, v84);
  OUTLINED_FUNCTION_120_11(v83, v85, &demangling cache variable for type metadata for PersonNameComponents?);
  v86 = OUTLINED_FUNCTION_13_21(v72);
  if ((_DWORD)v86)
  {
    v87 = 0LL;
    v88 = 0LL;
  }

  else
  {
    v86 = PersonNameComponents.nickname.getter();
    v87 = v86;
    v88 = v89;
  }

  OUTLINED_FUNCTION_190(v86, &demangling cache variable for type metadata for PersonNameComponents?);
  (*(void (**)(void *__return_ptr))(*(void *)*v34 + 360LL))(v169);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v169,  (uint64_t)&v171,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v169,  (uint64_t)v170,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  v155 = v79;
  v156 = v78;
  v161 = v87;
  v154 = v88;
  if (v170[1] == 1LL)
  {
    v91 = v152;
    v90 = v153;
    v92 = v149;
    v93 = v150;
    v94 = v151;
  }

  else
  {
    v95 = v179;
    v96 = v180;
    v97 = v172;
    v162 = v171;
    v98 = v173;
    v100 = v175;
    v99 = v176;
    v101 = v178;
    v147 = v174;
    v148 = v177;
    v146 = v181;
    v103 = v182;
    v102 = v183;
    OUTLINED_FUNCTION_76_4();
    v145 = v146;
    *(void *)&v146 = v95;
    v104 = outlined consume of PhoneCallPersonName?( v162,  v97,  v98,  v147,  v100,  v99,  v148,  v101,  v95,  v96,  v145,  *((uint64_t *)&v145 + 1),  v103,  v102);
    v91 = v152;
    v90 = v153;
    v92 = v149;
    v93 = v150;
    v94 = v151;
    v162 = v96;
    if (v96)
    {
      v163 = v146;
      goto LABEL_58;
    }
  }

  OUTLINED_FUNCTION_6_3();
  v104 = swift_bridgeObjectRelease();
  v162 = (uint64_t)v92;
LABEL_58:
  v105 = OUTLINED_FUNCTION_38_37(v104, "nameComponents");
  if (v105)
  {
    v92 = v105;
    OUTLINED_FUNCTION_142_10();

    v106 = 0LL;
  }

  else
  {
    v106 = 1LL;
  }

  OUTLINED_FUNCTION_1_38(v93, v106);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( v93,  v94,  &demangling cache variable for type metadata for PersonNameComponents?);
  v107 = OUTLINED_FUNCTION_13_21(v94);
  if ((_DWORD)v107)
  {
    v108 = 0LL;
    v109 = 0LL;
  }

  else
  {
    v92 = (void *)v94;
    v107 = PersonNameComponents.namePrefix.getter();
    v108 = v107;
    v109 = v110;
  }

  OUTLINED_FUNCTION_8_63(v107, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_38_37(v111, "nameComponents"))
  {
    OUTLINED_FUNCTION_164_5();

    v112 = 0LL;
  }

  else
  {
    v112 = 1LL;
  }

  v113 = v156;
  v114 = v165;
  __swift_storeEnumTagSinglePayload(v91, v112, 1LL, v165);
  OUTLINED_FUNCTION_120_11(v91, v115, &demangling cache variable for type metadata for PersonNameComponents?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v90, 1LL, v114);
  if ((_DWORD)EnumTagSinglePayload)
  {
    v117 = 0LL;
    v118 = 0LL;
  }

  else
  {
    EnumTagSinglePayload = PersonNameComponents.nameSuffix.getter();
    v117 = EnumTagSinglePayload;
    v118 = v119;
  }

  v120 = v154;
  OUTLINED_FUNCTION_190(EnumTagSinglePayload, &demangling cache variable for type metadata for PersonNameComponents?);
  v171 = v160;
  v172 = v159;
  v173 = v158;
  v174 = v157;
  v175 = v113;
  v176 = v155;
  v177 = v161;
  v178 = v120;
  v179 = v163;
  v180 = v162;
  *(void *)&v181 = v108;
  *((void *)&v181 + 1) = v109;
  v182 = v117;
  v183 = v118;
  v121 = *v164;
  (*(void (**)(uint64_t *))(*(void *)*v164 + 368LL))(&v171);
  v122 = v166;
  v123 = [v166 relationship];
  if (v123)
  {
    v120 = (uint64_t)v123;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
    OUTLINED_FUNCTION_51_22();
  }

  OUTLINED_FUNCTION_60_26(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v121 + 440LL));
  v124 = OUTLINED_FUNCTION_18_62();
  if (v124)
  {
    OUTLINED_FUNCTION_150_6(v124);
    OUTLINED_FUNCTION_124_8();
    if (v113 == 2)
    {
      v125 = OUTLINED_FUNCTION_18_62();
      if (v125)
      {
        v126 = OUTLINED_FUNCTION_170_4((uint64_t)v125, "value");
        OUTLINED_FUNCTION_132_11();
        if (v120)
        {
          OUTLINED_FUNCTION_160_3();
          OUTLINED_FUNCTION_51_22();
        }
      }

      OUTLINED_FUNCTION_60_26(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v121 + 416LL));
      v130 = 0x656E6F6870LL;
LABEL_84:
      (*(void (**)(uint64_t, unint64_t))(*(void *)v121 + 464LL))(v130, 0xE500000000000000LL);
      goto LABEL_85;
    }
  }

  v127 = OUTLINED_FUNCTION_18_62();
  if (v127)
  {
    OUTLINED_FUNCTION_150_6(v127);
    OUTLINED_FUNCTION_124_8();
    if (v113 == 1)
    {
      v128 = OUTLINED_FUNCTION_18_62();
      if (v128)
      {
        v129 = OUTLINED_FUNCTION_170_4((uint64_t)v128, "value");
        OUTLINED_FUNCTION_132_11();
        if (v120)
        {
          OUTLINED_FUNCTION_160_3();
          OUTLINED_FUNCTION_51_22();
        }
      }

      OUTLINED_FUNCTION_60_26(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v121 + 296LL));
      v130 = 0x6C69616D65LL;
      goto LABEL_84;
    }
  }

void *_StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  v2[2] + 1LL,  1,  (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( (char *)(v3 > 1),  v4 + 1,  1,  (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 32) = 0;
  return v2;
}

void specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    unint64_t v3 = (const void *)OUTLINED_FUNCTION_8_2(v2, 16 * v1 + 32);
    size_t v4 = _swift_stdlib_malloc_size(v3);
    OUTLINED_FUNCTION_33_30(v4);
    specialized Sequence._copySequenceContents(initializing:)(v5, v6, v7, v8);
    OUTLINED_FUNCTION_47_13();
    OUTLINED_FUNCTION_91_8();
    if (!v9) {
      __break(1u);
    }
  }

  OUTLINED_FUNCTION_23_13();
}

{
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  size_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    unint64_t v3 = (const void *)OUTLINED_FUNCTION_8_2(v2, 16 * v1 + 32);
    size_t v4 = _swift_stdlib_malloc_size(v3);
    OUTLINED_FUNCTION_33_30(v4);
    specialized Sequence._copySequenceContents(initializing:)(v5, v6, v7, v8);
    OUTLINED_FUNCTION_47_13();
    OUTLINED_FUNCTION_91_8();
    if (!v9) {
      __break(1u);
    }
  }

  OUTLINED_FUNCTION_23_13();
}

void specialized _copyCollectionToContiguousArray<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }

  else
  {
    if (!v6) {
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_76_11();
    if (!(v8 ^ v9 | v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t v11 = (void *)OUTLINED_FUNCTION_8_2(v10, 16 * v6 + 32);
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v6;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 16);
    }

    if (v5 != v4)
    {
      specialized UnsafeMutablePointer.initialize(from:count:)();
LABEL_8:
      OUTLINED_FUNCTION_16();
      return;
    }
  }

  __break(1u);
}

{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  void *v11;
  size_t v12;
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }

  else
  {
    if (!v6) {
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_76_11();
    if (!(v8 ^ v9 | v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<TransformationResult>);
      uint64_t v11 = (void *)OUTLINED_FUNCTION_8_2(v10, 48 * v6 + 32);
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v6;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
    }

    if (v5 != v4)
    {
      specialized UnsafeMutablePointer.initialize(from:count:)();
LABEL_8:
      OUTLINED_FUNCTION_16();
      return;
    }
  }

  __break(1u);
}

{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v6 = a4 >> 1;
  char v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }

  else
  {
    if (!v7) {
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_76_11();
    if (!(v9 ^ v10 | v8))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      size_t v12 = (void *)OUTLINED_FUNCTION_8_2(v11, 8 * v7 + 32);
      _swift_stdlib_malloc_size(v12);
      OUTLINED_FUNCTION_32_25();
      v12[2] = v7;
      void v12[3] = v13;
    }

    if (v6 != v4)
    {
      specialized UnsafeMutablePointer.initialize(from:count:)(v5 + 8 * v4, v7);
LABEL_8:
      OUTLINED_FUNCTION_16();
      return;
    }
  }

  __break(1u);
}

void specialized _copyCollectionToContiguousArray<A>(_:)(unint64_t a1)
{
}

{
  specialized _copyCollectionToContiguousArray<A>(_:)( a1,  (void (*)(void *, uint64_t, unint64_t))specialized Array._copyContents(initializing:));
}

{
  specialized _copyCollectionToContiguousArray<A>(_:)( a1,  (void (*)(void *, uint64_t, unint64_t))specialized Array._copyContents(initializing:));
}

{
  specialized _copyCollectionToContiguousArray<A>(_:)( a1,  (void (*)(void *, uint64_t, unint64_t))&specialized _ArrayBuffer._copyContents(initializing:));
}

void *specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    Swift::Int v4 = String.UTF8View._foreignCount()();
    if (v4) {
      goto LABEL_6;
    }
    return _swiftEmptyArrayStorage;
  }

  if ((a2 & 0x2000000000000000LL) != 0) {
    Swift::Int v4 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
LABEL_6:
  specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v4, 0LL);
  if (v4 < 0)
  {
    _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableBufferPointer with negative count",  46LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL);
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v6 = v5;
  uint64_t v7 = _StringGuts.copyUTF8(into:)(v5 + 32, v4, a1, a2);
  if ((v8 & 1) != 0)
  {
LABEL_14:
    char v9 = "Insufficient space allocated to copy string contents";
    uint64_t v10 = "Swift/StringUTF8View.swift";
    uint64_t v11 = 52LL;
    uint64_t v12 = 26LL;
    goto LABEL_15;
  }

  if (v7 == v4) {
    return (void *)v6;
  }
  char v9 = "invalid Collection: less than 'count' elements in collection";
  uint64_t v10 = "Swift/ContiguousArrayBuffer.swift";
  uint64_t v11 = 60LL;
  uint64_t v12 = 33LL;
LABEL_15:
  double result = (void *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11LL, 2LL, v9, v11, 2LL, v10, v12);
  __break(1u);
  return result;
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  OUTLINED_FUNCTION_89_2();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_40_4();
      if (v3)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_45_3();
  if (v1)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Substring>);
    uint64_t v6 = (const void *)OUTLINED_FUNCTION_8_2(v5, 32 * v1 + 32);
    uint64_t v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_110_1(v7 - 32);
  }

  if ((v0 & 1) != 0)
  {
    char v8 = (char *)OUTLINED_FUNCTION_109_1();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v8, v9, v10);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_44_6();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v11, v12, v13, v14);
  }

  OUTLINED_FUNCTION_6();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char *v7;
  char v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  const void *v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  OUTLINED_FUNCTION_91_1();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_40_4();
      if (v8)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  else
  {
    uint64_t v7 = (char *)v3;
  }

  uint64_t v10 = *(void *)(v0 + 16);
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    uint64_t v12 = OUTLINED_FUNCTION_30_7(v2, v3, v4, v5, v6);
    uint64_t v13 = (const void *)OUTLINED_FUNCTION_8_2(v12, 40LL * (void)v11 + 32);
    uint64_t v14 = OUTLINED_FUNCTION_144(v13);
    OUTLINED_FUNCTION_105_0(v14 - 32);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  if ((v1 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v0 + 32), v10, v11 + 32);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_72_2();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v15, v16, v17, v18, v19);
  }

  OUTLINED_FUNCTION_16();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  char *v9;
  size_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  OUTLINED_FUNCTION_89_2();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_40_4();
      if (v4)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_45_3();
  if (v2)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<PhoneNumberTag>);
    uint64_t v7 = (void *)OUTLINED_FUNCTION_8_2(v6, v2 + 32);
    char v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v1;
    v7[3] = 2 * v8 - 64;
  }

  if ((v0 & 1) != 0)
  {
    char v9 = (char *)OUTLINED_FUNCTION_109_1();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v9, v10, v11);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_44_6();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v12, v13, v14, v15);
  }

  OUTLINED_FUNCTION_6();
}

{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  size_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  OUTLINED_FUNCTION_91_1();
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v11 != v12)
    {
      OUTLINED_FUNCTION_40_4();
      if (v11)
      {
        __break(1u);
LABEL_22:
        OUTLINED_FUNCTION_0_17();
        unint64_t v26 = "Division by zero";
        uint64_t v27 = 16LL;
LABEL_24:
        OUTLINED_FUNCTION_131_0( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)v26,  v27,  v25,  (uint64_t)"Swift/IntegerTypes.swift");
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  else
  {
    uint64_t v10 = v6;
  }

  uint64_t v13 = *(void *)(v0 + 16);
  if (v10 <= v13) {
    uint64_t v14 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v14 = v10;
  }
  if (!v14) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_30_7(v5, v6, v7, v8, v9);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(v1);
  uint64_t v16 = (const void *)OUTLINED_FUNCTION_40_5(v15);
  uint64_t v17 = OUTLINED_FUNCTION_144(v16);
  if (!v3) {
    goto LABEL_22;
  }
  if (v17 - v4 == 0x8000000000000000LL && v3 == -1)
  {
    OUTLINED_FUNCTION_0_17();
    unint64_t v26 = "Division results in an overflow";
    uint64_t v27 = 31LL;
    goto LABEL_24;
  }

  OUTLINED_FUNCTION_105_0(v17 - v4);
LABEL_17:
  __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_102_1();
  if ((v2 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v0 + v19, v13);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v20 = OUTLINED_FUNCTION_72_2();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v20, v21, v22, v23, v24);
  }

  OUTLINED_FUNCTION_67_3();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  OUTLINED_FUNCTION_89_2();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_40_4();
      if (v3)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_45_3();
  if (v1)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<PhoneCallEmergencyType>);
    uint64_t v6 = (const void *)OUTLINED_FUNCTION_8_2(v5, 16 * v1 + 32);
    uint64_t v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_110_1(v7 - 32);
  }

  if ((v0 & 1) != 0)
  {
    char v8 = (char *)OUTLINED_FUNCTION_109_1();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v8, v9, v10);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_44_6();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v11, v12, v13, v14);
  }

  OUTLINED_FUNCTION_6();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  OUTLINED_FUNCTION_91_1();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_40_4();
      if (v10)
      {
        __break(1u);
LABEL_22:
        OUTLINED_FUNCTION_0_17();
        unint64_t v25 = "Division by zero";
        unint64_t v26 = 16LL;
LABEL_24:
        OUTLINED_FUNCTION_131_0( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)v25,  v26,  v24,  (uint64_t)"Swift/IntegerTypes.swift");
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  else
  {
    char v9 = v5;
  }

  uint64_t v12 = *(void *)(v0 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (!v13) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_30_7(v4, v5, v6, v7, v8);
  uint64_t v14 = OUTLINED_FUNCTION_136();
  uint64_t v15 = (const void *)OUTLINED_FUNCTION_40_5(v14);
  uint64_t v16 = OUTLINED_FUNCTION_144(v15);
  if (!v2) {
    goto LABEL_22;
  }
  if (v16 - v3 == 0x8000000000000000LL && v2 == -1)
  {
    OUTLINED_FUNCTION_0_17();
    unint64_t v25 = "Division results in an overflow";
    unint64_t v26 = 31LL;
    goto LABEL_24;
  }

  OUTLINED_FUNCTION_105_0(v16 - v3);
LABEL_17:
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_102_1();
  if ((v1 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v0 + v18, v12);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_72_2();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v19, v20, v21, v22, v23);
  }

  OUTLINED_FUNCTION_67_3();
}

{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  OUTLINED_FUNCTION_89_2();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_40_4();
      if (v3)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_45_3();
  if (v1)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<INPersonHandleFaceTimeType>);
    uint64_t v6 = (const void *)OUTLINED_FUNCTION_8_2(v5, 8 * v1 + 32);
    uint64_t v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_110_1(v7 - 32);
  }

  if ((v0 & 1) != 0)
  {
    char v8 = (char *)OUTLINED_FUNCTION_109_1();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v8, v9, v10);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_44_6();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v11, v12, v13, v14);
  }

  OUTLINED_FUNCTION_6();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  size_t v13;
  char *v14;
  size_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  OUTLINED_FUNCTION_89_2();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_40_4();
      if (v4)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_45_3();
  if (v2)
  {
    uint64_t v11 = OUTLINED_FUNCTION_30_7(v6, v7, v8, v9, v10);
    uint64_t v12 = (void *)OUTLINED_FUNCTION_8_2(v11, v2 + 32);
    uint64_t v13 = _swift_stdlib_malloc_size(v12);
    v12[2] = v1;
    void v12[3] = 2 * v13 - 64;
  }

  if ((v0 & 1) != 0)
  {
    uint64_t v14 = (char *)OUTLINED_FUNCTION_109_1();
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v14, v15, v16);
    OUTLINED_FUNCTION_17_15();
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_44_6();
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(v17, v18, v19, v20);
  }

  OUTLINED_FUNCTION_6();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( a1,  a2,  a3,  a4,  &demangling cache variable for type metadata for _ContiguousArrayStorage<(agent: UsoEntity_common_Agent, contactRole: PhoneCallContactRole)>,  (void (*)(void, uint64_t, void *, uint64_t))specialized _ArrayBuffer._copyContents(subRange:initializing:),  (void (*)(uint64_t, uint64_t, void *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( a1,  a2,  a3,  a4,  &demangling cache variable for type metadata for _ContiguousArrayStorage<String>,  (void (*)(void, uint64_t, void *, uint64_t))specialized _ArrayBuffer._copyContents(subRange:initializing:),  (void (*)(uint64_t, uint64_t, void *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( a1,  a2,  a3,  a4,  &demangling cache variable for type metadata for _ContiguousArrayStorage<Data>,  (void (*)(void, uint64_t, void *, uint64_t))specialized _ArrayBuffer._copyContents(subRange:initializing:),  (void (*)(uint64_t, uint64_t, void *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( a1,  a2,  a3,  a4,  &demangling cache variable for type metadata for _ContiguousArrayStorage<AppQuery.Override>,  (void (*)(void, uint64_t, void *, uint64_t))specialized _ArrayBuffer._copyContents(subRange:initializing:),  (void (*)(uint64_t, uint64_t, void *))specialized UnsafeMutablePointer.moveInitialize(from:count:));
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v14, v8, v13);
    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v14, v8, v13);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<TransformationResult>);
    uint64_t v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7LL);
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(a4 + 32), v8, v13);
    *(void *)(a4 + 16) = 0LL;
    swift_bridgeObjectRelease(a4);
  }

  else
  {
    specialized _ArrayBuffer._copyContents(subRange:initializing:)(0LL, v8, (unint64_t)v13, a4);
  }

  return v11;
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Range<Int>>);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || &v14[16 * v8] <= v13) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 16 * v8);
  }

  OUTLINED_FUNCTION_39();
  return v11;
}

Swift::Void __swiftcall Signpost.OpenSignpost.end()()
{
  char v19 = v0;
  uint64_t v20 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for OSSignpostError(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = OUTLINED_FUNCTION_11_44();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_8();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_6_49();
  __swift_project_value_buffer(v11, (uint64_t)static OSSignposter.siriPhone);
  size_t v12 = (os_log_s *)OUTLINED_FUNCTION_32_22();
  uint64_t v13 = OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v14 = static os_signpost_type_t.end.getter(v13);
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
    goto LABEL_15;
  }
  if ((v19 & 1) == 0)
  {
    if (v20)
    {
LABEL_11:
      uint64_t v15 = swift_retain(v3);
      checkForErrorAndConsumeState(state:)(v15);
      swift_release(v3);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v8, v4) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v16 = "[Error] Interval already ended";
      }

      else
      {
        OUTLINED_FUNCTION_37_1(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        uint64_t v16 = "";
      }

      uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v17 = 0;
      os_signpost_id_t v18 = OSSignpostID.rawValue.getter(v17);
      _os_signpost_emit_with_name_impl(&dword_0, v12, v14, v18, v20, v16, v17, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v17);
LABEL_15:

      OUTLINED_FUNCTION_0_14(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      OUTLINED_FUNCTION_7_5();
      return;
    }

    __break(1u);
  }

  if ((unint64_t)v20 >> 32)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  if (v20 >> 11 != 27)
  {
    if (v20 >> 16 <= 0x10)
    {
      uint64_t v20 = (const char *)&v21;
      goto LABEL_11;
    }

    goto LABEL_17;
  }

void PhoneCallControlNLTransformer.transformToCallControlNLIntent(usoTask:)(uint64_t a1)
{
  void (*v12)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_s *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoTask, PhoneCallControlNLIntent?>);
  uint64_t v41 = *(void *)(v4 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  static Signpost.begin(_:)();
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for UsoTask(0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallControlNLIntent?);
  Transformer.init(transform:)(partial apply for closure #1 in static Transformer<>.transformer.getter, 0LL, v11);
  uint64_t v42 = v8;
  size_t v12 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter(v4);
  os_signpost_type_t v14 = v13;
  Swift::String v43 = a1;
  v12(&v44, &v43);
  swift_release(v14);
  uint64_t v15 = v44;
  if (!v44) {
    goto LABEL_7;
  }
  uint64_t v16 = (void *)one-time initialization token for siriPhone;
  OUTLINED_FUNCTION_25_1();
  uint64_t v17 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_11_18((uint64_t)v2);
  OUTLINED_FUNCTION_11_18(a1);
  os_signpost_id_t v18 = OUTLINED_FUNCTION_11_18(v15);
  Logger.logObject.getter(v18);
  char v19 = OUTLINED_FUNCTION_41();
  if (!OUTLINED_FUNCTION_10(v19))
  {
    OUTLINED_FUNCTION_31_1((uint64_t)v2);
    OUTLINED_FUNCTION_31_1(a1);
    swift_release_n(v15, 3LL);

LABEL_7:
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v4);
    goto LABEL_8;
  }

  uint64_t v39 = v10;
  uint64_t v20 = OUTLINED_FUNCTION_7_0(32LL);
  uint64_t v38 = OUTLINED_FUNCTION_7_0(96LL);
  uint64_t v44 = v38;
  OUTLINED_FUNCTION_38_9(4.8152e-34);
  uint64_t v22 = v2[7];
  uint64_t v21 = v2[8];
  int v40 = v4;
  uint64_t v37 = (os_log_s *)v16;
  uint64_t v24 = v2[9];
  uint64_t v23 = (void *)v2[10];
  OUTLINED_FUNCTION_30_8();
  swift_bridgeObjectRetain(v21);
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v22, v21, v24, v23);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease(v21);
  unint64_t v26 = OUTLINED_FUNCTION_29_9(v43, v25, &v44);
  OUTLINED_FUNCTION_8_16(v26);
  OUTLINED_FUNCTION_31_1((uint64_t)v2);
  OUTLINED_FUNCTION_39();
  *(_WORD *)(v20 + 12) = 2080;
  OUTLINED_FUNCTION_23_1();
  UsoTask.description.getter();
  uint64_t v28 = v27;
  swift_release(a1);
  uint64_t v29 = OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_12_17(v29);
  OUTLINED_FUNCTION_31_1(a1);
  swift_bridgeObjectRelease(v28);
  *(_WORD *)(v20 + 22) = 2080;
  uint64_t v30 = *(void (**)(uint64_t))(*(void *)v15 + 144LL);
  os_signpost_id_t v31 = OUTLINED_FUNCTION_25_1();
  v30(v31);
  uint64_t v33 = v32;
  OUTLINED_FUNCTION_16_3();
  uint64_t v34 = OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_9_18(v34);
  OUTLINED_FUNCTION_31_1(v15);
  swift_bridgeObjectRelease(v33);
  OUTLINED_FUNCTION_31_8(&dword_0, v37, v35, "%s transformed %s into %s");
  swift_arrayDestroy(v38, 3LL);
  OUTLINED_FUNCTION_0_2(v38);
  os_log_t v36 = v20;
  uint64_t v10 = v39;
  OUTLINED_FUNCTION_0_2(v36);
  OUTLINED_FUNCTION_16_3();

  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
LABEL_8:
  Signpost.OpenSignpost.end()();
  swift_release(v10);
  OUTLINED_FUNCTION_7_5();
}

_BYTE *partial apply for closure #1 in static Transformer<>.transformer.getter@<X0>( uint64_t *a1@<X0>, void *a2@<X8>)
{
  return closure #1 in static Transformer<>.transformer.getter(a1, a2);
}

void closure #1 in static Transformer<>.transformer.getter(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  static Signpost.begin(_:)();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  int v46 = v12;
  if (v5 && (uint64_t v13 = dispatch thunk of UsoEntity_common_PhoneCall.recipients.getter(v6)) != 0)
  {
    uint64_t v14 = v13;
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t)_swiftEmptyArrayStorage;
  }

  v51[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0) {
      uint64_t v42 = v14;
    }
    else {
      uint64_t v42 = v14 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v42);
  }

  else
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  uint64_t v49 = v7;
  uint64_t v50 = a2;
  uint64_t v47 = v11;
  uint64_t v48 = v9;
  if (v15)
  {
    if (v15 < 1)
    {
      __break(1u);
      goto LABEL_42;
    }

    for (uint64_t i = 0LL; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001LL) != 0)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
        uint64_t v18 = v17;
      }

      else
      {
        uint64_t v18 = *(void *)(v14 + 8 * i + 32);
        uint64_t v17 = UsoEntity_common_Person.usoPerson.getter();
      }

      dispatch thunk of CodeGenListEntry.entry.getter(&v54, v17);
      uint64_t v19 = swift_release(v18);
      uint64_t v20 = v54;
      if (v54)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        unint64_t v22 = *(void *)((char *)&dword_10 + (v51[0] & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v21 = *(void *)((char *)&dword_18 + (v51[0] & 0xFFFFFFFFFFFFFF8LL));
        if (v22 >= v21 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1LL);
        }
        uint64_t v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
        specialized Array._endMutation()(v23, v24, v25, v26);
      }
    }

    OUTLINED_FUNCTION_129();
    uint64_t v27 = v51[0];
  }

  else
  {
    OUTLINED_FUNCTION_129();
    uint64_t v27 = (uint64_t)_swiftEmptyArrayStorage;
  }

  OUTLINED_FUNCTION_129();
  if (!((unint64_t)v27 >> 62))
  {
    uint64_t v28 = *(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFF8LL));
    if (v28) {
      goto LABEL_22;
    }
LABEL_39:
    OUTLINED_FUNCTION_87_0();
    uint64_t v30 = _swiftEmptyArrayStorage;
LABEL_40:
    uint64_t v44 = v49;
    void *v50 = v30;
    Signpost.OpenSignpost.end()();
    swift_release(v44);
    return;
  }

  if (v27 < 0) {
    uint64_t v43 = v27;
  }
  else {
    uint64_t v43 = v27 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v43);
  OUTLINED_FUNCTION_87_0();
  if (!v28) {
    goto LABEL_39;
  }
LABEL_22:
  uint64_t v54 = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v28 & 0x8000000000000000LL) == 0)
  {
    v45[1] = v3;
    uint64_t v29 = 0LL;
    uint64_t v30 = v54;
    do
    {
      if ((v27 & 0xC000000000000001LL) != 0)
      {
        uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      }

      else
      {
        uint64_t v31 = *(void *)(v27 + 8 * v29 + 32);
        UsoEntity_common_Person.usoPerson.getter();
      }

      uint64_t v32 = type metadata accessor for PhoneCallNLv4Contact();
      uint64_t v33 = (void *)swift_allocObject(v32, 346LL, 7LL);
      uint64_t v34 = UsoEntity_common_Person.usoPerson.getter();
      os_log_type_t v35 = specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:)(v34, 1, v33);
      uint64_t v52 = v32;
      uint64_t v53 = &protocol witness table for PhoneCallNLv4Contact;
      swift_release(v31);
      v51[0] = v35;
      uint64_t v54 = v30;
      unint64_t v36 = v30[2];
      if (v36 >= v30[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v29;
      uint64_t v37 = v52;
      uint64_t v38 = (uint64_t)v53;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
      __chkstk_darwin();
      int v40 = (char *)v45 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v41 + 16))(v40);
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)( v36,  (uint64_t)v40,  (uint64_t *)&v54,  v37,  v38);
      __swift_destroy_boxed_opaque_existential_1(v51);
      uint64_t v30 = v54;
    }

    while (v28 != v29);
    OUTLINED_FUNCTION_87_0();
    goto LABEL_40;
  }

LABEL_42:
  __break(1u);
}

  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
  return result;
}

  double result = swift_release(v5);
  *uint64_t v3 = v8;
  return result;
}

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

  OUTLINED_FUNCTION_78_21(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participants);
  if ((v122 & 1) != 0)
  {
LABEL_24:
    OUTLINED_FUNCTION_78_21(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_participantsNames);
    if ((v123 & 1) != 0) {
      goto LABEL_44;
    }
    goto LABEL_4;
  }

    if (!v16) {
      break;
    }
    uint64_t v54 = 0LL;
    uint64_t v55 = 0LL;
    uint64_t v14 = v13 & 0xC000000000000001LL;
    while (1)
    {
      if (v55 >= *(void *)(a5 + 16))
      {
        uint64_t v56 = type metadata accessor for PhoneCallNLv4Contact();
        swift_allocObject(v56, 346LL, 7LL);
        uint64_t v57 = PhoneCallNLv4Contact.init()();
        if ((swift_isUniquelyReferenced_nonNull_native(a5) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          a5 = v62;
        }

        uint64_t v58 = *(void *)(a5 + 16);
        a4 = (unint64_t *)(v58 + 1);
        if (v58 >= *(void *)(a5 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          a5 = v63;
        }

        v113 = v56;
        v114 = &protocol witness table for PhoneCallNLv4Contact;
        *(void *)&v111 = v57;
        *(void *)(a5 + 16) = a4;
        outlined init with take of AppSelectionSignalComponent(&v111, a5 + 40 * v58 + 32);
      }

      if (v14) {
        uint64_t v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v13);
      }
      else {
        uint64_t v59 = *(id *)(v13 + 8 * v55 + 32);
      }
      uint64_t v60 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native(a5) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()();
        a5 = v61;
      }

      uint64_t v53 = *(void *)(a5 + 16);
      if (v55 >= v53) {
        break;
      }
      ++v55;
      a4 = *(unint64_t **)(a5 + v54 + 64);
      __swift_mutable_project_boxed_opaque_existential_1(a5 + v54 + 32, *(void *)(a5 + v54 + 56));
      SiriPhoneContact.update(person:)((INPerson)v60);

      v54 += 40LL;
      if (v16 == v55) {
        goto LABEL_57;
      }
    }

    __break(1u);
LABEL_92:
    __break(1u);
  }

    OUTLINED_FUNCTION_124();
    outlined release of _NativeDictionary<String, Double>.Iterator(&v26);
    return 0LL;
  }

  uint64_t v2 = (v30 - 1) & v30;
  uint64_t v3 = __clz(__rbit64(v30)) | (v29 << 6);
  uint64_t v4 = (unint64_t)(v28 + 64) >> 6;
  uint64_t v5 = v29;
LABEL_3:
  uint64_t v6 = v26;
  uint64_t v24 = *(void *)(*(void *)(v26 + 48) + 16 * v3);
  uint64_t v7 = *(void **)(*(void *)(v26 + 56) + 8 * v3);
  OUTLINED_FUNCTION_124();
  swift_bridgeObjectRetain();
  double result = v7;
  uint64_t v8 = result;
  while (1)
  {
    if (v2)
    {
      uint64_t v9 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      uint64_t v10 = v9 | (v5 << 6);
      goto LABEL_22;
    }

    uint64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1LL)) {
      break;
    }
    if (v11 >= v4) {
      goto LABEL_25;
    }
    int v12 = *(void *)(v25 + 8 * v11);
    uint64_t v13 = v5 + 1;
    if (!v12)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v4) {
        goto LABEL_25;
      }
      int v12 = *(void *)(v25 + 8 * v13);
      if (!v12)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v4) {
          goto LABEL_25;
        }
        int v12 = *(void *)(v25 + 8 * v13);
        if (!v12)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v4) {
            goto LABEL_25;
          }
          int v12 = *(void *)(v25 + 8 * v13);
          if (!v12)
          {
            uint64_t v13 = v5 + 5;
            if (v5 + 5 >= v4) {
              goto LABEL_25;
            }
            int v12 = *(void *)(v25 + 8 * v13);
            if (!v12)
            {
              uint64_t v14 = v5 + 6;
              while (v14 < v4)
              {
                int v12 = *(void *)(v25 + 8 * v14++);
                if (v12)
                {
                  uint64_t v13 = v14 - 1;
                  goto LABEL_21;
                }
              }

_BYTE *closure #1 in static Transformer<>.transformer.getter@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if ((UsoTask.isCallControlTask()() & 1) != 0)
  {
    double result = static Transformer<>.getPhoneCallControlNLIntent(for:)(v3);
    if (result) {
      goto LABEL_18;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    uint64_t v6 = swift_retain_n(v3, 2LL);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      os_log_type_t v28 = v8;
      log = v7;
      uint64_t v9 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v27 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v9 = 136315394;
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v10 = static Transformer<>.logPrefix;
      uint64_t v11 = unk_477AB0;
      uint64_t v13 = qword_477AB8;
      int v12 = (void *)unk_477AC0;
      unint64_t v32 = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_477AC0);
      swift_bridgeObjectRetain(v11);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v10, v11, v13, v12);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v11);
      uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(0xE000000000000000LL);
      *(_WORD *)(v9 + 12) = 2080;
      swift_retain(v3);
      uint64_t v14 = UsoTask.description.getter();
      unint64_t v16 = v15;
      swift_release(v3);
      uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v9 + 14, v9 + 22);
      OUTLINED_FUNCTION_8_6();
      swift_bridgeObjectRelease(v16);
      _os_log_impl(&dword_0, log, v28, "%s PhoneCallControlNLIntent was nil for %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy(v27, 2LL);
      OUTLINED_FUNCTION_0_2(v27);
      OUTLINED_FUNCTION_0_2(v9);

      double result = 0LL;
      goto LABEL_18;
    }

    OUTLINED_FUNCTION_8_6();
LABEL_17:
    double result = 0LL;
    goto LABEL_18;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = (void *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled((os_log_t)v19, v20))
  {

    goto LABEL_17;
  }

  uint64_t v30 = a2;
  unint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
  uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
  uint64_t v33 = v22;
  *(_DWORD *)unint64_t v21 = 136315138;
  if (one-time initialization token for logPrefix != -1) {
    swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
  }
  uint64_t v23 = static Transformer<>.logPrefix;
  uint64_t v24 = unk_477AB0;
  uint64_t v25 = qword_477AB8;
  uint64_t v26 = (void *)unk_477AC0;
  unint64_t v32 = 0xE000000000000000LL;
  swift_bridgeObjectRetain(unk_477AC0);
  swift_bridgeObjectRetain(v24);
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v23, v24, v25, v26);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v24);
  uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, &v33);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v21 + 4, v21 + 12);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  _os_log_impl(&dword_0, (os_log_t)v19, v20, "%s usoTask is not a CallControls task.", v21, 0xCu);
  swift_arrayDestroy(v22, 1LL);
  OUTLINED_FUNCTION_0_2(v22);
  OUTLINED_FUNCTION_0_2((uint64_t)v21);

  double result = 0LL;
  a2 = v30;
LABEL_18:
  *a2 = result;
  return result;
}

uint64_t UsoTask.isCallControlTask()()
{
  uint64_t v0 = UsoTask.baseEntityAsString.getter();
  if (v0 == 0x535F6E6F6D6D6F63LL && v1 == 0xEE00676E69747465LL)
  {
    swift_bridgeObjectRelease(0xEE00676E69747465LL);
  }

  else
  {
    uint64_t v3 = v1;
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v0, v1, 0x535F6E6F6D6D6F63LL, 0xEE00676E69747465LL, 0LL);
    swift_bridgeObjectRelease(v3);
    if ((v4 & 1) == 0)
    {
      UsoTask.isSwitchToFaceTimeOrVideoCallTask.getter();
      if ((v5 & 1) == 0)
      {
        UsoTask.isSwitchToSpeakerphoneTask.getter();
        if ((v6 & 1) == 0) {
          return 0LL;
        }
      }
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    int v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)int v12 = 136315138;
    unint64_t v16 = 0xE000000000000000LL;
    uint64_t v17 = v13;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of UsoTask.isCallControlTask(),  0LL,  0LL);
    uint64_t v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(0xE000000000000000LL);
    _os_log_impl(&dword_0, v10, v11, "%s task is call control or switch to FaceTime task.", v12, 0xCu);
    uint64_t v7 = 1LL;
    swift_arrayDestroy(v13, 1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {

    return 1LL;
  }

  return v7;
}

void UsoTask.isSwitchToFaceTimeOrVideoCallTask.getter()
{
  uint64_t v1 = type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_61_3();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_PhoneCallMode.DefinedValues?, UsoEntity_common_PhoneCallMode.DefinedValues?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin(v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_25_6();
  uint64_t v10 = v8 - v9;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v34 - v13;
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v34 - v15;
  OUTLINED_FUNCTION_10_45();
  if (v38[3])
  {
    uint64_t v17 = OUTLINED_FUNCTION_27_29();
    if ((OUTLINED_FUNCTION_4_53(v17, (uint64_t)&type metadata for Any) & 1) != 0)
    {
      uint64_t v35 = v0;
      uint64_t v18 = v37;
      swift_retain(v37);
      OUTLINED_FUNCTION_21_29();
      uint64_t v19 = OUTLINED_FUNCTION_118();
      uint64_t v20 = v38[0];
      uint64_t v36 = v2;
      if (v38[0])
      {
        uint64_t v21 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v19);
        OUTLINED_FUNCTION_38_1();
        if (v21)
        {
          UsoEntity_common_App.applicationId.getter();
          uint64_t v23 = v22;
          uint64_t v20 = v24;
          swift_release(v21);
        }

        else
        {
          uint64_t v23 = 0LL;
          uint64_t v20 = 0LL;
        }
      }

      else
      {
        uint64_t v23 = 0LL;
      }

      static PhoneCallAppNameConstants.isFaceTime(appId:)(v23, v20);
      OUTLINED_FUNCTION_62();
      swift_retain(v18);
      OUTLINED_FUNCTION_21_29();
      uint64_t v25 = OUTLINED_FUNCTION_118();
      uint64_t v26 = v38[0];
      if (v38[0]
        && (uint64_t v27 = dispatch thunk of UsoEntity_common_PhoneCall.mode.getter(v25), v28 = swift_release(v26), v27))
      {
        dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter(v28);
        OUTLINED_FUNCTION_38_1();
      }

      else
      {
        OUTLINED_FUNCTION_44_2((uint64_t)v16, 1LL);
      }

      uint64_t v29 = v36;
      (*(void (**)(char *, void, uint64_t))(v36 + 104))( v14,  enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Video(_:),  v1);
      OUTLINED_FUNCTION_44_2((uint64_t)v14, 0LL);
      uint64_t v30 = (uint64_t)&v6[*(int *)(v3 + 48)];
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v16,  (uint64_t)v6,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  v30,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      OUTLINED_FUNCTION_83_7((uint64_t)v6);
      if (v31)
      {
        OUTLINED_FUNCTION_118();
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v14,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
        OUTLINED_FUNCTION_83_7(v30);
      }

      else
      {
        outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v6,  v10,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
        OUTLINED_FUNCTION_83_7(v30);
        if (v31)
        {
          OUTLINED_FUNCTION_118();
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v14,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v10, v1);
        }

        else
        {
          uint64_t v32 = v35;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v35, v30, v1);
          lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_PhoneCallMode.DefinedValues and conformance UsoEntity_common_PhoneCallMode.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_PhoneCallMode.DefinedValues);
          dispatch thunk of static Equatable.== infix(_:_:)(v10, v32, v1);
          OUTLINED_FUNCTION_118();
          uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
          v33(v32, v1);
          OUTLINED_FUNCTION_13_5((uint64_t)v14);
          OUTLINED_FUNCTION_13_5((uint64_t)v16);
          v33(v10, v1);
        }
      }

      OUTLINED_FUNCTION_13_5((uint64_t)v6);
    }
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v38,  &demangling cache variable for type metadata for Any?);
  }

  OUTLINED_FUNCTION_7_5();
}

void UsoTask.isSwitchToSpeakerphoneTask.getter()
{
  uint64_t v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_25_6();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - v9;
  OUTLINED_FUNCTION_10_45();
  if (!v30[3])
  {
    uint64_t v21 = &demangling cache variable for type metadata for Any?;
    uint64_t v22 = v30;
LABEL_12:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v22,  v21);
    goto LABEL_15;
  }

  uint64_t v11 = OUTLINED_FUNCTION_27_29();
  if ((OUTLINED_FUNCTION_4_53(v11, (uint64_t)&type metadata for Any) & 1) != 0)
  {
    uint64_t v12 = v29;
    uint64_t v13 = swift_retain(v29);
    dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter(v30, v13);
    uint64_t v14 = OUTLINED_FUNCTION_77_0();
    if (!v30[0]
      || (uint64_t v15 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v14), OUTLINED_FUNCTION_122(), !v15))
    {
      uint64_t v23 = v12;
      goto LABEL_14;
    }

    if ((unint64_t)v15 >> 62)
    {
      if (v15 >= 0) {
        uint64_t v26 = v15 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v26 = v15;
      }
      swift_bridgeObjectRetain(v15);
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v26);
      OUTLINED_FUNCTION_62();
      if (v27) {
        goto LABEL_7;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_7:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v15 & 0xC000000000000001LL) == 0, v15);
      if ((v15 & 0xC000000000000001LL) != 0)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v15);
      }

      else
      {
        uint64_t v16 = *(void *)(v15 + 32);
        swift_retain(v16);
      }

      uint64_t v17 = OUTLINED_FUNCTION_62();
      uint64_t v18 = dispatch thunk of CodeGenListEntry.entry.getter(&v29, v17);
      uint64_t v19 = v29;
      if (v29)
      {
        uint64_t v20 = CodeGenBase.entity.getter(v18);
        swift_release(v19);
      }

      else
      {
        uint64_t v20 = 0LL;
      }

      uint64_t v24 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute(0LL);
      static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(v30, v20, v24, v24);
      uint64_t v25 = OUTLINED_FUNCTION_38_1();
      if (v30[0])
      {
        dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(v25);
        if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1LL, v3) != 1)
        {
          OUTLINED_FUNCTION_142( (uint64_t)v10,  (uint64_t)v2,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
          (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))( v7,  enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallNounSpeakerphone(_:),  v3);
          specialized == infix<A>(_:_:)((uint64_t)v10, v7);
          OUTLINED_FUNCTION_77_0();
          OUTLINED_FUNCTION_38_1();
          OUTLINED_FUNCTION_122();
          OUTLINED_FUNCTION_12_50(v7);
          OUTLINED_FUNCTION_12_50((uint64_t)v10);
          goto LABEL_15;
        }

        OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_122();
        OUTLINED_FUNCTION_77_0();
        uint64_t v21 = &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?;
        uint64_t v22 = v2;
        goto LABEL_12;
      }

      OUTLINED_FUNCTION_77_0();
      uint64_t v23 = v16;
LABEL_14:
      swift_release(v23);
      goto LABEL_15;
    }

    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_62();
  }

LABEL_15:
  OUTLINED_FUNCTION_7_5();
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  swift_bridgeObjectRelease_n(v3, 2LL);
  return 1LL;
}

  OUTLINED_FUNCTION_7_5();
}

  swift_bridgeObjectRelease();
  return v2;
}

    uint64_t v41 = OUTLINED_FUNCTION_6_1();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v41);
    OUTLINED_FUNCTION_21_24();
    uint64_t v42 = a5;
LABEL_16:
    a8(v42, 0LL);
    OUTLINED_FUNCTION_3_6(a5);
    return;
  }

  if ((specialized Sequence.contains(where:)((unint64_t)v26, (char *)&dword_0 + 2) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }

  uint64_t v27 = specialized Sequence.contains(where:)((unint64_t)v26, (char *)&dword_0 + 1);
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
LABEL_27:
    uint64_t v56 = v10 + direct field offset for StartCallAceViewProvider.sharedGlobals;
    uint64_t v49 = (os_log_s *)type metadata accessor for PhoneCallDisplayTextCATs(0LL);
    static CATOption.defaultMode.getter(v49);
    uint64_t v50 = CATWrapper.__allocating_init(options:globals:)(v20, 0LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    os_log_type_t v51 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v51, (uint64_t)static Logger.siriPhone);
    uint64_t v52 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v49, v52))
    {
      uint64_t v53 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v53 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v49, v52, "#StartCallViewBuilders Providing DefaultDisambiguationBuilder", v53);
      OUTLINED_FUNCTION_0_2((uint64_t)v53);
    }

    outlined init with copy of SignalProviding(v56, (uint64_t)v64);
    uint64_t v60 = a1;
    uint64_t v61 = a4;
    v62[0] = a2;
    v62[1] = a3;
    v62[2] = a6;
    uint64_t v63 = v57 & 1;
    uint64_t v65 = v50;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_44_1();
    uint64_t v54 = a4;
    specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(a5, v58, v59);
    outlined destroy of DefaultDisambiguationBuilder<INStartCallIntent>((uint64_t)&v60);
    goto LABEL_32;
  }

  uint64_t v28 = *(void *)(v10 + direct field offset for StartCallAceViewProvider.templatingService);
  uint64_t v29 = v10 + direct field offset for StartCallAceViewProvider.sharedGlobals;
  uint64_t v30 = *(_BYTE *)(v10 + direct field offset for StartCallAceViewProvider.isDirectInvocation);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  char v31 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v31, (uint64_t)static Logger.siriPhone);
  uint64_t v32 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v26, v32))
  {
    uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v33 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v26, v32, "#StartCallViewBuilders Providing ForeignEmergencyButtonsBuilder", v33);
    OUTLINED_FUNCTION_0_2((uint64_t)v33);
  }

  outlined init with copy of SignalProviding(v29, (uint64_t)v62);
  uint64_t v60 = v28;
  uint64_t v61 = a6;
  v64[8] = v30;
  swift_retain();
  OUTLINED_FUNCTION_95();
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)(a5, v58);
  outlined destroy of ForeignEmergencyButtonsBuilder(&v60);
LABEL_32:
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_7_5();
  return v47;
}

    OUTLINED_FUNCTION_7_5();
    return;
  }

  uint64_t v30 = objc_opt_self(&OBJC_CLASS___INStartVideoCallIntent);
  char v31 = OUTLINED_FUNCTION_90_13(v30);
  if (v31)
  {
    uint64_t v9 = v31;
    uint64_t v32 = objc_opt_self(&OBJC_CLASS___INStartVideoCallIntentResponse);
    uint64_t v33 = OUTLINED_FUNCTION_89_16(v32);
    if (v33)
    {
      OUTLINED_FUNCTION_62_19(v33);
      ObjC metadata update function for StartCallCATs();
      OUTLINED_FUNCTION_133_9();
      OUTLINED_FUNCTION_144_6();
      OUTLINED_FUNCTION_61_22();
      OUTLINED_FUNCTION_97_4();
      OUTLINED_FUNCTION_122_8();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_97_4();
      OUTLINED_FUNCTION_98_12();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_97_4();
      uint64_t v34 = OUTLINED_FUNCTION_69_1();
      OUTLINED_FUNCTION_8_2(v34, 16LL);
      uint64_t v35 = OUTLINED_FUNCTION_115_8();
      uint64_t v36 = type metadata accessor for StartVideoCallTemplatingService(v35);
      OUTLINED_FUNCTION_15_2(v36);
      uint64_t v37 = OUTLINED_FUNCTION_93_13();
      specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( v37,  v38,  v39,  v40,  v41,  v42);
      uint64_t v43 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_411A10, 64LL);
      OUTLINED_FUNCTION_45_27(v43);
      OUTLINED_FUNCTION_140_9();
      OUTLINED_FUNCTION_97_14();
      OUTLINED_FUNCTION_95_1();
      OUTLINED_FUNCTION_95();
      goto LABEL_14;
    }

    goto LABEL_15;
  }

  uint64_t v47 = (os_log_s *)Logger.logObject.getter(0LL);
  uint64_t v44 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v47, v44))
  {
    uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v45 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v47,  v44,  "#CallingIntentHandleIntentFlowStrategy makeFailureHandlingIntentLegacyOutput: intent is not a calling intent",  v45);
    OUTLINED_FUNCTION_0_2((uint64_t)v45);
  }
}

  uint64_t v23 = v0[54];
  uint64_t v22 = v0[55];
  uint64_t v24 = v0[53];
  uint64_t v25 = (void *)v0[29];
  v25[3] = OUTLINED_FUNCTION_84_17();
  v25[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v25);
  UnsupportedFaceTimeOutputProvider.makeErrorOutputHelper(templateResult:aceViews:)();
  swift_release(v22);
  swift_release(v23);
  swift_release(v24);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_8_76();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  uint64_t v26 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_57_28(v26);
}

      __break(1u);
      return result;
    }

  double result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SharedConfirmationRepromptContext.PromptType);
  __break(1u);
  return result;
}

void NLTransformer.transformToPhoneCallNLIntent(parse:)()
{
  uint64_t v73 = (void *)v0;
  uint64_t v74 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for USOParse(0LL);
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v67 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin(v10);
  uint64_t v11 = OUTLINED_FUNCTION_44_9();
  uint64_t v12 = type metadata accessor for Siri_Nlu_External_UserParse(v11);
  uint64_t v71 = *(uint8_t **)(v12 - 8);
  uint64_t v72 = v12;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_25_6();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v66 - v14;
  uint64_t v16 = type metadata accessor for Parse(0LL);
  OUTLINED_FUNCTION_60_5();
  __chkstk_darwin(v17);
  OUTLINED_FUNCTION_7_6();
  uint64_t v18 = OUTLINED_FUNCTION_73_2();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  OUTLINED_FUNCTION_20_0();
  uint64_t v20 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v70 = v7;
  v20(v1, v7, v16);
  int v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v1, v16);
  if (v21 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v1, v16);
LABEL_5:
    OUTLINED_FUNCTION_56_4((uint64_t)v3, (uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32));
    (*(void (**)(os_log_s *))(*v73 + 208LL))(v3);
    (*(void (**)(os_log_s *, uint64_t))(v19 + 8))(v3, v18);
    goto LABEL_6;
  }

  v66[1] = v2;
  v66[2] = v16;
  if (v21 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    OUTLINED_FUNCTION_22_12();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NLIntent, Parse.ServerConversion));
    swift_release(*(uint64_t *)((char *)v1 + *(int *)(v22 + 48)));
    goto LABEL_5;
  }

  if (v21 == enum case for Parse.directInvocation(_:))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (uint64_t)v73;
    uint64_t v25 = OUTLINED_FUNCTION_11_18((uint64_t)v73);
    Logger.logObject.getter(v25);
    os_log_type_t v26 = OUTLINED_FUNCTION_55_5();
    if (OUTLINED_FUNCTION_54_2(v3))
    {
      OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v72 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_9_23(v72, 4.8149e-34);
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_26_12();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_87_0();
      uint64_t v27 = OUTLINED_FUNCTION_20_10();
      OUTLINED_FUNCTION_19_14(v27);
      OUTLINED_FUNCTION_31_1(v24);
      OUTLINED_FUNCTION_39();
      uint64_t v28 = "%s Direct Invocation parse can't be transformed to PhoneCallNLIntent";
LABEL_25:
      v62 = v71;
      OUTLINED_FUNCTION_57_0(&dword_0, v3, v26, v28, v71);
      uint64_t v63 = v72;
      OUTLINED_FUNCTION_17_0(v72);
      OUTLINED_FUNCTION_0_2(v63);
      OUTLINED_FUNCTION_0_2((uint64_t)v62);

LABEL_27:
      OUTLINED_FUNCTION_28_9();
      (*(void (**)(uint64_t *, uint64_t))(v64 + 8))(v1, v65);
      goto LABEL_6;
    }

    goto LABEL_26;
  }

  if (v21 != enum case for Parse.NLv4IntentOnly(_:))
  {
    if (v21 == enum case for Parse.uso(_:))
    {
      OUTLINED_FUNCTION_22_12();
      uint64_t v55 = v67;
      uint64_t v54 = v68;
      uint64_t v56 = v69;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v68 + 32))(v67, v1, v69);
      uint64_t countAndFlagsBits = Parse.typeForLogging()()._countAndFlagsBits;
      USOParse.userParse.getter(countAndFlagsBits);
      NLTransformer.transformToPhoneCallNLIntent(typeForLogging:userParse:)();
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_15_0((uint64_t)v71);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v56);
      goto LABEL_6;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v59 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v59, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (uint64_t)v73;
    uint64_t v60 = OUTLINED_FUNCTION_11_18((uint64_t)v73);
    Logger.logObject.getter(v60);
    os_log_type_t v26 = OUTLINED_FUNCTION_55_5();
    if (OUTLINED_FUNCTION_54_2(v3))
    {
      OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v72 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_9_23(v72, 4.8149e-34);
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_26_12();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_87_0();
      uint64_t v61 = OUTLINED_FUNCTION_20_10();
      OUTLINED_FUNCTION_19_14(v61);
      OUTLINED_FUNCTION_31_1(v24);
      OUTLINED_FUNCTION_39();
      uint64_t v28 = "%s got an unknown parse";
      goto LABEL_25;
    }

LABEL_26:
    OUTLINED_FUNCTION_31_1(v24);
    goto LABEL_27;
  }

  OUTLINED_FUNCTION_22_12();
  uint64_t v29 = *v1;
  static ConversionUtils.toUserParse(from:)(v29);
  uint64_t v30 = v72;
  OUTLINED_FUNCTION_35(v4, 1LL, v72);
  if (v31)
  {
    outlined destroy of PhoneCallNLIntent?( v4,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
    uint64_t v32 = v73;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v33 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_70_3(v33, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_11_18((uint64_t)v32);
    uint64_t v34 = OUTLINED_FUNCTION_69_4(v29);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_54_2(v35))
    {
      uint64_t v37 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v38 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v72 = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v71 = (uint8_t *)(v37 + 4);
      uint64_t v39 = v32[4];
      uint64_t v40 = v32[5];
      uint64_t v42 = v32[6];
      uint64_t v41 = (void *)v32[7];
      OUTLINED_FUNCTION_33_11(v38);
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_76_4();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v39, v40, v42, v41);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_87_0();
      uint64_t v43 = OUTLINED_FUNCTION_8_20();
      uint64_t v44 = OUTLINED_FUNCTION_15_15(v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v44, v45, v71, v46);
      OUTLINED_FUNCTION_31_1((uint64_t)v32);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v75 = v29;
      swift_unknownObjectRetain(v29);
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIRINLUUserDialogAct);
      uint64_t v48 = OUTLINED_FUNCTION_52_6(v47, v47);
      uint64_t v50 = OUTLINED_FUNCTION_89(v48, v49);
      OUTLINED_FUNCTION_39_6(v50, v51, v52, v37 + 22);
      OUTLINED_FUNCTION_68_4(v29);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_33_6( &dword_0,  v35,  v36,  "%s couldn't transform UserDialogAct %s into UserParse to get the UDAs.",  (uint8_t *)v37);
      uint64_t v53 = v72;
      OUTLINED_FUNCTION_77_3();
      OUTLINED_FUNCTION_0_2(v53);
      OUTLINED_FUNCTION_0_2(v37);
      swift_unknownObjectRelease(v29);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v32);
      swift_unknownObjectRelease_n(v29, 3LL);
    }

    OUTLINED_FUNCTION_28_9();
  }

  else
  {
    uint64_t v58 = v71;
    OUTLINED_FUNCTION_56_4((uint64_t)v15, v4, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v71 + 4));
    Parse.typeForLogging()();
    NLTransformer.transformToPhoneCallNLIntent(typeForLogging:userParse:)();
    swift_unknownObjectRelease(v29);
    OUTLINED_FUNCTION_39();
    (*((void (**)(char *, uint64_t))v58 + 1))(v15, v30);
  }

  __break(1u);
}

  __break(1u);
}

    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  OUTLINED_FUNCTION_6_30();
  if (OUTLINED_FUNCTION_61_1() >= 1)
  {
    OUTLINED_FUNCTION_48_0();
    uint64_t v22 = OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_34_0();
    goto LABEL_11;
  }

      ++v6;
      if (v8 == v26) {
        goto LABEL_27;
      }
    }

    __break(1u);
LABEL_32:
    if (v4 < 0) {
      uint64_t v24 = v4;
    }
    else {
      uint64_t v24 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(v4, 2LL);
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v24);
  }

  __break(1u);
}

LABEL_6:
  OUTLINED_FUNCTION_7_5();
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v36 & 0xC000000000000001LL) == 0, v36);
  if ((v36 & 0xC000000000000001LL) != 0) {
    uint64_t v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v36);
  }
  else {
    uint64_t v39 = *(id *)(v36 + 32);
  }
  uint64_t v34 = v39;
  OUTLINED_FUNCTION_70_2();
LABEL_15:
  uint64_t v41 = OUTLINED_FUNCTION_63_3();
  if (!v41) {
    goto LABEL_27;
  }
  uint64_t v42 = v41;
  OUTLINED_FUNCTION_71();
  if (!v44)
  {
    if (*(void *)(v43 + 16)) {
      goto LABEL_18;
    }
LABEL_26:
    OUTLINED_FUNCTION_23_5();
    goto LABEL_27;
  }

  if (v42 >= 0) {
    uint64_t v48 = v43;
  }
  else {
    uint64_t v48 = v42;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v48)) {
    goto LABEL_26;
  }
LABEL_18:
  OUTLINED_FUNCTION_22_18();
  if ((v42 & 0xC000000000000001LL) != 0) {
    uint64_t v45 = OUTLINED_FUNCTION_25_23(0LL);
  }
  else {
    uint64_t v45 = (uint64_t)OUTLINED_FUNCTION_69_0();
  }
  uint64_t v46 = (void *)v45;
  OUTLINED_FUNCTION_23_5();
  uint64_t v47 = [v46 personHandle];

  if (v47)
  {
    HIDWORD(v62) = [v47 isSuggested];

    goto LABEL_28;
  }

  uint64_t v14 = type metadata accessor for TaskPriority(0LL);
  OUTLINED_FUNCTION_88(v3, 1LL, v15, v14);
  uint64_t v16 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FDD28, 56LL);
  v16[2] = 0LL;
  v16[3] = 0LL;
  v16[4] = v4;
  v16[5] = a1;
  v16[6] = a2;
  swift_retain();
  swift_retain();
  uint64_t v17 = (void *)_sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v3,  (uint64_t)&async function pointer to partial apply for closure #1 in UnsupportedCallFlowOutputFactory.makeUnsupportedOutput(completion:),  (uint64_t)v16);
  return swift_release(v17);
}

  OUTLINED_FUNCTION_10_47();
  uint64_t v9 = OUTLINED_FUNCTION_23_29();
  if (v8) {
    uint64_t v10 = (unsigned int *)&enum case for CommunicationTypeSignal.CommunicationType.groupVideoCall(_:);
  }
  else {
    uint64_t v10 = (unsigned int *)&enum case for CommunicationTypeSignal.CommunicationType.groupAudioCall(_:);
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104LL))(a4, *v10, v9);
}

  OUTLINED_FUNCTION_7_5();
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = swift_bridgeObjectRetain_n(v14, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  uint64_t v19 = static os_log_type_t.debug.getter(v17, v18);
  if (os_log_type_enabled(v17, v19))
  {
    uint64_t v20 = OUTLINED_FUNCTION_7_0(22LL);
    int v21 = OUTLINED_FUNCTION_7_0(64LL);
    v54[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    v53[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032LL, 0x800000000034D630LL, v54);
    OUTLINED_FUNCTION_7_80(v53[0], v22, v23, v20 + 12, v24, v25, v26, v27, v50, v52[0]);
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain();
    v53[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v14, v54);
    OUTLINED_FUNCTION_7_80(v53[0], v28, v29, v20 + 22, v30, v31, v32, v33, v51, v52[0]);
    swift_bridgeObjectRelease_n(v14, 3LL);
    OUTLINED_FUNCTION_5_77(&dword_0, v17, v34, "#UserFacingCallingAppUtils %s --> %s");
    OUTLINED_FUNCTION_4_79();
    OUTLINED_FUNCTION_0_2(v21);
    OUTLINED_FUNCTION_0_2(v20);
  }

  else
  {

    swift_bridgeObjectRelease_n(v14, 2LL);
  }

  return v3;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v25 & 0xC000000000000001LL) == 0, v25);
  if ((v25 & 0xC000000000000001LL) != 0) {
    os_log_type_t v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v25);
  }
  else {
    os_log_type_t v26 = *(id *)(v25 + 32);
  }
  uint64_t v23 = v26;
  swift_bridgeObjectRelease();
LABEL_14:
  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a5);
  if (!v27) {
    goto LABEL_25;
  }
  uint64_t v28 = v27;
  if (!((unint64_t)v27 >> 62))
  {
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }

  if (v27 >= 0) {
    v27 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v27)) {
    goto LABEL_24;
  }
LABEL_17:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v28 & 0xC000000000000001LL) == 0, v28);
  if ((v28 & 0xC000000000000001LL) != 0) {
    uint64_t v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v28);
  }
  else {
    uint64_t v29 = *(id *)(v28 + 32);
  }
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  char v31 = [v30 personHandle];

  if (v31)
  {
    uint64_t v46 = [v31 isSuggested];

    goto LABEL_26;
  }

  OUTLINED_FUNCTION_112_12(v40, (v37 & 0xC000000000000001LL) == 0);
  if ((v37 & 0xC000000000000001LL) != 0) {
    uint64_t v41 = OUTLINED_FUNCTION_224_2(0LL);
  }
  else {
    uint64_t v41 = (uint64_t)OUTLINED_FUNCTION_118_5();
  }
  uint64_t v35 = (void *)v41;
  OUTLINED_FUNCTION_34_0();
LABEL_15:
  uint64_t v43 = a21(v28);
  if (v43)
  {
    uint64_t v44 = v43;
    OUTLINED_FUNCTION_71();
    if (v46)
    {
      if (v44 >= 0) {
        uint64_t v51 = v45;
      }
      else {
        uint64_t v51 = v44;
      }
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter(v51);
      if (v47) {
        goto LABEL_18;
      }
    }

    else
    {
      uint64_t v47 = *(void *)(v45 + 16);
      if (v47)
      {
LABEL_18:
        OUTLINED_FUNCTION_112_12(v47, (v44 & 0xC000000000000001LL) == 0);
        if ((v44 & 0xC000000000000001LL) != 0) {
          uint64_t v48 = OUTLINED_FUNCTION_224_2(0LL);
        }
        else {
          uint64_t v48 = (uint64_t)OUTLINED_FUNCTION_118_5();
        }
        unint64_t v49 = (void *)v48;
        OUTLINED_FUNCTION_34_0();
        uint64_t v50 = [v49 personHandle];
        OUTLINED_FUNCTION_152_9();
        if (v33)
        {
          uint64_t v68 = [v33 isSuggested];
        }

        else
        {
          uint64_t v68 = 0;
        }

        goto LABEL_30;
      }
    }

    OUTLINED_FUNCTION_34_0();
  }

  uint64_t v68 = 0;
LABEL_30:
  OUTLINED_FUNCTION_26_0();
  uint64_t v52 = OUTLINED_FUNCTION_2_67((uint64_t)v33, 1LL);
  if ((v26 & 1) == 0)
  {
    SpeakableString.init(print:speak:)( 0x747369486C6C6163LL,  0xEB0000000079726FLL,  0x747369486C6C6163LL,  0xEB0000000079726FLL);
    outlined destroy of PhoneCallNLIntent?( (uint64_t)v33,  &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_2_67(v22, 0LL);
    uint64_t v52 = outlined init with take of SpeakableString?(v22, (uint64_t)v33);
  }

  uint64_t v67 = v33;
  uint64_t v53 = (void *)v69[5];
  uint64_t v69 = OUTLINED_FUNCTION_42_20(v52, "preferredCallProvider");
  OUTLINED_FUNCTION_18_22();
  OUTLINED_FUNCTION_162_10();
  uint64_t v55 = v76;
  uint64_t v54 = v77;
  __swift_project_boxed_opaque_existential_1(v75, v76);
  uint64_t v56 = v30;
  dispatch thunk of DeviceState.siriLocale.getter(v55, v54);
  __swift_destroy_boxed_opaque_existential_1(v75);
  static PhonePerson.make(phonePerson:options:locale:)(v35, 0, v30);
  uint64_t v58 = v57;
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  uint64_t v60 = v30;
  uint64_t v61 = v72;
  v59(v60, v72);
  OUTLINED_FUNCTION_162_10();
  uint64_t v63 = v76;
  v62 = v77;
  OUTLINED_FUNCTION_66(v75);
  dispatch thunk of DeviceState.siriLocale.getter(v63, v62);
  __swift_destroy_boxed_opaque_existential_1(v75);
  OUTLINED_FUNCTION_143_6(v35);
  uint64_t v65 = v64;
  v59(v56, v61);
  uint64_t v66 = (uint64_t)v67;
  (*(void (**)(BOOL, uint64_t, uint64_t, BOOL, void, char *, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                         + *v53
                                                                                         + 64))( v69 == (void *)((char *)&dword_0 + 2),  v58,  v65,  (v71 & 0xFFFFFFFFFFFFFFFELL) == 2,  v68,  v67,  v73,  v74);
  swift_release(v58);
  OUTLINED_FUNCTION_16_3();

  outlined destroy of PhoneCallNLIntent?(v66, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

  uint64_t v5 = 1;
LABEL_7:
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v5 & 1;
}

Swift::String __swiftcall Parse.typeForLogging()()
{
  uint64_t v1 = type metadata accessor for Parse(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_134();
  (*(void (**)(void *, void *, uint64_t))(v2 + 16))(v0, v0, v1);
  int v3 = (*(uint64_t (**)(void *, uint64_t))(v2 + 88))(v0, v1);
  if (v3 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    swift_unknownObjectRelease(*v0);
    unint64_t v4 = OUTLINED_FUNCTION_4_103();
  }

  else
  {
    int v6 = v3;
    int v7 = enum case for Parse.uso(_:);
    OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    if (v6 == v7) {
      unint64_t v4 = 7304053LL;
    }
    else {
      unint64_t v4 = 0xD000000000000012LL;
    }
    if (v6 == v7) {
      uint64_t v5 = (void *)0xE300000000000000LL;
    }
    else {
      uint64_t v5 = (void *)0x8000000000346750LL;
    }
  }

  result._object = v5;
  result._uint64_t countAndFlagsBits = v4;
  return result;
}

void NLTransformer.transformToPhoneCallNLIntent(typeForLogging:userParse:)()
{
  unint64_t v4 = (void *)v0;
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin(v11);
  uint64_t v12 = (os_log_s *)OUTLINED_FUNCTION_23_12();
  OUTLINED_FUNCTION_60_5();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_61_3();
  Siri_Nlu_External_UserParse.preferredUserDialogAct.getter(v2);
  OUTLINED_FUNCTION_35(v2, 1LL, (uint64_t)v12);
  if (v14)
  {
    outlined destroy of PhoneCallNLIntent?( v2,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_70_3(v15, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_11_18(v0);
    uint64_t v16 = swift_bridgeObjectRetain_n(v6, 2LL);
    Logger.logObject.getter(v16);
    os_log_type_t v17 = OUTLINED_FUNCTION_55_5();
    if (os_log_type_enabled(v12, v17))
    {
      uint64_t v18 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v24 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v25 = 0LL;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v23 = v8;
      uint64_t v19 = v4[4];
      uint64_t v20 = v4[5];
      uint64_t v22 = v4[6];
      int v21 = (void *)v4[7];
      unint64_t v26 = 0xE000000000000000LL;
      uint64_t v27 = v24;
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_36_1();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v19, v20, v22, v21);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_129();
      uint64_t v25 = OUTLINED_FUNCTION_8_20();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v18 + 4, v18 + 12);
      OUTLINED_FUNCTION_31_1((uint64_t)v4);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v18 + 12) = 2080;
      OUTLINED_FUNCTION_48_0();
      uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v6, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v18 + 14, v18 + 22);
      swift_bridgeObjectRelease_n(v6, 3LL);
      OUTLINED_FUNCTION_33_6(&dword_0, v12, v17, "%s %s: No user dialog act found in userParse.", (uint8_t *)v18);
      OUTLINED_FUNCTION_12_24();
      OUTLINED_FUNCTION_0_2(v24);
      OUTLINED_FUNCTION_0_2(v18);
    }

    else
    {

      swift_bridgeObjectRelease_n(v6, 2LL);
      OUTLINED_FUNCTION_31_1((uint64_t)v4);
    }

    *(void *)(v10 + 32) = 0LL;
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    OUTLINED_FUNCTION_51_5(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    (*(void (**)(uint64_t))(*(void *)v0 + 216LL))(v3);
    OUTLINED_FUNCTION_71_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t NLTransformer.transformToPhoneCallNLIntent(usoUserDialogAct:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v4;
  NLTransformer.transformationResult(userDialogAct:)(a1, &v7);
  NLTransformer.appendToNLIntentHistory(transformationResult:)(&v7);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)&v8,  a2,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  Signpost.OpenSignpost.end()();
  return swift_release(v5);
}

void NLTransformer.transformationResult(userDialogAct:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = Siri_Nlu_External_UserDialogAct.hashValue.getter();
  NLTransformer.alreadyTransformed(newHash:)(v5, v30);
  if (v31 == 1)
  {
    OUTLINED_FUNCTION_58_4(v6, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    uint64_t v7 = (*(void *(**)(_OWORD *__return_ptr))(*(void *)v2 + 152LL))(v30);
    if (v31 == 1)
    {
      OUTLINED_FUNCTION_58_4( (uint64_t)v7,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
      memset(v28, 0, sizeof(v28));
      uint64_t v29 = 0LL;
    }

    else
    {
      outlined init with copy of TransformationResult?( (uint64_t)v30 + 8,  (uint64_t)v28,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      OUTLINED_FUNCTION_58_4(v8, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    }

    (*(void (**)(void *__return_ptr, uint64_t, _OWORD *))(**(void **)(v2 + 16) + 96LL))(v27, a1, v28);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v9 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_70_3(v9, (uint64_t)static Logger.siriPhone);
    outlined init with copy of TransformationResult?( (uint64_t)v27,  (uint64_t)v30,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    uint64_t v10 = OUTLINED_FUNCTION_11_18(v2);
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_54_2(v11))
    {
      uint64_t v23 = v5;
      uint64_t v13 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v22 = OUTLINED_FUNCTION_7_0(64LL);
      v24[0] = v22;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v15 = *(void *)(v2 + 32);
      uint64_t v14 = *(void *)(v2 + 40);
      uint64_t v16 = *(void *)(v2 + 48);
      uint64_t v25 = 0LL;
      v26[0] = 0xE000000000000000LL;
      OUTLINED_FUNCTION_6_1();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_90_1(v15, v14, v16);
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_70_2();
      uint64_t v25 = OUTLINED_FUNCTION_10_3(0LL, v17, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v13 + 4, v13 + 12);
      OUTLINED_FUNCTION_31_1(v2);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v13 + 12) = 2080;
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLIntent?);
      uint64_t v19 = Optional.debugDescription.getter(v18);
      uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v13 + 14, v13 + 22);
      OUTLINED_FUNCTION_62();
      outlined destroy of PhoneCallNLIntent?( (uint64_t)v30,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      OUTLINED_FUNCTION_33_6( &dword_0,  v11,  v12,  "%s found no cached result. Transformation generated phoneNLIntent: %s",  (uint8_t *)v13);
      OUTLINED_FUNCTION_12_24();
      OUTLINED_FUNCTION_0_2(v22);
      uint64_t v21 = v13;
      uint64_t v5 = v23;
      OUTLINED_FUNCTION_0_2(v21);
    }

    else
    {

      outlined destroy of PhoneCallNLIntent?( (uint64_t)v30,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      OUTLINED_FUNCTION_31_1(v2);
    }

    outlined destroy of PhoneCallNLIntent?( (uint64_t)v28,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    *a2 = v5;
    outlined init with take of PhoneCallNLIntent?( (uint64_t)v27,  (uint64_t)(a2 + 1),  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    OUTLINED_FUNCTION_74_2();
    outlined init with take of PhoneCallNLIntent?( (uint64_t)v30,  (uint64_t)&v25,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    OUTLINED_FUNCTION_25_0(v2 + 72, (uint64_t)v24, 33LL);
    OUTLINED_FUNCTION_88_2((uint64_t)&v25);
    swift_endAccess(v24);
  }

  else
  {
    OUTLINED_FUNCTION_57_3();
  }
}

  ;
}

  ;
}

  ;
}

void NLTransformer.alreadyTransformed(newHash:)(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  (*(void (**)(__int128 *__return_ptr))(*(void *)v2 + 152LL))(&v79);
  if ((void)v81 != 1LL)
  {
    __int128 v82 = v79;
    __int128 v83 = v80;
    __int128 v84 = v81;
    if ((void)v79 != a1)
    {
      outlined destroy of TransformationResult((uint64_t)&v82);
      goto LABEL_10;
    }

    outlined init with copy of TransformationResult?( (uint64_t)&v82 + 8,  (uint64_t)&v79,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    uint64_t v6 = (os_log_s *)*((void *)&v80 + 1);
    outlined destroy of PhoneCallNLIntent?( (uint64_t)&v79,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    if (v6)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v7 = OUTLINED_FUNCTION_15_1();
      uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_50_9(v8, v9, v10, v11, v12, v13, v14, v15);
      uint64_t v16 = OUTLINED_FUNCTION_11_18(v2);
      Logger.logObject.getter(v16);
      os_log_type_t v17 = OUTLINED_FUNCTION_64_1();
      if (OUTLINED_FUNCTION_14_15(v17))
      {
        uint64_t v18 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v76 = OUTLINED_FUNCTION_7_0(64LL);
        uint64_t v77 = 0LL;
        uint64_t v78 = v76;
        OUTLINED_FUNCTION_16_13(4.8151e-34);
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_27_12();
        OUTLINED_FUNCTION_70_2();
        OUTLINED_FUNCTION_129();
        uint64_t v20 = OUTLINED_FUNCTION_10_3(0LL, v19, &v78);
        OUTLINED_FUNCTION_21_13(v20, v21, v22);
        OUTLINED_FUNCTION_31_1(v2);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v18 + 12) = 2080;
        outlined init with copy of TransformationResult?( (uint64_t)&v79 + 8,  (uint64_t)&v77,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLIntent?);
        uint64_t v24 = String.init<A>(describing:)(&v77, v23);
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v78);
        OUTLINED_FUNCTION_72_3();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v26, v27, v18 + 14, v28);
        uint64_t v29 = OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_80_2(v29, v30, v31, v32, v33, v34, v35, v36);
        uint64_t v37 = "%s found cached result. Returning result: %s";
LABEL_15:
        OUTLINED_FUNCTION_33_6(&dword_0, v6, v3, v37, (uint8_t *)v18);
        OUTLINED_FUNCTION_12_24();
        OUTLINED_FUNCTION_0_2(v76);
        OUTLINED_FUNCTION_0_2(v18);
LABEL_17:

        __int128 v75 = v83;
        *a2 = v82;
        a2[1] = v75;
        __int128 v38 = v84;
        goto LABEL_18;
      }
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v39 = OUTLINED_FUNCTION_15_1();
      uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_50_9(v40, v41, v42, v43, v44, v45, v46, v47);
      uint64_t v48 = OUTLINED_FUNCTION_11_18(v2);
      Logger.logObject.getter(v48);
      os_log_type_t v49 = OUTLINED_FUNCTION_64_1();
      if (OUTLINED_FUNCTION_14_15(v49))
      {
        uint64_t v18 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v76 = OUTLINED_FUNCTION_7_0(64LL);
        uint64_t v78 = v76;
        OUTLINED_FUNCTION_16_13(4.8151e-34);
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_27_12();
        OUTLINED_FUNCTION_70_2();
        OUTLINED_FUNCTION_129();
        uint64_t v51 = OUTLINED_FUNCTION_10_3(0LL, v50, &v78);
        OUTLINED_FUNCTION_21_13(v51, v52, v53);
        OUTLINED_FUNCTION_31_1(v2);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v18 + 12) = 2080;
        uint64_t v77 = v79;
        uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, &v78);
        OUTLINED_FUNCTION_72_3();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v56, v57, v18 + 14, v58);
        uint64_t v59 = OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_80_2(v59, v60, v61, v62, v63, v64, v65, v66);
        uint64_t v37 = "%s found in cache entry-key %s with a nil value. Returning nil as upstream transformer failed";
        goto LABEL_15;
      }
    }

    uint64_t v67 = OUTLINED_FUNCTION_31_1(v2);
    OUTLINED_FUNCTION_80_2(v67, v68, v69, v70, v71, v72, v73, v74);
    goto LABEL_17;
  }

  outlined destroy of PhoneCallNLIntent?( (uint64_t)&v79,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
LABEL_10:
  OUTLINED_FUNCTION_57_2();
  __int128 v38 = xmmword_31D8A0;
LABEL_18:
  a2[2] = v38;
}

void NLTransformer.currentTransformation.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + 72;
  OUTLINED_FUNCTION_25_0(v3, (uint64_t)v4, 0LL);
  outlined init with copy of TransformationResult?( v3,  a1,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
}

void outlined init with copy of Result<TemplatingResult, Error>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  OUTLINED_FUNCTION_2();
}

void outlined init with copy of TransformationResult?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = OUTLINED_FUNCTION_25_13(a1, a2, a3);
  OUTLINED_FUNCTION_43_0(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  OUTLINED_FUNCTION_2();
}

uint64_t getEnumTagSinglePayload for TransformationResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 32);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

void *initializeWithCopy for TransformationResult(void *a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2 + 1;
  *a1 = v5;
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    (**(void (***)(void *, void *))(v7 - 8))(v6, v4);
  }

  else
  {
    __int128 v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *((_OWORD *)v6 + 1) = v9;
    v6[4] = v4[4];
  }

  return a1;
}

uint64_t storeEnumTagSinglePayload for TransformationResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)Swift::String result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }

  return result;
}

uint64_t outlined destroy of TransformationResult(uint64_t a1)
{
  return a1;
}

uint64_t destroy for TransformationResult(uint64_t result)
{
  if (*(void *)(result + 32)) {
    return __swift_destroy_boxed_opaque_existential_1((void *)(result + 8));
  }
  return result;
}

void NLv4Transformer.transformUserDialogAct(userDialogAct:previousPhoneCallNLIntent:)()
{
  void (*v35)(uint64_t *__return_ptr, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_s *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];
  uint64_t v54;
  unint64_t v55[5];
  OUTLINED_FUNCTION_29_2();
  uint64_t v50 = v0;
  uint64_t v52 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v51 = type metadata accessor for TransformerInput(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_11_0();
  os_log_type_t v49 = v8;
  uint64_t v9 = OUTLINED_FUNCTION_20_56();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_15();
  uint64_t v48 = v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - v14;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_15_1();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = *(void *)(v10 + 16);
  uint64_t v19 = OUTLINED_FUNCTION_91_15((uint64_t)v15, v4);
  uint64_t v46 = v17;
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  uint64_t v41 = static os_log_type_t.debug.getter();
  BOOL v21 = os_log_type_enabled(v20, (os_log_type_t)v41);
  uint64_t v47 = v18;
  if (v21)
  {
    uint64_t v42 = v10;
    uint64_t v43 = v1;
    uint64_t v39 = v20;
    uint64_t v40 = v4;
    uint64_t v44 = v9;
    uint64_t v45 = v6;
    uint64_t v22 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v23 = OUTLINED_FUNCTION_7_0(64LL);
    v53[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    if (one-time initialization token for logPrefix != -1) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v25 = static NLv4Transformer.logPrefix;
    uint64_t v24 = *(void *)algn_478188;
    uint64_t v26 = qword_478190;
    uint64_t v27 = (void *)unk_478198;
    uint64_t v54 = 0LL;
    v55[0] = 0xE000000000000000LL;
    OUTLINED_FUNCTION_20_14();
    OUTLINED_FUNCTION_8_1();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v25, v24, v26, v27);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_39();
    uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55[0], v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v22 + 4, v22 + 12);
    OUTLINED_FUNCTION_39();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v28 = v48;
    OUTLINED_FUNCTION_91_15(v48, (uint64_t)v15);
    uint64_t v29 = specialized String.init(describing:)(v28);
    unint64_t v31 = v30;
    uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v22 + 14, v22 + 22);
    swift_bridgeObjectRelease(v31);
    OUTLINED_FUNCTION_87_14(v42);
    uint64_t v32 = v39;
    OUTLINED_FUNCTION_33_6( &dword_0,  v39,  (os_log_type_t)v41,  "%s attempting to transform %s into NLv4PhoneCallNLIntent.",  (uint8_t *)v22);
    OUTLINED_FUNCTION_42_2(v23);
    OUTLINED_FUNCTION_0_2(v23);
    OUTLINED_FUNCTION_0_2(v22);

    uint64_t v4 = v40;
  }

  else
  {
    OUTLINED_FUNCTION_87_14(v10);
  }

  uint64_t v33 = v49;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  uint64_t v35 = (void (*)(uint64_t *__return_ptr, uint64_t))Transformer.transform.getter(v34);
  uint64_t v37 = v36;
  OUTLINED_FUNCTION_91_15(v33, v4);
  outlined init with copy of PhoneCallNLIntent?( v52,  v33 + *(int *)(v51 + 20),  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  v35(&v54, v33);
  swift_release(v37);
  outlined destroy of MainFlow(v33, type metadata accessor for TransformerInput);
  OUTLINED_FUNCTION_120_11((uint64_t)&v54, v38, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  OUTLINED_FUNCTION_7_5();
}

uint64_t type metadata accessor for TransformerInput(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for TransformerInput,  (uint64_t)&nominal type descriptor for TransformerInput);
}

uint64_t specialized String.init(describing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[3] = a2;
  v10[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32LL))(boxed_opaque_existential_1, a1, a2);
  type metadata accessor for SiriNLUTypesPrintUtils(0LL);
  v9[0] = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(v10);
  v9[1] = v6;
  uint64_t v7 = String.init<A>(_:)( v9,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  __swift_destroy_boxed_opaque_existential_1(v10);
  return v7;
}

void lazy protocol witness table accessor for type UUID and conformance UUID( unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = a2(255LL);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  OUTLINED_FUNCTION_2();
}

void *__swift_allocate_boxed_opaque_existential_1(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_50()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_65()
{
  return static CATOption.defaultMode.getter();
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_13(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return static os_log_type_t.debug.getter();
}

BOOL OUTLINED_FUNCTION_7(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_22()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_7_0(uint64_t a1)
{
  return swift_slowAlloc(a1, -1LL);
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  return v0;
}

void *OUTLINED_FUNCTION_66(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_22_0(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_65_1()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_76()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, a4);
}

uint64_t OUTLINED_FUNCTION_129()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_17()
{
  return v0;
}

void *OUTLINED_FUNCTION_30@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  _BYTE *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_38()
{
  return *v0;
}

BOOL OUTLINED_FUNCTION_10(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_12()
{
  return type metadata accessor for UUID(0LL);
}

uint64_t OUTLINED_FUNCTION_65_2()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_18()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0 - 128));
}

uint64_t OUTLINED_FUNCTION_59()
{
  return swift_retain(v0);
}

__n128 *OUTLINED_FUNCTION_65_3(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x73746361746E6F63LL;
  result[2].n128_u64[1] = 0xE800000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_175()
{
  return v1(v0);
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

void *OUTLINED_FUNCTION_82(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

  ;
}

  ;
}

id OUTLINED_FUNCTION_65_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_65_7( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t OUTLINED_FUNCTION_65_8(char a1)
{
  return v2(v1, 0LL, 0LL, 0LL, 0LL, a1 & 1);
}

uint64_t OUTLINED_FUNCTION_221( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return __swift_destroy_boxed_opaque_existential_1(&a9);
}

void OUTLINED_FUNCTION_65_9(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_24()
{
  return static os_log_type_t.error.getter();
}

uint64_t OUTLINED_FUNCTION_65_10()
{
  return swift_task_alloc(v0);
}

uint64_t OUTLINED_FUNCTION_57(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16LL))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_69()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_65_11(uint64_t a1)
{
  v2[18] = v1;
  v2[21] = a1;
  v2[22] = 0x746E65746E69LL;
  v2[23] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_65_12()
{
  return swift_bridgeObjectRetain_n(*v0, 2LL);
}

uint64_t OUTLINED_FUNCTION_65_13()
{
  return type metadata accessor for DisambiguationItemWithDirectInvocationModel(0LL);
}

uint64_t OUTLINED_FUNCTION_65_14()
{
  return swift_task_dealloc(*(void *)(v0 + 176));
}

uint64_t OUTLINED_FUNCTION_65_15(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

void OUTLINED_FUNCTION_65_16(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

void OUTLINED_FUNCTION_65_17()
{
}

uint64_t OUTLINED_FUNCTION_65_18(uint64_t a1)
{
  *(void *)(v4 - 160) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 - 160, v3 + 8, v2, v1);
}

uint64_t OUTLINED_FUNCTION_65_19()
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, v0);
}

uint64_t OUTLINED_FUNCTION_65_20(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  uint64_t result = *(void *)(v2 + 168);
  v5[3] = *(void *)(v2 + 256);
  v5[4] = v4;
  v5[2] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_65_21(uint64_t a1, uint64_t a2)
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, a2, v2);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t static Transformer<>.findNextVoicemailTask(usoTask:)(uint64_t a1, uint64_t (*a2)(void))
{
  if (v7)
  {
    uint64_t v3 = a2(0LL);
    uint64_t result = OUTLINED_FUNCTION_105_8((uint64_t)&v5, (uint64_t)v6, (uint64_t)&type metadata for Any + 8, v3);
    if ((_DWORD)result)
    {
      swift_release(v5);
      return 1LL;
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)v6, &demangling cache variable for type metadata for Any?);
    return 0LL;
  }

  return result;
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void outlined destroy of UUID?(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_2_0(v2);
  OUTLINED_FUNCTION_2();
}

void outlined destroy of MainFlow(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2(0LL);
  OUTLINED_FUNCTION_2_0(v2);
  OUTLINED_FUNCTION_2();
}

void *destroy for TransformerInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t result = (void *)(a1 + *(int *)(a2 + 20));
  if (result[3]) {
    return (void *)__swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

void *outlined init with copy of TransformationResult(uint64_t *a1, void *a2)
{
  return a2;
}

void *assignWithCopy for TransformationResult(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1 + 1;
  uint64_t v4 = a2 + 1;
  uint64_t v5 = a2[4];
  if (!a1[4])
  {
    if (v5)
    {
      a1[4] = v5;
      a1[5] = a2[5];
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
      return a1;
    }

LABEL_7:
    __int128 v6 = *(_OWORD *)v4;
    __int128 v7 = *((_OWORD *)v4 + 1);
    v3[4] = v4[4];
    *(_OWORD *)uint64_t v3 = v6;
    *((_OWORD *)v3 + 1) = v7;
    return a1;
  }

  if (!v5)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 1);
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  return a1;
}

  OUTLINED_FUNCTION_38_5();
}

  OUTLINED_FUNCTION_7_5();
}

    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }

  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }

  *a1 = *a2;
  __int128 v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

  unint64_t v30 = v139[6];
  unint64_t v31 = v139[7];
  __swift_project_boxed_opaque_existential_1(v139 + 3, v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 72))(v30, v31);
  uint64_t v33 = v142;
  (*(void (**)(__int128 *__return_ptr, void))(*(void *)v32 + 192LL))(&v143, v142);
  swift_release(v32);
  if (v144)
  {
    outlined init with take of AppSelectionSignalComponent(&v143, (uint64_t)v145);
    specialized IntentFromParseFlowStrategyHelper.makeIntentFromParseSiriX(parse:nlIntent:previousIntent:)();
    __swift_destroy_boxed_opaque_existential_1(v145);
LABEL_9:
    OUTLINED_FUNCTION_7_5();
    return;
  }

  outlined destroy of PhoneCallNLIntent?((uint64_t)&v143);
  v113 = OUTLINED_FUNCTION_142(v2, (uint64_t)v141, v3[2]);
  Logger.logObject.getter(v113);
  v114 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_87(v114))
  {
    v115 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    v116 = OUTLINED_FUNCTION_7_0(32LL);
    v145[0] = v116;
    OUTLINED_FUNCTION_31_18(4.8149e-34);
    *(void *)&v143 = OUTLINED_FUNCTION_47_0(80LL, v117, v118);
    OUTLINED_FUNCTION_32_18((uint64_t)&v143, (uint64_t)&v143 + 8);
    OUTLINED_FUNCTION_57_0(&dword_0, (os_log_s *)v13, v33, "%s", v115);
    OUTLINED_FUNCTION_17_0(v116);
    OUTLINED_FUNCTION_0_2(v116);
    OUTLINED_FUNCTION_0_2((uint64_t)v115);
  }

  OUTLINED_FUNCTION_33_21(80LL);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  80LL,  v119,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
}

    __break(1u);
    goto LABEL_8;
  }

  uint64_t v15 = 0LL;
LABEL_8:
  if (a8 >> 60 == 15)
  {
    isa = 0LL;
  }

  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a7, a8);
  }

  uint64_t v17 = [v8 initWithContentIdentifier:v13 context:v14 osBuild:v15 userInfo:isa];

  return v17;
}

  __break(1u);
}

  swift_bridgeObjectRetain();
  uint64_t v34 = (unint64_t *)(v16 + 40);
  uint64_t v28 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v35 = *v34;
    if (*v34)
    {
      uint64_t v36 = *(v34 - 1);
      uint64_t v37 = HIBYTE(v35) & 0xF;
      if ((v35 & 0x2000000000000000LL) == 0) {
        uint64_t v37 = v36 & 0xFFFFFFFFFFFFLL;
      }
      if (v37)
      {
        OUTLINED_FUNCTION_6_3();
        if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
        {
          OUTLINED_FUNCTION_118_2(0LL, v28[2] + 1LL);
          uint64_t v28 = v41;
        }

        uint64_t v39 = v28[2];
        __int128 v38 = v28[3];
        if (v39 >= v38 >> 1)
        {
          OUTLINED_FUNCTION_118_2(v38 > 1, v39 + 1);
          uint64_t v28 = v42;
        }

        _OWORD v28[2] = v39 + 1;
        uint64_t v40 = &v28[2 * v39];
        v40[4] = v36;
        v40[5] = v35;
      }
    }

    v34 += 2;
    --v27;
  }

  while (v27);
  OUTLINED_FUNCTION_34_0();
LABEL_19:
  OUTLINED_FUNCTION_34_0();
  v51[1] = v28;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  uint64_t v44 = lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v45 = BidirectionalCollection<>.joined(separator:)(32LL, 0xE100000000000000LL, v43, v44);
  uint64_t v47 = v46;
  OUTLINED_FUNCTION_50();
  uint64_t v48 = HIBYTE(v47) & 0xF;
  if ((v47 & 0x2000000000000000LL) == 0) {
    uint64_t v48 = v45 & 0xFFFFFFFFFFFFLL;
  }
  if (!v48)
  {
    os_log_type_t v49 = OUTLINED_FUNCTION_62();
    uint64_t v50 = OUTLINED_FUNCTION_17_5(v49, "displayName");
    OUTLINED_FUNCTION_72_12((uint64_t)v50);
  }

  OUTLINED_FUNCTION_7_5();
}

    memcpy(v20, v21, 0x41uLL);
    goto LABEL_8;
  }

  if (!v23)
  {
    outlined destroy of PhoneContactHeader(v20);
    goto LABEL_7;
  }

  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 2) = *((void *)v21 + 2);
  *((void *)v20 + 3) = *((void *)v21 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 4) = *((void *)v21 + 4);
  *((void *)v20 + 5) = *((void *)v21 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v20 + 6) = *((void *)v21 + 6);
  *((void *)v20 + 7) = *((void *)v21 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[64] = v21[64];
LABEL_8:
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  _WORD *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

    uint64_t v5 = *(_OWORD *)(a2 + 16);
    __int128 v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    goto LABEL_8;
  }

  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 16));
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 16), (void *)(a2 + 16));
LABEL_8:
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  *(_BYTE *)(a1 + 75) = *(_BYTE *)(a2 + 75);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_BYTE *)(a1 + 77) = *(_BYTE *)(a2 + 77);
  *(_BYTE *)(a1 + 78) = *(_BYTE *)(a2 + 78);
  *(_BYTE *)(a1 + 79) = *(_BYTE *)(a2 + 79);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

  uint64_t v32 = v142[7];
  OUTLINED_FUNCTION_49_0(v142 + 3);
  uint64_t v33 = OUTLINED_FUNCTION_84_5();
  uint64_t v35 = v34(v33);
  uint64_t v36 = v141;
  (*(void (**)(__int128 *__return_ptr, void))(*(void *)v35 + 192LL))(&v144, v141);
  swift_release(v35);
  if (v145)
  {
    outlined init with take of AppSelectionSignalComponent(&v144, (uint64_t)v147);
    IntentFromParseFlowStrategyHelper.makeIntentFromParseSiriX(parse:nlIntent:previousIntent:)(v36, (uint64_t)v147, v139);
    __swift_destroy_boxed_opaque_existential_1(v147);
LABEL_9:
    OUTLINED_FUNCTION_7_5();
    return;
  }

  outlined destroy of PhoneCallNLIntent?((uint64_t)&v144);
  v116 = (*(uint64_t (**)(uint8_t *, uint64_t, uint64_t))(v129 + 16))(v128, v21, v14);
  Logger.logObject.getter(v116);
  v117 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_87(v117))
  {
    v118 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    v119 = OUTLINED_FUNCTION_7_0(32LL);
    v147[0] = v119;
    OUTLINED_FUNCTION_97_7(4.8149e-34);
    *(void *)&v144 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000050LL, v120, v147);
    OUTLINED_FUNCTION_32_18((uint64_t)&v144, (uint64_t)&v144 + 8);
    OUTLINED_FUNCTION_57_0(&dword_0, (os_log_s *)v36, (os_log_type_t)v32, "%s", v118);
    OUTLINED_FUNCTION_17_0(v119);
    OUTLINED_FUNCTION_0_2(v119);
    OUTLINED_FUNCTION_0_2((uint64_t)v118);
  }

  OUTLINED_FUNCTION_33_21(80LL);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  80LL,  v121,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
}

    uint64_t v5 = *a2;
    __int128 v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }

  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1((void *)a1);
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_1((void *)a1, a2);
  return a1;
}

  uint64_t v33 = v4;
  uint64_t v34 = v5;
  uint64_t v35 = v6;
  uint64_t v36 = (os_log_s *)v2[7];
  uint64_t v37 = v2[8];
  OUTLINED_FUNCTION_82(v2 + 4);
  __int128 v38 = v2[29];
  __swift_project_boxed_opaque_existential_1(v122, v2[28]);
  uint64_t v39 = OUTLINED_FUNCTION_272_2();
  v40(v39);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, __int128 *, os_log_s *, uint64_t))(v37 + 8))( v132,  v33,  v34,  v35,  &v134,  v36,  v37);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_4_1();
  __swift_destroy_boxed_opaque_existential_1(&v134);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v132,  (uint64_t)v133,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v133[0])
  {
    v134 = v133[0];
    v135 = v133[1];
    v136 = v133[2];
    uint64_t v41 = *((void *)&v133[0] + 1);
    uint64_t v42 = OUTLINED_FUNCTION_124();
    uint64_t v43 = specialized Set._isDisjoint<A>(with:)(v42, v41);
    OUTLINED_FUNCTION_4_1();
    if ((v43 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v44 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v44, (uint64_t)static Logger.siriPhone);
      uint64_t v45 = OUTLINED_FUNCTION_67();
      uint64_t v46 = OUTLINED_FUNCTION_205_4(v45);
      uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
      uint64_t v48 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_95_11(v47))
      {
        os_log_type_t v49 = OUTLINED_FUNCTION_7_0(22LL);
        v124 = OUTLINED_FUNCTION_7_0(64LL);
        v137[0] = v124;
        *(_DWORD *)os_log_type_t v49 = 136315394;
        uint64_t v51 = v2[48];
        uint64_t v50 = v2[49];
        uint64_t v52 = v2[50];
        v128 = 0xE000000000000000LL;
        OUTLINED_FUNCTION_128();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_26_49(v51, v50, v52);
        OUTLINED_FUNCTION_23_5();
        OUTLINED_FUNCTION_70_2();
        v127 = OUTLINED_FUNCTION_10_3(0LL, v53, v137);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v49 + 4, v49 + 12);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v49 + 12) = 2080;
        uint64_t v54 = OUTLINED_FUNCTION_124();
        unint64_t v55 = Array.description.getter(v54, &type metadata for String);
        OUTLINED_FUNCTION_4_1();
        v127 = OUTLINED_FUNCTION_242(v55, v56, v137);
        OUTLINED_FUNCTION_14_0((uint64_t)&v127, (uint64_t)&v128, v57, v49 + 22);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_87_0();
        OUTLINED_FUNCTION_33_6( &dword_0,  v47,  v48,  "%s App found but doesn't support requested intents: %s",  (uint8_t *)v49);
        OUTLINED_FUNCTION_42_2(v124);
        OUTLINED_FUNCTION_0_2(v124);
        OUTLINED_FUNCTION_0_2(v49);
      }

      else
      {

        OUTLINED_FUNCTION_204_2((uint64_t)v2);
      }

      OUTLINED_FUNCTION_103_8();
      v91 = v134;
      v90 = static AppResolutionAction.appNotSupported(app:)(v134);
      OUTLINED_FUNCTION_34_0();
      swift_release(v91);
      _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v135,  (uint64_t)&v127,  &demangling cache variable for type metadata for String?);
      outlined release of String?((uint64_t)&v127);
      v137[0] = *((void *)&v136 + 1);
      v92 = v137;
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v63 = OUTLINED_FUNCTION_15_1();
      uint64_t v64 = (os_log_s *)__swift_project_value_buffer(v63, (uint64_t)static Logger.siriPhone);
      uint64_t v65 = v134;
      OUTLINED_FUNCTION_186_3((uint64_t)&v135, v66, &demangling cache variable for type metadata for String?);
      v138 = *((void *)&v136 + 1);
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_95_1();
      OUTLINED_FUNCTION_48_0();
      OUTLINED_FUNCTION_130_3();
      OUTLINED_FUNCTION_128_8();
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_95_1();
      OUTLINED_FUNCTION_48_0();
      OUTLINED_FUNCTION_130_3();
      uint64_t v67 = OUTLINED_FUNCTION_128_8();
      Logger.logObject.getter(v67);
      uint64_t v68 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_4(v68))
      {
        uint64_t v69 = OUTLINED_FUNCTION_7_0(22LL);
        v121 = OUTLINED_FUNCTION_7_0(64LL);
        v126 = v121;
        v127 = 0LL;
        *(_DWORD *)uint64_t v69 = 136315394;
        LODWORD(v117) = v38;
        uint64_t v71 = v2[48];
        uint64_t v70 = v2[49];
        v128 = 0xE000000000000000LL;
        OUTLINED_FUNCTION_20_14();
        OUTLINED_FUNCTION_76_4();
        v115 = v64;
        OUTLINED_FUNCTION_39_27(v71, v70);
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_87_0();
        v127 = OUTLINED_FUNCTION_10_3(v127, v72, &v126);
        OUTLINED_FUNCTION_171_5((uint64_t)&v127, v73, v74, v69 + 12);
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v69 + 12) = 2080;
        OUTLINED_FUNCTION_95_1();
        OUTLINED_FUNCTION_48_0();
        OUTLINED_FUNCTION_130_3();
        OUTLINED_FUNCTION_128_8();
        __int128 v75 = AnnotatedApp.description.getter();
        uint64_t v77 = v76;
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_76();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
        v127 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v77, &v126);
        OUTLINED_FUNCTION_171_5((uint64_t)&v127, v78, v79, v69 + 22);
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_76();
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_76();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
        __int128 v80 = v115;
        OUTLINED_FUNCTION_33_6(&dword_0, v115, (os_log_type_t)v117, "%s Selecting and caching app: %s", (uint8_t *)v69);
        v89 = OUTLINED_FUNCTION_222_2(v81, v82, v83, v84, v85, v86, v87, v88, (uint64_t)v115, v117, v121);
        OUTLINED_FUNCTION_42_2(v89);
        OUTLINED_FUNCTION_0_2(v75);
        OUTLINED_FUNCTION_0_2(v69);
      }

      else
      {
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_76();
        OUTLINED_FUNCTION_31_1((uint64_t)v2);
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_76();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
      }

      OUTLINED_FUNCTION_5_0(v122);
      v93 = OUTLINED_FUNCTION_140_8();
      v94(v93);
      v95 = v130;
      v96 = v131;
      __swift_project_boxed_opaque_existential_1(&v127, v130);
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v96 + 8))(&v134, v95, v96);
      __swift_destroy_boxed_opaque_existential_1(&v127);
      OUTLINED_FUNCTION_103_8();
      v90 = static AppResolutionAction.select(app:)(v65);
      OUTLINED_FUNCTION_34_0();
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_13_11();
      v92 = &v138;
    }

    outlined release of Set<String>(v92);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v58 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v58, (uint64_t)static Logger.siriPhone);
    uint64_t v59 = OUTLINED_FUNCTION_11_18((uint64_t)v2);
    Logger.logObject.getter(v59);
    uint64_t v60 = OUTLINED_FUNCTION_73_23();
    if (OUTLINED_FUNCTION_33_10(v60))
    {
      uint64_t v61 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      v125 = OUTLINED_FUNCTION_7_0(32LL);
      v127 = v125;
      OUTLINED_FUNCTION_241_1(4.8149e-34);
      *(void *)&v134 = 0LL;
      *((void *)&v134 + 1) = 0xE000000000000000LL;
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_17_55();
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_129();
      *(void *)&v134 = OUTLINED_FUNCTION_10_3(v134, v62, &v127);
      OUTLINED_FUNCTION_93_11((uint64_t)&v134, (uint64_t)&v134 + 8, v119);
      OUTLINED_FUNCTION_31_1((uint64_t)v2);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v36, (os_log_type_t)v34, "%s No matching app", v61);
      OUTLINED_FUNCTION_17_0(v125);
      OUTLINED_FUNCTION_0_2(v125);
      OUTLINED_FUNCTION_0_2((uint64_t)v61);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v2);
    }

    OUTLINED_FUNCTION_103_8();
    return static AppResolutionAction.noAppFound()();
  }

  return v90;
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  uint64_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    BOOL v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    *(void *)&unint64_t v30 = v22;
    *(_DWORD *)BOOL v21 = 136315138;
    uint64_t v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0x6C61694472657375LL,  0xED0000746341676FLL,  (uint64_t *)&v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v21 + 4, v21 + 12);
    _os_log_impl(&dword_0, v19, v20, "#CommonDirectAction invalid user data for %s", v21, 0xCu);
    swift_arrayDestroy(v22, 1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  uint64_t v28 = type metadata accessor for CommonDirectAction(0LL);
  uint64_t v26 = a2;
  uint64_t v27 = 1LL;
  return __swift_storeEnumTagSinglePayload(v26, v27, 1LL, v28);
}

  uint64_t v17 = v3[5];
  uint64_t v18 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v17);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 224))(v17, v18);
  LOBYTE(v17) = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 120LL))(1LL);
  OUTLINED_FUNCTION_38_1();
  uint64_t v20 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
  if ((v17 & 1) != 0) {
    uint64_t v20 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
  }
LABEL_12:
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v11, *v20, v5);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  BOOL v21 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  uint64_t v22 = *(uint64_t (**)(void))(v6 + 16);
  uint64_t v47 = v11;
  OUTLINED_FUNCTION_56_24((uint64_t)v8);
  uint64_t v23 = swift_retain_n(v3, 2LL);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  uint64_t v26 = static os_log_type_t.debug.getter(v24, v25);
  if (os_log_type_enabled(v24, v26))
  {
    uint64_t v27 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v44 = v2;
    uint64_t v28 = v27;
    uint64_t v43 = OUTLINED_FUNCTION_7_0(64LL);
    os_log_type_t v49 = v43;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v45 = a1;
    LOBYTE(v48) = v46();
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v46 = v22;
    unint64_t v30 = String.init<A>(describing:)(&v48, v29);
    uint64_t v48 = OUTLINED_FUNCTION_89(v30, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v28 + 4);
    OUTLINED_FUNCTION_31_1((uint64_t)v3);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v32 = lazy protocol witness table accessor for type SimpleHandoffStrategy and conformance SimpleHandoffStrategy( &lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse,  (uint64_t)&protocol conformance descriptor for ConfirmationResponse);
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v5, v32);
    uint64_t v48 = OUTLINED_FUNCTION_89(v33, v34);
    a1 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v28 + 14);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_25_52();
    _os_log_impl( &dword_0,  v24,  v26,  "#VoiceOnlyEmergencyConfirmationFlow promptResponse=%s produced confirmationResponse=%s",  (uint8_t *)v28,  0x16u);
    uint64_t v35 = v43;
    swift_arrayDestroy(v43, 2LL);
    OUTLINED_FUNCTION_0_2(v35);
    uint64_t v36 = v28;
    uint64_t v2 = v44;
    OUTLINED_FUNCTION_0_2(v36);
  }

  else
  {
    OUTLINED_FUNCTION_31_1((uint64_t)v3);
    OUTLINED_FUNCTION_25_52();
  }

  OUTLINED_FUNCTION_56_24(v2);
  __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v5);
  uint64_t v37 = (void *)v3[7];
  __int128 v38 = type metadata accessor for INStartCallIntent();
  ConfirmIntentAnswer.init(confirmationResponse:intent:)(v2, v37, v38);
  OUTLINED_FUNCTION_25_52();
  uint64_t v39 = enum case for PromptResult.answered<A>(_:);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<ConfirmIntentAnswer<INStartCallIntent>>);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104LL))(a1, v39, v40);
}

  __int128 v82 = v6;
  __int128 v83 = v9;
  __int128 v84 = v5;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = OUTLINED_FUNCTION_15_1();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v17 = v86;
  (*(void (**)(uint64_t, os_log_s *, uint64_t))(v11 + 16))(v3, v86, v10);
  uint64_t v18 = (os_log_s *)OUTLINED_FUNCTION_88_11();
  uint64_t v20 = static os_log_type_t.debug.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    BOOL v21 = OUTLINED_FUNCTION_7_0(12LL);
    __int128 v80 = v16;
    uint64_t v22 = (_DWORD *)v21;
    uint64_t v23 = OUTLINED_FUNCTION_7_0(32LL);
    __int128 v81 = v4;
    uint64_t v24 = v23;
    v87 = v23;
    *uint64_t v22 = 136315138;
    uint64_t v2 = (uint64_t)(v22 + 3);
    uint64_t v25 = lazy protocol witness table accessor for type SimpleHandoffStrategy and conformance SimpleHandoffStrategy( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter(v10, v25);
    v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v87);
    uint64_t v17 = v86;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v22 + 1);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_40_31();
    OUTLINED_FUNCTION_51_21(&dword_0, v18, v20, "#VoiceOnlyEmergencyConfirmationFlow got input: %s");
    swift_arrayDestroy(v24, 1LL);
    uint64_t v28 = v24;
    uint64_t v4 = v81;
    OUTLINED_FUNCTION_0_2(v28);
    OUTLINED_FUNCTION_0_2((uint64_t)v22);
  }

  else
  {
    OUTLINED_FUNCTION_40_31();
  }

  uint64_t v36 = v83;
  uint64_t v37 = v17;
  Input.parse.getter(v38);
  uint64_t v39 = v82;
  uint64_t v40 = v84;
  uint64_t v41 = (*(uint64_t (**)(void *, uint64_t))(v82 + 88))(v36, v84);
  if (v41 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v42 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v4[5]);
    uint64_t v43 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 72));
    uint64_t v44 = v85;
    Input.parse.getter(v43);
    OUTLINED_FUNCTION_55_28();
    swift_release(v43);
    uint64_t v45 = *(void (**)(char *, uint64_t))(v39 + 8);
    v45(v44, v40);
    uint64_t v46 = OUTLINED_FUNCTION_30_43();
    if (v89)
    {
      uint64_t v47 = OUTLINED_FUNCTION_19_59();
      __swift_destroy_boxed_opaque_existential_1(&v87);
      if (v47 != 5)
      {
        uint64_t v48 = *(uint64_t (**)(void))(*v4 + 160LL);
        goto LABEL_20;
      }
    }

    else
    {
      OUTLINED_FUNCTION_57_29(v46, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }

    uint64_t v53 = v4[6];
    __swift_project_boxed_opaque_existential_1(v4 + 2, v4[5]);
    uint64_t v54 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 72));
    unint64_t v55 = (*(uint64_t (**)(uint64_t))(*(void *)v54 + 128LL))(v54);
    OUTLINED_FUNCTION_38_1();
    specialized BidirectionalCollection.last.getter(v55, (uint64_t)&v87);
    OUTLINED_FUNCTION_39();
    if (v90 == 1)
    {
      uint64_t v56 = (uint64_t *)&demangling cache variable for type metadata for TransformationResult?;
      uint64_t v57 = &v87;
    }

    else
    {
      outlined init with copy of PhoneCallNLIntent?((uint64_t)&v88, (uint64_t)v91);
      outlined destroy of TransformationResult((uint64_t)&v87);
      if (v92)
      {
        uint64_t v58 = OUTLINED_FUNCTION_14_69();
        __swift_destroy_boxed_opaque_existential_1(v91);
        OUTLINED_FUNCTION_30_43();
        if (v58)
        {
          outlined init with copy of PhoneCallNLIntent?((uint64_t)&v87, (uint64_t)v91);
          uint64_t v59 = v92;
          if (v92)
          {
            uint64_t v60 = OUTLINED_FUNCTION_14_69();
            uint64_t v61 = v60;
            OUTLINED_FUNCTION_57_29(v60, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            __swift_destroy_boxed_opaque_existential_1(v91);
            if (!v61) {
              goto LABEL_50;
            }
            OUTLINED_FUNCTION_88_11();
            uint64_t v62 = OUTLINED_FUNCTION_6_0();
            if (OUTLINED_FUNCTION_7(v62))
            {
              uint64_t v63 = (_WORD *)OUTLINED_FUNCTION_1_0();
              *uint64_t v63 = 0;
              OUTLINED_FUNCTION_17_27( &dword_0,  v59,  (os_log_type_t)v53,  "#VoiceOnlyEmergencyConfirmationFlow NLv3IntentOnly emergency reprompt with emergency call parse");
              OUTLINED_FUNCTION_0_2((uint64_t)v63);
            }

            uint64_t v64 = v4[6];
            __swift_project_boxed_opaque_existential_1(v4 + 2, v4[5]);
            uint64_t v65 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v64 + 224));
            OUTLINED_FUNCTION_7_83(v65);
            OUTLINED_FUNCTION_38_1();
            uint64_t v48 = *(uint64_t (**)(void))(*v4 + 160LL);
LABEL_20:
            OUTLINED_FUNCTION_41_36(v48);
LABEL_50:
            outlined destroy of SpeakableString?( (uint64_t)&v93,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v67 = ((uint64_t (*)(void *, uint64_t))v45)(v36, v40);
            goto LABEL_51;
          }

          outlined destroy of SpeakableString?( (uint64_t)&v87,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
          __int128 v75 = v91;
LABEL_49:
          outlined destroy of SpeakableString?( (uint64_t)v75,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
          goto LABEL_50;
        }

    uint64_t v11 = *v9;
    uint64_t v12 = v9[1];
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    return a1;
  }

  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1((void *)v8);
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_1((void *)v8, v9);
  return a1;
}

    uint64_t v8 = *(_OWORD *)(a2 + 8);
    uint64_t v9 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 24) = v9;
    return a1;
  }

  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 8));
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 8), (void *)(a2 + 8));
  return a1;
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  uint64_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl( &dword_0,  v13,  v15,  "#TipKitDiscoverabilitySending Only need to log tip for hang up on an active call",  v16,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }
}

    uint64_t v5 = *a2;
    __int128 v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }

  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1((void *)a1);
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_1((void *)a1, a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_BYTE *)(a1 + 65) = *((_BYTE *)a2 + 65);
  *(_BYTE *)(a1 + 66) = *((_BYTE *)a2 + 66);
  *(_BYTE *)(a1 + 67) = *((_BYTE *)a2 + 67);
  *(_BYTE *)(a1 + 68) = *((_BYTE *)a2 + 68);
  *(_BYTE *)(a1 + 69) = *((_BYTE *)a2 + 69);
  *(_BYTE *)(a1 + 70) = *((_BYTE *)a2 + 70);
  *(_BYTE *)(a1 + 71) = *((_BYTE *)a2 + 71);
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_BYTE *)(a1 + 73) = *((_BYTE *)a2 + 73);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

  uint64_t v12 = specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v8, v9, a3);
  OUTLINED_FUNCTION_62();
  return v12;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v12 & 0xC000000000000001LL) == 0, v12);
  if ((v12 & 0xC000000000000001LL) != 0) {
    uint64_t v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v12);
  }
  else {
    uint64_t v13 = *(id *)(v12 + 32);
  }
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_62();
  uint64_t v15 = [v14 personHandle];

  if (!v15) {
    goto LABEL_15;
  }
  uint64_t v16 = [v15 isSuggested];

LABEL_16:
  uint64_t v17 = v0[18];
  uint64_t v18 = OUTLINED_FUNCTION_58_29(v11, *(void *)(v9 + 16));
  v0[21] = (*(uint64_t (**)(void))(*(void *)v17 + 328LL))();
  uint64_t v19 = (void *)swift_task_alloc(dword_44192C);
  v0[22] = v19;
  *uint64_t v19 = v0;
  v19[1] = CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:itemToConfirm:intent:parameterName:intentResolutionResult:crrOutputGenerator:);
  return static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:)( v0[10],  v0[11],  v0[13],  v16,  v18,  v17 + 24,  v0[14],  v0[15]);
}

uint64_t NLTransformer.appendToNLIntentHistory(transformationResult:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v1 + 128LL);
  uint64_t v5 = v4();
  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease(v5);
  __int128 v7 = outlined init with copy of TransformationResult(a1, v15);
  if (v6)
  {
    uint64_t v8 = ((uint64_t (*)(void *))v4)(v7);
    specialized BidirectionalCollection.last.getter(v8, (uint64_t)v14);
    OUTLINED_FUNCTION_62();
    if (v14[4] != 1LL)
    {
      uint64_t v9 = v14[0];
      outlined destroy of TransformationResult((uint64_t)v14);
      uint64_t v10 = v15[0];
      uint64_t result = outlined destroy of TransformationResult((uint64_t)v15);
      if (v9 == v10) {
        return result;
      }
      goto LABEL_6;
    }

    outlined destroy of PhoneCallNLIntent?( (uint64_t)v14,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
  }

  outlined destroy of TransformationResult((uint64_t)v15);
LABEL_6:
  OUTLINED_FUNCTION_25_0(v2 + 64, (uint64_t)v14, 33LL);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v12 = *(void *)(*(void *)(v2 + 64) + 16LL);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  uint64_t v13 = *(void *)(v2 + 64);
  *(void *)(v13 + 16) = v12 + 1;
  outlined init with copy of TransformationResult(a1, (void *)(v13 + 48 * v12 + 32));
  return swift_endAccess(v14);
}

uint64_t NLTransformer.nlIntentHistory.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 64));
}

uint64_t outlined init with copy of AnyPhoneNLIntent?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPhoneNLIntent?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SpeakableString?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.actionForInput(_:resolveRecord:) in conformance CallingIntentNeedsValueFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 376LL))();
}

void CallingIntentNeedsValueFlowStrategy.actionForInput(_:resolveRecord:)()
{
  uint64_t v48 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Parse(0LL);
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = type metadata accessor for Input(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_15_1();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v3, v11);
  uint64_t v47 = v17;
  Logger.logObject.getter(v18);
  os_log_type_t v19 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_54_2(v0))
  {
    uint64_t v20 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v43 = v3;
    uint64_t v3 = v20;
    uint64_t v42 = OUTLINED_FUNCTION_7_0(64LL);
    v51[0] = v42;
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020LL, 0x800000000034ECA0LL, v51);
    uint64_t v45 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v3 + 4, v3 + 12);
    *(_WORD *)(v3 + 12) = 2080;
    uint64_t v44 = v6;
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter(v11, v21);
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v51);
    uint64_t v6 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v3 + 14, v3 + 22);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_83_16();
    OUTLINED_FUNCTION_33_6(&dword_0, v0, v19, "#CallingIntentNeedsValueFlowStrategy %s input: %s", (uint8_t *)v3);
    uint64_t v24 = v42;
    swift_arrayDestroy(v42, 2LL);
    OUTLINED_FUNCTION_0_2(v24);
    uint64_t v25 = v3;
    LOBYTE(v3) = v43;
    OUTLINED_FUNCTION_0_2(v25);
  }

  else
  {
    OUTLINED_FUNCTION_83_16();
  }

  outlined init with copy of SharedGlobalsProviding(v48 + 24, (uint64_t)v51);
  ((void (*)(void))Input.parse.getter)();
  uint64_t v26 = (os_log_s *)ContactPromptResponseParser.parseResponse(from:)((uint64_t)v10);
  uint64_t v27 = v49;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v6);
  uint64_t v28 = outlined destroy of ContactPromptResponseParser((uint64_t)v51);
  if (v26 - 1 < 2)
  {
    OUTLINED_FUNCTION_56_18();
    os_log_type_t v32 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_10(v32))
    {
      uint64_t v33 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v33);
      OUTLINED_FUNCTION_5_38(&dword_0, v26, (os_log_type_t)v51, "#CallingIntentNeedsValueFlowStrategy Intent cancelled");
      OUTLINED_FUNCTION_0_2(v27);
    }

    static ActionForInput.cancel()();
  }

  else
  {
    if (v26 == 5)
    {
      OUTLINED_FUNCTION_56_18();
      os_log_type_t v34 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v34))
      {
        uint64_t v35 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_47(v35);
        unint64_t v31 = "#CallingIntentNeedsValueFlowStrategy unknown intent, ignore this request";
        goto LABEL_16;
      }

LABEL_17:
      static ActionForInput.ignore()();
      goto LABEL_24;
    }

    if (v26 == 6)
    {
      OUTLINED_FUNCTION_56_18();
      os_log_type_t v29 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v29))
      {
        unint64_t v30 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_47(v30);
        unint64_t v31 = "#CallingIntentNeedsValueFlowStrategy user updated app name or phone verb, ignore current request from current flow";
LABEL_16:
        OUTLINED_FUNCTION_5_38(&dword_0, v26, (os_log_type_t)v51, v31);
        OUTLINED_FUNCTION_0_2(v27);
        goto LABEL_17;
      }

      goto LABEL_17;
    }

    uint64_t v36 = v46;
    Input.parse.getter(v28);
    int v37 = (*(uint64_t (**)(void *, uint64_t))(v27 + 88))(v36, v6);
    if (v37 == enum case for Parse.NLv3IntentOnly(_:) || v37 == enum case for Parse.directInvocation(_:)) {
      goto LABEL_20;
    }
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      OUTLINED_FUNCTION_11_20((uint64_t)v36, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 96));
      swift_unknownObjectRelease(*v36);
      goto LABEL_21;
    }

    if (v37 == enum case for Parse.uso(_:))
    {
LABEL_20:
      OUTLINED_FUNCTION_111_8();
LABEL_21:
      OUTLINED_FUNCTION_56_18();
      os_log_type_t v38 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v38))
      {
        uint64_t v39 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_47(v39);
        OUTLINED_FUNCTION_5_38( &dword_0,  v26,  (os_log_type_t)v3,  "#CallingIntentNeedsValueFlowStrategy actionForInput: handling..");
        OUTLINED_FUNCTION_0_2(v27);
      }

      static ActionForInput.handle()();
      goto LABEL_24;
    }

    OUTLINED_FUNCTION_56_18();
    os_log_type_t v40 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_10(v40))
    {
      uint64_t v41 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v41);
      OUTLINED_FUNCTION_5_38( &dword_0,  v26,  (os_log_type_t)v3,  "#CallingIntentNeedsValueFlowStrategy Received unsupported parse while determining action which is not yet supported. Skipping..");
      OUTLINED_FUNCTION_0_2(v27);
    }

    static ActionForInput.ignore()();
    OUTLINED_FUNCTION_111_8();
  }

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 5;
  uint64_t v5 = v6 - 5;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 2;
  uint64_t v8 = v6 - 2;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return OUTLINED_FUNCTION_256_0(v8);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 4;
  uint64_t v5 = v6 - 4;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 5;
  uint64_t v8 = v6 - 5;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return OUTLINED_FUNCTION_256_0(v8);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 9;
  uint64_t v5 = v6 - 9;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 3;
  uint64_t v8 = v6 - 3;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return OUTLINED_FUNCTION_256_0(v8);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x23;
  uint64_t v5 = v6 - 35;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x11;
  uint64_t v5 = v6 - 17;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 6;
  uint64_t v5 = v6 - 6;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 3;
  uint64_t v5 = v6 - 3;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t result = swift_bridgeObjectRelease();
  if (!(_DWORD)v5)
  {
LABEL_8:
    if (!(_DWORD)a1) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 2;
  uint64_t v5 = v6 - 2;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0xC;
  uint64_t v5 = v6 - 12;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 8;
  uint64_t v5 = v6 - 8;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 7;
  uint64_t v5 = v6 - 7;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0xA;
  uint64_t v5 = v6 - 10;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0xD;
  uint64_t v5 = v6 - 13;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x14;
  uint64_t v5 = v6 - 20;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

        OUTLINED_FUNCTION_0_3();
        goto LABEL_18;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v50 = OUTLINED_FUNCTION_15_1();
      uint64_t v51 = OUTLINED_FUNCTION_4_23(v50, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v51);
      uint64_t v52 = OUTLINED_FUNCTION_15_16();
      if (!OUTLINED_FUNCTION_33_10(v52)) {
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v69 = OUTLINED_FUNCTION_7_29();
      OUTLINED_FUNCTION_0_27(4.8149e-34);
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_3_32();
      OUTLINED_FUNCTION_13_1();
      uint64_t v53 = OUTLINED_FUNCTION_129();
      uint64_t v58 = OUTLINED_FUNCTION_9_25(v53, v54, v55, v56, v57);
      OUTLINED_FUNCTION_1_32(v58, v59, v60, v61);
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_21_12( &dword_0,  v62,  v63,  "%s trial experiment for appNameSpecifiedByUser signal collection is off since current request isn't picked up randomly");
      OUTLINED_FUNCTION_17_0(v69);
      uint64_t v49 = v69;
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v26 = OUTLINED_FUNCTION_15_1();
      uint64_t v27 = OUTLINED_FUNCTION_4_23(v26, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v27);
      uint64_t v28 = OUTLINED_FUNCTION_15_16();
      if (!OUTLINED_FUNCTION_33_10(v28)) {
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_7_0(22LL);
      os_log_type_t v29 = OUTLINED_FUNCTION_7_29();
      OUTLINED_FUNCTION_18_16(4.8151e-34);
      OUTLINED_FUNCTION_76_4();
      OUTLINED_FUNCTION_27_14();
      swift_bridgeObjectRelease();
      unint64_t v30 = OUTLINED_FUNCTION_87_0();
      uint64_t v35 = OUTLINED_FUNCTION_9_25(v30, v31, v32, v33, v34);
      OUTLINED_FUNCTION_22_13(v35, v36, v37, v38);
      OUTLINED_FUNCTION_0_3();
      uint64_t v39 = OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_16_15(v39, v40, v41, v42, v43, v44, v45, v46, v65, v66, v67, v70);
      OUTLINED_FUNCTION_29_11( &dword_0,  v47,  v48,  "%s collect AppNameSpecifiedByUser signal is off since there is already triggered once within %ld days");
      OUTLINED_FUNCTION_17_0(v29);
      uint64_t v49 = v29;
    }

    OUTLINED_FUNCTION_0_2(v49);
    OUTLINED_FUNCTION_0_2(v2);
  }

      OUTLINED_FUNCTION_34_12();
    }
  }

  OUTLINED_FUNCTION_16_3();
  *uint64_t v0 = v2;
  OUTLINED_FUNCTION_38_5();
}

      OUTLINED_FUNCTION_33_14();
    }
  }

  OUTLINED_FUNCTION_16_3();
  *uint64_t v0 = v5;
  OUTLINED_FUNCTION_58();
}

      OUTLINED_FUNCTION_33_14();
    }
  }

  OUTLINED_FUNCTION_16_3();
  *uint64_t v0 = v5;
  OUTLINED_FUNCTION_58();
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x24;
  uint64_t v5 = v6 - 36;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x10;
  uint64_t v5 = v6 - 16;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0xE;
  uint64_t v5 = v6 - 14;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x15;
  uint64_t v5 = v6 - 21;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  swift_release(a2);
  swift_bridgeObjectRelease();
  return 1LL;
}

  OUTLINED_FUNCTION_6();
  return result;
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x26;
  uint64_t v5 = v6 - 38;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_18:
  v1[27] = v14;
  uint64_t v63 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v17 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8LL));
  swift_retain();
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v55 = v14;
    if (!v17) {
      break;
    }
    uint64_t v57 = v1[25];
    uint64_t v18 = v1[19];
    uint64_t v60 = v16 & 0xC000000000000001LL;
    uint64_t v61 = v1;
    type metadata accessor for PhonePerson(0LL);
    os_log_type_t v19 = 0LL;
    uint64_t v56 = (void *)(v18
                   + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
    uint64_t v58 = v16;
    uint64_t v59 = v17;
    uint64_t v14 = v1;
    v1 += 2;
    while (1)
    {
      uint64_t v20 = v60
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v16)
          : *(id *)(v16 + 8 * v19 + 32);
      uint64_t v21 = v20;
      uint64_t v22 = v19 + 1;
      if (__OFADD__(v19, 1LL)) {
        break;
      }
      unint64_t v23 = v14[26];
      uint64_t v24 = v14[24];
      uint64_t v25 = v56[3];
      uint64_t v26 = v56[4];
      __swift_project_boxed_opaque_existential_1(v56, v25);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
      uint64_t v27 = v14[5];
      uint64_t v28 = v14[6];
      __swift_project_boxed_opaque_existential_1(v1, v27);
      dispatch thunk of DeviceState.siriLocale.getter(v27, v28);
      static PhonePerson.make(phonePerson:options:locale:)(v21, 0, v23);
      unint64_t v30 = v29;
      unint64_t v31 = v23;
      uint64_t v16 = v58;
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v31, v24);
      __swift_destroy_boxed_opaque_existential_1(v1);

      if (v30)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
        os_log_type_t v34 = *(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFFF8LL));
        uint64_t v33 = *(void *)((char *)&dword_18 + (v63 & 0xFFFFFFFFFFFFFF8LL));
        if (v34 >= v33 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1LL);
        }
        uint64_t v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v30);
        specialized Array._endMutation()(v35, v36, v37, v38);
      }

      ++v19;
      if (v22 == v59)
      {
        OUTLINED_FUNCTION_34_0();
        uint64_t v1 = v61;
        uint64_t v39 = (void *)v63;
        goto LABEL_33;
      }
    }

    __break(1u);
LABEL_35:
    if (v16 < 0) {
      uint64_t v54 = v16;
    }
    else {
      uint64_t v54 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v54);
  }

  OUTLINED_FUNCTION_34_0();
  uint64_t v39 = _swiftEmptyArrayStorage;
LABEL_33:
  os_log_type_t v40 = v1 + 7;
  v1[28] = v39;
  uint64_t v41 = v1[19];
  swift_release(v41);
  OUTLINED_FUNCTION_34_0();
  uint64_t v42 = *(void *)(v41
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns
                  + 24);
  uint64_t v43 = *(void *)(v41
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns
                  + 32);
  OUTLINED_FUNCTION_82((void *)(v41
                                + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_patterns));
  uint64_t v44 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals;
  v1[29] = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals;
  uint64_t v45 = v1;
  uint64_t v46 = *(void *)(v41 + v44 + 24);
  uint64_t v47 = *(void *)(v41 + v44 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v41 + v44), v46);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
  uint64_t v48 = v45[10];
  uint64_t v49 = v45[11];
  __swift_project_boxed_opaque_existential_1(v40, v48);
  LOBYTE(v48) = DeviceState.supportsOnlyFaceTimeCalls.getter(v48, v49);
  uint64_t v50 = (void *)swift_task_alloc(48LL);
  v45[30] = v50;
  v50[2] = v41;
  v50[3] = v55;
  v50[4] = v39;
  uint64_t v51 = *(int **)(v43 + 8);
  uint64_t v62 = (int *)((char *)v51 + *v51);
  uint64_t v52 = (void *)swift_task_alloc(v51[1]);
  v45[31] = v52;
  *uint64_t v52 = v45;
  v52[1] = AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse();
  return ((uint64_t (*)(uint64_t, uint64_t (*)(uint64_t *), void *, uint64_t, uint64_t))v62)( v48 & 1,  partial apply for closure #2 in AddCallParticipantHandleIntentFollowUpFlow.makeIntentHandledResponse(),  v50,  v42,  v43);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0xB;
  uint64_t v5 = v6 - 11;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x44;
  uint64_t v5 = v6 - 68;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x16;
  uint64_t v5 = v6 - 22;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x28;
  uint64_t v5 = v6 - 40;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 4;
  uint64_t v8 = v6 - 4;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return OUTLINED_FUNCTION_256_0(v8);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x59;
  uint64_t v5 = v6 - 89;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 6;
  uint64_t v8 = v6 - 6;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return OUTLINED_FUNCTION_256_0(v8);
}

LABEL_18:
    return 0LL;
  }

  uint64_t v21 = v20;
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID,  &OBJC_CLASS___SISchemaUUID_ptr);
  (*(void (**)(uint64_t, uint8_t *, os_log_s *))(v15 + 16))( v18,  &v9[OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin32PhoneAppSelectionSignalsGatherer_uuid],  v14);
  uint64_t v22 = SISchemaUUID.__allocating_init(nsuuid:)();
  OUTLINED_FUNCTION_17_6(v21, "setInferenceId:");

  [v7 setEventMetadata:v21];
  uint64_t v14 = (os_log_s *)v9;
  unint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v9 + 208LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7 & 1);
  if (!v23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v33 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v33, (uint64_t)static Logger.siriPhone);
    os_log_type_t v34 = OUTLINED_FUNCTION_24();
    if (!os_log_type_enabled(v14, v34))
    {

      return 0LL;
    }

    uint64_t v35 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v35 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v14,  v34,  "PhoneAppSelectionSignalsGatherer error on building appSelectionGroundTruth object",  v35);
    OUTLINED_FUNCTION_0_2((uint64_t)v35);

    goto LABEL_17;
  }

  uint64_t v24 = (void *)v23;
  OUTLINED_FUNCTION_17_6(v7, "setCommsAppSelectionGroundTruthGenerated:");

  return v7;
}

          swift_bridgeObjectRelease_n(v25, 2LL);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          os_log_type_t v32 = type metadata accessor for Logger(0LL);
          uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
          os_log_type_t v19 = (void *)Logger.logObject.getter(v33);
          uint64_t v35 = static os_log_type_t.debug.getter(v19, v34);
          if (os_log_type_enabled((os_log_t)v19, v35))
          {
            uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v36 = 0;
            int v37 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
            goto LABEL_70;
          }

          goto LABEL_71;
        }
      }

      else
      {
        uint64_t v16 = *(char **)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8LL));
        if (v16) {
          goto LABEL_13;
        }
      }

      swift_bridgeObjectRelease();
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    __int128 v79 = type metadata accessor for Logger(0LL);
    __int128 v80 = __swift_project_value_buffer(v79, (uint64_t)static Logger.siriPhone);
    os_log_type_t v19 = (void *)Logger.logObject.getter(v80);
    uint64_t v35 = static os_log_type_t.debug.getter(v19, v81);
    if (!os_log_type_enabled((os_log_t)v19, v35)) {
      goto LABEL_71;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    int v37 = "#ContactResolution no contacts to resolve. bypassing contact resolution";
LABEL_70:
    _os_log_impl(&dword_0, (os_log_t)v19, v35, v37, v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
    goto LABEL_71;
  }

  if (!*(void *)(a3 + 16))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    os_log_type_t v38 = type metadata accessor for Logger(0LL);
    uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    os_log_type_t v19 = (void *)Logger.logObject.getter(v39);
    uint64_t v35 = static os_log_type_t.debug.getter(v19, v40);
    if (!os_log_type_enabled((os_log_t)v19, v35)) {
      goto LABEL_71;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    int v37 = "#ContactResolution ContactQueries is empty, bypassing contact resolution";
    goto LABEL_70;
  }

  return 0LL;
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 2;
  uint64_t v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_4_1();
  uint64_t v11 = 0LL;
LABEL_18:
  swift_bridgeObjectRelease();
  return v11;
}

  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_14_2(*(uint64_t (**)(void))(v1 + 8));
}

    swift_bridgeObjectRelease();
  }

  type metadata accessor for SiriKitIntentExecutionBehavior(0LL);
  static SiriKitIntentExecutionBehavior.standard()();
  a3();
  OUTLINED_FUNCTION_31_2();
  return outlined release of AnnotatedApp?(v42);
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0x18;
  uint64_t v5 = v6 - 24;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_14_75(*(uint64_t (**)(void))(v0 + 8));
}

  uint64_t v6 = *a1;
  uint64_t v7 = v6 >= 0xF;
  uint64_t v5 = v6 - 15;
  if (!v7) {
    uint64_t v5 = -1;
  }
  return (v5 + 1);
}

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

LABEL_24:
  OUTLINED_FUNCTION_7_5();
}

    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc(v3);
    swift_task_dealloc(v8);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  unint64_t v23 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v24))
  {
    uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v25 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v3,  (os_log_type_t)v1,  "#ContactNeedsValueGuardFlow execute() Request needs execution on device. Moving onto NeedsValue flow strategy.",  v25);
    OUTLINED_FUNCTION_0_2((uint64_t)v25);
  }

  *(void *)(v0 + 200) = v26;
  *uint64_t v26 = v0;
  v26[1] = ContactNeedsValueGuardFlow.execute();
  return v36(*(void *)(v0 + 112));
}

    os_log_type_t v38 = v34;
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    uint64_t v35 = v39;

    goto LABEL_25;
  }

  uint64_t v35 = 0xE700000000000000LL;
  uint64_t v33 = v25;
LABEL_25:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  os_log_type_t v40 = OUTLINED_FUNCTION_15_1();
  uint64_t v41 = (os_log_s *)__swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain();
  uint64_t v42 = swift_bridgeObjectRetain();
  Logger.logObject.getter(v42);
  uint64_t v43 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v43))
  {
    uint64_t v44 = v33;
    uint64_t v45 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v46 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v53 = v46;
    *(_DWORD *)uint64_t v45 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v44, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v45 + 4, v45 + 12);
    swift_bridgeObjectRelease_n(v44, 3LL);
    *(_WORD *)(v45 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v35, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v45 + 14, v45 + 22);
    swift_bridgeObjectRelease_n(v35, 3LL);
    OUTLINED_FUNCTION_33_6( &dword_0,  v41,  (os_log_type_t)v25,  "#CallingIntentNeedsValueFlowStrategy override preferredCallProvider from %s to %s since we don't support change pr eferredCallProvider from non-default to default",  (uint8_t *)v45);
    uint64_t v25 = v46;
    swift_arrayDestroy(v46, 2LL);
    OUTLINED_FUNCTION_0_2(v46);
    OUTLINED_FUNCTION_0_2(v45);
  }

  else
  {

    swift_bridgeObjectRelease_n(v35, 2LL);
    swift_bridgeObjectRelease_n(v33, 2LL);
  }

  ParameterResolutionRecord.intent.getter(v10);
  OUTLINED_FUNCTION_63_18();
  OUTLINED_FUNCTION_51_9();
  (*(void (**)(unint64_t, uint64_t))(v51 + 128))(v25, v49);
LABEL_31:
  OUTLINED_FUNCTION_7_5();
}

      uint64_t v1 = v4;
      goto LABEL_25;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = OUTLINED_FUNCTION_15_1();
  os_log_type_t v19 = (void *)OUTLINED_FUNCTION_12_1(v18, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = static os_log_type_t.debug.getter(v19, v20);
  if (OUTLINED_FUNCTION_7(v21))
  {
    uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_1_0();
    *uint64_t v22 = 0;
    OUTLINED_FUNCTION_3_2( &dword_0,  v23,  v24,  "#StartAudioCallDirectAction Didn't receive initial siriKitIntent, using default INStartAudioCallIntent");
    OUTLINED_FUNCTION_0_2((uint64_t)v22);
  }

  uint64_t v25 = objc_allocWithZone(&OBJC_CLASS___INStartAudioCallIntent);
  @nonobjc INStartAudioCallIntent.init(destinationType:contacts:)(1LL, 0LL);
LABEL_25:

  OUTLINED_FUNCTION_13_25();
}

  OUTLINED_FUNCTION_129();
LABEL_25:
  OUTLINED_FUNCTION_7_1();
}

        __break(1u);
        goto LABEL_25;
      }

  OUTLINED_FUNCTION_23_32();
  if (!v18) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v66 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v66, (uint64_t)static Logger.siriPhone);
  uint64_t v67 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled((os_log_t)v13, v67))
  {
    v168 = v15;
    uint64_t v68 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v69 = OUTLINED_FUNCTION_7_0(64LL);
    v191 = v69;
    *(_DWORD *)uint64_t v68 = 136315394;
    v186 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
    uint64_t v71 = String.init<A>(describing:)(&v186, v70);
    v186 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, &v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, &v187, v68 + 4, v68 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    if (!v41)
    {
      v106 = 0xE700000000000000LL;
      v107 = 0x4E574F4E4B4E55LL;
LABEL_51:
      v186 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v106, &v191);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, &v187, v68 + 14, v68 + 22);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, (os_log_t)v13, v67, "#%s --> %s", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy(v69, 2LL);
      OUTLINED_FUNCTION_0_2(v69);
      OUTLINED_FUNCTION_0_2(v68);

      swift_release(v168);
      uint64_t result = (uint64_t)outlined release of AnnotatedApp?(&v196);
      goto LABEL_52;
    }

    uint64_t v73 = INPreferredCallProviderGetBackingType(v41);
    switch((_DWORD)v73)
    {
      case 4:
        uint64_t v74 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v74 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v74 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v74 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v73,  v15));
        goto LABEL_50;
    }

    v108 = v74;
LABEL_50:
    v109 = v74;
    v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
    v106 = v110;

    goto LABEL_51;
  }

  outlined release of AnnotatedApp?(&v196);

  uint64_t result = OUTLINED_FUNCTION_31_2();
LABEL_52:
  *v172 = v41;
  return result;
}

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

    specialized _copyCollectionToContiguousArray<A>(_:)(v1);
    uint64_t v18 = v26;
    OUTLINED_FUNCTION_22();
    goto LABEL_21;
  }

  os_log_type_t v19 = v0[7] + 1LL;
  v0[7] = v19;
  v0[8] = *(void *)(v0[4] + 16 * v19 + 40);
  uint64_t v20 = dword_438E24;
  swift_bridgeObjectRetain();
  uint64_t v21 = (void *)swift_task_alloc(v20);
  v0[9] = v21;
  *uint64_t v21 = v0;
  v21[1] = EligibleAppFinder.findEligibleApps(intentTypeNames:);
  OUTLINED_FUNCTION_14_52();
  return EligibleAppFinder.findEligibleApps(intentTypeName:)(v22, v23);
}

          __break(1u);
          JUMPOUT(0x265BF4LL);
        }

      uint64_t v10 = (v16 - 1) & v16;
      uint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }

    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    os_log_type_t v19 = v18[1];
    uint64_t v21 = *(void **)(*(void *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)(v35, *(void *)(v9 + 40));
    swift_bridgeObjectRetain();
    uint64_t v22 = v21;
    String.hash(into:)(v35, v20, v19);
    uint64_t result = Hasher._finalize()();
    unint64_t v23 = -1LL << *(_BYTE *)(v9 + 32);
    uint64_t v24 = result & ~v23;
    uint64_t v25 = v24 >> 6;
    if (((-1LL << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) == 0) {
      break;
    }
    uint64_t v26 = __clz(__rbit64((-1LL << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_34:
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v26;
    unint64_t v31 = (void *)(*(void *)(v9 + 48) + 16 * v26);
    *unint64_t v31 = v20;
    v31[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v26) = v22;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1LL)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v9;
    }
  }

  uint64_t v27 = 0;
  uint64_t v28 = (unint64_t)(63 - v23) >> 6;
  while (++v25 != v28 || (v27 & 1) == 0)
  {
    os_log_type_t v29 = v25 == v28;
    if (v25 == v28) {
      uint64_t v25 = 0LL;
    }
    v27 |= v29;
    unint64_t v30 = *(void *)(v12 + 8 * v25);
    if (v30 != -1)
    {
      uint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
      goto LABEL_34;
    }
  }

  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

  swift_bridgeObjectRelease_n(v17, 2LL);
  outlined destroy of PhoneCallNLv4Intent(__dst);
  return 0LL;
}

uint64_t initializeBufferWithCopyOfBuffer for PhoneContactHeader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t ContactPromptResponseParser.parseResponse(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 64))(v4, v5);
  if (result == 5)
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    uint64_t v10 = *(void *)(v9 + 16);
    swift_bridgeObjectRelease(v9);
    if (v10)
    {
      uint64_t v11 = a1[3];
      uint64_t v12 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v11);
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 + 16);
      if (!v15)
      {
LABEL_9:
        swift_bridgeObjectRelease(v14);
        return 1LL;
      }

      uint64_t v16 = v13 + 32;
      while (1)
      {
        outlined init with copy of SharedGlobalsProviding(v16, (uint64_t)v37);
        uint64_t v17 = v38;
        uint64_t v18 = v39;
        __swift_project_boxed_opaque_existential_1(v37, v38);
        __int16 v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 368))(v17, v18);
        outlined init with copy of SharedGlobalsProviding((uint64_t)v37, (uint64_t)&v29);
        if ((v19 & 0xFF00) == 0x200) {
          break;
        }
        uint64_t v20 = v31;
        uint64_t v21 = v32;
        __swift_project_boxed_opaque_existential_1(&v29, v31);
        uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 368))(v20, v21);
        if ((v22 & 0xFF00) == 0x200) {
          break;
        }
        int v23 = v22 & 0xFFFFFF;
        __swift_destroy_boxed_opaque_existential_1(&v29);
        __swift_destroy_boxed_opaque_existential_1(v37);
        if ((v23 & 0x10000) == 0) {
          goto LABEL_11;
        }
        v16 += 40LL;
        if (!--v15) {
          goto LABEL_9;
        }
      }

      __swift_destroy_boxed_opaque_existential_1(&v29);
      __swift_destroy_boxed_opaque_existential_1(v37);
LABEL_11:
      swift_bridgeObjectRelease(v14);
    }

    uint64_t v24 = v2[3];
    uint64_t v25 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v24);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25);
    (*(void (**)(void *__return_ptr))(*(void *)v26 + 240LL))(v37);
    swift_release(v26);
    outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v37,  (uint64_t)&v29,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    if (v32 == 1)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v29,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
      __int128 v33 = 0u;
      __int128 v34 = 0u;
      uint64_t v35 = 0LL;
    }

    else
    {
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)&v30,  (uint64_t)&v33,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      outlined destroy of TransformationResult((uint64_t)&v29);
      if (*((void *)&v34 + 1))
      {
        outlined init with take of AppSelectionSignalComponent(&v33, (uint64_t)v36);
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        outlined init with copy of SharedGlobalsProviding((uint64_t)v36, (uint64_t)&v29);
        PhoneCallNLIntent.shouldResetRequest(previousNLIntent:)();
        char v28 = v27;
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v29,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
        __swift_destroy_boxed_opaque_existential_1(v36);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v37,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
        if ((v28 & 1) != 0) {
          return 6LL;
        }
        return 8LL;
      }
    }

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v37,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v33,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    return 8LL;
  }

  return result;
}

uint64_t ContactPromptResponseParser.parseResponse(from:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v12 - v6;
  static CommonDirectAction.from(_:)(a1, (uint64_t *)((char *)&v12 - v6));
  uint64_t v8 = type metadata accessor for CommonDirectAction(0LL);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v7,  (uint64_t)v5,  &demangling cache variable for type metadata for CommonDirectAction?);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v8);
  if (EnumCaseMultiPayload == 6)
  {
    uint64_t v10 = 0LL;
    goto LABEL_8;
  }

  if (EnumCaseMultiPayload != 7)
  {
    outlined destroy of CommonDirectAction((uint64_t)v5);
LABEL_7:
    uint64_t v10 = 8LL;
    goto LABEL_8;
  }

  uint64_t v10 = 1LL;
LABEL_8:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v7,  &demangling cache variable for type metadata for CommonDirectAction?);
  return v10;
}

{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_s *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31[5];
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Parse(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(void *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v12 = (*(uint64_t (**)(void *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == enum case for Parse.NLv3IntentOnly(_:))
  {
LABEL_2:
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
LABEL_5:
    uint64_t v15 = v2[3];
    uint64_t v16 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v15);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 72))(v15, v16);
    (*(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)v17 + 192LL))(&v29, a1);
    swift_release(v17);
    if (v30)
    {
      outlined init with take of AppSelectionSignalComponent(&v29, (uint64_t)v31);
      uint64_t v18 = ContactPromptResponseParser.parseResponse(from:)(v31);
      __swift_destroy_boxed_opaque_existential_1(v31);
      goto LABEL_11;
    }

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v29,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    goto LABEL_8;
  }

  if (v12 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    OUTLINED_FUNCTION_0_53(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96));
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NLIntent, Parse.ServerConversion));
    swift_release(*(void *)((char *)v11 + *(int *)(v13 + 48)));
    uint64_t v14 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(void *, uint64_t))(*(void *)(v14 - 8) + 8LL))(v11, v14);
    goto LABEL_5;
  }

  if (v12 == enum case for Parse.directInvocation(_:))
  {
    OUTLINED_FUNCTION_0_53(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96));
    (*(void (**)(char *, void *, uint64_t))(v5 + 32))(v7, v11, v4);
    uint64_t v18 = ContactPromptResponseParser.parseResponse(from:)((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  else
  {
    if (v12 == enum case for Parse.NLv4IntentOnly(_:))
    {
      OUTLINED_FUNCTION_0_53(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96));
      swift_unknownObjectRelease(*v11);
      goto LABEL_5;
    }

    if (v12 == enum case for Parse.uso(_:)) {
      goto LABEL_2;
    }
    if (v12 != enum case for Parse.empty(_:))
    {
      OUTLINED_FUNCTION_0_53(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
LABEL_8:
      uint64_t v18 = 5LL;
      goto LABEL_11;
    }

    uint64_t v18 = 8LL;
  }

LABEL_11:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  __int16 v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  uint64_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    int v23 = swift_slowAlloc(22LL, -1LL);
    uint64_t v24 = swift_slowAlloc(64LL, -1LL);
    v31[0] = v24;
    *(_DWORD *)int v23 = 136315394;
    *(void *)&uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000014LL,  0x800000000034A740LL,  v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, (char *)&v29 + 8, v23 + 4, v23 + 12);
    *(_WORD *)(v23 + 12) = 2080;
    if (v18 == 8)
    {
      uint64_t v25 = 0xE300000000000000LL;
      uint64_t v26 = 7104878LL;
    }

    else
    {
      uint64_t v26 = ContactPromptResponse.debugDescription.getter(v18);
      uint64_t v25 = v27;
    }

    *(void *)&uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v25, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, (char *)&v29 + 8, v23 + 14, v23 + 22);
    swift_bridgeObjectRelease(v25);
    _os_log_impl(&dword_0, v21, v22, "#ContactPromptResponseParser %s: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2LL);
    OUTLINED_FUNCTION_0_2(v24);
    OUTLINED_FUNCTION_0_2(v23);
  }

  return v18;
}

  OUTLINED_FUNCTION_46_14();
  return result;
}

    OUTLINED_FUNCTION_31_1((uint64_t)v0);
    return v6 & 1;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  uint64_t v8 = OUTLINED_FUNCTION_31_11();
  uint64_t v9 = (void *)Logger.logObject.getter(v8);
  uint64_t v11 = static os_log_type_t.debug.getter(v9, v10);
  if (!OUTLINED_FUNCTION_14_15(v11)) {
    goto LABEL_11;
  }
  uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
  uint64_t v35 = OUTLINED_FUNCTION_7_0(32LL);
  uint64_t v36 = v35;
  *(_DWORD *)uint64_t v12 = 136315138;
  buf = v12;
  uint64_t v14 = v2[9];
  uint64_t v13 = v2[10];
  uint64_t v15 = v2[11];
  uint64_t v6 = (void *)v2[12];
  OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_76_4();
  DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v14, v13, v15, v6);
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_87_0();
  getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v36);
  OUTLINED_FUNCTION_35_7();
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v16, v17, v18);
  OUTLINED_FUNCTION_31_1((uint64_t)v2);
  OUTLINED_FUNCTION_39();
  __int16 v19 = "%s SmartEnoughAppSelection override flag is on";
LABEL_10:
  _os_log_impl(&dword_0, (os_log_t)v9, v1, v19, buf, 0xCu);
  OUTLINED_FUNCTION_17_0(v35);
  OUTLINED_FUNCTION_0_2(v35);
  OUTLINED_FUNCTION_0_2((uint64_t)buf);

  return v6 & 1;
}

  OUTLINED_FUNCTION_7_1();
}

    OUTLINED_FUNCTION_4_1();
    uint64_t v18 = OUTLINED_FUNCTION_26_10();
    __int16 v19 = v26;
    uint64_t v25 = *v2;
    void *v2 = 0x8000000000000000LL;
    uint64_t v20 = swift_retain();
    specialized _NativeSet.insertNew(_:at:isUnique:)(v20, v16, v18);
    OUTLINED_FUNCTION_10_19(v25);
    *a1 = v19;
  }

  return 1LL;
}

  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  if (!v22) {
    goto LABEL_21;
  }
  int v23 = v22;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 >= 0) {
      v22 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v22)) {
      goto LABEL_14;
    }
LABEL_20:
    OUTLINED_FUNCTION_62();
    goto LABEL_21;
  }

  ObjectType = swift_getObjectType(a1);
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  if ((v53(ObjectType, a2) & 1) != 0)
  {
    uint64_t v54 = OUTLINED_FUNCTION_15_19();
    int v37 = v55;
    if (v54 == 0xD000000000000015LL && v55 == 0x80000000003467E0LL)
    {
      OUTLINED_FUNCTION_18_18(0x80000000003467E0LL);
LABEL_17:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v58 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v58, (uint64_t)static Logger.siriPhone);
      uint64_t v59 = OUTLINED_FUNCTION_41();
      uint64_t v51 = 2LL;
      if (!os_log_type_enabled((os_log_t)a4, v59)) {
        goto LABEL_66;
      }
      uint64_t v60 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_9_27(v60);
      _os_log_impl( &dword_0,  (os_log_t)a4,  v59,  "#PhoneCallControlRequestSupportPolicy cannot switch to FTA from telephony.",  (uint8_t *)v37,  2u);
      goto LABEL_65;
    }

    uint64_t v57 = OUTLINED_FUNCTION_4_32(v54, v55, v56, 0x80000000003467E0LL);
    OUTLINED_FUNCTION_62();
    if ((v57 & 1) != 0) {
      goto LABEL_17;
    }
  }

  if ((OUTLINED_FUNCTION_5_30(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24)) & 1) != 0)
  {
    uint64_t v61 = OUTLINED_FUNCTION_15_19();
    int v37 = v62;
    if (v61 == 0xD000000000000010LL && v62 == 0x80000000003467C0LL) {
      goto LABEL_28;
    }
    uint64_t v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, 0xD000000000000010LL, 0x80000000003467C0LL, 0LL);
    OUTLINED_FUNCTION_62();
    if ((v63 & 1) != 0)
    {
LABEL_29:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v68 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v68, (uint64_t)static Logger.siriPhone);
      uint64_t v69 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_87(v69))
      {
        uint64_t v70 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_9_27(v70);
        OUTLINED_FUNCTION_0_30( &dword_0,  v71,  v72,  "#PhoneCallControlRequestSupportPolicy call is already FaceTime call. Not switching to FaceTime.");
        uint64_t v51 = 0LL;
        goto LABEL_65;
      }

      uint64_t v51 = 0LL;
LABEL_66:

      return v51;
    }
  }

  int v37 = a1;
  SPHCall.isFTAudio.getter(ObjectType, a2);
  if ((v64 & 1) != 0)
  {
    uint64_t v65 = OUTLINED_FUNCTION_15_19();
    int v37 = v66;
    if (v65 == 0xD000000000000015LL && v66 == 0x80000000003467E0LL)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }

    uint64_t v73 = OUTLINED_FUNCTION_4_32(v65, v66, v67, 0x80000000003467E0LL);
    OUTLINED_FUNCTION_62();
    if ((v73 & 1) != 0) {
      goto LABEL_29;
    }
  }

  if (OUTLINED_FUNCTION_5_30(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16)) != 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    __int128 v83 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v83, (uint64_t)static Logger.siriPhone);
    __int128 v84 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_87(v84))
    {
      v85 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_9_27(v85);
      OUTLINED_FUNCTION_0_30( &dword_0,  v86,  v87,  "#PhoneCallControlRequestSupportPolicy cannot switch to FaceTime because current call is not active.");
      uint64_t v51 = 3LL;
      goto LABEL_65;
    }

    uint64_t v51 = 3LL;
    goto LABEL_66;
  }

  uint64_t v74 = *(void *)(a4 + 24);
  __int128 v75 = *(void *)(a4 + 32);
  __swift_project_boxed_opaque_existential_1((void *)a4, v74);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v75 + 120))(v114, v74, v75);
  uint64_t v76 = v115;
  uint64_t v77 = v116;
  __swift_project_boxed_opaque_existential_1(v114, v115);
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 32))(v76, v77);
  __swift_destroy_boxed_opaque_existential_1(v114);
  if (v37 >= 2)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v78 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v78, (uint64_t)static Logger.siriPhone);
    __int128 v79 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_87(v79))
    {
      __int128 v80 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_9_27(v80);
      OUTLINED_FUNCTION_0_30( &dword_0,  v81,  v82,  "#PhoneCallControlRequestSupportPolicy cannot switch to FaceTime because there are multiple active calls.");
      uint64_t v51 = 8LL;
      goto LABEL_65;
    }

    uint64_t v51 = 8LL;
    goto LABEL_66;
  }

  if ((OUTLINED_FUNCTION_5_30(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 176)) & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    v88 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v88, (uint64_t)static Logger.siriPhone);
    v89 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_87(v89))
    {
      v90 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_9_27(v90);
      OUTLINED_FUNCTION_0_30( &dword_0,  v91,  v92,  "#PhoneCallControlRequestSupportPolicy cannot switch to FaceTime because caller ID is blocked.");
      uint64_t v51 = 1LL;
      goto LABEL_65;
    }

    uint64_t v51 = 1LL;
    goto LABEL_66;
  }

  int v37 = a1;
  if ((v53(ObjectType, a2) & 1) != 0
    && (OUTLINED_FUNCTION_5_30(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48)) & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    v102 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v102, (uint64_t)static Logger.siriPhone);
    v103 = OUTLINED_FUNCTION_41();
    if (!OUTLINED_FUNCTION_87(v103))
    {
      uint64_t v51 = 7LL;
      goto LABEL_66;
    }

    v104 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_9_27(v104);
    OUTLINED_FUNCTION_0_30( &dword_0,  v105,  v106,  "#PhoneCallControlRequestSupportPolicy cannot switch to FaceTime because FaceTime status is not valid.");
    uint64_t v51 = 7LL;
    goto LABEL_65;
  }

  v93 = *(void *)(a4 + 24);
  v94 = *(void *)(a4 + 32);
  __swift_project_boxed_opaque_existential_1((void *)a4, v93);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v94 + 144))(v114, v93, v94);
  v95 = v115;
  v96 = v116;
  int v37 = (uint64_t)OUTLINED_FUNCTION_49_0(v114);
  a4 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v96 + 24))( 0xD000000000000012LL,  0x80000000003479B0LL,  v95,  v96);
  __swift_destroy_boxed_opaque_existential_1(v114);
  if ((a4 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    v97 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v97, (uint64_t)static Logger.siriPhone);
    v98 = OUTLINED_FUNCTION_41();
    if (!OUTLINED_FUNCTION_87(v98))
    {
      uint64_t v51 = 4LL;
      goto LABEL_66;
    }

    v99 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_9_27(v99);
    OUTLINED_FUNCTION_0_30(&dword_0, v100, v101, "#PhoneCallControlRequestSupportPolicy FaceTime app nor installed.");
    uint64_t v51 = 4LL;
    goto LABEL_65;
  }

  return 10LL;
}

    return 0LL;
  }

  v114 = v7;
  if (one-time initialization token for siriPhone != -1) {
LABEL_47:
  }
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  int v23 = (*(uint64_t (**)(char *, uint64_t, void *))(v15 + 16))(v18, a2, v14);
  v113 = v22;
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  uint64_t v26 = static os_log_type_t.debug.getter(v24, v25);
  char v27 = os_log_type_enabled(v24, v26);
  v120 = a2;
  v116 = p_base_props;
  v117 = v14;
  v115 = v9;
  if (v27)
  {
    char v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = (Class *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)char v28 = 138412290;
    uint64_t v30 = (void *)IntentResolutionRecord.intent.getter(v14);
    uint64_t v31 = [v30 backingStore];

    if (!outlined bridged method (ob) of @objc PBCodable.dictionaryRepresentation()(v31)) {
      Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    }
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v129 = (uint64_t)isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, v130, v28 + 4);
    os_log_s *v29 = isa;
    uint64_t v14 = v117;
    (*(void (**)(char *, void *))(v15 + 8))(v18, v117);
    _os_log_impl( &dword_0,  v24,  v26,  "#PhoneCallFlowFactory Extension explicitly asked to confirm, intent = %@",  v28,  0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v29, 1LL);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, void *))(v15 + 8))(v18, v14);
  }

  os_log_type_t v40 = (void *)IntentResolutionRecord.intent.getter(v14);
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v40);
  if (v41) {
    uint64_t v42 = v41;
  }
  else {
    uint64_t v42 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v42 >> 62)
  {
    if (v42 < 0) {
      v112 = v42;
    }
    else {
      v112 = v42 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter(v112);
    if (v43)
    {
LABEL_19:
      uint64_t v18 = (char *)(v42 & 0xC000000000000001LL);
      uint64_t v15 = 4LL;
      p_base_props = &CameraControlFlow.base_props;
      while (1)
      {
        a2 = v15 - 4;
        if (v18) {
          uint64_t v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v42);
        }
        else {
          uint64_t v44 = *(id *)(v42 + 8 * v15);
        }
        uint64_t v45 = v44;
        uint64_t v9 = v15 - 3;
        if (__OFADD__(a2, 1LL))
        {
          __break(1u);
          goto LABEL_47;
        }

        uint64_t v46 = [v44 personHandle];
        if (v46)
        {
          uint64_t v47 = v46;
          uint64_t v14 = [v46 emergencyType];
        }

        ++v15;
        if (v9 == v43) {
          goto LABEL_27;
        }
      }

      swift_bridgeObjectRelease_n(v42, 2LL);
      uint64_t v64 = v45;
      uint64_t v35 = (os_log_s *)Logger.logObject.getter(v64);
      uint64_t v66 = static os_log_type_t.debug.getter(v35, v65);
      if (os_log_type_enabled(v35, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v68 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v67 = 138412290;
        v129 = (uint64_t)v64;
        uint64_t v69 = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, v130, v67 + 4);
        *uint64_t v68 = v64;

        _os_log_impl( &dword_0,  v35,  v66,  "#PhoneCallFlowFactory skipping confirmation because contacts contains local emergency handle: %@",  v67,  0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy(v68, 1LL);
        swift_slowDealloc(v68, -1LL, -1LL);
        swift_slowDealloc(v67, -1LL, -1LL);

        goto LABEL_11;
      }

      return 0LL;
    }
  }

  else
  {
    uint64_t v43 = *(void *)((char *)&dword_10 + (v42 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v43) {
      goto LABEL_19;
    }
  }

  OUTLINED_FUNCTION_50();
  uint64_t v12 = 1;
  return v12 & 1;
}

      if (v22 < v20)
      {
        if (v16 < v15) {
          goto LABEL_134;
        }
        if (v15 < v16)
        {
          uint64_t v32 = (uint64_t *)(v120 + 8 * v16);
          __int128 v33 = v16;
          __int128 v34 = v15;
          uint64_t v35 = (uint64_t *)(v135 + 8 * v15);
          do
          {
            if (v34 != --v33)
            {
              if (!v135) {
                goto LABEL_140;
              }
              uint64_t v36 = *v35;
              *uint64_t v35 = *v32;
              *uint64_t v32 = v36;
            }

            ++v34;
            --v32;
            ++v35;
          }

          while (v34 < v33);
        }
      }
    }

    if (v16 >= v8) {
      goto LABEL_28;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_131;
    }
    if (v16 - v15 >= v122)
    {
LABEL_28:
      uint64_t v38 = v4;
      uint64_t v39 = v135;
      goto LABEL_29;
    }

    if (__OFADD__(v15, v122)) {
      goto LABEL_135;
    }
    int v37 = v15 + v122 >= v8 ? v8 : v15 + v122;
    if (v37 < v15) {
      break;
    }
    if (v16 == v37) {
      goto LABEL_28;
    }
    v128 = v4;
    v130 = v14;
    v93 = (uint64_t *)(v120 + 8 * v16);
    uint64_t v39 = v135;
    v133 = v37;
    do
    {
      v94 = v16;
      v95 = *(void *)(v135 + 8 * v16);
      v96 = v15;
      v97 = v15;
      v98 = v93;
      do
      {
        v99 = *v98;
        swift_retain();
        swift_retain();
        PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a3);
        v101 = v100;
        PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a3);
        v103 = v102;
        swift_release(v95);
        swift_release(v99);
        if (v103 >= v101) {
          break;
        }
        if (!v135) {
          goto LABEL_138;
        }
        v104 = *v98;
        v95 = v98[1];
        *v98 = v95;
        v98[1] = v104;
        --v98;
        ++v97;
      }

      while (v94 != v97);
      uint64_t v16 = v94 + 1;
      ++v93;
      uint64_t v15 = v96;
    }

    while (v94 + 1 != v133);
    uint64_t v16 = v133;
    uint64_t v38 = v128;
    uint64_t v14 = v130;
LABEL_29:
    if (v16 < v15) {
      goto LABEL_130;
    }
    v123 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0) {
      uint64_t v14 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  *((void *)v14 + 2) + 1LL,  1,  v14);
    }
    uint64_t v41 = *((void *)v14 + 2);
    os_log_type_t v40 = *((void *)v14 + 3);
    uint64_t v42 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v14 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( (char *)(v40 > 1),  v41 + 1,  1,  v14);
    }
    *((void *)v14 + 2) = v42;
    uint64_t v43 = v14 + 32;
    uint64_t v44 = &v14[16 * v41 + 32];
    *(void *)uint64_t v44 = v15;
    *((void *)v44 + 1) = v16;
    if (v41)
    {
      while (1)
      {
        uint64_t v45 = v42 - 1;
        if (v42 >= 4)
        {
          uint64_t v50 = &v43[16 * v42];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          uint64_t v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_115;
          }
          unint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          uint64_t v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          uint64_t v49 = v56;
          if (v56) {
            goto LABEL_116;
          }
          uint64_t v57 = v42 - 2;
          uint64_t v58 = &v43[16 * v42 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          uint64_t v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_117;
          }
          uint64_t v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_119;
          }
          if (v62 >= v53)
          {
            __int128 v80 = &v43[16 * v45];
            __int128 v82 = *(void *)v80;
            __int128 v81 = *((void *)v80 + 1);
            uint64_t v56 = __OFSUB__(v81, v82);
            __int128 v83 = v81 - v82;
            if (v56) {
              goto LABEL_125;
            }
            uint64_t v73 = v48 < v83;
            goto LABEL_66;
          }
        }

        else
        {
          if (v42 != 3)
          {
            uint64_t v74 = *((void *)v14 + 4);
            __int128 v75 = *((void *)v14 + 5);
            uint64_t v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            uint64_t v68 = v56;
            goto LABEL_60;
          }

          uint64_t v47 = *((void *)v14 + 4);
          uint64_t v46 = *((void *)v14 + 5);
          uint64_t v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          uint64_t v49 = v56;
        }

        if ((v49 & 1) != 0) {
          goto LABEL_118;
        }
        uint64_t v57 = v42 - 2;
        uint64_t v63 = &v43[16 * v42 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        uint64_t v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        uint64_t v68 = v66;
        if (v66) {
          goto LABEL_120;
        }
        uint64_t v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        uint64_t v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_122;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_124;
        }
        if (v67 + v72 >= v48)
        {
          uint64_t v73 = v48 < v72;
LABEL_66:
          if (v73) {
            uint64_t v45 = v57;
          }
          goto LABEL_68;
        }

    uint64_t v12 = (unsigned int *)&enum case for Image.none(_:);
    goto LABEL_12;
  }

  uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___CNContactFormatter);
  INPerson.toCNContact.getter();
  uint64_t v7 = v6;
  uint64_t v8 = [v5 stringFromContact:v6 style:1002];

  if (!v8)
  {
    *a3 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_10:
    uint64_t v12 = (unsigned int *)&enum case for Image.contact(_:);
    goto LABEL_12;
  }

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v11 = v10;

  *a3 = v9;
  a3[1] = v11;
  uint64_t v12 = (unsigned int *)&enum case for Image.monogram(_:);
LABEL_12:
  uint64_t v20 = *v12;
  type metadata accessor for Image(0LL);
  OUTLINED_FUNCTION_129_4();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v21 + 104))(a3, v20);
}

  swift_bridgeObjectRelease(a3);
  uint64_t v12 = 0;
  return v12 & 1;
}

  swift_release(a2);
  swift_bridgeObjectRelease();
  uint64_t v12 = 1;
  return v12 & 1;
}

    swift_bridgeObjectRelease();
  }

    swift_bridgeObjectRelease();
  }

  OUTLINED_FUNCTION_7_4(v30);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v38 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v38, (uint64_t)static Logger.siriPhone);
  uint64_t v39 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_27_1(v39))
  {
    os_log_type_t v40 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v40);
    OUTLINED_FUNCTION_5_13( &dword_0,  v41,  v42,  "#CallingIntentContactNeedsDisambiguationFlowStrategy Foreign emergency check should guarantee the presence of a no nLocal emergencyType INPerson");
    OUTLINED_FUNCTION_0_2(v26);
  }

  uint64_t v44 = *(void *)(v27 + 128);
  uint64_t v43 = *(void *)(v27 + 136);

  uint64_t v45 = OUTLINED_FUNCTION_120_0();
  swift_storeEnumTagMultiPayload(v45, v46, 20LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
  OUTLINED_FUNCTION_4_4(v44, v47);
  PhoneError.logged()(v48);
  outlined destroy of MainFlow(v43, type metadata accessor for PhoneError);
  swift_willThrow(v49, v50, v51, v52, v53, v54, v55, v56);
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_14_2(*(uint64_t (**)(void))(v27 + 8));
}

      uint64_t v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10) {
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
      goto LABEL_5;
    }

    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v16 + v8, v9 - v8);
  }

uint64_t ContactPromptResponse.debugDescription.getter(unsigned __int8 a1)
{
  switch(a1)
  {
    case 5u:
      return 0x6E776F6E6B6E752ELL;
    case 6u:
      return 0xD000000000000015LL;
    case 7u:
      return 0x6F4374657365722ELL;
  }

  _StringGuts.grow(_:)(17LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  strcpy((char *)v6, ".confirmation(");
  v3._uint64_t countAndFlagsBits = PhoneCallConfirmation.rawValue.getter(a1);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._uint64_t countAndFlagsBits = 41LL;
  v5._object = (void *)0xE100000000000000LL;
  String.append(_:)(v5);
  return v6[0];
}

uint64_t outlined destroy of ContactPromptResponseParser(uint64_t a1)
{
  return a1;
}

uint64_t protocol witness for RCHFlowStrategyAsync.actionForInput(input:) in conformance CallingIntentRCHFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144LL))();
}

uint64_t CallingIntentRCHFlowStrategy.actionForInput(input:)()
{
  uint64_t v1 = type metadata accessor for Parse(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Swift::String v5 = v0 + 2;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 72))(v6, v7);
  Input.parse.getter(v8);
  (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v8 + 192LL))(&v35, v4);
  swift_release(v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v36)
  {
    outlined init with take of AppSelectionSignalComponent(&v35, (uint64_t)v40);
    if ((static ExecutionPath.choosePath(for:sharedGlobals:)((os_log_s *)v40, (uint64_t)v5) - 3) >= 3u)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v18 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v18, (uint64_t)static Logger.siriPhone);
      os_log_type_t v19 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v19))
      {
        uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_31_0(v20);
        OUTLINED_FUNCTION_3_2( &dword_0,  v21,  v22,  "#CallingIntentRCHFlowStrategy ignore current request because intent should be handled by the server");
        OUTLINED_FUNCTION_0_2((uint64_t)v5);
      }

      OUTLINED_FUNCTION_28_28();
    }

    else
    {
      uint64_t v10 = v0[5];
      uint64_t v9 = v0[6];
      OUTLINED_FUNCTION_66(v5);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v10, v9);
      (*(void (**)(__int128 *__return_ptr))(*(void *)v11 + 240LL))(&v35);
      OUTLINED_FUNCTION_38_1();
      if (v37 == 1)
      {
        outlined destroy of PhoneCallNLIntent?( (uint64_t)&v35,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
        memset(v38, 0, sizeof(v38));
        uint64_t v39 = 0LL;
      }

      else
      {
        outlined init with copy of PhoneCallNLIntent?((uint64_t)&v35 + 8, (uint64_t)v38);
        outlined destroy of TransformationResult((uint64_t)&v35);
      }

      int v23 = __swift_project_boxed_opaque_existential_1(v40, v40[3]);
      PhoneCallNLIntent.shouldResetRequest(previousNLIntent:)();
      if ((v24 & 1) != 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v25 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v25, (uint64_t)static Logger.siriPhone);
        os_log_type_t v26 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_7(v26))
        {
          char v27 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_31_0(v27);
          OUTLINED_FUNCTION_3_2( &dword_0,  v28,  v29,  "#CallingIntentRCHFlowStrategy ignore current request because shouldResetRequest from nlIntent is true");
          OUTLINED_FUNCTION_0_2((uint64_t)v5);
        }

        OUTLINED_FUNCTION_28_28();
      }

      else
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v30 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
        os_log_type_t v31 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_7(v31))
        {
          uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_31_0(v32);
          OUTLINED_FUNCTION_3_2(&dword_0, v33, v34, "#CallingIntentRCHFlowStrategy Received a recognized Input");
          OUTLINED_FUNCTION_0_2((uint64_t)v5);
        }

        static ActionForInput.handle()();
      }

      outlined destroy of PhoneCallNLIntent?( (uint64_t)v38,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }

    return __swift_destroy_boxed_opaque_existential_1(v40);
  }

  else
  {
    outlined destroy of PhoneCallNLIntent?( (uint64_t)&v35,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v12 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
    os_log_type_t v13 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v13))
    {
      uint64_t v14 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_31_0(v14);
      OUTLINED_FUNCTION_3_2( &dword_0,  v15,  v16,  "#CallingIntentRCHFlowStrategy Input not a recognized PhoneCallNLIntent.");
      OUTLINED_FUNCTION_0_2((uint64_t)v5);
    }

    return OUTLINED_FUNCTION_28_28();
  }

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance UsoTask()
{
  return UsoTask.description.getter();
}

uint64_t UsoTask.description.getter()
{
  v5._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v5._object = (void *)0x800000000034B1D0LL;
  OUTLINED_FUNCTION_20_28(v5);
  v6._uint64_t countAndFlagsBits = UsoTask.verbString.getter();
  object = v6._object;
  OUTLINED_FUNCTION_20_28(v6);
  swift_bridgeObjectRelease(object);
  v1._object = (void *)0x800000000034B1F0LL;
  v1._uint64_t countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v1);
  v7._uint64_t countAndFlagsBits = UsoTask.baseEntityAsString.getter();
  uint64_t v2 = v7._object;
  OUTLINED_FUNCTION_20_28(v7);
  swift_bridgeObjectRelease(v2);
  v3._uint64_t countAndFlagsBits = 32010LL;
  v3._object = (void *)0xE200000000000000LL;
  String.append(_:)(v3);
  return 0LL;
}

_BYTE *static Transformer<>.getPhoneCallControlNLIntent(for:)(uint64_t a1)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = swift_retain_n(a1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  Swift::String v6 = &unk_31F000;
  Swift::String v7 = &unk_42A000;
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v8 = swift_slowAlloc(22LL, -1LL);
    uint64_t v91 = swift_slowAlloc(64LL, -1LL);
    *(void *)&__int128 v95 = v91;
    *(_DWORD *)uint64_t v8 = 136315394;
    if (one-time initialization token for logPrefix != -1) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v9 = static Transformer<>.logPrefix;
    uint64_t v10 = unk_477AB0;
    uint64_t v11 = qword_477AB8;
    uint64_t v12 = (void *)unk_477AC0;
    *(void *)&v97[0] = 0LL;
    *((void *)&v97[0] + 1) = 0xE000000000000000LL;
    swift_bridgeObjectRetain(unk_477AC0);
    swift_bridgeObjectRetain(v10);
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v9, v10, v11, v12);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v10);
    *(void *)&v97[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0LL,  0xE000000000000000LL,  (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, (char *)v97 + 8, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(0xE000000000000000LL);
    *(_WORD *)(v8 + 12) = 2080;
    swift_retain(a1);
    uint64_t v13 = UsoTask.description.getter();
    unint64_t v15 = v14;
    swift_release(a1);
    *(void *)&v97[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, (char *)v97 + 8, v8 + 14, v8 + 22);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v15);
    _os_log_impl(&dword_0, v4, v5, "%s attempting to get call control action for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v91, 2LL);
    swift_slowDealloc(v91, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);

    Swift::String v7 = (void *)&unk_42A000;
    Swift::String v6 = (void *)&unk_31F000;
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  static UsoTask_CodegenConverter.convert(task:)(a1);
  if (!v96)
  {
    uint64_t v24 = outlined destroy of Any?((uint64_t)&v95);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v28 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v95 = v28;
      *(_DWORD *)char v27 = 136315138;
      if (v7[110] != -1LL) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v29 = static Transformer<>.logPrefix;
      uint64_t v30 = unk_477AB0;
      uint64_t v31 = qword_477AB8;
      uint64_t v32 = (void *)unk_477AC0;
      *(void *)&v97[0] = 0LL;
      *((void *)&v97[0] + 1) = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_477AC0);
      swift_bridgeObjectRetain(v30);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v29, v30, v31, v32);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v30);
      uint64_t v33 = *((void *)&v97[0] + 1);
      *(void *)&v97[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( *(uint64_t *)&v97[0],  *((unint64_t *)&v97[0] + 1),  (uint64_t *)&v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, (char *)v97 + 8, v27 + 4, v27 + 12);
      swift_bridgeObjectRelease(v33);
      _os_log_impl(&dword_0, v25, v26, "%s could not convert task.", v27, 0xCu);
      swift_arrayDestroy(v28, 1LL);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    return 0LL;
  }

  outlined init with take of Any(&v95, v97);
  UsoTask.isSwitchToFaceTimeOrVideoCallTask.getter();
  if ((v16 & 1) != 0)
  {
    UsoTask.hasFaceTimeAudioSemantics.getter();
    if ((v17 & 1) != 0) {
      unsigned __int8 v18 = 4;
    }
    else {
      unsigned __int8 v18 = 3;
    }
    uint64_t v19 = PhoneCallControlNLIntent.Verb.rawValue.getter(v18);
    uint64_t v21 = v20;
    if (v19 == 0xD000000000000015LL && v20 == 0x80000000003467E0LL)
    {
      uint64_t v22 = swift_bridgeObjectRelease(0x80000000003467E0LL);
      char v23 = 9;
    }

    else
    {
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 0xD000000000000015LL, 0x80000000003467E0LL, 0LL);
      uint64_t v22 = swift_bridgeObjectRelease(v21);
      if ((v48 & 1) != 0) {
        char v23 = 9;
      }
      else {
        char v23 = 8;
      }
    }

    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v49, v50))
    {
      unsigned __int8 v92 = v23;
      unsigned __int8 v93 = v18;
      uint64_t v51 = swift_slowAlloc(22LL, -1LL);
      uint64_t v52 = swift_slowAlloc(64LL, -1LL);
      uint64_t v94 = v52;
      *(_DWORD *)uint64_t v51 = v6[238];
      if (v7[110] != -1LL) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v53 = static Transformer<>.logPrefix;
      uint64_t v54 = unk_477AB0;
      uint64_t v56 = qword_477AB8;
      unint64_t v55 = (void *)unk_477AC0;
      *(void *)&__int128 v95 = 0LL;
      *((void *)&v95 + 1) = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_477AC0);
      swift_bridgeObjectRetain(v54);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v53, v54, v56, v55);
      swift_bridgeObjectRelease(v55);
      swift_bridgeObjectRelease(v54);
      uint64_t v57 = *((void *)&v95 + 1);
      *(void *)&__int128 v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v95,  *((unint64_t *)&v95 + 1),  &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v51 + 4, v51 + 12);
      swift_bridgeObjectRelease(v57);
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v58 = PhoneCallControlAction.description.getter(v92);
      unint64_t v60 = v59;
      *(void *)&__int128 v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v51 + 14, v51 + 22);
      swift_bridgeObjectRelease(v60);
      _os_log_impl( &dword_0,  v49,  v50,  "%s getPhoneCallControlAction parsed task to PhoneCallControlAction.%s",  (uint8_t *)v51,  0x16u);
      swift_arrayDestroy(v52, 2LL);
      swift_slowDealloc(v52, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);

      __swift_destroy_boxed_opaque_existential_1(v97);
      unsigned __int8 v18 = v93;
    }

    else
    {

      __swift_destroy_boxed_opaque_existential_1(v97);
    }

    uint64_t v74 = type metadata accessor for PhoneCallControlNLIntent();
    swift_allocObject(v74, 19LL, 7LL);
    char v46 = v18;
    char v47 = 5;
    return PhoneCallControlNLIntent.init(verb:target:)(v46, v47);
  }

  UsoTask.isSwitchToSpeakerphoneTask.getter();
  if ((v35 & 1) != 0)
  {
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc(22LL, -1LL);
      uint64_t v39 = swift_slowAlloc(64LL, -1LL);
      uint64_t v94 = v39;
      *(_DWORD *)uint64_t v38 = v6[238];
      if (v7[110] != -1LL) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v40 = static Transformer<>.logPrefix;
      uint64_t v41 = unk_477AB0;
      uint64_t v42 = qword_477AB8;
      uint64_t v43 = (void *)unk_477AC0;
      *(void *)&__int128 v95 = 0LL;
      *((void *)&v95 + 1) = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_477AC0);
      swift_bridgeObjectRetain(v41);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v40, v41, v42, v43);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v41);
      uint64_t v44 = *((void *)&v95 + 1);
      *(void *)&__int128 v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v95,  *((unint64_t *)&v95 + 1),  &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v38 + 4, v38 + 12);
      swift_bridgeObjectRelease(v44);
      *(_WORD *)(v38 + 12) = 2080;
      *(void *)&__int128 v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000012LL,  0x8000000000346800LL,  &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v38 + 14, v38 + 22);
      _os_log_impl( &dword_0,  v36,  v37,  "%s getPhoneCallControlAction parsed task to PhoneCallControlAction.%s",  (uint8_t *)v38,  0x16u);
      swift_arrayDestroy(v39, 2LL);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    __swift_destroy_boxed_opaque_existential_1(v97);
    uint64_t v45 = type metadata accessor for PhoneCallControlNLIntent();
    swift_allocObject(v45, 19LL, 7LL);
    char v46 = 0;
    char v47 = 3;
    return PhoneCallControlNLIntent.init(verb:target:)(v46, v47);
  }

  uint64_t v61 = UsoTask.settingsUsoIdentifiers.getter();
  rawValue = CallControlUsoIdentifiers.init(usoIdentifiers:)((Swift::OpaquePointer)v61).namespaceToIdentifierMap._rawValue;
  __int16 v63 = static Transformer<>.mapIdentifiersToTarget(usoIdentifiers:)((uint64_t)rawValue);
  swift_bridgeObjectRelease(rawValue);
  uint64_t v64 = static Transformer<>.mapTaskToVerb(usoTask:isTargetWithNegation:)((uint64_t)v97, HIBYTE(v63) & 1);
  if (v64 == 7)
  {
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = swift_slowAlloc(32LL, -1LL);
      uint64_t v94 = v68;
      *(_DWORD *)uint64_t v67 = 136315138;
      if (v7[110] != -1LL) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v69 = static Transformer<>.logPrefix;
      uint64_t v70 = unk_477AB0;
      uint64_t v71 = qword_477AB8;
      uint64_t v72 = (void *)unk_477AC0;
      *(void *)&__int128 v95 = 0LL;
      *((void *)&v95 + 1) = 0xE000000000000000LL;
      swift_bridgeObjectRetain(unk_477AC0);
      swift_bridgeObjectRetain(v70);
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v69, v70, v71, v72);
      swift_bridgeObjectRelease(v72);
      swift_bridgeObjectRelease(v70);
      uint64_t v73 = *((void *)&v95 + 1);
      *(void *)&__int128 v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v95,  *((unint64_t *)&v95 + 1),  &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v67 + 4, v67 + 12);
      swift_bridgeObjectRelease(v73);
      _os_log_impl(&dword_0, v65, v66, "%s could not determine a verb for call control.", v67, 0xCu);
      swift_arrayDestroy(v68, 1LL);
      swift_slowDealloc(v68, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);
    }

    __swift_destroy_boxed_opaque_existential_1(v97);
    return 0LL;
  }

  char v76 = v64;
  uint64_t v77 = type metadata accessor for PhoneCallControlNLIntent();
  swift_allocObject(v77, 19LL, 7LL);
  uint64_t v34 = PhoneCallControlNLIntent.init(verb:target:)(v76, v63);
  uint64_t v78 = swift_retain_n(v34, 2LL);
  __int128 v79 = (os_log_s *)Logger.logObject.getter(v78);
  os_log_type_t v80 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v79, v80))
  {
    uint64_t v81 = swift_slowAlloc(22LL, -1LL);
    uint64_t v82 = swift_slowAlloc(64LL, -1LL);
    uint64_t v94 = v82;
    *(_DWORD *)uint64_t v81 = v6[238];
    if (v7[110] != -1LL) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v83 = static Transformer<>.logPrefix;
    uint64_t v84 = unk_477AB0;
    *(void *)&__int128 v95 = 0LL;
    *((void *)&v95 + 1) = 0xE000000000000000LL;
    swift_bridgeObjectRetain(unk_477AB0);
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( v83,  v84,  0xD000000000000021LL,  (void *)0x8000000000349F90LL);
    swift_bridgeObjectRelease(v84);
    uint64_t v85 = *((void *)&v95 + 1);
    *(void *)&__int128 v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v95,  *((unint64_t *)&v95 + 1),  &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v81 + 4, v81 + 12);
    swift_bridgeObjectRelease(v85);
    *(_WORD *)(v81 + 12) = 2080;
    v86 = *(uint64_t (**)(uint64_t))(*(void *)v34 + 144LL);
    uint64_t v87 = swift_retain(v34);
    uint64_t v88 = v86(v87);
    unint64_t v90 = v89;
    swift_release(v34);
    *(void *)&__int128 v95 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v90, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v81 + 14, v81 + 22);
    swift_release_n(v34, 2LL);
    swift_bridgeObjectRelease(v90);
    _os_log_impl(&dword_0, v79, v80, "%s intent = %s)", (uint8_t *)v81, 0x16u);
    swift_arrayDestroy(v82, 2LL);
    swift_slowDealloc(v82, -1LL, -1LL);
    swift_slowDealloc(v81, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v34, 2LL);
  }

  __swift_destroy_boxed_opaque_existential_1(v97);
  return v34;
}

uint64_t UsoTask.settingsUsoIdentifiers.getter()
{
  if (v92[3])
  {
    outlined init with copy of Any?((uint64_t)v92, (uint64_t)v91);
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_ReferenceTrigger<UsoEntity_common_Setting>);
    if (swift_dynamicCast(&v90, v91, (char *)&type metadata for Any + 8, v1, 0LL))
    {
      uint64_t v2 = v90;
      uint64_t v3 = dispatch thunk of Uso_VerbTemplate_ReferenceTrigger.reference.getter(&v89);
      uint64_t v4 = v89;
      uint64_t v5 = dispatch thunk of Uso_VerbTemplate_ReferenceTrigger.userEntities.getter(v3);
      if (v5) {
        uint64_t v6 = v5;
      }
      else {
        uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
      }
      uint64_t v89 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0) {
          uint64_t v53 = v6;
        }
        else {
          uint64_t v53 = v6 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v6);
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v53);
        if (!v7) {
          goto LABEL_74;
        }
        goto LABEL_8;
      }

      uint64_t v7 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain(v6);
      if (v7)
      {
LABEL_8:
        if (v7 >= 1)
        {
          for (uint64_t i = 0LL; i != v7; ++i)
          {
            if ((v6 & 0xC000000000000001LL) != 0)
            {
              uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
              uint64_t v10 = v9;
            }

            else
            {
              uint64_t v10 = *(void *)(v6 + 8 * i + 32);
              uint64_t v9 = swift_retain(v10);
            }

            dispatch thunk of CodeGenListEntry.entry.getter(&v88, v9);
            uint64_t v11 = swift_release(v10);
            uint64_t v12 = v88;
            if (v88)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
              unint64_t v14 = *(void *)((char *)&dword_10 + (v89 & 0xFFFFFFFFFFFFFF8LL));
              unint64_t v13 = *(void *)((char *)&dword_18 + (v89 & 0xFFFFFFFFFFFFFF8LL));
              if (v14 >= v13 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1LL);
              }
              uint64_t v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
              specialized Array._endMutation()(v15, v16, v17, v18);
            }
          }

LABEL_53:
          swift_bridgeObjectRelease(v6);
          uint64_t v19 = v89;
LABEL_75:
          swift_bridgeObjectRelease(v6);
          swift_release(v2);
          __swift_destroy_boxed_opaque_existential_1(v91);
          goto LABEL_76;
        }

        __break(1u);
LABEL_64:
        if (v6 < 0) {
          uint64_t v54 = v6;
        }
        else {
          uint64_t v54 = v6 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v6);
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v54);
        if (!v23) {
          goto LABEL_74;
        }
        goto LABEL_26;
      }
    }

    else
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_ReferenceNumberTrigger<UsoEntity_common_Setting>);
      if (swift_dynamicCast(&v90, v91, (char *)&type metadata for Any + 8, v20, 0LL))
      {
        uint64_t v2 = v90;
        uint64_t v21 = dispatch thunk of Uso_VerbTemplate_ReferenceNumberTrigger.reference.getter(&v89);
        uint64_t v4 = v89;
        uint64_t v22 = dispatch thunk of Uso_VerbTemplate_ReferenceNumberTrigger.userEntities.getter(v21);
        if (v22) {
          uint64_t v6 = v22;
        }
        else {
          uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
        }
        uint64_t v89 = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v23 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8LL));
        swift_bridgeObjectRetain(v6);
        if (v23)
        {
LABEL_26:
          if (v23 >= 1)
          {
            for (uint64_t j = 0LL; j != v23; ++j)
            {
              if ((v6 & 0xC000000000000001LL) != 0)
              {
                uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v6);
                uint64_t v26 = v25;
              }

              else
              {
                uint64_t v26 = *(void *)(v6 + 8 * j + 32);
                uint64_t v25 = swift_retain(v26);
              }

              dispatch thunk of CodeGenListEntry.entry.getter(&v88, v25);
              uint64_t v27 = swift_release(v26);
              uint64_t v28 = v88;
              if (v88)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
                unint64_t v30 = *(void *)((char *)&dword_10 + (v89 & 0xFFFFFFFFFFFFFF8LL));
                unint64_t v29 = *(void *)((char *)&dword_18 + (v89 & 0xFFFFFFFFFFFFFF8LL));
                if (v30 >= v29 >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)( v29 > 1,  v30 + 1,  1LL);
                }
                uint64_t v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
                specialized Array._endMutation()(v31, v32, v33, v34);
              }
            }

            goto LABEL_53;
          }

          __break(1u);
LABEL_70:
          if (v6 < 0) {
            uint64_t v55 = v6;
          }
          else {
            uint64_t v55 = v6 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(v6);
          uint64_t v38 = _CocoaArrayWrapper.endIndex.getter(v55);
          if (!v38) {
            goto LABEL_74;
          }
LABEL_43:
          if (v38 < 1)
          {
            __break(1u);
LABEL_117:
            uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL);
            __break(1u);
            return result;
          }

          for (uint64_t k = 0LL; k != v38; ++k)
          {
            if ((v6 & 0xC000000000000001LL) != 0)
            {
              uint64_t v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(k, v6);
              uint64_t v41 = v40;
            }

            else
            {
              uint64_t v41 = *(void *)(v6 + 8 * k + 32);
              uint64_t v40 = swift_retain(v41);
            }

            dispatch thunk of CodeGenListEntry.entry.getter(&v88, v40);
            uint64_t v42 = swift_release(v41);
            uint64_t v43 = v88;
            if (v88)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
              unint64_t v45 = *(void *)((char *)&dword_10 + (v89 & 0xFFFFFFFFFFFFFF8LL));
              unint64_t v44 = *(void *)((char *)&dword_18 + (v89 & 0xFFFFFFFFFFFFFF8LL));
              if (v45 >= v44 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1LL);
              }
              uint64_t v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
              specialized Array._endMutation()(v46, v47, v48, v49);
            }
          }

          goto LABEL_53;
        }
      }

      else
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_Reference<UsoEntity_common_Setting>);
        if (!swift_dynamicCast(&v90, v91, (char *)&type metadata for Any + 8, v35, 0LL))
        {
          uint64_t v50 = type metadata accessor for UsoTask_noVerb_common_Setting(0LL);
          if (swift_dynamicCast(&v90, v91, (char *)&type metadata for Any + 8, v50, 0LL))
          {
            uint64_t v51 = v90;
            uint64_t v52 = swift_retain(v90);
            dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v89, v52);
            swift_release(v51);
            uint64_t v4 = v89;
            swift_release(v51);
            __swift_destroy_boxed_opaque_existential_1(v91);
          }

          else
          {
            __swift_destroy_boxed_opaque_existential_1(v91);
            uint64_t v4 = 0LL;
          }

          uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_76;
        }

        uint64_t v2 = v90;
        uint64_t v36 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v89);
        uint64_t v4 = v89;
        uint64_t v37 = dispatch thunk of Uso_VerbTemplate_Reference.userEntities.getter(v36);
        if (v37) {
          uint64_t v6 = v37;
        }
        else {
          uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
        }
        uint64_t v89 = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v38 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8LL));
        swift_bridgeObjectRetain(v6);
        if (v38) {
          goto LABEL_43;
        }
      }
    }

  __break(1u);
LABEL_54:
  uint64_t result = __swift_storeEnumTagSinglePayload((uint64_t)v71, 1LL, 1LL, v73);
LABEL_55:
  __break(1u);
  return result;
}

  OUTLINED_FUNCTION_7_5();
}

            v33.super.super.isa = v29;
          }

          else
          {
          }

          OUTLINED_FUNCTION_84_21(v93);
          uint64_t v94 = OUTLINED_FUNCTION_41();
          if (OUTLINED_FUNCTION_10(v94))
          {
            __int128 v95 = (_WORD *)OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_31_0(v95);
            OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v29,  (os_log_type_t)v28,  "#CallingIntentContactNeedsDisambiguationFlowStrategy Intent cancelled",  (uint8_t *)v33.super.super.isa);
            OUTLINED_FUNCTION_0_2((uint64_t)v33.super.super.isa);
          }

          static ActionForInput.cancel()(v96);
LABEL_66:
          uint64_t v72 = (void *)v22;
          unint64_t v73 = 0;
          break;
        case 5:
        case 6:
          goto LABEL_30;
        case 7:
          OUTLINED_FUNCTION_84_21(v25);
          uint64_t v88 = OUTLINED_FUNCTION_41();
          if (OUTLINED_FUNCTION_10(v88))
          {
            uint64_t v89 = (_WORD *)OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_31_0(v89);
            OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)(v4 + 24),  (os_log_type_t)&v102,  "#CallingIntentContactNeedsDisambiguationFlowStrategy intent resetting context",  v19);
            OUTLINED_FUNCTION_0_2((uint64_t)v19);
          }

          uint64_t v90 = (void **)(v4 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson);
          OUTLINED_FUNCTION_93_17(v91, (uint64_t)&v102);
          unsigned __int8 v92 = *v90;
          *uint64_t v90 = 0LL;

          *(_BYTE *)(v4 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.shouldClearContext) = 1;
LABEL_61:
          OUTLINED_FUNCTION_163_7();
          goto LABEL_66;
        default:
          goto LABEL_14;
      }

      goto LABEL_67;
    case 1u:
      v101 = v22;
      uint64_t v41 = outlined copy of ContactDisambiguationPromptResponse((id)v22, 1u);
      uint64_t v42 = OUTLINED_FUNCTION_49( (uint64_t)v41,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INPerson?);
      uint64_t v43 = (id)swift_dynamicCast(&v102, &v101, v42);
      goto LABEL_26;
    case 2u:
      if (v22 < 0) {
        goto LABEL_39;
      }
      unint64_t v44 = OUTLINED_FUNCTION_217_2();
      if ((unint64_t)v44 >> 62)
      {
        if (v44 >= 0) {
          v44 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        unint64_t v45 = _CocoaArrayWrapper.endIndex.getter(v44);
      }

      else
      {
        unint64_t v45 = *(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFF8LL));
      }

      uint64_t v25 = OUTLINED_FUNCTION_39();
      if (v22 >= v45)
      {
LABEL_39:
        uint64_t v74 = (os_log_s *)OUTLINED_FUNCTION_84_21(v25);
        unint64_t v75 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_50_12(v74))
        {
          char v76 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v77 = OUTLINED_FUNCTION_7_0(32LL);
          v101 = v22;
          v102 = v77;
          *(_DWORD *)char v76 = 136315138;
          unint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
          v101 = OUTLINED_FUNCTION_224_4(v78, v79);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v76 + 4);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_57_0( &dword_0,  v74,  v75,  "#CallingIntentContactNeedsDisambiguationFlowStrategy selectedIndex: %s is out of bounds",  v76);
          OUTLINED_FUNCTION_17_0(v77);
          OUTLINED_FUNCTION_0_2(v77);
          OUTLINED_FUNCTION_0_2((uint64_t)v76);
        }
      }

      else
      {
        uint64_t v46 = OUTLINED_FUNCTION_217_2();
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v22, (v46 & 0xC000000000000001LL) == 0, v46);
        if ((v46 & 0xC000000000000001LL) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v46);
        }
        else {
          OUTLINED_FUNCTION_27_10(v46 + 8 * v22);
        }
        uint64_t v47 = OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_93_17(v47, (uint64_t)&v102);
        OUTLINED_FUNCTION_251_2();
        uint64_t v48 = OUTLINED_FUNCTION_11_18(v4);
        OUTLINED_FUNCTION_84_21(v48);
        uint64_t v49 = OUTLINED_FUNCTION_234();
        if (OUTLINED_FUNCTION_39_7(v13))
        {
          uint64_t v50 = OUTLINED_FUNCTION_7_0(22LL);
          uint64_t v51 = OUTLINED_FUNCTION_7_0(64LL);
          v101 = v51;
          *(_DWORD *)uint64_t v50 = 136315394;
          uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
          v100 = OUTLINED_FUNCTION_82_7(v52, v53);
          OUTLINED_FUNCTION_245_2(v100, (uint64_t)&v101, v54, v50 + 12);
          uint64_t v55 = OUTLINED_FUNCTION_62();
          *(_WORD *)(v50 + 12) = 2080;
          (*(void (**)(uint64_t))(*(void *)v4 + 344LL))(v55);
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INPerson?);
          uint64_t v57 = OUTLINED_FUNCTION_246_1(v56);
          v100 = OUTLINED_FUNCTION_82_7(v57, v58);
          OUTLINED_FUNCTION_245_2(v100, (uint64_t)&v101, v59, v50 + 22);
          OUTLINED_FUNCTION_31_1(v4);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_33_6( &dword_0,  v13,  v49,  "#CallingIntentContactNeedsDisambiguationFlowStrategy selectedIndex: %s. selectedPerson:%s",  (uint8_t *)v50);
          OUTLINED_FUNCTION_42_2(v51);
          OUTLINED_FUNCTION_0_2(v51);
          OUTLINED_FUNCTION_0_2(v50);
        }

        else
        {

          OUTLINED_FUNCTION_31_1(v4);
        }
      }

      os_log_type_t v80 = (void *)OUTLINED_FUNCTION_186_5();

      if (v80) {
        static ActionForInput.handle()(v81);
      }
      else {
        static ActionForInput.ignore()(v81);
      }
      uint64_t v72 = (void *)v22;
      unint64_t v73 = 2;
      goto LABEL_67;
    case 3u:
      uint64_t v43 = (id)v22;
LABEL_26:
      uint64_t v60 = (os_log_s *)(v4 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson);
      OUTLINED_FUNCTION_93_17((uint64_t)v43, (uint64_t)&v102);
      OUTLINED_FUNCTION_251_2();
      uint64_t v61 = OUTLINED_FUNCTION_11_18(v4);
      OUTLINED_FUNCTION_84_21(v61);
      uint64_t v62 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_50_12(v60))
      {
        uint64_t v63 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v64 = OUTLINED_FUNCTION_7_0(32LL);
        v101 = v64;
        *(_DWORD *)uint64_t v63 = 136315138;
        OUTLINED_FUNCTION_239_3();
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INPerson?);
        os_log_type_t v66 = OUTLINED_FUNCTION_246_1(v65);
        v100 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, &v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v63 + 4);
        OUTLINED_FUNCTION_31_1(v4);
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_57_0( &dword_0,  v60,  v62,  "#CallingIntentContactNeedsDisambiguationFlowStrategy selectedPerson: %s",  v63);
        OUTLINED_FUNCTION_17_0(v64);
        OUTLINED_FUNCTION_0_2(v64);
        OUTLINED_FUNCTION_0_2((uint64_t)v63);
      }

      else
      {

        OUTLINED_FUNCTION_31_1(v4);
      }

      uint64_t v71 = (void *)OUTLINED_FUNCTION_186_5();

      if (!v71) {
        goto LABEL_37;
      }
      OUTLINED_FUNCTION_163_7();
      goto LABEL_38;
    case 4u:
      if (!v22)
      {
        OUTLINED_FUNCTION_84_21(v25);
        BOOL v82 = OUTLINED_FUNCTION_41();
        if (OUTLINED_FUNCTION_10(v82))
        {
          uint64_t v83 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_47(v83);
          OUTLINED_FUNCTION_5_38( &dword_0,  (os_log_s *)(v4 + 24),  (os_log_type_t)&v102,  "#CallingIntentContactNeedsDisambiguationFlowStrategy selectedNonMatchingLabel: reprompting…");
          OUTLINED_FUNCTION_0_2((uint64_t)&v102);
        }

        *(_BYTE *)(v4 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.requiresReprompt) = 1;
        OUTLINED_FUNCTION_163_7();
        uint64_t v72 = 0LL;
        goto LABEL_52;
      }

      if (v22 != 1)
      {
        OUTLINED_FUNCTION_84_21(v25);
        uint64_t v84 = OUTLINED_FUNCTION_41();
        if (OUTLINED_FUNCTION_10(v84))
        {
          uint64_t v85 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_47(v85);
          OUTLINED_FUNCTION_5_38( &dword_0,  (os_log_s *)(v4 + 24),  (os_log_type_t)&v102,  "#CallingIntentContactNeedsDisambiguationFlowStrategy intent belongs to this task, but no contact selected, reprompting…");
          OUTLINED_FUNCTION_0_2((uint64_t)&v102);
        }

        *(_BYTE *)(v4 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.requiresReprompt) = 1;
        OUTLINED_FUNCTION_163_7();
        uint64_t v72 = &dword_0 + 2;
LABEL_52:
        unint64_t v73 = 4;
        goto LABEL_67;
      }

LABEL_74:
    swift_bridgeObjectRelease(v6);
    uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_75;
  }

  uint64_t v4 = 0LL;
  uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_76:
  outlined destroy of Any?((uint64_t)v92);
  v92[0] = _swiftEmptyArrayStorage;
  if (v4)
  {
    swift_retain(v4);
    uint64_t v56 = UsoEntity_common_Setting.nameIdentifiers.getter();
    swift_release(v4);
    specialized Array.append<A>(contentsOf:)((uint64_t)v56);
    uint64_t v57 = swift_retain(v4);
    uint64_t v58 = dispatch thunk of UsoEntity_common_Setting.associatedSetting.getter(v57);
    swift_release(v4);
    if (v58)
    {
      unint64_t v59 = UsoEntity_common_Setting.nameIdentifiers.getter();
      swift_release(v58);
    }

    else
    {
      unint64_t v59 = _swiftEmptyArrayStorage;
    }
  }

  else
  {
    unint64_t v59 = _swiftEmptyArrayStorage;
    specialized Array.append<A>(contentsOf:)((uint64_t)_swiftEmptyArrayStorage);
  }

  specialized Array.append<A>(contentsOf:)((uint64_t)v59);
  uint64_t v60 = *(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(v19);
  for (; v60; uint64_t v60 = _CocoaArrayWrapper.endIndex.getter(v84))
  {
    uint64_t v86 = v4;
    unint64_t v87 = v19 & 0xC000000000000001LL;
    uint64_t v61 = v92[0];
    uint64_t v62 = 4LL;
    while (1)
    {
      if (v87)
      {
        uint64_t v63 = specialized _ArrayBuffer._getElementSlowPath(_:)(v62 - 4, v19);
      }

      else
      {
        uint64_t v63 = *(void *)(v19 + 8 * v62);
        swift_retain(v63);
      }

      uint64_t v64 = v62 - 3;
      if (__OFADD__(v62 - 4, 1LL)) {
        break;
      }
      uint64_t v65 = v19;
      os_log_type_t v66 = UsoEntity_common_UserEntity.nameIdentifiers.getter();
      uint64_t v67 = v66[2];
      uint64_t v4 = *(void *)(v61 + 16);
      uint64_t v19 = v4 + v67;
      if (__OFADD__(v4, v67)) {
        goto LABEL_106;
      }
      uint64_t v68 = v66;
      if (!swift_isUniquelyReferenced_nonNull_native(v61)
        || (uint64_t v69 = *(void *)(v61 + 24) >> 1, v69 < v19))
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v61 = v70;
        uint64_t v69 = *(void *)(v70 + 24) >> 1;
      }

      if (v68[2])
      {
        uint64_t v4 = *(void *)(v61 + 16);
        uint64_t v19 = v69 - v4;
        uint64_t v71 = type metadata accessor for UsoIdentifier(0LL);
        if (v19 < v67) {
          goto LABEL_108;
        }
        uint64_t v72 = *(void *)(v71 - 8);
        unint64_t v73 = (*(unsigned __int8 *)(v72 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
        uint64_t v74 = *(void *)(v72 + 72);
        unint64_t v75 = v61 + v73 + v74 * v4;
        char v76 = (char *)v68 + v73;
        uint64_t v77 = v74 * v67;
        unint64_t v78 = v75 + v77;
        unint64_t v79 = (unint64_t)&v76[v77];
        swift_arrayInitWithCopy(v75);
        if (v67)
        {
          uint64_t v81 = *(void *)(v61 + 16);
          BOOL v82 = __OFADD__(v81, v67);
          uint64_t v83 = v81 + v67;
          if (v82) {
            goto LABEL_109;
          }
          *(void *)(v61 + 16) = v83;
        }
      }

      else if (v67)
      {
        goto LABEL_107;
      }

      swift_bridgeObjectRelease(v68);
      swift_release(v63);
      ++v62;
      uint64_t v19 = v65;
      if (v64 == v60)
      {
        swift_bridgeObjectRelease(v65);
        v92[0] = v61;
        uint64_t v4 = v86;
        goto LABEL_115;
      }
    }

    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    if (v19 < 0) {
      uint64_t v84 = v19;
    }
    else {
      uint64_t v84 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v19);
  }

  swift_bridgeObjectRelease(v19);
LABEL_115:
  swift_bridgeObjectRelease(v19);
  swift_release(v4);
  return v92[0];
}

      OUTLINED_FUNCTION_21_18();
      if ((v107 & 0xC000000000000001LL) != 0) {
        v108 = (id)OUTLINED_FUNCTION_38_3();
      }
      else {
        v108 = *(id *)(v107 + 32);
      }
      v109 = v108;
      OUTLINED_FUNCTION_62();
LABEL_83:
      v112 = (void *)v145[5];
      v113 = *(void *)(v140 + 16);
      v114 = *(uint64_t (**)(uint64_t, uint64_t))(v113 + 8);
      swift_retain();
      v115 = v114(v32, v113);
      if (!v115)
      {
        v118 = v15;
        v119 = 0xE700000000000000LL;
        v120 = 0x4E574F4E4B4E55LL;
        goto LABEL_94;
      }

      v116 = INPreferredCallProviderGetBackingType(v115);
      switch((_DWORD)v116)
      {
        case 4:
          v117 = @"THIRD_PARTY_PROVIDER";
          break;
        case 3:
          v117 = @"FACETIME_PROVIDER";
          break;
        case 2:
          v117 = @"TELEPHONY_PROVIDER";
          break;
        default:
          v117 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v116));
          goto LABEL_93;
      }

      v121 = v117;
LABEL_93:
      v118 = v15;
      v122 = v117;
      v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v122);
      v119 = v123;

LABEL_94:
      v124 = (uint64_t)v138;
      OUTLINED_FUNCTION_1_34(v120, v119);
      v125 = OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_88(v124, 0LL, v126, v125);
      OUTLINED_FUNCTION_18_22();
      INPersonContainingIntent.isFirstContactRelatedOrMyself.getter(v32, v31);
      v128 = v127;
      OUTLINED_FUNCTION_60_6();
      v129 = v149;
      v130 = v150;
      OUTLINED_FUNCTION_56_5();
      v131 = v137;
      dispatch thunk of DeviceState.siriLocale.getter(v129, v130);
      OUTLINED_FUNCTION_57_4();
      static PhonePerson.make(phonePerson:options:locale:)(v109, v128 & 1, v131);
      v133 = v132;
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v131, v142);
      v134 = v139;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                            + *v112
                                                                                            + 1792))( v118,  v124,  v133,  v139,  v136,  v143,  v144);
      OUTLINED_FUNCTION_31_1(v118);
      OUTLINED_FUNCTION_22();

      OUTLINED_FUNCTION_76();
      outlined destroy of SpeakableString?(v124, &demangling cache variable for type metadata for SpeakableString?);
      v100 = v134;
LABEL_95:
      outlined destroy of SpeakableString?(v100, &demangling cache variable for type metadata for SpeakableString?);
LABEL_96:

      OUTLINED_FUNCTION_7_5();
      return;
    case 4uLL:
      uint64_t v53 = OUTLINED_FUNCTION_16_22();
      uint64_t v54 = _swiftEmptyArrayStorage;
      if (!v53) {
        goto LABEL_65;
      }
      uint64_t v32 = v53;
      v147 = (unint64_t)_swiftEmptyArrayStorage;
      OUTLINED_FUNCTION_71();
      if (v56)
      {
        OUTLINED_FUNCTION_8_1();
        uint64_t v57 = OUTLINED_FUNCTION_61_1();
        if (v57) {
          goto LABEL_31;
        }
      }

      else
      {
        uint64_t v57 = *(void *)(v55 + 16);
        OUTLINED_FUNCTION_8_1();
        if (v57)
        {
LABEL_31:
          OUTLINED_FUNCTION_18_22();
          if (v57 < 1)
          {
            __break(1u);
LABEL_79:
            unint64_t v79 = OUTLINED_FUNCTION_38_3();
            goto LABEL_51;
          }

          for (uint64_t i = 0LL; i != v57; ++i)
          {
            if ((v32 & 0xC000000000000001LL) != 0) {
              unint64_t v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v32);
            }
            else {
              unint64_t v59 = *(id *)(v32 + 8 * i + 32);
            }
            uint64_t v60 = v59;
            OUTLINED_FUNCTION_60_6();
            OUTLINED_FUNCTION_30_14(v148);
            OUTLINED_FUNCTION_57_4();
            static PhonePerson.make(phonePerson:options:locale:)(v60, 0, (uint64_t)v30);
            uint64_t v62 = v61;
            (*(void (**)(char *, uint64_t))(v141 + 8))(v30, v142);

            if (v62)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
              uint64_t v65 = *(void *)((char *)&dword_10 + (v147 & 0xFFFFFFFFFFFFFF8LL));
              uint64_t v64 = *(void *)((char *)&dword_18 + (v147 & 0xFFFFFFFFFFFFFF8LL));
              if (v65 >= v64 >> 1) {
                OUTLINED_FUNCTION_3_25(v65 + 1, v64);
              }
              os_log_type_t v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v62);
              specialized Array._endMutation()(v66, v67, v68, v69);
            }
          }

          OUTLINED_FUNCTION_39();
          uint64_t v54 = (void *)v147;
LABEL_64:
          OUTLINED_FUNCTION_39();
LABEL_65:
          type metadata accessor for PhonePersonList();
          v102 = PhonePersonList.__allocating_init(list:)((uint64_t)v54);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                            + *(void *)v145[5]
                                                            + 1632))( v102,  v143,  v144);
          OUTLINED_FUNCTION_22();
          goto LABEL_96;
        }
      }

      OUTLINED_FUNCTION_39();
      uint64_t v54 = _swiftEmptyArrayStorage;
      goto LABEL_64;
    case 5uLL:
      OUTLINED_FUNCTION_8_26();
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v70 + 1856))(v143, v144);
      goto LABEL_18;
    case 6uLL:
      OUTLINED_FUNCTION_8_26();
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v71 + 1696))(v143, v144);
      goto LABEL_18;
    case 7uLL:
      OUTLINED_FUNCTION_8_26();
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v72 + 1824))(v143, v144);
      goto LABEL_18;
    default:
      if ((static ContactsSlotTemplating.isMissingMeCardCase(intent:)() & 1) != 0)
      {
        OUTLINED_FUNCTION_8_26();
        (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v43 + 1760))( v143,  v144);
        goto LABEL_18;
      }

      if (v146)
      {
        BOOL v82 = v146;
        uint64_t v83 = INPerson.nameLowercasedWithFirstUppercased.getter();
      }

      else
      {
        uint64_t v83 = 0LL;
      }

      OUTLINED_FUNCTION_18_22();
      OUTLINED_FUNCTION_60_6();
      uint64_t v84 = v149;
      uint64_t v85 = v150;
      OUTLINED_FUNCTION_56_5();
      dispatch thunk of DeviceState.siriLocale.getter(v84, v85);
      OUTLINED_FUNCTION_57_4();
      static PhonePerson.make(phonePerson:options:locale:)(v83, 0, (uint64_t)v30);
      v140 = v86;

      OUTLINED_FUNCTION_59_5();
      unint64_t v87 = v145;
      uint64_t v88 = v145[11];
      uint64_t v89 = v145[12];
      __swift_project_boxed_opaque_existential_1(v145 + 8, v88);
      OUTLINED_FUNCTION_30_14(v87);
      uint64_t v90 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v89 + 16))(v136, v30, v88, v89);
      unsigned __int8 v92 = v91;
      OUTLINED_FUNCTION_59_5();
      if (v92)
      {
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_1_34(v90, v92);
        unsigned __int8 v93 = OUTLINED_FUNCTION_26_0();
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0LL, 1LL, v93);
        OUTLINED_FUNCTION_62();
      }

      else
      {
        uint64_t v94 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1((uint64_t)v24, v95, v96, v94);
      }

      v97 = (void *)v145[5];
      v98 = v140;
      swift_retain();
      v99 = App.isFirstParty()();
      (*(void (**)(uint64_t, char *, Swift::Bool, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                             + *v97
                                                                             + 1728))( v98,  v24,  v99,  v143,  v144);
      OUTLINED_FUNCTION_31_1(v98);
      v100 = (uint64_t)v24;
      goto LABEL_95;
  }

            if ((v81 & 1) != 0) {
              goto LABEL_128;
            }
            uint64_t v89 = &v56[16 * v58];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            uint64_t v69 = __OFSUB__(v90, v91);
            unsigned __int8 v92 = v90 - v91;
            if (v69) {
              goto LABEL_130;
            }
            if (v92 < v80) {
              goto LABEL_91;
            }
LABEL_82:
            v97 = v58 - 1;
            if (v58 - 1 >= v55)
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
              goto LABEL_133;
            }

            if (!v8) {
              goto LABEL_148;
            }
            v98 = v9;
            v99 = &v56[16 * v97];
            v100 = *(void *)v99;
            v101 = &v56[16 * v58];
            v102 = *((void *)v101 + 1);
            specialized _merge<A>(low:mid:high:buffer:by:)( (char *)(v8 + 8LL * *(void *)v99),  (id *)(v8 + 8LL * *(void *)v101),  v8 + 8 * v102,  v131);
            if (v132)
            {
              v105 = v128;
LABEL_98:
              v106 = swift_bridgeObjectRelease();
              if (v105 >= -1)
              {
                *(void *)((char *)&dword_10 + (v134 & 0xFFFFFFFFFFFFF8LL)) = 0LL;
                specialized Array._endMutation()(v106, v107, v108, v109);
                swift_bridgeObjectRelease();
                return;
              }

  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v84 + 8))();
}

uint64_t outlined init with copy of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  OUTLINED_FUNCTION_2();
}

uint64_t outlined destroy of Any?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_49(uint64_t a1, unint64_t *a2, void *a3)
{
  return type metadata accessor for CNContactStore(0LL, a2, a3);
}

void OUTLINED_FUNCTION_79()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return swift_bridgeObjectRetain(v0);
}

void OUTLINED_FUNCTION_29()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_55(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_5(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t OUTLINED_FUNCTION_17_0(uint64_t a1)
{
  return swift_arrayDestroy(a1, 1LL);
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return type metadata accessor for PhoneError(0LL);
}

uint64_t OUTLINED_FUNCTION_41()
{
  return static os_log_type_t.debug.getter();
}

uint64_t OUTLINED_FUNCTION_48()
{
  return swift_retain_n(v0, 2LL);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_15_0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_0()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 48);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 56) = v0;
  return swift_task_dealloc(v5);
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_132(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_79_2@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_25()
{
  return swift_task_dealloc(v0);
}

uint64_t OUTLINED_FUNCTION_79_3(void *a1)
{
  return dispatch thunk of DeviceState.isAppleTV.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_79_4()
{
  return *(void *)(v0 + 496);
}

uint64_t OUTLINED_FUNCTION_79_5@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, void)@<X8>)
{
  return a3(a1, a2, *(void *)(v3 - 328));
}

uint64_t OUTLINED_FUNCTION_21(uint64_t a1, uint64_t a2)
{
  return swift_storeEnumTagMultiPayload(a1, a2, 1LL);
}

  ;
}

unint64_t OUTLINED_FUNCTION_79_7()
{
  return 0xD000000000000014LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

  ;
}

void OUTLINED_FUNCTION_116_0(char a1@<W8>)
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000LL;
  *(void *)(v3 + 216) = v2;
  *(_BYTE *)(v3 + 192) = a1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_79_10()
{
  return dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
}

uint64_t OUTLINED_FUNCTION_79_11()
{
  return ParameterResolutionRecord.parameter.getter(v0);
}

uint64_t OUTLINED_FUNCTION_79_12(void *a1)
{
  return v1;
}

void OUTLINED_FUNCTION_79_13()
{
}

void OUTLINED_FUNCTION_79_14(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_79_15(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

void *OUTLINED_FUNCTION_79_16(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_79_17()
{
  return static ExecuteResponse.complete<A>(next:)(v0);
}

uint64_t OUTLINED_FUNCTION_79_18()
{
  return swift_storeEnumTagMultiPayload(v0, v1, 4LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_12_0(uint64_t a1)
{
  return swift_task_alloc((*(void *)(*(void *)(a1 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

void *OUTLINED_FUNCTION_51()
{
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return type metadata accessor for Logger(0LL);
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return swift_task_dealloc(v0);
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return swift_task_switch();
}

_WORD *OUTLINED_FUNCTION_47(_WORD *result)
{
  void *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return swift_getErrorValue(v0, v1 - 104, v1 - 128);
}

BOOL OUTLINED_FUNCTION_93(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

  ;
}

uint64_t OUTLINED_FUNCTION_14(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, v2);
}

  ;
}

void *OUTLINED_FUNCTION_42(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_37()
{
  return swift_release(*(void *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_47_0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL,  a2,  a3);
}

void OUTLINED_FUNCTION_66_2(uint64_t a1)
{
}

void OUTLINED_FUNCTION_3(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return swift_release(v0);
}

unint64_t OUTLINED_FUNCTION_68()
{
  return type metadata accessor for INPerson();
}

uint64_t OUTLINED_FUNCTION_66_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

  ;
}

double OUTLINED_FUNCTION_66_4()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

void OUTLINED_FUNCTION_66_5(void *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_7_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return _assertionFailure(_:_:file:line:flags:)( a1,  a2,  a3,  a4 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL,  v6,  a6,  42LL,  2LL);
}

uint64_t OUTLINED_FUNCTION_19(uint64_t a1)
{
  return String.init<A>(describing:)(v1, a1);
}

uint64_t OUTLINED_FUNCTION_66_6(uint64_t a1)
{
  return swift_bridgeObjectRetain(a1);
}

uint64_t OUTLINED_FUNCTION_66_7()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_66_8()
{
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[102];
  v0[149] = v1;
  return default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(v2, v3);
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return swift_getAssociatedTypeWitness(255LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_66_10()
{
  return type metadata accessor for PhonePersonList();
}

uint64_t OUTLINED_FUNCTION_66_11(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a2, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_66_13()
{
  return outlined destroy of EmergencyCountdownOutputBuilder(v0 + 16);
}

void OUTLINED_FUNCTION_86()
{
}

void OUTLINED_FUNCTION_66_14()
{
}

uint64_t OUTLINED_FUNCTION_66_15@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x656369766564LL;
  v2[17] = 0xE600000000000000LL;
  return 0LL;
}

void *OUTLINED_FUNCTION_5_0(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_66_16()
{
  return RREntity.usoEntity.getter();
}

uint64_t OUTLINED_FUNCTION_66_17()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_66_19(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return AceServiceInvokerAsync.submitWithBargeInDetection<A>(_:)(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_66_20@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(v3 - 72) = a2;
  return KeyedEncodingContainer.encode(_:forKey:)(a1, v3 - 72, v2);
}

void OUTLINED_FUNCTION_66_21()
{
}

uint64_t OUTLINED_FUNCTION_66_22()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_66_23@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

void *UsoEntity_common_UserEntity.nameIdentifiers.getter()
{
  double result = (void *)dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)( 0x73656D616ELL,  0xE500000000000000LL);
  if (!result) {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers __swiftcall CallControlUsoIdentifiers.init(usoIdentifiers:)( Swift::OpaquePointer usoIdentifiers)
{
  rawValue = (int *)usoIdentifiers._rawValue;
  uint64_t v79 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v76 = *(void *)(v79 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v1);
  OUTLINED_FUNCTION_10_1();
  uint64_t v74 = v2;
  __chkstk_darwin(v3);
  unint64_t v78 = (char *)&v63 - v4;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
  v84.namespaceToIdentifierMap._rawValue = (void *)Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v63,  &protocol witness table for String);
  if (one-time initialization token for identifierTypeRegistry != -1) {
LABEL_44:
  }
    swift_once( &one-time initialization token for identifierTypeRegistry,  one-time initialization function for identifierTypeRegistry);
  uint64_t v5 = static CallControlUsoIdentifiers.identifierTypeRegistry;
  uint64_t v67 = *(void *)((char *)&dword_10 + (void)static CallControlUsoIdentifiers.identifierTypeRegistry);
  if (v67)
  {
    uint64_t v6 = *((void *)rawValue + 2);
    os_log_type_t v66 = static CallControlUsoIdentifiers.identifierTypeRegistry + 8;
    swift_bridgeObjectRetain(static CallControlUsoIdentifiers.identifierTypeRegistry);
    unint64_t v7 = 0LL;
    uint64_t v70 = 0LL;
    uint64_t v65 = v6;
    uint64_t v64 = v5;
    uint64_t v8 = v74;
    while (1)
    {
      if (v7 >= *((void *)v5 + 2))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }

      unint64_t v69 = v7;
      uint64_t v9 = *(void *)&v66[4 * v7 + 2];
      uint64_t v10 = *(uint64_t (**)(void))(v9 + 8);
      __int128 v73 = *(_OWORD *)&v66[4 * v7];
      uint64_t v11 = v73;
      uint64_t v77 = v9;
      uint64_t v72 = v10(v73);
      uint64_t v71 = v12;
      if (v6)
      {
        unint64_t v13 = (char *)rawValue
            + ((*(unsigned __int8 *)(v76 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
        uint64_t v75 = *(void *)(v76 + 72);
        unint64_t v14 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
        swift_bridgeObjectRetain(rawValue);
        uint64_t v15 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v17 = v78;
          uint64_t v16 = v79;
          v14(v78, v13, v79);
          v14((char *)v8, v17, v16);
          uint64_t v18 = type metadata accessor for Optional(0LL, v11);
          uint64_t v19 = *(void *)(v18 - 8);
          __chkstk_darwin(v18);
          uint64_t v21 = (char *)&v63 - v20;
          UsoVocIdentifier.init(usoIdentifier:)(v8, v11, v77, (uint64_t)&v63 - v20);
          if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1LL, v11) == 1)
          {
            (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
            memset(v82, 0, sizeof(v82));
          }

          else
          {
            *(_OWORD *)&v82[24] = v73;
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v82);
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))( boxed_opaque_existential_1,  v21,  v11);
          }

          (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v79);
          if (*(void *)&v82[24])
          {
            outlined init with take of AppSelectionSignalComponent((__int128 *)v82, (uint64_t)v83);
            outlined init with take of AppSelectionSignalComponent(v83, (uint64_t)v82);
            if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
            {
              OUTLINED_FUNCTION_18_57();
              uint64_t v15 = v24;
            }

            unint64_t v23 = v15[2];
            if (v23 >= v15[3] >> 1)
            {
              OUTLINED_FUNCTION_18_57();
              uint64_t v15 = v25;
            }

            v15[2] = v23 + 1;
            outlined init with take of AppSelectionSignalComponent((__int128 *)v82, (uint64_t)&v15[5 * v23 + 4]);
          }

          else
          {
            outlined destroy of SpeakableString?( (uint64_t)v82,  &demangling cache variable for type metadata for UsoVocIdentifier?);
          }

          v13 += v75;
          --v6;
        }

        while (v6);
        OUTLINED_FUNCTION_26_50();
        uint64_t v5 = v64;
      }

      else
      {
        uint64_t v15 = _swiftEmptyArrayStorage;
      }

      uint64_t v26 = v70;
      uint64_t v27 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay27PhoneCallFlowDelegatePlugin16UsoVocIdentifier_pG_SSs5NeverOTg504_s27defg17Plugin0B21Controli42IdentifiersV03usoH0ACSay12SiriOntology0G10k14VG_tcfcSSAA0g3J61L0_pcfu0_33_708b1cfa6b73d3a2bcd73f98c7ddf494AaI_pSSTf3nnnpk_nTf1cn_n((uint64_t)v15);
      uint64_t v70 = v26;
      swift_bridgeObjectRelease(v15);
      uint64_t v28 = Set.init(minimumCapacity:)(v27[2], &type metadata for String, &protocol witness table for String);
      *(void *)BOOL v82 = v28;
      uint64_t v29 = v27[2];
      if (v29)
      {
        unint64_t v30 = v27 + 5;
        do
        {
          swift_bridgeObjectRetain(*v30);
          specialized Set._Variant.insert(_:)();
          swift_bridgeObjectRelease(*((void *)&v83[0] + 1));
          v30 += 2;
          --v29;
        }

        while (v29);
        swift_bridgeObjectRelease(v27);
        uint64_t v31 = *(void *)v82;
      }

      else
      {
        uint64_t v31 = v28;
        swift_bridgeObjectRelease(v27);
      }

      uint64_t v32 = v84.namespaceToIdentifierMap._rawValue;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v84.namespaceToIdentifierMap._rawValue);
      *(void *)&v83[0] = v32;
      v84.namespaceToIdentifierMap._rawValue = (void *)0x8000000000000000LL;
      uint64_t v34 = v71;
      unint64_t v35 = specialized __RawDictionaryStorage.find<A>(_:)(v72, v71);
      uint64_t v37 = v32[2];
      BOOL v38 = (v36 & 1) == 0;
      Swift::Int v39 = v37 + v38;
      if (__OFADD__(v37, v38)) {
        goto LABEL_42;
      }
      unint64_t v40 = v35;
      char v41 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Set<String>>);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v39))
      {
        unint64_t v42 = specialized __RawDictionaryStorage.find<A>(_:)(v72, v34);
        if ((v41 & 1) != (v43 & 1))
        {
          result.namespaceToIdentifierMap._rawValue = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          __break(1u);
          return result;
        }

        unint64_t v40 = v42;
      }

      unint64_t v44 = *(void **)&v83[0];
      if ((v41 & 1) != 0)
      {
        uint64_t v45 = *(void *)(*(void *)&v83[0] + 56LL);
        swift_bridgeObjectRelease(*(void *)(v45 + 8 * v40));
        *(void *)(v45 + 8 * v40) = v31;
        uint64_t v34 = v71;
      }

      else
      {
        *(void *)(*(void *)&v83[0] + 8 * (v40 >> 6) + 64) |= 1LL << v40;
        uint64_t v46 = (void *)(v44[6] + 16 * v40);
        *uint64_t v46 = v72;
        v46[1] = v34;
        *(void *)(v44[7] + 8 * v40) = v31;
        uint64_t v47 = v44[2];
        BOOL v48 = __OFADD__(v47, 1LL);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_43;
        }
        v44[2] = v49;
        swift_bridgeObjectRetain(v34);
      }

      unint64_t v7 = v69 + 1;
      v84.namespaceToIdentifierMap._rawValue = v44;
      swift_bridgeObjectRelease(v34);
      OUTLINED_FUNCTION_39();
      uint64_t v6 = v65;
      if (v7 == v67)
      {
        OUTLINED_FUNCTION_26_50();
        uint64_t v50 = v5;
        goto LABEL_36;
      }
    }
  }

  uint64_t v50 = rawValue;
LABEL_36:
  swift_bridgeObjectRelease(v50);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v51 = type metadata accessor for Logger(0LL);
  uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)static Logger.siriPhone);
  uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
  os_log_type_t v54 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v56 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v83[0] = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    OUTLINED_FUNCTION_22_0((uint64_t)&v84, (uint64_t)v82);
    uint64_t v57 = v84.namespaceToIdentifierMap._rawValue;
    uint64_t v58 = swift_bridgeObjectRetain(v84.namespaceToIdentifierMap._rawValue);
    uint64_t v59 = Dictionary.description.getter(v58, &type metadata for String, v63, &protocol witness table for String);
    unint64_t v61 = v60;
    swift_bridgeObjectRelease(v57);
    uint64_t v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, (uint64_t *)v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v55 + 4, v55 + 12);
    swift_bridgeObjectRelease(v61);
    _os_log_impl(&dword_0, v53, v54, "#CallControlUsoIdentifiers %s", v55, 0xCu);
    swift_arrayDestroy(v56, 1LL);
    OUTLINED_FUNCTION_0_2(v56);
    OUTLINED_FUNCTION_0_2((uint64_t)v55);
  }

  OUTLINED_FUNCTION_22_0((uint64_t)&v84, (uint64_t)v83);
  return v84;
}

uint64_t static CallControlUsoIdentifiers.PhoneSetting.namespace.getter()
{
  return 0x746553656E6F6870LL;
}

unint64_t static CallControlUsoIdentifiers.FloatSettingName.namespace.getter()
{
  return 0xD000000000000010LL;
}

uint64_t static Transformer<>.mapIdentifiersToTarget(usoIdentifiers:)(uint64_t a1)
{
  if ((CallControlUsoIdentifiers.hasAnyVolumeIdentifier.getter() & 1) == 0)
  {
    if ((CallControlUsoIdentifiers.hasMuteCallIdentifier.getter(a1) & 1) != 0)
    {
      int v2 = 256;
LABEL_7:
      int v3 = 2;
      return v2 | v3;
    }

    if ((CallControlUsoIdentifiers.hasUnmuteCallIdentifier.getter(a1) & 1) != 0)
    {
      int v2 = 0;
      goto LABEL_7;
    }

    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier>);
    uint64_t inited = swift_initStackObject(v4, v78);
    *(_OWORD *)(inited + 16) = xmmword_31D870;
    *(void *)(inited + 56) = &type metadata for CallControlUsoIdentifiers.BoolSettingName;
    *(void *)(inited + 64) = &protocol witness table for CallControlUsoIdentifiers.BoolSettingName;
    uint64_t v6 = __swift_project_boxed_opaque_existential_1( (void *)(inited + 32),  (uint64_t)&type metadata for CallControlUsoIdentifiers.BoolSettingName);
    uint64_t DynamicType = swift_getDynamicType(v6, &type metadata for CallControlUsoIdentifiers.BoolSettingName, 1LL);
    uint64_t v8 = *(void *)(inited + 64);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain(inited);
    uint64_t v10 = v9(DynamicType, v8);
    uint64_t v12 = v11;
    if (*(void *)(a1 + 16) && (unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(v10, v11), (v14 & 1) != 0))
    {
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRelease(v12);
      uint64_t v16 = *(void *)(inited + 56);
      uint64_t v17 = *(void *)(inited + 64);
      __swift_project_boxed_opaque_existential_1((void *)(inited + 32), v16);
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
      uint64_t v20 = v19;
      specialized Set.contains(_:)(v18, v19, v15);
      char v22 = v21;
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v15);
      if ((v22 & 1) != 0)
      {
        int v3 = 2;
LABEL_29:
        swift_setDeallocating(inited);
        specialized _ContiguousArrayStorage.__deallocating_deinit();
        int v2 = 0;
        return v2 | v3;
      }
    }

    else
    {
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v12);
    }

    swift_setDeallocating(inited);
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    uint64_t inited = swift_initStackObject(v4, v77);
    *(_OWORD *)(inited + 16) = xmmword_31D870;
    *(_BYTE *)(inited + 32) = 8;
    *(void *)(inited + 56) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
    *(void *)(inited + 64) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
    unint64_t v23 = __swift_project_boxed_opaque_existential_1( (void *)(inited + 32),  (uint64_t)&type metadata for CallControlUsoIdentifiers.PhoneSetting);
    uint64_t v24 = swift_getDynamicType(v23, &type metadata for CallControlUsoIdentifiers.PhoneSetting, 1LL);
    uint64_t v25 = *(void *)(inited + 64);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    swift_bridgeObjectRetain(inited);
    uint64_t v27 = v26(v24, v25);
    uint64_t v29 = v28;
    if (*(void *)(a1 + 16) && (unint64_t v30 = specialized __RawDictionaryStorage.find<A>(_:)(v27, v28), (v31 & 1) != 0))
    {
      uint64_t v32 = *(void *)(*(void *)(a1 + 56) + 8 * v30);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease(v29);
      uint64_t v33 = *(void *)(inited + 56);
      uint64_t v34 = *(void *)(inited + 64);
      __swift_project_boxed_opaque_existential_1((void *)(inited + 32), v33);
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
      uint64_t v37 = v36;
      specialized Set.contains(_:)(v35, v36, v32);
      char v39 = v38;
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v32);
      if ((v39 & 1) != 0)
      {
        int v3 = 3;
        goto LABEL_29;
      }
    }

    else
    {
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v29);
    }

    swift_setDeallocating(inited);
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    uint64_t inited = swift_initStackObject(v4, v76);
    *(_OWORD *)(inited + 16) = xmmword_31D870;
    *(_BYTE *)(inited + 32) = 0;
    *(void *)(inited + 56) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
    *(void *)(inited + 64) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
    unint64_t v40 = __swift_project_boxed_opaque_existential_1( (void *)(inited + 32),  (uint64_t)&type metadata for CallControlUsoIdentifiers.PhoneSetting);
    uint64_t v41 = swift_getDynamicType(v40, &type metadata for CallControlUsoIdentifiers.PhoneSetting, 1LL);
    uint64_t v42 = *(void *)(inited + 64);
    char v43 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8);
    swift_bridgeObjectRetain(inited);
    uint64_t v44 = v43(v41, v42);
    uint64_t v46 = v45;
    if (*(void *)(a1 + 16) && (unint64_t v47 = specialized __RawDictionaryStorage.find<A>(_:)(v44, v45), (v48 & 1) != 0))
    {
      uint64_t v49 = *(void *)(*(void *)(a1 + 56) + 8 * v47);
      swift_bridgeObjectRetain(v49);
      swift_bridgeObjectRelease(v46);
      uint64_t v50 = *(void *)(inited + 56);
      uint64_t v51 = *(void *)(inited + 64);
      __swift_project_boxed_opaque_existential_1((void *)(inited + 32), v50);
      uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(v50, v51);
      uint64_t v54 = v53;
      specialized Set.contains(_:)(v52, v53, v49);
      char v56 = v55;
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(v49);
      if ((v56 & 1) != 0)
      {
        int v3 = 0;
        goto LABEL_29;
      }
    }

    else
    {
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v46);
    }

    swift_setDeallocating(inited);
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    uint64_t inited = swift_initStackObject(v4, v75);
    *(_OWORD *)(inited + 16) = xmmword_31D870;
    *(_BYTE *)(inited + 32) = 5;
    *(void *)(inited + 56) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
    *(void *)(inited + 64) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
    uint64_t v57 = __swift_project_boxed_opaque_existential_1( (void *)(inited + 32),  (uint64_t)&type metadata for CallControlUsoIdentifiers.PhoneSetting);
    uint64_t v58 = swift_getDynamicType(v57, &type metadata for CallControlUsoIdentifiers.PhoneSetting, 1LL);
    uint64_t v59 = *(void *)(inited + 64);
    unint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8);
    swift_bridgeObjectRetain(inited);
    uint64_t v61 = v60(v58, v59);
    uint64_t v63 = v62;
    if (*(void *)(a1 + 16) && (unint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v61, v62), (v65 & 1) != 0))
    {
      uint64_t v66 = *(void *)(*(void *)(a1 + 56) + 8 * v64);
      swift_bridgeObjectRetain(v66);
      swift_bridgeObjectRelease(v63);
      uint64_t v67 = *(void *)(inited + 56);
      uint64_t v68 = *(void *)(inited + 64);
      __swift_project_boxed_opaque_existential_1((void *)(inited + 32), v67);
      uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v67, v68);
      uint64_t v71 = v70;
      specialized Set.contains(_:)(v69, v70, v66);
      char v73 = v72;
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v71);
      swift_bridgeObjectRelease(v66);
      if ((v73 & 1) != 0)
      {
        int v3 = 1;
        goto LABEL_29;
      }
    }

    else
    {
      swift_bridgeObjectRelease(inited);
      swift_bridgeObjectRelease(v63);
    }

    int v3 = 5;
    goto LABEL_29;
  }

  int v2 = 0;
  int v3 = 4;
  return v2 | v3;
}

uint64_t CallControlUsoIdentifiers.hasAnyVolumeIdentifier.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier>);
  uint64_t v3 = OUTLINED_FUNCTION_30_39(v1, v2);
  *(_OWORD *)(v3 + 16) = xmmword_323F80;
  *(void *)(v3 + 56) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(v3 + 64) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  *(_BYTE *)(v3 + 32) = 1;
  *(void *)(v3 + 96) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(v3 + 104) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  *(_BYTE *)(v3 + 72) = 4;
  *(void *)(v3 + 136) = &type metadata for CallControlUsoIdentifiers.FloatSettingName;
  *(void *)(v3 + 144) = &protocol witness table for CallControlUsoIdentifiers.FloatSettingName;
  *(_BYTE *)(v3 + 112) = 0;
  *(void *)(v3 + 176) = &type metadata for CallControlUsoIdentifiers.FloatSettingName;
  *(void *)(v3 + 184) = &protocol witness table for CallControlUsoIdentifiers.FloatSettingName;
  *(_BYTE *)(v3 + 152) = 1;
  *(void *)(v3 + 216) = &type metadata for CallControlUsoIdentifiers.FloatSettingName;
  *(void *)(v3 + 224) = &protocol witness table for CallControlUsoIdentifiers.FloatSettingName;
  *(_BYTE *)(v3 + 192) = 2;
  swift_bridgeObjectRetain(v3);
  for (uint64_t i = 0LL; i != 200; i += 40LL)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_90();
    OUTLINED_FUNCTION_29_39(v5, *(void *)(v3 + i + 64));
    OUTLINED_FUNCTION_20_55();
    if (v7 && (unint64_t v8 = OUTLINED_FUNCTION_7_94(v6), (v9 & 1) != 0))
    {
      OUTLINED_FUNCTION_2_78(v8);
      OUTLINED_FUNCTION_4_1();
      uint64_t v10 = OUTLINED_FUNCTION_10_67();
      OUTLINED_FUNCTION_5_88(v10, v11);
      char v13 = v12;
      OUTLINED_FUNCTION_62();
      swift_bridgeObjectRelease(v0);
      if ((v13 & 1) != 0)
      {
        uint64_t v14 = 1LL;
        goto LABEL_9;
      }
    }

    else
    {
      OUTLINED_FUNCTION_4_1();
    }
  }

  uint64_t v14 = 0LL;
LABEL_9:
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_31_40();
  OUTLINED_FUNCTION_17_56();
  return v14;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  void *result = *a2;
  return result;
}

uint64_t protocol witness for UsoVocIdentifier.rawValue.getter in conformance CallControlUsoIdentifiers.PhoneSetting()
{
  return CallControlUsoIdentifiers.PhoneSetting.rawValue.getter(*v0);
}

uint64_t CallControlUsoIdentifiers.PhoneSetting.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_11164 + 4 * a4[a1]))( 0x6172656D6163LL,  0xE600000000000000LL);
}

uint64_t sub_11164()
{
  return 0x6C6F765F6C6C6163LL;
}

uint64_t sub_11184()
{
  return 0x5F6C6172656E6567LL;
}

uint64_t sub_111C8()
{
  return 1684828008LL;
}

uint64_t sub_111D8()
{
  return 0x74756D5F666C6573LL;
}

uint64_t sub_111F4()
{
  return 0x6D6E755F666C6573LL;
}

uint64_t sub_11218()
{
  return 0x7072656B61657073LL;
}

uint64_t protocol witness for UsoVocIdentifier.rawValue.getter in conformance CallControlUsoIdentifiers.FloatSettingName()
{
  return CallControlUsoIdentifiers.FloatSettingName.rawValue.getter(*v0);
}

uint64_t CallControlUsoIdentifiers.FloatSettingName.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x707954616964656DLL;
  }
  if (a1 == 1) {
    return 0x6563696F76LL;
  }
  return 0x656D756C6F76LL;
}

uint64_t CallControlUsoIdentifiers.hasMuteCallIdentifier.getter(uint64_t a1)
{
  return CallControlUsoIdentifiers.hasMuteCallIdentifier.getter(a1, 6, 2);
}

uint64_t CallControlUsoIdentifiers.hasMuteCallIdentifier.getter(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoVocIdentifier>);
  uint64_t inited = swift_initStackObject(v6, v24);
  *(_BYTE *)(inited + 32) = a2;
  uint64_t v8 = inited + 32;
  *(_OWORD *)(inited + 16) = xmmword_31D880;
  *(void *)(inited + 56) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(inited + 64) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(inited + 96) = &type metadata for CallControlUsoIdentifiers.PhoneSetting;
  *(void *)(inited + 104) = &protocol witness table for CallControlUsoIdentifiers.PhoneSetting;
  *(_BYTE *)(inited + 72) = a3;
  uint64_t v23 = inited;
  swift_bridgeObjectRetain(inited);
  int v9 = 0;
  uint64_t v10 = 0LL;
  do
  {
    while (1)
    {
      int v11 = v9;
      uint64_t v12 = v8 + 40 * v10;
      uint64_t v13 = OUTLINED_FUNCTION_0_90();
      OUTLINED_FUNCTION_29_39(v13, *(void *)(v12 + 32));
      OUTLINED_FUNCTION_20_55();
      if (!v15) {
        break;
      }
      unint64_t v16 = OUTLINED_FUNCTION_7_94(v14);
      if ((v17 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_2_78(v16);
      OUTLINED_FUNCTION_4_1();
      uint64_t v18 = OUTLINED_FUNCTION_10_67();
      OUTLINED_FUNCTION_5_88(v18, v19);
      int v21 = v20;
      OUTLINED_FUNCTION_62();
      swift_bridgeObjectRelease(v3);
      uint64_t v10 = 1LL;
      int v9 = 1;
      if (((v21 | v11) & 1) != 0) {
        goto LABEL_8;
      }
    }

    OUTLINED_FUNCTION_4_1();
    int v9 = 1;
    uint64_t v10 = 1LL;
  }

  while ((v11 & 1) == 0);
  LOBYTE(v21) = 0;
LABEL_8:
  OUTLINED_FUNCTION_62();
  swift_setDeallocating(v23);
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  return v21 & 1;
}

uint64_t CallControlUsoIdentifiers.hasUnmuteCallIdentifier.getter(uint64_t a1)
{
  return CallControlUsoIdentifiers.hasMuteCallIdentifier.getter(a1, 7, 3);
}

uint64_t static Transformer<>.mapTaskToVerb(usoTask:isTargetWithNegation:)(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for UsoTask_enable_common_Setting(0LL);
  if (swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v3, 0LL))
  {
    swift_release(v26);
    uint64_t v4 = a2 & 1;
  }

  else
  {
    uint64_t v5 = type metadata accessor for UsoTask_disable_common_Setting(0LL);
    if (swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v5, 0LL))
    {
      swift_release(v26);
      uint64_t v4 = (a2 & 1) == 0;
    }

    else
    {
      uint64_t v6 = type metadata accessor for UsoTask_toggle_common_Setting(0LL);
      if (swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v6, 0LL))
      {
        swift_release(v26);
        uint64_t v4 = 2LL;
      }

      else
      {
        uint64_t v7 = type metadata accessor for UsoTask_set_common_Setting(0LL);
        if (swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v7, 0LL)
          || (uint64_t v8 = type metadata accessor for UsoTask_increaseBy_common_Setting(0LL),
              swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v8, 0LL))
          || (uint64_t v9 = type metadata accessor for UsoTask_decreaseBy_common_Setting(0LL),
              swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v9, 0LL))
          || (uint64_t v10 = type metadata accessor for UsoTask_setNumber_common_Setting(0LL),
              swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v10, 0LL)))
        {
          swift_release(v26);
          uint64_t v4 = 5LL;
        }

        else
        {
          uint64_t v12 = type metadata accessor for UsoTask_summarise_common_Setting(0LL);
          if (swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v12, 0LL)
            || (uint64_t v13 = type metadata accessor for UsoTask_checkExistence_common_Setting(0LL),
                swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v13, 0LL))
            || (uint64_t v14 = type metadata accessor for UsoTask_noVerb_common_Setting(0LL),
                swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, v14, 0LL)))
          {
            swift_release(v26);
            uint64_t v4 = 6LL;
          }

          else
          {
            if (one-time initialization token for siriPhone != -1) {
              swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
            }
            uint64_t v15 = type metadata accessor for Logger(0LL);
            uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
            char v17 = (os_log_s *)Logger.logObject.getter(v16);
            os_log_type_t v18 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v17, v18))
            {
              uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v25 = swift_slowAlloc(32LL, -1LL);
              uint64_t v28 = v25;
              *(_DWORD *)uint64_t v19 = 136315138;
              if (one-time initialization token for logPrefix != -1) {
                swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
              }
              uint64_t v20 = static Transformer<>.logPrefix;
              uint64_t v21 = unk_477AB0;
              uint64_t v22 = qword_477AB8;
              uint64_t v23 = (void *)unk_477AC0;
              uint64_t v26 = 0LL;
              unint64_t v27 = 0xE000000000000000LL;
              swift_bridgeObjectRetain(unk_477AC0);
              swift_bridgeObjectRetain(v21);
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v20, v21, v22, v23);
              swift_bridgeObjectRelease(v23);
              swift_bridgeObjectRelease(v21);
              unint64_t v24 = v27;
              uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v28);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v19 + 4, v19 + 12);
              swift_bridgeObjectRelease(v24);
              _os_log_impl(&dword_0, v17, v18, "#%s unsupported UsoTask", v19, 0xCu);
              swift_arrayDestroy(v25, 1LL);
              swift_slowDealloc(v25, -1LL, -1LL);
              swift_slowDealloc(v19, -1LL, -1LL);
            }

            uint64_t v4 = 7LL;
          }
        }
      }
    }
  }

  __swift_destroy_boxed_opaque_existential_1(v29);
  return v4;
}

uint64_t type metadata accessor for PhoneCallControlNLIntent()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin24PhoneCallControlNLIntent);
}

_BYTE *PhoneCallControlNLIntent.init(verb:target:)(char a1, char a2)
{
  v2[18] = 11;
  v2[16] = a1;
  v2[17] = a2;
  return v2;
}

unint64_t PhoneCallControlNLIntent.description.getter()
{
  unint64_t v9 = 0xD00000000000001FLL;
  unint64_t v10 = 0x80000000003520E0LL;
  v1._uint64_t countAndFlagsBits = PhoneCallControlNLIntent.Verb.description.getter(*(_BYTE *)(v0 + 16));
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._uint64_t countAndFlagsBits = 0x746567726174202CLL;
  v3._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v3);
  char v8 = *(_BYTE *)(v0 + 17);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallControlNLIntent.Target?);
  v5._uint64_t countAndFlagsBits = String.init<A>(describing:)(&v8, v4);
  String.append(_:)(v5);
  OUTLINED_FUNCTION_39();
  v6._uint64_t countAndFlagsBits = 41LL;
  v6._object = (void *)0xE100000000000000LL;
  String.append(_:)(v6);
  return v9;
}

uint64_t PhoneCallControlNLIntent.Verb.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_15_81 + 4 * byte_33F006[a1]))( 0x656C62616E65LL,  0xE600000000000000LL);
}

unint64_t sub_11910()
{
  return OUTLINED_FUNCTION_17_8();
}

void sub_1191C()
{
}

uint64_t sub_1193C()
{
  return 1684104562LL;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }

uint64_t protocol witness for Flow.execute(completion:) in conformance RedirectToCompanionFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144LL))();
}

uint64_t SingleIntentCacheProvider.cacheIntent(uda:value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = Siri_Nlu_External_UserDialogAct.hashValue.getter();
  uint64_t v6 = *(void *)(v2 + 24);
  *(void *)(v3 + 16) = v5;
  *(void *)(v3 + 24) = a2;
  OUTLINED_FUNCTION_25_1();
  return swift_release(v6);
}

uint64_t PhoneCallControlNLIntent.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 19LL, 7LL);
}

uint64_t UsoEntity_common_Agent.asCommonPerson()()
{
  return UsoEntity_common_Agent.asCommonGroup()((uint64_t (*)(void))&type metadata accessor for UsoEntity_common_Person);
}

uint64_t static Transformer<>.isCallingLastNumberUserCalled(callTask:)()
{
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)
                 - 8);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  int v4 = (char *)&v48 - v3;
  uint64_t v5 = dispatch thunk of Uso_VerbTemplate_Target.target.getter(&v51);
  uint64_t v6 = v51;
  if (!v51) {
    goto LABEL_41;
  }
  uint64_t v7 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v5);
  swift_release(v6);
  if (!v7) {
    goto LABEL_41;
  }
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v45 = v7;
    }
    else {
      uint64_t v45 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease();
    if (!v46) {
      goto LABEL_40;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_40:
    swift_bridgeObjectRelease();
LABEL_41:
    char v44 = 0;
    return v44 & 1;
  }

  unint64_t v8 = v7 & 0xC000000000000001LL;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v7 & 0xC000000000000001LL) == 0, v7);
  if ((v7 & 0xC000000000000001LL) != 0)
  {
    uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v7);
    uint64_t v9 = v10;
  }

  else
  {
    uint64_t v9 = *(void *)(v7 + 32);
    uint64_t v10 = swift_retain();
  }

  dispatch thunk of CodeGenListEntry.entry.getter(&v50, v10);
  uint64_t v11 = swift_release(v9);
  uint64_t v12 = v50;
  if (v50)
  {
    uint64_t v13 = CodeGenBase.entity.getter(v11);
    swift_release(v12);
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  uint64_t v14 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute(0LL);
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v51, v13, v14, v14);
  swift_release(v13);
  uint64_t v15 = v51;
  if (!v51) {
    goto LABEL_40;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?>);
  uint64_t v17 = swift_allocObject( v16,  ((*(unsigned __int8 *)(v0 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))
        + *(void *)(v0 + 72),
          *(unsigned __int8 *)(v0 + 80) | 7LL);
  *(_OWORD *)(v17 + 16) = xmmword_31D870;
  dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(v17);
  specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v51 = v18;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v20 = v7;
    }
    else {
      uint64_t v20 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v19 < 2)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    char v35 = 0;
    goto LABEL_30;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(1LL, v8 == 0, v7);
  if (v8)
  {
    uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v7);
  }

  else
  {
    uint64_t v21 = *(void *)(v7 + 40);
    swift_retain();
  }

  uint64_t v22 = swift_bridgeObjectRelease();
  dispatch thunk of CodeGenListEntry.entry.getter(&v49, v22);
  uint64_t v23 = swift_release(v21);
  uint64_t v24 = v49;
  if (v49)
  {
    uint64_t v25 = CodeGenBase.entity.getter(v23);
    swift_release(v24);
  }

  else
  {
    uint64_t v25 = 0LL;
  }

  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v50, v25, v14, v14);
  uint64_t v26 = swift_release(v25);
  uint64_t v27 = v50;
  if (!v50) {
    goto LABEL_29;
  }
  dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(v26);
  specialized Set._Variant.insert(_:)((uint64_t)v4, (uint64_t)v2);
  outlined destroy of UUID?( (uint64_t)v4,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  uint64_t v28 = v51;
  uint64_t v29 = enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesLast(_:);
  uint64_t v30 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  char v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104LL);
  v31(v4, v29, v30);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v30);
  swift_bridgeObjectRetain();
  specialized Set.contains(_:)((uint64_t)v4, v28);
  LOBYTE(v29) = v32;
  swift_bridgeObjectRelease();
  outlined destroy of UUID?( (uint64_t)v4,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  if ((v29 & 1) == 0)
  {
    swift_release(v27);
    goto LABEL_29;
  }

  uint64_t v33 = v51;
  v31( v4,  enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesOutgoing(_:),  v30);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v30);
  swift_bridgeObjectRetain();
  specialized Set.contains(_:)((uint64_t)v4, v33);
  char v35 = v34;
  swift_release(v27);
  swift_bridgeObjectRelease();
  outlined destroy of UUID?( (uint64_t)v4,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_30:
  uint64_t v36 = v51;
  if (*(void *)(v51 + 16) == 1LL)
  {
    uint64_t v37 = enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesLast(_:);
    uint64_t v38 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
    char v39 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104LL);
    v39(v4, v37, v38);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v38);
    swift_bridgeObjectRetain();
    specialized Set.contains(_:)((uint64_t)v4, v36);
    LOBYTE(v37) = v40;
    swift_bridgeObjectRelease();
    outlined destroy of UUID?( (uint64_t)v4,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    uint64_t v41 = v51;
    if ((v37 & 1) != 0)
    {
      swift_release(v15);
      swift_bridgeObjectRelease();
      char v42 = 1;
    }

    else
    {
      v39( v4,  enum case for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues.applePhoneCall_PhoneCallAttribute_PhoneCallAttributesRecent(_:),  v38);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v38);
      swift_bridgeObjectRetain();
      specialized Set.contains(_:)((uint64_t)v4, v41);
      char v42 = v43;
      swift_bridgeObjectRelease();
      swift_release(v15);
      outlined destroy of UUID?( (uint64_t)v4,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      swift_bridgeObjectRelease();
    }
  }

  else
  {
    swift_release(v15);
    swift_bridgeObjectRelease();
    char v42 = 0;
  }

  char v44 = v35 | v42;
  return v44 & 1;
}

uint64_t UsoTask.usoAssociatedApp.getter()
{
  uint64_t v2 = v0;
  static UsoTask_CodegenConverter.convert(task:)(v0);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v74,  (uint64_t)v72,  &demangling cache variable for type metadata for Any?);
  if (v73)
  {
    outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v72,  (uint64_t)&v68,  &demangling cache variable for type metadata for Any?);
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_Target<UsoEntity_common_PhoneCall>);
    if (OUTLINED_FUNCTION_0_58(v3, v4, v5, v3, v6))
    {
      OUTLINED_FUNCTION_6_50();
      unint64_t v8 = dispatch thunk of Uso_VerbTemplate_Target.target.getter(v7);
      goto LABEL_6;
    }

    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_Reference<UsoEntity_common_PhoneCall>);
    if (OUTLINED_FUNCTION_0_58(v15, v16, v17, v15, v18))
    {
      OUTLINED_FUNCTION_6_50();
      unint64_t v8 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(v19);
      goto LABEL_6;
    }

    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_ReferenceTarget<UsoEntity_common_PhoneCall>);
    if (OUTLINED_FUNCTION_0_58(v22, v23, v24, v22, v25))
    {
      OUTLINED_FUNCTION_6_50();
      uint64_t v28 = dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter(v27, v26);
      if (v67)
      {
        uint64_t v20 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v28);
        uint64_t v28 = (void *)OUTLINED_FUNCTION_38_1();
        if (v20) {
          goto LABEL_18;
        }
      }

      unint64_t v8 = dispatch thunk of Uso_VerbTemplate_ReferenceTarget.reference.getter(&v67, v28);
LABEL_16:
      if (!v67) {
        goto LABEL_20;
      }
      uint64_t v20 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v8);
      OUTLINED_FUNCTION_38_1();
LABEL_18:
      uint64_t v21 = v1;
      goto LABEL_19;
    }

    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_ReferenceSelect<UsoEntity_common_PhoneCall>);
    if (OUTLINED_FUNCTION_0_58(v29, v30, v31, v29, v32))
    {
      OUTLINED_FUNCTION_6_50();
      uint64_t v33 = dispatch thunk of Uso_VerbTemplate_ReferenceSelect.reference.getter();
      if (v67)
      {
        uint64_t v20 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v33);
        uint64_t v33 = OUTLINED_FUNCTION_38_1();
        if (v20) {
          goto LABEL_18;
        }
      }

      unint64_t v8 = dispatch thunk of Uso_VerbTemplate_ReferenceSelect.select.getter(&v67, v33);
      goto LABEL_16;
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_NoVerb<UsoEntity_common_PhoneCall>);
    if (swift_dynamicCast(&v71, &v68, (char *)&type metadata for Any + 8))
    {
      OUTLINED_FUNCTION_6_50();
      unint64_t v8 = dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(v49, v48);
LABEL_6:
      if (v67)
      {
        uint64_t v20 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v8);
        swift_release(v1);
        uint64_t v21 = v67;
LABEL_19:
        uint64_t v34 = swift_release(v21);
        OUTLINED_FUNCTION_24_23( v34,  &demangling cache variable for type metadata for Any?,  v35,  v36,  v37,  v38,  v39,  v40,  v67,  v68,  v69,  v70);
LABEL_21:
        uint64_t v41 = __swift_destroy_boxed_opaque_existential_1(&v68);
        goto LABEL_31;
      }

LABEL_20:
      OUTLINED_FUNCTION_24_23( (uint64_t)v8,  &demangling cache variable for type metadata for Any?,  v9,  v10,  v11,  v12,  v13,  v14,  v67,  v68,  v69,  v70);
      swift_release(v1);
      uint64_t v20 = 0LL;
      goto LABEL_21;
    }

    __swift_destroy_boxed_opaque_existential_1(&v68);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v50 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
  uint64_t v51 = OUTLINED_FUNCTION_54_7();
  uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
  os_log_type_t v53 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v55 = swift_slowAlloc(32LL, -1LL);
    uint64_t v68 = v55;
    *(_DWORD *)uint64_t v54 = 136315138;
    OUTLINED_FUNCTION_3_8();
    uint64_t v56 = UsoTask.description.getter();
    unint64_t v58 = v57;
    swift_release(v2);
    uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v58, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v54 + 4);
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_87_0();
    _os_log_impl(&dword_0, v52, v53, "Unrecognized UsoTask type: %s", v54, 0xCu);
    swift_arrayDestroy(v55, 1LL);
    OUTLINED_FUNCTION_0_2(v55);
    OUTLINED_FUNCTION_0_2((uint64_t)v54);
  }

  else
  {
    OUTLINED_FUNCTION_0_3();
  }

  OUTLINED_FUNCTION_24_23( v59,  &demangling cache variable for type metadata for Any?,  v60,  v61,  v62,  v63,  v64,  v65,  v67,  v68,  v69,  v70);
  uint64_t v20 = 0LL;
LABEL_31:
  OUTLINED_FUNCTION_23_28(v41, &demangling cache variable for type metadata for Any?, v42, v43, v44, v45, v46, v47);
  return v20;
}

  uint64_t v17 = (uint64_t)v46;
  *(void *)(v15 + 8 * v25) = v27 | v26;
  outlined init with take of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?( (uint64_t)v11,  *(void *)(v13 + 48) + v24 * v18);
  uint64_t v39 = *(void *)(v13 + 16);
  uint64_t v40 = __OFADD__(v39, 1LL);
  uint64_t v41 = v39 + 1;
  if (!v40)
  {
    *(void *)(v13 + 16) = v41;
    goto LABEL_23;
  }

  PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers result = swift_bridgeObjectRelease();
  if (v18) {
LABEL_11:
  }
    PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers result = OUTLINED_FUNCTION_18_5(v53[13]);
LABEL_12:
  if ((_DWORD)v50) {
    return OUTLINED_FUNCTION_18_5(v53[14]);
  }
  return result;
}

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

      uint64_t v9 = (v15 - 1) & v15;
    }
  }

  OUTLINED_FUNCTION_16_3();
  *uint64_t v0 = v3;
  OUTLINED_FUNCTION_18_7();
}

      OUTLINED_FUNCTION_34_12();
    }
  }

  OUTLINED_FUNCTION_16_3();
  *uint64_t v0 = v2;
  OUTLINED_FUNCTION_18_7();
}

      uint64_t v48 = (v23 - 1) & v23;
      uint64_t v49 = v24;
    }
  }

  swift_release(v11);
  char *v2 = v13;
}

  __break(1u);
}

  __break(1u);
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v26 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v26, (uint64_t)static Logger.siriPhone);
  uint64_t v27 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v28 = 67109120;
    LODWORD(v32[0]) = v17 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v32, (char *)v32 + 4, v28 + 4);
    _os_log_impl( &dword_0,  v16,  (os_log_type_t)v5,  "#RestrictionCheckFlow isVoiceDialRestrictedRequest: %{BOOL}d",  v28,  8u);
    OUTLINED_FUNCTION_0_2((uint64_t)v28);
  }

  return v17 & 1;
}

  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t))(*(void *)v4 + 8 * v27))( a1,  partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v16);
  swift_release(v16);
  return OUTLINED_FUNCTION_16_3();
}

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_273_0();
  OUTLINED_FUNCTION_58();
  return result;
}

    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    goto LABEL_10;
  }

          AddCallParticipantHandleIntentFollowUpFlow.handleInvite()();
          goto LABEL_21;
        }
      }

      else
      {
        uint64_t v7 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8LL));
        if (v7) {
          goto LABEL_5;
        }
      }

      OUTLINED_FUNCTION_62();
    }

    uint64_t v9 = 0LL;
    goto LABEL_20;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = *(void *)(v0 + 32);
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = swift_retain_n(v10, 2LL);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  uint64_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v26 = *(void *)(v0 + 32);
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v17 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v27 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v18 = (void *)OUTLINED_FUNCTION_18_37();
    uint64_t v19 = [v18 code];

    uint64_t v20 = (id)INAddCallParticipantIntentResponseCodeGetName(v19);
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    uint64_t v23 = v22;

    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v16 + 4);
    swift_bridgeObjectRelease();
    swift_release_n(v26, 2LL);
    _os_log_impl( &dword_0,  v13,  v15,  "#AddCallParticipantHandleIntentFollowUpFlow intentResponse code: %s, not doing anything - errors should be provide d by HandleIntentFlow",  v16,  0xCu);
    swift_arrayDestroy(v17, 1LL);
    OUTLINED_FUNCTION_0_2(v17);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  else
  {
    swift_release_n(*(void *)(v0 + 32), 2LL);
  }

  static ExecuteResponse.complete()(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BaseRCHFlowDelegate<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
    uint64_t v49 = (void (*)(uint64_t))method lookup function for BaseRCHFlowDelegate( v48,  &method descriptor for BaseRCHFlowDelegate.makeConfirmationStateFromParse(parse:));
    v49(v66);
    goto LABEL_24;
  }

  OUTLINED_FUNCTION_11_49(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v20, v25, v15);
  uint64_t v28 = v67;
  uint64_t v29 = *(void *)(v67 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved);
  if (v29)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v20, v15);
    swift_retain();
    PhoneCallNLv3Intent.init(intent:)((uint64_t)v18, (uint64_t)v14);
    __swift_project_boxed_opaque_existential_1( (void *)(v28 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals),  *(void *)(v28 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 24));
    OUTLINED_FUNCTION_5_42();
    swift_retain();
    uint64_t v30 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( (uint64_t)v14,  v29,  0LL,  0LL,  (uint64_t)v69);
    OUTLINED_FUNCTION_22();
    outlined destroy of SKTransformer((uint64_t)v69);
    if (v30)
    {
      if ((OUTLINED_FUNCTION_70_5(1u) & 1) != 0 || (OUTLINED_FUNCTION_70_5(0) & 1) != 0)
      {
        OUTLINED_FUNCTION_22();

        OUTLINED_FUNCTION_17_41(v39, type metadata accessor for PhoneCallNLv3Intent);
        OUTLINED_FUNCTION_0_62();
        OUTLINED_FUNCTION_19_29();
        uint64_t v40 = OUTLINED_FUNCTION_14_37();
      }

      else
      {
        uint64_t v43 = OUTLINED_FUNCTION_70_5(2u);
        OUTLINED_FUNCTION_22();

        OUTLINED_FUNCTION_17_41(v44, type metadata accessor for PhoneCallNLv3Intent);
        OUTLINED_FUNCTION_0_62();
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(*(void *)(type metadata accessor for SiriKitConfirmationState(0LL)
                                                                  - 8)
                                                      + 104LL);
        if ((v43 & 1) != 0) {
          uint64_t v45 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
        }
        else {
          uint64_t v45 = (unsigned int *)&enum case for SiriKitConfirmationState.unset(_:);
        }
        uint64_t v41 = *v45;
        uint64_t v40 = v68;
      }

      v42(v40, v41);
      goto LABEL_24;
    }

    uint64_t v38 = OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_17_41(v38, type metadata accessor for PhoneCallNLv3Intent);
    OUTLINED_FUNCTION_0_62();
    goto LABEL_20;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v50 = v60;
  uint64_t v51 = __swift_project_value_buffer(v60, (uint64_t)static Logger.siriPhone);
  uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v58, v51, v50);
  os_log_type_t v53 = (os_log_s *)Logger.logObject.getter(v52);
  uint64_t v54 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v56 = OUTLINED_FUNCTION_7_0(32LL);
    v69[0] = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    uint64_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000044LL, 0x800000000034B950LL, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v55 + 4);
    _os_log_impl(&dword_0, v53, v54, "%s", v55, 0xCu);
    swift_arrayDestroy(v56, 1LL);
    OUTLINED_FUNCTION_0_2(v56);
    OUTLINED_FUNCTION_0_2((uint64_t)v55);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000044LL, 0x800000000034B950LL);
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000044LL,  0x800000000034B950LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
  __break(1u);
}

          uint64_t v1 = (v11 - 1) & v11;
          uint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
          uint64_t v4 = v12;
        }

        __break(1u);
        goto LABEL_44;
      }

      uint64_t v4 = v20 + 2;
      if (v20 + 2 < v3)
      {
        uint64_t v15 = *(void *)(v18 + 8 * v4);
        if (v15) {
          goto LABEL_29;
        }
        uint64_t v4 = v20 + 3;
        if (v20 + 3 < v3)
        {
          uint64_t v15 = *(void *)(v18 + 8 * v4);
          if (v15) {
            goto LABEL_29;
          }
          uint64_t v4 = v20 + 4;
          if (v20 + 4 < v3)
          {
            uint64_t v15 = *(void *)(v18 + 8 * v4);
            if (v15) {
              goto LABEL_29;
            }
            uint64_t v4 = v20 + 5;
            if (v20 + 5 < v3)
            {
              uint64_t v15 = *(void *)(v18 + 8 * v4);
              if (v15) {
                goto LABEL_29;
              }
              uint64_t v16 = v20 + 6;
              while (v16 < v3)
              {
                uint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v4 = v16 - 1;
                  goto LABEL_29;
                }
              }
            }
          }
        }
      }
    }

    swift_bridgeObjectRetain();
    outlined release of _NativeDictionary<String, Double>.Iterator(&v17);
    return 0LL;
  }

  OUTLINED_FUNCTION_7_5();
}

    ;
  }

  uint64_t v11 = v9 + 4;
  if (v11 >= v8)
  {
LABEL_23:
    swift_release(v2);
    return a2;
  }

  uint64_t v10 = *(void *)(v4 + 8 * v11);
  if (v10)
  {
    uint64_t v3 = v11;
    goto LABEL_20;
  }

  while (1)
  {
    uint64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1LL)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v10) {
      goto LABEL_20;
    }
  }

uint64_t static Transformer<>.overrideVerbForApp(originalVerb:usoApp:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    UsoEntity_common_App.applicationId.getter();
    if (v4)
    {
      uint64_t v5 = v3;
      uint64_t v6 = v4;
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t inited = swift_initStackObject(v7, v29);
      *(_OWORD *)(inited + 16) = xmmword_31D880;
      *(void *)(inited + 32) = 0xD000000000000012LL;
      *(void *)(inited + 40) = 0x80000000003479B0LL;
      if (one-time initialization token for macFaceTimeBundleId != -1) {
        swift_once( &one-time initialization token for macFaceTimeBundleId,  one-time initialization function for macFaceTimeBundleId);
      }
      uint64_t v9 = unk_477F50;
      *(void *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
      *(void *)(inited + 56) = v9;
      swift_bridgeObjectRetain();
      specialized Set.init(_nonEmptyArrayLiteral:)();
      specialized Set.contains(_:)(v5, v6, v10);
      char v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v13 = type metadata accessor for Logger(0LL);
        uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
        uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
        os_log_type_t v16 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = swift_slowAlloc(22LL, -1LL);
          uint64_t v25 = swift_slowAlloc(64LL, -1LL);
          uint64_t v28 = v25;
          *(_DWORD *)uint64_t v17 = 136315394;
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          uint64_t v18 = static NLv4Transformer.logPrefix;
          uint64_t v19 = *(void *)algn_478188;
          uint64_t v21 = qword_478190;
          uint64_t v20 = (void *)unk_478198;
          unint64_t v27 = 0xE000000000000000LL;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v18, v19, v21, v20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, &v28);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v17 + 4);
          swift_bridgeObjectRelease();
          *(_WORD *)(v17 + 12) = 2080;
          uint64_t v22 = PhoneCallVerb.rawValue.getter(a1);
          uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v28);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v17 + 14);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v15,  v16,  "%s overriding verb from .%s to .facetime because user specified FaceTime app",  (uint8_t *)v17,  0x16u);
          a1 = 2LL;
          swift_arrayDestroy(v25, 2LL);
          swift_slowDealloc(v25, -1LL, -1LL);
          swift_slowDealloc(v17, -1LL, -1LL);
        }

        else
        {

          return 2LL;
        }
      }
    }
  }

  return a1;
}

uint64_t static Transformer<>.incomingCallTransformerOutput(phoneCallVerb:voicemailVerb:phoneCallUsoTask:audioRoute:)@<X0>( unsigned __int8 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v203 = a4;
  unsigned __int8 v7 = a1;
  int v9 = a1;
  uint64_t v193 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v197 = *(void *)(v193 - 8);
  __chkstk_darwin();
  v191 = &v183[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  __chkstk_darwin();
  v196 = &v183[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  v190 = &v183[-v12];
  __chkstk_darwin();
  uint64_t v14 = &v183[-v13];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  __chkstk_darwin();
  v189 = &v183[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  v194 = &v183[-v16];
  __chkstk_darwin();
  v195 = &v183[-v17];
  __chkstk_darwin();
  v188 = &v183[-v18];
  __chkstk_darwin();
  v202 = &v183[-v19];
  __chkstk_darwin();
  v192 = &v183[-v20];
  __chkstk_darwin();
  v201 = &v183[-v21];
  __chkstk_darwin();
  unint64_t v23 = &v183[-v22];
  __chkstk_darwin();
  uint64_t v25 = &v183[-v24];
  static Signpost.begin(_:)();
  uint64_t v210 = v26;
  uint64_t v208 = v27;
  uint64_t v209 = v28;
  int v207 = v29;
  uint64_t v30 = _swiftEmptyArrayStorage;
  v221 = _swiftEmptyArrayStorage;
  char v220 = 9;
  if (v9 != 17)
  {
    uint64_t v31 = PhoneCallVerb.rawValue.getter(v7);
    if (v31 == 1684957542 && v32 == 0xE400000000000000LL)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }

    char v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, 1684957542LL, 0xE400000000000000LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v34 & 1) != 0) {
      goto LABEL_16;
    }
  }

  if (a2 == 6)
  {
LABEL_8:
    *(void *)(a5 + 32) = 0LL;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    uint64_t v35 = v210;
    Signpost.OpenSignpost.end()();
    return swift_release(v35);
  }

  uint64_t v37 = VoiceMail.VoiceMailVerb.rawValue.getter(a2);
  if (v37 == 2036427888 && v38 == 0xE400000000000000LL) {
    goto LABEL_15;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, 2036427888LL, 0xE400000000000000LL, 0LL);
  swift_bridgeObjectRelease();
  if ((v40 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_16:
  static UsoTask_CodegenConverter.convert(task:)(a3);
  v200 = (uint64_t *)a5;
  uint64_t v205 = a3;
  if (!*((void *)&v214 + 1))
  {
    outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Any?);
    goto LABEL_27;
  }

  type metadata accessor for UsoTask_request_common_PhoneCall(0LL);
  uint64_t v41 = v219;
  uint64_t v42 = swift_retain();
  dispatch thunk of Uso_VerbTemplate_ReferenceSelect.reference.getter(&v213, v42);
  uint64_t v43 = swift_release(v41);
  uint64_t v44 = v213;
  if (!(void)v213
    || (uint64_t v45 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v43), swift_release(v44), !v45))
  {
    swift_release(v41);
    goto LABEL_27;
  }

  if ((unint64_t)v45 >> 62)
  {
    if (v45 >= 0) {
      uint64_t v178 = v45 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v178 = v45;
    }
    swift_bridgeObjectRetain();
    uint64_t v179 = _CocoaArrayWrapper.endIndex.getter(v178);
    swift_bridgeObjectRelease();
    if (v179) {
      goto LABEL_22;
    }
LABEL_207:
    swift_release(v41);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }

LABEL_22:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v45 & 0xC000000000000001LL) == 0, v45);
  if ((v45 & 0xC000000000000001LL) != 0)
  {
    uint64_t v46 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v45);
  }

  else
  {
    uint64_t v46 = *(void *)(v45 + 32);
    swift_retain();
  }

  swift_bridgeObjectRelease();
  static Transformer<>.updatePhoneNounAndAttributesForLatestCallHistory(attribute:phoneCallAttributes:phoneCallNoun:)( v46,  (uint64_t *)&v221,  &v220);
  swift_release(v41);
  swift_release(v46);
  a3 = v205;
LABEL_27:
  static UsoTask_CodegenConverter.convert(task:)(a3);
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v219,  (uint64_t)&v213,  &demangling cache variable for type metadata for Any?);
  if (*((void *)&v214 + 1))
  {
    type metadata accessor for UsoTask_summarise_common_PhoneCall(0LL);
    if (swift_dynamicCast(&v218, &v213, (char *)&type metadata for Any + 8))
    {
      uint64_t v47 = v218;
      goto LABEL_32;
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Any?);
  }

  uint64_t v47 = 0LL;
LABEL_32:
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v219,  (uint64_t)&v218,  &demangling cache variable for type metadata for Any?);
  if (v47)
  {
    outlined destroy of UUID?((uint64_t)&v218, &demangling cache variable for type metadata for Any?);
    goto LABEL_34;
  }

  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v218,  (uint64_t)&v213,  &demangling cache variable for type metadata for Any?);
  if (!*((void *)&v214 + 1))
  {
    outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Any?);
LABEL_77:
    outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v219,  (uint64_t)&v213,  &demangling cache variable for type metadata for Any?);
    if (*((void *)&v214 + 1))
    {
      type metadata accessor for UsoTask_noVerb_common_PhoneCall(0LL);
      if ((swift_dynamicCast(&v217, &v213, (char *)&type metadata for Any + 8) & 1) != 0)
      {
        uint64_t v73 = v217;
        char v220 = 1;
        uint64_t v74 = swift_retain();
        dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v213, v74);
        uint64_t v75 = swift_release(v73);
        uint64_t v76 = v213;
        if ((void)v213)
        {
          uint64_t v50 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v75);
          swift_release(v76);
        }

        else
        {
          uint64_t v50 = 0LL;
        }

        uint64_t v111 = swift_retain();
        dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v213, v111);
        uint64_t v112 = swift_release(v73);
        uint64_t v113 = v213;
        if ((void)v213)
        {
          uint64_t v53 = dispatch thunk of UsoEntity_common_PhoneCall.sender.getter(v112);
          swift_release(v113);
        }

        else
        {
          uint64_t v53 = 0LL;
        }

        uint64_t v114 = swift_retain();
        dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v213, v114);
        uint64_t v115 = swift_release(v73);
        uint64_t v116 = v213;
        if ((void)v213)
        {
          uint64_t v206 = dispatch thunk of UsoEntity_common_PhoneCall.associatedDateTimeRange.getter(v115);
          swift_release(v116);
        }

        else
        {
          uint64_t v206 = 0LL;
        }

        uint64_t v56 = v73;
        goto LABEL_45;
      }
    }

    else
    {
      outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Any?);
    }

    uint64_t v206 = 0LL;
    uint64_t v53 = 0LL;
    uint64_t v57 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_50;
  }

  type metadata accessor for UsoTask_read_common_PhoneCall(0LL);
  uint64_t v47 = v217;
LABEL_34:
  char v220 = 1;
  uint64_t v48 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v213);
  uint64_t v49 = v213;
  if ((void)v213)
  {
    uint64_t v50 = dispatch thunk of UsoEntity_common_PhoneCall.attributes.getter(v48);
    swift_release(v49);
  }

  else
  {
    uint64_t v50 = 0LL;
  }

  uint64_t v51 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v213);
  uint64_t v52 = v213;
  if ((void)v213)
  {
    uint64_t v53 = dispatch thunk of UsoEntity_common_PhoneCall.sender.getter(v51);
    swift_release(v52);
  }

  else
  {
    uint64_t v53 = 0LL;
  }

  uint64_t v54 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v213);
  uint64_t v55 = v213;
  if ((void)v213)
  {
    uint64_t v206 = dispatch thunk of UsoEntity_common_PhoneCall.associatedDateTimeRange.getter(v54);
    swift_release(v47);
    uint64_t v56 = v55;
LABEL_45:
    swift_release(v56);
    goto LABEL_47;
  }

  swift_release(v47);
  uint64_t v206 = 0LL;
LABEL_47:
  if (v50) {
    uint64_t v57 = v50;
  }
  else {
    uint64_t v57 = (uint64_t)_swiftEmptyArrayStorage;
  }
LABEL_50:
  v199 = (void *)v53;
  if ((unint64_t)v57 >> 62)
  {
    if (v57 < 0) {
      uint64_t v147 = v57;
    }
    else {
      uint64_t v147 = v57 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    unint64_t v58 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter(v147);
    swift_bridgeObjectRelease();
    if (!v58) {
      goto LABEL_58;
    }
  }

  else
  {
    unint64_t v58 = *(uint64_t **)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFF8LL));
    if (!v58) {
      goto LABEL_58;
    }
  }

  if ((uint64_t)v58 < 1)
  {
    __break(1u);
LABEL_177:
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v69 = v148;
    goto LABEL_63;
  }

  for (uint64_t i = 0LL; i != v58; uint64_t i = (uint64_t *)((char *)i + 1))
  {
    if ((v57 & 0xC000000000000001LL) != 0)
    {
      uint64_t v60 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v57);
    }

    else
    {
      uint64_t v60 = *(void *)(v57 + 8LL * (void)i + 32);
      swift_retain();
    }

    static Transformer<>.updatePhoneNounAndAttributesForGeneralCallHistory(attribute:phoneCallAttributes:)( v60,  (uint64_t *)&v221);
    swift_release(v60);
  }

  uint64_t v22 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  unint64_t v23 = (uint64_t *)(*(void *)(v22 + 48) + 16 * a3);
  *unint64_t v23 = v8;
  v23[1] = a2;
  uint64_t v24 = *(void *)(v22 + 16);
  uint64_t v25 = __OFADD__(v24, 1LL);
  uint64_t v26 = v24 + 1;
  if (v25) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v26;
  }
  return result;
}

    int v9 = (v15 - 1) & v15;
  }

  uint64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_25:
    swift_release(v3);
    goto LABEL_26;
  }

  uint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    uint64_t v11 = v16;
    goto LABEL_22;
  }

  while (1)
  {
    uint64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v11 >= v10) {
      goto LABEL_25;
    }
    uint64_t v15 = *(void *)(v7 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }

    int v9 = (v15 - 1) & v15;
  }

  uint64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_25:
    swift_release(v3);
    goto LABEL_26;
  }

  uint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    uint64_t v11 = v16;
    goto LABEL_22;
  }

  while (1)
  {
    uint64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v11 >= v10) {
      goto LABEL_25;
    }
    uint64_t v15 = *(void *)(v7 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }

  __break(1u);
}

  __break(1u);
}

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v71);
  OUTLINED_FUNCTION_7_5();
}

  Signpost.OpenSignpost.end()();
  swift_release(v18);
  OUTLINED_FUNCTION_7_5();
}

  uint64_t v32 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
  *a2 = @nonobjc INPersonHandle.init(value:type:label:)(v7, v9, v18, v34);
  Signpost.OpenSignpost.end()();
  return swift_release(v5);
}

        if (v33)
        {
          uint64_t v53 = v0[42];
          uint64_t v55 = v0[39];
          uint64_t v54 = v0[40];
          uint64_t v56 = v33;
          uint64_t v57 = (void *)ParameterResolutionRecord.intent.getter(v53);
          unint64_t v58 = OUTLINED_FUNCTION_87_19(v55);
          uint64_t v59 = OUTLINED_FUNCTION_58_29(v58, *(void *)(*(void *)(v58 + 8) + 8LL));

          CallingIntentConfirmationFlowStrategy.updateForRejectedContact(selectedIndex:rejectedContact:currentContacts:)( v25,  v56,  v59);
          uint64_t v61 = v60;

          OUTLINED_FUNCTION_39();
          if (v61)
          {
            v102 = v33;
LABEL_28:
            uint64_t v76 = (uint64_t)(v0 + 2);
            uint64_t v77 = swift_bridgeObjectRetain_n(v61, 2LL);
            Logger.logObject.getter(v77);
            uint64_t v78 = OUTLINED_FUNCTION_6_0();
            if (OUTLINED_FUNCTION_7(v78))
            {
              uint64_t v79 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
              uint64_t v80 = OUTLINED_FUNCTION_7_0(32LL);
              char v110 = v80;
              *(_DWORD *)uint64_t v79 = 136315138;
              uint64_t v81 = swift_bridgeObjectRetain();
              uint64_t v82 = Array.description.getter(v81, v104);
              PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers v84 = v83;
              OUTLINED_FUNCTION_87_0();
              *v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, v84, &v110);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v108, v0 + 19, v79 + 4);
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_7_4(v61);
              OUTLINED_FUNCTION_57_0( &dword_0,  v109,  (os_log_type_t)v54,  "#CallingIntentConfirmationFlowStrategy updated contacts: %s",  v79);
              OUTLINED_FUNCTION_17_0(v80);
              OUTLINED_FUNCTION_0_2(v80);
              uint64_t v85 = (uint64_t)v79;
              uint64_t v76 = (uint64_t)(v0 + 2);
              OUTLINED_FUNCTION_0_2(v85);
            }

            else
            {
              OUTLINED_FUNCTION_7_4(v61);
            }

            os_log_type_t v86 = (void *)ParameterResolutionRecord.intent.getter(v0[42]);
            v0[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
            v0[2] = v61;
            NSObject.update(with:at:)(v76, 0x73746361746E6F63LL, 0xE800000000000000LL);

            OUTLINED_FUNCTION_11_12();
            uint64_t v33 = v102;
          }
        }

LABEL_58:
  swift_bridgeObjectRelease();
  uint64_t v30 = v199;
  if (v199)
  {
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
    uint64_t v62 = type metadata accessor for ContactQuery(0LL);
    uint64_t v63 = (void *)swift_allocObject( v61,  ((*(unsigned __int8 *)(*(void *)(v62 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v62 - 8) + 80LL))
                    + *(void *)(*(void *)(v62 - 8) + 72LL),
                      *(unsigned __int8 *)(*(void *)(v62 - 8) + 80LL) | 7LL);
    *((_OWORD *)v63 + 1) = xmmword_31D870;
    v204 = v63;
    uint64_t v64 = swift_retain();
    UsoEntity_common_Agent.toContactQuery()(v64, v65, v66, v67, v68);
    swift_release(v30);
  }

  else
  {
    v204 = _swiftEmptyArrayStorage;
  }

  unint64_t v58 = v200;
  if (!v206) {
    goto LABEL_66;
  }
  uint64_t v69 = v221;
  if ((swift_isUniquelyReferenced_nonNull_native(v221) & 1) == 0) {
    goto LABEL_177;
  }
LABEL_63:
  unint64_t v70 = v69[2];
  if (v70 >= v69[3] >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v69 = v149;
  }

  v69[2] = v70 + 1;
  *((_BYTE *)v69 + v70 + 32) = 11;
  v221 = v69;
LABEL_66:
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v219,  (uint64_t)&v213,  &demangling cache variable for type metadata for Any?);
  if (*((void *)&v214 + 1))
  {
    type metadata accessor for UsoTask_play_common_Voicemail(0LL);
    if (swift_dynamicCast(&v217, &v213, (char *)&type metadata for Any + 8))
    {
      uint64_t v71 = v217;
      goto LABEL_71;
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Any?);
  }

  uint64_t v71 = 0LL;
LABEL_71:
  outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v219,  (uint64_t)&v217,  &demangling cache variable for type metadata for Any?);
  if (v71)
  {
    char v72 = &v217;
LABEL_85:
    outlined destroy of UUID?((uint64_t)v72, &demangling cache variable for type metadata for Any?);
LABEL_86:
    uint64_t v211 = v71;
    uint64_t v77 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v213);
    uint64_t v78 = v213;
    uint64_t v79 = (uint64_t)v202;
    uint64_t v80 = (uint64_t)v201;
    if ((void)v213)
    {
      uint64_t v81 = dispatch thunk of CodeGenGlobalArgs.usoReferenceType.getter(v77);
      swift_release(v78);
      if (v81)
      {
        swift_release(v81);
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v82 = type metadata accessor for Logger(0LL);
        uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)static Logger.siriPhone);
        PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers v84 = (os_log_s *)Logger.logObject.getter(v83);
        os_log_type_t v86 = static os_log_type_t.debug.getter(v84, v85);
        if (os_log_type_enabled(v84, v86))
        {
          unint64_t v87 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v88 = swift_slowAlloc(32LL, -1LL);
          v216[0] = v88;
          *(_DWORD *)unint64_t v87 = 136315138;
          if (one-time initialization token for logPrefix != -1) {
            swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
          }
          uint64_t v89 = static NLv4Transformer.logPrefix;
          uint64_t v90 = *(void *)algn_478188;
          uint64_t v91 = qword_478190;
          unsigned __int8 v92 = (void *)unk_478198;
          *(void *)&__int128 v213 = 0LL;
          *((void *)&v213 + 1) = 0xE000000000000000LL;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v89, v90, v91, v92);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)&__int128 v213 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v213,  *((unint64_t *)&v213 + 1),  v216);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, (char *)&v213 + 8, v87 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v84, v86, "%s current request is recognized as play it", v87, 0xCu);
          swift_arrayDestroy(v88, 1LL);
          swift_slowDealloc(v88, -1LL, -1LL);
          swift_slowDealloc(v87, -1LL, -1LL);

          char v93 = v203;
          unint64_t v58 = v200;
          uint64_t v30 = v199;
        }

        else
        {

          char v93 = v203;
        }

        v102 = v221;
        if ((swift_isUniquelyReferenced_nonNull_native(v221) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v102 = v150;
        }

        unint64_t v95 = v102[2];
        if (v95 >= v102[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v102 = v151;
        }

        v102[2] = v95 + 1;
        *((_BYTE *)v102 + v95 + 32) = 6;
        v221 = v102;
        LOBYTE(v95) = 2;
        goto LABEL_184;
      }
    }

    uint64_t v94 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v213);
    unint64_t v95 = v213;
    if (!(void)v213) {
      goto LABEL_183;
    }
    uint64_t v96 = dispatch thunk of UsoEntity_common_Voicemail.attributes.getter(v94);
    swift_release(v95);
    if (!v96) {
      goto LABEL_125;
    }
    if ((unint64_t)v96 >> 62)
    {
      if (v96 >= 0) {
        uint64_t v152 = v96 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v152 = v96;
      }
      swift_bridgeObjectRetain();
      unint64_t v95 = _CocoaArrayWrapper.endIndex.getter(v152);
      swift_bridgeObjectRelease();
      if (v95) {
        goto LABEL_98;
      }
    }

    else
    {
      unint64_t v95 = *(void *)((char *)&dword_10 + (v96 & 0xFFFFFFFFFFFFFF8LL));
      if (v95)
      {
LABEL_98:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v96 & 0xC000000000000001LL) == 0, v96);
        if ((v96 & 0xC000000000000001LL) != 0)
        {
          uint64_t v97 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v96);
        }

        else
        {
          uint64_t v97 = *(void *)(v96 + 32);
          swift_retain();
        }

        uint64_t v98 = swift_bridgeObjectRelease();
        uint64_t v187 = v97;
        v99 = dispatch thunk of CodeGenListEntry.entry.getter(v216, v98);
        uint64_t v100 = v216[0];
        if (v216[0])
        {
          uint64_t v101 = CodeGenBase.entity.getter(v99);
          swift_release(v100);
        }

        else
        {
          uint64_t v101 = 0LL;
        }

        uint64_t v103 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute(0LL);
        static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v213, v101, v103, v103);
        swift_release(v101);
        if ((void)v213)
        {
          uint64_t v186 = v213;
          dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(v187);
          if (one-time initialization token for phoneCallAttributesLast != -1) {
            swift_once( &one-time initialization token for phoneCallAttributesLast,  one-time initialization function for phoneCallAttributesLast);
          }
          uint64_t v104 = v193;
          uint64_t v105 = __swift_project_value_buffer(v193, (uint64_t)&static Transformer<>.phoneCallAttributesLast);
          v185 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v197 + 16);
          v185(v23, v105, v104);
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 0LL, 1LL, v104);
          uint64_t v106 = (uint64_t)&v14[*(int *)(v198 + 48)];
          outlined init with copy of PhoneCallNLIntent?( (uint64_t)v25,  (uint64_t)v14,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          outlined init with copy of PhoneCallNLIntent?( (uint64_t)v23,  v106,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1LL, v104) == 1)
          {
            outlined destroy of UUID?( (uint64_t)v23,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            outlined destroy of UUID?( (uint64_t)v25,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            uint64_t v107 = v104;
            if (__swift_getEnumTagSinglePayload(v106, 1LL, v104) == 1)
            {
              char v93 = v203;
              v108 = v185;
LABEL_145:
              outlined destroy of UUID?( (uint64_t)v14,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              goto LABEL_146;
            }
          }

          else
          {
            outlined init with copy of PhoneCallNLIntent?( (uint64_t)v14,  v80,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            if (__swift_getEnumTagSinglePayload(v106, 1LL, v104) != 1)
            {
              uint64_t v117 = v197;
              uint64_t v118 = v80;
              v119 = v191;
              (*(void (**)(_BYTE *, uint64_t, uint64_t))(v197 + 32))(v191, v106, v104);
              lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
              uint64_t v120 = v118;
              int v184 = dispatch thunk of static Equatable.== infix(_:_:)(v118, v119, v104);
              v121 = *(void (**)(_BYTE *, uint64_t))(v117 + 8);
              v121(v119, v104);
              outlined destroy of UUID?( (uint64_t)v23,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              outlined destroy of UUID?( (uint64_t)v25,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              v121((_BYTE *)v120, v104);
              outlined destroy of UUID?( (uint64_t)v14,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              char v93 = v203;
              uint64_t v107 = v104;
              v108 = v185;
              if ((v184 & 1) != 0)
              {
LABEL_146:
                v126 = v221;
                uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v221);
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                  v126 = (void *)isUniquelyReferenced_nonNull_native;
                }

                unint64_t v128 = v126[2];
                if (v128 >= v126[3] >> 1)
                {
                  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                  v126 = (void *)isUniquelyReferenced_nonNull_native;
                }

                v126[2] = v128 + 1;
                *((_BYTE *)v126 + v128 + 32) = 6;
                v221 = v126;
LABEL_154:
                v130 = v195;
                dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(isUniquelyReferenced_nonNull_native);
                if (one-time initialization token for phoneCallAttributesNewVoicemail != -1) {
                  swift_once( &one-time initialization token for phoneCallAttributesNewVoicemail,  one-time initialization function for phoneCallAttributesNewVoicemail);
                }
                uint64_t v131 = __swift_project_value_buffer( v107,  (uint64_t)&static Transformer<>.phoneCallAttributesNewVoicemail);
                v132 = v194;
                v108(v194, v131, v107);
                __swift_storeEnumTagSinglePayload((uint64_t)v132, 0LL, 1LL, v107);
                v133 = v196;
                uint64_t v134 = (uint64_t)&v196[*(int *)(v198 + 48)];
                outlined init with copy of PhoneCallNLIntent?( (uint64_t)v130,  (uint64_t)v196,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                outlined init with copy of PhoneCallNLIntent?( (uint64_t)v132,  v134,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1LL, v107) == 1)
                {
                  outlined destroy of UUID?( (uint64_t)v132,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  outlined destroy of UUID?( (uint64_t)v130,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v134, 1LL, v107);
                  unint64_t v58 = v200;
                  uint64_t v136 = v187;
                  if (EnumTagSinglePayload == 1)
                  {
                    outlined destroy of UUID?( (uint64_t)v196,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_163:
                    v142 = v221;
                    if ((swift_isUniquelyReferenced_nonNull_native(v221) & 1) == 0)
                    {
                      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                      v142 = v180;
                    }

                    unint64_t v95 = v142[2];
                    if (v95 >= v142[3] >> 1)
                    {
                      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
                      v142 = v181;
                    }

                    v142[2] = v95 + 1;
                    *((_BYTE *)v142 + v95 + 32) = 12;
                    swift_release(v186);
                    swift_release(v187);
                    LOBYTE(v95) = 0;
                    v221 = v142;
                    goto LABEL_184;
                  }
                }

                else
                {
                  v137 = v189;
                  outlined init with copy of PhoneCallNLIntent?( (uint64_t)v133,  (uint64_t)v189,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  int v138 = __swift_getEnumTagSinglePayload(v134, 1LL, v107);
                  unint64_t v58 = v200;
                  if (v138 != 1)
                  {
                    uint64_t v139 = v197;
                    v140 = v191;
                    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v197 + 32))(v191, v134, v107);
                    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
                    LODWORD(v205) = dispatch thunk of static Equatable.== infix(_:_:)(v137, v140, v107);
                    v141 = *(void (**)(_BYTE *, uint64_t))(v139 + 8);
                    v141(v140, v107);
                    outlined destroy of UUID?( (uint64_t)v194,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                    outlined destroy of UUID?( (uint64_t)v195,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                    v141(v137, v107);
                    outlined destroy of UUID?( (uint64_t)v133,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                    uint64_t v136 = v187;
                    if ((v205 & 1) != 0) {
                      goto LABEL_163;
                    }
                    goto LABEL_168;
                  }

                  outlined destroy of UUID?( (uint64_t)v194,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  outlined destroy of UUID?( (uint64_t)v195,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  (*(void (**)(_BYTE *, uint64_t))(v197 + 8))(v137, v107);
                  uint64_t v136 = v187;
                }

                outlined destroy of UUID?( (uint64_t)v196,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
LABEL_168:
                swift_release(v186);
                swift_release(v136);
                LOBYTE(v95) = 0;
                goto LABEL_184;
              }

    if (v40 == v38)
    {
      OUTLINED_FUNCTION_4_1();
      goto LABEL_60;
    }
  }

  while (1)
  {
    OUTLINED_FUNCTION_53_19();
    if ((v48 & 1) == 0) {
      break;
    }
    if (*(void *)(v46 + 8 * v47) == v41) {
      goto LABEL_58;
    }
  }

LABEL_140:
              v122 = v192;
              dispatch thunk of UsoEntity_applePhoneCall_PhoneCallAttribute.definedValue.getter(v109);
              if (one-time initialization token for phoneCallAttributesRecent != -1) {
                swift_once( &one-time initialization token for phoneCallAttributesRecent,  one-time initialization function for phoneCallAttributesRecent);
              }
              uint64_t v123 = __swift_project_value_buffer(v107, (uint64_t)&static Transformer<>.phoneCallAttributesRecent);
              v108((_BYTE *)v79, v123, v107);
              __swift_storeEnumTagSinglePayload(v79, 0LL, 1LL, v107);
              v124 = v190;
              uint64_t v125 = (uint64_t)&v190[*(int *)(v198 + 48)];
              outlined init with copy of PhoneCallNLIntent?( (uint64_t)v122,  (uint64_t)v190,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              outlined init with copy of PhoneCallNLIntent?( v79,  v125,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
              if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1LL, v107) == 1)
              {
                outlined destroy of UUID?( v79,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                outlined destroy of UUID?( (uint64_t)v122,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                if (__swift_getEnumTagSinglePayload(v125, 1LL, v107) == 1)
                {
                  uint64_t v14 = v124;
                  goto LABEL_145;
                }
              }

              else
              {
                v129 = v188;
                outlined init with copy of PhoneCallNLIntent?( (uint64_t)v124,  (uint64_t)v188,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                if (__swift_getEnumTagSinglePayload(v125, 1LL, v107) != 1)
                {
                  uint64_t v143 = v197;
                  v144 = v191;
                  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v197 + 32))(v191, v125, v107);
                  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
                  LODWORD(v205) = dispatch thunk of static Equatable.== infix(_:_:)(v129, v144, v107);
                  v145 = *(void (**)(_BYTE *, uint64_t))(v143 + 8);
                  v146 = v144;
                  v108 = v185;
                  v145(v146, v107);
                  outlined destroy of UUID?( v79,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  outlined destroy of UUID?( (uint64_t)v192,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  v145(v129, v107);
                  outlined destroy of UUID?( (uint64_t)v124,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                  if ((v205 & 1) == 0) {
                    goto LABEL_154;
                  }
                  goto LABEL_146;
                }

                outlined destroy of UUID?( v79,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                outlined destroy of UUID?( (uint64_t)v122,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
                (*(void (**)(_BYTE *, uint64_t))(v197 + 8))(v129, v107);
              }

              outlined destroy of UUID?( (uint64_t)v124,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
              goto LABEL_154;
            }

            outlined destroy of UUID?( (uint64_t)v23,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            outlined destroy of UUID?( (uint64_t)v25,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v80, v104);
            uint64_t v107 = v104;
          }

          outlined destroy of UUID?( (uint64_t)v14,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
          char v93 = v203;
          v108 = v185;
          goto LABEL_140;
        }

        swift_release(v187);
LABEL_125:
        LOBYTE(v95) = 0;
LABEL_183:
        char v93 = v203;
LABEL_184:
        v153 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v213);
        uint64_t v154 = v213;
        if ((void)v213)
        {
          uint64_t v155 = dispatch thunk of UsoEntity_common_Voicemail.sender.getter(v153);
          swift_release(v154);
          if (v155)
          {
            swift_bridgeObjectRelease();
            uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
            uint64_t v157 = type metadata accessor for ContactQuery(0LL);
            v158 = (void *)swift_allocObject( v156,  ((*(unsigned __int8 *)(*(void *)(v157 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v157 - 8) + 80LL))
                             + *(void *)(*(void *)(v157 - 8) + 72LL),
                               *(unsigned __int8 *)(*(void *)(v157 - 8) + 80LL) | 7LL);
            *((_OWORD *)v158 + 1) = xmmword_31D870;
            v204 = v158;
            UsoEntity_common_Agent.toContactQuery()(v158, v159, v160, v161, v162);
            swift_release(v155);
          }
        }

        uint64_t v163 = v211;
        v164 = dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v213);
        uint64_t v165 = v213;
        if ((void)v213)
        {
          uint64_t v166 = dispatch thunk of UsoEntity_common_Voicemail.associatedDateTimeRange.getter(v164);
          swift_release(v165);
          if (v166)
          {
            swift_release(v166);
            v167 = v221;
            if ((swift_isUniquelyReferenced_nonNull_native(v221) & 1) == 0)
            {
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              v167 = v176;
            }

            unint64_t v168 = v167[2];
            if (v168 >= v167[3] >> 1)
            {
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              v167 = v177;
            }

            v167[2] = v168 + 1;
            *((_BYTE *)v167 + v168 + 32) = 11;
            swift_release(v211);
            a2 = 0;
            v221 = v167;
            goto LABEL_197;
          }

          uint64_t v169 = v211;
        }

        else
        {
          uint64_t v169 = v163;
        }

        swift_release(v169);
        a2 = 0;
LABEL_197:
        char v110 = 2;
        unsigned __int8 v7 = 17;
        goto LABEL_198;
      }
    }

    swift_bridgeObjectRelease();
    goto LABEL_183;
  }

  outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v217,  (uint64_t)&v213,  &demangling cache variable for type metadata for Any?);
  if (*((void *)&v214 + 1))
  {
    type metadata accessor for UsoTask_read_common_Voicemail(0LL);
    if ((swift_dynamicCast(v216, &v213, (char *)&type metadata for Any + 8) & 1) != 0)
    {
      uint64_t v71 = v216[0];
      goto LABEL_83;
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Any?);
  }

  uint64_t v71 = 0LL;
LABEL_83:
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v217,  (uint64_t)&v213,  &demangling cache variable for type metadata for Any?);
  if (v71)
  {
    char v72 = (uint64_t *)&v213;
    goto LABEL_85;
  }

  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v213,  (uint64_t)v216,  &demangling cache variable for type metadata for Any?);
  if (v216[3])
  {
    type metadata accessor for UsoTask_summarise_common_Voicemail(0LL);
    if ((swift_dynamicCast(&v212, v216, (char *)&type metadata for Any + 8) & 1) != 0)
    {
      uint64_t v71 = v212;
      goto LABEL_86;
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)v216, &demangling cache variable for type metadata for Any?);
  }

  outlined init with copy of PhoneCallNLIntent?( (uint64_t)&v219,  (uint64_t)&v213,  &demangling cache variable for type metadata for Any?);
  char v93 = v203;
  if (*((void *)&v214 + 1))
  {
    type metadata accessor for UsoTask_call_common_Voicemail(0LL);
    if ((swift_dynamicCast(v216, &v213, (char *)&type metadata for Any + 8) & 1) != 0)
    {
      swift_release(v216[0]);
      a2 = 0;
      LOBYTE(v95) = 0;
      goto LABEL_197;
    }
  }

  else
  {
    outlined destroy of UUID?((uint64_t)&v213, &demangling cache variable for type metadata for Any?);
  }

  char v110 = 0;
  LOBYTE(v95) = 2;
LABEL_198:
  uint64_t v170 = UsoTask.usoAssociatedApp.getter();
  if (v170)
  {
    uint64_t v171 = v170;
    *((void *)&v214 + 1) = type metadata accessor for UsoEntity_common_App(0LL);
    v215 = &protocol witness table for UsoEntity_common_App;
    *(void *)&__int128 v213 = v171;
  }

  else
  {
    v215 = 0LL;
    __int128 v214 = 0u;
    __int128 v213 = 0u;
  }

  swift_release(v30);
  swift_release(v206);
  uint64_t v172 = (uint64_t)v221;
  char v173 = v220;
  outlined destroy of UUID?((uint64_t)&v219, &demangling cache variable for type metadata for Any?);
  v58[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
  v58[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
  uint64_t v174 = swift_allocObject(&unk_4139D8, 120LL, 7LL);
  *unint64_t v58 = v174;
  BYTE6(v182) = v95;
  BYTE5(v182) = a2;
  BYTE4(v182) = v7;
  WORD1(v182) = 8963;
  BYTE1(v182) = v173;
  LOBYTE(v182) = v110;
  PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)( (uint64_t)v204,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&v213,  2,  v172,  v93,  2,  5,  v174 + 16,  v182,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v175 = v210;
  Signpost.OpenSignpost.end()();
  return swift_release(v175);
}

              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }

            if (v102 < v100) {
              goto LABEL_119;
            }
            if (v58 > *((void *)v98 + 2)) {
              goto LABEL_120;
            }
            *(void *)v99 = v100;
            *(void *)&v56[16 * v97 + 8] = v102;
            uint64_t v103 = *((void *)v98 + 2);
            if (v58 >= v103) {
              goto LABEL_121;
            }
            v132 = 0LL;
            uint64_t v55 = v103 - 1;
            memmove(&v56[16 * v58], v101 + 16, 16 * (v103 - 1 - v58));
            int v9 = v98;
            *((void *)v98 + 2) = v103 - 1;
            unint64_t v8 = v133;
            uint64_t v11 = (__objc2_prop_list **)(&CameraControlFlow + 64);
            if (v103 <= 2) {
              goto LABEL_91;
            }
          }
        }

        uint64_t v55 = 1LL;
LABEL_91:
        uint64_t v12 = v128;
        p_base_props = (__objc2_prop_list **)(&CameraControlFlow + 64);
        if (v7 >= v128) {
          goto LABEL_101;
        }
      }
    }

    int v9 = (char *)_swiftEmptyArrayStorage;
    uint64_t v55 = _swiftEmptyArrayStorage[2];
LABEL_101:
    if (v55 >= 2)
    {
      char v110 = *v122;
      uint64_t v105 = v128;
      while (1)
      {
        uint64_t v111 = v55 - 2;
        if (v55 < 2) {
          break;
        }
        if (!v110) {
          goto LABEL_152;
        }
        uint64_t v112 = v9;
        uint64_t v113 = *(void *)&v9[16 * v111 + 32];
        uint64_t v114 = *(void *)&v9[16 * v55 + 24];
        specialized _merge<A>(low:mid:high:buffer:by:)( (char *)(v110 + 8 * v113),  (id *)(v110 + 8LL * *(void *)&v9[16 * v55 + 16]),  v110 + 8 * v114,  v131);
        if (v132) {
          goto LABEL_98;
        }
        if (v114 < v113) {
          goto LABEL_134;
        }
        v132 = 0LL;
        if ((swift_isUniquelyReferenced_nonNull_native(v112) & 1) == 0) {
          uint64_t v112 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v112);
        }
        if (v111 >= *((void *)v112 + 2)) {
          goto LABEL_135;
        }
        uint64_t v115 = &v112[16 * v111 + 32];
        *(void *)uint64_t v115 = v113;
        *((void *)v115 + 1) = v114;
        uint64_t v116 = *((void *)v112 + 2);
        if (v55 > v116) {
          goto LABEL_136;
        }
        memmove(&v112[16 * v55 + 16], &v112[16 * v55 + 32], 16 * (v116 - v55));
        int v9 = v112;
        *((void *)v112 + 2) = v116 - 1;
        uint64_t v55 = v116 - 1;
        if (v116 <= 2) {
          goto LABEL_114;
        }
      }

uint64_t PhoneCallVerb.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1412C + 4 * byte_3263C2[a1]))( 1819042147LL,  0xE400000000000000LL);
}

uint64_t sub_1412C()
{
  return 0x636162206C6C6163LL;
}

uint64_t sub_14148()
{
  return OUTLINED_FUNCTION_87_2();
}

uint64_t sub_14168()
{
  return 1684957542LL;
}

uint64_t sub_14174()
{
  return OUTLINED_FUNCTION_215();
}

uint64_t sub_1417C()
{
  return 0x79666972616C63LL;
}

uint64_t sub_14194()
{
  return 1684104562LL;
}

uint64_t sub_141A0()
{
  return 0x6D7269666E6F63LL;
}

uint64_t sub_141B8()
{
  return 0x726577736E61LL;
}

uint64_t sub_141CC()
{
  return 0x70755F676E6168LL;
}

uint64_t sub_141E4()
{
  return 0x6574656C6564LL;
}

uint64_t sub_141F8()
{
  return 0x65526F54746E6177LL;
}

uint64_t sub_14218()
{
  return 1852403562LL;
}

uint64_t sub_14224()
{
  return 0x6974726150646461LL;
}

unint64_t sub_14248()
{
  return 0xD000000000000011LL;
}

uint64_t outlined init with take of AppSelectionSignalComponent(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *UsoTask.convertToCommonPhoneCallEntity()()
{
  uint64_t v1 = v0;
  static UsoTask_CodegenConverter.convert(task:)(v0);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v48,  (uint64_t)v46,  &demangling cache variable for type metadata for Any?);
  if (v47)
  {
    outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v46,  (uint64_t)&v44,  &demangling cache variable for type metadata for Any?);
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_Target<UsoEntity_common_PhoneCall>);
    if (OUTLINED_FUNCTION_8_45(v2, v3, v4, v2, v5, v6))
    {
      uint64_t v7 = v49;
      dispatch thunk of Uso_VerbTemplate_Target.target.getter(&v43);
LABEL_8:
      swift_release(v7);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v48,  &demangling cache variable for type metadata for Any?);
      uint64_t v14 = v43;
      __swift_destroy_boxed_opaque_existential_1(&v44);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v46,  &demangling cache variable for type metadata for Any?);
      return v14;
    }

    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_Reference<UsoEntity_common_PhoneCall>);
    if (OUTLINED_FUNCTION_8_45(v8, v9, v10, v8, v11, v12))
    {
      uint64_t v7 = v49;
      dispatch thunk of Uso_VerbTemplate_Reference.reference.getter(&v43);
      goto LABEL_8;
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Uso_VerbTemplate_ReferenceTarget<UsoEntity_common_PhoneCall>);
    uint64_t v13 = swift_dynamicCast(&v49, &v44, (char *)&type metadata for Any + 8);
    if ((_DWORD)v13)
    {
      uint64_t v7 = v49;
      dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter(&v43, v13);
      goto LABEL_8;
    }

    __swift_destroy_boxed_opaque_existential_1(&v44);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = OUTLINED_FUNCTION_54_7();
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    OUTLINED_FUNCTION_3_8();
    uint64_t v21 = UsoTask.description.getter();
    unint64_t v23 = v22;
    swift_release(v1);
    uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v19 + 4);
    OUTLINED_FUNCTION_0_3();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v17, v18, "Cannot transform UsoTask to task with common_PhoneCall: %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1LL);
    OUTLINED_FUNCTION_0_2(v20);
    OUTLINED_FUNCTION_0_2((uint64_t)v19);
  }

  else
  {

    OUTLINED_FUNCTION_0_3();
  }

  uint64_t v24 = type metadata accessor for TransformationError(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
  swift_allocError(v24, v25, 0LL, 0LL);
  uint64_t v27 = v26;
  uint64_t v44 = 0LL;
  unint64_t v45 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(50LL);
  swift_bridgeObjectRelease();
  uint64_t v44 = 0xD000000000000012LL;
  unint64_t v45 = 0x800000000034B190LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v28 = UsoTask.description.getter();
  uint64_t v30 = v29;
  swift_release(v1);
  v31._uint64_t countAndFlagsBits = v28;
  v31._object = v30;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v32._object = (void *)0x800000000034B1B0LL;
  String.append(_:)(v32);
  unint64_t v33 = v45;
  *uint64_t v27 = v44;
  v27[1] = v33;
  uint64_t v34 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104LL))( v27,  enum case for TransformationError.cannotTransform(_:),  v24);
  swift_willThrow(v34, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v14 = &demangling cache variable for type metadata for Any?;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v48,  &demangling cache variable for type metadata for Any?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v46,  &demangling cache variable for type metadata for Any?);
  return v14;
}

void static PhoneCallNLv4Intent.appendNewContactQueries(contactQueries:persons:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactQuery?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for ContactQuery(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  unint64_t v12 = *(void *)(v3 + 16);
  unint64_t v13 = (unint64_t)v1 >> 62;
  if (v12 > 1) {
    goto LABEL_4;
  }
  if (v13)
  {
    if (v1 < 0) {
      uint64_t v45 = v1;
    }
    else {
      uint64_t v45 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_124();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter(v45);
    OUTLINED_FUNCTION_4_1();
    if (v46 >= 2) {
      goto LABEL_4;
    }
    OUTLINED_FUNCTION_124();
    if (_CocoaArrayWrapper.endIndex.getter(v45)) {
      goto LABEL_12;
    }
LABEL_30:
    OUTLINED_FUNCTION_4_1();
    goto LABEL_31;
  }

  unint64_t v14 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
  if (v14 > 1)
  {
LABEL_4:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
    swift_bridgeObjectRetain_n(v1, 2LL);
    uint64_t v16 = OUTLINED_FUNCTION_6_1();
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
    if (os_log_type_enabled(v17, v19))
    {
      uint64_t v20 = OUTLINED_FUNCTION_7_0(22LL);
      *(_DWORD *)uint64_t v20 = 134218240;
      v53[0] = v12;
      OUTLINED_FUNCTION_53_17(v20, v21, v20 + 4, v20 + 12);
      OUTLINED_FUNCTION_50();
      *(_WORD *)(v20 + 12) = 2048;
      if (v13)
      {
        if (v1 < 0) {
          uint64_t v47 = v1;
        }
        else {
          uint64_t v47 = v1 & 0xFFFFFFFFFFFFFF8LL;
        }
        OUTLINED_FUNCTION_124();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v47);
        OUTLINED_FUNCTION_4_1();
      }

      else
      {
        uint64_t v22 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
      }

      uint64_t v23 = OUTLINED_FUNCTION_4_1();
      v53[0] = v22;
      OUTLINED_FUNCTION_53_17(v23, v24, v20 + 14, v20 + 22);
      OUTLINED_FUNCTION_4_1();
      _os_log_impl( &dword_0,  v17,  v19,  "#PhoneCallNLv4Intent appendNewContactQueries is skipped since contactQueries array has size:%ld and persons array has size:%ld",  (uint8_t *)v20,  0x16u);
      OUTLINED_FUNCTION_0_2(v20);
    }

    else
    {

      OUTLINED_FUNCTION_50();
      swift_bridgeObjectRelease_n(v1, 2LL);
    }

    goto LABEL_31;
  }

  OUTLINED_FUNCTION_124();
  if (!v14) {
    goto LABEL_30;
  }
LABEL_12:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v1 & 0xC000000000000001LL) == 0, v1);
  if ((v1 & 0xC000000000000001LL) != 0) {
    id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v1);
  }
  else {
    id v25 = *(id *)(v1 + 32);
  }
  uint64_t v26 = v25;
  uint64_t v27 = OUTLINED_FUNCTION_4_1();
  INPerson.isUnnamedHandleLabel.getter(v27);
  if ((v28 & 1) == 0)
  {

    goto LABEL_31;
  }

  specialized Collection.first.getter();
  OUTLINED_FUNCTION_3_7(v6);
  if (v29)
  {

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v6,  &demangling cache variable for type metadata for ContactQuery?);
LABEL_31:
    OUTLINED_FUNCTION_6_1();
    goto LABEL_32;
  }

  OUTLINED_FUNCTION_142(v11, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v30 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
  id v31 = v26;
  Swift::String v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v34 = static os_log_type_t.debug.getter(v32, v33);
  if (os_log_type_enabled(v32, v34))
  {
    uint64_t v35 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v48 = v32;
    uint64_t v36 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v49 = OUTLINED_FUNCTION_7_0(32LL);
    v53[0] = v49;
    *(_DWORD *)uint64_t v35 = 138412546;
    id v51 = v31;
    id v37 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v35 + 4);
    *uint64_t v36 = v31;

    *(_WORD *)(v35 + 12) = 2080;
    OUTLINED_FUNCTION_25_0(v11, (uint64_t)&v51, 0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ContactQuery and conformance ContactQuery,  (uint64_t (*)(uint64_t))&type metadata accessor for ContactQuery,  (uint64_t)&protocol conformance descriptor for ContactQuery);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter(v7, v38);
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v35 + 14);
    OUTLINED_FUNCTION_62();
    _os_log_impl( &dword_0,  v48,  v34,  "#PhoneCallNLv4Intent append isMe to contact queries based on person:%@ contactQuery:%s",  (uint8_t *)v35,  0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v36);
    OUTLINED_FUNCTION_0_2((uint64_t)v36);
    OUTLINED_FUNCTION_17_0(v49);
    OUTLINED_FUNCTION_0_2(v49);
    OUTLINED_FUNCTION_0_2(v35);
  }

  else
  {
  }

  OUTLINED_FUNCTION_25_0(v11, (uint64_t)v53, 33LL);
  ContactQuery.isMe.setter(1LL);
  swift_endAccess(v53);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
  uint64_t v42 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v43 = (v42 + 32) & ~v42;
  uint64_t v44 = swift_allocObject(v41, v43 + *(void *)(v8 + 72), v42 | 7);
  *(_OWORD *)(v44 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_142(v44 + v43, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  OUTLINED_FUNCTION_41_2(v11, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));

LABEL_32:
  OUTLINED_FUNCTION_7_5();
}

void INPerson.isUnnamedHandleLabel.getter(uint64_t a1)
{
  id v1 = OUTLINED_FUNCTION_46_7(a1, "personHandle");
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 label];
    if (v3)
    {
      uint64_t v4 = v3;
      OUTLINED_FUNCTION_140_4((uint64_t)v3, (SEL *)&selRef_value);
      char v7 = specialized Optional<A>.isNilOrEmpty.getter(v5, v6);
      OUTLINED_FUNCTION_50();
      if ((v7 & 1) != 0)
      {
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
        unint64_t v10 = v9;
        swift_bridgeObjectRelease();
        uint64_t v11 = HIBYTE(v10) & 0xF;
        if ((v10 & 0x2000000000000000LL) == 0) {
          uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
        }
        if (v11)
        {
          INPerson.hasNameComponents.getter();
          if ((v12 & 1) == 0)
          {
            id v13 = OUTLINED_FUNCTION_46_7(v12, "displayName");
            uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
            unint64_t v16 = v15;

            uint64_t v17 = OUTLINED_FUNCTION_13_1();
            uint64_t v18 = HIBYTE(v16) & 0xF;
            if ((v16 & 0x2000000000000000LL) == 0) {
              uint64_t v18 = v14 & 0xFFFFFFFFFFFFLL;
            }
            if (!v18)
            {

              goto LABEL_13;
            }
          }
        }
      }
    }
  }

LABEL_13:
  OUTLINED_FUNCTION_16();
}

      v230 = v7;
      os_log_type_t v34 = *(void *)(v0 + 608);
      v253 = *(void *)(v0 + 600);
      v256 = v3;
      v240 = *(void *)(v0 + 552);
      uint64_t v35 = *(void *)(v0 + 544);
      uint64_t v36 = *(void *)(v0 + 536);
      uint64_t v38 = *(void *)(v0 + 480);
      id v37 = *(void **)(v0 + 488);
      v250 = v37[31];
      v251 = v37[32];
      v243 = *(int8x16_t *)(v0 + 512);
      v249 = __swift_project_boxed_opaque_existential_1(v37 + 28, v250);
      v248 = type metadata accessor for SiriKitEvent(0LL);
      uint64_t v39 = (void *)ParameterResolutionRecord.intent.getter(v36);
      unint64_t v40 = [v39 typeName];

      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v234 = v42;
      v237 = v41;

      uint64_t v43 = *(void (**)(void, void, void))(v35 + 16);
      *(void *)(v0 + 656) = v43;
      OUTLINED_FUNCTION_11_1(v34, v38);
      OUTLINED_FUNCTION_95_9(v0 + 16);
      uint64_t v44 = *(unsigned __int8 *)(v35 + 80);
      uint64_t v45 = (v44 + 32) & ~v44;
      uint64_t v46 = (v240 + v45 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v47 = (int8x16_t *)swift_allocObject(&unk_40F120, v46 + 40, v44 | 7);
      v47[1] = vextq_s8(v243, v243, 8uLL);
      uint64_t v48 = &v47->i8[v45];
      uint64_t v49 = (void *)(v0 + 16);
      (*(void (**)(__int8 *, uint64_t, uint64_t))(v35 + 32))(v48, v34, v36);
      outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 176), (uint64_t)v47->i64 + v46);
      uint64_t v50 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v237,  v234,  31LL,  partial apply for closure #1 in CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:),  v47);
      dispatch thunk of SiriKitEventSending.send(_:)(v50, v250, v251);
      OUTLINED_FUNCTION_22();
      __swift_project_boxed_opaque_existential_1(v260, *(void *)(v0 + 40));
      OUTLINED_FUNCTION_34_1();
      LOBYTE(v46) = PhoneCallNLIntent.isGroupFaceTimeCall()();
      OUTLINED_FUNCTION_11_1(v253, v38);
      id v51 = *(void *)(v0 + 600);
      uint64_t v52 = *(void *)(v0 + 544);
      uint64_t v53 = *(void *)(v0 + 536);
      if ((v46 & 1) != 0)
      {
        uint64_t v54 = *(void *)(v257 + 48);
        uint64_t v55 = *(void *)(v257 + 56);
        __swift_project_boxed_opaque_existential_1(v256, v54);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v55);
        uint64_t v56 = *(void *)(v0 + 360);
        v254 = *(void *)(v0 + 368);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 336), v56);
        uint64_t v57 = v43;
        unint64_t v58 = OUTLINED_FUNCTION_88_15(v53);
        uint64_t v49 = (void *)(v0 + 16);
        DeviceState.isGroupFaceTimeDeviceUnsupported(app:)( v58,  v56,  v254,  v59,  v60,  v61,  v62,  v63,  (uint64_t)v230,  v234,  v237,  v240,  v243.i64[0],  v243.i64[1],  v247,  v248,  (uint64_t)v249,  v250,  v251,  v254);
        uint64_t v65 = v64;
        uint64_t v66 = v58;
        uint64_t v43 = v57;
        swift_release(v66);
        uint64_t v67 = *(void (**)(void, void))(v52 + 8);
        OUTLINED_FUNCTION_12_5();
        OUTLINED_FUNCTION_62_1();
        if ((v65 & 1) != 0)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v68 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v68, (uint64_t)static Logger.siriPhone);
          uint64_t v69 = OUTLINED_FUNCTION_24();
          if (OUTLINED_FUNCTION_27_1(v69))
          {
            unint64_t v70 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
            OUTLINED_FUNCTION_47(v70);
            OUTLINED_FUNCTION_5_13( &dword_0,  v71,  v72,  "#CallingIntentNeedsValueFlowStrategy Group FaceTime is unsupported for mac, homepod and watch");
            OUTLINED_FUNCTION_0_2(v53);
          }

          OUTLINED_FUNCTION_64_17();
          uint64_t v73 = v51;
          uint64_t v74 = v53;
          uint64_t v75 = 14LL;
LABEL_36:
          swift_storeEnumTagMultiPayload(v73, v74, v75);
          lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
          v108 = OUTLINED_FUNCTION_17_14(v107);
          OUTLINED_FUNCTION_25_45(v108, v109);
          char v110 = OUTLINED_FUNCTION_98_9();
          OUTLINED_FUNCTION_87_10( v110,  v111,  v112,  v113,  v114,  v115,  v116,  v117,  (uint64_t)v230,  v234,  v237,  v240,  v243.i64[0],  v243.i64[1]);
LABEL_37:
          uint64_t v118 = v49;
LABEL_38:
          __swift_destroy_boxed_opaque_existential_1(v118);
LABEL_39:
          swift_task_dealloc(*(void *)(v0 + 640));
          OUTLINED_FUNCTION_23_3();
          OUTLINED_FUNCTION_7_8();
          OUTLINED_FUNCTION_10_0();
          OUTLINED_FUNCTION_46_0();
          OUTLINED_FUNCTION_9_2();
          OUTLINED_FUNCTION_14_3();
          OUTLINED_FUNCTION_29_17();
          OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_92_0();
          goto LABEL_40;
        }
      }

      else
      {
        uint64_t v67 = *(void (**)(void, void))(v52 + 8);
        OUTLINED_FUNCTION_12_5();
      }

      *(void *)(v0 + 664) = v67;
      uint64_t v76 = *(void *)(v0 + 592);
      uint64_t v77 = *(void *)(v0 + 536);
      uint64_t v78 = *(void *)(v0 + 480);
      __swift_project_boxed_opaque_existential_1(v49, *(void *)(v0 + 40));
      OUTLINED_FUNCTION_34_17();
      uint64_t v79 = PhoneCallNLIntent.isEmergencyContactCall()();
      OUTLINED_FUNCTION_57_18();
      v43(v76, v78, v77);
      uint64_t v80 = *(void *)(v0 + 592);
      if (v79)
      {
        uint64_t v81 = *(void *)(v0 + 584);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 216), *(void *)(v0 + 240));
        OUTLINED_FUNCTION_34_17();
        uint64_t v82 = PhoneCallNLIntent.isFaceTimeCall()();
        OUTLINED_FUNCTION_11_1(v81, v80);
        uint64_t v83 = *(void *)(v0 + 536);
        if (v82)
        {
          OUTLINED_FUNCTION_120_6();
          OUTLINED_FUNCTION_12_5();
          OUTLINED_FUNCTION_62_1();
LABEL_31:
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          v102 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v102, (uint64_t)static Logger.siriPhone);
          uint64_t v103 = OUTLINED_FUNCTION_24();
          if (OUTLINED_FUNCTION_27_1(v103))
          {
            uint64_t v104 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
            OUTLINED_FUNCTION_47(v104);
            OUTLINED_FUNCTION_5_13( &dword_0,  v105,  v106,  "#CallingIntentNeedsValueFlowStrategy FaceTime/3rd-party emergency contact calling is unsupported");
            OUTLINED_FUNCTION_0_2(v83);
          }

          OUTLINED_FUNCTION_64_17();
          uint64_t v73 = OUTLINED_FUNCTION_120_0();
          uint64_t v75 = 16LL;
          goto LABEL_36;
        }

        OUTLINED_FUNCTION_55_21();
        uint64_t v101 = App.isFirstParty()();
        OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_120_6();
        OUTLINED_FUNCTION_12_5();
        PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers v84 = OUTLINED_FUNCTION_62_1();
        if (!v101) {
          goto LABEL_31;
        }
      }

      else
      {
        v67(*(void *)(v0 + 592), *(void *)(v0 + 536));
        PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers v84 = OUTLINED_FUNCTION_62_1();
      }

      uint64_t v85 = *(void *)(v0 + 616);
      os_log_type_t v86 = *(void **)(v0 + 472);
      Input.parse.getter(v84);
      unint64_t v87 = OUTLINED_FUNCTION_120_0();
      uint64_t v89 = v88(v87);
      if (v89 == enum case for Parse.NLv3IntentOnly(_:))
      {
        uint64_t v90 = *(void *)(v0 + 528);
        uint64_t v91 = *(void *)(v0 + 472);
        OUTLINED_FUNCTION_52_21(v256);
        unsigned __int8 v92 = OUTLINED_FUNCTION_55_21();
        OUTLINED_FUNCTION_46_27(v90, v91);
        uint64_t v94 = v93;
        *(void *)(v0 + 672) = v93;
        OUTLINED_FUNCTION_16_3();
        outlined destroy of SKTransformer(v0 + 296);
        if (!v94)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          v177 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v177, (uint64_t)static Logger.siriPhone);
          uint64_t v178 = OUTLINED_FUNCTION_24();
          if (OUTLINED_FUNCTION_27_1(v178))
          {
            uint64_t v179 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
            OUTLINED_FUNCTION_47(v179);
            OUTLINED_FUNCTION_5_13( &dword_0,  v180,  v181,  "#CallingIntentNeedsValueFlowStrategy SiriKit conversion failed for NLv3.");
            OUTLINED_FUNCTION_0_2(v92);
          }

          v183 = *(void *)(v0 + 496);
          uint64_t v182 = *(void *)(v0 + 504);

          swift_storeEnumTagMultiPayload(v182, v183, 13LL);
          lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
          swift_allocError(v183, v184, 0LL, 0LL);
          PhoneError.logged()(v185);
          uint64_t v186 = outlined destroy of PhoneError(v182);
          swift_willThrow( v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v230,  v234,  v237,  v240,  v243.i64[0],  v243.i64[1]);
          v194 = OUTLINED_FUNCTION_258();
          v232(v194);
          uint64_t v118 = (void *)(v0 + 16);
          goto LABEL_38;
        }

        unint64_t v95 = OUTLINED_FUNCTION_146_5();
        *(void *)(v0 + 680) = swift_getAssociatedConformanceWitness(v95, v96, v97);
        uint64_t v98 = v94;
        OUTLINED_FUNCTION_110_8();
        v99 = (void *)OUTLINED_FUNCTION_44_24();
        *(void *)(v0 + 688) = v99;
        OUTLINED_FUNCTION_144_5( v99,  (uint64_t)CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:));
        goto LABEL_76;
      }

      if (v89 == enum case for Parse.NLv4IntentOnly(_:))
      {
        v252 = v43;
        uint64_t v100 = *(void **)(v0 + 632);
        (*(void (**)(void *, void))(*(void *)(v0 + 624) + 96LL))(v100, *(void *)(v0 + 616));
        swift_unknownObjectRelease(*v100);
LABEL_49:
        v133 = *(void *)(v0 + 528);
        v255 = *(void *)(v0 + 472);
        OUTLINED_FUNCTION_52_21(v256);
        uint64_t v134 = OUTLINED_FUNCTION_55_21();
        OUTLINED_FUNCTION_46_27(v133, v255);
        uint64_t v136 = v135;
        *(void *)(v0 + 704) = v135;
        OUTLINED_FUNCTION_16_3();
        outlined destroy of SKTransformer(v0 + 256);
        if (!v136)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          v195 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v195, (uint64_t)static Logger.siriPhone);
          v196 = OUTLINED_FUNCTION_24();
          if (OUTLINED_FUNCTION_27_1(v196))
          {
            uint64_t v197 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
            OUTLINED_FUNCTION_47(v197);
            OUTLINED_FUNCTION_5_13( &dword_0,  v198,  v199,  "#CallingIntentNeedsValueFlowStrategy SiriKit conversion failed for NLv4/USO.");
            OUTLINED_FUNCTION_0_2(v134);
          }

          OUTLINED_FUNCTION_64_17();
          v200 = OUTLINED_FUNCTION_120_0();
          swift_storeEnumTagMultiPayload(v200, v201, 13LL);
          lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
          int v203 = OUTLINED_FUNCTION_17_14(v202);
          OUTLINED_FUNCTION_25_45(v203, v204);
          uint64_t v205 = OUTLINED_FUNCTION_98_9();
          OUTLINED_FUNCTION_87_10( v205,  v206,  v207,  v208,  v209,  v210,  v211,  v212,  (uint64_t)v230,  v234,  v237,  v240,  v243.i64[0],  v243.i64[1]);
          uint64_t v118 = (void *)(v0 + 16);
          goto LABEL_38;
        }

        v137 = *(void *)(v257 + 56);
        __swift_project_boxed_opaque_existential_1(v256, *(void *)(v257 + 48));
        int v138 = *(uint64_t (**)(uint64_t))(v137 + 56);
        uint64_t v139 = v136;
        v140 = OUTLINED_FUNCTION_120_0();
        v141 = v138(v140);
        v142 = OUTLINED_FUNCTION_30_24(v141);
        OUTLINED_FUNCTION_38_1();
        if ((v142 & 1) != 0)
        {
          uint64_t v143 = *(void *)(v0 + 568);
          v144 = *(void *)(v0 + 536);
          v145 = *(void *)(v0 + 528);
          v146 = *(void *)(v0 + 480);
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness( *(void *)(v0 + 512),  *(void *)(v0 + 520),  v145);
          v148 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 136))( v145,  AssociatedConformanceWitness);
          v252(v143, v146, v144);
          v149 = *(void *)(v0 + 568);
          v150 = *(void *)(v0 + 536);
          if ((v148 & 1) != 0)
          {
            OUTLINED_FUNCTION_42(v256);
            v151 = OUTLINED_FUNCTION_85_5();
            v152(v151);
            v153 = *(void *)(v0 + 400);
            v258 = *(void *)(v0 + 408);
            OUTLINED_FUNCTION_42((void *)(v0 + 376));
            int v138 = (uint64_t (*)(uint64_t))OUTLINED_FUNCTION_88_15(v150);
            uint64_t v49 = (void *)(v0 + 16);
            DeviceState.isGroupFaceTimeDeviceUnsupported(app:)( (uint64_t)v138,  v153,  v258,  v154,  v155,  v156,  v157,  v158,  (uint64_t)v230,  v234,  v237,  v240,  v243.i64[0],  v243.i64[1],  v247,  v248,  (uint64_t)v249,  v250,  (uint64_t)v252,  v255);
            uint64_t v160 = v159;
            swift_release(v138);
            OUTLINED_FUNCTION_12_5();
            __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 376));
            if ((v160 & 1) != 0)
            {
              if (one-time initialization token for siriPhone != -1) {
                swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
              }
              uint64_t v161 = OUTLINED_FUNCTION_15_1();
              OUTLINED_FUNCTION_12_1(v161, (uint64_t)static Logger.siriPhone);
              uint64_t v162 = OUTLINED_FUNCTION_24();
              if (OUTLINED_FUNCTION_27_1(v162))
              {
                uint64_t v163 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
                OUTLINED_FUNCTION_47(v163);
                OUTLINED_FUNCTION_5_13( &dword_0,  v164,  v165,  "#CallingIntentNeedsValueFlowStrategy Group FaceTime is unsupported for mac, homepod and watch");
                OUTLINED_FUNCTION_0_2(v150);
              }

              OUTLINED_FUNCTION_64_17();
              swift_storeEnumTagMultiPayload(v149, v150, 14LL);
              lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
              v167 = OUTLINED_FUNCTION_17_14(v166);
              OUTLINED_FUNCTION_25_45(v167, v168);
              uint64_t v169 = OUTLINED_FUNCTION_98_9();
              OUTLINED_FUNCTION_87_10( v169,  v170,  v171,  v172,  v173,  v174,  v175,  v176,  v231,  v235,  v238,  v241,  v244,  v246);

              goto LABEL_37;
            }
          }

          else
          {
            OUTLINED_FUNCTION_12_5();
          }
        }

        v223 = OUTLINED_FUNCTION_146_5();
        *(void *)(v0 + 712) = swift_getAssociatedConformanceWitness(v223, v224, v225);
        v226 = v139;
        OUTLINED_FUNCTION_110_8();

        v227 = (void *)OUTLINED_FUNCTION_44_24();
        *(void *)(v0 + 720) = v227;
        OUTLINED_FUNCTION_144_5( v227,  (uint64_t)CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:));
LABEL_76:
        OUTLINED_FUNCTION_55_19();
        __asm { BR              X4 }
      }

      if (v89 == enum case for Parse.uso(_:))
      {
        v252 = v43;
        ((void (*)(void, void))v230)(*(void *)(v0 + 632), *(void *)(v0 + 616));
        goto LABEL_49;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      __int128 v213 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v213, (uint64_t)static Logger.siriPhone);
      __int128 v214 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v214))
      {
        v215 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_47(v215);
        OUTLINED_FUNCTION_5_13( &dword_0,  v216,  v217,  "#CallingIntentNeedsValueFlowStrategy Pass-thru expected, as SiriKit will call us for other types of parses");
        OUTLINED_FUNCTION_0_2(v85);
      }

      uint64_t v218 = *(void *)(v0 + 464);

      uint64_t v219 = OUTLINED_FUNCTION_130_1();
      OUTLINED_FUNCTION_88(v218, 1LL, v220, v219);
      v221 = OUTLINED_FUNCTION_120_0();
      v230(v221);
LABEL_73:
      OUTLINED_FUNCTION_26_46();
      v259 = v222;
      __swift_destroy_boxed_opaque_existential_1(v260);
      OUTLINED_FUNCTION_23_3();
      OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_92_0();
      OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_14_3();
      OUTLINED_FUNCTION_29_17();
      OUTLINED_FUNCTION_25();
      swift_task_dealloc(v259);
      OUTLINED_FUNCTION_13_0();
LABEL_40:
      OUTLINED_FUNCTION_55_19();
      __asm { BR              X0 }
    }
  }

  OUTLINED_FUNCTION_62_1();
  goto LABEL_13;
}

    char v29 = v44;
    return swift_release(v29);
  }

  uint64_t v80 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INHangUpCallIntent,  &OBJC_CLASS___INHangUpCallIntent_ptr);
  uint64_t v118 = v70;
  if (!swift_dynamicCastMetatype(v70, v80))
  {
    uint64_t v90 = type metadata accessor for TransformationError(0LL);
    uint64_t v91 = lazy protocol witness table accessor for type TransformationError and conformance TransformationError();
    swift_allocError(v90, v91, 0LL, 0LL);
    char v93 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v90 - 8) + 104LL))( v92,  enum case for TransformationError.notImplemented(_:),  v90);
    return swift_willThrow(v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106);
  }

  outlined init with copy of SharedGlobalsProviding(v33, (uint64_t)v123);
  uint64_t v81 = (void *)swift_allocObject(&unk_3FB628, 80LL, 7LL);
  v81[2] = v35;
  v81[3] = v34;
  outlined init with take of AppSelectionSignalComponent(v123, (uint64_t)(v81 + 4));
  uint64_t v82 = v114;
  v81[9] = v114;
  uint64_t v83 = v82;
  swift_retain();
  PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers v84 = v34;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  os_log_type_t v86 = v105;
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v81,  v85);
  unint64_t v87 = v104;
  uint64_t v88 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v104);
  uint64_t v44 = v89;
  (*(void (**)(char *, uint64_t))(v106 + 8))(v86, v87);
  v88(v123, v72);
  if (v71) {
    goto LABEL_13;
  }
  swift_release(v44);
  uint64_t v67 = *(void **)&v123[0];
  a5 = v118;
LABEL_17:
  PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers result = swift_dynamicCastUnknownClass(v67, a5);
  if (!result)
  {

    return 0LL;
  }

  return result;
}

  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = OUTLINED_FUNCTION_15_1();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  uint64_t v24 = static os_log_type_t.debug.getter(v22, v23);
  if (os_log_type_enabled(v22, v24))
  {
    id v25 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)id v25 = 0;
    _os_log_impl(&dword_0, v22, v24, "#CallStateGuardFlow: Failed! Executing wrapped precondition flow.", v25, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v25);
  }

  uint64_t v26 = *(void *)(v0 + 112);

  uint64_t v27 = OUTLINED_FUNCTION_3_3(v26 + 64, v0 + 56);
  *(_BYTE *)(v26 + 64) = 1;
  char v28 = v8(v27);
  static ExecuteResponse.complete(next:)(v28);
  swift_release(v28);
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_16_3();
LABEL_18:
  __swift_destroy_boxed_opaque_existential_1(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

  OUTLINED_FUNCTION_16();
}

  OUTLINED_FUNCTION_16();
}

  if (!v40)
  {
    uint64_t v46 = v118;
    if (v41) {
      goto LABEL_11;
    }
LABEL_20:
    uint64_t v47 = v116;
    goto LABEL_21;
  }

  uint64_t v46 = v118;
LABEL_15:
  OUTLINED_FUNCTION_14_44(v120[6]);
  uint64_t v47 = v116;
  if ((v41 & 1) != 0)
  {
LABEL_16:
    OUTLINED_FUNCTION_14_44(v120[7]);
    uint64_t v48 = (int)v14;
    if ((v42 & 1) == 0)
    {
      if (v43)
      {
LABEL_18:
        OUTLINED_FUNCTION_23_35();
        goto LABEL_24;
      }

  uint64_t v88 = v17 & 0xC000000000000001LL;
  if ((v17 & 0xC000000000000001LL) != 0)
  {
    swift_bridgeObjectRetain();
    char v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v17);
  }

  else
  {
    uint64_t v27 = *(void **)(v17 + 32);
    swift_bridgeObjectRetain();
    char v28 = v27;
  }

  char v29 = v28;
  INPerson.hasHandleValue.getter();
  id v31 = v30;

  if ((v31 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 1)
  {
LABEL_44:
    swift_bridgeObjectRelease_n(v17, 2LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v56 = type metadata accessor for Logger(0LL);
    uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (void *)Logger.logObject.getter(v57);
    uint64_t v36 = static os_log_type_t.debug.getter(v20, v58);
    if (!os_log_type_enabled((os_log_t)v20, v36)) {
      goto LABEL_80;
    }
    id v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v37 = 0;
    uint64_t v38 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_79;
  }

  Swift::String v32 = v88 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v17) : *(id *)(v17 + 40);
  uint64_t v39 = v32;
  INPerson.hasHandleValue.getter();
  uint64_t v41 = v40;

  if ((v41 & 1) == 0)
  {
LABEL_48:
    unint64_t v87 = a5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v59 = 4LL;
    do
    {
      if (v88) {
        uint64_t v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v59 - 4, v17);
      }
      else {
        uint64_t v60 = *(id *)(v17 + 8 * v59);
      }
      uint64_t v61 = v60;
      uint64_t v62 = v59 - 3;
      if (__OFADD__(v59 - 4, 1LL))
      {
        __break(1u);
        goto LABEL_69;
      }

      uint64_t v63 = [v60 personHandle];
      if (v63)
      {
        uint64_t v64 = v63;
        uint64_t v65 = [v63 emergencyType];

        if (v65)
        {
          swift_bridgeObjectRelease_n(v17, 2LL);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v73 = type metadata accessor for Logger(0LL);
          uint64_t v74 = __swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
          uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
          uint64_t v77 = static os_log_type_t.debug.getter(v75, v76);
          if (os_log_type_enabled(v75, v77))
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v79 = swift_slowAlloc(32LL, -1LL);
            v89[0] = v79;
            *(_DWORD *)uint64_t v78 = 136315138;
            uint64_t v90 = (uint64_t)v65;
            type metadata accessor for INPersonHandleEmergencyType(0LL);
            uint64_t v81 = String.init<A>(describing:)(&v90, v80);
            uint64_t v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v82, v89);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v78 + 4, v78 + 12);
            swift_bridgeObjectRelease();
            _os_log_impl( &dword_0,  v75,  v77,  "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution",  v78,  0xCu);
            uint64_t v24 = 1LL;
            swift_arrayDestroy(v79, 1LL);
            swift_slowDealloc(v79, -1LL, -1LL);
            swift_slowDealloc(v78, -1LL, -1LL);

            goto LABEL_82;
          }

          goto LABEL_81;
        }
      }

      ++v59;
    }

    while (v62 != v26);
    swift_bridgeObjectRelease();
    uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v87 + 24);
    uint64_t v67 = *(void *)(v66(a4, v87) + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)v91, (uint64_t)v89);
    if (!v67)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v89);
      goto LABEL_9;
    }

    __swift_project_boxed_opaque_existential_1(v89, v89[3]);
    uint64_t v68 = v66(a4, v87);
    uint64_t v69 = specialized Sequence.allSatisfy(_:)(v68, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v89);
    if ((v69 & 1) == 0) {
      goto LABEL_9;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    unint64_t v70 = type metadata accessor for Logger(0LL);
    uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (void *)Logger.logObject.getter(v71);
    uint64_t v36 = static os_log_type_t.debug.getter(v20, v72);
    if (os_log_type_enabled((os_log_t)v20, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v37 = 0;
      uint64_t v38 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_79;
    }

    goto LABEL_80;
  }

  if (v26 == 2) {
    goto LABEL_44;
  }
  if (v88) {
    uint64_t v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2LL, v17);
  }
  else {
    uint64_t v42 = *(id *)(v17 + 48);
  }
  uint64_t v43 = v42;
  INPerson.hasHandleValue.getter();
  uint64_t v45 = v44;

  if ((v45 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 3) {
    goto LABEL_44;
  }
  if (v88) {
    uint64_t v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3LL, v17);
  }
  else {
    uint64_t v46 = *(id *)(v17 + 56);
  }
  uint64_t v47 = v46;
  INPerson.hasHandleValue.getter();
  uint64_t v49 = v48;

  if ((v49 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 4) {
    goto LABEL_44;
  }
  uint64_t v50 = 8LL;
  while (1)
  {
    PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers result = v88
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50 - 4, v17)
           : *(id *)(v17 + 8 * v50);
    uint64_t v52 = result;
    uint64_t v53 = v50 - 3;
    if (__OFADD__(v50 - 4, 1LL)) {
      break;
    }
    INPerson.hasHandleValue.getter();
    uint64_t v55 = v54;

    if ((v55 & 1) == 0) {
      goto LABEL_48;
    }
    ++v50;
    if (v53 == v26) {
      goto LABEL_44;
    }
  }

  __break(1u);
  return result;
}

  uint64_t v88 = v17 & 0xC000000000000001LL;
  if ((v17 & 0xC000000000000001LL) != 0)
  {
    swift_bridgeObjectRetain();
    char v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v17);
  }

  else
  {
    uint64_t v27 = *(void **)(v17 + 32);
    swift_bridgeObjectRetain();
    char v28 = v27;
  }

  char v29 = v28;
  INPerson.hasHandleValue.getter();
  id v31 = v30;

  if ((v31 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 1)
  {
LABEL_44:
    swift_bridgeObjectRelease_n(v17, 2LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v56 = type metadata accessor for Logger(0LL);
    uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (void *)Logger.logObject.getter(v57);
    uint64_t v36 = static os_log_type_t.debug.getter(v20, v58);
    if (!os_log_type_enabled((os_log_t)v20, v36)) {
      goto LABEL_80;
    }
    id v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v37 = 0;
    uint64_t v38 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_79;
  }

  Swift::String v32 = v88 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v17) : *(id *)(v17 + 40);
  uint64_t v39 = v32;
  INPerson.hasHandleValue.getter();
  uint64_t v41 = v40;

  if ((v41 & 1) == 0)
  {
LABEL_48:
    unint64_t v87 = a5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v59 = 4LL;
    do
    {
      if (v88) {
        uint64_t v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v59 - 4, v17);
      }
      else {
        uint64_t v60 = *(id *)(v17 + 8 * v59);
      }
      uint64_t v61 = v60;
      uint64_t v62 = v59 - 3;
      if (__OFADD__(v59 - 4, 1LL))
      {
        __break(1u);
        goto LABEL_69;
      }

      uint64_t v63 = [v60 personHandle];
      if (v63)
      {
        uint64_t v64 = v63;
        uint64_t v65 = [v63 emergencyType];

        if (v65)
        {
          swift_bridgeObjectRelease_n(v17, 2LL);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v73 = type metadata accessor for Logger(0LL);
          uint64_t v74 = __swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
          uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
          uint64_t v77 = static os_log_type_t.debug.getter(v75, v76);
          if (os_log_type_enabled(v75, v77))
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v79 = swift_slowAlloc(32LL, -1LL);
            v89[0] = v79;
            *(_DWORD *)uint64_t v78 = 136315138;
            uint64_t v90 = (uint64_t)v65;
            type metadata accessor for INPersonHandleEmergencyType(0LL);
            uint64_t v81 = String.init<A>(describing:)(&v90, v80);
            uint64_t v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v82, v89);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v78 + 4, v78 + 12);
            swift_bridgeObjectRelease();
            _os_log_impl( &dword_0,  v75,  v77,  "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution",  v78,  0xCu);
            uint64_t v24 = 1LL;
            swift_arrayDestroy(v79, 1LL);
            swift_slowDealloc(v79, -1LL, -1LL);
            swift_slowDealloc(v78, -1LL, -1LL);

            goto LABEL_82;
          }

          goto LABEL_81;
        }
      }

      ++v59;
    }

    while (v62 != v26);
    swift_bridgeObjectRelease();
    uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v87 + 24);
    uint64_t v67 = *(void *)(v66(a4, v87) + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)v91, (uint64_t)v89);
    if (!v67)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v89);
      goto LABEL_9;
    }

    __swift_project_boxed_opaque_existential_1(v89, v89[3]);
    uint64_t v68 = v66(a4, v87);
    uint64_t v69 = specialized Sequence.allSatisfy(_:)(v68, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v89);
    if ((v69 & 1) == 0) {
      goto LABEL_9;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    unint64_t v70 = type metadata accessor for Logger(0LL);
    uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (void *)Logger.logObject.getter(v71);
    uint64_t v36 = static os_log_type_t.debug.getter(v20, v72);
    if (os_log_type_enabled((os_log_t)v20, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v37 = 0;
      uint64_t v38 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_79;
    }

    goto LABEL_80;
  }

  if (v26 == 2) {
    goto LABEL_44;
  }
  if (v88) {
    uint64_t v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2LL, v17);
  }
  else {
    uint64_t v42 = *(id *)(v17 + 48);
  }
  uint64_t v43 = v42;
  INPerson.hasHandleValue.getter();
  uint64_t v45 = v44;

  if ((v45 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 3) {
    goto LABEL_44;
  }
  if (v88) {
    uint64_t v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3LL, v17);
  }
  else {
    uint64_t v46 = *(id *)(v17 + 56);
  }
  uint64_t v47 = v46;
  INPerson.hasHandleValue.getter();
  uint64_t v49 = v48;

  if ((v49 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 4) {
    goto LABEL_44;
  }
  uint64_t v50 = 8LL;
  while (1)
  {
    PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers result = v88
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50 - 4, v17)
           : *(id *)(v17 + 8 * v50);
    uint64_t v52 = result;
    uint64_t v53 = v50 - 3;
    if (__OFADD__(v50 - 4, 1LL)) {
      break;
    }
    INPerson.hasHandleValue.getter();
    uint64_t v55 = v54;

    if ((v55 & 1) == 0) {
      goto LABEL_48;
    }
    ++v50;
    if (v53 == v26) {
      goto LABEL_44;
    }
  }

  __break(1u);
  return result;
}

  uint64_t v88 = v17 & 0xC000000000000001LL;
  if ((v17 & 0xC000000000000001LL) != 0)
  {
    swift_bridgeObjectRetain();
    char v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v17);
  }

  else
  {
    uint64_t v27 = *(void **)(v17 + 32);
    swift_bridgeObjectRetain();
    char v28 = v27;
  }

  char v29 = v28;
  INPerson.hasHandleValue.getter();
  id v31 = v30;

  if ((v31 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 1)
  {
LABEL_44:
    swift_bridgeObjectRelease_n(v17, 2LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v56 = type metadata accessor for Logger(0LL);
    uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (void *)Logger.logObject.getter(v57);
    uint64_t v36 = static os_log_type_t.debug.getter(v20, v58);
    if (!os_log_type_enabled((os_log_t)v20, v36)) {
      goto LABEL_80;
    }
    id v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v37 = 0;
    uint64_t v38 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_79;
  }

  Swift::String v32 = v88 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v17) : *(id *)(v17 + 40);
  uint64_t v39 = v32;
  INPerson.hasHandleValue.getter();
  uint64_t v41 = v40;

  if ((v41 & 1) == 0)
  {
LABEL_48:
    unint64_t v87 = a5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v59 = 4LL;
    do
    {
      if (v88) {
        uint64_t v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v59 - 4, v17);
      }
      else {
        uint64_t v60 = *(id *)(v17 + 8 * v59);
      }
      uint64_t v61 = v60;
      uint64_t v62 = v59 - 3;
      if (__OFADD__(v59 - 4, 1LL))
      {
        __break(1u);
        goto LABEL_69;
      }

      uint64_t v63 = [v60 personHandle];
      if (v63)
      {
        uint64_t v64 = v63;
        uint64_t v65 = [v63 emergencyType];

        if (v65)
        {
          swift_bridgeObjectRelease_n(v17, 2LL);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v73 = type metadata accessor for Logger(0LL);
          uint64_t v74 = __swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
          uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
          uint64_t v77 = static os_log_type_t.debug.getter(v75, v76);
          if (os_log_type_enabled(v75, v77))
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v79 = swift_slowAlloc(32LL, -1LL);
            v89[0] = v79;
            *(_DWORD *)uint64_t v78 = 136315138;
            uint64_t v90 = (uint64_t)v65;
            type metadata accessor for INPersonHandleEmergencyType(0LL);
            uint64_t v81 = String.init<A>(describing:)(&v90, v80);
            uint64_t v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v82, v89);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v78 + 4, v78 + 12);
            swift_bridgeObjectRelease();
            _os_log_impl( &dword_0,  v75,  v77,  "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution",  v78,  0xCu);
            uint64_t v24 = 1LL;
            swift_arrayDestroy(v79, 1LL);
            swift_slowDealloc(v79, -1LL, -1LL);
            swift_slowDealloc(v78, -1LL, -1LL);

            goto LABEL_82;
          }

          goto LABEL_81;
        }
      }

      ++v59;
    }

    while (v62 != v26);
    swift_bridgeObjectRelease();
    uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v87 + 24);
    uint64_t v67 = *(void *)(v66(a4, v87) + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)v91, (uint64_t)v89);
    if (!v67)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v89);
      goto LABEL_9;
    }

    __swift_project_boxed_opaque_existential_1(v89, v89[3]);
    uint64_t v68 = v66(a4, v87);
    uint64_t v69 = specialized Sequence.allSatisfy(_:)(v68, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v89);
    if ((v69 & 1) == 0) {
      goto LABEL_9;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    unint64_t v70 = type metadata accessor for Logger(0LL);
    uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (void *)Logger.logObject.getter(v71);
    uint64_t v36 = static os_log_type_t.debug.getter(v20, v72);
    if (os_log_type_enabled((os_log_t)v20, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v37 = 0;
      uint64_t v38 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_79;
    }

    goto LABEL_80;
  }

  if (v26 == 2) {
    goto LABEL_44;
  }
  if (v88) {
    uint64_t v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2LL, v17);
  }
  else {
    uint64_t v42 = *(id *)(v17 + 48);
  }
  uint64_t v43 = v42;
  INPerson.hasHandleValue.getter();
  uint64_t v45 = v44;

  if ((v45 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 3) {
    goto LABEL_44;
  }
  if (v88) {
    uint64_t v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3LL, v17);
  }
  else {
    uint64_t v46 = *(id *)(v17 + 56);
  }
  uint64_t v47 = v46;
  INPerson.hasHandleValue.getter();
  uint64_t v49 = v48;

  if ((v49 & 1) == 0) {
    goto LABEL_48;
  }
  if (v26 == 4) {
    goto LABEL_44;
  }
  uint64_t v50 = 8LL;
  while (1)
  {
    PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers result = v88
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50 - 4, v17)
           : *(id *)(v17 + 8 * v50);
    uint64_t v52 = result;
    uint64_t v53 = v50 - 3;
    if (__OFADD__(v50 - 4, 1LL)) {
      break;
    }
    INPerson.hasHandleValue.getter();
    uint64_t v55 = v54;

    if ((v55 & 1) == 0) {
      goto LABEL_48;
    }
    ++v50;
    if (v53 == v26) {
      goto LABEL_44;
    }
  }

  __break(1u);
  return result;
}

  *(void *)(v50 + 16) = v76;
  *(void *)(v50 + 24) = v52;
  OUTLINED_FUNCTION_12_80( v68,  v69,  v70,  v71,  v72,  v73,  v74,  v75,  v141,  v146,  *((uint64_t *)&v146 + 1),  v147,  v148,  v149,  v150);
  return swift_release(v27);
}

  swift_bridgeObjectRelease();
  swift_release(*a2);
  uint64_t v20 = a2[1];
  outlined release of Set<String>(&v20);
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( (uint64_t)(a2 + 2),  (uint64_t)v19,  &demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v19);
  uint64_t v18 = a2[5];
  outlined release of Set<String>(&v18);
}

uint64_t UsoEntity_common_Agent.asCommonGroup()()
{
  return UsoEntity_common_Agent.asCommonGroup()((uint64_t (*)(void))&type metadata accessor for UsoEntity_common_Group);
}

uint64_t UsoEntity_common_Agent.asCommonGroup()(uint64_t (*a1)(void))
{
  uint64_t v2 = CodeGenBase.entity.getter();
  uint64_t v3 = a1(0LL);
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v5, v2, v3, v3);
  swift_release(v2);
  return v5;
}

uint64_t type metadata accessor for PhoneCallNLv4Contact()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin20PhoneCallNLv4Contact);
}

void *specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:)( uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t (**a5)(uint64_t, uint64_t))
{
  int v157 = a2;
  uint64_t v171 = type metadata accessor for UsoEntity_common_Quantifier.DefinedValues(0LL);
  uint64_t v167 = *(void *)(v171 - 8);
  __chkstk_darwin();
  v146 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_Quantifier.DefinedValues?, UsoEntity_common_Quantifier.DefinedValues?));
  __chkstk_darwin();
  v158 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  __chkstk_darwin();
  uint64_t v150 = (uint64_t)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v13 = (char *)&v143 - v12;
  __chkstk_darwin();
  uint64_t v170 = (uint64_t)&v143 - v14;
  uint64_t v160 = type metadata accessor for UsoEntity_common_SearchQualifier.DefinedValues(0LL);
  uint64_t v166 = *(void *)(v160 - 8);
  __chkstk_darwin();
  v145 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_SearchQualifier.DefinedValues?, UsoEntity_common_SearchQualifier.DefinedValues?));
  __chkstk_darwin();
  uint64_t v168 = (uint64_t)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  __chkstk_darwin();
  uint64_t v149 = (uint64_t)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v164 = (uint64_t)&v143 - v18;
  __chkstk_darwin();
  uint64_t v165 = (uint64_t)&v143 - v19;
  uint64_t v20 = type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues(0LL);
  uint64_t v163 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v143 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?));
  __chkstk_darwin();
  uint64_t v154 = (char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  __chkstk_darwin();
  uint64_t v148 = (uint64_t)&v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v25 = (char *)&v143 - v24;
  __chkstk_darwin();
  uint64_t v159 = (uint64_t)&v143 - v26;
  v185[3] = a4;
  v185[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v185);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32LL))(boxed_opaque_existential_1, a1, a4);
  uint64_t v169 = a3;
  a3[8] = 0LL;
  char v28 = a3 + 8;
  *((_BYTE *)v28 - 48) = 38;
  uint64_t v147 = v28 - 6;
  *(_OWORD *)(v28 - 3) = 0u;
  v144 = v28 - 3;
  *(_OWORD *)(v28 - 5) = 0u;
  *((_BYTE *)v28 - 8) = 0;
  v28[1] = 0LL;
  _OWORD v28[2] = 0LL;
  v28[3] = 1LL;
  uint64_t v29 = (uint64_t)(v28 + 26);
  bzero(v28 + 4, 0xB8uLL);
  v28[27] = 3LL;
  *((_DWORD *)v28 + 56) = 33554435;
  *((_BYTE *)v28 + 228) = 0;
  uint64_t v152 = v28 + 29;
  v28[29] = &_swiftEmptySetSingleton;
  *((_OWORD *)v28 + 15) = 0u;
  *((_OWORD *)v28 + 16) = 0u;
  v28[34] = 0LL;
  *((_WORD *)v28 + 140) = 1023;
  uint64_t v30 = a5[2];
  uint64_t v172 = a4;
  char v173 = boxed_opaque_existential_1;
  uint64_t v31 = v30(a4, (uint64_t)a5);
  uint64_t v161 = a5;
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = CodeGenBase.entity.getter(v31);
    swift_release(v32);
    uint64_t v34 = type metadata accessor for UsoEntity_common_PersonRelationship(0LL);
    uint64_t v35 = swift_retain();
    static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(v179, v35, v34, v34);
    swift_release(v33);
    uint64_t v36 = v179[0];
    if (v179[0])
    {
      uint64_t v162 = (char *)(v28 + 26);
      UsoEntity_common_PersonRelationship.relationshipIdentifierOrLabel.getter();
      uint64_t v38 = v37;
      uint64_t v40 = v39;
      swift_release(v36);
      swift_release(v33);
      uint64_t v29 = (uint64_t)v162;
      uint64_t v41 = v169;
      swift_beginAccess(v28 + 20, &v174, 1LL, 0LL);
      v41[28] = v38;
      v41[29] = v40;
      a5 = v161;
      swift_bridgeObjectRelease();
    }

    else
    {
      swift_release(v33);
    }
  }

  uint64_t v162 = v25;
  uint64_t v42 = v13;
  uint64_t v43 = v172;
  uint64_t v44 = UsoContactConvertible.emergencyType.getter();
  uint64_t v46 = v45;
  swift_beginAccess(v29, v184, 1LL, 0LL);
  uint64_t v47 = v169;
  uint64_t v48 = v169[34];
  unint64_t v49 = v169[35];
  v169[34] = v44;
  v47[35] = v46;
  outlined consume of PhoneCallEmergencyType?(v48, v49);
  uint64_t v50 = a5[7](v43, (uint64_t)a5);
  swift_beginAccess(v152, v183, 1LL, 0LL);
  v47[37] = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = a5[1](v43, (uint64_t)a5);
  uint64_t v53 = v52;
  swift_beginAccess(v28, v182, 1LL, 0LL);
  v47[8] = v51;
  v47[9] = v53;
  swift_bridgeObjectRelease();
  uint64_t v54 = a5[3](v43, (uint64_t)a5);
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = v159;
    dispatch thunk of UsoEntity_common_ReferenceType.definedValue.getter();
    swift_release(v55);
  }

  else
  {
    uint64_t v56 = v159;
    __swift_storeEnumTagSinglePayload(v159, 1LL, 1LL, v20);
  }

  uint64_t v57 = (uint64_t)v154;
  uint64_t v58 = (uint64_t)v162;
  (*(void (**)(char *, void, uint64_t))(v163 + 104))( v162,  enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:),  v20);
  __swift_storeEnumTagSinglePayload(v58, 0LL, 1LL, v20);
  uint64_t v59 = v57 + *(int *)(v153 + 48);
  outlined init with copy of TransformationResult?( v56,  v57,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  outlined init with copy of TransformationResult?( v58,  v59,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  if (__swift_getEnumTagSinglePayload(v57, 1LL, v20) != 1)
  {
    uint64_t v64 = v148;
    outlined init with copy of TransformationResult?( v57,  v148,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
    if (__swift_getEnumTagSinglePayload(v59, 1LL, v20) != 1)
    {
      uint64_t v65 = v64;
      uint64_t v66 = v163;
      uint64_t v67 = v42;
      uint64_t v68 = v143;
      (*(void (**)(char *, uint64_t, uint64_t))(v163 + 32))(v143, v59, v20);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_ReferenceType.DefinedValues);
      char v69 = dispatch thunk of static Equatable.== infix(_:_:)(v65, v68, v20);
      unint64_t v70 = *(void (**)(char *, uint64_t))(v66 + 8);
      uint64_t v71 = v68;
      uint64_t v42 = v67;
      v70(v71, v20);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v162,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v159,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      v70((char *)v65, v20);
      a5 = v161;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v57,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      uint64_t v62 = v158;
      uint64_t v63 = v172;
      uint64_t v61 = v160;
      if ((v69 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v162,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v56,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v64, v20);
    uint64_t v61 = v160;
LABEL_13:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v57,  &demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?));
    uint64_t v62 = v158;
    uint64_t v63 = v172;
    goto LABEL_16;
  }

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v58,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v56,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v59, 1LL, v20);
  uint64_t v61 = v160;
  if (EnumTagSinglePayload != 1) {
    goto LABEL_13;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v57,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  uint64_t v62 = v158;
  uint64_t v63 = v172;
LABEL_15:
  char v72 = v147;
  swift_beginAccess(v147, &v175, 1LL, 0LL);
  *char v72 = 31;
LABEL_16:
  uint64_t v73 = a5[4](v63, (uint64_t)a5);
  if (!v73) {
    goto LABEL_27;
  }
  uint64_t v74 = v73;
  uint64_t v75 = CodeGenBase.entity.getter(v73);
  swift_release(v74);
  uint64_t v76 = type metadata accessor for UsoEntity_common_PhoneNumber(0LL);
  uint64_t v77 = swift_retain();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(v179, v77, v76, v76);
  uint64_t v78 = swift_release(v75);
  uint64_t v79 = v179[0];
  if (v179[0])
  {
    dispatch thunk of UsoEntity_common_PhoneNumber.value.getter(v78);
    uint64_t v81 = v80;
    uint64_t v82 = swift_bridgeObjectRelease();
    if (v81)
    {
      uint64_t v83 = dispatch thunk of UsoEntity_common_PhoneNumber.value.getter(v82);
      PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers v84 = v169;
      uint64_t v86 = v85;
      swift_release(v79);
      swift_beginAccess(v28 + 18, &v176, 1LL, 0LL);
      v84[26] = v83;
      v84[27] = v86;
      uint64_t v61 = v160;
      uint64_t v63 = v172;
      uint64_t v62 = v158;
      swift_bridgeObjectRelease();
    }

    else
    {
      swift_release(v79);
    }
  }

  uint64_t v87 = type metadata accessor for UsoEntity_common_EmailAddress(0LL);
  uint64_t v88 = swift_retain();
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(v179, v88, v87, v87);
  uint64_t v89 = swift_release(v75);
  uint64_t v90 = v179[0];
  if (!v179[0]) {
    goto LABEL_25;
  }
  dispatch thunk of UsoEntity_common_EmailAddress.value.getter(v89);
  uint64_t v92 = v91;
  uint64_t v93 = swift_bridgeObjectRelease();
  if (!v92)
  {
    swift_release(v90);
LABEL_25:
    swift_release(v75);
    goto LABEL_26;
  }

  uint64_t v94 = dispatch thunk of UsoEntity_common_EmailAddress.value.getter(v93);
  uint64_t v96 = v95;
  swift_release(v90);
  swift_release(v75);
  swift_beginAccess(v144, &v177, 1LL, 0LL);
  uint64_t v97 = v169;
  v169[5] = v94;
  v97[6] = v96;
  uint64_t v61 = v160;
  uint64_t v63 = v172;
  swift_bridgeObjectRelease();
LABEL_26:
  a5 = v161;
LABEL_27:
  uint64_t v98 = a5[5](v63, (uint64_t)a5);
  v151 = v42;
  if (v98)
  {
    uint64_t v99 = v98;
    uint64_t v100 = (uint64_t)v62;
    uint64_t v101 = v165;
    dispatch thunk of UsoEntity_common_SearchQualifier.definedValue.getter();
    swift_release(v99);
    uint64_t v102 = v61;
  }

  else
  {
    uint64_t v100 = (uint64_t)v62;
    uint64_t v101 = v165;
    uint64_t v102 = v61;
    __swift_storeEnumTagSinglePayload(v165, 1LL, 1LL, v61);
  }

  uint64_t v103 = v164;
  (*(void (**)(uint64_t, void, uint64_t))(v166 + 104))( v164,  enum case for UsoEntity_common_SearchQualifier.DefinedValues.common_SearchQualifier_Exactly(_:),  v102);
  __swift_storeEnumTagSinglePayload(v103, 0LL, 1LL, v102);
  uint64_t v104 = v168;
  uint64_t v105 = v168 + *(int *)(v155 + 48);
  outlined init with copy of TransformationResult?( v101,  v168,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  outlined init with copy of TransformationResult?( v103,  v105,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  if (__swift_getEnumTagSinglePayload(v104, 1LL, v102) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v103,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v101,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
    uint64_t v106 = v100;
    if (__swift_getEnumTagSinglePayload(v105, 1LL, v102) == 1)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v168,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
      __int16 v107 = 256;
      goto LABEL_39;
    }

LABEL_35:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v168,  &demangling cache variable for type metadata for (UsoEntity_common_SearchQualifier.DefinedValues?, UsoEntity_common_SearchQualifier.DefinedValues?));
    __int16 v107 = 0;
    goto LABEL_39;
  }

  uint64_t v108 = v149;
  outlined init with copy of TransformationResult?( v104,  v149,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  uint64_t v106 = v100;
  if (__swift_getEnumTagSinglePayload(v105, 1LL, v102) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v164,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v165,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v108, v102);
    goto LABEL_35;
  }

  uint64_t v109 = v108;
  uint64_t v110 = v166;
  uint64_t v111 = v145;
  (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v145, v105, v102);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_SearchQualifier.DefinedValues and conformance UsoEntity_common_SearchQualifier.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_SearchQualifier.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_SearchQualifier.DefinedValues);
  uint64_t v112 = v109;
  char v113 = dispatch thunk of static Equatable.== infix(_:_:)(v109, v111, v102);
  uint64_t v114 = *(void (**)(char *, uint64_t))(v110 + 8);
  v114(v111, v102);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v164,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v165,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  v114((char *)v112, v102);
  a5 = v161;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v104,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  if ((v113 & 1) != 0) {
    __int16 v107 = 256;
  }
  else {
    __int16 v107 = 0;
  }
LABEL_39:
  uint64_t v115 = (uint64_t)v151;
  uint64_t v116 = (uint64_t)(v28 + 30);
  uint64_t v117 = a5[6](v172, (uint64_t)a5);
  if (v117
    && (uint64_t v118 = v117,
        uint64_t v119 = dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter(v117),
        uint64_t v120 = swift_release(v118),
        v119))
  {
    dispatch thunk of UsoEntity_common_Quantifier.definedValue.getter(v120);
    swift_release(v119);
  }

  else
  {
    __swift_storeEnumTagSinglePayload(v170, 1LL, 1LL, v171);
  }

  uint64_t v121 = (uint64_t)v28 + 226;
  uint64_t v122 = v115;
  uint64_t v123 = v115;
  uint64_t v124 = v171;
  (*(void (**)(uint64_t, void, uint64_t))(v167 + 104))( v122,  enum case for UsoEntity_common_Quantifier.DefinedValues.common_Quantifier_None(_:),  v171);
  __swift_storeEnumTagSinglePayload(v123, 0LL, 1LL, v124);
  uint64_t v125 = v106 + *(int *)(v156 + 48);
  outlined init with copy of TransformationResult?( v170,  v106,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  outlined init with copy of TransformationResult?( v123,  v125,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  if (__swift_getEnumTagSinglePayload(v106, 1LL, v124) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v123,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v170,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
    if (__swift_getEnumTagSinglePayload(v125, 1LL, v171) == 1)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v106,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
      int v126 = 0x10000;
      goto LABEL_52;
    }

  *(void *)(v7 + 8 * v16) = v18 | v17;
  *(_BYTE *)(*(void *)(v5 + 48) + v15) = v8;
  OUTLINED_FUNCTION_59_2();
  if (!v26)
  {
    *(void *)(v5 + 16) = v25;
    goto LABEL_38;
  }

  swift_release(v5);
LABEL_37:
  if ((v37 & 1) != 0)
  {
    uint64_t v34 = 1LL << *(_BYTE *)(v5 + 32);
    if (v34 >= 64) {
      specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, (unint64_t)(v34 + 63) >> 6, v18);
    }
    else {
      *uint64_t v18 = -1LL << v34;
    }
    *(void *)(v5 + 16) = 0LL;
  }

              outlined consume of [String : Any].Iterator._Variant(v1);
              return;
            }
          }
        }
      }
    }

      uint64_t v97 = v132;
      return v132;
    }

    (*(void (**)(void *, uint64_t))(v36 + 8))(v17, v33);
  }

  uint64_t v64 = v128;
  outlined init with copy of Parse?(v32, v128);
  uint64_t v65 = v132;
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  uint64_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc(42LL, -1LL);
    uint64_t v131 = swift_slowAlloc(128LL, -1LL);
    *(void *)&char v133 = v131;
    *(_DWORD *)uint64_t v68 = 136315906;
    uint64_t v135 = 0LL;
    v136[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    uint64_t v135 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INHangUpCallIntent,  &OBJC_CLASS___INHangUpCallIntent_ptr);
    char v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INHangUpCallIntent.Type);
    unint64_t v70 = String.init<A>(describing:)(&v135, v69);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 14);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 22) = 2080;
    char v72 = v124;
    outlined init with copy of Parse?(v64, v124);
    uint64_t v73 = String.init<A>(describing:)(v72, v125);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 24);
    swift_bridgeObjectRelease();
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v68 + 32) = 2080;
    uint64_t v135 = (uint64_t)v132;
    uint64_t v75 = v65;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INHangUpCallIntent?);
    uint64_t v77 = String.init<A>(describing:)(&v135, v76);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 34);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v66,  v67,  "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.",  (uint8_t *)v68,  0x2Au);
    uint64_t v79 = v131;
    swift_arrayDestroy(v131, 4LL);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
  }

  uint64_t v80 = v65;
  outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
  return v132;
}

      uint64_t v97 = v135;
      return v135;
    }

    (*(void (**)(void *, uint64_t))(v36 + 8))(v17, v33);
  }

  uint64_t v64 = v131;
  outlined init with copy of Parse?(v32, v131);
  uint64_t v65 = v135;
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  uint64_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc(42LL, -1LL);
    uint64_t v134 = swift_slowAlloc(128LL, -1LL);
    *(void *)&__int16 v136 = v134;
    *(_DWORD *)uint64_t v68 = 136315906;
    int v138 = 0LL;
    v139[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    int v138 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartAudioCallIntent,  &OBJC_CLASS___INStartAudioCallIntent_ptr);
    char v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntent.Type);
    unint64_t v70 = String.init<A>(describing:)(&v138, v69);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 14);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 22) = 2080;
    char v72 = v127;
    outlined init with copy of Parse?(v64, v127);
    uint64_t v73 = String.init<A>(describing:)(v72, v128);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 24);
    swift_bridgeObjectRelease();
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v68 + 32) = 2080;
    int v138 = (uint64_t)v135;
    uint64_t v75 = v65;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntent?);
    uint64_t v77 = String.init<A>(describing:)(&v138, v76);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 34);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v66,  v67,  "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.",  (uint8_t *)v68,  0x2Au);
    uint64_t v79 = v134;
    swift_arrayDestroy(v134, 4LL);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
  }

  uint64_t v80 = v65;
  outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
  return v135;
}

      uint64_t v97 = v132;
      return v132;
    }

    (*(void (**)(void *, uint64_t))(v36 + 8))(v17, v33);
  }

  uint64_t v64 = v128;
  outlined init with copy of Parse?(v32, v128);
  uint64_t v65 = v132;
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  uint64_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc(42LL, -1LL);
    uint64_t v131 = swift_slowAlloc(128LL, -1LL);
    *(void *)&char v133 = v131;
    *(_DWORD *)uint64_t v68 = 136315906;
    uint64_t v135 = 0LL;
    v136[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    uint64_t v135 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INAnswerCallIntent,  &OBJC_CLASS___INAnswerCallIntent_ptr);
    char v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAnswerCallIntent.Type);
    unint64_t v70 = String.init<A>(describing:)(&v135, v69);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 14);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 22) = 2080;
    char v72 = v124;
    outlined init with copy of Parse?(v64, v124);
    uint64_t v73 = String.init<A>(describing:)(v72, v125);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 24);
    swift_bridgeObjectRelease();
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v68 + 32) = 2080;
    uint64_t v135 = (uint64_t)v132;
    uint64_t v75 = v65;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAnswerCallIntent?);
    uint64_t v77 = String.init<A>(describing:)(&v135, v76);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 34);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v66,  v67,  "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.",  (uint8_t *)v68,  0x2Au);
    uint64_t v79 = v131;
    swift_arrayDestroy(v131, 4LL);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
  }

  uint64_t v80 = v65;
  outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
  return v132;
}

      uint64_t v97 = v135;
      return v135;
    }

    (*(void (**)(void *, uint64_t))(v36 + 8))(v17, v33);
  }

  uint64_t v64 = v131;
  outlined init with copy of Parse?(v32, v131);
  uint64_t v65 = v135;
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  uint64_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc(42LL, -1LL);
    uint64_t v134 = swift_slowAlloc(128LL, -1LL);
    *(void *)&__int16 v136 = v134;
    *(_DWORD *)uint64_t v68 = 136315906;
    int v138 = 0LL;
    v139[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    int v138 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
    char v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent.Type);
    unint64_t v70 = String.init<A>(describing:)(&v138, v69);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 14);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 22) = 2080;
    char v72 = v127;
    outlined init with copy of Parse?(v64, v127);
    uint64_t v73 = String.init<A>(describing:)(v72, v128);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 24);
    swift_bridgeObjectRelease();
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v68 + 32) = 2080;
    int v138 = (uint64_t)v135;
    uint64_t v75 = v65;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent?);
    uint64_t v77 = String.init<A>(describing:)(&v138, v76);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 34);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v66,  v67,  "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.",  (uint8_t *)v68,  0x2Au);
    uint64_t v79 = v134;
    swift_arrayDestroy(v134, 4LL);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
  }

  uint64_t v80 = v65;
  outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
  return v135;
}

      uint64_t v97 = v135;
      return v135;
    }

    (*(void (**)(void *, uint64_t))(v36 + 8))(v17, v33);
  }

  uint64_t v64 = v131;
  outlined init with copy of Parse?(v32, v131);
  uint64_t v65 = v135;
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  uint64_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc(42LL, -1LL);
    uint64_t v134 = swift_slowAlloc(128LL, -1LL);
    *(void *)&__int16 v136 = v134;
    *(_DWORD *)uint64_t v68 = 136315906;
    int v138 = 0LL;
    v139[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    int v138 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartVideoCallIntent,  &OBJC_CLASS___INStartVideoCallIntent_ptr);
    char v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent.Type);
    unint64_t v70 = String.init<A>(describing:)(&v138, v69);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 14);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 22) = 2080;
    char v72 = v127;
    outlined init with copy of Parse?(v64, v127);
    uint64_t v73 = String.init<A>(describing:)(v72, v128);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 24);
    swift_bridgeObjectRelease();
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v68 + 32) = 2080;
    int v138 = (uint64_t)v135;
    uint64_t v75 = v65;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent?);
    uint64_t v77 = String.init<A>(describing:)(&v138, v76);
    int v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v68 + 34);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v66,  v67,  "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.",  (uint8_t *)v68,  0x2Au);
    uint64_t v79 = v134;
    swift_arrayDestroy(v134, 4LL);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
  }

  uint64_t v80 = v65;
  outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
  return v135;
}

      uint64_t v97 = v132;
      return v132;
    }

    (*(void (**)(void *, uint64_t))(v36 + 8))(v17, v33);
  }

  uint64_t v64 = v128;
  outlined init with copy of Parse?(v32, v128);
  uint64_t v65 = v132;
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  uint64_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc(42LL, -1LL);
    uint64_t v131 = swift_slowAlloc(128LL, -1LL);
    *(void *)&char v133 = v131;
    *(_DWORD *)uint64_t v68 = 136315906;
    uint64_t v135 = 0LL;
    v136[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    uint64_t v135 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent,  &OBJC_CLASS___INIdentifyIncomingCallerIntent_ptr);
    char v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INIdentifyIncomingCallerIntent.Type);
    unint64_t v70 = String.init<A>(describing:)(&v135, v69);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 14);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 22) = 2080;
    char v72 = v124;
    outlined init with copy of Parse?(v64, v124);
    uint64_t v73 = String.init<A>(describing:)(v72, v125);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 24);
    swift_bridgeObjectRelease();
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
    *(_WORD *)(v68 + 32) = 2080;
    uint64_t v135 = (uint64_t)v132;
    uint64_t v75 = v65;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INIdentifyIncomingCallerIntent?);
    uint64_t v77 = String.init<A>(describing:)(&v135, v76);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v68 + 34);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v66,  v67,  "%s received unsupported or empty parse in convertToIntent for %s: %s. Returning previousIntent: %s.",  (uint8_t *)v68,  0x2Au);
    uint64_t v79 = v131;
    swift_arrayDestroy(v131, 4LL);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    outlined destroy of SpeakableString?(v64, &demangling cache variable for type metadata for Parse?);
  }

  uint64_t v80 = v65;
  outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
  return v132;
}

              outlined consume of [String : Any].Iterator._Variant(v3);

              return;
            }
          }
        }
      }
    }

  if (!(_DWORD)v115)
  {
LABEL_17:
    if ((_DWORD)v116) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }

LABEL_48:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v106,  &demangling cache variable for type metadata for (UsoEntity_common_Quantifier.DefinedValues?, UsoEntity_common_Quantifier.DefinedValues?));
    int v126 = 0;
    goto LABEL_52;
  }

  uint64_t v127 = v150;
  outlined init with copy of TransformationResult?( v106,  v150,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  if (__swift_getEnumTagSinglePayload(v125, 1LL, v171) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v123,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v170,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
    (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v127, v171);
    goto LABEL_48;
  }

  uint64_t v128 = v167;
  v129 = *(void (**)(char *, uint64_t, uint64_t))(v167 + 32);
  char v173 = (void *)v116;
  uint64_t v130 = v127;
  uint64_t v131 = v146;
  uint64_t v132 = v171;
  v129(v146, v125, v171);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_Quantifier.DefinedValues and conformance UsoEntity_common_Quantifier.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_Quantifier.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_Quantifier.DefinedValues);
  char v133 = dispatch thunk of static Equatable.== infix(_:_:)(v130, v131, v132);
  uint64_t v134 = v128;
  uint64_t v135 = v106;
  __int16 v136 = v107;
  uint64_t v137 = v132;
  int v138 = *(void (**)(char *, uint64_t))(v134 + 8);
  v138(v131, v137);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v123,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v170,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  uint64_t v139 = v130;
  uint64_t v116 = (uint64_t)v173;
  uint64_t v140 = v137;
  __int16 v107 = v136;
  v138((char *)v139, v140);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v135,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  if ((v133 & 1) != 0) {
    int v126 = 0x10000;
  }
  else {
    int v126 = 0;
  }
LABEL_52:
  __int16 v141 = v107 | v157 | (unsigned __int16)v126;
  swift_beginAccess(v121, v181, 1LL, 0LL);
  *(_BYTE *)(v121 + 2) = BYTE2(v126);
  *(_WORD *)uint64_t v121 = v141;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v185, (uint64_t)v179);
  char v180 = 2;
  swift_beginAccess(v116, v178, 33LL, 0LL);
  outlined assign with take of PhoneCallNLIntent?( (uint64_t)v179,  v116,  &demangling cache variable for type metadata for BackingContact?);
  swift_endAccess(v178);
  __swift_destroy_boxed_opaque_existential_1(v185);
  return v169;
}

  __break(1u);
}

        uint64_t v75 = &v87;
        goto LABEL_49;
      }

      uint64_t v56 = &demangling cache variable for type metadata for PhoneCallNLIntent?;
      uint64_t v57 = v91;
    }

    outlined destroy of SpeakableString?((uint64_t)v57, v56);
    OUTLINED_FUNCTION_30_43();
    goto LABEL_48;
  }

  unint64_t v49 = v41;
  if (v41 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_32_47(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 96));
    swift_unknownObjectRelease(*v36);
LABEL_25:
    OUTLINED_FUNCTION_15_74();
    uint64_t v50 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72));
    uint64_t v51 = v85;
    Input.parse.getter(v50);
    OUTLINED_FUNCTION_55_28();
    swift_release(v50);
    uint64_t v52 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v51, v40);
    if (v89)
    {
      OUTLINED_FUNCTION_19_59();
      __swift_destroy_boxed_opaque_existential_1(&v87);
    }

    else
    {
      OUTLINED_FUNCTION_57_29(v52, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }

    uint64_t v66 = *(uint64_t (**)(void))(*v4 + 160LL);
LABEL_39:
    uint64_t v67 = OUTLINED_FUNCTION_41_36(v66);
    goto LABEL_51;
  }

  if (v41 == enum case for Parse.uso(_:))
  {
    OUTLINED_FUNCTION_32_47(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    goto LABEL_25;
  }

  uint64_t v68 = enum case for Parse.empty(_:);
  OUTLINED_FUNCTION_88_11();
  char v69 = OUTLINED_FUNCTION_6_0();
  unint64_t v70 = os_log_type_enabled(v37, (os_log_type_t)v69);
  if (v49 == v68)
  {
    if (v70)
    {
      uint64_t v71 = (_WORD *)OUTLINED_FUNCTION_1_0();
      *uint64_t v71 = 0;
      OUTLINED_FUNCTION_17_27( &dword_0,  v37,  (os_log_type_t)v69,  "#VoiceOnlyEmergencyConfirmationFlow received an empty parse");
      OUTLINED_FUNCTION_0_2((uint64_t)v71);
    }

    OUTLINED_FUNCTION_15_74();
    char v72 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v69 + 224));
    OUTLINED_FUNCTION_7_83(v72);
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_88_11();
    uint64_t v73 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v73))
    {
      uint64_t v74 = (_WORD *)OUTLINED_FUNCTION_1_0();
      *uint64_t v74 = 0;
      OUTLINED_FUNCTION_17_27( &dword_0,  v37,  (os_log_type_t)v69,  "#VoiceOnlyEmergencyConfirmationFlow emergency call reprompt. Handling request.");
      OUTLINED_FUNCTION_0_2((uint64_t)v74);
    }

    uint64_t v66 = *(uint64_t (**)(void))(*v4 + 160LL);
    goto LABEL_39;
  }

  if (v70)
  {
    uint64_t v79 = (_WORD *)OUTLINED_FUNCTION_1_0();
    *uint64_t v79 = 0;
    OUTLINED_FUNCTION_17_27( &dword_0,  v37,  (os_log_type_t)v69,  "#VoiceOnlyEmergencyConfirmationFlow input received is of wrong type");
    OUTLINED_FUNCTION_0_2((uint64_t)v79);
  }

  OUTLINED_FUNCTION_41_36(*(uint64_t (**)(void))(*v4 + 160LL));
  uint64_t v67 = OUTLINED_FUNCTION_32_47(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
LABEL_51:
  uint64_t v31 = v4;
  if ((*(unsigned __int8 (**)(uint64_t))(*v4 + 152LL))(v67) <= 2u)
  {
    OUTLINED_FUNCTION_41_36(*(uint64_t (**)(void))(*v4 + 136LL));
    return 1LL;
  }

  uint64_t v32 = (os_log_s *)OUTLINED_FUNCTION_88_11();
  uint64_t v78 = static os_log_type_t.debug.getter(v32, v77);
  if (OUTLINED_FUNCTION_10(v78))
  {
    uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "#StartCallConfirmIntentStrategy not emergency call reprompt";
LABEL_55:
    _os_log_impl(&dword_0, v32, v31, v35, v34, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v34);
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_20(v71, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_7_5();
}

void *specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:)( uint64_t a1, int a2, void *a3)
{
  int v128 = a2;
  uint64_t v139 = type metadata accessor for UsoEntity_common_Quantifier.DefinedValues(0LL);
  uint64_t v132 = *(void *)(v139 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v117 = v5;
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_Quantifier.DefinedValues?, UsoEntity_common_Quantifier.DefinedValues?));
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v136 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v119 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v111 - v8;
  __chkstk_darwin();
  uint64_t v121 = (char *)&v111 - v10;
  uint64_t v137 = type metadata accessor for UsoEntity_common_SearchQualifier.DefinedValues(0LL);
  uint64_t v130 = *(void *)(v137 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v116 = v11;
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_SearchQualifier.DefinedValues?, UsoEntity_common_SearchQualifier.DefinedValues?));
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v133 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v120 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v135 = (uint64_t)&v111 - v14;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v134 = (char *)&v111 - v15;
  uint64_t v16 = type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues(0LL);
  uint64_t v129 = *(void *)(v16 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v114 = v17;
  uint64_t v124 = (char *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?));
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v125 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v20 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v111 - v21;
  __chkstk_darwin();
  uint64_t v24 = (char *)&v111 - v23;
  v151[3] = type metadata accessor for UsoEntity_common_Agent(0LL);
  v151[4] = &protocol witness table for UsoEntity_common_Agent;
  v151[0] = a1;
  int v138 = a3;
  a3[8] = 0LL;
  uint64_t v25 = (uint64_t)(a3 + 8);
  *(_BYTE *)(v25 - 48) = 38;
  uint64_t v118 = (_BYTE *)(v25 - 48);
  *(_OWORD *)(v25 - 24) = 0u;
  uint64_t v115 = v25 - 24;
  *(_OWORD *)(v25 - 40) = 0u;
  *(_BYTE *)(v25 - 8) = 0;
  *(void *)(v25 + 8) = 0LL;
  *(void *)(v25 + 16) = 0LL;
  *(void *)(v25 + 24) = 1LL;
  uint64_t v122 = v25 + 208;
  bzero((void *)(v25 + 32), 0xB8uLL);
  *(void *)(v25 + 216) = 3LL;
  *(_DWORD *)(v25 + 224) = 33554435;
  *(_BYTE *)(v25 + 228) = 0;
  uint64_t v123 = v25 + 232;
  *(void *)(v25 + 232) = &_swiftEmptySetSingleton;
  *(_OWORD *)(v25 + 240) = 0u;
  *(_OWORD *)(v25 + 256) = 0u;
  *(void *)(v25 + 272) = 0LL;
  *(_WORD *)(v25 + 280) = 1023;
  UsoEntity_common_Agent.identifyingRelationship.getter();
  uint64_t v131 = v9;
  if (v26)
  {
    CodeGenBase.entity.getter(v26);
    OUTLINED_FUNCTION_38_1();
    type metadata accessor for UsoEntity_common_PersonRelationship(0LL);
    uint64_t v27 = OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_6_32(v27);
    OUTLINED_FUNCTION_31_2();
    if (v145[0])
    {
      uint64_t v112 = v25 + 160;
      UsoEntity_common_PersonRelationship.relationshipIdentifierOrLabel.getter();
      char v28 = v22;
      uint64_t v30 = v29;
      char v113 = v24;
      uint64_t v31 = v20;
      uint64_t v33 = v32;
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_31_2();
      uint64_t v34 = v138;
      OUTLINED_FUNCTION_3_3(v112, (uint64_t)&v140);
      v34[28] = v30;
      v34[29] = v33;
      uint64_t v22 = v28;
      uint64_t v20 = v31;
      uint64_t v24 = v113;
      swift_bridgeObjectRelease();
    }

    else
    {
      OUTLINED_FUNCTION_31_2();
    }
  }

  uint64_t v35 = specialized UsoContactConvertible.emergencyType.getter();
  uint64_t v37 = v36;
  OUTLINED_FUNCTION_3_3(v122, (uint64_t)v150);
  uint64_t v38 = v138;
  uint64_t v39 = v138[34];
  unint64_t v40 = v138[35];
  v138[34] = v35;
  v38[35] = v37;
  outlined consume of PhoneCallEmergencyType?(v39, v40);
  uint64_t v41 = specialized UsoContactConvertible.vocabularyAppsBundleSet.getter();
  OUTLINED_FUNCTION_3_3(v123, (uint64_t)v149);
  v38[37] = v41;
  uint64_t v42 = swift_bridgeObjectRelease();
  uint64_t v43 = dispatch thunk of UsoEntity_common_Agent.name.getter(v42);
  uint64_t v45 = v44;
  OUTLINED_FUNCTION_3_3(v25, (uint64_t)v148);
  v38[8] = v43;
  v38[9] = v45;
  uint64_t v46 = swift_bridgeObjectRelease();
  if (dispatch thunk of CodeGenGlobalArgs.usoReferenceType.getter(v46))
  {
    dispatch thunk of UsoEntity_common_ReferenceType.definedValue.getter();
    OUTLINED_FUNCTION_38_1();
  }

  else
  {
    OUTLINED_FUNCTION_34_13((uint64_t)v24, 1LL);
  }

  uint64_t v47 = (uint64_t)v134;
  uint64_t v48 = v125;
  (*(void (**)(char *, void, uint64_t))(v129 + 104))( v22,  enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:),  v16);
  OUTLINED_FUNCTION_34_13((uint64_t)v22, 0LL);
  uint64_t v49 = v48 + *((int *)v124 + 12);
  OUTLINED_FUNCTION_19_17((uint64_t)v24, v48);
  OUTLINED_FUNCTION_19_17((uint64_t)v22, v49);
  OUTLINED_FUNCTION_35(v48, 1LL, v16);
  if (v51)
  {
    OUTLINED_FUNCTION_3((uint64_t)v22);
    OUTLINED_FUNCTION_3((uint64_t)v24);
    OUTLINED_FUNCTION_35(v49, 1LL, v16);
    if (v51)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v48,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
      uint64_t v50 = v133;
LABEL_18:
      uint64_t v59 = v118;
      uint64_t v58 = OUTLINED_FUNCTION_3_3((uint64_t)v118, (uint64_t)&v141);
      *uint64_t v59 = 31;
      goto LABEL_19;
    }

LABEL_16:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v48,  &demangling cache variable for type metadata for (UsoEntity_common_ReferenceType.DefinedValues?, UsoEntity_common_ReferenceType.DefinedValues?));
    uint64_t v50 = v133;
    goto LABEL_19;
  }

  outlined init with copy of Result<TemplatingResult, Error>( v48,  (uint64_t)v20,  &demangling cache variable for type metadata for UsoEntity_common_ReferenceType.DefinedValues?);
  OUTLINED_FUNCTION_35(v49, 1LL, v16);
  if (v51)
  {
    OUTLINED_FUNCTION_9_19((uint64_t)v22);
    OUTLINED_FUNCTION_9_19((uint64_t)v24);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v20, v16);
    goto LABEL_16;
  }

  uint64_t v52 = v129;
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 32);
  uint64_t v124 = v22;
  uint64_t v54 = v20;
  uint64_t v55 = v114;
  v53(v114, v49, v16);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_ReferenceType.DefinedValues and conformance UsoEntity_common_ReferenceType.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_ReferenceType.DefinedValues);
  char v56 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v55, v16);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v57(v55, v16);
  OUTLINED_FUNCTION_3((uint64_t)v124);
  OUTLINED_FUNCTION_3((uint64_t)v24);
  v57((uint64_t)v54, v16);
  uint64_t v47 = (uint64_t)v134;
  OUTLINED_FUNCTION_3(v48);
  uint64_t v50 = v133;
  if ((v56 & 1) != 0) {
    goto LABEL_18;
  }
LABEL_19:
  uint64_t v60 = dispatch thunk of UsoEntity_common_Agent.specifyingContactAddress.getter(v58);
  if (v60)
  {
    CodeGenBase.entity.getter(v60);
    OUTLINED_FUNCTION_38_1();
    type metadata accessor for UsoEntity_common_PhoneNumber(0LL);
    uint64_t v61 = OUTLINED_FUNCTION_31_13();
    OUTLINED_FUNCTION_6_32(v61);
    uint64_t v62 = OUTLINED_FUNCTION_76();
    if (v145[0])
    {
      uint64_t v63 = dispatch thunk of UsoEntity_common_PhoneNumber.value.getter(v62);
      uint64_t v65 = OUTLINED_FUNCTION_22_14(v63, v64);
      if (v50)
      {
        uint64_t v66 = dispatch thunk of UsoEntity_common_PhoneNumber.value.getter(v65);
        uint64_t v68 = v67;
        OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_3_3(v25 + 144, (uint64_t)&v142);
        char v69 = v138;
        v138[26] = v66;
        v69[27] = v68;
        swift_bridgeObjectRelease();
      }

      else
      {
        OUTLINED_FUNCTION_38_1();
      }

      uint64_t v50 = v133;
    }

    type metadata accessor for UsoEntity_common_EmailAddress(0LL);
    uint64_t v70 = OUTLINED_FUNCTION_31_13();
    OUTLINED_FUNCTION_6_32(v70);
    uint64_t v71 = OUTLINED_FUNCTION_76();
    if (v145[0])
    {
      uint64_t v72 = dispatch thunk of UsoEntity_common_EmailAddress.value.getter(v71);
      uint64_t v74 = OUTLINED_FUNCTION_22_14(v72, v73);
      if (v50)
      {
        uint64_t v75 = dispatch thunk of UsoEntity_common_EmailAddress.value.getter(v74);
        uint64_t v77 = v76;
        OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_76();
        OUTLINED_FUNCTION_3_3(v115, (uint64_t)&v143);
        uint64_t v78 = v138;
        v138[5] = v75;
        v78[6] = v77;
        swift_bridgeObjectRelease();
      }

      else
      {
        OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_76();
      }

      uint64_t v50 = v133;
    }

    else
    {
      OUTLINED_FUNCTION_76();
    }

    uint64_t v47 = (uint64_t)v134;
  }

  if (dispatch thunk of CodeGenGlobalArgs.usoSearchQualifier.getter())
  {
    dispatch thunk of UsoEntity_common_SearchQualifier.definedValue.getter();
    OUTLINED_FUNCTION_38_1();
  }

  else
  {
    __swift_storeEnumTagSinglePayload(v47, 1LL, 1LL, v137);
  }

  uint64_t v79 = v135;
  uint64_t v80 = v137;
  (*(void (**)(uint64_t, void, uint64_t))(v130 + 104))( v135,  enum case for UsoEntity_common_SearchQualifier.DefinedValues.common_SearchQualifier_Exactly(_:),  v137);
  __swift_storeEnumTagSinglePayload(v79, 0LL, 1LL, v80);
  uint64_t v81 = v50 + *(int *)(v126 + 48);
  OUTLINED_FUNCTION_19_17(v47, v50);
  OUTLINED_FUNCTION_19_17(v79, v81);
  OUTLINED_FUNCTION_35(v50, 1LL, v80);
  if (v51)
  {
    OUTLINED_FUNCTION_3(v135);
    OUTLINED_FUNCTION_3(v47);
    OUTLINED_FUNCTION_35(v81, 1LL, v137);
    if (v51)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v50,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
      __int16 v82 = 256;
      goto LABEL_47;
    }

    char v56 = (v28 - 1) & v28;
    uint64_t v57 = v29;
  }

  uint64_t v30 = v21 + 3;
  if (v21 + 3 >= v45)
  {
LABEL_19:
    unint64_t v40 = v53;
    swift_release(v53);
    uint64_t v41 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))Dictionary.isEmpty.getter)(v40, v55, v54, v43);
    swift_bridgeObjectRelease();
    return (v41 & 1) == 0;
  }

  char v28 = *(void *)(v44 + 8 * v30);
  if (v28)
  {
    uint64_t v29 = v21 + 3;
    goto LABEL_16;
  }

  while (1)
  {
    uint64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1LL)) {
      break;
    }
    if (v29 >= v45) {
      goto LABEL_19;
    }
    char v28 = *(void *)(v44 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_16;
    }
  }

  swift_task_dealloc(*(void *)(v0 + 88));
  return (*(uint64_t (**)(BOOL))(v0 + 8))((v10 & 1) == 0);
}

      OUTLINED_FUNCTION_17_25((void *)(v2 + 88));
      char v28 = OUTLINED_FUNCTION_95_3();
      uint64_t v30 = v29(v28);
      uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)v30 + 144LL))(v30);
      swift_release(v30);
      OUTLINED_FUNCTION_70_4();
      if ((v31 & 1) != 0)
      {
        uint64_t v30 = OUTLINED_FUNCTION_79_3((void *)(v0 + 56));
        OUTLINED_FUNCTION_90();
        if ((v30 & 1) != 0)
        {
          uint64_t v32 = *(void *)(v0 + 424);
          uint64_t v30 = *(void *)(v32 + 176);
          if (v30)
          {
            ObjectType = swift_getObjectType(*(void *)(v32 + 176));
            if (dynamic_cast_existential_1_conditional( v30,  ObjectType,  (uint64_t)&protocol descriptor for CallingIntent))
            {
              if (one-time initialization token for siriPhone != -1) {
                swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
              }
              uint64_t v34 = OUTLINED_FUNCTION_15_1();
              OUTLINED_FUNCTION_12_1(v34, (uint64_t)static Logger.siriPhone);
              uint64_t v35 = OUTLINED_FUNCTION_6_0();
              if (OUTLINED_FUNCTION_27_1(v35))
              {
                uint64_t v36 = (_WORD *)OUTLINED_FUNCTION_1_0();
                OUTLINED_FUNCTION_47(v36);
                OUTLINED_FUNCTION_5_13( &dword_0,  v37,  v38,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupported on deviceType on AppleT V with FaceTime punchout");
                OUTLINED_FUNCTION_8_33();
              }

              outlined init with copy of SharedGlobalsProviding(v2 + 88, v0 + 136);
              type metadata accessor for StartCallCATs(0LL);
              OUTLINED_FUNCTION_55_0();
              uint64_t v39 = OUTLINED_FUNCTION_97_4();
              type metadata accessor for StartCallCATsSimple(0LL);
              OUTLINED_FUNCTION_55_0();
              unint64_t v40 = OUTLINED_FUNCTION_96();
              type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
              OUTLINED_FUNCTION_55_0();
              uint64_t v41 = OUTLINED_FUNCTION_96();
              type metadata accessor for UnsupportedFlowCATs(0LL);
              OUTLINED_FUNCTION_55_0();
              uint64_t v42 = OUTLINED_FUNCTION_97_4();
              uint64_t v43 = type metadata accessor for UnsupportedFaceTimeOutputProvider();
              uint64_t v44 = OUTLINED_FUNCTION_8_2(v43, 136LL);
              uint64_t v45 = specialized UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( 12,  (__int128 *)(v0 + 136),  v39,  v40,  v41,  v42,  0LL,  0LL,  0LL,  0LL,  v44);
              *(void *)(v0 + 816) = v45;
              uint64_t v46 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(*(void *)v45 + 152LL));
              *(void *)(v0 + 824) = v46;
              *uint64_t v46 = v0;
              v46[1] = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
              OUTLINED_FUNCTION_41_14();
              __asm { BR              X1 }
            }
          }
        }
      }

      else
      {
        OUTLINED_FUNCTION_90();
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v73 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v73, (uint64_t)static Logger.siriPhone);
      uint64_t v74 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled((os_log_t)v30, v74))
      {
        uint64_t v75 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v75 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v30,  v74,  "#UnsupportedCallFlowOutputFactory makeUnsupportedOutput: returning unsupported on deviceType",  v75);
        OUTLINED_FUNCTION_0_2((uint64_t)v75);
      }

      uint64_t v76 = *(void *)(v0 + 424);

      uint64_t v77 = *(void **)(v76 + 40);
      OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_70_4();
      *(void *)(v0 + 840) = SirikitDeviceState.__allocating_init(from:)(v0 + 96);
      uint64_t v78 = (void *)OUTLINED_FUNCTION_13_34(*(void *)(class metadata base offset for UnsupportedFlowCATsSimple
                                                        + *v77
                                                        + 96));
      *(void *)(v0 + 848) = v78;
      void *v78 = v0;
      v78[1] = UnsupportedCallFlowOutputFactory.makeUnsupportedOutput();
      OUTLINED_FUNCTION_41_14();
      __asm { BR              X1 }

      return;
  }

      swift_bridgeObjectRelease();
    }
  }

          uint64_t v9 = v124;
          if ((uint64_t)v19 < (uint64_t)v129)
          {
            if (v7 < v13) {
              goto LABEL_141;
            }
            if (v13 < v7)
            {
              uint64_t v34 = (uint64_t *)(v121 + 8 * v7);
              uint64_t v35 = v7;
              uint64_t v36 = v13;
              uint64_t v37 = (uint64_t *)(v8 + 8 * v13);
              do
              {
                if (v36 != --v35)
                {
                  if (!v8) {
                    goto LABEL_151;
                  }
                  uint64_t v38 = *v37;
                  *uint64_t v37 = *v34;
                  *uint64_t v34 = v38;
                }

                ++v36;
                --v34;
                ++v37;
              }

              while (v36 < v35);
            }
          }
        }

        if (v7 < v128)
        {
          if (__OFSUB__(v7, v13)) {
            goto LABEL_138;
          }
          if (v7 - v13 < v123)
          {
            if (__OFADD__(v13, v123)) {
              goto LABEL_142;
            }
            uint64_t v39 = v128;
            if (v13 + v123 < v128) {
              uint64_t v39 = v13 + v123;
            }
            if (v39 < v13)
            {
LABEL_143:
              __break(1u);
              goto LABEL_144;
            }

            if (v7 != v39)
            {
              uint64_t v125 = v9;
              uint64_t v126 = v39;
              unint64_t v40 = v121 + 8 * v7;
              do
              {
                uint64_t v41 = *(void **)(v8 + 8 * v7);
                uint64_t v130 = v40;
                while (1)
                {
                  uint64_t v42 = *(void **)v40;
                  uint64_t v43 = v41;
                  uint64_t v44 = v42;
                  uint64_t v45 = [v43 rank];
                  if (!v45) {
                    goto LABEL_145;
                  }
                  uint64_t v46 = v45;
                  uint64_t v11 = &CameraControlFlow.base_props;
                  uint64_t v47 = [v45 integerValue];

                  uint64_t v48 = [v44 rank];
                  if (!v48) {
                    goto LABEL_146;
                  }
                  uint64_t v49 = v48;
                  uint64_t v50 = [v48 integerValue];

                  uint64_t v8 = v133;
                  if (!v133) {
                    goto LABEL_147;
                  }
                  char v51 = *(void **)v40;
                  uint64_t v41 = *(void **)(v40 + 8);
                  *(void *)unint64_t v40 = v41;
                  *(void *)(v40 + 8) = v51;
                  v40 -= 8LL;
                  if (v7 == ++v13) {
                    goto LABEL_41;
                  }
                }

                uint64_t v8 = v133;
LABEL_41:
                ++v7;
                unint64_t v40 = v130 + 8;
                uint64_t v13 = v127;
              }

              while (v7 != v126);
              uint64_t v7 = v126;
              uint64_t v9 = v125;
            }
          }
        }

        if (v7 < v13) {
          goto LABEL_137;
        }
        uint64_t v52 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) != 0) {
          uint64_t v9 = v52;
        }
        else {
          uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  *((void *)v52 + 2) + 1LL,  1,  v52);
        }
        uint64_t v54 = *((void *)v9 + 2);
        uint64_t v53 = *((void *)v9 + 3);
        uint64_t v55 = v54 + 1;
        uint64_t v8 = v133;
        if (v54 >= v53 >> 1)
        {
          uint64_t v104 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( (char *)(v53 > 1),  v54 + 1,  1,  v9);
          uint64_t v8 = v133;
          uint64_t v9 = v104;
        }

        *((void *)v9 + 2) = v55;
        char v56 = v9 + 32;
        uint64_t v57 = &v9[16 * v54 + 32];
        *(void *)uint64_t v57 = v127;
        *((void *)v57 + 1) = v7;
        if (v54)
        {
          while (1)
          {
            uint64_t v58 = v55 - 1;
            if (v55 >= 4)
            {
              uint64_t v63 = &v56[16 * v55];
              uint64_t v64 = *((void *)v63 - 8);
              uint64_t v65 = *((void *)v63 - 7);
              char v69 = __OFSUB__(v65, v64);
              uint64_t v66 = v65 - v64;
              if (v69) {
                goto LABEL_122;
              }
              uint64_t v68 = *((void *)v63 - 6);
              uint64_t v67 = *((void *)v63 - 5);
              char v69 = __OFSUB__(v67, v68);
              uint64_t v61 = v67 - v68;
              uint64_t v62 = v69;
              if (v69) {
                goto LABEL_123;
              }
              uint64_t v70 = v55 - 2;
              uint64_t v71 = &v56[16 * v55 - 32];
              uint64_t v73 = *(void *)v71;
              uint64_t v72 = *((void *)v71 + 1);
              char v69 = __OFSUB__(v72, v73);
              uint64_t v74 = v72 - v73;
              if (v69) {
                goto LABEL_124;
              }
              char v69 = __OFADD__(v61, v74);
              uint64_t v75 = v61 + v74;
              if (v69) {
                goto LABEL_126;
              }
              if (v75 >= v66)
              {
                uint64_t v93 = &v56[16 * v58];
                uint64_t v95 = *(void *)v93;
                uint64_t v94 = *((void *)v93 + 1);
                char v69 = __OFSUB__(v94, v95);
                uint64_t v96 = v94 - v95;
                if (v69) {
                  goto LABEL_132;
                }
                uint64_t v86 = v61 < v96;
                goto LABEL_80;
              }
            }

            else
            {
              if (v55 != 3)
              {
                uint64_t v87 = *((void *)v9 + 4);
                char v88 = *((void *)v9 + 5);
                char v69 = __OFSUB__(v88, v87);
                uint64_t v80 = v88 - v87;
                uint64_t v81 = v69;
                goto LABEL_74;
              }

              uint64_t v60 = *((void *)v9 + 4);
              uint64_t v59 = *((void *)v9 + 5);
              char v69 = __OFSUB__(v59, v60);
              uint64_t v61 = v59 - v60;
              uint64_t v62 = v69;
            }

            if ((v62 & 1) != 0) {
              goto LABEL_125;
            }
            uint64_t v70 = v55 - 2;
            uint64_t v76 = &v56[16 * v55 - 32];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            uint64_t v79 = __OFSUB__(v77, v78);
            uint64_t v80 = v77 - v78;
            uint64_t v81 = v79;
            if (v79) {
              goto LABEL_127;
            }
            __int16 v82 = &v56[16 * v58];
            uint64_t v84 = *(void *)v82;
            char v83 = *((void *)v82 + 1);
            char v69 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v69) {
              goto LABEL_129;
            }
            if (__OFADD__(v80, v85)) {
              goto LABEL_131;
            }
            if (v80 + v85 >= v61)
            {
              uint64_t v86 = v61 < v85;
LABEL_80:
              if (v86) {
                uint64_t v58 = v70;
              }
              goto LABEL_82;
            }

          if (v4 == ++v5)
          {
            swift_bridgeObjectRelease();
            uint64_t v2 = v32;
            goto LABEL_27;
          }
        }

        uint64_t v10 = swift_release(v7);
LABEL_13:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        uint64_t v12 = *(void *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFFF8LL));
        uint64_t v11 = *(void *)((char *)&dword_18 + (v32 & 0xFFFFFFFFFFFFFF8LL));
        if (v12 >= v11 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1LL);
        }
        uint64_t v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
        specialized Array._endMutation()(v13, v14, v15, v16);
        goto LABEL_16;
      }

      __break(1u);
      goto LABEL_43;
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_27:
  swift_bridgeObjectRelease();
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL));
    if (v19) {
      goto LABEL_29;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    return v19;
  }

  if (v2 < 0) {
    char v28 = v2;
  }
  else {
    char v28 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_40;
  }
LABEL_29:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v2 & 0xC000000000000001LL) == 0, v2);
  if ((v2 & 0xC000000000000001LL) != 0)
  {
LABEL_43:
    uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
    goto LABEL_31;
  }

  uint64_t v20 = *(void *)(v2 + 32);
  swift_retain();
LABEL_31:
  uint64_t v21 = swift_bridgeObjectRelease();
  uint64_t v19 = CodeGenBase.entity.getter(v21);
  swift_release(v20);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v22 = type metadata accessor for Logger(0LL);
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  uint64_t v26 = static os_log_type_t.debug.getter(v24, v25);
  if (os_log_type_enabled(v24, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_0, v24, v26, "#DisambiguationReferenceResolver Found agent entity, passing to SRR", v27, 2u);
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  return v19;
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  uint64_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl( &dword_0,  v19,  v20,  "#EmergencyDuringOngoingCallPromptType Intent and resolutionResult do not correspond to an emergency usecase.",  v21,  2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  return 0LL;
}

  OUTLINED_FUNCTION_7_1();
}

LABEL_43:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v50,  &demangling cache variable for type metadata for (UsoEntity_common_SearchQualifier.DefinedValues?, UsoEntity_common_SearchQualifier.DefinedValues?));
    __int16 v82 = 0;
    goto LABEL_47;
  }

  outlined init with copy of Result<TemplatingResult, Error>( v50,  v120,  &demangling cache variable for type metadata for UsoEntity_common_SearchQualifier.DefinedValues?);
  OUTLINED_FUNCTION_35(v81, 1LL, v137);
  if (v83)
  {
    OUTLINED_FUNCTION_9_19(v135);
    OUTLINED_FUNCTION_9_19(v47);
    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v120, v137);
    goto LABEL_43;
  }

  uint64_t v84 = v130;
  uint64_t v85 = v120;
  uint64_t v86 = v116;
  uint64_t v87 = v137;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 32))(v116, v81, v137);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_SearchQualifier.DefinedValues and conformance UsoEntity_common_SearchQualifier.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_SearchQualifier.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_SearchQualifier.DefinedValues);
  char v88 = OUTLINED_FUNCTION_30_11(v85, v86);
  uint64_t v89 = v47;
  uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v90(v86, v87);
  OUTLINED_FUNCTION_3(v135);
  OUTLINED_FUNCTION_3(v89);
  v90(v85, v87);
  OUTLINED_FUNCTION_3(v50);
  if ((v88 & 1) != 0) {
    __int16 v82 = 256;
  }
  else {
    __int16 v82 = 0;
  }
LABEL_47:
  uint64_t v91 = (uint64_t)v121;
  uint64_t v92 = v25 + 240;
  if (UsoEntity_common_Agent.asCommonPerson()()
    && (uint64_t v93 = dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter(), v94 = OUTLINED_FUNCTION_76(), v93))
  {
    dispatch thunk of UsoEntity_common_Quantifier.definedValue.getter(v94);
    OUTLINED_FUNCTION_38_1();
  }

  else
  {
    __swift_storeEnumTagSinglePayload(v91, 1LL, 1LL, v139);
  }

  uint64_t v95 = v25 + 226;
  uint64_t v96 = (uint64_t)v131;
  uint64_t v97 = v139;
  (*(void (**)(char *, void, uint64_t))(v132 + 104))( v131,  enum case for UsoEntity_common_Quantifier.DefinedValues.common_Quantifier_None(_:),  v139);
  __swift_storeEnumTagSinglePayload(v96, 0LL, 1LL, v97);
  uint64_t v98 = v136;
  uint64_t v99 = v136 + *(int *)(v127 + 48);
  OUTLINED_FUNCTION_35_9(v91, v136);
  OUTLINED_FUNCTION_35_9(v96, v99);
  OUTLINED_FUNCTION_35(v98, 1LL, v97);
  if (v51)
  {
    OUTLINED_FUNCTION_13_5(v96);
    OUTLINED_FUNCTION_13_5(v91);
    OUTLINED_FUNCTION_35(v99, 1LL, v139);
    if (v51)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v136,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
      int v100 = 0x10000;
      goto LABEL_63;
    }

  __break(1u);
}

  __break(1u);
  return result;
}

          outlined consume of [String : Any].Iterator._Variant(v1);
          return;
        }
      }
    }

    OUTLINED_FUNCTION_7_4(v38);
  }

  v36(v9, v26);
  OUTLINED_FUNCTION_7_5();
  return result;
}

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

  if ((_DWORD)v123) {
LABEL_44:
  }
    OUTLINED_FUNCTION_78_21(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_contactIds);
LABEL_4:
  uint64_t v31 = type metadata accessor for PhoneCallRecord(0LL);
  swift_deallocPartialClassInstance( v29,  v31,  *(unsigned int *)(*(void *)v29 + 48LL),  *(unsigned __int16 *)(*(void *)v29 + 52LL));
  __swift_destroy_boxed_opaque_existential_1(v30);
  return v29;
}

LABEL_59:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v136,  &demangling cache variable for type metadata for (UsoEntity_common_Quantifier.DefinedValues?, UsoEntity_common_Quantifier.DefinedValues?));
    int v100 = 0;
    goto LABEL_63;
  }

  uint64_t v101 = v119;
  outlined init with copy of Result<TemplatingResult, Error>( v136,  v119,  &demangling cache variable for type metadata for UsoEntity_common_Quantifier.DefinedValues?);
  OUTLINED_FUNCTION_35(v99, 1LL, v139);
  if (v102)
  {
    OUTLINED_FUNCTION_9_19((uint64_t)v131);
    OUTLINED_FUNCTION_9_19(v91);
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v101, v139);
    goto LABEL_59;
  }

  uint64_t v103 = v91;
  uint64_t v104 = v132;
  uint64_t v105 = v117;
  uint64_t v106 = v139;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32))(v117, v99, v139);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_Quantifier.DefinedValues and conformance UsoEntity_common_Quantifier.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_Quantifier.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_Quantifier.DefinedValues);
  char v107 = OUTLINED_FUNCTION_30_11(v101, v105);
  uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
  v108(v105, v106);
  OUTLINED_FUNCTION_13_5((uint64_t)v131);
  OUTLINED_FUNCTION_13_5(v103);
  v108(v101, v106);
  OUTLINED_FUNCTION_13_5(v136);
  if ((v107 & 1) != 0) {
    int v100 = 0x10000;
  }
  else {
    int v100 = 0;
  }
LABEL_63:
  __int16 v109 = v82 | v128 | (unsigned __int16)v100;
  OUTLINED_FUNCTION_3_3(v95, (uint64_t)v147);
  *(_BYTE *)(v95 + 2) = BYTE2(v100);
  *(_WORD *)uint64_t v95 = v109;
  outlined init with copy of SignalProviding((uint64_t)v151, (uint64_t)v145);
  char v146 = 2;
  swift_beginAccess(v92, v144, 33LL, 0LL);
  outlined assign with take of BackingContact?((uint64_t)v145, v92);
  swift_endAccess(v144);
  __swift_destroy_boxed_opaque_existential_1(v151);
  return v138;
}

  uint64_t v147 = (os_log_s *)a1[3];
  OUTLINED_FUNCTION_49_0(a1);
  uint64_t v148 = v122;
  uint64_t v149 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  INStartCallIntent.updateIsGroupCall(isGroupCall:)(v149);

  OUTLINED_FUNCTION_12_51();
  uint64_t v150 = OUTLINED_FUNCTION_41();
  if (os_log_type_enabled(v147, v150))
  {
    v151 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v152 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)v151 = 138412290;
    uint64_t v153 = v186;
    int v184 = (uint64_t)v186;
    uint64_t v154 = v186;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185, v151 + 4);
    *uint64_t v152 = v153;
    uint64_t v127 = v171;
    OUTLINED_FUNCTION_57_0(&dword_0, v147, v150, "#INStartCallIntentConversion ends with %@", v151);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v152);
    OUTLINED_FUNCTION_0_2((uint64_t)v152);
    OUTLINED_FUNCTION_0_2((uint64_t)v151);
  }

  uint64_t v155 = OUTLINED_FUNCTION_24_24();
  v156(v155, v110);
  OUTLINED_FUNCTION_11_48(v182, *(uint64_t (**)(uint64_t, void))(v173 + 8));
  OUTLINED_FUNCTION_11_48(v180, *(uint64_t (**)(uint64_t, void))(v172 + 8));
  OUTLINED_FUNCTION_11_48(v179, *(uint64_t (**)(uint64_t, void))(v127 + 8));
  OUTLINED_FUNCTION_7_58();
  uint64_t v27 = (uint64_t)v186;
  __swift_destroy_boxed_opaque_existential_1(v192);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1(v193);
  return v27;
}

void UsoEntity_common_Agent.identifyingRelationship.getter()
{
  if (UsoEntity_common_Agent.asCommonPerson()())
  {
    dispatch thunk of UsoEntity_common_Person.identifyingRelationship.getter();
    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_2();
}

uint64_t specialized UsoContactConvertible.emergencyType.getter()
{
  uint64_t v106 = type metadata accessor for IdentifierValue(0LL);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin();
  uint64_t v104 = (char *)&v101 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for IdentifierNamespace(0LL);
  uint64_t v122 = *(void *)(v2 - 8);
  __chkstk_darwin();
  __int16 v109 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
  __chkstk_darwin();
  uint64_t v5 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v101 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IdentifierNamespace?);
  __chkstk_darwin();
  char v107 = (void **)((char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin();
  uint64_t v10 = (char *)&v101 - v9;
  __chkstk_darwin();
  uint64_t v118 = (uint64_t)&v101 - v11;
  __chkstk_darwin();
  uint64_t v108 = (uint64_t)&v101 - v12;
  __chkstk_darwin();
  uint64_t v110 = (char *)&v101 - v13;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v101 - v14;
  uint64_t v16 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v121 = (char *)&v101 - v20;
  v127[0] = _swiftEmptyArrayStorage;
  uint64_t v21 = specialized UsoContactConvertible.nameIdentifiers.getter();
  uint64_t v22 = v21[2];
  uint64_t v117 = v15;
  uint64_t v112 = v16;
  uint64_t v120 = v17;
  uint64_t v103 = v0;
  if (v22)
  {
    char v102 = v7;
    unint64_t v23 = (*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v101 = v21;
    uint64_t v24 = (char *)v21 + v23;
    uint64_t v116 = *(uint64_t (**)(char *, char *, uint64_t))(v17 + 72);
    uint64_t v115 = *(uint64_t (**)(char *, char *, uint64_t))(v17 + 16);
    unsigned int v114 = enum case for IdentifierNamespace.nsEmergencyOrganization(_:);
    char v113 = v19;
    while (1)
    {
      uint64_t v25 = v16;
      uint64_t v26 = v115(v19, v24, v16);
      uint64_t v27 = v118;
      UsoIdentifier.namespaceSemantic.getter(v26);
      (*(void (**)(char *, void, uint64_t))(v122 + 104))(v10, v114, v2);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0LL, 1LL, v2);
      uint64_t v28 = (uint64_t)&v5[*(int *)(v119 + 48)];
      outlined init with copy of Result<TemplatingResult, Error>( v27,  (uint64_t)v5,  &demangling cache variable for type metadata for IdentifierNamespace?);
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v10,  v28,  &demangling cache variable for type metadata for IdentifierNamespace?);
      uint64_t v30 = (uint64_t)v107;
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v5,  (uint64_t)v107,  &demangling cache variable for type metadata for IdentifierNamespace?);
      if (__swift_getEnumTagSinglePayload(v28, 1LL, v2) == 1)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  &demangling cache variable for type metadata for IdentifierNamespace?);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v118,  &demangling cache variable for type metadata for IdentifierNamespace?);
        (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v30, v2);
        uint64_t v15 = v117;
LABEL_8:
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v5,  &demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
        uint64_t v16 = v25;
        uint64_t v19 = v113;
LABEL_15:
        uint64_t v36 = v120;
        goto LABEL_16;
      }

      uint64_t v31 = v122;
      uint64_t v32 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v122 + 32))(v109, v28, v2);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type IdentifierNamespace and conformance IdentifierNamespace,  (uint64_t (*)(uint64_t))&type metadata accessor for IdentifierNamespace,  (uint64_t)&protocol conformance descriptor for IdentifierNamespace);
      char v33 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v32, v2);
      uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      uint64_t v35 = v32;
      uint64_t v16 = v112;
      v34(v35, v2);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  &demangling cache variable for type metadata for IdentifierNamespace?);
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v118,  &demangling cache variable for type metadata for IdentifierNamespace?);
      v34((char *)v30, v2);
      uint64_t v36 = v120;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v5,  &demangling cache variable for type metadata for IdentifierNamespace?);
      uint64_t v15 = v117;
      uint64_t v19 = v113;
      if ((v33 & 1) != 0) {
        goto LABEL_10;
      }
LABEL_16:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v16);
      uint64_t v24 = (char *)v116 + (void)v24;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v102;
        goto LABEL_19;
      }
    }

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  &demangling cache variable for type metadata for IdentifierNamespace?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v27,  &demangling cache variable for type metadata for IdentifierNamespace?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v5,  &demangling cache variable for type metadata for IdentifierNamespace?);
    uint64_t v19 = v113;
LABEL_10:
    uint64_t v37 = UsoIdentifier.value.getter(v29);
    uint64_t v39 = v38;
    uint64_t v40 = v127[0];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v127[0]);
    *(void *)&__int128 v111 = v39;
    uint64_t v42 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v40 = v46;
    }

    unint64_t v43 = *(void *)(v40 + 16);
    if (v43 >= *(void *)(v40 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v40 = v47;
    }

    *(void *)(v40 + 16) = v43 + 1;
    uint64_t v44 = v40 + 16 * v43;
    uint64_t v45 = v111;
    *(void *)(v44 + 32) = v42;
    *(void *)(v44 + 40) = v45;
    v127[0] = v40;
    uint64_t v15 = v117;
    uint64_t v16 = v112;
    goto LABEL_15;
  }

  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v48 = specialized UsoContactConvertible.nameIdentifiers.getter();
  uint64_t v49 = v48[2];
  uint64_t v50 = (uint64_t)v110;
  if (v49)
  {
    unint64_t v51 = (*(unsigned __int8 *)(v120 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
    char v107 = v48;
    uint64_t v52 = (char *)v48 + v51;
    uint64_t v118 = *(void *)(v120 + 72);
    uint64_t v116 = *(uint64_t (**)(char *, char *, uint64_t))(v120 + 16);
    LODWORD(v115) = enum case for IdentifierNamespace.nsPhoneCallContactName(_:);
    unsigned int v114 = enum case for IdentifierValue.vEmergencyServices(_:);
    LODWORD(v113) = enum case for IdentifierValue.vEmergencyContact(_:);
    __int128 v111 = xmmword_31D8B0;
    do
    {
      uint64_t v53 = v116(v121, v52, v16);
      UsoIdentifier.namespaceSemantic.getter(v53);
      (*(void (**)(uint64_t, void, uint64_t))(v122 + 104))(v50, v115, v2);
      __swift_storeEnumTagSinglePayload(v50, 0LL, 1LL, v2);
      uint64_t v54 = (uint64_t)&v7[*(int *)(v119 + 48)];
      outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v15,  (uint64_t)v7,  &demangling cache variable for type metadata for IdentifierNamespace?);
      outlined init with copy of Result<TemplatingResult, Error>( v50,  v54,  &demangling cache variable for type metadata for IdentifierNamespace?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v2) == 1)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v50,  &demangling cache variable for type metadata for IdentifierNamespace?);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v15,  &demangling cache variable for type metadata for IdentifierNamespace?);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v7,  &demangling cache variable for type metadata for IdentifierNamespace?);
      }

      else
      {
        uint64_t v56 = v108;
        outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v7,  v108,  &demangling cache variable for type metadata for IdentifierNamespace?);
        if (__swift_getEnumTagSinglePayload(v54, 1LL, v2) == 1)
        {
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v50,  &demangling cache variable for type metadata for IdentifierNamespace?);
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v15,  &demangling cache variable for type metadata for IdentifierNamespace?);
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v56, v2);
LABEL_26:
          outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v7,  &demangling cache variable for type metadata for (IdentifierNamespace?, IdentifierNamespace?));
LABEL_27:
          (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v16);
          goto LABEL_42;
        }

        uint64_t v57 = v122;
        uint64_t v58 = v7;
        uint64_t v59 = v109;
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 32))(v109, v54, v2);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type IdentifierNamespace and conformance IdentifierNamespace,  (uint64_t (*)(uint64_t))&type metadata accessor for IdentifierNamespace,  (uint64_t)&protocol conformance descriptor for IdentifierNamespace);
        uint64_t v60 = v56;
        char v61 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v59, v2);
        uint64_t v62 = *(void (**)(char *, uint64_t))(v57 + 8);
        uint64_t v50 = (uint64_t)v110;
        uint64_t v63 = v59;
        uint64_t v7 = v58;
        uint64_t v15 = v117;
        v62(v63, v2);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v50,  &demangling cache variable for type metadata for IdentifierNamespace?);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v15,  &demangling cache variable for type metadata for IdentifierNamespace?);
        uint64_t v64 = v60;
        uint64_t v16 = v112;
        v62((char *)v64, v2);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v7,  &demangling cache variable for type metadata for IdentifierNamespace?);
        if ((v61 & 1) == 0) {
          goto LABEL_27;
        }
      }

      uint64_t v65 = v104;
      UsoIdentifier.valueSemantic.getter(v55);
      int v66 = (*(uint64_t (**)(char *, uint64_t))(v105 + 88))(v65, v106);
      if (v66 == v114)
      {
        uint64_t v67 = v127[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v127[0]) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v67 = v71;
        }

        unint64_t v68 = *(void *)(v67 + 16);
        if (v68 >= *(void *)(v67 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v67 = v72;
        }

        *(void *)(v67 + 16) = v68 + 1;
        *(_OWORD *)(v67 + 16 * v68 + 32) = v111;
      }

      else
      {
        if (v66 != (_DWORD)v113)
        {
          (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v16);
          (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
          goto LABEL_42;
        }

        uint64_t v67 = v127[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v127[0]) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v67 = v73;
        }

        unint64_t v69 = *(void *)(v67 + 16);
        if (v69 >= *(void *)(v67 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v67 = v74;
        }

        *(void *)(v67 + 16) = v69 + 1;
        uint64_t v70 = v67 + 16 * v69;
        *(void *)(v70 + 32) = 0LL;
        *(void *)(v70 + 40) = 0LL;
      }

      v127[0] = v67;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v16);
      uint64_t v50 = (uint64_t)v110;
LABEL_42:
      v52 += v118;
      --v49;
    }

    while (v49);
  }

  uint64_t v75 = swift_bridgeObjectRelease();
  uint64_t v76 = dispatch thunk of UsoEntity_common_Agent.specifyingContactAddress.getter(v75);
  if (v76)
  {
    uint64_t v77 = v76;
    uint64_t v78 = CodeGenBase.entity.getter(v76);
    swift_release(v77);
  }

  else
  {
    uint64_t v78 = 0LL;
  }

  uint64_t v79 = type metadata accessor for UsoEntity_common_PhoneNumber(0LL);
  static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)(&v125, v78, v79, v79);
  swift_release(v78);
  uint64_t v80 = v125;
  if (v125)
  {
    swift_retain();
    UsoEntity_common_PhoneNumber.tags.getter();
    __int16 v82 = v81;
    swift_release(v80);
  }

  else
  {
    __int16 v82 = _swiftEmptyArrayStorage;
  }

  BOOL v83 = specialized Sequence<>.contains(_:)((uint64_t)v82);
  swift_bridgeObjectRelease();
  if (v83)
  {
    uint64_t v84 = v127[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v127[0]) & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v84 = v99;
    }

    unint64_t v85 = *(void *)(v84 + 16);
    if (v85 >= *(void *)(v84 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v84 = v100;
    }

    *(void *)(v84 + 16) = v85 + 1;
    *(_OWORD *)(v84 + 16 * v85 + 32) = xmmword_3201A0;
    v127[0] = v84;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v86 = type metadata accessor for Logger(0LL);
  uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)static Logger.siriPhone);
  char v88 = (os_log_s *)Logger.logObject.getter(v87);
  os_log_type_t v90 = static os_log_type_t.debug.getter(v88, v89);
  if (os_log_type_enabled(v88, v90))
  {
    uint64_t v91 = swift_slowAlloc(22LL, -1LL);
    uint64_t v92 = swift_slowAlloc(64LL, -1LL);
    uint64_t v124 = v92;
    uint64_t v125 = 0LL;
    *(_DWORD *)uint64_t v91 = 136315394;
    v126[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized UsoContactConvertible.emergencyType.getter,  0LL,  0LL);
    uint64_t v125 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v125, v126[0], &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, v126, v91 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v91 + 12) = 2080;
    swift_beginAccess(v127, v123, 0LL, 0LL);
    uint64_t v93 = swift_bridgeObjectRetain();
    uint64_t v94 = Array.description.getter(v93, &type metadata for PhoneCallEmergencyType);
    unint64_t v96 = v95;
    swift_bridgeObjectRelease();
    uint64_t v125 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v96, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, v126, v91 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v88, v90, "%s Parsed emergencyTypes: %s, returning first entry", (uint8_t *)v91, 0x16u);
    swift_arrayDestroy(v92, 2LL);
    swift_slowDealloc(v92, -1LL, -1LL);
    swift_slowDealloc(v91, -1LL, -1LL);
  }

  swift_beginAccess(v127, &v125, 0LL, 0LL);
  if (*(void *)(v127[0] + 16LL))
  {
    uint64_t v97 = *(void *)(v127[0] + 32LL);
    outlined copy of PhoneCallEmergencyType(v97, *(void *)(v127[0] + 40LL));
  }

  else
  {
    uint64_t v97 = 0LL;
  }

  swift_bridgeObjectRelease();
  swift_release(v80);
  return v97;
}

void *specialized UsoContactConvertible.nameIdentifiers.getter()
{
  uint64_t v0 = UsoEntity_common_Agent.asCommonPerson()();
  if (!v0
    || (uint64_t v1 = v0,
        uint64_t v2 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)( 1701667182LL,  0xE400000000000000LL),  swift_release(v1),  !v2))
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }

  return (void *)v2;
}

uint64_t outlined consume of PhoneCallEmergencyType?(uint64_t a1, unint64_t a2)
{
  if (a2 != 3) {
    return outlined consume of PhoneCallEmergencyType(a1, a2);
  }
  return a1;
}

void *specialized UsoContactConvertible.vocabularyAppsBundleSet.getter()
{
  uint64_t v0 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = &_swiftEmptySetSingleton;
  uint64_t v4 = specialized UsoContactConvertible.nameIdentifiers.getter();
  uint64_t v5 = v4[2];
  if (v5)
  {
    unint64_t v6 = (*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v17 = v4;
    uint64_t v7 = (char *)v4 + v6;
    uint64_t v8 = *(void *)(v1 + 72);
    uint64_t v9 = *(uint64_t (**)(char *, char *, uint64_t))(v1 + 16);
    while (1)
    {
      uint64_t v10 = v9(v3, v7, v0);
      uint64_t v11 = UsoIdentifier.namespace.getter(v10);
      if (v12)
      {
        if (v11 == 0x64695F6D657469LL && v12 == 0xE700000000000000LL)
        {
          uint64_t v15 = swift_bridgeObjectRelease();
        }

        else
        {
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, 0x64695F6D657469LL, 0xE700000000000000LL, 0LL);
          uint64_t v15 = swift_bridgeObjectRelease();
          if ((v14 & 1) == 0) {
            goto LABEL_12;
          }
        }

        UsoIdentifier.appBundleId.getter(v15);
        specialized Set._Variant.insert(_:)();
        swift_bridgeObjectRelease();
      }

LABEL_12:
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v7 += v8;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v18;
      }
    }
  }

  swift_bridgeObjectRelease();
  return &_swiftEmptySetSingleton;
}

          outlined destroy of SpeakableString?( v14,  &demangling cache variable for type metadata for TerminalElement.OriginDetail?);
          return v40;
        }

        unint64_t v23 = &demangling cache variable for type metadata for TerminalElement.Origin?;
        uint64_t v24 = v11;
      }
    }

    outlined destroy of SpeakableString?(v24, v23);
    uint64_t v32 = type metadata accessor for TerminalElement.OriginDetail(0LL);
    __swift_storeEnumTagSinglePayload(v14, 1LL, 1LL, v32);
    goto LABEL_12;
  }

  return result;
}

  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v92 + 8,  (uint64_t)v96,  &demangling cache variable for type metadata for [ContactSourceType]?);
  outlined release of Set<String>(v96);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_133_11( (uint64_t)&v93[8],  v38,  &demangling cache variable for type metadata for [UsoEntity_common_Group]?);
  OUTLINED_FUNCTION_153_8();
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v93[16],  (uint64_t)v84,  &demangling cache variable for type metadata for [UsoEntity]?);
  outlined release of Set<String>(v84);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v39 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v39, (uint64_t)static Logger.siriPhone);
  uint64_t v40 = swift_bridgeObjectRetain_n(v37, 2LL);
  uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
  unint64_t v43 = static os_log_type_t.debug.getter(v41, v42);
  if (os_log_type_enabled(v41, v43))
  {
    uint64_t v44 = OUTLINED_FUNCTION_7_0(22LL);
    BOOL v83 = OUTLINED_FUNCTION_7_0(64LL);
    unint64_t v95 = v83;
    *(_DWORD *)uint64_t v44 = 136315394;
    if (one-time initialization token for logPrefix != -1) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v45 = static NLv4Transformer.logPrefix;
    uint64_t v46 = *(void *)algn_478188;
    unint64_t v85 = 0LL;
    v86[0] = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_111_11();
    OUTLINED_FUNCTION_131_8(v45, v46, v47, v48);
    swift_bridgeObjectRelease();
    unint64_t v85 = (void *)OUTLINED_FUNCTION_10_3((uint64_t)v85, v49, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v44 + 4, v44 + 12);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v44 + 12) = 2080;
    uint64_t v50 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    unint64_t v51 = OUTLINED_FUNCTION_6_1();
    uint64_t v52 = Array.description.getter(v51, v50);
    OUTLINED_FUNCTION_50();
    unint64_t v85 = (void *)OUTLINED_FUNCTION_148_8(v52, v53, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v44 + 14, v44 + 22);
    OUTLINED_FUNCTION_7_4(v37);
    OUTLINED_FUNCTION_70_2();
    OUTLINED_FUNCTION_33_6(&dword_0, v41, v43, "%s SRR returned updated contacts: %s", (uint8_t *)v44);
    OUTLINED_FUNCTION_12_24();
    OUTLINED_FUNCTION_0_2(v83);
    OUTLINED_FUNCTION_0_2(v44);

    uint64_t v18 = a3;
  }

  else
  {

    OUTLINED_FUNCTION_7_4(v37);
  }

  uint64_t v65 = static ContactResolution.dedupeContacts(contacts:)(v37);
  OUTLINED_FUNCTION_50();
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  unint64_t v85 = v65;
  NSObject.update(with:at:)((uint64_t)&v85, 0x73746361746E6F63LL, 0xE800000000000000LL);
  __swift_destroy_boxed_opaque_existential_1(&v85);
LABEL_27:
  *uint64_t v97 = v18;
  unint64_t v69 = v18;
  OUTLINED_FUNCTION_7_1();
}

  OUTLINED_FUNCTION_6();
}

  char v14 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = __OFADD__(v15, 1LL);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }

  __break(1u);
LABEL_15:
  PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
  return result;
}

    outlined destroy of SpeakableString?( (uint64_t)v8,  &demangling cache variable for type metadata for (AudioSource?, AudioSource?));
LABEL_20:
    uint64_t v36 = 0;
    return v36 & 1;
  }

  outlined init with copy of AudioSource?((uint64_t)v8, (uint64_t)v10);
  OUTLINED_FUNCTION_6_26(v20);
  if (v21)
  {
    OUTLINED_FUNCTION_7_25((uint64_t)v12);
    OUTLINED_FUNCTION_7_25((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v3);
    goto LABEL_12;
  }

  uint64_t v22 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v5, v20, v3);
  lazy protocol witness table accessor for type AudioSource and conformance AudioSource();
  unint64_t v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v3);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
  v24(v5, v3);
  OUTLINED_FUNCTION_8_17((uint64_t)v12);
  OUTLINED_FUNCTION_8_17((uint64_t)v14);
  v24(v10, v3);
  OUTLINED_FUNCTION_8_17((uint64_t)v8);
  if ((v23 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  uint64_t v25 = (void *)v39;
  uint64_t v26 = *(void **)(v39 + 40);
  if (!v26) {
    goto LABEL_20;
  }
  uint64_t v27 = *(_BYTE *)(v39 + 48);
  uint64_t v28 = v26;
  if ([v28 callCapability] != (char *)&dword_0 + 1
    || (v27 & 1) == 0
    || (uint64_t v29 = App.appIdentifier.getter(), !v30))
  {

    goto LABEL_20;
  }

  uint64_t v31 = v29;
  uint64_t v32 = v30;
  char v33 = v25 + 17;
  uint64_t v34 = v25[20];
  uint64_t v35 = v25[21];
  __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8))(v31, v32, v34, v35);

  swift_bridgeObjectRelease();
  return v36 & 1;
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  uint64_t v12 = static os_log_type_t.debug.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    uint64_t v13 = swift_slowAlloc(22LL, -1LL);
    char v14 = swift_slowAlloc(64LL, -1LL);
    uint64_t v40 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>.Type);
    uint64_t v16 = String.init<A>(describing:)(&v42, v15);
    uint64_t v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v40);
    OUTLINED_FUNCTION_1_46(v42, (uint64_t)&v43, v18, v13 + 12, v19, v20, v21, v22, v35, v37, v2, v40, v41);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    BackingType = INCallDestinationTypeGetBackingType(v5);
    switch((int)BackingType)
    {
      case 1:
        uint64_t v24 = @"NORMAL_DESTINATION";
        goto LABEL_23;
      case 2:
        uint64_t v24 = @"EMERGENCY_DESTINATION";
        goto LABEL_23;
      case 3:
        uint64_t v24 = @"VOICEMAIL_DESTINATION";
        goto LABEL_23;
      case 4:
        uint64_t v24 = @"REDIAL_DESTINATION";
        goto LABEL_23;
      case 5:
        uint64_t v24 = @"CALL_BACK_DESTINATION";
LABEL_23:
        uint64_t v25 = v24;
        break;
      default:
        uint64_t v24 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        break;
    }

    uint64_t v26 = v24;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    uint64_t v29 = v28;

    uint64_t v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, &v40);
    OUTLINED_FUNCTION_1_46(v42, (uint64_t)&v43, v30, v13 + 22, v31, v32, v33, v34, v36, v38, v39, v40, v41);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v12, "#%s --> %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2LL);
    OUTLINED_FUNCTION_0_2(v14);
    OUTLINED_FUNCTION_0_2(v13);
  }

  else
  {
  }

  *a2 = v5;
}

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_58();
  return result;
}

    uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
    v40[0] = v19;
    v21(v19, v8, v5);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(22LL);
    unint64_t v23 = OUTLINED_FUNCTION_7_0(32LL);
    v40[1] = v6;
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v22 = 134218242;
    uint64_t v44 = v42;
    uint64_t v45 = v23;
    uint64_t v25 = OUTLINED_FUNCTION_13_47();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v25, v26, v27, v28);
    *(_WORD *)(v22 + 12) = 2080;
    if ((v20 & 0x100) != 0) {
      uint64_t v29 = " enableTelemetry=YES";
    }
    else {
      uint64_t v29 = "";
    }
    if ((v20 & 0x100) != 0) {
      uint64_t v30 = 20LL;
    }
    else {
      uint64_t v30 = 0LL;
    }
    uint64_t v42 = v5;
    uint64_t v31 = OUTLINED_FUNCTION_17_36((uint64_t)v29, v30);
    char v33 = OUTLINED_FUNCTION_16_30(v31, v32);
    uint64_t v34 = OUTLINED_FUNCTION_15_37(v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v35, v22 + 14, v36);
    uint64_t v37 = swift_bridgeObjectRelease();
    uint64_t v38 = v40[0];
    uint64_t v39 = OSSignpostID.rawValue.getter(v37);
    _os_signpost_emit_with_name_impl( &dword_0,  (os_log_t)v18,  (os_signpost_type_t)v41,  v39,  v43,  "%{public, signpost.description:begin_time}llu%s",  (uint8_t *)v22,  0x16u);
    OUTLINED_FUNCTION_17_0(v24);
    OUTLINED_FUNCTION_0_2(v24);
    OUTLINED_FUNCTION_0_2(v22);

    OUTLINED_FUNCTION_27_27((uint64_t)v8);
    OUTLINED_FUNCTION_23_26();
    OUTLINED_FUNCTION_27_27(v38);
    goto LABEL_19;
  }

  if ((unint64_t)v43 >> 32)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if (v43 >> 11 != 27)
  {
    if (v43 >> 16 <= 0x10)
    {
      unint64_t v43 = (const char *)&v46;
      goto LABEL_12;
    }

    goto LABEL_21;
  }

    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v44, v11, v7);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
    unint64_t v23 = OUTLINED_FUNCTION_7_0(64LL);
    v39[1] = v8;
    uint64_t v24 = v23;
    uint64_t v47 = v23;
    *(_DWORD *)uint64_t v22 = 136315650;
    v39[0] = v7;
    swift_bridgeObjectRetain();
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v3, &v47);
    uint64_t v25 = OUTLINED_FUNCTION_13_47();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v25, v26, v22 + 4, v27);
    OUTLINED_FUNCTION_32_10(v3);
    *(_WORD *)(v22 + 12) = 2048;
    uint64_t v46 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v21, v22 + 14, v22 + 22);
    OUTLINED_FUNCTION_7_4(v3);
    *(_WORD *)(v22 + 22) = 2080;
    if ((v40 & 0x100) != 0) {
      uint64_t v28 = " enableTelemetry=YES";
    }
    else {
      uint64_t v28 = "";
    }
    if ((v40 & 0x100) != 0) {
      uint64_t v29 = 20LL;
    }
    else {
      uint64_t v29 = 0LL;
    }
    uint64_t v30 = OUTLINED_FUNCTION_17_36((uint64_t)v28, v29);
    uint64_t v32 = OUTLINED_FUNCTION_16_30(v30, v31);
    char v33 = OUTLINED_FUNCTION_15_37(v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v33, v34, v22 + 24, v35);
    uint64_t v36 = swift_bridgeObjectRelease();
    uint64_t v37 = v44;
    uint64_t v38 = OSSignpostID.rawValue.getter(v36);
    _os_signpost_emit_with_name_impl( &dword_0,  (os_log_t)v21,  (os_signpost_type_t)v41,  v38,  v45,  "%s=%{public, signpost.telemetry:number1}lu %s",  (uint8_t *)v22,  0x20u);
    swift_arrayDestroy(v24, 2LL);
    OUTLINED_FUNCTION_0_2(v24);
    OUTLINED_FUNCTION_0_2(v22);

    OUTLINED_FUNCTION_27_27((uint64_t)v11);
    OUTLINED_FUNCTION_24_21();
    OUTLINED_FUNCTION_27_27(v37);
    goto LABEL_19;
  }

  if ((unint64_t)v45 >> 32)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if (v45 >> 11 != 27)
  {
    if (v45 >> 16 <= 0x10)
    {
      uint64_t v45 = (const char *)&v48;
      goto LABEL_12;
    }

    goto LABEL_21;
  }

  OUTLINED_FUNCTION_6();
}

  (*(void (**)(uint64_t))(*(void *)v35 + 160LL))(v38);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_146_1();
  OUTLINED_FUNCTION_23_13();
}

      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
      v9 += v10;
      --v8;
    }

    while (v8);
  }

  swift_bridgeObjectRelease();
  return &_swiftEmptySetSingleton;
}

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v11,  &demangling cache variable for type metadata for (PayloadAttachmentInfo.AttachmentType?, PayloadAttachmentInfo.AttachmentType?));
    OUTLINED_FUNCTION_7_96();
LABEL_16:
    OUTLINED_FUNCTION_40_28();
    uint64_t v32 = 0;
    return v32 & 1;
  }

  outlined init with copy of Result<TemplatingResult, Error>( v11,  (uint64_t)v16,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
  OUTLINED_FUNCTION_28_40(v24);
  if (v26)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v18,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v21,  &demangling cache variable for type metadata for PayloadAttachmentInfo.AttachmentType?);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v6);
    goto LABEL_12;
  }

  uint64_t v27 = v39;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v39, v24, v6);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PayloadAttachmentInfo.AttachmentType and conformance PayloadAttachmentInfo.AttachmentType,  (uint64_t (*)(uint64_t))&type metadata accessor for PayloadAttachmentInfo.AttachmentType,  (uint64_t)&protocol conformance descriptor for PayloadAttachmentInfo.AttachmentType);
  uint64_t v28 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v27, v6);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v29(v27, v6);
  OUTLINED_FUNCTION_3((uint64_t)v18);
  OUTLINED_FUNCTION_3((uint64_t)v21);
  v29((uint64_t)v16, v6);
  OUTLINED_FUNCTION_3(v11);
  uint64_t v25 = OUTLINED_FUNCTION_7_96();
  if ((v28 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  UsoEntitySpan.properties.getter(v25);
  uint64_t v30 = v40;
  specialized Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v31 = type metadata accessor for SpanProperty(0LL);
  if (__swift_getEnumTagSinglePayload(v30, 1LL, v31) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v30,  &demangling cache variable for type metadata for SpanProperty?);
    goto LABEL_16;
  }

  uint64_t v34 = SpanProperty.key.getter();
  uint64_t v36 = v35;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8LL))(v30, v31);
  if (v34 == 0x7373656E69737562LL && v36 == 0xEC000000656D614ELL) {
    uint64_t v32 = 1;
  }
  else {
    uint64_t v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, 0x7373656E69737562LL, 0xEC000000656D614ELL, 0LL);
  }
  OUTLINED_FUNCTION_40_28();
  swift_bridgeObjectRelease();
  return v32 & 1;
}

  Array.description.getter(v2, &type metadata for String);
  OUTLINED_FUNCTION_3_110();
  return v1;
}

  OUTLINED_FUNCTION_6();
}

  OUTLINED_FUNCTION_6();
}

  OUTLINED_FUNCTION_7_1();
}

uint64_t outlined assign with take of BackingContact?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BackingContact?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for BackingContact(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0LL;
  }
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for BackingContact(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 41) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 41) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 40) = -(char)a2;
    }
  }

  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

Swift::Void __swiftcall SiriPhoneContact.update(person:)(INPerson person)
{
  uint64_t v163 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin();
  uint64_t v152 = (char *)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v153 = v4;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v150 = v5;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v146 - v6;
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v160 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v161 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v159 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v165 = (void *)v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v157 = v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v158 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v15 = (char *)&v146 - v14;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v146 - v16;
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v162 = v18;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v164 = v19;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v146 - v20;
  __chkstk_darwin();
  unint64_t v23 = (char *)&v146 - v22;
  __chkstk_darwin();
  uint64_t v25 = (char *)&v146 - v24;
  __chkstk_darwin();
  uint64_t v27 = (char *)&v146 - v26;
  Class isa = person.super.isa;
  id v28 = -[objc_class nameComponents](person.super.isa, "nameComponents");
  v151 = v7;
  if (v28)
  {
    uint64_t v29 = v28;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = OUTLINED_FUNCTION_30_12();
    uint64_t v31 = (uint64_t)v25;
    uint64_t v32 = 0LL;
  }

  else
  {
    uint64_t v30 = type metadata accessor for PersonNameComponents(0LL);
    uint64_t v31 = (uint64_t)v25;
    uint64_t v32 = 1LL;
  }

  uint64_t v33 = OUTLINED_FUNCTION_1_38(v31, v32);
  OUTLINED_FUNCTION_39_8(v33, v34, &demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_30_12();
  int v35 = OUTLINED_FUNCTION_13_21((uint64_t)v27);
  uint64_t v36 = v166;
  if (v35)
  {
    uint64_t v37 = (uint64_t)v27;
LABEL_6:
    outlined destroy of PersonNameComponents?(v37);
LABEL_7:
    uint64_t v162 = 0LL;
    uint64_t v164 = 0LL;
    goto LABEL_8;
  }

  uint64_t v46 = PersonNameComponents.givenName.getter();
  unint64_t v48 = v47;
  OUTLINED_FUNCTION_32_13();
  if (!v48) {
    goto LABEL_7;
  }
  uint64_t v49 = HIBYTE(v48) & 0xF;
  if ((v48 & 0x2000000000000000LL) == 0) {
    uint64_t v49 = v46 & 0xFFFFFFFFFFFFLL;
  }
  if (!v49) {
    goto LABEL_70;
  }
  uint64_t v156 = v48;
  id v50 = OUTLINED_FUNCTION_28_13();
  if (v50)
  {
    unint64_t v51 = v50;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v52 = 0LL;
  }

  else
  {
    uint64_t v52 = 1LL;
  }

  OUTLINED_FUNCTION_1_38((uint64_t)v21, v52);
  outlined init with take of String?( (uint64_t)v21,  (uint64_t)v23,  &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21((uint64_t)v23))
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v23;
    goto LABEL_6;
  }

  uint64_t v121 = PersonNameComponents.familyName.getter();
  unint64_t v123 = v122;
  outlined destroy of PersonNameComponents?((uint64_t)v23);
  if (!v123)
  {
LABEL_70:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }

  uint64_t v124 = HIBYTE(v123) & 0xF;
  if ((v123 & 0x2000000000000000LL) == 0) {
    uint64_t v124 = v121 & 0xFFFFFFFFFFFFLL;
  }
  if (!v124)
  {
    swift_bridgeObjectRelease();
    goto LABEL_70;
  }

  uint64_t v155 = v121;
  id v125 = OUTLINED_FUNCTION_28_13();
  if (v125)
  {
    uint64_t v126 = v125;
    uint64_t v127 = v162;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v128 = 0LL;
    uint64_t v129 = (uint64_t)v164;
  }

  else
  {
    uint64_t v128 = 1LL;
    uint64_t v129 = (uint64_t)v164;
    uint64_t v127 = v162;
  }

  uint64_t v137 = OUTLINED_FUNCTION_1_38(v127, v128);
  OUTLINED_FUNCTION_39_8(v137, v138, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21(v129))
  {
    OUTLINED_FUNCTION_32_13();
  }

  else
  {
    uint64_t v140 = PersonNameComponents.middleName.getter();
    unint64_t v142 = v141;
    OUTLINED_FUNCTION_32_13();
    if (v142)
    {
      uint64_t v143 = HIBYTE(v142) & 0xF;
      if ((v142 & 0x2000000000000000LL) == 0) {
        uint64_t v143 = v140 & 0xFFFFFFFFFFFFLL;
      }
      if (v143)
      {
        uint64_t v173 = v46;
        uint64_t v174 = v156;
        OUTLINED_FUNCTION_27_17();
        v144._uint64_t countAndFlagsBits = v140;
        v144._object = (void *)v142;
        String.append(_:)(v144);
        OUTLINED_FUNCTION_23_5();
        goto LABEL_100;
      }

      OUTLINED_FUNCTION_23_5();
    }
  }

  uint64_t v173 = v46;
  uint64_t v174 = v156;
LABEL_100:
  OUTLINED_FUNCTION_27_17();
  v139._uint64_t countAndFlagsBits = v155;
  v139._object = (void *)v123;
  String.append(_:)(v139);
  OUTLINED_FUNCTION_87_0();
  uint64_t v162 = v173;
  uint64_t v164 = (void *)v174;
LABEL_8:
  uint64_t v38 = v163;
  Class v39 = isa;
  id v40 = -[objc_class isMe](isa, "isMe");
  (*(void (**)(id, uint64_t, uint64_t))(v38 + 16))(v40, v167, v38);
  id v41 = -[objc_class contactIdentifier](v39, "contactIdentifier");
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    uint64_t v45 = v44;
  }

  else
  {
    uint64_t v43 = 0LL;
    uint64_t v45 = 0LL;
  }

  uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 40))(v43, v45, v167, v38);
  Class v54 = isa;
  if (OUTLINED_FUNCTION_11_32(v53, "nameComponents"))
  {
    OUTLINED_FUNCTION_23_15();

    uint64_t v55 = 0LL;
  }

  else
  {
    uint64_t v55 = 1LL;
  }

  uint64_t v56 = OUTLINED_FUNCTION_1_38((uint64_t)v15, v55);
  OUTLINED_FUNCTION_43_4(v56, v57, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21((uint64_t)v17))
  {
    uint64_t v155 = 0LL;
    uint64_t v156 = 0LL;
  }

  else
  {
    uint64_t v58 = PersonNameComponents.givenName.getter();
    uint64_t v155 = v59;
    uint64_t v156 = v58;
  }

  uint64_t v60 = v158;
  uint64_t v61 = outlined destroy of PersonNameComponents?((uint64_t)v17);
  id v62 = OUTLINED_FUNCTION_11_32(v61, "nameComponents");
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = v157;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v65 = v64;
    uint64_t v66 = 0LL;
    uint64_t v67 = v161;
  }

  else
  {
    uint64_t v66 = 1LL;
    uint64_t v67 = v161;
    uint64_t v65 = v157;
  }

  OUTLINED_FUNCTION_1_38(v65, v66);
  outlined init with take of String?(v65, v60, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21(v60))
  {
    uint64_t v161 = 0LL;
    uint64_t v158 = 0LL;
  }

  else
  {
    uint64_t v161 = PersonNameComponents.middleName.getter();
    uint64_t v158 = v68;
  }

  uint64_t v69 = outlined destroy of PersonNameComponents?(v60);
  id v70 = OUTLINED_FUNCTION_11_32(v69, "nameComponents");
  if (v70)
  {
    uint64_t v71 = v70;
    uint64_t v72 = v159;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v73 = v72;
    uint64_t v74 = 0LL;
  }

  else
  {
    uint64_t v74 = 1LL;
    uint64_t v73 = v159;
  }

  OUTLINED_FUNCTION_1_38(v73, v74);
  uint64_t v75 = v73;
  uint64_t v76 = v165;
  outlined init with take of String?( v75,  (uint64_t)v165,  &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21((uint64_t)v76))
  {
    uint64_t v159 = 0LL;
    uint64_t v157 = 0LL;
  }

  else
  {
    uint64_t v77 = PersonNameComponents.familyName.getter();
    uint64_t v76 = v165;
    uint64_t v159 = v77;
    uint64_t v157 = v78;
  }

  OUTLINED_FUNCTION_32_13();
  id v79 = -[objc_class nameComponents](v54, "nameComponents");
  uint64_t v80 = v160;
  if (v79)
  {
    OUTLINED_FUNCTION_23_15();

    uint64_t v81 = 0LL;
  }

  else
  {
    uint64_t v81 = 1LL;
  }

  uint64_t v82 = OUTLINED_FUNCTION_1_38(v80, v81);
  OUTLINED_FUNCTION_43_4(v82, v83, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21(v67))
  {
    uint64_t v84 = 0LL;
    uint64_t v154 = 0LL;
  }

  else
  {
    uint64_t v84 = PersonNameComponents.nickname.getter();
    uint64_t v154 = v85;
  }

  outlined destroy of PersonNameComponents?(v67);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v38 + 104))(v171, v167, v38);
  outlined init with take of String?( (uint64_t)v171,  (uint64_t)&v173,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  outlined init with take of String?( (uint64_t)v171,  (uint64_t)v172,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  uint64_t v160 = v84;
  if (v172[1] == 1LL)
  {
    uint64_t v86 = (uint64_t)v152;
    uint64_t v87 = v153;
    uint64_t v88 = v150;
    uint64_t v89 = (uint64_t)v151;
  }

  else
  {
    uint64_t v90 = v181;
    uint64_t v36 = (char *)v182;
    uint64_t v91 = v174;
    uint64_t v165 = (void *)v173;
    uint64_t v92 = v175;
    uint64_t v93 = v176;
    uint64_t v94 = v178;
    uint64_t v147 = v179;
    uint64_t v148 = v177;
    uint64_t v149 = v30;
    uint64_t v95 = v180;
    __int128 v146 = v183;
    uint64_t v97 = v184;
    uint64_t v96 = v185;
    OUTLINED_FUNCTION_48_0();
    uint64_t v145 = v96;
    uint64_t v98 = (void *)v90;
    uint64_t v99 = v93;
    uint64_t v38 = v163;
    outlined consume of PhoneCallPersonName?( (uint64_t)v165,  v91,  v92,  v99,  v148,  v94,  v147,  v95,  v90,  (uint64_t)v36,  v146,  *((uint64_t *)&v146 + 1),  v97,  v145);
    uint64_t v86 = (uint64_t)v152;
    uint64_t v87 = v153;
    uint64_t v88 = v150;
    uint64_t v89 = (uint64_t)v151;
    uint64_t v165 = v36;
    if (v36)
    {
      uint64_t v162 = (uint64_t)v98;
      goto LABEL_46;
    }
  }

  uint64_t v98 = v164;
  OUTLINED_FUNCTION_6_3();
  swift_bridgeObjectRelease();
  uint64_t v165 = v98;
LABEL_46:
  if (OUTLINED_FUNCTION_28_13())
  {
    OUTLINED_FUNCTION_23_15();

    uint64_t v100 = 0LL;
  }

  else
  {
    uint64_t v100 = 1LL;
  }

  OUTLINED_FUNCTION_1_38(v88, v100);
  outlined init with take of String?(v88, v89, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21(v89))
  {
    uint64_t v101 = 0LL;
    id v102 = 0LL;
  }

  else
  {
    uint64_t v101 = PersonNameComponents.namePrefix.getter();
    id v102 = v103;
  }

  outlined destroy of PersonNameComponents?(v89);
  id v104 = -[objc_class nameComponents](isa, "nameComponents");
  if (v104)
  {
    uint64_t v105 = v104;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v106 = 0LL;
  }

  else
  {
    uint64_t v106 = 1LL;
  }

  OUTLINED_FUNCTION_1_38(v86, v106);
  outlined init with take of String?(v86, v87, &demangling cache variable for type metadata for PersonNameComponents?);
  if (OUTLINED_FUNCTION_13_21(v87))
  {
    uint64_t v107 = 0LL;
    uint64_t v108 = 0LL;
  }

  else
  {
    uint64_t v107 = PersonNameComponents.nameSuffix.getter();
    uint64_t v108 = v109;
  }

  outlined destroy of PersonNameComponents?(v87);
  uint64_t v173 = v156;
  uint64_t v174 = v155;
  uint64_t v175 = v161;
  uint64_t v176 = v158;
  uint64_t v177 = v159;
  uint64_t v178 = v157;
  uint64_t v179 = v160;
  uint64_t v180 = v154;
  uint64_t v181 = v162;
  uint64_t v182 = (uint64_t)v165;
  *(void *)&__int128 v183 = v101;
  *((void *)&v183 + 1) = v102;
  uint64_t v184 = v107;
  uint64_t v185 = v108;
  uint64_t v110 = v167;
  uint64_t v111 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v38 + 112))(&v173, v167, v38);
  Class v112 = isa;
  id v113 = OUTLINED_FUNCTION_11_32(v111, "relationship");
  if (v113)
  {
    id v102 = v113;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
    OUTLINED_FUNCTION_18_20();
  }

  OUTLINED_FUNCTION_3_41(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 208));
  id v114 = OUTLINED_FUNCTION_6_36();
  if (v114)
  {
    OUTLINED_FUNCTION_36_8(v114);
    OUTLINED_FUNCTION_35_11();
    if (v36 == (_BYTE *)&dword_0 + 2)
    {
      id v115 = OUTLINED_FUNCTION_6_36();
      if (v115)
      {
        id v116 = OUTLINED_FUNCTION_46_7((uint64_t)v115, "value");
        OUTLINED_FUNCTION_48_4();
        if (v102)
        {
          OUTLINED_FUNCTION_44_10();
          OUTLINED_FUNCTION_18_20();
        }
      }

      OUTLINED_FUNCTION_3_41(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 160));
      uint64_t v120 = 0x656E6F6870LL;
LABEL_82:
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v38 + 232))( v120,  0xE500000000000000LL,  v110,  v38);
      goto LABEL_83;
    }
  }

  id v117 = OUTLINED_FUNCTION_6_36();
  if (v117)
  {
    OUTLINED_FUNCTION_36_8(v117);
    OUTLINED_FUNCTION_35_11();
    if (v36 == (_BYTE *)&dword_0 + 1)
    {
      id v118 = OUTLINED_FUNCTION_6_36();
      if (v118)
      {
        id v119 = OUTLINED_FUNCTION_46_7((uint64_t)v118, "value");
        OUTLINED_FUNCTION_48_4();
        if (v102)
        {
          OUTLINED_FUNCTION_44_10();
          OUTLINED_FUNCTION_18_20();
        }
      }

      OUTLINED_FUNCTION_3_41(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 184));
      uint64_t v120 = 0x6C69616D65LL;
      goto LABEL_82;
    }
  }

LABEL_83:
  id v130 = OUTLINED_FUNCTION_6_36();
  if (v130)
  {
    id v131 = OUTLINED_FUNCTION_46_7((uint64_t)v130, "label");
    OUTLINED_FUNCTION_48_4();
    if (v102)
    {
      OUTLINED_FUNCTION_44_10();
      OUTLINED_FUNCTION_18_20();
    }
  }

  OUTLINED_FUNCTION_3_41(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 256));
  id v132 = OUTLINED_FUNCTION_6_36();
  if (v132 && (OUTLINED_FUNCTION_37_12(v132), OUTLINED_FUNCTION_35_11(), v36 == (_BYTE *)&dword_0 + 1))
  {
    uint64_t v133 = 0LL;
  }

  else
  {
    id v134 = OUTLINED_FUNCTION_6_36();
    if (v134 && (OUTLINED_FUNCTION_37_12(v134), OUTLINED_FUNCTION_35_11(), v36 == (_BYTE *)&dword_0 + 2)) {
      uint64_t v133 = 1LL;
    }
    else {
      uint64_t v133 = 2LL;
    }
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 304))(v133, v110, v38);
  v169[0] = v112;
  char v170 = 0;
  uint64_t v135 = *(void (**)(Class *, uint64_t, uint64_t))(v38 + 392);
  uint64_t v136 = v112;
  v135(v169, v110, v38);
  swift_bridgeObjectRelease();
}

      uint64_t v93 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v0, v38);
      uint64_t v74 = v108;
      goto LABEL_76;
    }

      v228 = swift_bridgeObjectRetain();
      uint64_t v45 = _CocoaArrayWrapper.endIndex.getter(v228);
      swift_release(v1);
LABEL_58:
      uint64_t v46 = *(void **)(v323 + 232);
      unint64_t v47 = *(void *)(v323 + 80);
      swift_release(v1);
      unint64_t v48 = ModelDecisionEvaluator.isDecisionCorrect()();
      OUTLINED_FUNCTION_28_53(v48, "setIsDecisionCorrect:");
      uint64_t v49 = ModelDecisionEvaluator.isDisambiguation()();
      OUTLINED_FUNCTION_28_53(v49, "setIsModelDisambiguation:");
      id v50 = ModelDecisionEvaluator.isConfirmation()();
      OUTLINED_FUNCTION_28_53(v50, "setIsModelConfirmation:");
      unint64_t v51 = *(void **)(v47 + 96);
      OUTLINED_FUNCTION_66((void *)(v47 + 64));
      uint64_t v52 = OUTLINED_FUNCTION_51_0();
      Class v54 = v53(v52);
      OUTLINED_FUNCTION_77_0();
      [v46 setUserPersona:v54];
      [v46 setProjectIntent:5];
      uint64_t v55 = v45 + 1;
      if (__OFADD__(v45, 1LL))
      {
        __break(1u);
      }

      else if (v55 >= (uint64_t)0xFFFFFFFF80000000LL)
      {
        unint64_t v51 = (void *)v323;
        if (v55 <= 0x7FFFFFFF)
        {
          uint64_t v56 = *(void *)(v323 + 224);
          uint64_t v57 = *(void **)(v323 + 216);
          OUTLINED_FUNCTION_6_69( (uint64_t)objc_msgSend(*(id *)(v323 + 232), "setNumCandidateApps:"),  "setAbModelEvaluated:");
          [v57 setEventMetadata:v56];
          if (one-time initialization token for siriPhone == -1)
          {
LABEL_62:
            uint64_t v58 = (void (*)(uint64_t, uint64_t, uint64_t))v51[31];
            uint64_t v60 = v51[19];
            uint64_t v59 = v51[20];
            id v62 = v51[16];
            uint64_t v61 = v51[17];
            uint64_t v63 = v51[14];
            uint64_t v64 = OUTLINED_FUNCTION_15_1();
            __swift_project_value_buffer(v64, (uint64_t)static Logger.siriPhone);
            v58(v61, v60, v63);
            v58(v62, v59, v63);
            uint64_t v65 = OUTLINED_FUNCTION_48();
            uint64_t v66 = (void *)v323;
            uint64_t v67 = (os_log_s *)Logger.logObject.getter(v65);
            uint64_t v69 = static os_log_type_t.debug.getter(v67, v68);
            id v70 = os_log_type_enabled(v67, v69);
            uint64_t v71 = *(void *)(v323 + 128);
            uint64_t v72 = *(void *)(v323 + 136);
            if (v70)
            {
              uint64_t v73 = OUTLINED_FUNCTION_7_0(32LL);
              v317 = OUTLINED_FUNCTION_7_0(96LL);
              v324 = (void *)v317;
              *(_DWORD *)uint64_t v73 = 136315650;
              swift_retain();
              v297 = v71;
              uint64_t v74 = v2;
              uint64_t v75 = ModelDecisionEvaluator.description.getter();
              OUTLINED_FUNCTION_38_1();
              *uint64_t v74 = OUTLINED_FUNCTION_64_25(v75, v76, (uint64_t *)&v324);
              OUTLINED_FUNCTION_87_1((uint64_t)v74, v323 + 48, v77, v73 + 12);
              OUTLINED_FUNCTION_34_0();
              OUTLINED_FUNCTION_19_65();
              *(_WORD *)(v73 + 12) = 2080;
              lazy protocol witness table accessor for type UUID and conformance UUID();
              uint64_t v78 = OUTLINED_FUNCTION_77_19();
              *(void *)(v323 + 48) = OUTLINED_FUNCTION_29_43(v78, v79);
              uint64_t v66 = (void *)v323;
              OUTLINED_FUNCTION_87_1(v323 + 48, v323 + 56, v80, v73 + 22);
              OUTLINED_FUNCTION_62();
              OUTLINED_FUNCTION_16_51(v72);
              *(_WORD *)(v73 + 22) = 2080;
              uint64_t v81 = OUTLINED_FUNCTION_77_19();
              *(void *)(v323 + 56) = OUTLINED_FUNCTION_29_43(v81, v82);
              OUTLINED_FUNCTION_87_1(v323 + 56, v321, v83, v73 + 32);
              OUTLINED_FUNCTION_62();
              OUTLINED_FUNCTION_16_51(v297);
              _os_log_impl( &dword_0,  v67,  v69,  "#PhoneAppResolutionLogger emitAndLinkABEvaluationMessage: Emitting message with result %s), UUID %s and linking to %s",  (uint8_t *)v73,  0x20u);
              swift_arrayDestroy(v317, 3LL);
              OUTLINED_FUNCTION_0_2(v317);
              OUTLINED_FUNCTION_0_2(v73);
            }

            else
            {
              OUTLINED_FUNCTION_19_65();
              OUTLINED_FUNCTION_16_51(v72);
              OUTLINED_FUNCTION_16_51(v71);
            }

            uint64_t v155 = (void *)v66[30];
            uint64_t v156 = (void *)v66[27];
            v308 = (void *)v66[28];
            typeb = (void *)v66[29];
            uint64_t v157 = v66[23];
            v319 = v66[24];
            v322 = v66[26];
            uint64_t v158 = v66[21];
            log = (os_log_t)v66[20];
            v293 = v66[32];
            v301 = v66[19];
            uint64_t v159 = (void *)v66[10];
            uint64_t v160 = v159 + 3;
            uint64_t v161 = (void *)v159[2];
            [v161 emitMessage:v156];
            uint64_t v84 = v323;
            [v161 emitMessage:v155];
            uint64_t v162 = v159[6];
            uint64_t v163 = v159[7];
            OUTLINED_FUNCTION_66(v160);
            uint64_t v164 = (*(uint64_t (**)(uint64_t, uint64_t))(v163 + 208))(v162, v163);
            __swift_storeEnumTagSinglePayload(v158, 1LL, 1LL, v157);
            (*(void (**)(uint64_t))(*(void *)v164 + 96LL))(v158);
            OUTLINED_FUNCTION_38_1();

            uint64_t v173 = OUTLINED_FUNCTION_53_30( v165,  v166,  v167,  v168,  v169,  v170,  v171,  v172,  v229,  v237,  v248,  v259,  v269,  v280,  v293);
            OUTLINED_FUNCTION_52_29( v173,  v174,  v175,  v176,  v177,  v178,  v179,  v180,  v235,  v244,  v255,  v266,  v276,  v285,  v294,  v301,  v308);
            OUTLINED_FUNCTION_22_58( v181,  v182,  v183,  v184,  v185,  v186,  v187,  v188,  v236,  v245,  v256,  v267,  v277,  v286,  v295,  v302,  v309,  typeb);
            OUTLINED_FUNCTION_16_51(v303);
            OUTLINED_FUNCTION_16_51((uint64_t)log);
            (*(void (**)(uint64_t, uint64_t))(v319 + 8))(v322, v157);
            goto LABEL_74;
          }

uint64_t outlined init with take of String?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = OUTLINED_FUNCTION_9_0();
  v5(v4);
  return a2;
}

uint64_t outlined init with take of PhoneCallPersonName?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallPersonName?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void outlined destroy of PhoneCallNLIntent?(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_15_0(*(void *)(v2 - 8));
  OUTLINED_FUNCTION_2();
}

uint64_t outlined destroy of PersonNameComponents?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void protocol witness for SiriPhoneContact.isMe.setter in conformance PhoneCallNLv4Contact()
{
}

void PhoneCallNLv4Contact.isMe.setter(char a1)
{
  *(_BYTE *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_60_2();
}

void protocol witness for SiriPhoneContact.contactId.setter in conformance PhoneCallNLv4Contact()
{
}

void PhoneCallNLv4Contact.contactId.setter()
{
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  swift_bridgeObjectRelease(v3);
  OUTLINED_FUNCTION_26_1();
}

void protocol witness for SiriPhoneContact.personName.getter in conformance PhoneCallNLv4Contact( uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))(v2 + 360))(v3);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v3,  a1,  &demangling cache variable for type metadata for PhoneCallPersonName?);
}

uint64_t PhoneCallNLv4Contact.personName.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[12];
  uint64_t v6 = v1[13];
  uint64_t v7 = v1[14];
  uint64_t v8 = v1[15];
  uint64_t v9 = v1[16];
  uint64_t v10 = v1[17];
  uint64_t v14 = v1[18];
  uint64_t v15 = v1[19];
  uint64_t v16 = v1[20];
  uint64_t v17 = v1[21];
  uint64_t v11 = v1[22];
  uint64_t v12 = v1[23];
  uint64_t v18 = v11;
  uint64_t result = outlined copy of PhoneCallPersonName?(v3, v4, v5, v6, v7, v8, v9, v10, v14, v15, v16, v17, v11, v12);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v14;
  a1[9] = v15;
  a1[10] = v16;
  a1[11] = v17;
  a1[12] = v18;
  a1[13] = v12;
  return result;
}

uint64_t outlined copy of PhoneCallPersonName?( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a10);
    return swift_bridgeObjectRetain(a12);
  }

  return result;
}

uint64_t outlined init with take of PhoneCallApp?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallApp?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void outlined init with take of PhoneCallNLIntent?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = OUTLINED_FUNCTION_25_13(a1, a2, a3);
  OUTLINED_FUNCTION_43_0(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  OUTLINED_FUNCTION_2();
}

void protocol witness for SiriPhoneContact.personName.setter in conformance PhoneCallNLv4Contact()
{
}

void *PhoneCallNLv4Contact.personName.setter(void *a1)
{
  uint64_t v3 = v1 + 80;
  OUTLINED_FUNCTION_25_0(v1 + 80, (uint64_t)v17, 1LL);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v8 = *(void *)(v1 + 120);
  uint64_t v9 = *(void *)(v1 + 128);
  uint64_t v15 = *(void *)(v1 + 136);
  uint64_t v16 = *(void *)(v1 + 80);
  __int128 v13 = *(_OWORD *)(v1 + 160);
  __int128 v14 = *(_OWORD *)(v1 + 144);
  uint64_t v11 = *(void *)(v1 + 176);
  uint64_t v10 = *(void *)(v1 + 184);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)a1,  v3,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  outlined retain of PhoneCallPersonName?( a1,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of PhoneCallPersonName?);
  outlined consume of PhoneCallPersonName?( v16,  v4,  v5,  v6,  v7,  v8,  v9,  v15,  v14,  *((uint64_t *)&v14 + 1),  v13,  *((uint64_t *)&v13 + 1),  v11,  v10);
  return outlined retain of PhoneCallPersonName?( a1,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of PhoneCallPersonName?);
}

uint64_t outlined consume of PhoneCallPersonName?( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a12);
    return swift_bridgeObjectRelease(a14);
  }

  return result;
}

void protocol witness for SiriPhoneContact.relationship.setter in conformance PhoneCallNLv4Contact()
{
}

void PhoneCallNLv4Contact.relationship.setter()
{
  uint64_t v3 = *(void *)(v1 + 232);
  *(void *)(v1 + 224) = v2;
  *(void *)(v1 + 232) = v0;
  swift_bridgeObjectRelease(v3);
  OUTLINED_FUNCTION_26_1();
}

void protocol witness for SiriPhoneContact.handleLabel.setter in conformance PhoneCallNLv4Contact()
{
}

void PhoneCallNLv4Contact.handleLabel.setter()
{
  uint64_t v3 = *(void *)(v1 + 264);
  *(void *)(v1 + 256) = v2;
  *(void *)(v1 + 264) = v0;
  swift_bridgeObjectRelease(v3);
  OUTLINED_FUNCTION_26_1();
}

void protocol witness for SiriPhoneContact.emergencyLocationType.setter in conformance PhoneCallNLv4Contact()
{
}

void PhoneCallNLv4Contact.emergencyLocationType.setter(char a1)
{
  *(_BYTE *)(v1 + 288) = a1;
  OUTLINED_FUNCTION_60_2();
}

void protocol witness for SiriPhoneContact.backingContact.setter in conformance PhoneCallNLv4Contact()
{
}

void PhoneCallNLv4Contact.backingContact.setter()
{
  uint64_t v1 = OUTLINED_FUNCTION_9_0();
  outlined assign with take of PhoneCallNLIntent?(v1, v2, v3);
  swift_endAccess(v4);
  OUTLINED_FUNCTION_60_2();
}

uint64_t *assignWithCopy for BackingContact(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *((unsigned __int8 *)a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }

    else if (v4 == 1)
    {
      swift_release(*a1);
    }

    else
    {
    }

    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v7 = a2[3];
      a1[3] = v7;
      a1[4] = a2[4];
      (**(void (***)(uint64_t *, uint64_t *))(v7 - 8))(a1, a2);
      *((_BYTE *)a1 + 40) = 2;
    }

    else if (v5 == 1)
    {
      uint64_t v6 = *a2;
      *a1 = *a2;
      *((_BYTE *)a1 + 40) = 1;
      swift_retain(v6);
    }

    else
    {
      uint64_t v8 = (void *)*a2;
      *a1 = *a2;
      *((_BYTE *)a1 + 40) = 0;
      id v9 = v8;
    }
  }

  return a1;
}

void destroy for BackingContact(void *a1)
{
  unsigned int v1 = *((unsigned __int8 *)a1 + 40);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)a1 + 3;
  }
  if (v1 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  else if (v1 == 1)
  {
    swift_release(*a1);
  }

  else
  {
  }

uint64_t outlined init with copy of PhoneCallNLv4Intent(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for PhoneCallNLv4Intent(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a2 + 2;
  uint64_t v7 = a2[5];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  if (v7)
  {
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, (uint64_t)v6, v7);
  }

  else
  {
    __int128 v9 = *((_OWORD *)v6 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 32) = v9;
    *(void *)(a1 + 48) = v6[4];
  }

  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  uint64_t v10 = a2[8];
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = a2[9];
  *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
  uint64_t v12 = a2[11];
  uint64_t v11 = a2[12];
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v11);
  return a1;
}

void static PhoneCallNLv4Intent.getMergedNLIntent(previousNLIntent:currentNLIntent:)( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!v72)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v71,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined init with copy of SharedGlobalsProviding((uint64_t)a2, a3);
    return;
  }

  uint64_t v66 = (void *)a3;
  outlined init with take of AppSelectionSignalComponent(&v71, (uint64_t)v73);
  OUTLINED_FUNCTION_75_14();
  OUTLINED_FUNCTION_8_5();
  if (specialized static PhoneCallNLIntent.isAppModified(previousNLIntent:currentNLIntent:)((uint64_t)v73, a2))
  {
    OUTLINED_FUNCTION_11_53();
    OUTLINED_FUNCTION_8_5();
    OUTLINED_FUNCTION_9_19((uint64_t)&v71);
    outlined init with take of PhoneCallNLIntent?( (uint64_t)v70,  (uint64_t)&v71,  &demangling cache variable for type metadata for PhoneCallApp?);
  }

  uint64_t v5 = a2[4];
  OUTLINED_FUNCTION_11_53();
  char v6 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32));
  outlined init with copy of SharedGlobalsProviding((uint64_t)v73, (uint64_t)v70);
  if (v6 == 2)
  {
    uint64_t v7 = v70[4];
    __swift_project_boxed_opaque_existential_1(v70, v70[3]);
    char v6 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32));
  }

  char v65 = v6;
  __swift_destroy_boxed_opaque_existential_1(v70);
  uint64_t v8 = a2[4];
  OUTLINED_FUNCTION_11_53();
  char v9 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48));
  outlined init with copy of SharedGlobalsProviding((uint64_t)v73, (uint64_t)v69);
  if (v9 == 4)
  {
    uint64_t v10 = v69[4];
    __swift_project_boxed_opaque_existential_1(v69, v69[3]);
    char v9 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48));
  }

  char v64 = v9;
  __swift_destroy_boxed_opaque_existential_1(v69);
  uint64_t v11 = a2[4];
  OUTLINED_FUNCTION_11_53();
  int v12 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 72));
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v68);
  if (v12 == 5) {
    goto LABEL_19;
  }
  uint64_t v21 = v68[4];
  __swift_project_boxed_opaque_existential_1(v68, v68[3]);
  uint64_t v22 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72));
  if (v22 == 5)
  {
    OUTLINED_FUNCTION_68_17(v22, v23, v24, v25, v26, v27, v28, v29);
LABEL_17:
    uint64_t v42 = a2[3];
    uint64_t v43 = a2[4];
    uint64_t v44 = a2;
    goto LABEL_21;
  }

  uint64_t v30 = PhoneCallDestinationType.rawValue.getter(v22);
  if (v30 == 0x6C616D726F6ELL && v31 == 0xE600000000000000LL)
  {
    uint64_t v13 = swift_bridgeObjectRelease();
LABEL_19:
    OUTLINED_FUNCTION_68_17(v13, v14, v15, v16, v17, v18, v19, v20);
    goto LABEL_20;
  }

  char v33 = OUTLINED_FUNCTION_49_2(v30, v31, 0x6C616D726F6ELL, 0xE600000000000000LL);
  uint64_t v34 = OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_68_17(v34, v35, v36, v37, v38, v39, v40, v41);
  if ((v33 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_20:
  uint64_t v42 = v73[3];
  uint64_t v43 = v74;
  uint64_t v44 = v73;
LABEL_21:
  __swift_project_boxed_opaque_existential_1(v44, v42);
  char v63 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 72));
  uint64_t v45 = v74;
  OUTLINED_FUNCTION_75_14();
  char v46 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v45 + 104));
  char v47 = specialized static PhoneCallNLIntent.isPhoneCallVerbModified(previousNLIntent:currentNLIntent:)( (uint64_t)v73,  a2);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v73, (uint64_t)v67);
  if ((v47 & 1) != 0
    || (uint64_t v48 = v67[4],
        __swift_project_boxed_opaque_existential_1(v67, v67[3]),
        OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 104)) == 17))
  {
    __swift_destroy_boxed_opaque_existential_1(v67);
    uint64_t v49 = a2[4];
    OUTLINED_FUNCTION_11_53();
    char v46 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v49 + 104));
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1(v67);
  }

  uint64_t v50 = a2[4];
  OUTLINED_FUNCTION_11_53();
  uint64_t v51 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 128));
  uint64_t v52 = a2[4];
  OUTLINED_FUNCTION_11_53();
  uint64_t v53 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24));
  outlined init with copy of TransformationResult?( (uint64_t)&v71,  (uint64_t)v67,  &demangling cache variable for type metadata for PhoneCallApp?);
  uint64_t v54 = a2[4];
  OUTLINED_FUNCTION_11_53();
  uint64_t v55 = OUTLINED_FUNCTION_9_52(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 40));
  uint64_t v57 = a2[3];
  uint64_t v56 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v57);
  uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 136))(v57, v56);
  uint64_t v60 = a2[3];
  uint64_t v59 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v60);
  uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 144))(v60, v59);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v71,  &demangling cache variable for type metadata for PhoneCallApp?);
  void v66[3] = &type metadata for PhoneCallNLv4Intent;
  v66[4] = &protocol witness table for PhoneCallNLv4Intent;
  uint64_t v62 = OUTLINED_FUNCTION_62_11((uint64_t)&unk_405440);
  *uint64_t v66 = v62;
  *(void *)(v62 + 16) = v51;
  *(void *)(v62 + 24) = v53;
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v67,  v62 + 32,  &demangling cache variable for type metadata for PhoneCallApp?);
  *(_BYTE *)(v62 + 72) = v65;
  *(void *)(v62 + 80) = v55;
  *(_BYTE *)(v62 + 88) = v64;
  *(_WORD *)(v62 + 89) = 1282;
  *(_BYTE *)(v62 + 91) = v63;
  *(_WORD *)(v62 + 92) = 777;
  *(_BYTE *)(v62 + 94) = 35;
  *(_BYTE *)(v62 + 95) = v46;
  *(_WORD *)(v62 + 96) = 518;
  *(void *)(v62 + 104) = v58;
  *(void *)(v62 + 112) = v61;
  __swift_destroy_boxed_opaque_existential_1(v73);
}

void *outlined destroy of PhoneCallNLv4Intent(void *a1)
{
  return a1;
}

uint64_t destroy for PhoneCallNLv4Intent(void *a1)
{
  if (a1[5]) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 2);
  }
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[11]);
  return swift_bridgeObjectRelease(a1[12]);
}

void type metadata accessor for PhoneCallAVMode()
{
}

uint64_t getEnumTagSinglePayload for PhoneCallAVMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_256_0(-1);
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 2);
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 2);
    }

    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 2);
    }
  }

uint64_t OUTLINED_FUNCTION_19_0()
{
  return swift_bridgeObjectRetain(v0);
}

void OUTLINED_FUNCTION_190(uint64_t a1, uint64_t *a2)
{
}

void OUTLINED_FUNCTION_29_0(uint64_t a1, uint64_t a2)
{
}

  ;
}

_BYTE *OUTLINED_FUNCTION_253@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  void *result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_76_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a1 + 48) = v2;
  return *(unsigned int *)(a2 + 4);
}

uint64_t OUTLINED_FUNCTION_125(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

void OUTLINED_FUNCTION_190_1(float a1)
{
  float *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_190_2(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t OUTLINED_FUNCTION_190_3(uint64_t a1, ...)
{
  return SirikitDeviceState.__allocating_init(from:)(va);
}

void type metadata accessor for PhoneCallAttribute()
{
}

uint64_t getEnumTag for SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned __int8 *a1)
{
  return *a1;
}

void type metadata accessor for PhoneCallAudioRoute()
{
}

uint64_t getEnumTagSinglePayload for PhoneCallCommonCATs.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }

void type metadata accessor for PhoneCallCapability()
{
}

void type metadata accessor for PhoneCallConfirmation()
{
}

uint64_t getEnumTagSinglePayload for PhoneCallConfirmation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_256_0(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 5);
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 5);
    }

    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 5);
    }
  }

void type metadata accessor for PhoneCallDestinationType()
{
}

void type metadata accessor for PhoneCallNoun()
{
}

uint64_t getEnumTagSinglePayload for SingleCallRecordModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }

void type metadata accessor for PhoneCallPreferredProvider()
{
}

uint64_t getEnumTagSinglePayload for PhoneCallPreferredProvider(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_256_0(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 3);
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 3);
    }

    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 3);
    }
  }

void type metadata accessor for PhoneCallReference()
{
}

uint64_t getEnumTagSinglePayload for PhoneCallReference(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xDE)
  {
    if (a2 + 34 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 34) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 35;
    return (v5 + 1);
  }

void type metadata accessor for PhoneCallVerb()
{
}

uint64_t getEnumTagSinglePayload for PhoneCallVerb(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 16) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }

void type metadata accessor for VoiceMail.VoiceMailVerb()
{
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryModel.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }

void type metadata accessor for VoiceMail.VoiceMailNoun()
{
}

Swift::Bool __swiftcall PhoneCallNLIntent.isEmergencyResourceCall()()
{
  if (v2)
  {
    OUTLINED_FUNCTION_47_11();
    do
    {
      OUTLINED_FUNCTION_36_15();
      uint64_t v3 = OUTLINED_FUNCTION_60_14(v7);
      if (v4 >= 3)
      {
        if (v4 != 3)
        {
          outlined consume of PhoneCallEmergencyType?(v3, v4);
          __swift_destroy_boxed_opaque_existential_1(v7);
          OUTLINED_FUNCTION_2_12();
          goto LABEL_11;
        }
      }

      else
      {
        outlined consume of PhoneCallEmergencyType?(v3, v4);
      }

      __swift_destroy_boxed_opaque_existential_1(v7);
      OUTLINED_FUNCTION_186_0();
    }

    while (!v5);
    OUTLINED_FUNCTION_2_12();
  }

  else
  {
    OUTLINED_FUNCTION_39();
  }

uint64_t OUTLINED_FUNCTION_2_0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_158()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_158_0(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, v2);
}

uint64_t OUTLINED_FUNCTION_158_1()
{
  return swift_arrayDestroy(*(void *)(v0 - 184), 2LL);
}

void OUTLINED_FUNCTION_158_2()
{
}

void OUTLINED_FUNCTION_228(uint64_t a1@<X8>)
{
  *(void *)(v3 + 232) = (v1 - 32) | 0x8000000000000000LL;
  *(void *)(v3 + 264) = a1;
  *(_BYTE *)(v3 + 240) = v2;
}

uint64_t OUTLINED_FUNCTION_233()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

  ;
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

  ;
}

void OUTLINED_FUNCTION_158_5(uint64_t a1, uint64_t a2)
{
}

void OUTLINED_FUNCTION_158_6(uint64_t a1, uint64_t (*a2)(void))
{
}

uint64_t OUTLINED_FUNCTION_158_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_158_8()
{
  return _CocoaArrayWrapper.endIndex.getter(v0);
}

  ;
}

void OUTLINED_FUNCTION_2_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_29_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1LL, 1LL, a4);
}

void OUTLINED_FUNCTION_167(uint64_t a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_252(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_162(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

void OUTLINED_FUNCTION_167_0(uint64_t a1@<X8>)
{
}

void OUTLINED_FUNCTION_167_1()
{
}

uint64_t OUTLINED_FUNCTION_167_2@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

void OUTLINED_FUNCTION_167_3()
{
}

uint64_t SiriPhoneContact.getEmergencyType()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t protocol witness for SiriPhoneContact.emergencyType.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 504LL))();
}

void PhoneCallNLv4Contact.emergencyType.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_9_0();
  outlined copy of PhoneCallEmergencyType?(v1, v2);
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_60_2();
}

uint64_t outlined copy of PhoneCallEmergencyType?(uint64_t a1, unint64_t a2)
{
  if (a2 != 3) {
    return outlined copy of PhoneCallEmergencyType(a1, a2);
  }
  return a1;
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  uint64_t v2 = *v0;
  *(void *)(v1 - 8) = *v0;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t OUTLINED_FUNCTION_11(uint64_t a1)
{
  return swift_bridgeObjectRetain_n(a1, 2LL);
}

uint64_t OUTLINED_FUNCTION_142@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t OUTLINED_FUNCTION_159()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 200) = 0LL;
  *(void *)(v0 + 208) = 0LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v4, a4);
}

void OUTLINED_FUNCTION_159_0()
{
  *(void *)(v0 + 128) = 0x5074737269467369LL;
  *(void *)(v0 + 136) = 0xEF70704179747261LL;
}

void OUTLINED_FUNCTION_227(char a1@<W8>)
{
  *(void *)(v3 + 328) = (v1 - 32) | 0x8000000000000000LL;
  *(void *)(v3 + 360) = v2;
  *(_BYTE *)(v3 + 336) = a1;
}

uint64_t OUTLINED_FUNCTION_256@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 88) = (v2 - 32) | 0x8000000000000000LL;
  *(void *)(result + 120) = a2;
  *(_BYTE *)(result + 96) = v3;
  return result;
}

void OUTLINED_FUNCTION_159_1(void *a1)
{
  char v3 = __swift_project_boxed_opaque_existential_1(a1, v1);
  PhoneCallNLIntent.applicationId.getter(v1, v2, (uint64_t)v3);
}

void OUTLINED_FUNCTION_159_2()
{
}

Swift::Bool __swiftcall PhoneCallNLIntent.isEmergencyCall()()
{
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isEmergencyServicesCall()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = OUTLINED_FUNCTION_51_4(v0, v1);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v7 = v4 + 32;
    OUTLINED_FUNCTION_124();
    while (1)
    {
      outlined init with copy of SiriPhoneContact();
      uint64_t v8 = v29[4];
      uint64_t v9 = OUTLINED_FUNCTION_102_3(v29);
      uint64_t v10 = SiriPhoneContact.getEmergencyType()(v9, v8);
      if (v11 != 3)
      {
        if (v11 == 1)
        {
          int v12 = 1;
          uint64_t v13 = outlined consume of PhoneCallEmergencyType?(v10, 1uLL);
          OUTLINED_FUNCTION_11_6(v13);
          OUTLINED_FUNCTION_7_4(v5);
          goto LABEL_11;
        }

        uint64_t v10 = outlined consume of PhoneCallEmergencyType?(v10, v11);
      }

      OUTLINED_FUNCTION_11_6(v10);
      v7 += 40LL;
      if (!--v6)
      {
        OUTLINED_FUNCTION_7_4(v5);
        goto LABEL_9;
      }
    }
  }

  OUTLINED_FUNCTION_4_1();
LABEL_9:
  int v12 = 0;
LABEL_11:
  (*(void (**)(uint64_t, uint64_t))(v2 + 72))(v3, v2);
  OUTLINED_FUNCTION_120_3();
  if (v18)
  {
    if (!v12) {
      return 0;
    }
  }

  else
  {
    uint64_t v16 = PhoneCallDestinationType.rawValue.getter(v14);
    BOOL v18 = v16 == 0x636E656772656D65LL && v17 == 0xE900000000000079LL;
    if (v18)
    {
      OUTLINED_FUNCTION_229(121LL);
    }

    else
    {
      OUTLINED_FUNCTION_133_3();
      int v22 = OUTLINED_FUNCTION_49_2(v19, v20, v21, 0xE900000000000079LL);
      OUTLINED_FUNCTION_39();
      Swift::Bool result = 0;
      if (((v12 | v22) & 1) == 0) {
        return result;
      }
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = OUTLINED_FUNCTION_15_1();
  uint64_t v24 = (void *)OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_10(v25))
  {
    uint64_t v26 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    *uint64_t v26 = 0;
    OUTLINED_FUNCTION_2_2(&dword_0, v27, v28, "#PhoneCallNLIntent EmergencyServices intent");
    OUTLINED_FUNCTION_0_2((uint64_t)v26);
  }

  return 1;
}

uint64_t PhoneCallNLv4Intent.phoneCallDestinationType.getter()
{
  return *(unsigned __int8 *)(v0 + 75);
}

  ;
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_210()
{
  return swift_bridgeObjectRelease(0xE800000000000000LL);
}

uint64_t OUTLINED_FUNCTION_209()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 32));
}

__n128 OUTLINED_FUNCTION_210_0()
{
  return *(__n128 *)(v0 - 144);
}

uint64_t OUTLINED_FUNCTION_210_1()
{
  return swift_retain(*(void *)(v0 + 32));
}

Swift::Bool __swiftcall PhoneCallNLIntent.isEmergencyContactCall()()
{
  if (!v2)
  {
    OUTLINED_FUNCTION_39();
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_47_11();
  while (1)
  {
    OUTLINED_FUNCTION_36_15();
    uint64_t v3 = OUTLINED_FUNCTION_60_14(v7);
    if (v4 != 3) {
      break;
    }
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(v7);
    OUTLINED_FUNCTION_186_0();
    if (v5)
    {
      OUTLINED_FUNCTION_2_12();
      goto LABEL_12;
    }
  }

  if (v4)
  {
    outlined consume of PhoneCallEmergencyType?(v3, v4);
    goto LABEL_6;
  }

  outlined consume of PhoneCallEmergencyType?(v3, 0LL);
  __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_2_12();
LABEL_12:
  OUTLINED_FUNCTION_46_14();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isEmergencyNumberCall()()
{
  if (!v2)
  {
    OUTLINED_FUNCTION_39();
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_47_11();
  while (1)
  {
    OUTLINED_FUNCTION_36_15();
    uint64_t v3 = OUTLINED_FUNCTION_60_14(v7);
    if (v4 != 3) {
      break;
    }
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(v7);
    OUTLINED_FUNCTION_186_0();
    if (v5)
    {
      OUTLINED_FUNCTION_2_12();
      goto LABEL_12;
    }
  }

  if (v4 != 2)
  {
    outlined consume of PhoneCallEmergencyType?(v3, v4);
    goto LABEL_6;
  }

  outlined consume of PhoneCallEmergencyType?(v3, 2uLL);
  __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_2_12();
LABEL_12:
  OUTLINED_FUNCTION_46_14();
  return result;
}

uint64_t static ExecutionPath.shouldRouteToLocalSearch(nlIntent:sharedGlobals:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  int v3 = swift_dynamicCast(v5, v6, v2, &type metadata for PhoneCallNLv4Intent, 6LL);
  if (v3)
  {
    outlined destroy of PhoneCallNLv4Intent(v5);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    LOBYTE(v3) = PhoneCallNLIntent.isBusinessNameCall()();
  }

  return v3 & 1;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isBusinessNameCall()()
{
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = OUTLINED_FUNCTION_111_3(v2, v3);
  if (v4)
  {
    if (*(void *)(v4 + 16))
    {
      OUTLINED_FUNCTION_124();
      OUTLINED_FUNCTION_25_31();
      __asm { BR              X9 }
    }

    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
    OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }

  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

void sub_19F8C()
{
}

uint64_t PhoneCallNLv4Intent.phoneCallAttributes.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 64));
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return swift_bridgeObjectRelease(v0);
}

double OUTLINED_FUNCTION_162_0()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_162_1()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_162_2()
{
  return ParameterResolutionRecord.parameter.getter(v0);
}

uint64_t OUTLINED_FUNCTION_162_3()
{
  return 0x636E656772656D65LL;
}

void OUTLINED_FUNCTION_162_4()
{
  *(_BYTE *)(v0 + 95) = -18;
}

uint64_t OUTLINED_FUNCTION_207_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 72));
}

uint64_t OUTLINED_FUNCTION_162_5()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_162_6( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_162_7(float a1)
{
  float *v1 = a1;
}

BOOL OUTLINED_FUNCTION_162_8()
{
  return PhoneCallNLIntent.hasAnyConfirmation()();
}

uint64_t OUTLINED_FUNCTION_162_9(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 8) + 8LL) + 8LL))(v1);
}

uint64_t OUTLINED_FUNCTION_162_10()
{
  return static Device.current.getter();
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasPhoneNumber()()
{
  if (!v2)
  {
    OUTLINED_FUNCTION_39();
    goto LABEL_14;
  }

  OUTLINED_FUNCTION_47_11();
  while (1)
  {
    OUTLINED_FUNCTION_36_15();
    unint64_t v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(v9, v9[3]);
    Swift::String_optional v4 = SiriPhoneContact.getPhoneNumber()();
    if (v4.value._object) {
      break;
    }
    OUTLINED_FUNCTION_11_6(v4.value._countAndFlagsBits);
LABEL_10:
    OUTLINED_FUNCTION_186_0();
    if (v7) {
      goto LABEL_8;
    }
  }

  uint64_t v5 = OUTLINED_FUNCTION_34(v4.value._countAndFlagsBits, (uint64_t)v4.value._object);
  if ((v3 & 0x2000000000000000LL) != 0) {
    uint64_t v6 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v6 = v4.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  OUTLINED_FUNCTION_11_6(v5);
  if (!v6) {
    goto LABEL_10;
  }
LABEL_8:
  OUTLINED_FUNCTION_2_12();
LABEL_14:
  OUTLINED_FUNCTION_46_14();
  return result;
}

Swift::String_optional __swiftcall SiriPhoneContact.getPhoneNumber()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 152))();
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for SiriPhoneContact.telephoneNumber.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 408LL))();
}

void PhoneCallNLv4Contact.telephoneNumber.getter()
{
}

uint64_t specialized SharedGlobalsProviding.featureManager.getter()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
  uint64_t v0 = type metadata accessor for PhoneCallFeatureManager();
  uint64_t v1 = swift_allocObject(v0, 56LL, 7LL);
  Swift::String_optional v4 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v5 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v3 = swift_allocObject(&unk_419AA0, 192LL, 7LL);
  memcpy((void *)(v3 + 16), &static PhoneCallFeatureFlags.instance, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v3, v1 + 16);
  outlined retain of PhoneCallFeatureFlags(__dst);
  return v1;
}

uint64_t type metadata accessor for PhoneCallFeatureManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin23PhoneCallFeatureManager);
}

void PhoneCallFeatureManager.shouldEnableCompositionFlow.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 104));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

uint64_t PhoneCallFeatureManager.featureFlags.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return outlined init with copy of SignalProviding(v3, a1);
}

uint64_t outlined init with copy of SignalProviding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void PhoneCallFeatureFlags.shouldEnableCompositionFlow.getter()
{
  if (v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_5_17(v2);
    while (1)
    {
      uint64_t v11 = OUTLINED_FUNCTION_3_23(v3, v4, v5, v6, v7, v8, v9, v10, v33);
      uint64_t v19 = OUTLINED_FUNCTION_4_16(v11, v12, v13, v14, v15, v16, v17, v18, v34);
      uint64_t v27 = OUTLINED_FUNCTION_2_17(v19, v20, v21, v22, v23, v24, v25, v26, v35);
      if ((v0 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_7_19();
      if (v32)
      {
        OUTLINED_FUNCTION_1_22(v3, v4, v5, v6, v7);
        goto LABEL_9;
      }
    }

    OUTLINED_FUNCTION_1_22(v27, v28, v29, v30, v31);
  }

LABEL_9:
  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  uint64_t v16 = *(void *)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 48);
  ((void (*)(uint64_t))PersonNameComponents.init())(v11);
  OUTLINED_FUNCTION_4_37();
  outlined init with take of String?( v0 + 88,  v6 - 200,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  uint64_t v18 = *(void *)(v6 - 192);
  if (v18 == 1)
  {
    uint64_t v19 = 0LL;
    uint64_t v18 = 0LL;
  }

  else
  {
    uint64_t v19 = *(void *)(v6 - 200);
    OUTLINED_FUNCTION_6_3();
    outlined release of PhoneCallPersonName?((uint64_t *)(v0 + 88));
  }

  ((void (*)(uint64_t, uint64_t))PersonNameComponents.givenName.setter)(v19, v18);
  OUTLINED_FUNCTION_4_37();
  outlined init with take of String?( v0 + 200,  v0 + 1208,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  if (*(void *)(v0 + 1216) == 1LL)
  {
    OUTLINED_FUNCTION_33_17();
  }

  else
  {
    OUTLINED_FUNCTION_48_0();
    outlined release of PhoneCallPersonName?((uint64_t *)(v0 + 200));
  }

  uint64_t v20 = OUTLINED_FUNCTION_14_20();
  ((void (*)(uint64_t))PersonNameComponents.middleName.setter)(v20);
  OUTLINED_FUNCTION_4_37();
  outlined init with take of String?( v0 + 312,  v0 + 1096,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  if (*(void *)(v0 + 1104) == 1LL)
  {
    OUTLINED_FUNCTION_33_17();
  }

  else
  {
    OUTLINED_FUNCTION_48_0();
    outlined release of PhoneCallPersonName?((uint64_t *)(v0 + 312));
  }

  uint64_t v21 = OUTLINED_FUNCTION_14_20();
  ((void (*)(uint64_t))PersonNameComponents.familyName.setter)(v21);
  OUTLINED_FUNCTION_4_37();
  outlined init with take of String?( v0 + 424,  v0 + 984,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  if (*(void *)(v0 + 992) == 1LL)
  {
    OUTLINED_FUNCTION_33_17();
  }

  else
  {
    OUTLINED_FUNCTION_48_0();
    outlined release of PhoneCallPersonName?((uint64_t *)(v0 + 424));
  }

  uint64_t v22 = OUTLINED_FUNCTION_14_20();
  ((void (*)(uint64_t))PersonNameComponents.nickname.setter)(v22);
  OUTLINED_FUNCTION_4_37();
  outlined init with take of String?( v0 + 536,  v0 + 872,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  if (*(void *)(v0 + 880) == 1LL)
  {
    OUTLINED_FUNCTION_33_17();
  }

  else
  {
    OUTLINED_FUNCTION_48_0();
    outlined release of PhoneCallPersonName?((uint64_t *)(v0 + 536));
  }

  uint64_t v23 = OUTLINED_FUNCTION_14_20();
  ((void (*)(uint64_t))PersonNameComponents.namePrefix.setter)(v23);
  OUTLINED_FUNCTION_4_37();
  outlined init with take of String?( v0 + 648,  v0 + 760,  &demangling cache variable for type metadata for PhoneCallPersonName?);
  if (*(void *)(v0 + 768) == 1LL)
  {
    OUTLINED_FUNCTION_33_17();
  }

  else
  {
    OUTLINED_FUNCTION_48_0();
    outlined release of PhoneCallPersonName?((uint64_t *)(v0 + 648));
  }

  uint64_t v24 = OUTLINED_FUNCTION_14_20();
  ((void (*)(uint64_t))PersonNameComponents.nameSuffix.setter)(v24);
  (*(void (**)(uint64_t, uint64_t))(v1 + 200))(v12, v1);
  if (v25)
  {
    OUTLINED_FUNCTION_15_23();
    if (v26)
    {
      *(void *)(v0 + 48) = String._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_62();
      goto LABEL_32;
    }

    OUTLINED_FUNCTION_62();
  }

  *(void *)(v0 + 48) = 0LL;
LABEL_32:
  OUTLINED_FUNCTION_17_28();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease(v27);
  if (v28)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 64) + 16LL))(v17, v16, v2);
    uint64_t v29 = 0LL;
  }

  else
  {
    uint64_t v29 = 1LL;
  }

  __swift_storeEnumTagSinglePayload(v17, v29, 1LL, v2);
  uint64_t v30 = OUTLINED_FUNCTION_17_28();
  *(void *)(v0 + 24) = v31;
  *(void *)(v0 + 32) = v30;
  *(void *)char v0 = OUTLINED_FUNCTION_17_28();
  *(void *)(v0 + 8) = v32;
  uint64_t v33 = OUTLINED_FUNCTION_17_28();
  *(void *)(v0 + 40) = v2;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = objc_allocWithZone(&OBJC_CLASS___INPerson);
  uint64_t v38 = *(void **)(v0 + 48);
  *(void *)(v0 + 16) = v38;
  uint64_t v39 = *(id *)(v0 + 80);
  uint64_t v40 = @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:)( v39,  v17,  *(void *)(v0 + 32),  *(void *)(v0 + 24),  0LL,  *(void *)v0,  *(void *)(v0 + 8),  v34,  v36,  v38);
  objc_msgSend(v40, "setIsMe:", (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v12, v1) & 1);

  (*(void (**)(void, void))(*(void *)(v0 + 64) + 8LL))(*(void *)(v0 + 72), *(void *)(v0 + 40));
  return v40;
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  OUTLINED_FUNCTION_0_0();
}

  uint64_t v7 = *v2;
  *(void *)(*v2 + 8 * (v3 >> 6) + 56) |= 1LL << v3;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (!v9)
  {
    *(void *)(v7 + 16) = v10;
    return result;
  }

  __break(1u);
LABEL_12:
  Swift::String_optional result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SharedNeedsValueContext.NeedsValueCase);
  __break(1u);
  return result;
}

  OUTLINED_FUNCTION_21_18();
  if ((v22 & 0xC000000000000001LL) != 0) {
    uint64_t v23 = (id)OUTLINED_FUNCTION_38_3();
  }
  else {
    uint64_t v23 = *(id *)(v22 + 32);
  }
  uint64_t v24 = v23;
LABEL_15:
  OUTLINED_FUNCTION_62();
  uint64_t v22 = (unint64_t)[v24 personHandle];

  if (!v22 || (uint64_t v30 = [(id)v22 label]) == 0)
  {
LABEL_18:
    uint64_t v37 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1((uint64_t)v12, v38, v39, v37);
    goto LABEL_19;
  }

  uint64_t v31 = v30;
  char v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  uint64_t v34 = v33;

  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_34(v32, v34);
  uint64_t v35 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_88((uint64_t)v12, 0LL, v36, v35);
  OUTLINED_FUNCTION_70_2();
LABEL_19:
  type metadata accessor for DialogPersonHandle(0LL);
  uint64_t v40 = (id *)(id)v22;
  uint64_t v41 = DialogPersonHandle.__allocating_init(handle:)(v22);
  uint64_t v42 = type metadata accessor for DialogPersonHandle.Builder(0LL);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  uint64_t v43 = DialogPersonHandle.Builder.init()();
  if (v41)
  {
    uint64_t v44 = swift_retain();
    DialogPersonHandle.label.getter(v44);
    swift_release(v41);
  }

  else
  {
    uint64_t v45 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1((uint64_t)v10, v46, v47, v45);
  }

  uint64_t v48 = dispatch thunk of DialogPersonHandle.Builder.withLabel(_:)(v10);
  swift_release(v43);
  outlined destroy of SpeakableString?((uint64_t)v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v49 = @"PhoneNumber";
  uint64_t v50 = @"PhoneNumber";
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  uint64_t v53 = v52;

  OUTLINED_FUNCTION_1_34(v51, v53);
  uint64_t v54 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_88(v1, 0LL, v55, v54);
  dispatch thunk of DialogPersonHandle.Builder.withType(_:)(v1);
  swift_release(v48);
  uint64_t v56 = outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v57 = dispatch thunk of DialogPersonHandle.Builder.build()(v56);
  OUTLINED_FUNCTION_22();
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + **(void **)(v2 + 40)
                                                                 + 1344);
  swift_retain();
  v58(v12, v57, v59, v60);

  swift_release(v41);
  OUTLINED_FUNCTION_31_1(v57);
LABEL_23:
  outlined destroy of SpeakableString?((uint64_t)v12, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_39();
  return v4;
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = (os_log_s *)OUTLINED_FUNCTION_9();
  uint64_t v23 = static os_log_type_t.debug.getter(v21, v22);
  if (os_log_type_enabled(v21, v23))
  {
    uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl( &dword_0,  v21,  v23,  "#AddCallParticipantHandleIntentFollowUpFlow: Attempting to send a message with FaceTime Link",  v24,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v24);
  }

  uint64_t v44 = v15;
  uint64_t v45 = v17;

  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  memcpy(v48, &static PhoneCallFeatureFlags.instance, sizeof(v48));
  uint64_t v25 = type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject(v25, &v47);
  v50[1] = &type metadata for PhoneCallFeatureFlags;
  v50[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v49 = swift_allocObject(&unk_402178, 192LL, 7LL);
  memcpy((void *)(v49 + 16), v48, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v49, inited + 16);
  uint64_t v27 = (void *)(v2
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals);
  uint64_t v28 = *(void *)(v2
                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin42AddCallParticipantHandleIntentFollowUpFlow_sharedGlobals
                  + 24);
  uint64_t v29 = v27[4];
  __swift_project_boxed_opaque_existential_1(v27, v28);
  uint64_t v30 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v29 + 8);
  outlined retain of PhoneCallFeatureFlags(v48);
  v30(v46, v28, v29);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v46, (uint64_t)&v49);
  swift_release(inited);
  __swift_destroy_boxed_opaque_existential_1(v46);
  uint64_t v53 = *((void *)&v49 + 1);
  uint64_t v31 = v49;
  outlined release of Set<String>(&v53);
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( (uint64_t)v50,  (uint64_t)v52,  &demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v52);
  uint64_t v51 = v50[3];
  outlined release of Set<String>(&v51);
  type metadata accessor for MessagesFaceTimeLinkCompletionFlow(0LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v27, (uint64_t)v46);
  type metadata accessor for StartCallCATs(0LL);
  char v32 = swift_retain();
  static CATOption.defaultMode.getter(v32);
  uint64_t v33 = CATWrapper.__allocating_init(options:globals:)(v5, 0LL);
  uint64_t v34 = MessagesFaceTimeLinkCompletionFlow.__allocating_init(faceTimeLink:recipients:app:sharedGlobals:startCallCATs:)( v44,  v45,  v19,  v31,  v46,  v33);
  v46[0] = v34;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type MessagesFaceTimeLinkCompletionFlow and conformance MessagesFaceTimeLinkCompletionFlow,  type metadata accessor for MessagesFaceTimeLinkCompletionFlow,  (uint64_t)&protocol conformance descriptor for MessagesFaceTimeLinkCompletionFlow);
  static ExecuteResponse.complete<A>(next:)(v46);
  swift_release(v34);
  return swift_release(v31);
}

    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_88(v9, 1LL, v11, v10);
    goto LABEL_10;
  }

  Swift::String_optional result = (id)TUStringForCallStatus(4LL);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v4 = result;
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 72);
LABEL_8:
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_88(v6, 0LL, v8, v7);
  outlined init with take of SpeakableString?(v6, v5);
LABEL_10:
  OUTLINED_FUNCTION_9_76(*(void **)(v0 + 64));
  uint64_t v12 = OUTLINED_FUNCTION_10_75();
  if (v12)
  {
    OUTLINED_FUNCTION_31_44(v12);
    OUTLINED_FUNCTION_23_57();
    OUTLINED_FUNCTION_24_49();
  }

  else
  {
    uint64_t v1 = 0LL;
  }

  *(void *)(v0 + 96) = v1;
  uint64_t v13 = *(void *)(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  uint64_t v14 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for AddCallParticipantCATsSimple
                                                   + **(void **)(v13 + 56)
                                                   + 16));
  *(void *)(v0 + 104) = v14;
  *uint64_t v14 = v0;
  v14[1] = closure #1 in AddCallParticipantGuardFlowFactory.makeAddRestricted(_:);
  return (id)v15(v1, *(void *)(v0 + 88));
}

  return swift_bridgeObjectRelease();
}

  OUTLINED_FUNCTION_7_1();
}

    swift_bridgeObjectRelease();
  }

  OUTLINED_FUNCTION_7_5();
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v23 & 0xC000000000000001LL) == 0, v23);
  if ((v23 & 0xC000000000000001LL) != 0) {
    uint64_t v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
  }
  else {
    uint64_t v24 = *(id *)(v23 + 32);
  }
  uint64_t v25 = v24;
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t)[v25 personHandle];

  if (!v23 || (uint64_t v28 = [(id)v23 label]) == 0)
  {
LABEL_20:
    uint64_t v34 = type metadata accessor for SpeakableString(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1LL, 1LL, v34);
    goto LABEL_21;
  }

  uint64_t v29 = v28;
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  char v32 = v31;

  swift_bridgeObjectRetain();
  SpeakableString.init(print:speak:)(v30, v32, 0LL, 0LL);
  uint64_t v33 = type metadata accessor for SpeakableString(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v33);
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v55 = a5;
  type metadata accessor for DialogPersonHandle(0LL);
  uint64_t v35 = (id *)(id)v23;
  uint64_t v36 = DialogPersonHandle.__allocating_init(handle:)(v23);
  uint64_t v37 = type metadata accessor for DialogPersonHandle.Builder(0LL);
  uint64_t v38 = swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  uint64_t v39 = DialogPersonHandle.Builder.init()(v38);
  uint64_t v40 = a6;
  if (v36)
  {
    uint64_t v41 = swift_retain();
    DialogPersonHandle.label.getter(v41);
    swift_release(v36);
  }

  else
  {
    uint64_t v42 = type metadata accessor for SpeakableString(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1LL, 1LL, v42);
  }

  uint64_t v43 = dispatch thunk of DialogPersonHandle.Builder.withLabel(_:)(v11);
  swift_release(v39);
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v11,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v44 = @"PhoneNumber";
  uint64_t v45 = @"PhoneNumber";
  char v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  uint64_t v48 = v47;

  SpeakableString.init(print:speak:)(v46, v48, 0LL, 0LL);
  uint64_t v49 = type metadata accessor for SpeakableString(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0LL, 1LL, v49);
  uint64_t v50 = dispatch thunk of DialogPersonHandle.Builder.withType(_:)(v15);
  swift_release(v43);
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v15,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v52 = dispatch thunk of DialogPersonHandle.Builder.build()(v51);
  swift_release(v50);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + **(void **)(v54 + 40)
                                                                 + 1344);
  swift_retain();
  v53(v13, v52, v55, v40);

  swift_release(v36);
  swift_release_n(v52, 2LL);
LABEL_25:
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v13,  &demangling cache variable for type metadata for SpeakableString?);
}

const char *protocol witness for FeatureFlagsKey.domain.getter in conformance SiriPhoneFeature()
{
  return "SiriPhone";
}

uint64_t protocol witness for FeatureFlagsKey.feature.getter in conformance SiriPhoneFeature()
{
  return SiriPhoneFeature.feature.getter(*v0);
}

uint64_t SiriPhoneFeature.feature.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1A3D8 + 4 * asc_3208D0[a1]))( "SiriPhoneNLv4",  13LL);
}

void sub_1A3D8()
{
}

void *outlined release of Set<String>(void *a1)
{
  return a1;
}

uint64_t HandleIntentSubmitter.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

void PhoneCallFeatureManager.shouldEnablePOMMESFallback.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureFlags.pommesGeoSearchFlag.getter()
{
  if (v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_5_17(v2);
    while (1)
    {
      uint64_t v11 = OUTLINED_FUNCTION_3_23(v3, v4, v5, v6, v7, v8, v9, v10, v33);
      uint64_t v19 = OUTLINED_FUNCTION_4_16(v11, v12, v13, v14, v15, v16, v17, v18, v34);
      uint64_t v27 = OUTLINED_FUNCTION_2_17(v19, v20, v21, v22, v23, v24, v25, v26, v35);
      if ((v0 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_7_19();
      if (v32)
      {
        OUTLINED_FUNCTION_1_22(v3, v4, v5, v6, v7);
        goto LABEL_9;
      }
    }

    OUTLINED_FUNCTION_1_22(v27, v28, v29, v30, v31);
  }

const char *protocol witness for FeatureFlagsKey.domain.getter in conformance PommesFeature()
{
  return "Pommes";
}

const char *protocol witness for FeatureFlagsKey.feature.getter in conformance PommesFeature()
{
  return "geo_search";
}

uint64_t ContactNeedsValueGuardFlow.flowState.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  uint64_t v5 = swift_beginAccess(v4, v14, 33LL, 0LL);
  uint64_t v7 = OUTLINED_FUNCTION_32_4(v5, *(void *)(v3 + 80), *(void *)(v3 + 88), v6);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v4, a1, v7);
  uint64_t v9 = swift_endAccess(v14);
  ContactNeedsValueGuardFlow.flowState.didset(v9, v10, v11, v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

_BYTE *assignWithCopy for ContactNeedsValueGuardFlow.FlowState(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for Parse(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 1LL;
    }

    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }

      uint64_t v8 = type metadata accessor for PluginAction(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }

  return a1;
}

void ContactNeedsValueGuardFlow.flowState.didset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ContactNeedsValueGuardFlow.FlowState( 0LL,  *(void *)(*(void *)v4 + 80LL),  *(void *)(*(void *)v4 + 88LL),  a4);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - v8;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = swift_retain_n(v4, 2LL);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v14 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v23 = v14;
    uint64_t v15 = v5 + *(void *)(*(void *)v5 + 96LL);
    swift_beginAccess(v15, v22, 0LL, 0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, v6);
    uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for ContactNeedsValueGuardFlow<A>.FlowState,  v6);
    uint64_t v17 = String.init<A>(describing:)(v9, v6, WitnessTable);
    unint64_t v19 = v18;
    uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v19);
    swift_release_n(v5, 2LL);
    _os_log_impl(&dword_0, v20, v12, "#ContactNeedsValueGuardFlow state => %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v4, 2LL);
  }
}

uint64_t protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>(uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 168LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1);
}

uint64_t protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ContactNeedsValueGuardFlow.execute()()
{
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(os_log_s **)(v0 + 120);
  (*(void (**)(void))(*(void *)v3 + 128LL))();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 168) + 32LL))( *(void *)(v0 + 176),  *(void *)(v0 + 192),  *(void *)(v0 + 160));
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v19, (uint64_t)static Logger.siriPhone);
    os_log_type_t v20 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v20))
    {
      uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v21 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v3,  (os_log_type_t)v1,  "#ContactNeedsValueGuardFlow execute() Request needs execution of emergency resource flow on device. Deferring to Emergency plugin.",  v21);
      OUTLINED_FUNCTION_0_2((uint64_t)v21);
    }

    uint64_t v22 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 160);

    static ExecuteResponse.redirect(nextPluginAction:)(v8);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v8, v18);
    goto LABEL_24;
  }

  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(unsigned __int8 **)(v0 + 192);
    uint64_t v6 = *(os_log_s **)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 136);
    uint64_t v8 = *v5;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ExecutionPath.FallbackLocation, Parse));
    OUTLINED_FUNCTION_34_7( (uint64_t)&v5[*(int *)(v9 + 48)],  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    if ((_DWORD)v8 == 2)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v10 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v10, (uint64_t)static Logger.siriPhone);
      os_log_type_t v11 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v6, v11))
      {
        os_log_type_t v12 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)os_log_type_t v12 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v6,  v11,  "#ContactNeedsValueGuardFlow execute() deferring to CompositionFlow",  v12);
        OUTLINED_FUNCTION_0_2((uint64_t)v12);
      }

      uint64_t v14 = *(void *)(v0 + 144);
      uint64_t v13 = *(void *)(v0 + 152);
      uint64_t v15 = *(void *)(v0 + 128);
      uint64_t v16 = *(void *)(v0 + 136);
      uint64_t v8 = *(void *)(v0 + 120);

      uint64_t v3 = (os_log_s *)type metadata accessor for BusinessCompositionFlow(0LL);
      OUTLINED_FUNCTION_30_4(v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
      outlined init with copy of SignalProviding(v8 + *(void *)(*(void *)v8 + 112LL), v0 + 56);
      BusinessCompositionFlow.__allocating_init(parse:sharedGlobals:)(v14, v0 + 56);
      uint64_t v18 = v17;
      *(void *)(v0 + 104) = v17;
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type BusinessCompositionFlow and conformance BusinessCompositionFlow,  type metadata accessor for BusinessCompositionFlow,  (uint64_t)&protocol conformance descriptor for BusinessCompositionFlow);
      static ExecuteResponse.complete<A>(next:)(v0 + 104);
      swift_release(v18);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v28 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v28, (uint64_t)static Logger.siriPhone);
      os_log_type_t v29 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v6, v29))
      {
        uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v30 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v6,  v29,  "#ContactNeedsValueGuardFlow execute() Returning unhandled due to needsServerExecution",  v30);
        OUTLINED_FUNCTION_0_2((uint64_t)v30);
      }

      uint64_t v31 = *(void *)(v0 + 152);
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v18 = *(void *)(v0 + 136);
      uint64_t v33 = *(void *)(v0 + 120);

      outlined init with copy of SignalProviding(v33 + *(void *)(*(void *)v33 + 112LL), v0 + 16);
      uint64_t v34 = type metadata accessor for RedirectToServerFlow();
      swift_allocObject(v34, 65LL, 7LL);
      uint64_t v3 = (os_log_s *)RedirectToServerFlow.init(to:sharedGlobals:isSentinelFlow:)(v8, (__int128 *)(v0 + 16), 0);
      *(void *)(v0 + 96) = v3;
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type RedirectToServerFlow and conformance RedirectToServerFlow,  (uint64_t (*)(uint64_t))type metadata accessor for RedirectToServerFlow,  (uint64_t)&protocol conformance descriptor for RedirectToServerFlow);
      static ExecuteResponse.ongoing<A>(next:)(v0 + 96, v34, v35);
      swift_release(v3);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v31, v32);
    }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  OUTLINED_FUNCTION_21_3();
  swift_task_dealloc(v1);
  swift_task_dealloc(v0);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(*(void *)v0 + 200LL));
  return swift_task_switch(ContactNeedsValueGuardFlow.execute(), 0LL, 0LL);
}

uint64_t ContactNeedsValueGuardFlow.execute()(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = OUTLINED_FUNCTION_4_3();
  v2[16] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[17] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[18] = swift_task_alloc(v6);
  v2[19] = swift_task_alloc(v6);
  uint64_t v7 = OUTLINED_FUNCTION_31_7();
  v2[20] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[21] = v8;
  uint64_t v9 = OUTLINED_FUNCTION_23(v8);
  v2[22] = v9;
  uint64_t v11 = OUTLINED_FUNCTION_32_4(v9, *(void *)(v3 + 80), *(void *)(v3 + 88), v10);
  v2[23] = v11;
  _BYTE v2[24] = OUTLINED_FUNCTION_23(*(void *)(v11 - 8));
  return swift_task_switch(ContactNeedsValueGuardFlow.execute(), 0LL, 0LL);
}

void outlined init with copy of SharedGlobalsProviding(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_2();
}

void outlined init with copy of SiriPhoneContact()
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  (**(void (***)(uint64_t))(v2 - 8))(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t _s27PhoneCallFlowDelegatePlugin22SharedGlobalsProviding_pWOcTm_0()
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  (**(void (***)(uint64_t))(v2 - 8))(v0);
  return v0;
}

uint64_t type metadata accessor for RedirectToServerFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin20RedirectToServerFlow);
}

uint64_t RedirectToServerFlow.init(to:sharedGlobals:isSentinelFlow:)(char a1, __int128 *a2, char a3)
{
  *(_BYTE *)(v3 + 16) = a1;
  outlined init with take of AppSelectionSignalComponent(a2, v3 + 24);
  *(_BYTE *)(v3 + 64) = a3;
  return v3;
}

uint64_t protocol witness for SiriEnvironmentLocating.siriEnvironment.setter in conformance RedirectToCompanionFlow()
{
  return SiriEnvironmentLocating<>.siriEnvironment.setter();
}

uint64_t protocol witness for SiriEnvironmentLocating.siriEnvironment.getter in conformance RedirectToCompanionFlow()
{
  return SiriEnvironmentLocating<>.siriEnvironment.getter();
}

uint64_t protocol witness for Flow.execute() in conformance AddCallParticipantHandleIntentFollowUpFlow( uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 120LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1);
}

uint64_t RedirectToServerFlow.execute()(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = type metadata accessor for FlowUnhandledReason(0LL);
  v2[16] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[17] = v4;
  v2[18] = OUTLINED_FUNCTION_23(v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v2[19] = OUTLINED_FUNCTION_23(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for PommesContext.Source(0LL);
  v2[20] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[21] = v7;
  v2[22] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PommesContext?);
  v2[23] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  _BYTE v2[24] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[25] = v10;
  v2[26] = OUTLINED_FUNCTION_23(v10);
  return swift_task_switch(RedirectToServerFlow.execute(), 0LL, 0LL);
}

uint64_t RedirectToServerFlow.execute()()
{
  uint64_t v1 = __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 232);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl( &dword_0,  v2,  v3,  "#RedirectToServerFlow: Couldn't submit PommesContext before server fallback",  v6,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);
  }

  swift_errorRelease(v5);

  OUTLINED_FUNCTION_7_107(v7, enum case for FlowUnhandledReason.needsInfoDomainFallback(_:));
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_5_102();
  OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_7_107(v1, enum case for FlowUnhandledReason.needsInfoDomainFallback(_:));
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_5_102();
  OUTLINED_FUNCTION_3_118();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_s *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_s *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  *(void *)(v0 + 216) = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  os_log_type_t v3 = swift_retain_n(v1, 4LL);
  BOOL v4 = (os_log_s *)Logger.logObject.getter(v3);
  uint64_t v5 = static os_log_type_t.debug.getter();
  uint64_t v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 120);
  if (v6)
  {
    uint64_t v8 = OUTLINED_FUNCTION_7_0(18LL);
    uint64_t v9 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)&v41[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    *(_BYTE *)(v0 + 244) = *(_BYTE *)(v7 + 16);
    uint64_t v10 = String.init<A>(describing:)(v0 + 244, &type metadata for ExecutionPath.FallbackLocation);
    os_log_type_t v12 = v11;
    *(void *)(v0 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, (uint64_t *)v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_release_n(v7, 2LL);
    *(_WORD *)(v8 + 12) = 1024;
    uint64_t v13 = *(unsigned __int8 *)(v7 + 64);
    swift_release(v7);
    *(_DWORD *)(v0 + 240) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 244, v8 + 14, v8 + 18);
    swift_release(v7);
    _os_log_impl( &dword_0,  v4,  v5,  "#RedirectToServerFlow: Triggering server redirect to %s, isSentinelFlow = %{BOOL}d",  (uint8_t *)v8,  0x12u);
    swift_arrayDestroy(v9, 1LL);
    OUTLINED_FUNCTION_0_2(v9);
    OUTLINED_FUNCTION_0_2(v8);
  }

  else
  {
    swift_release_n(*(void *)(v0 + 120), 4LL);
  }

  uint64_t v15 = *(void *)(v0 + 120);
  if (*(_BYTE *)(v15 + 16))
  {
    if (*(_BYTE *)(v15 + 16) == 1)
    {
      uint64_t v16 = *(void *)(v0 + 208);
      uint64_t v40 = *(void *)(v0 + 200);
      uint64_t v17 = *(void *)(v0 + 184);
      uint64_t v18 = *(void *)(v0 + 192);
      uint64_t v19 = *(void *)(v0 + 168);
      os_log_type_t v20 = *(void *)(v0 + 176);
      uint64_t v21 = *(void *)(v0 + 152);
      uint64_t v22 = *(void *)(v0 + 160);
      NLContextUpdate.init()();
      (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))( v20,  enum case for PommesContext.Source.pluginDefined(_:),  v22);
      PommesContext.init(source:domain:listenAfterSpeaking:)(v20, 0x656E6F6870LL, 0xE500000000000000LL, 0LL);
      uint64_t v23 = type metadata accessor for PommesContext(0LL);
      __swift_storeEnumTagSinglePayload(v17, 0LL, 1LL, v23);
      NLContextUpdate.pommesContext.setter(v17);
      os_log_type_t v24 = *(void *)(v15 + 48);
      uint64_t v25 = *(void *)(v15 + 56);
      __swift_project_boxed_opaque_existential_1((void *)(v15 + 24), v24);
      (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
      uint64_t v26 = *(void *)(v0 + 40);
      uint64_t v27 = *(void *)(v0 + 56);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v26);
      uint64_t v42 = 0LL;
      memset(v41, 0, sizeof(v41));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v21, v16, v18);
      __swift_storeEnumTagSinglePayload(v21, 0LL, 1LL, v18);
      *(void *)(v0 + 88) = type metadata accessor for AceOutput(0LL);
      *(void *)(v0 + 96) = &protocol witness table for AceOutput;
      __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 64));
      AceOutput.init(commands:flowActivity:nlContextUpdate:)(_swiftEmptyArrayStorage, v41, v21);
      uint64_t v28 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
      *(void *)(v0 + 224) = v28;
      *uint64_t v28 = v0;
      v28[1] = RedirectToServerFlow.execute();
      return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 64, v26, v27);
    }

    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v14);
    uint64_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_0, v33, v34, "#RedirectToServerFlow: Invalid location.", v35, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v35);
    }

    uint64_t v37 = *(void *)(v0 + 136);
    uint64_t v36 = *(void *)(v0 + 144);
    uint64_t v39 = *(void *)(v0 + 120);
    uint64_t v38 = *(void *)(v0 + 128);

    (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))( v36,  enum case for FlowUnhandledReason.needsServerExecution(_:),  v38);
    uint64_t v31 = *(unsigned __int8 *)(v39 + 64);
    uint64_t v32 = v36;
  }

  else
  {
    uint64_t v30 = *(void *)(v0 + 144);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 136) + 104LL))( v30,  enum case for FlowUnhandledReason.needsServerExecution(_:),  *(void *)(v0 + 128));
    uint64_t v31 = *(unsigned __int8 *)(v15 + 64);
    uint64_t v32 = v30;
  }

  static ExecuteResponse.unhandled(reason:isComplete:)(v32, v31);
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8LL))(*(void *)(v0 + 144), *(void *)(v0 + 128));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v2 = *v1;
  os_log_type_t v3 = *(void *)(*v1 + 224);
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    BOOL v4 = RedirectToServerFlow.execute();
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1((void *)(v2 + 64));
    BOOL v4 = RedirectToServerFlow.execute();
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t protocol witness for Flow.execute(completion:) in conformance CallingIntentContinueInAppFlow<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160LL))();
}

Swift::Void __swiftcall PhoneCallFlowDelegatePlugin.warmup(refId:)(Swift::String refId)
{
  object = refId._object;
  uint64_t countAndFlagsBits = refId._countAndFlagsBits;
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  __swift_project_boxed_opaque_existential_1(v1 + 9, v4);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 8))(countAndFlagsBits, object, v4, v5);
}

Swift::Void __swiftcall EligibleAppFinder.prefetchApps(intentTypeNames:)(Swift::OpaquePointer intentTypeNames)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  os_log_type_t v12 = (void *)v1[2];
  uint64_t v13 = (Swift::OpaquePointer *)OUTLINED_FUNCTION_10_22((uint64_t)&unk_40D0D0);
  v13[2]._rawValue = intentTypeNames._rawValue;
  v13[3]._rawValue = v1;
  aBlock[4] = partial apply for closure #1 in EligibleAppFinder.prefetchApps(intentTypeNames:);
  uint64_t v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_4;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  swift_bridgeObjectRetain(intentTypeNames._rawValue);
  uint64_t v16 = swift_retain();
  static DispatchQoS.unspecified.getter(v16);
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v17 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v19 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A],  &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v6, v14);
  _Block_release(v14);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v6, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  swift_release(v23);
}

uint64_t EligibleAppFinder.makeTask(intentTypeName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_8();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for TaskPriority(0LL);
  __swift_storeEnumTagSinglePayload(v7, 1LL, 1LL, v8);
  uint64_t v9 = (void *)swift_allocObject(&unk_40D138, 48LL, 7LL);
  void v9[2] = 0LL;
  uint64_t v10 = v9 + 2;
  v9[3] = 0LL;
  void v9[4] = a1;
  v9[5] = a2;
  LODWORD(a1) = __swift_getEnumTagSinglePayload(v7, 1LL, v8);
  uint64_t v11 = swift_bridgeObjectRetain(a2);
  if ((_DWORD)a1 == 1)
  {
    outlined destroy of TaskPriority?(v7);
    uint64_t v12 = 0LL;
    uint64_t v13 = 0LL;
    uint64_t v14 = "/System/Library/PrivateFrameworks/SiriFlowEnvironment.framework/SiriFlowEnvironment";
  }

  else
  {
    unsigned __int8 v15 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
    uint64_t v14 = (char *)(v15 | 0x1C00LL);
    uint64_t v16 = *v10;
    if (*v10)
    {
      uint64_t v17 = v9[3];
      uint64_t ObjectType = swift_getObjectType(*v10);
      swift_unknownObjectRetain(v16);
      uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      uint64_t v13 = v19;
      swift_unknownObjectRelease(v16);
    }

    else
    {
      uint64_t v12 = 0LL;
      uint64_t v13 = 0LL;
    }
  }

  uint64_t v20 = OUTLINED_FUNCTION_10_22((uint64_t)&unk_40D160);
  *(void *)(v20 + 16) = &async function pointer to partial apply for closure #1 in EligibleAppFinder.makeTask(intentTypeName:);
  *(void *)(v20 + 24) = v9;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [App]);
  if (v13 | v12)
  {
    v24[0] = 0LL;
    v24[1] = 0LL;
    uint64_t v22 = v24;
    v24[2] = v12;
    uint64_t v24[3] = v13;
  }

  else
  {
    uint64_t v22 = 0LL;
  }

  return swift_task_create( v14,  v22,  v21,  &_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRSay17SiriAppResolution0E0CG_TG5TATu,  v20);
}

uint64_t protocol witness for Flow.on(input:) in conformance SentinelConditionalFlow<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112LL))() & 1;
}

uint64_t PlayVoiceMailAction.isLeadingSavedVoiceMailPostPrompt.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

void NLTransformer.transformToPhoneCallNLIntent(nlv3Intent:)()
{
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = OUTLINED_FUNCTION_73_2();
  uint64_t v51 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_11_0();
  uint64_t v50 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_25_6();
  uint64_t v49 = v10 - v11;
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_53_5();
  OUTLINED_FUNCTION_40_6();
  uint64_t v14 = v13;
  ((void (*)(void))NLIntent.domainNode.getter)();
  uint64_t v15 = type metadata accessor for NonTerminalIntentNode(0LL);
  uint64_t v16 = OUTLINED_FUNCTION_35(v1, 1LL, v15);
  if (v38)
  {
    outlined destroy of PhoneCallNLIntent?(v1, &demangling cache variable for type metadata for NonTerminalIntentNode?);
  }

  else
  {
    uint64_t v33 = v14;
    uint64_t v34 = v6;
    uint64_t v35 = NonTerminalIntentNode.ontologyNodeName.getter(v16);
    uint64_t v37 = v36;
    OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL));
    BOOL v38 = v35 == 0x6C6143656E6F6870LL && v37 == 0xE90000000000006CLL;
    if (v38)
    {
      swift_bridgeObjectRelease(0xE90000000000006CLL);
      uint64_t v6 = v34;
      uint64_t v14 = v33;
LABEL_18:
      NLTransformer.transformationResult(nlv3Intent:)();
      NLTransformer.appendToNLIntentHistory(transformationResult:)(&v52);
      outlined init with take of PhoneCallNLIntent?( (uint64_t)&v53,  v6,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      goto LABEL_21;
    }

    char v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, 0x6C6143656E6F6870LL, 0xE90000000000006CLL, 0LL);
    OUTLINED_FUNCTION_62();
    uint64_t v6 = v34;
    uint64_t v14 = v33;
    if ((v39 & 1) != 0) {
      goto LABEL_18;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v17 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_70_3(v17, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_56_4(v50, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
  uint64_t v18 = OUTLINED_FUNCTION_11_18((uint64_t)v2);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    char v47 = v19;
    uint64_t v48 = v6;
    uint64_t v21 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v46 = OUTLINED_FUNCTION_7_0(64LL);
    v54[0] = v46;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v22 = v2[4];
    uint64_t v23 = v2[5];
    uint64_t v25 = v2[6];
    os_log_type_t v24 = (void *)v2[7];
    uint64_t v52 = 0LL;
    unint64_t v53 = 0xE000000000000000LL;
    OUTLINED_FUNCTION_48_0();
    swift_bridgeObjectRetain(v23);
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v22, v23, v25, v24);
    OUTLINED_FUNCTION_34_0();
    swift_bridgeObjectRelease(v23);
    uint64_t v27 = OUTLINED_FUNCTION_29_9(0LL, v26, v54);
    uint64_t v28 = OUTLINED_FUNCTION_92(v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28, v29, v21 + 4, v30);
    OUTLINED_FUNCTION_31_1((uint64_t)v2);
    uint64_t v31 = OUTLINED_FUNCTION_39();
    *(_WORD *)(v21 + 12) = 2080;
    NLIntent.domainNode.getter(v31);
    uint64_t v32 = OUTLINED_FUNCTION_35(v49, 1LL, v15);
    if (v38)
    {
      outlined destroy of PhoneCallNLIntent?( v49,  &demangling cache variable for type metadata for NonTerminalIntentNode?);
      uint64_t v40 = 0x6E776F6E6B6E75LL;
    }

    else
    {
      uint64_t v40 = NonTerminalIntentNode.ontologyNodeName.getter(v32);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v49, v15);
    }

    uint64_t v42 = OUTLINED_FUNCTION_10_3(v40, v41, v54);
    uint64_t v43 = OUTLINED_FUNCTION_92(v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v43, v44, v21 + 14, v45);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_81_3(v50, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    OUTLINED_FUNCTION_33_6(&dword_0, v47, v20, "%s NLv3Intent is not in the phoneCall domain: %s", (uint8_t *)v21);
    OUTLINED_FUNCTION_12_24();
    OUTLINED_FUNCTION_0_2(v46);
    OUTLINED_FUNCTION_0_2(v21);

    uint64_t v6 = v48;
  }

  else
  {
    OUTLINED_FUNCTION_31_1((uint64_t)v2);
    OUTLINED_FUNCTION_81_3(v50, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
  }

  *(void *)(v6 + 32) = 0LL;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
LABEL_21:
  Signpost.OpenSignpost.end()();
  swift_release(v14);
  OUTLINED_FUNCTION_7_5();
}

void NLTransformer.transformationResult(nlv3Intent:)()
{
  uint64_t v3 = (void *)v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = OUTLINED_FUNCTION_73_2();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = OUTLINED_FUNCTION_44_9();
  uint64_t v11 = type metadata accessor for PhoneCallNLv3Intent(v10);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_25_6();
  uint64_t v15 = v13 - v14;
  __chkstk_darwin(v16);
  OUTLINED_FUNCTION_53_5();
  uint64_t v33 = NLIntent.hashValue.getter();
  NLTransformer.alreadyTransformed(newHash:)(v33, v36);
  if (v37 == 1)
  {
    OUTLINED_FUNCTION_58_4(v17, (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v5, v8);
    PhoneCallNLv3Intent.init(intent:)(v2, v1);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v18 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_70_3(v18, (uint64_t)static Logger.siriPhone);
    outlined init with copy of PhoneCallNLv3Intent(v1, v15);
    uint64_t v19 = OUTLINED_FUNCTION_11_18(v0);
    os_log_type_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v31 = OUTLINED_FUNCTION_7_0(64LL);
      v35[0] = v31;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v32 = v11;
      uint64_t v24 = v3[4];
      uint64_t v23 = v3[5];
      uint64_t v25 = v3[6];
      *(void *)&v36[0] = 0LL;
      *((void *)&v36[0] + 1) = 0xE000000000000000LL;
      OUTLINED_FUNCTION_6_1();
      swift_bridgeObjectRetain(v23);
      OUTLINED_FUNCTION_90_1(v24, v23, v25);
      OUTLINED_FUNCTION_50();
      swift_bridgeObjectRelease(v23);
      *(void *)&v36[0] = OUTLINED_FUNCTION_10_3(*(uint64_t *)&v36[0], v26, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v36, (char *)v36 + 8, v22 + 4, v22 + 12);
      OUTLINED_FUNCTION_31_1((uint64_t)v3);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v22 + 12) = 2080;
      unint64_t v27 = lazy protocol witness table accessor for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent();
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v32, v27);
      *(void *)&v36[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v35);
      uint64_t v11 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v36, (char *)v36 + 8, v22 + 14, v22 + 22);
      OUTLINED_FUNCTION_62();
      outlined destroy of PhoneCallNLv3Intent(v15);
      OUTLINED_FUNCTION_33_6( &dword_0,  v20,  v21,  "%s found no cached result. Transformation generated phoneNLIntent: %s",  (uint8_t *)v22);
      OUTLINED_FUNCTION_12_24();
      OUTLINED_FUNCTION_0_2(v31);
      OUTLINED_FUNCTION_0_2(v22);
    }

    else
    {
      OUTLINED_FUNCTION_31_1((uint64_t)v3);
      outlined destroy of PhoneCallNLv3Intent(v15);
    }

    v7[4] = v11;
    v7[5] = (uint64_t)&protocol witness table for PhoneCallNLv3Intent;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7 + 1);
    outlined init with take of PhoneCallNLv3Intent(v1, (uint64_t)boxed_opaque_existential_1);
    uint64_t *v7 = v33;
    OUTLINED_FUNCTION_74_2();
    outlined init with take of PhoneCallNLIntent?( (uint64_t)v36,  (uint64_t)v35,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    OUTLINED_FUNCTION_25_0((uint64_t)(v3 + 9), (uint64_t)v34, 33LL);
    OUTLINED_FUNCTION_88_2((uint64_t)v35);
    swift_endAccess(v34);
  }

  else
  {
    OUTLINED_FUNCTION_57_3();
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t type metadata accessor for RedirectToCompanionFlow.State(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata(a1, a3);
  }
  return result;
}

uint64_t type metadata accessor for PhoneCallNLv3Intent(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallNLv3Intent,  (uint64_t)&nominal type descriptor for PhoneCallNLv3Intent);
}

uint64_t PhoneCallNLv3Intent.init(intent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for PhoneCallNLv3Intent(0LL);
  uint64_t v4 = v3[5];
  OUTLINED_FUNCTION_67_10();
  OUTLINED_FUNCTION_26_62();
  uint64_t v101 = v5;
  swift_allocObject(v5, v6, v7);
  uint64_t v8 = AppOntologyNode.init(name:multicardinal:)(7368801LL, 0xE300000000000000LL, 0LL);
  *(void *)(a2 + v4) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallAttribute>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v100 = v9;
  swift_allocObject(v9, v10, v11);
  OUTLINED_FUNCTION_95();
  uint64_t v12 = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000013LL, 0x8000000000346D50LL, 1LL);
  OUTLINED_FUNCTION_48_36(v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallAudioRoute>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v99 = v13;
  swift_allocObject(v13, v14, v15);
  OUTLINED_FUNCTION_95();
  uint64_t v16 = OUTLINED_FUNCTION_41_42(0xD000000000000013LL, 0x8000000000346D70LL);
  OUTLINED_FUNCTION_48_36(v16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallCapability>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v98 = v17;
  swift_allocObject(v17, v18, v19);
  OUTLINED_FUNCTION_95();
  uint64_t v20 = OUTLINED_FUNCTION_41_42(0xD000000000000013LL, 0x8000000000346D90LL);
  OUTLINED_FUNCTION_48_36(v20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallPreferredProvider>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v96 = v21;
  swift_allocObject(v21, v22, v23);
  OUTLINED_FUNCTION_95();
  uint64_t v24 = OUTLINED_FUNCTION_41_42(0xD00000000000001ALL, 0x8000000000346DB0LL);
  OUTLINED_FUNCTION_48_36(v24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallDestinationType>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v90 = v25;
  swift_allocObject(v25, v26, v27);
  OUTLINED_FUNCTION_95();
  uint64_t v28 = OUTLINED_FUNCTION_41_42(0xD000000000000018LL, 0x8000000000346DD0LL);
  OUTLINED_FUNCTION_48_36(v28);
  type metadata accessor for PhoneCallContactOntologyNode(0LL);
  OUTLINED_FUNCTION_26_62();
  uint64_t v95 = v29;
  swift_allocObject(v29, v30, v31);
  OUTLINED_FUNCTION_95();
  uint64_t v32 = PhoneCallContactOntologyNode.init(name:multicardinal:)();
  OUTLINED_FUNCTION_48_36(v32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<String>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v97 = v33;
  swift_allocObject(v33, v34, v35);
  uint64_t v88 = v8;
  OUTLINED_FUNCTION_95();
  uint64_t v36 = OUTLINED_FUNCTION_41_42(0xD000000000000010LL, 0x8000000000346DF0LL);
  OUTLINED_FUNCTION_48_36(v36);
  uint64_t v37 = v3[14];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallNoun>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v91 = v38;
  swift_allocObject(v38, v39, v40);
  uint64_t v93 = v8;
  OUTLINED_FUNCTION_95();
  uint64_t v41 = OUTLINED_FUNCTION_92_17();
  uint64_t v42 = OUTLINED_FUNCTION_41_42(v41, 0xED00006E756F4E6CLL);
  *(void *)(a2 + v37) = v42;
  uint64_t v43 = v3[15];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallVerb>);
  OUTLINED_FUNCTION_26_62();
  uint64_t v94 = v44;
  swift_allocObject(v44, v45, v46);
  uint64_t v89 = v42;
  OUTLINED_FUNCTION_95_1();
  uint64_t v47 = OUTLINED_FUNCTION_0_106();
  uint64_t v49 = OUTLINED_FUNCTION_41_42(v47, v48);
  *(void *)(a2 + v43) = v49;
  uint64_t v50 = v3[16];
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v52 = OUTLINED_FUNCTION_8_2(v51, 112LL);
  *(_OWORD *)(v52 + 16) = xmmword_31D880;
  uint64_t v53 = one-time initialization token for voiceMailNoun;
  uint64_t v92 = v49;
  OUTLINED_FUNCTION_95_1();
  if (v53 != -1) {
    swift_once(&one-time initialization token for voiceMailNoun, one-time initialization function for voiceMailNoun);
  }
  uint64_t v54 = static VoiceMail.voiceMailNoun;
  *(void *)(v52 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailNoun>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<VoiceMail.VoiceMailNoun> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailNoun>);
  *(void *)(v52 + 64) = v55;
  *(void *)(v52 + 32) = v54;
  uint64_t v56 = one-time initialization token for voiceMailVerb;
  swift_retain();
  if (v56 != -1) {
    swift_once(&one-time initialization token for voiceMailVerb, one-time initialization function for voiceMailVerb);
  }
  uint64_t v57 = static VoiceMail.voiceMailVerb;
  *(void *)(v52 + 96) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailVerb>);
  OUTLINED_FUNCTION_18_72( &lazy protocol witness table cache variable for type TerminalOntologyNode<VoiceMail.VoiceMailVerb> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailVerb>);
  *(void *)(v52 + 104) = v58;
  *(void *)(v52 + 72) = v57;
  uint64_t v59 = OUTLINED_FUNCTION_73_29();
  OUTLINED_FUNCTION_15_2(v59);
  OUTLINED_FUNCTION_95_1();
  uint64_t v60 = NonTerminalOntologyNode.init(name:multicardinal:childNodes:)( 0x69614D6563696F76LL,  0xE90000000000006CLL,  0LL,  v52);
  *(void *)(a2 + v50) = v60;
  uint64_t v61 = v3[17];
  uint64_t v62 = type metadata accessor for SmsGroupOntologyNode(0LL);
  OUTLINED_FUNCTION_15_2(v62);
  uint64_t v87 = v60;
  swift_retain();
  uint64_t v63 = SmsGroupOntologyNode.init(name:multicardinal:)();
  *(void *)(a2 + v61) = v63;
  uint64_t v64 = type metadata accessor for NLIntent(0LL);
  uint64_t v86 = *(void *)(v64 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(a2, a1, v64);
  uint64_t v65 = OUTLINED_FUNCTION_8_2(v51, 632LL);
  *(_OWORD *)(v65 + 16) = xmmword_340180;
  *(void *)(v65 + 56) = v101;
  *(void *)(v65 + 64) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v65 + 32) = v8;
  *(void *)(v65 + 96) = v100;
  OUTLINED_FUNCTION_18_72( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallAttribute> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallAttribute>);
  *(void *)(v65 + 104) = v66;
  *(void *)(v65 + 72) = v8;
  *(void *)(v65 + 136) = v99;
  OUTLINED_FUNCTION_18_72( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallAudioRoute> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallAudioRoute>);
  *(void *)(v65 + 144) = v67;
  *(void *)(v65 + 112) = v8;
  *(void *)(v65 + 176) = v98;
  OUTLINED_FUNCTION_18_72( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallCapability> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallCapability>);
  *(void *)(v65 + 184) = v68;
  *(void *)(v65 + 152) = v8;
  *(void *)(v65 + 216) = v96;
  OUTLINED_FUNCTION_18_72( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallPreferredProvider> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallPreferredProvider>);
  *(void *)(v65 + 224) = v69;
  *(void *)(v65 + 192) = v8;
  *(void *)(v65 + 256) = v90;
  OUTLINED_FUNCTION_18_72( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallDestinationType> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallDestinationType>);
  *(void *)(v65 + 264) = v70;
  *(void *)(v65 + 232) = v8;
  uint64_t v71 = one-time initialization token for confirmation;
  swift_retain();
  if (v71 != -1) {
    swift_once(&one-time initialization token for confirmation, one-time initialization function for confirmation);
  }
  uint64_t v72 = static PhoneCallNLv3Intent.confirmation;
  *(void *)(v65 + 296) = OUTLINED_FUNCTION_68_29();
  OUTLINED_FUNCTION_95_18(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallConfirmation> and conformance TerminalOntologyNode<A>);
  *(void *)(v65 + 272) = v72;
  *(void *)(v65 + 336) = v95;
  *(void *)(v65 + 344) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v65 + 304) = v73;
  *(void *)(v65 + 312) = v88;
  uint64_t v74 = one-time initialization token for callId;
  OUTLINED_FUNCTION_95();
  if (v74 != -1) {
    swift_once(&one-time initialization token for callId, one-time initialization function for callId);
  }
  uint64_t v75 = static PhoneCallNLv3Intent.callId;
  *(void *)(v65 + 376) = v97;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<String> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<String>);
  *(void *)(v65 + 352) = v75;
  *(void *)(v65 + 416) = v97;
  *(void *)(v65 + 424) = v76;
  *(void *)(v65 + 384) = v76;
  *(void *)(v65 + 392) = v93;
  *(void *)(v65 + 456) = v91;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallNoun> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallNoun>);
  *(void *)(v65 + 464) = v77;
  *(void *)(v65 + 432) = v89;
  uint64_t v78 = one-time initialization token for reference;
  OUTLINED_FUNCTION_95();
  if (v78 != -1) {
    swift_once(&one-time initialization token for reference, one-time initialization function for reference);
  }
  uint64_t v79 = static PhoneCallNLv3Intent.reference;
  *(void *)(v65 + 496) = OUTLINED_FUNCTION_68_29();
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallReference> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallReference>);
  *(void *)(v65 + 504) = v80;
  *(void *)(v65 + 472) = v79;
  *(void *)(v65 + 536) = v94;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallVerb> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallVerb>);
  *(void *)(v65 + 544) = v81;
  *(void *)(v65 + 512) = v92;
  *(void *)(v65 + 576) = v59;
  *(void *)(v65 + 584) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v65 + 552) = v87;
  *(void *)(v65 + 616) = v62;
  *(void *)(v65 + 624) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v65 + 592) = v63;
  uint64_t v82 = type metadata accessor for DomainOntologyNode(0LL);
  OUTLINED_FUNCTION_15_2(v82);
  OUTLINED_FUNCTION_95();
  uint64_t v83 = OUTLINED_FUNCTION_92_17();
  uint64_t v84 = DomainOntologyNode.init(name:childNodes:isInEventTree:)(v83, 0xE90000000000006CLL, v65, 1LL);
  uint64_t result = OUTLINED_FUNCTION_26_5(a1, *(uint64_t (**)(uint64_t, uint64_t))(v86 + 8));
  *(void *)(a2 + v3[6]) = v84;
  return result;
}

uint64_t type metadata accessor for PhoneCallContactOntologyNode(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallContactOntologyNode,  (uint64_t)&nominal type descriptor for PhoneCallContactOntologyNode);
}

uint64_t PhoneCallContactOntologyNode.init(name:multicardinal:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 352LL);
  *(_OWORD *)(v1 + 16) = xmmword_323F90;
  if (one-time initialization token for personNode != -1) {
    swift_once(&one-time initialization token for personNode, one-time initialization function for personNode);
  }
  uint64_t v2 = static PhoneCallContactOntologyNode.personNode;
  *(void *)(v1 + 56) = OUTLINED_FUNCTION_73_29();
  *(void *)(v1 + 64) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = one-time initialization token for phoneNumberNode;
  OUTLINED_FUNCTION_95();
  if (v3 != -1) {
    swift_once(&one-time initialization token for phoneNumberNode, one-time initialization function for phoneNumberNode);
  }
  uint64_t v4 = static PhoneCallContactOntologyNode.phoneNumberNode;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<String>);
  *(void *)(v1 + 96) = v5;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<String> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<String>);
  uint64_t v7 = v6;
  *(void *)(v1 + 104) = v6;
  *(void *)(v1 + 72) = v4;
  uint64_t v8 = one-time initialization token for phoneCallContactNameNode;
  OUTLINED_FUNCTION_44_1();
  if (v8 != -1) {
    swift_once( &one-time initialization token for phoneCallContactNameNode,  one-time initialization function for phoneCallContactNameNode);
  }
  uint64_t v9 = static PhoneCallContactOntologyNode.phoneCallContactNameNode;
  *(void *)(v1 + 136) = v5;
  *(void *)(v1 + 144) = v7;
  *(void *)(v1 + 112) = v9;
  uint64_t v10 = one-time initialization token for phoneCallContactIdNode;
  swift_retain();
  if (v10 != -1) {
    swift_once( &one-time initialization token for phoneCallContactIdNode,  one-time initialization function for phoneCallContactIdNode);
  }
  uint64_t v11 = static PhoneCallContactOntologyNode.phoneCallContactIdNode;
  *(void *)(v1 + 176) = v5;
  *(void *)(v1 + 184) = v7;
  *(void *)(v1 + 152) = v11;
  uint64_t v12 = one-time initialization token for phoneCallContactRole;
  swift_retain();
  if (v12 != -1) {
    swift_once( &one-time initialization token for phoneCallContactRole,  one-time initialization function for phoneCallContactRole);
  }
  uint64_t v13 = static PhoneCallContactOntologyNode.phoneCallContactRole;
  *(void *)(v1 + 216) = OUTLINED_FUNCTION_68_29();
  OUTLINED_FUNCTION_95_18(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallContactRole.NLv3> and conformance TerminalOntologyNode<A>);
  *(void *)(v1 + 224) = v14;
  *(void *)(v1 + 192) = v13;
  uint64_t v15 = one-time initialization token for phoneCallContactReferenceNode;
  OUTLINED_FUNCTION_44_1();
  if (v15 != -1) {
    swift_once( &one-time initialization token for phoneCallContactReferenceNode,  one-time initialization function for phoneCallContactReferenceNode);
  }
  uint64_t v16 = static PhoneCallContactOntologyNode.phoneCallContactReferenceNode;
  *(void *)(v1 + 256) = OUTLINED_FUNCTION_68_29();
  OUTLINED_FUNCTION_95_18(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallContactReference> and conformance TerminalOntologyNode<A>);
  *(void *)(v1 + 264) = v17;
  *(void *)(v1 + 232) = v16;
  uint64_t v18 = one-time initialization token for emailAddressNode;
  OUTLINED_FUNCTION_44_1();
  if (v18 != -1) {
    swift_once( &one-time initialization token for emailAddressNode,  one-time initialization function for emailAddressNode);
  }
  uint64_t v19 = static PhoneCallContactOntologyNode.emailAddressNode;
  *(void *)(v1 + 296) = v5;
  *(void *)(v1 + 304) = v7;
  *(void *)(v1 + 272) = v19;
  uint64_t v20 = one-time initialization token for contactTypeNode;
  swift_retain();
  if (v20 != -1) {
    swift_once(&one-time initialization token for contactTypeNode, one-time initialization function for contactTypeNode);
  }
  uint64_t v21 = static PhoneCallContactOntologyNode.contactTypeNode;
  *(void *)(v1 + 336) = v5;
  *(void *)(v1 + 344) = v7;
  *(void *)(v1 + 312) = v21;
  swift_retain();
  OUTLINED_FUNCTION_91_18();
  return OUTLINED_FUNCTION_27_65();
}

void lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(OUTLINED_FUNCTION_110(v3), a1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for SmsGroupOntologyNode(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SmsGroupOntologyNode,  (uint64_t)&nominal type descriptor for SmsGroupOntologyNode);
}

uint64_t SmsGroupOntologyNode.init(name:multicardinal:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 112LL);
  *(_OWORD *)(v1 + 16) = xmmword_31D880;
  if (one-time initialization token for smsGroupName != -1) {
    swift_once(&one-time initialization token for smsGroupName, one-time initialization function for smsGroupName);
  }
  uint64_t v2 = static SmsGroupOntologyNode.smsGroupName;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<String>);
  *(void *)(v1 + 56) = v3;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<String> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<String>);
  uint64_t v5 = v4;
  *(void *)(v1 + 64) = v4;
  *(void *)(v1 + 32) = v2;
  uint64_t v6 = one-time initialization token for smsGroupNameId;
  OUTLINED_FUNCTION_44_1();
  if (v6 != -1) {
    swift_once(&one-time initialization token for smsGroupNameId, one-time initialization function for smsGroupNameId);
  }
  uint64_t v7 = static SmsGroupOntologyNode.smsGroupNameId;
  *(void *)(v1 + 96) = v3;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v7;
  swift_retain();
  OUTLINED_FUNCTION_91_18();
  return OUTLINED_FUNCTION_27_65();
}

uint64_t outlined init with copy of PhoneCallNLv3Intent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for PhoneCallNLv3Intent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void *)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void *)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void *)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v14 = *(void *)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  uint64_t v15 = a3[9];
  uint64_t v16 = a3[10];
  uint64_t v17 = *(void *)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  uint64_t v18 = *(void *)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = a3[11];
  uint64_t v20 = a3[12];
  uint64_t v21 = *(void *)(a2 + v19);
  *(void *)(a1 + v19) = v21;
  uint64_t v30 = *(void *)(a2 + v20);
  *(void *)(a1 + v20) = v30;
  uint64_t v22 = a3[13];
  uint64_t v23 = a3[14];
  uint64_t v24 = *(void *)(a2 + v22);
  *(void *)(a1 + v22) = v24;
  uint64_t v32 = *(void *)(a2 + v23);
  *(void *)(a1 + v23) = v32;
  uint64_t v25 = a3[15];
  uint64_t v26 = a3[16];
  uint64_t v31 = *(void *)(a2 + v25);
  *(void *)(a1 + v25) = v31;
  uint64_t v33 = *(void *)(a2 + v26);
  *(void *)(a1 + v26) = v33;
  uint64_t v27 = a3[17];
  uint64_t v28 = *(void *)(a2 + v27);
  *(void *)(a1 + v27) = v28;
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v17);
  swift_retain(v18);
  swift_retain(v21);
  swift_retain(v30);
  swift_retain(v24);
  swift_retain(v32);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v28);
  return a1;
}

unint64_t lazy protocol witness table accessor for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent;
  if (!lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent)
  {
    uint64_t v1 = type metadata accessor for PhoneCallNLv3Intent(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallNLv3Intent, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent);
  }

  return result;
}

void lazy protocol witness table accessor for type UUID and conformance UUID( unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  if (!*a1)
  {
    uint64_t v3 = a2(255LL);
    atomic_store(OUTLINED_FUNCTION_110(v3), a1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallNLv3Intent( uint64_t a1)
{
  return NLIntentWrapper.description.getter(a1, v2);
}

uint64_t protocol witness for NLIntentWrapper.intent.getter in conformance PhoneCallNLv3Intent( uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = OUTLINED_FUNCTION_105_2();
  return OUTLINED_FUNCTION_55_1(v3, v4, v5, v6);
}

uint64_t protocol witness for NLIntentWrapper.intent.getter in conformance PhoneCallNLv3Intent( uint64_t a1, uint64_t a2)
{
  return protocol witness for NLIntentWrapper.intent.getter in conformance PhoneCallNLv3Intent( a1,  a2,  (void (*)(void))&type metadata accessor for NLIntent);
}

void outlined destroy of PhoneCallNLv3Intent()
{
  uint64_t v1 = OUTLINED_FUNCTION_32_11();
  uint64_t v3 = v2(v1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(v0, v3);
  OUTLINED_FUNCTION_2();
}

uint64_t outlined destroy of PhoneCallNLv3Intent(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t destroy for PhoneCallNLv3Intent(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  swift_release(*(void *)(a1 + a2[5]));
  swift_release(*(void *)(a1 + a2[6]));
  swift_release(*(void *)(a1 + a2[7]));
  swift_release(*(void *)(a1 + a2[8]));
  swift_release(*(void *)(a1 + a2[9]));
  swift_release(*(void *)(a1 + a2[10]));
  swift_release(*(void *)(a1 + a2[11]));
  swift_release(*(void *)(a1 + a2[12]));
  swift_release(*(void *)(a1 + a2[13]));
  swift_release(*(void *)(a1 + a2[14]));
  swift_release(*(void *)(a1 + a2[15]));
  swift_release(*(void *)(a1 + a2[16]));
  return swift_release(*(void *)(a1 + a2[17]));
}

uint64_t outlined init with take of PhoneCallNLv3Intent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneCallNLv3Intent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v29 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = v10;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)v4 + v12) = v14;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = v15;
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)v4 + v16) = v18;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isEmergencyServicesCall(),  (uint64_t)PhoneCallNLIntent.isEmergencyContactCall(),  (uint64_t)PhoneCallNLIntent.isEmergencyNumberCall(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = v19;
    uint64_t v20 = a3[11];
    uint64_t v21 = a3[12];
    uint64_t v22 = *(uint64_t *)((char *)a2 + v20);
    *(uint64_t *)((char *)v4 + v20) = v22;
    uint64_t v31 = *(uint64_t *)((char *)a2 + v21);
    *(uint64_t *)((char *)v4 + v21) = v31;
    uint64_t v23 = a3[13];
    uint64_t v24 = a3[14];
    uint64_t v25 = *(uint64_t *)((char *)a2 + v23);
    *(uint64_t *)((char *)v4 + v23) = v25;
    uint64_t v33 = *(uint64_t *)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = v33;
    uint64_t v26 = a3[15];
    uint64_t v27 = a3[16];
    uint64_t v32 = *(uint64_t *)((char *)a2 + v26);
    *(uint64_t *)((char *)v4 + v26) = v32;
    uint64_t v34 = *(uint64_t *)((char *)a2 + v27);
    *(uint64_t *)((char *)v4 + v27) = v34;
    uint64_t v28 = a3[17];
    uint64_t v29 = *(uint64_t *)((char *)a2 + v28);
    *(uint64_t *)((char *)v4 + v28) = v29;
    swift_retain(v10);
    swift_retain(v11);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v18);
    swift_retain(v19);
    swift_retain(v22);
    swift_retain(v31);
    swift_retain(v25);
    swift_retain(v33);
    swift_retain(v32);
    swift_retain(v34);
  }

  swift_retain(v29);
  return v4;
}

void *__swift_assign_boxed_opaque_existential_1(void *result, void *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        unint64_t result = (void *)swift_release(v11);
        *uint64_t v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

void PhoneCallNLv3Intent.phoneCallConfirmation.getter()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_44_35();
  if (!v3) {
    OUTLINED_FUNCTION_52_31(v0, v1, v2);
  }
  type metadata accessor for PhoneCallNLv3Intent(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent);
  OUTLINED_FUNCTION_28_60(v4, &v5);
  OUTLINED_FUNCTION_24_0();
}

uint64_t protocol witness for IntentNodeTraversable.traversableIntentNode.getter in conformance PhoneCallNLv3Intent( uint64_t a1)
{
  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t protocol witness for IntentNodeTraversable.traversableOntologyNode.getter in conformance PhoneCallNLv3Intent( uint64_t a1)
{
  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t protocol witness for NLIntentWrapper.domainOntologyNode.getter in conformance PhoneCallNLv3Intent( uint64_t a1)
{
  return swift_retain(*(void *)(v1 + *(int *)(a1 + 24)));
}

uint64_t storeEnumTagSinglePayload for PhoneCallConfirmation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_1D920 + 4 * byte_32654E[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_254 + 4 * byte_326549[v4]))();
}

uint64_t sub_1D958(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1D960LL);
  }
  return result;
}

_BYTE *sub_1D968(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1D970LL);
  }
  return OUTLINED_FUNCTION_253((_BYTE *)a1, a2 + 4);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_189()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_98()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_27(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_189_1()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

void OUTLINED_FUNCTION_189_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void PhoneCallNLv3Intent.contacts.getter()
{
  void (*v1)(void *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_17_71();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent);
  OUTLINED_FUNCTION_77_21(v0);
  OUTLINED_FUNCTION_96_10();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( v1,  v2,  v3,  v4);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_0_0();
}

uint64_t closure #1 in PhoneCallNLv3Intent.contacts.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v7 = type metadata accessor for PhoneCallContactIntentNode(0LL);
  OUTLINED_FUNCTION_26_62();
  uint64_t v11 = swift_allocObject(v8, v9, v10);
  PhoneCallContactIntentNode.init(intentNode:ontologyNode:)();
  a2[3] = v7;
  a2[4] = (uint64_t)&protocol witness table for PhoneCallContactIntentNode;
  *a2 = v11;
  return swift_retain();
}

uint64_t type metadata accessor for PhoneCallContactIntentNode(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallContactIntentNode,  (uint64_t)&nominal type descriptor for PhoneCallContactIntentNode);
}

void PhoneCallContactIntentNode.init(intentNode:ontologyNode:)()
{
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel);
  void *v2 = 0LL;
  v2[1] = 0LL;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_emergencyLocationType) = 3;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_contactSource) = 3;
  uint64_t v3 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_39_37(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_ontologyNode) = v0;
  OUTLINED_FUNCTION_6();
}

uint64_t PhoneCallContactIntentNode.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

void PhoneCallContactIntentNode.deinit()
{
  uint64_t v1 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_2_0(v1);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_ontologyNode));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel
                                      + 8));
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for SiriPhoneContact.searchQualifier.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 520LL))() & 0xFFFFFF;
}

void PhoneCallContactIntentNode.searchQualifier.getter()
{
  if (one-time initialization token for phoneCallContactRole != -1) {
    swift_once( &one-time initialization token for phoneCallContactRole,  one-time initialization function for phoneCallContactRole);
  }
  type metadata accessor for PhoneCallContactIntentNode(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallContactIntentNode and conformance PhoneCallContactIntentNode,  type metadata accessor for PhoneCallContactIntentNode);
  OUTLINED_FUNCTION_28_60(v0, &v1);
  __asm { BR              X10 }

uint64_t protocol witness for IntentNodeTraversable.traversableIntentNode.getter in conformance PhoneCallContactIntentNode( uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallContactIntentNode, a1);
  return NonTerminalIntentNodeWrapper.traversableIntentNode.getter(a1, WitnessTable);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance ContactNeedsValueGuardFlow<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120LL))();
}

void PhoneCallContactIntentNode.intentNode.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_57(v1);
  OUTLINED_FUNCTION_60_2();
}

uint64_t protocol witness for IntentNodeTraversable.traversableOntologyNode.getter in conformance PhoneCallContactIntentNode( uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PhoneCallContactIntentNode, a1);
  return NonTerminalIntentNodeWrapper.traversableOntologyNode.getter(a1, WitnessTable);
}

uint64_t PhoneCallContactIntentNode.ontologyNode.getter()
{
  return swift_retain();
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallContactRole.NLv3()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

PhoneCallFlowDelegatePlugin::PhoneCallContactRole::NLv3_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallContactRole.NLv3@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallContactRole::NLv3_optional *a2@<X8>)
{
  result.value = PhoneCallContactRole.NLv3.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

PhoneCallFlowDelegatePlugin::PhoneCallContactRole::NLv3_optional __swiftcall PhoneCallContactRole.NLv3.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallContactRole.NLv3.init(rawValue:);
  PhoneCallPreferredProvider.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

void *OUTLINED_FUNCTION_160()
{
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_160_0( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &a34);
}

uint64_t OUTLINED_FUNCTION_160_1()
{
  return 0x746F6F7465756C62LL;
}

uint64_t OUTLINED_FUNCTION_175_0()
{
  return *(void *)(v0 + 8);
}

void OUTLINED_FUNCTION_257(char a1@<W8>)
{
  *(void *)(v3 + 232) = (v1 - 32) | 0x8000000000000000LL;
  *(void *)(v3 + 264) = v2;
  *(_BYTE *)(v3 + 240) = a1;
}

uint64_t OUTLINED_FUNCTION_160_2()
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v1, (v0 & 0xC000000000000001LL) == 0, v0);
}

uint64_t OUTLINED_FUNCTION_160_3()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_160_4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_15_2(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t OUTLINED_FUNCTION_3_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_38_0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_46()
{
  return swift_task_alloc(v0);
}

uint64_t OUTLINED_FUNCTION_12_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = __swift_project_value_buffer(a1, a2);
  return Logger.logObject.getter(v2);
}

uint64_t OUTLINED_FUNCTION_151()
{
  return swift_bridgeObjectRetain_n(v0, 2LL);
}

void OUTLINED_FUNCTION_151_0(uint64_t a1, uint64_t a2)
{
}

void OUTLINED_FUNCTION_151_1()
{
  *(_BYTE *)(v2 + 192) = v0;
  *(void *)(v2 + 216) = v1;
  *(void *)(v2 + 224) = 0x656D614E707061LL;
  *(void *)(v2 + 232) = 0xE700000000000000LL;
}

uint64_t OUTLINED_FUNCTION_151_2(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = v6;
  *(_BYTE *)(v7 + 82) = a5;
  *(_BYTE *)(v7 + 81) = a4;
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  *(_BYTE *)(v7 + 80) = result;
  return result;
}

void OUTLINED_FUNCTION_151_3(uint64_t a1@<X8>)
{
  v2[6] = v1;
  v2[9] = a1;
  v2[10] = 0xD000000000000014LL;
}

id OUTLINED_FUNCTION_151_4()
{
  return v0;
}

void OUTLINED_FUNCTION_151_5()
{
  *(void *)(v0 + 16) = v1;
}

void OUTLINED_FUNCTION_151_6(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 296) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_151_7()
{
  return type metadata accessor for SearchCallHistoryUnsupportedSearchParametersParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_151_8()
{
  return swift_task_dealloc(*(void *)(v0 + 288));
}

void NLTransformer.getPreviousTransformedNLResult()(uint64_t a1@<X8>)
{
  uint64_t v2 = OUTLINED_FUNCTION_13_23();
  uint64_t v3 = specialized BidirectionalCollection.suffix(_:)(2LL, v2);
  specialized Array.init<A>(_:)(v3, v4, v5, v6, specialized _copyCollectionToContiguousArray<A>(_:));
  uint64_t v8 = v7;
  if (*(void *)(v7 + 16) > 1uLL)
  {
    outlined init with copy of TransformationResult((uint64_t *)(v7 + 32), (void *)a1);
    OUTLINED_FUNCTION_16_6(v8);
  }

  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_57_2();
    *(_OWORD *)(a1 + 32) = xmmword_31D8A0;
    OUTLINED_FUNCTION_2();
  }

uint64_t specialized BidirectionalCollection.suffix(_:)(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  uint64_t v3 = *(void *)(a2 + 16);
  PhoneCallFlowDelegatePlugin::PhoneCallContactRole::NLv3_optional result = specialized Array.index(_:offsetBy:limitedBy:)(v3, -result, 0LL, a2);
  if ((v4 & 1) != 0) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = result;
  }
  if (v3 < v5) {
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000LL) == 0) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t specialized Array.index(_:offsetBy:limitedBy:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }

  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0LL;
    }
  }

  else if ((v3 & 0x8000000000000000LL) == 0 && v3 < (unint64_t)a2)
  {
    return 0LL;
  }

  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

void outlined init with copy of CommonDirectAction?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_57(v3);
  OUTLINED_FUNCTION_2();
}

uint64_t outlined init with copy of CommonDirectAction?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void PhoneCallNLIntent.shouldResetRequest(previousNLIntent:)()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v6);
  OUTLINED_FUNCTION_39_2();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - v9;
  outlined init with copy of PhoneCallNLIntent?(v8, (uint64_t)&v49);
  if (v50)
  {
    outlined init with take of AppSelectionSignalComponent(&v49, (uint64_t)v52);
    uint64_t v11 = OUTLINED_FUNCTION_249();
    OUTLINED_FUNCTION_103_4((uint64_t)v11);
    BOOL v12 = static PhoneCallNLIntent.isAppModified(previousNLIntent:currentNLIntent:)();
    OUTLINED_FUNCTION_91_5();
    if (v12)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v13 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_262();
      uint64_t v14 = OUTLINED_FUNCTION_103_4((uint64_t)v10);
      uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
      os_log_type_t v16 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v47 = OUTLINED_FUNCTION_7_0(64LL);
        uint64_t v48 = v47;
        *(_DWORD *)uint64_t v17 = 136315394;
        uint64_t v18 = v51;
        uint64_t v19 = OUTLINED_FUNCTION_102_3(&v49);
        PhoneCallNLIntent.applicationId.getter(v19, v18, v20);
        if (!v22) {
          uint64_t v21 = 7104878LL;
        }
        uint64_t v23 = OUTLINED_FUNCTION_108_2(v21);
        OUTLINED_FUNCTION_88_7(v23);
        OUTLINED_FUNCTION_62();
        __swift_destroy_boxed_opaque_existential_1(&v49);
        *(_WORD *)(v17 + 12) = 2080;
        PhoneCallNLIntent.applicationId.getter(v4, v2, v24);
        if (!v26) {
          uint64_t v25 = 7104878LL;
        }
        uint64_t v27 = OUTLINED_FUNCTION_108_2(v25);
        OUTLINED_FUNCTION_131_1(v27);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_41_2((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        OUTLINED_FUNCTION_12_35( &dword_0,  v15,  v16,  "#PhoneCallNLIntent applicationId is changed from %s to %s, set shouldResetRequest as true");
        OUTLINED_FUNCTION_158_1();
        OUTLINED_FUNCTION_0_2(v4);
        OUTLINED_FUNCTION_0_2(v17);

        goto LABEL_27;
      }

      uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
      uint64_t v40 = (uint64_t)v10;
    }

    else
    {
      uint64_t v28 = OUTLINED_FUNCTION_249();
      OUTLINED_FUNCTION_103_4((uint64_t)v28);
      char v29 = static PhoneCallNLIntent.isPhoneCallVerbModified(previousNLIntent:currentNLIntent:)();
      OUTLINED_FUNCTION_91_5();
      if ((v29 & 1) == 0) {
        goto LABEL_27;
      }
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v30 = OUTLINED_FUNCTION_15_1();
      uint64_t v31 = (os_log_s *)__swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_262();
      uint64_t v32 = OUTLINED_FUNCTION_103_4(v0);
      Logger.logObject.getter(v32);
      os_log_type_t v33 = OUTLINED_FUNCTION_234();
      if (os_log_type_enabled(v31, v33))
      {
        uint64_t v34 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v47 = OUTLINED_FUNCTION_7_0(64LL);
        uint64_t v48 = v47;
        *(_DWORD *)uint64_t v34 = 136315394;
        uint64_t v36 = v50;
        uint64_t v35 = v51;
        __swift_project_boxed_opaque_existential_1(&v49, v50);
        (*(void (**)(uint64_t, uint64_t))(v35 + 104))(v36, v35);
        OUTLINED_FUNCTION_22_25();
        if (v38) {
          uint64_t v41 = 7104878LL;
        }
        else {
          uint64_t v41 = PhoneCallVerb.rawValue.getter(v37);
        }
        uint64_t v42 = OUTLINED_FUNCTION_108_2(v41);
        OUTLINED_FUNCTION_88_7(v42);
        OUTLINED_FUNCTION_62();
        __swift_destroy_boxed_opaque_existential_1(&v49);
        *(_WORD *)(v34 + 12) = 2080;
        OUTLINED_FUNCTION_81_3(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 104));
        OUTLINED_FUNCTION_22_25();
        if (v38) {
          uint64_t v44 = 7104878LL;
        }
        else {
          uint64_t v44 = PhoneCallVerb.rawValue.getter(v43);
        }
        uint64_t v45 = OUTLINED_FUNCTION_108_2(v44);
        OUTLINED_FUNCTION_131_1(v45);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_41_2(v0, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        OUTLINED_FUNCTION_12_35( &dword_0,  v31,  v33,  "#PhoneCallNLIntent phoneCallVerb is changed from %s to %s, set shouldResetRequest as true");
        OUTLINED_FUNCTION_158_1();
        OUTLINED_FUNCTION_0_2(v4);
        OUTLINED_FUNCTION_0_2(v34);

        goto LABEL_27;
      }

      uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
      uint64_t v40 = v0;
    }

    OUTLINED_FUNCTION_41_2(v40, v39);
    OUTLINED_FUNCTION_91_5();
LABEL_27:
    __swift_destroy_boxed_opaque_existential_1(v52);
    goto LABEL_28;
  }

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v49,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_28:
  OUTLINED_FUNCTION_7_5();
}

BOOL static PhoneCallNLIntent.isAppModified(previousNLIntent:currentNLIntent:)()
{
  char v4 = OUTLINED_FUNCTION_243(v2, v3);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_36_15();
  OUTLINED_FUNCTION_201_0();
  if ((v4 & 1) != 0) {
    goto LABEL_2;
  }
  OUTLINED_FUNCTION_153_3(v51);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = v50[4];
  uint64_t v22 = OUTLINED_FUNCTION_102_3(v50);
  PhoneCallNLIntent.applicationId.getter(v22, v21, v23);
  if (!v20)
  {
    if (!v25) {
      goto LABEL_2;
    }
LABEL_26:
    OUTLINED_FUNCTION_62();
    __swift_destroy_boxed_opaque_existential_1(v51);
    uint64_t v47 = v50;
LABEL_29:
    __swift_destroy_boxed_opaque_existential_1(v47);
    return 1LL;
  }

  if (!v25) {
    goto LABEL_26;
  }
  if (v18 == v24 && v20 == v25)
  {
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_62();
LABEL_2:
    __swift_destroy_boxed_opaque_existential_1(v51);
    __swift_destroy_boxed_opaque_existential_1(v50);
    goto LABEL_3;
  }

  char v27 = OUTLINED_FUNCTION_49_2(v18, v20, v24, v25);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_62();
  __swift_destroy_boxed_opaque_existential_1(v51);
  __swift_destroy_boxed_opaque_existential_1(v50);
  if ((v27 & 1) == 0) {
    return 1LL;
  }
LABEL_3:
  OUTLINED_FUNCTION_154_2(v0);
  char v7 = OUTLINED_FUNCTION_243(v5, v6);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_36_15();
  OUTLINED_FUNCTION_201_0();
  if ((v7 & 1) != 0)
  {
LABEL_4:
    uint64_t v8 = __swift_destroy_boxed_opaque_existential_1(v49);
    OUTLINED_FUNCTION_221(v8, v9, v10, v11, v12, v13, v14, v15, v48[0]);
    return 0LL;
  }

  __swift_project_boxed_opaque_existential_1(v49, v49[3]);
  uint64_t v28 = OUTLINED_FUNCTION_245();
  PhoneCallNLIntent.appName.getter(v28, v29, v30);
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  OUTLINED_FUNCTION_154_2(v48);
  if (!v34)
  {
    if (!v36) {
      goto LABEL_4;
    }
    goto LABEL_28;
  }

  if (!v36)
  {
LABEL_28:
    OUTLINED_FUNCTION_62();
    __swift_destroy_boxed_opaque_existential_1(v49);
    uint64_t v47 = v48;
    goto LABEL_29;
  }

  if (v32 == v35 && v34 == v36)
  {
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
    goto LABEL_4;
  }

  char v38 = OUTLINED_FUNCTION_49_2(v32, v34, v35, v36);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_62();
  uint64_t v39 = __swift_destroy_boxed_opaque_existential_1(v49);
  OUTLINED_FUNCTION_221(v39, v40, v41, v42, v43, v44, v45, v46, v48[0]);
  return (v38 & 1) == 0;
}

unint64_t OUTLINED_FUNCTION_102(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_193()
{
  return swift_release(*(void *)(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_77_1(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return *(void *)(v0 + 8);
}

void OUTLINED_FUNCTION_97(uint64_t a1, uint64_t *a2)
{
}

  ;
}

void OUTLINED_FUNCTION_193_1()
{
  *(void *)(v0 + 80) = 0x6954656361467369LL;
  *(void *)(v0 + 88) = 0xEA0000000000656DLL;
}

  ;
}

  ;
}

void PhoneCallNLIntent.applicationId.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = OUTLINED_FUNCTION_228_0(a1, a2, a3);
  if (v7)
  {
    OUTLINED_FUNCTION_177_1((uint64_t)v4);
    uint64_t v5 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    OUTLINED_FUNCTION_11_6(v5);
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v6,  &demangling cache variable for type metadata for PhoneCallApp?);
  }

  OUTLINED_FUNCTION_0_0();
}

void PhoneCallNLv3Intent.app.getter(uint64_t a1@<X8>)
{
  uint64_t v5 = OUTLINED_FUNCTION_60_28();
  uint64_t v6 = type metadata accessor for PhoneCallNLv3Intent(v5);
  uint64_t v7 = *(void *)(v1 + *(int *)(v6 + 20));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent);
  IntentNodeTraversable.intentNode(forOntologyNode:)(v7, v6, v8);
  _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF12SiriOntology21NonTerminalIntentNodeV_s5NeverO27PhoneCallFlowDelegatePlugin0jK3App_pTg5( (void (*)(char *))partial apply for closure #1 in PhoneCallNLv3Intent.app.getter,  a1);
  OUTLINED_FUNCTION_119_7(v2);
}

uint64_t specialized Optional<A>.isNilOrEmpty.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v3 = v2 == 0;
  return !a2 || v3;
}

uint64_t OUTLINED_FUNCTION_7_4(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 2LL);
}

uint64_t OUTLINED_FUNCTION_43()
{
  return CATWrapperSimple.init(useResponseMode:options:)(v0, v1);
}

void OUTLINED_FUNCTION_195(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

  ;
}

_WORD *OUTLINED_FUNCTION_31_0(_WORD *result)
{
  void *result = 0;
  return result;
}

void OUTLINED_FUNCTION_195_1(uint64_t a1@<X8>)
{
  *(void *)(v3 + 184) = (a1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v3 + 192) = v1 & 1;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

void OUTLINED_FUNCTION_195_2()
{
  *(_WORD *)(v0 + 12) = 2080;
}

void *OUTLINED_FUNCTION_195_3()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v1 - 200), v0);
}

void PhoneCallNLIntent.appName.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = OUTLINED_FUNCTION_228_0(a1, a2, a3);
  if (v7)
  {
    OUTLINED_FUNCTION_177_1((uint64_t)v4);
    uint64_t v5 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16));
    OUTLINED_FUNCTION_11_6(v5);
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v6,  &demangling cache variable for type metadata for PhoneCallApp?);
  }

  OUTLINED_FUNCTION_0_0();
}

uint64_t static PhoneCallNLIntent.isPhoneCallVerbModified(previousNLIntent:currentNLIntent:)()
{
  uint64_t v1 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 104));
  OUTLINED_FUNCTION_22_25();
  if (v12)
  {
    OUTLINED_FUNCTION_36_15();
  }

  else
  {
    uint64_t v19 = PhoneCallVerb.rawValue.getter(v2);
    if (v19 == 1819042147 && v20 == 0xE400000000000000LL)
    {
      OUTLINED_FUNCTION_58_10();
      OUTLINED_FUNCTION_36_15();
LABEL_24:
      __swift_destroy_boxed_opaque_existential_1(v32);
      OUTLINED_FUNCTION_36_15();
      OUTLINED_FUNCTION_201_0();
      goto LABEL_25;
    }

    char v22 = OUTLINED_FUNCTION_49_2(v19, v20, 1819042147LL, 0xE400000000000000LL);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_36_15();
    if ((v22 & 1) != 0) {
      goto LABEL_24;
    }
  }

  uint64_t v3 = v32[4];
  __swift_project_boxed_opaque_existential_1(v32, v32[3]);
  int v4 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104));
  __swift_destroy_boxed_opaque_existential_1(v32);
  OUTLINED_FUNCTION_36_15();
  OUTLINED_FUNCTION_201_0();
  if (v4 == 17)
  {
LABEL_25:
    char v23 = 0;
    goto LABEL_29;
  }

  uint64_t v5 = v30;
  uint64_t v6 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  unsigned __int8 v7 = OUTLINED_FUNCTION_81_3(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 104));
  uint64_t v8 = v27;
  uint64_t v9 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  unsigned __int8 v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 104))(v8, v9);
  LOBYTE(v11) = v10 == 17 && v7 == 17;
  BOOL v12 = v7 == 17 || v10 == 17;
  if (!v12)
  {
    unsigned __int8 v13 = v10;
    uint64_t v11 = PhoneCallVerb.rawValue.getter(v7);
    uint64_t v15 = v14;
    uint64_t v16 = PhoneCallVerb.rawValue.getter(v13);
    if (v11 == v16 && v15 == v17) {
      OUTLINED_FUNCTION_7_51();
    }
    else {
      LOBYTE(v11) = OUTLINED_FUNCTION_49_2(v11, v15, v16, v17);
    }
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
  }

  char v23 = v11 ^ 1;
LABEL_29:
  uint64_t v24 = __swift_destroy_boxed_opaque_existential_1(v29);
  OUTLINED_FUNCTION_11_6(v24);
  return v23 & 1;
}

void PhoneCallNLv3Intent.phoneCallVerb.getter()
{
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallVerb()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

PhoneCallFlowDelegatePlugin::PhoneCallVerb_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallVerb@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallVerb_optional *a2@<X8>)
{
  result.value = PhoneCallVerb.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

PhoneCallFlowDelegatePlugin::PhoneCallVerb_optional __swiftcall PhoneCallVerb.init(rawValue:)(Swift::String rawValue)
{
  return result;
}

uint64_t OUTLINED_FUNCTION_1()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_124()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_18_0(uint64_t a1)
{
  return swift_task_alloc((*(void *)(*(void *)(a1 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_6_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_56()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_273@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000LL;
  return 0LL;
}

void OUTLINED_FUNCTION_284()
{
  *(_BYTE *)(v2 + 144) = v0;
  *(void *)(v2 + 168) = v1;
  *(void *)(v2 + 176) = v3;
}

uint64_t OUTLINED_FUNCTION_197( uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallVerb(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xEF) {
    return ((uint64_t (*)(void))((char *)&loc_1EE50 + 4 * byte_326530[v4]))();
  }
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1EE84 + 4 * byte_32652B[v4]))();
}

uint64_t sub_1EE84(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1EE8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1EE94LL);
  }
  return result;
}

uint64_t sub_1EEA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1EEA8LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::PhoneCallVerb_optional result = a2 + 16;
  return result;
}

uint64_t sub_1EEAC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1EEB4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.parseValueResponse(input:resolveRecord:) in conformance CallingIntentNeedsValueFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 384LL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for UnsupportedUnsetRelationshipFlowStrategyAsync.parseRequestedRelationship(resolveRecord:) in conformance ContactUnsetRelationshipFlowStrategy<A>;
  return v11(a1, a2, a3);
}

uint64_t CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28)
{
  a27 = v30;
  a28 = v31;
  a26 = v28;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v32 = (void *)v28[91];
  uint64_t v33 = (os_log_s *)v28[67];
  uint64_t v34 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_73_20();
  Logger.logObject.getter(v32);
  os_log_type_t v35 = OUTLINED_FUNCTION_41();
  BOOL v36 = OUTLINED_FUNCTION_9_57(v35);
  unsigned __int8 v37 = (void *)v28[91];
  uint64_t v38 = v28[70];
  if (v36)
  {
    uint64_t v39 = v28[66];
    uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t))v28[83];
    uint64_t v40 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v63 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v66 = OUTLINED_FUNCTION_7_0(32LL);
    a14 = v66;
    *(_DWORD *)uint64_t v40 = 136315394;
    v28[53] = v37;
    id v41 = v37;
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v39);
    uint64_t v43 = String.init<A>(describing:)(v28 + 53, v39, WitnessTable);
    v28[57] = OUTLINED_FUNCTION_24_28(v43, v44, v45, v46, v47, v48, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28 + 57, v28 + 58, v40 + 4, v40 + 12);
    OUTLINED_FUNCTION_87_0();

    uint64_t v50 = OUTLINED_FUNCTION_60_21();
    v28[52] = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28 + 52, v28 + 53, v41, v40 + 22);
    *uint64_t v63 = v50;
    OUTLINED_FUNCTION_11_20(v38, v64);
    OUTLINED_FUNCTION_33_6( &dword_0,  v33,  v29,  "#CallingIntentNeedsValueFlowStrategy SKIntent after NCR replacement: %s, and with previousIntent: %@",  v40);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v63);
    OUTLINED_FUNCTION_0_2((uint64_t)v63);
    OUTLINED_FUNCTION_17_0(v66);
    OUTLINED_FUNCTION_0_2(v66);
    OUTLINED_FUNCTION_0_2((uint64_t)v40);
  }

  else
  {

    OUTLINED_FUNCTION_141_5();
  }

  uint64_t v51 = v28[91];
  uint64_t v52 = v28[89];
  uint64_t v53 = (void *)v28[88];
  uint64_t v54 = v28[66];
  uint64_t v55 = v28[58];
  uint64_t v57 = OUTLINED_FUNCTION_114_5(v56, *(void *)(*(void *)(v52 + 8) + 8LL));
  uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 40))(v54, v52);
  a17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ([INPerson]?, [INCallGroup]?));
  a14 = v57;
  a15 = v58;
  IntentPromptAnswer.init(answeredValue:updatedIntent:)(&a14, v51, v54);

  uint64_t v59 = OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_88(v55, 0LL, v60, v59);
  uint64_t v65 = v28[63];
  __swift_destroy_boxed_opaque_existential_1(v28 + 2);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc(v65);
  uint64_t v61 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_36_14(v61);
}

{
  void *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  os_log_s *v33;
  uint64_t v34;
  os_log_type_t v35;
  BOOL v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  id v41;
  uint64_t WitnessTable;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  OUTLINED_FUNCTION_72();
  a27 = v30;
  a28 = v31;
  a26 = v28;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v32 = (void *)v28[87];
  uint64_t v33 = (os_log_s *)v28[67];
  uint64_t v34 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_73_20();
  Logger.logObject.getter(v32);
  os_log_type_t v35 = OUTLINED_FUNCTION_41();
  BOOL v36 = OUTLINED_FUNCTION_9_57(v35);
  unsigned __int8 v37 = (void *)v28[87];
  uint64_t v38 = v28[72];
  if (v36)
  {
    uint64_t v39 = v28[66];
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t))v28[83];
    uint64_t v40 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v66 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v71 = OUTLINED_FUNCTION_7_0(32LL);
    a14 = v71;
    *(_DWORD *)uint64_t v40 = 136315394;
    v28[54] = v37;
    id v41 = v37;
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v39);
    uint64_t v43 = String.init<A>(describing:)(v28 + 54, v39, WitnessTable);
    v28[55] = OUTLINED_FUNCTION_24_28(v43, v44, v45, v46, v47, v48, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28 + 55, v28 + 56, v40 + 4, v40 + 12);
    OUTLINED_FUNCTION_87_0();

    uint64_t v50 = OUTLINED_FUNCTION_60_21();
    v28[56] = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28 + 56, v28 + 57, v41, v40 + 22);
    *uint64_t v66 = v50;
    OUTLINED_FUNCTION_11_20(v38, v68);
    OUTLINED_FUNCTION_33_6( &dword_0,  v33,  v29,  "#CallingIntentNeedsValueFlowStrategy SKIntent after NCR replacement: %s, and with previousIntent: %@",  v40);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v66);
    OUTLINED_FUNCTION_0_2((uint64_t)v66);
    OUTLINED_FUNCTION_17_0(v71);
    OUTLINED_FUNCTION_0_2(v71);
    OUTLINED_FUNCTION_0_2((uint64_t)v40);
  }

  else
  {

    OUTLINED_FUNCTION_141_5();
  }

  uint64_t v51 = (void *)v28[87];
  uint64_t v52 = v28[85];
  uint64_t v53 = (void *)v28[84];
  uint64_t v69 = (void (*)(uint64_t, uint64_t))v28[81];
  uint64_t v65 = v28[77];
  uint64_t v67 = v28[79];
  uint64_t v54 = v28[67];
  uint64_t v55 = v28[66];
  uint64_t v64 = v28[58];
  uint64_t v56 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v52 + 8) + 8LL) + 8LL))(v55);
  uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 40))(v55, v52);
  uint64_t v58 = (void *)ParameterResolutionRecord.intent.getter(v54);
  CallingIntentNeedsValueFlowStrategy.mergePreviousIntentIntoCurrentOne(previousIntent:callingIntent:)(v58);

  a17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ([INPerson]?, [INCallGroup]?));
  a14 = v56;
  a15 = v57;
  IntentPromptAnswer.init(answeredValue:updatedIntent:)(&a14, v51, v55);

  uint64_t v59 = type metadata accessor for IntentPromptAnswer(0LL, v55);
  OUTLINED_FUNCTION_88(v64, 0LL, v60, v59);
  v69(v67, v65);
  OUTLINED_FUNCTION_26_46();
  uint64_t v70 = v61;
  __swift_destroy_boxed_opaque_existential_1(v28 + 2);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  swift_task_dealloc(v70);
  uint64_t v62 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_36_14(v62);
}

uint64_t CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 720LL);
  *(void *)(*(void *)v1 + 728LL) = a1;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v2 = *(void *)(*(void *)v1 + 688LL);
  *(void *)(*(void *)v1 + 696LL) = a1;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)()
{
  uint64_t v1 = *(_OWORD **)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 624);
  uint64_t v3 = (void *)(*(void *)(v0 + 488) + 24LL);
  uint64_t v257 = *(void *)(v0 + 488);
  OUTLINED_FUNCTION_42(v3);
  uint64_t v4 = OUTLINED_FUNCTION_85_5();
  uint64_t v6 = v5(v4);
  Input.parse.getter(v6);
  (*(void (**)(_OWORD *))(*(void *)v6 + 192LL))(v1);
  swift_release(v6);
  uint64_t v7 = *(void (**)(uint64_t))(v2 + 8);
  *(void *)(v0 + 648) = v7;
  uint64_t v8 = OUTLINED_FUNCTION_258();
  v7(v8);
  if (!*(void *)(v0 + 80))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0 + 56,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v12 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
    os_log_type_t v13 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v13))
    {
      uint64_t v14 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v14);
      OUTLINED_FUNCTION_5_13( &dword_0,  v15,  v16,  "#CallingIntentNeedsValueFlowStrategy Received unsupported parse type. Skipping..");
      OUTLINED_FUNCTION_0_2(v0 + 56);
    }

    OUTLINED_FUNCTION_64_17();
    _OWORD *v1 = xmmword_3201A0;
    uint64_t v17 = OUTLINED_FUNCTION_120_0();
    swift_storeEnumTagMultiPayload(v17, v18, 0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v20 = OUTLINED_FUNCTION_17_14(v19);
    OUTLINED_FUNCTION_25_45(v20, v21);
    uint64_t v22 = OUTLINED_FUNCTION_98_9();
    OUTLINED_FUNCTION_87_10(v22, v23, v24, v25, v26, v27, v28, v29, v229, v233, v236, v239, v242, v245);
    goto LABEL_39;
  }

  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 56), v0 + 16);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  OUTLINED_FUNCTION_82((void *)(v0 + 16));
  uint64_t v11 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10) + 16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_9(v0 + 16);
  v260 = (void *)(v0 + 16);
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 96));
    OUTLINED_FUNCTION_57_18();
  }

  else
  {
    uint64_t v30 = OUTLINED_FUNCTION_97_11();
    PhoneCallNLIntent.getPersons()(v30, v31);
    if ((unint64_t)v32 >> 62)
    {
      if (v32 >= 0) {
        v32 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    }

    else
    {
      uint64_t v33 = *(void *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFF8LL));
    }

    OUTLINED_FUNCTION_62();
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 96));
    OUTLINED_FUNCTION_57_18();
    if (!v33)
    {
      uint64_t v120 = *(void *)(v0 + 168);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), *(void *)(v0 + 160));
      uint64_t v121 = OUTLINED_FUNCTION_120_0();
      uint64_t v123 = *(void *)(v122(v121) + 16);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_62_1();
      if (!v123)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v124 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v124, (uint64_t)static Logger.siriPhone);
        os_log_type_t v125 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_27_1(v125))
        {
          uint64_t v126 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
          OUTLINED_FUNCTION_47(v126);
          OUTLINED_FUNCTION_5_13( &dword_0,  v127,  v128,  "#CallingIntentNeedsValueFlowStrategy contacts, resolved persons, and smsGroups were empty at prompt. IntentP romptAnswer = nil, reprompt.");
          OUTLINED_FUNCTION_0_2(v120);
        }

        uint64_t v129 = *(void *)(v0 + 528);
        uint64_t v130 = *(void *)(v0 + 464);

        uint64_t v131 = type metadata accessor for IntentPromptAnswer(0LL, v129);
        OUTLINED_FUNCTION_88(v130, 1LL, v132, v131);
        goto LABEL_73;
      }

uint64_t CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[60] = a3;
  v4[61] = v3;
  v4[58] = a1;
  v4[59] = a2;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for PhoneError(0LL);
  v4[62] = v6;
  v4[63] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  v4[64] = *(void *)(v5 + 272);
  OUTLINED_FUNCTION_107_10();
  v4[65] = *(void *)(v5 + 264);
  uint64_t v7 = OUTLINED_FUNCTION_93_0();
  v4[66] = v7;
  uint64_t v8 = type metadata accessor for ParameterResolutionRecord(0LL, v7);
  v4[67] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[68] = v9;
  v4[69] = *(void *)(v9 + 64);
  v4[70] = OUTLINED_FUNCTION_28();
  v4[71] = OUTLINED_FUNCTION_28();
  v4[72] = OUTLINED_FUNCTION_28();
  v4[73] = OUTLINED_FUNCTION_28();
  v4[74] = OUTLINED_FUNCTION_28();
  v4[75] = OUTLINED_FUNCTION_28();
  v4[76] = OUTLINED_FUNCTION_28();
  uint64_t v10 = type metadata accessor for Parse(0LL);
  v4[77] = v10;
  v4[78] = *(void *)(v10 - 8);
  v4[79] = OUTLINED_FUNCTION_28();
  v4[80] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t partial apply for closure #1 in CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)( uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_139_1();
  uint64_t v4 = *(void *)(OUTLINED_FUNCTION_70_9(v3) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return closure #1 in CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)( a1,  v1 + v5,  (void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t closure #1 in CallingIntentNeedsValueFlowStrategy.parseValueResponse(input:resolveRecord:)( uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v5 = type metadata accessor for ParameterResolutionRecord(0LL, AssociatedTypeWitness);
  uint64_t v6 = ParameterResolutionRecord.app.getter(v5);
  dispatch thunk of SiriKitEvent.SiriKitEventBuilder.app.setter(v6);
  uint64_t v7 = ParameterResolutionRecord.app.getter(v5);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v8 = specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)( a3,  0,  v7,  (os_log_type_t)_swiftEmptyArrayStorage,  (uint64_t)static CallStateProvider.instance);
  swift_release(v7);
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter(v8);
}

void static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv3(phoneCallContacts:phoneContext:)( uint64_t a1, void *a2)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
  os_log_type_t v7 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_29_4(v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v8 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v2, v3, "#PhoneDomainContextMetricsUtils addContactRecipientTypeNLv3", v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of SignalProviding(v10, (uint64_t)v41);
      uint64_t v11 = OUTLINED_FUNCTION_14_42(v41);
      char v13 = default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)( v11,  v12);
      char v14 = OUTLINED_FUNCTION_13_55(v13);
      Swift::String_optional v15 = SiriPhoneContact.getFullName(filteredAlternatives:)(v14);
      if (v15.value._object
        && (OUTLINED_FUNCTION_2_59(v15.value._countAndFlagsBits, (uint64_t)v15.value._object),
            OUTLINED_FUNCTION_3_75(),
            v16))
      {
        uint64_t v17 = 4LL;
      }

      else
      {
        uint64_t v18 = OUTLINED_FUNCTION_14_42(v41);
        char v20 = default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)( v18,  v19);
        char v21 = OUTLINED_FUNCTION_13_55(v20);
        Swift::String_optional v22 = SiriPhoneContact.getFirstName(filteredAlternatives:)(v21);
        if (v22.value._object
          && (OUTLINED_FUNCTION_2_59(v22.value._countAndFlagsBits, (uint64_t)v22.value._object),
              OUTLINED_FUNCTION_3_75(),
              v23))
        {
          uint64_t v17 = 2LL;
        }

        else
        {
          uint64_t v24 = OUTLINED_FUNCTION_14_42(v41);
          char v26 = default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)( v24,  v25);
          char v27 = OUTLINED_FUNCTION_13_55(v26);
          Swift::String_optional v28 = SiriPhoneContact.getLastName(filteredAlternatives:)(v27);
          if (v28.value._object
            && (OUTLINED_FUNCTION_2_59(v28.value._countAndFlagsBits, (uint64_t)v28.value._object),
                OUTLINED_FUNCTION_3_75(),
                v29))
          {
            uint64_t v17 = 3LL;
          }

          else
          {
            OUTLINED_FUNCTION_11_52(v41);
            Swift::String_optional v30 = SiriPhoneContact.getNickName()();
            if (v30.value._object
              && (OUTLINED_FUNCTION_2_59(v30.value._countAndFlagsBits, (uint64_t)v30.value._object),
                  OUTLINED_FUNCTION_3_75(),
                  v31))
            {
              uint64_t v17 = 5LL;
            }

            else
            {
              uint64_t v32 = v41[3];
              uint64_t v33 = v41[4];
              OUTLINED_FUNCTION_66(v41);
              uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 416))(v32, v33);
              if (v35 && (OUTLINED_FUNCTION_2_59(v34, v35), OUTLINED_FUNCTION_3_75(), v36))
              {
                uint64_t v17 = 6LL;
              }

              else
              {
                OUTLINED_FUNCTION_11_52(v41);
                Swift::String_optional v37 = SiriPhoneContact.getOrganzationName()();
                if (v37.value._object
                  && (OUTLINED_FUNCTION_2_59(v37.value._countAndFlagsBits, (uint64_t)v37.value._object),
                      OUTLINED_FUNCTION_3_75(),
                      v38))
                {
                  uint64_t v17 = 7LL;
                }

                else
                {
                  OUTLINED_FUNCTION_11_52(v41);
                  Swift::String_optional v39 = SiriPhoneContact.getPhoneNumber()();
                  if (!v39.value._object) {
                    goto LABEL_29;
                  }
                  OUTLINED_FUNCTION_2_59(v39.value._countAndFlagsBits, (uint64_t)v39.value._object);
                  OUTLINED_FUNCTION_3_75();
                  if (!v40) {
                    goto LABEL_29;
                  }
                  uint64_t v17 = 9LL;
                }
              }
            }
          }
        }
      }

      [a2 addPersonType:v17];
LABEL_29:
      __swift_destroy_boxed_opaque_existential_1(v41);
      v10 += 40LL;
      if (!--v9)
      {
        swift_bridgeObjectRelease(a1);
        return;
      }
    }
  }

uint64_t OUTLINED_FUNCTION_8_2(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7LL);
}

uint64_t OUTLINED_FUNCTION_16_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_27_0(uint64_t a1)
{
  return swift_retain(a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_62()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_110(uint64_t a1)
{
  return swift_getWitnessTable(v1, a1);
}

void *OUTLINED_FUNCTION_3_1()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_4(uint64_t a1)
{
  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_5_5( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_36()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_0_1@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_4_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_8_3(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_10_2@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t OUTLINED_FUNCTION_16_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return swift_task_switch();
}

  ;
}

uint64_t OUTLINED_FUNCTION_33_0(uint64_t a1)
{
  return swift_task_switch(a1, 0LL, 0LL);
}

__n128 *OUTLINED_FUNCTION_42_1(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x656369766564LL;
  result[2].n128_u64[1] = 0xE600000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_2(uint64_t a1)
{
  return swift_slowDealloc(a1, -1LL, -1LL);
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return swift_slowAlloc(2LL, -1LL);
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return type metadata accessor for Parse(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_23@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(void *)(a1 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

  ;
}

BOOL OUTLINED_FUNCTION_27_1(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_5_8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_14_1(uint64_t a1)
{
  *(void *)(v2 - 8) = *v1;
  return swift_task_dealloc(a1);
}

uint64_t OUTLINED_FUNCTION_24_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return swift_release(v0);
}

void OUTLINED_FUNCTION_57_0(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t OUTLINED_FUNCTION_5_9(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 33LL, 0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  return swift_getAssociatedTypeWitness(0LL);
}

void OUTLINED_FUNCTION_1_1()
{
}

uint64_t OUTLINED_FUNCTION_5_11(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

void OUTLINED_FUNCTION_1_2(id a1)
{
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*(void *)(v1 - 112), v0, (uint64_t *)(v1 - 88));
}

void OUTLINED_FUNCTION_5_13(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_31_1(uint64_t a1)
{
  return swift_release_n(a1, 2LL);
}

uint64_t OUTLINED_FUNCTION_4_4(uint64_t a1, uint64_t a2)
{
  return swift_allocError(a1, a2, 0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return v0(v1);
}

uint64_t OUTLINED_FUNCTION_5_15( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, a2, a3, a4, a5, 2LL, a7, 25LL);
}

BOOL OUTLINED_FUNCTION_87(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_5_16(uint64_t (*a1)(void))
{
  return a1();
}

  ;
}

uint64_t OUTLINED_FUNCTION_15_3(uint64_t a1)
{
  return swift_allocObject(a1, 80LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_17(uint64_t a1)
{
  return swift_bridgeObjectRetain(a1);
}

void *OUTLINED_FUNCTION_13_3(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, 0LL);
}

uint64_t OUTLINED_FUNCTION_5_18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

  ;
}

uint64_t OUTLINED_FUNCTION_1_3(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

uint64_t OUTLINED_FUNCTION_5_19()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_13_4(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0LL, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_5_20@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_5_21(uint64_t a1)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_5_22(uint64_t a1)
{
  return outlined init with copy of AudioDestination?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_5_23()
{
  return swift_arrayDestroy(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_9()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_release_n(v0, 2LL);
}

void OUTLINED_FUNCTION_3_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_5_24@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_3_3(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 1LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_8_4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_10_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_89(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_5_27()
{
  return dispatch thunk of Encoder.singleValueContainer()(v0, v1);
}

double OUTLINED_FUNCTION_5_28()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_13_5(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_5_30@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_31(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return swift_errorRelease(v0);
}

uint64_t OUTLINED_FUNCTION_5_32(uint64_t a1)
{
  return swift_allocObject(a1, 40LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  return v0;
}

id OUTLINED_FUNCTION_17_5(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t OUTLINED_FUNCTION_5_34@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = v2;
  return (*(uint64_t (**)(unint64_t))(a1 + 32))( v1 + ((*(unsigned __int8 *)(a1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(a1 + 80))
         + *(void *)(a1 + 72) * v3);
}

uint64_t OUTLINED_FUNCTION_5_35()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 112));
}

uint64_t OUTLINED_FUNCTION_5_36@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  return BurstNotificationSearchManager.init(sharedGlobals:voicemailFinder:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_116_1(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_122()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_5_37()
{
  return swift_bridgeObjectRelease(v0);
}

BOOL OUTLINED_FUNCTION_7_7(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_1_4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds.rawValue.getter()
{
  return 0x31676F6C616964LL;
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 56);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 64) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_61(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void OUTLINED_FUNCTION_5_38(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_5_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_40()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

  ;
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_96()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

void *OUTLINED_FUNCTION_5_41()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_5_42()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_10_4(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_5_43(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_5_44@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = a7;
  *(_OWORD *)(a1 + 40) = a9;
  *(_OWORD *)(a1 + 56) = a10;
  *(_OWORD *)(a1 + 72) = a11;
  *(_OWORD *)(a1 + 88) = a12;
  return swift_retain(v12);
}

uint64_t OUTLINED_FUNCTION_52()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_5_45()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_5_46(uint64_t a1)
{
  return SPHCallCenter.onQueue<A>(_:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_53()
{
  return type metadata accessor for Date(0LL);
}

uint64_t OUTLINED_FUNCTION_5_47(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_retain(a3);
}

id OUTLINED_FUNCTION_17_6(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_5_48()
{
  return swift_task_dealloc(*(void *)(v0 + 808));
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_49(uint64_t a1)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_5_50()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_5_51(uint64_t a1)
{
  return swift_release(a1);
}

void OUTLINED_FUNCTION_5_52()
{
}

void OUTLINED_FUNCTION_5_53()
{
  v0._uint64_t countAndFlagsBits = 0x2E65756C61562ELL;
  v0._object = (void *)0xE700000000000000LL;
  String.append(_:)(v0);
}

void OUTLINED_FUNCTION_13_7(Swift::String a1)
{
}

uint64_t OUTLINED_FUNCTION_5_54()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_5_55(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_57()
{
  return specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( v2,  v1,  v5,  v0,  v3,  v4);
}

uint64_t OUTLINED_FUNCTION_5_58()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_5_59()
{
}

uint64_t OUTLINED_FUNCTION_5_60()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:))();
}

void OUTLINED_FUNCTION_5_61(Swift::String a1)
{
}

void OUTLINED_FUNCTION_5_62(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_5_65(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

void OUTLINED_FUNCTION_5_66(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x6E756F43746E6968LL;
  v2[17] = 0xE900000000000074LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_67()
{
  return type metadata accessor for PhoneRRTarget.Target(0LL);
}

uint64_t OUTLINED_FUNCTION_5_68(uint64_t a1)
{
  return swift_dynamicCastObjCClass(v1, a1);
}

uint64_t OUTLINED_FUNCTION_5_69( uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  char v11 = *(_BYTE *)(v10 + 16);
  *(void *)(v9 + 56) = a8;
  *(void *)(v9 + 64) = v8;
  *(_BYTE *)(v9 + 106) = v11;
  *(_BYTE *)(v9 + 105) = a7;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 48) = a6;
  *(_BYTE *)(v9 + 104) = a5;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_70(uint64_t a1, SEL *a2)
{
  return outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(v2, a2);
}

uint64_t OUTLINED_FUNCTION_5_71(uint64_t a1, uint64_t a2)
{
  return String.hash(into:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_5_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_5_73(uint64_t result)
{
  *(void *)(result + 32) = 1701667182LL;
  *(void *)(result + 40) = 0xE400000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_74()
{
  return swift_release_n(*(void *)(v0 + 1744), 2LL);
}

uint64_t OUTLINED_FUNCTION_5_75()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 88) + 8LL))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_76()
{
  return static DispatchWorkItemFlags.barrier.getter();
}

void OUTLINED_FUNCTION_5_77(void *a1, os_log_s *a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_5_78()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 112);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 120) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_5_79()
{
  return swift_getObjectType(**(void **)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_11_1(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

void OUTLINED_FUNCTION_5_80()
{
}

uint64_t OUTLINED_FUNCTION_22_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_5_81(uint64_t a1)
{
  return v3(a1, v2, v1);
}

void OUTLINED_FUNCTION_5_82(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_5_83()
{
  return specialized Collection.emptyToNil.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_84()
{
  if (v0) {
    uint64_t v2 = 1LL;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_85()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_5_86()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_14_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_5_87(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 144);
}

void OUTLINED_FUNCTION_5_88(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_5_89(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_1_5(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

uint64_t OUTLINED_FUNCTION_5_90()
{
  return type metadata accessor for CommonDirectAction(0LL);
}

void *OUTLINED_FUNCTION_5_91()
{
  return __swift_project_boxed_opaque_existential_1( (void *)(*(void *)(v0 + 208) + 184LL),  *(void *)(*(void *)(v0 + 208) + 208LL));
}

uint64_t OUTLINED_FUNCTION_5_92()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96LL))();
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_94(uint64_t a1, uint64_t a2, ...)
{
  return outlined init with copy of SignalProviding(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_5_95(uint64_t a1)
{
  *(void *)(v2 + 432) = a1;
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
}

uint64_t OUTLINED_FUNCTION_5_96()
{
  return v0(v2, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_5_98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

void OUTLINED_FUNCTION_5_99(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_5_100(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_5_101()
{
  return type metadata accessor for PhoneStartCallIntent(0LL);
}

uint64_t OUTLINED_FUNCTION_5_102()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_103()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 104) + 8LL))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_104(float a1)
{
  float *v1 = a1;
  uint64_t v4 = *(void *)(v2 + 56);
  *(void *)(v3 - 104) = 0LL;
  *(void *)(v3 - 96) = 0xE000000000000000LL;
  return swift_bridgeObjectRetain(v4);
}

uint64_t OUTLINED_FUNCTION_5_105()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_106( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return swift_bridgeObjectRelease(a12);
}

uint64_t OUTLINED_FUNCTION_5_107()
{
  return 0x7263694D6574756DLL;
}

void *OUTLINED_FUNCTION_5_108( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return IntentNodeTraversable.value<A>(forNode:)(&a13, v14, v13, a1);
}

uint64_t OUTLINED_FUNCTION_5_109(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_5_110()
{
  return swift_task_dealloc(*(void *)(v0 + 544));
}

void OUTLINED_FUNCTION_5_111(void *a1, void *a2)
{
}

uint64_t OUTLINED_FUNCTION_5_112(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return String.hash(into:)(va, a2, v3);
}

Swift::String_optional __swiftcall SiriPhoneContact.getFullName(filteredAlternatives:)( Swift::Bool filteredAlternatives)
{
  uint64_t v8 = OUTLINED_FUNCTION_9_32(filteredAlternatives, v1, v2, v3, v4, v5, v6, v7, v27);
  OUTLINED_FUNCTION_8_25( (uint64_t)v8,  v9,  &demangling cache variable for type metadata for PhoneCallPersonName?,  v10,  v11,  v12,  v13,  v14,  v28,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43);
  OUTLINED_FUNCTION_26_18();
  if (v15)
  {
    OUTLINED_FUNCTION_29_13();
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_20_15(v16, v17, v18, v19, v20, v21, v22, v23, v29);
  }

  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_0_36();
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

uint64_t protocol witness for SiriPhoneContact.personName.getter in conformance PhoneCallContactIntentNode@<X0>( uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)v1 + 304LL))(v4);
  return outlined init with take of PhoneCallPersonName?((uint64_t)v4, a1);
}

void PhoneCallContactIntentNode.personName.getter()
{
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonOntologyNode.PersonNamePostfix?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonOntologyNode.PersonNamePrefix?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonIntentNode?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v7 = OUTLINED_FUNCTION_60_28();
  uint64_t v8 = type metadata accessor for PersonIntentNode(v7);
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  PhoneCallContactIntentNode.person.getter();
  OUTLINED_FUNCTION_35(v2, 1LL, v8);
  if (v40)
  {
    outlined destroy of UUID?(v2, &demangling cache variable for type metadata for PersonIntentNode?);
    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    uint64_t v16 = 0LL;
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    uint64_t v22 = 1LL;
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v8);
    type metadata accessor for PersonOntologyNode(0LL);
    uint64_t Name = static PersonOntologyNode.personFirstNameNode.getter();
    uint64_t v24 = OUTLINED_FUNCTION_24_58(Name);
    uint64_t v55 = v25;
    uint64_t v56 = v24;
    uint64_t v26 = OUTLINED_FUNCTION_38_1();
    uint64_t v27 = static PersonOntologyNode.personMiddleNameNode.getter(v26);
    uint64_t v28 = OUTLINED_FUNCTION_24_58(v27);
    uint64_t v53 = v29;
    uint64_t v54 = v28;
    uint64_t v30 = OUTLINED_FUNCTION_38_1();
    uint64_t v31 = static PersonOntologyNode.personLastNameNode.getter(v30);
    uint64_t v32 = OUTLINED_FUNCTION_24_58(v31);
    uint64_t v51 = v33;
    uint64_t v52 = v32;
    OUTLINED_FUNCTION_38_1();
    uint64_t v34 = PersonIntentNodeContaining.nickName.getter(v8, &protocol witness table for PersonIntentNode);
    uint64_t v49 = v35;
    uint64_t v50 = v34;
    uint64_t v36 = static PersonOntologyNode.personFullNameNode.getter();
    uint64_t v37 = OUTLINED_FUNCTION_24_58(v36);
    uint64_t v47 = v38;
    uint64_t v48 = v37;
    OUTLINED_FUNCTION_38_1();
    PersonIntentNodeContaining.namePrefix.getter(v8, &protocol witness table for PersonIntentNode);
    uint64_t v39 = type metadata accessor for PersonOntologyNode.PersonNamePrefix(0LL);
    uint64_t v41 = OUTLINED_FUNCTION_35(v4, 1LL, v39);
    if (v40)
    {
      outlined destroy of UUID?( v4,  &demangling cache variable for type metadata for PersonOntologyNode.PersonNamePrefix?);
      uint64_t v18 = 0LL;
      uint64_t v19 = 0LL;
    }

    else
    {
      uint64_t v18 = PersonOntologyNode.PersonNamePrefix.rawValue.getter(v41);
      uint64_t v19 = v42;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8LL))(v4, v39);
    }

    PersonIntentNodeContaining.namePostfix.getter(v8, &protocol witness table for PersonIntentNode);
    uint64_t v43 = type metadata accessor for PersonOntologyNode.PersonNamePostfix(0LL);
    uint64_t v44 = OUTLINED_FUNCTION_35(v0, 1LL, v43);
    if (v40)
    {
      uint64_t v45 = OUTLINED_FUNCTION_72_29();
      OUTLINED_FUNCTION_150(v45, &demangling cache variable for type metadata for PersonOntologyNode.PersonNamePostfix?);
      uint64_t v20 = 0LL;
      uint64_t v21 = 0LL;
    }

    else
    {
      uint64_t v20 = PersonOntologyNode.PersonNamePostfix.rawValue.getter(v44);
      uint64_t v21 = v46;
      OUTLINED_FUNCTION_72_29();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8LL))(v0, v43);
    }

    uint64_t v22 = v55;
    uint64_t v9 = v56;
    uint64_t v11 = v53;
    uint64_t v10 = v54;
    uint64_t v13 = v51;
    uint64_t v12 = v52;
    uint64_t v15 = v49;
    uint64_t v14 = v50;
    uint64_t v17 = v47;
    uint64_t v16 = v48;
  }

  *uint64_t v6 = v9;
  v6[1] = v22;
  void v6[2] = v10;
  void v6[3] = v11;
  v6[4] = v12;
  v6[5] = v13;
  v6[6] = v14;
  v6[7] = v15;
  v6[8] = v16;
  v6[9] = v17;
  v6[10] = v18;
  v6[11] = v19;
  v6[12] = v20;
  v6[13] = v21;
  OUTLINED_FUNCTION_7_5();
}

void PhoneCallContactIntentNode.person.getter()
{
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v6 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  OUTLINED_FUNCTION_39_2();
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v18 = v0;
  if (one-time initialization token for personNode != -1) {
    swift_once(&one-time initialization token for personNode, one-time initialization function for personNode);
  }
  uint64_t v9 = static PhoneCallContactOntologyNode.personNode;
  uint64_t v10 = ObjC metadata update function for PhoneCallContactIntentNode();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallContactIntentNode and conformance PhoneCallContactIntentNode,  type metadata accessor for PhoneCallContactIntentNode);
  IntentNodeTraversable.intentNode(forOntologyNode:)(v9, v10, v11);
  OUTLINED_FUNCTION_35(v2, 1LL, v6);
  if (v12)
  {
    outlined destroy of UUID?(v2, &demangling cache variable for type metadata for NonTerminalIntentNode?);
    uint64_t v15 = 1LL;
  }

  else
  {
    OUTLINED_FUNCTION_56_4((uint64_t)v8, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    OUTLINED_FUNCTION_56_4(v1, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    uint64_t v13 = type metadata accessor for PersonOntologyNode(0LL);
    OUTLINED_FUNCTION_15_2(v13);
    uint64_t v14 = PersonOntologyNode.init(name:multicardinal:)(0x6E6F73726570LL, 0xE600000000000000LL, 0LL);
    PersonIntentNode.init(intentNode:ontologyNode:)(v1, v14);
    OUTLINED_FUNCTION_90_19(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    uint64_t v15 = 0LL;
  }

  uint64_t v16 = OUTLINED_FUNCTION_74_23();
  __swift_storeEnumTagSinglePayload(v5, v15, 1LL, v16);
  OUTLINED_FUNCTION_7_5();
}

uint64_t static PersonIntentNode.getProcessedNameField(person:terminalNode:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalElement?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalElement.Origin?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalElement.OriginDetail?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  uint64_t v39 = type metadata accessor for TerminalElement.MatchingSpan(0LL);
  uint64_t v15 = *(void *)(v39 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for PersonIntentNode(0LL);
  IntentNodeTraversable.value<A>(forNode:)(v41, a2, v19, &protocol witness table for PersonIntentNode);
  uint64_t result = v41[0];
  if (v41[1])
  {
    uint64_t v40 = v41[0];
    IntentNodeTraversable.intentNode<A>(forOntologyNode:)(a2, v19, &protocol witness table for PersonIntentNode);
    uint64_t v21 = type metadata accessor for TerminalIntentNode(0LL);
    uint64_t v22 = OUTLINED_FUNCTION_3_7(v5);
    if (v27)
    {
      uint64_t v23 = &demangling cache variable for type metadata for TerminalIntentNode?;
      uint64_t v24 = v5;
    }

    else
    {
      uint64_t v25 = TerminalIntentNode.elements.getter(v22);
      OUTLINED_FUNCTION_41_2(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8LL));
      specialized BidirectionalCollection.last.getter(v25, v8);
      swift_bridgeObjectRelease();
      uint64_t v26 = type metadata accessor for TerminalElement(0LL);
      uint64_t v28 = OUTLINED_FUNCTION_3_7(v8);
      if (v27)
      {
        uint64_t v23 = &demangling cache variable for type metadata for TerminalElement?;
        uint64_t v24 = v8;
      }

      else
      {
        TerminalElement.origin.getter(v28);
        OUTLINED_FUNCTION_41_2(v8, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8LL));
        uint64_t v29 = type metadata accessor for TerminalElement.Origin(0LL);
        uint64_t v31 = OUTLINED_FUNCTION_3_7(v11);
        if (!v30)
        {
          TerminalElement.Origin.originDetail.getter(v31);
          OUTLINED_FUNCTION_41_2(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8LL));
          uint64_t v33 = type metadata accessor for TerminalElement.OriginDetail(0LL);
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v14, 1LL, v33);
          if (EnumTagSinglePayload != 1)
          {
            uint64_t v35 = *(void *)(v33 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t))(v35 + 88))(v14, v33) == enum case for TerminalElement.OriginDetail.matchingSpan(_:))
            {
              OUTLINED_FUNCTION_3_98(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 96));
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v14, v39);
              uint64_t v36 = static PersonIntentNode.getFilteredAlternatives(span:)();
              uint64_t v38 = v37;
              (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v39);
              if (v38)
              {
                swift_bridgeObjectRelease();
                return v36;
              }
            }

            else
            {
              OUTLINED_FUNCTION_3_98(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
            }

            return v40;
          }

uint64_t specialized BidirectionalCollection.last.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    type metadata accessor for TerminalElement(0LL);
    OUTLINED_FUNCTION_1_83();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v6 + *(void *)(v7 + 72) * v5, v2);
    uint64_t v8 = OUTLINED_FUNCTION_3_99();
  }

  else
  {
    type metadata accessor for TerminalElement(0LL);
    uint64_t v8 = OUTLINED_FUNCTION_23_0();
  }

  return OUTLINED_FUNCTION_32_6(v8, v9, v10, v11);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = v3 - 1;
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(0LL);
    OUTLINED_FUNCTION_1_83();
    outlined init with copy of DisambiguationItemWithDirectInvocationModel(v6 + *(void *)(v5 + 72) * v4, a2);
    uint64_t v7 = OUTLINED_FUNCTION_3_99();
  }

  else
  {
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(0LL);
    uint64_t v7 = OUTLINED_FUNCTION_23_0();
  }

  return OUTLINED_FUNCTION_32_6(v7, v8, v9, v10);
}

double specialized BidirectionalCollection.last.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    outlined init with copy of TransformationResult((uint64_t *)(a1 + 48 * v2 - 16), (void *)a2);
  }

  else
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(void *)&double result = 1LL;
    *(_OWORD *)(a2 + 32) = xmmword_31D8A0;
  }

  return result;
}

uint64_t specialized BidirectionalCollection.last.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = (uint64_t *)(a1 + 32 * v1);
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain(v2[3]);
  return v3;
}

uint64_t static PersonIntentNode.getFilteredAlternatives(span:)()
{
  unint64_t v0 = *(void *)(((uint64_t (*)(void))TerminalElement.MatchingSpan.alternateInterpretationConfidences.getter)() + 16);
  uint64_t v1 = swift_bridgeObjectRelease();
  uint64_t v2 = 0LL;
  if (v0 >= 2)
  {
    TerminalElement.MatchingSpan.alternateInterpretationConfidences.getter(v1);
    double v3 = COERCE_DOUBLE(specialized Sequence<>.max()());
    char v5 = v4;
    uint64_t v6 = swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
    {
      return 0LL;
    }

    else
    {
      uint64_t v7 = TerminalElement.MatchingSpan.alternateInterpretationConfidences.getter(v6);
      uint64_t v8 = specialized _NativeDictionary.filter(_:)(v7, v3 * 0.2);
      swift_bridgeObjectRelease();
      swift_retain_n(v8, 2LL);
      uint64_t v9 = swift_bridgeObjectRetain();
      specialized _copyCollectionToContiguousArray<A>(_:)(v9);
      uint64_t v11 = v10;
      swift_release(v8);
      uint64_t v16 = v11;
      specialized MutableCollection<>.sort(by:)(&v16, v8);
      swift_release_n(v8, 2LL);
      uint64_t v12 = v16;
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
      unint64_t v14 = lazy protocol witness table accessor for type [String] and conformance [A]();
      uint64_t v2 = BidirectionalCollection<>.joined(separator:)(31868LL, 0xE200000000000000LL, v13, v14);
      swift_release(v12);
    }
  }

  return v2;
}

void __swiftcall PhoneCallPersonName.init(firstName:middleName:lastName:nickName:fullName:namePrefix:nameSuffix:)( PhoneCallFlowDelegatePlugin::PhoneCallPersonName *__return_ptr retstr, Swift::String_optional firstName, Swift::String_optional middleName, Swift::String_optional lastName, Swift::String_optional nickName, Swift::String_optional fullName, Swift::String_optional namePrefix, Swift::String_optional nameSuffix)
{
  retstr->firstuint64_t Name = firstName;
  retstr->middleuint64_t Name = middleName;
  retstr->lastuint64_t Name = lastName;
  retstr->nickuint64_t Name = nickName;
  retstr->fulluint64_t Name = fullName;
  retstr->namePrefix = namePrefix;
  retstr->nameSuffix = nameSuffix;
}

uint64_t *outlined release of PhoneCallPersonName?(uint64_t *a1)
{
  return a1;
}

void *outlined retain of PhoneCallPersonName?( void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

Swift::String_optional __swiftcall SiriPhoneContact.getFirstName(filteredAlternatives:)( Swift::Bool filteredAlternatives)
{
  uint64_t v8 = OUTLINED_FUNCTION_9_32(filteredAlternatives, v1, v2, v3, v4, v5, v6, v7, v26);
  OUTLINED_FUNCTION_8_25( (uint64_t)v8,  v9,  &demangling cache variable for type metadata for PhoneCallPersonName?,  v10,  v11,  v12,  v13,  v14,  v27,  v29,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42);
  if (v43 != 1)
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_20_15(v15, v16, v17, v18, v19, v20, v21, v22, v28);
  }

  OUTLINED_FUNCTION_0_36();
  result.value._object = v24;
  result.value._uint64_t countAndFlagsBits = v23;
  return result;
}

void PhoneCallNLv3Intent.smsGroups.getter()
{
  void (*v1)(void *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_17_71();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent);
  OUTLINED_FUNCTION_77_21(v0);
  OUTLINED_FUNCTION_96_10();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin8SmsGroup_ps5NeverOTg5( v1,  v2,  v3,  v4);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_0_0();
}

Swift::Bool __swiftcall PhoneCallNLIntent.isFaceTimeCall()()
{
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_74_10();
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_5_1();
  Swift::Bool v4 = PhoneCallNLIntent.hasAnyFaceTime()();
  OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  if (!v4)
  {
    OUTLINED_FUNCTION_33_28(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80));
    OUTLINED_FUNCTION_145_2();
    if (!v8)
    {
      uint64_t v6 = PhoneCallNoun.rawValue.getter(v5);
      BOOL v8 = v6 == 0x61665F70756F7267LL && v7 == 0xEE00656D69746563LL;
      if (v8)
      {
        OUTLINED_FUNCTION_144_2(0x656D69746563LL);
      }

      else
      {
        OUTLINED_FUNCTION_49_2(v6, v7, 0x61665F70756F7267LL, 0xEE00656D69746563LL);
        OUTLINED_FUNCTION_50();
      }
    }
  }

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_16();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasAnyFaceTime()()
{
  Swift::Bool v4 = PhoneCallNLIntent.hasAudioCallSemantic()();
  OUTLINED_FUNCTION_37_20(v1);
  if (v4)
  {
    Swift::Bool v5 = 1;
  }

  else
  {
    OUTLINED_FUNCTION_68_11();
    Swift::Bool v5 = PhoneCallNLIntent.hasVideoCallSemantic()();
  }

  OUTLINED_FUNCTION_31_22(v1);
  uint64_t v6 = OUTLINED_FUNCTION_37_20(v0);
  if (v5 || (OUTLINED_FUNCTION_199_0(v6, v7, v8), !v10))
  {
    OUTLINED_FUNCTION_31_22(v0);
  }

  else
  {
    if (v9 != 0xD000000000000012LL || v10 != 0x80000000003479B0LL) {
      OUTLINED_FUNCTION_49_2(v9, v10, 0xD000000000000012LL, 0x80000000003479B0LL);
    }
    OUTLINED_FUNCTION_31_22(v0);
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_58();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasAudioCallSemantic()()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  (*(void (**)(void))(v0 + 80))();
  OUTLINED_FUNCTION_145_2();
  if (!v7)
  {
    uint64_t v5 = PhoneCallNoun.rawValue.getter(v4);
    BOOL v7 = v5 == 0x656D697465636166LL && v6 == 0xEE006F6964756120LL;
    if (v7)
    {
      OUTLINED_FUNCTION_84_7();
    }

    else
    {
      OUTLINED_FUNCTION_205_1();
      OUTLINED_FUNCTION_49_2(v8, v9, v10, 0xEE006F6964756120LL);
      OUTLINED_FUNCTION_4_1();
    }
  }

  OUTLINED_FUNCTION_81_3(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 104));
  OUTLINED_FUNCTION_22_25();
  if (!v7)
  {
    uint64_t v12 = PhoneCallVerb.rawValue.getter(v11);
    if (v12 == 0x656D697465636166LL && v13 == 0xEE006F6964756120LL)
    {
      OUTLINED_FUNCTION_84_7();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v12, v13, 0x656D697465636166LL, 0xEE006F6964756120LL);
      OUTLINED_FUNCTION_62();
    }
  }

  OUTLINED_FUNCTION_58();
  return result;
}

void PhoneCallNLv3Intent.phoneCallNoun.getter()
{
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallNoun()
{
  return protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhoneCallAttribute();
}

PhoneCallFlowDelegatePlugin::PhoneCallNoun_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallNoun@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallNoun_optional *a2@<X8>)
{
  result.value = PhoneCallNoun.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

PhoneCallFlowDelegatePlugin::PhoneCallNoun_optional __swiftcall PhoneCallNoun.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallNoun.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallNoun(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF7) {
    return ((uint64_t (*)(void))((char *)&loc_22600 + 4 * byte_326512[v4]))();
  }
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_22634 + 4 * byte_32650D[v4]))();
}

uint64_t sub_22634(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2263C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x22644LL);
  }
  return result;
}

uint64_t sub_22650(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x22658LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::PhoneCallNoun_optional result = a2 + 8;
  return result;
}

uint64_t sub_2265C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22664(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t PhoneCallNoun.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2269C + 4 * byte_326427[a1]))( 1819042147LL,  0xE400000000000000LL);
}

uint64_t sub_2269C()
{
  return 0x736C6C6163LL;
}

uint64_t sub_226B0()
{
  return OUTLINED_FUNCTION_87_2();
}

uint64_t sub_226CC()
{
  return 0x61665F70756F7267LL;
}

unint64_t sub_226F4()
{
  return OUTLINED_FUNCTION_17_8();
}

uint64_t sub_22700()
{
  return OUTLINED_FUNCTION_162_3();
}

uint64_t sub_22714()
{
  return OUTLINED_FUNCTION_160_1();
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_164(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1LL, 1LL, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_164_0()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 152) + 8LL))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_164_1()
{
  return ParameterResolutionRecord.intent.getter();
}

uint64_t OUTLINED_FUNCTION_164_2(uint64_t a1)
{
  return v3(a1, v2, v1);
}

void OUTLINED_FUNCTION_164_3()
{
  *(void *)(v0 + 224) = 0x5074737269467369LL;
  *(void *)(v0 + 232) = 0xEF70704179747261LL;
}

uint64_t OUTLINED_FUNCTION_216()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_164_4()
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, v0);
}

uint64_t OUTLINED_FUNCTION_164_5()
{
  return static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_164_6()
{
  return swift_bridgeObjectRelease(v0);
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasVideoCallSemantic()()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_277();
  uint64_t v6 = *(void (**)(void))(v5 + 80);
  v6();
  OUTLINED_FUNCTION_145_2();
  if (!v10)
  {
    uint64_t v8 = PhoneCallNoun.rawValue.getter(v7);
    BOOL v10 = v8 == v0 && v9 == 0xE800000000000000LL;
    if (v10)
    {
      OUTLINED_FUNCTION_210();
    }

    else
    {
      OUTLINED_FUNCTION_205_1();
      OUTLINED_FUNCTION_49_2(v11, v12, v13, 0xE800000000000000LL);
      OUTLINED_FUNCTION_4_1();
    }
  }

  OUTLINED_FUNCTION_81_3(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 104));
  OUTLINED_FUNCTION_22_25();
  if (!v10)
  {
    uint64_t v15 = PhoneCallVerb.rawValue.getter(v14);
    if (v15 == v0 && v16 == 0xE800000000000000LL)
    {
      OUTLINED_FUNCTION_210();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v15, v16, 0x656D697465636166LL, 0xE800000000000000LL);
      OUTLINED_FUNCTION_13_1();
    }
  }

  ((void (*)(uint64_t, uint64_t))v6)(v4, v2);
  OUTLINED_FUNCTION_145_2();
  if (!v10)
  {
    uint64_t v19 = PhoneCallNoun.rawValue.getter(v18);
    if (v19 == 0x61665F70756F7267LL && v20 == 0xEE00656D69746563LL)
    {
      OUTLINED_FUNCTION_144_2(0x656D69746563LL);
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v19, v20, 0x61665F70756F7267LL, 0xEE00656D69746563LL);
      OUTLINED_FUNCTION_62();
    }
  }

  OUTLINED_FUNCTION_58();
  return result;
}

Swift::Bool __swiftcall App.isFirstParty()()
{
  uint64_t v0 = App.appIdentifier.getter();
  if (v1)
  {
    v7[0] = v0;
    v7[1] = v1;
    v6[0] = 0x6C7070612E6D6F63LL;
    v6[1] = 0xEA00000000002E65LL;
    unint64_t v2 = lazy protocol witness table accessor for type String and conformance String();
    unint64_t v3 = lazy protocol witness table accessor for type String and conformance String();
    uint64_t v4 = v7;
    BidirectionalCollection<>.starts<A>(with:)(v6, &type metadata for String, &type metadata for String, v2, v3);
    OUTLINED_FUNCTION_27_2();
  }

  else
  {
    LOBYTE(v4) = 0;
  }

  return v4 & 1;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isHangUpCall()()
{
  if (!v3)
  {
    OUTLINED_FUNCTION_97_5(v2);
    if (v3) {
      BOOL v5 = v4 == 0xE700000000000000LL;
    }
    else {
      BOOL v5 = 0;
    }
    if (v5)
    {
      swift_bridgeObjectRelease(0xE700000000000000LL);
    }

    else
    {
      OUTLINED_FUNCTION_236();
      OUTLINED_FUNCTION_49_2(v6, v7, v8, 0xE700000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_204()
{
  unint64_t v3 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
  if (v0 == 1) {
    return v1;
  }
  else {
    return v3;
  }
}

uint64_t OUTLINED_FUNCTION_204_0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_274@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_204_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_80(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_204_2(uint64_t a1)
{
  return swift_release_n(a1, 4LL);
}

uint64_t OUTLINED_FUNCTION_204_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_204_4()
{
  return v0;
}

id static PhoneDomainContextMetricsUtils.addPhoneCallType(phoneCallNLIntent:phoneContext:)( uint64_t a1, void *a2)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v5 = OUTLINED_FUNCTION_15_1();
  uint64_t v6 = (os_log_s *)__swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = outlined init with copy of SignalProviding(a1, (uint64_t)v21);
  Logger.logObject.getter(v7);
  os_log_type_t v8 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_93(v8))
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v10 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    outlined init with copy of SignalProviding((uint64_t)v21, (uint64_t)&v18);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    uint64_t v12 = String.init<A>(describing:)(&v18, v11);
    unint64_t v14 = v13;
    uint64_t v18 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    __swift_destroy_boxed_opaque_existential_1(v21);
    _os_log_impl(&dword_0, v6, v2, "#PhoneDomainContextMetricsUtils addPhoneCallType with phoneIntent: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL);
    OUTLINED_FUNCTION_0_2(v10);
    OUTLINED_FUNCTION_0_2((uint64_t)v9);
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1(v21);
  }

  OUTLINED_FUNCTION_0_67();
  if (PhoneCallNLIntent.isAudioCall()()) {
    return [a2 setPhoneCallType:1];
  }
  OUTLINED_FUNCTION_0_67();
  if (PhoneCallNLIntent.isVideoCall()())
  {
    uint64_t v16 = a2;
    uint64_t v17 = 2LL;
  }

  else
  {
    uint64_t v16 = a2;
    uint64_t v17 = 0LL;
  }

  return [v16 setPhoneCallType:v17];
}

Swift::Bool __swiftcall PhoneCallNLIntent.isAudioCall()()
{
  Swift::Bool v7 = PhoneCallNLIntent.hasAudioCallSemantic()();
  OUTLINED_FUNCTION_30_20(v3);
  if (v7)
  {
    Swift::Bool v8 = 1;
  }

  else
  {
    OUTLINED_FUNCTION_72_8();
    Swift::Bool v8 = PhoneCallNLIntent.hasCallVerb()();
  }

  OUTLINED_FUNCTION_6_10(v3);
  OUTLINED_FUNCTION_30_20(v2);
  if (v8)
  {
    OUTLINED_FUNCTION_68_11();
    Swift::Bool v9 = PhoneCallNLIntent.isFind()();
    OUTLINED_FUNCTION_6_10(v2);
    OUTLINED_FUNCTION_30_20(v0);
    if (!v9)
    {
      OUTLINED_FUNCTION_33_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 120));
      OUTLINED_FUNCTION_220();
    }
  }

  else
  {
    OUTLINED_FUNCTION_6_10(v2);
    OUTLINED_FUNCTION_30_20(v0);
  }

  OUTLINED_FUNCTION_6_10(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_213_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(v4, v3, a3);
}

void *OUTLINED_FUNCTION_213_1()
{
  *(void *)(v0 + 264) = v2;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_213_2()
{
  return *(void *)(v0 - 304);
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasCallVerb()()
{
  if (!v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_97_5(v2);
    if (v3) {
      BOOL v6 = v5 == 0xE400000000000000LL;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      OUTLINED_FUNCTION_58_10();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v4, v5, 1819042147LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isFind()()
{
  if (!v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_97_5(v2);
    if (v3) {
      BOOL v6 = v5 == 0xE400000000000000LL;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      OUTLINED_FUNCTION_58_10();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v4, v5, 1684957542LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

void PhoneCallNLv3Intent.voiceMailNoun.getter()
{
}

void static PhoneDomainContextMetricsUtils.addEmergencyType(phoneCallNLIntent:phoneContext:)( uint64_t a1, void *a2)
{
  id v3 = [objc_allocWithZone(FLOWSchemaFLOWPhoneCallEmergencyContext) init];
  if (v3)
  {
    id v7 = v3;
    OUTLINED_FUNCTION_0_67();
    if (PhoneCallNLIntent.isEmergencyNumberCall()()) {
      [v7 setEmergencyCallType:2];
    }
    OUTLINED_FUNCTION_0_67();
    if (PhoneCallNLIntent.isEmergencyServicesCall()()) {
      [v7 setEmergencyCallType:3];
    }
    OUTLINED_FUNCTION_0_67();
    if (PhoneCallNLIntent.isEmergencyContactCall()()) {
      OUTLINED_FUNCTION_15_47(v7, "setEmergencyCallType:");
    }
    [a2 setEmergencyContext:v7];
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v4 = OUTLINED_FUNCTION_15_1();
    id v7 = (id)OUTLINED_FUNCTION_12_1(v4, (uint64_t)static Logger.siriPhone);
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled((os_log_t)v7, v5))
    {
      BOOL v6 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)BOOL v6 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v7,  v5,  "#PhoneDomainContextMetricsUtils returning without logging phoneCall emergency context",  v6);
      OUTLINED_FUNCTION_0_2((uint64_t)v6);
    }
  }
}

uint64_t protocol witness for SiriPhoneContact.emergencyType.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 448LL))();
}

void PhoneCallContactIntentNode.emergencyType.getter()
{
  id v3 = (char *)v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalIntentNode?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_39_2();
  __chkstk_darwin();
  os_log_type_t v5 = (char *)v45 - v4;
  uint64_t v47 = v0;
  v48[0] = v0;
  if (one-time initialization token for phoneNumberNode != -1) {
    swift_once(&one-time initialization token for phoneNumberNode, one-time initialization function for phoneNumberNode);
  }
  uint64_t v6 = static PhoneCallContactOntologyNode.phoneNumberNode;
  uint64_t v7 = ObjC metadata update function for PhoneCallContactIntentNode();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallContactIntentNode and conformance PhoneCallContactIntentNode,  type metadata accessor for PhoneCallContactIntentNode);
  IntentNodeTraversable.intentNode<A>(forOntologyNode:)(v6, v7, v8);
  outlined init with copy of CommonDirectAction?( (uint64_t)v5,  v1,  &demangling cache variable for type metadata for TerminalIntentNode?);
  uint64_t v9 = OUTLINED_FUNCTION_76_22();
  uint64_t v10 = OUTLINED_FUNCTION_35(v1, 1LL, v9);
  if (v14)
  {
    uint64_t v11 = &demangling cache variable for type metadata for TerminalIntentNode?;
    uint64_t v12 = v1;
LABEL_9:
    outlined destroy of UUID?(v12, v11);
    goto LABEL_10;
  }

  TerminalIntentNode.elements.getter(v10);
  OUTLINED_FUNCTION_11_20(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL));
  OUTLINED_FUNCTION_107_14((uint64_t)v3);
  OUTLINED_FUNCTION_62();
  uint64_t v13 = OUTLINED_FUNCTION_100_11();
  uint64_t v15 = OUTLINED_FUNCTION_35((uint64_t)v3, 1LL, v13);
  if (v14)
  {
    uint64_t v11 = &demangling cache variable for type metadata for TerminalElement?;
    uint64_t v12 = (uint64_t)v3;
    goto LABEL_9;
  }

  uint64_t v46 = v5;
  uint64_t v21 = TerminalElement.semanticTags.getter(v15);
  OUTLINED_FUNCTION_11_20((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL));
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain();
    v45[1] = v21;
    uint64_t v23 = (unint64_t *)(v21 + 40);
    uint64_t v24 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v25 = *(v23 - 1);
      unint64_t v26 = *v23;
      uint64_t v27 = HIBYTE(*v23) & 0xF;
      if ((*v23 & 0x2000000000000000LL) == 0) {
        uint64_t v27 = *(v23 - 1);
      }
      uint64_t v28 = 7LL;
      if (((v26 >> 60) & ((v25 & 0x800000000000000LL) == 0)) != 0) {
        uint64_t v28 = 11LL;
      }
      uint64_t v29 = v28 | (v27 << 16);
      swift_bridgeObjectRetain();
      uint64_t v30 = String.index(_:offsetBy:limitedBy:)(15LL, 1LL, v29, v25, v26);
      if ((v31 & 1) != 0) {
        uint64_t v32 = v29;
      }
      else {
        uint64_t v32 = v30;
      }
      String.subscript.getter(15LL, v32, v25, v26);
      Swift::String v33 = Substring.lowercased()();
      OUTLINED_FUNCTION_87_0();
      swift_bridgeObjectRetain();
      specialized Collection.dropFirst(_:)(1LL);
      Swift::String v49 = v33;
      v48[0] = v34;
      v48[1] = v35;
      v48[2] = v36;
      uint64_t v48[3] = v37;
      unint64_t v38 = lazy protocol witness table accessor for type Substring and conformance Substring();
      swift_bridgeObjectRetain();
      String.append<A>(contentsOf:)(v48, &type metadata for Substring, v38);
      OUTLINED_FUNCTION_87_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int v39 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallContactIntentNode.emergencyType.getter,  v49);
      OUTLINED_FUNCTION_62();
      if (!v39)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
        {
          OUTLINED_FUNCTION_97_19();
          uint64_t v24 = v42;
        }

        unint64_t v40 = v24[2];
        unint64_t v41 = v40 + 1;
        if (v40 >= v24[3] >> 1)
        {
          OUTLINED_FUNCTION_97_19();
          uint64_t v24 = v43;
        }

        v24[2] = v41;
      }

      v23 += 2;
      --v22;
    }

    while (v22);
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }

  OUTLINED_FUNCTION_39();
  BOOL v44 = specialized Sequence<>.contains(_:)((uint64_t)v24);
  uint64_t v17 = OUTLINED_FUNCTION_4_1();
  os_log_type_t v5 = v46;
  if (v44) {
    goto LABEL_40;
  }
LABEL_10:
  uint64_t v16 = *(uint64_t (**)(void))(*(void *)v47 + 256LL);
  uint64_t v17 = v16();
  if (v18)
  {
    if (v17 == 0xD000000000000012LL && v18 == 0x8000000000348E70LL)
    {
      uint64_t v17 = OUTLINED_FUNCTION_4_1();
LABEL_40:
      OUTLINED_FUNCTION_150(v17, &demangling cache variable for type metadata for TerminalIntentNode?);
      goto LABEL_41;
    }

    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, 0xD000000000000012LL, 0x8000000000348E70LL, 0LL);
    uint64_t v17 = OUTLINED_FUNCTION_4_1();
    if ((v19 & 1) != 0) {
      goto LABEL_40;
    }
  }

  uint64_t v17 = ((uint64_t (*)(uint64_t))v16)(v17);
  if (!v20) {
    goto LABEL_40;
  }
  if (v17 == 0xD000000000000011LL && v20 == 0x8000000000348E90LL)
  {
    OUTLINED_FUNCTION_150(0xD000000000000011LL, &demangling cache variable for type metadata for TerminalIntentNode?);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)(v17, v20, 0xD000000000000011LL, 0x8000000000348E90LL, 0LL);
    outlined destroy of UUID?((uint64_t)v5, &demangling cache variable for type metadata for TerminalIntentNode?);
    OUTLINED_FUNCTION_62();
  }

LABEL_41:
  OUTLINED_FUNCTION_7_5();
}
  }

  __break(1u);
}

      uint64_t v81 = OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_88((uint64_t)v11, 1LL, v82, v81);
      goto LABEL_42;
    case 5:
    case 6:
    case 8:
    case 9:
    case 0xB:
    case 0xC:
      goto LABEL_16;
    case 7:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      BOOL v44 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v44, (uint64_t)static Logger.siriPhone);
      uint64_t v45 = OUTLINED_FUNCTION_6_0();
      uint64_t v46 = OUTLINED_FUNCTION_27_1(v45);
      uint64_t v48 = v99;
      uint64_t v47 = v100;
      if (v46)
      {
        Swift::String v49 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v49);
        OUTLINED_FUNCTION_5_13( &dword_0,  v50,  v51,  "#UnsupportedCallFlowOutputFactory makeUnsupportedTemplatingResult: returning unsupported deleteCallHistory");
        OUTLINED_FUNCTION_8_33();
      }

      OUTLINED_FUNCTION_75_5();
      (*(void (**)(uint64_t, uint64_t))(v52 + class metadata base offset for UnsupportedFlowCATs))(v48, v47);
      goto LABEL_52;
    case 0xA:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v53 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v53, (uint64_t)static Logger.siriPhone);
      uint64_t v54 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v54))
      {
        uint64_t v55 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v55);
        OUTLINED_FUNCTION_5_13( &dword_0,  v56,  v57,  "#UnsupportedCallFlowOutputFactory makeUnsupportedTemplatingResult: returning unsupported emergencyContactCall");
        OUTLINED_FUNCTION_8_33();
      }

      uint64_t v58 = OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_15_12((uint64_t)v9);
      uint64_t v59 = *(void *)(v0 + 128);
      uint64_t v60 = App.isFirstParty()();
      if (!v60)
      {
        v98[0] = v58;
        uint64_t v61 = v105;
        uint64_t v62 = v106;
        OUTLINED_FUNCTION_82(v104);
        dispatch thunk of DeviceState.siriLocale.getter(v61, v62);
        uint64_t v63 = OUTLINED_FUNCTION_69_1();
        char v64 = swift_initStackObject(v63, &v102);
        AppInfoBuilder.getAppName(_:requestedLocale:)(v59, (uint64_t)v5);
        OUTLINED_FUNCTION_62_5();
        if (v59)
        {
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_1_34(v64, v59);
          OUTLINED_FUNCTION_92_4((uint64_t)v7, 0LL);
          OUTLINED_FUNCTION_39();
        }

        else
        {
          OUTLINED_FUNCTION_92_4((uint64_t)v7, 1LL);
        }

        outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for SpeakableString?);
        outlined init with take of SpeakableString?((uint64_t)v7, (uint64_t)v9);
      }

      OUTLINED_FUNCTION_75_5();
      (*(void (**)(char *, Swift::Bool, uint64_t, uint64_t))(class metadata base offset for UnsupportedFlowCATs
                                                                    + v97
                                                                    + 160))( v9,  v60,  v99,  v100);
      uint64_t v88 = (uint64_t)v9;
LABEL_51:
      outlined destroy of UUID?(v88, &demangling cache variable for type metadata for SpeakableString?);
      goto LABEL_52;
    case 0xD:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      char v65 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v65, (uint64_t)static Logger.siriPhone);
      uint64_t v66 = OUTLINED_FUNCTION_6_0();
      uint64_t v67 = OUTLINED_FUNCTION_27_1(v66);
      os_log_type_t v69 = v99;
      uint64_t v68 = v100;
      if (v67)
      {
        uint64_t v70 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v70);
        OUTLINED_FUNCTION_5_13( &dword_0,  v71,  v72,  "#UnsupportedCallFlowOutputFactory makeUnsupportedTemplatingResult: returning unsupported deleteVoicemail");
        OUTLINED_FUNCTION_8_33();
      }

      OUTLINED_FUNCTION_75_5();
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for UnsupportedFlowCATs + v73 + 32))( v69,  v68);
      goto LABEL_52;
    default:
      if (*(_BYTE *)(v0 + 24))
      {
LABEL_16:
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v34 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v34, (uint64_t)static Logger.siriPhone);
        uint64_t v35 = OUTLINED_FUNCTION_6_0();
        uint64_t v36 = OUTLINED_FUNCTION_27_1(v35);
        unint64_t v38 = v99;
        uint64_t v37 = v100;
        if (v36)
        {
          Swift::Int v39 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_47(v39);
          OUTLINED_FUNCTION_5_13( &dword_0,  v40,  v41,  "#UnsupportedCallFlowOutputFactory makeUnsupportedTemplatingResult: returning unsupported on deviceType");
          OUTLINED_FUNCTION_8_33();
        }

        char v42 = *(void **)(v0 + 32);
        OUTLINED_FUNCTION_50_6();
        OUTLINED_FUNCTION_64_4();
        uint64_t v43 = SirikitDeviceState.__allocating_init(from:)(v103);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for UnsupportedFlowCATs
                                                          + *v42
                                                          + 192))( v43,  v38,  v37);
        swift_release(v43);
      }

      else if (static UnsupportedPhoneCall.isInRetailStoreDemoMode()())
      {
        uint64_t v27 = v99;
        unint64_t v26 = v100;
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v28 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v28, (uint64_t)static Logger.siriPhone);
        uint64_t v29 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_27_1(v29))
        {
          uint64_t v30 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_47(v30);
          OUTLINED_FUNCTION_5_13( &dword_0,  v31,  v32,  "#UnsupportedCallFlowOutputFactory makeUnsupportedTemplatingResult: returning unsupported startCallEmergencyInRetailStore");
          OUTLINED_FUNCTION_8_33();
        }

        OUTLINED_FUNCTION_75_5();
        (*(void (**)(uint64_t, uint64_t))(class metadata base offset for UnsupportedFlowCATs + v33 + 128))( v27,  v26);
      }

      else
      {
        uint64_t v90 = v99;
        int v89 = v100;
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v91 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v91, (uint64_t)static Logger.siriPhone);
        uint64_t v92 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_27_1(v92))
        {
          uint64_t v93 = (_WORD *)OUTLINED_FUNCTION_1_0();
          OUTLINED_FUNCTION_47(v93);
          OUTLINED_FUNCTION_5_13( &dword_0,  v94,  v95,  "#UnsupportedCallFlowOutputFactory makeUnsupportedTemplatingResult: returning unsupported startCallEmergency");
          OUTLINED_FUNCTION_8_33();
        }

        OUTLINED_FUNCTION_75_5();
        (*(void (**)(uint64_t, uint64_t))(class metadata base offset for UnsupportedFlowCATs + v96 + 96))( v90,  v89);
      }

  swift_bridgeObjectRelease();
  static Signpost.event(_:number1:)();
  if ((v27 & 1) != 0) {
    static Signpost.emitSyntheticInterval(_:beginTimestamp:)();
  }
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

          swift_bridgeObjectRelease();
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          char v64 = type metadata accessor for Logger(0LL);
          char v65 = __swift_project_value_buffer(v64, (uint64_t)static Logger.siriPhone);
          uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
          uint64_t v68 = static os_log_type_t.debug.getter(v66, v67);
          if (os_log_type_enabled(v66, v68))
          {
            os_log_type_t v69 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)os_log_type_t v69 = 0;
            _os_log_impl( &dword_0,  v66,  v68,  "#ReferenceContactResolutionWrapper resolved to an unnamed common_Group",  v69,  2u);
            swift_slowDealloc(v69, -1LL, -1LL);
          }

          specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)();
          swift_bridgeObjectRelease();
          return;
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v51 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_26;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v36 = type metadata accessor for Logger(0LL);
  uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
  unint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
  unint64_t v40 = static os_log_type_t.debug.getter(v38, v39);
  if (os_log_type_enabled(v38, v40))
  {
    unint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v41 = 0;
    _os_log_impl(&dword_0, v38, v40, "#ReferenceContactResolutionWrapper resolved to a named common_Group", v41, 2u);
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  char v42 = a5[3];
  uint64_t v43 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v42);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v43 + 8))(v75, v42, v43);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v75, (uint64_t)v74);
  outlined init with copy of SharedGlobalsProviding(a6, (uint64_t)v73);
  BOOL v44 = swift_allocObject(&unk_40A260, 96LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(v74, v44 + 16);
  outlined init with take of AppSelectionSignalComponent(v73, v44 + 56);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)( closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply,  v44,  v45);
  __swift_destroy_boxed_opaque_existential_1(v75);
  uint64_t v46 = (void (*)(__int128 *__return_ptr, void *))Transformer.transform.getter(v11);
  uint64_t v48 = v47;
  Swift::String v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SmsGroup>);
  uint64_t v50 = swift_allocObject(v49, 72LL, 7LL);
  *(_OWORD *)(v50 + 16) = xmmword_31D870;
  *(void *)(v50 + 56) = type metadata accessor for UsoEntity_common_Group(0LL);
  *(void *)(v50 + 64) = &protocol witness table for UsoEntity_common_Group;
  *(void *)(v50 + 32) = a1;
  v75[0] = v50;
  swift_retain();
  v46(v74, v75);
  swift_bridgeObjectRelease();
  swift_release(v48);
  ((void (*)(char *, uint64_t))v71[1])(v13, v11);
}

  if (!(_DWORD)v121)
  {
LABEL_23:
    if ((_DWORD)v122) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }

  __break(1u);
}

  __break(1u);
}

uint64_t PhoneCallContactIntentNode.contactName.getter()
{
  return PhoneCallContactIntentNode.contactId.getter( &one-time initialization token for phoneCallContactNameNode,  (uint64_t)&static PhoneCallContactOntologyNode.phoneCallContactNameNode,  (uint64_t)one-time initialization function for phoneCallContactNameNode);
}

void PhoneCallNLv3Intent.phoneCallDestinationType.getter()
{
}

id *outlined destroy of CallStateProvider(id *a1)
{
  return a1;
}

uint64_t destroy for CallStateProvider(id *a1)
{
  uint64_t v1 = a1 + 1;

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

Swift::Bool __swiftcall PhoneCallNLIntent.isGroupFaceTimeCall()()
{
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_39_2();
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_83_6();
  __chkstk_darwin(v8);
  uint64_t v25 = (uint64_t)&v25 - v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_66_9();
  uint64_t v12 = *(uint64_t (**)(void))(v11 + 128);
  uint64_t v13 = v12();
  uint64_t v14 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease(v13);
  Swift::Bool v15 = PhoneCallNLIntent.isFaceTimeCall()();
  uint64_t v26 = v6;
  if (v14)
  {
    OUTLINED_FUNCTION_129_3(v4, v0);
    if (v15)
    {
      uint64_t v16 = v12();
      OUTLINED_FUNCTION_72_11(v16);
      uint64_t v17 = v25;
      OUTLINED_FUNCTION_129_3(v25, v4);
      if (v4 <= 1)
      {
        uint64_t v21 = OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 136));
        OUTLINED_FUNCTION_72_11(v21);
      }

      OUTLINED_FUNCTION_56_11(v17);
      uint64_t v22 = v4;
LABEL_15:
      OUTLINED_FUNCTION_56_11(v22);
      goto LABEL_16;
    }

    char v19 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    uint64_t v20 = v4;
  }

  else
  {
    OUTLINED_FUNCTION_129_3(v3, v0);
    if (v15)
    {
      uint64_t v18 = OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
      OUTLINED_FUNCTION_72_11(v18);
      OUTLINED_FUNCTION_129_3(v2, v3);
      if (v3 <= 1)
      {
        uint64_t v23 = OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 136));
        OUTLINED_FUNCTION_72_11(v23);
      }

      OUTLINED_FUNCTION_56_11(v2);
      uint64_t v22 = v3;
      goto LABEL_15;
    }

    char v19 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    uint64_t v20 = v3;
  }

  OUTLINED_FUNCTION_41_2(v20, v19);
LABEL_16:
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
  return result;
}

void *PhoneCallNLv3Intent.contactQueries.getter()
{
  uint64_t v28 = v3;
  uint64_t v29 = v4;
  uint64_t v5 = type metadata accessor for ContactQuery(0LL);
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  uint64_t v6 = OUTLINED_FUNCTION_22_5();
  uint64_t v21 = *(int *)(type metadata accessor for PhoneCallNLv3Intent(v6) + 48);
  uint64_t v7 = *(void *)(v0 + v21);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent);
  uint64_t v8 = OUTLINED_FUNCTION_86_18(v7);
  uint64_t v23 = v0;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)&v22,  v8,  (uint64_t)&v27);
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_4_1();
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  uint64_t v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    uint64_t v13 = OUTLINED_FUNCTION_86_18(*(void *)(v0 + v21));
    __chkstk_darwin();
    v20[2] = v0;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)v20,  v13,  (uint64_t)&v26);
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v25 = _swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v17 = v15 + 32;
      uint64_t v12 = v25;
      do
      {
        outlined init with copy of SignalProviding(v17, (uint64_t)v24);
        __swift_project_boxed_opaque_existential_1(v24, v24[3]);
        SiriPhoneContact.asSiriInferenceContact.getter();
        __swift_destroy_boxed_opaque_existential_1(v24);
        if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v12 = v25;
        }

        unint64_t v18 = v12[2];
        if (v18 >= v12[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v12 = v25;
        }

        v12[2] = v18 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))( (unint64_t)v12 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
        + *(void *)(v2 + 72) * v18,
          v1,
          v5);
        uint64_t v25 = v12;
        v17 += 40LL;
        --v16;
      }

      while (v16);
    }

    swift_bridgeObjectRelease();
  }

  return v12;
}

void SiriPhoneContact.asSiriInferenceContact.getter()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactHandleQuery?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ContactHandle.HandleType(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v119 = v10;
  uint64_t v120 = v11;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v118 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v109 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactQuery?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactRelationshipQuery?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v17 = v16 - v15;
  ContactQuery.init()(v18);
  Swift::String_optional v19 = SiriPhoneContact.getFullName(filteredAlternatives:)(1);
  if (v19.value._object) {
    ContactQuery.fullName.setter(v19.value._countAndFlagsBits);
  }
  OUTLINED_FUNCTION_28_46();
  Swift::String_optional v20 = SiriPhoneContact.getPrefixName()();
  if (v20.value._object) {
    ContactQuery.namePrefix.setter(v20.value._countAndFlagsBits);
  }
  char v21 = OUTLINED_FUNCTION_82_14();
  Swift::String_optional v22 = SiriPhoneContact.getFirstName(filteredAlternatives:)(v21);
  if (v22.value._object) {
    ContactQuery.givenName.setter(v22.value._countAndFlagsBits);
  }
  char v23 = OUTLINED_FUNCTION_82_14();
  Swift::String_optional v24 = SiriPhoneContact.getMiddleName(filteredAlternatives:)(v23);
  if (v24.value._object) {
    ContactQuery.middleName.setter(v24.value._countAndFlagsBits);
  }
  char v25 = OUTLINED_FUNCTION_82_14();
  Swift::String_optional v26 = SiriPhoneContact.getLastName(filteredAlternatives:)(v25);
  if (v26.value._object) {
    ContactQuery.familyName.setter(v26.value._countAndFlagsBits);
  }
  OUTLINED_FUNCTION_28_46();
  Swift::String_optional v27 = SiriPhoneContact.getPostfixName()();
  if (v27.value._object) {
    ContactQuery.nameSuffix.setter(v27.value._countAndFlagsBits);
  }
  OUTLINED_FUNCTION_28_46();
  Swift::String_optional v28 = SiriPhoneContact.getNickName()();
  if (v28.value._object) {
    ContactQuery.nickname.setter(v28.value._countAndFlagsBits);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 416))(v5, v3);
  if (v29)
  {
    OUTLINED_FUNCTION_5_26();
    uint64_t v30 = OUTLINED_FUNCTION_17_34();
    __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v30);
    uint64_t v31 = OUTLINED_FUNCTION_9_0();
    ContactRelationshipQuery.init(label:fromContact:)(v31);
    uint64_t v32 = type metadata accessor for ContactRelationshipQuery(0LL);
    OUTLINED_FUNCTION_18_53(v17, v33, v34, v32);
    ContactQuery.relationship.setter(v17);
  }

  OUTLINED_FUNCTION_28_46();
  Swift::String_optional v35 = SiriPhoneContact.getOrganzationName()();
  if (v35.value._object) {
    ContactQuery.organizationName.setter(v35.value._countAndFlagsBits);
  }
  OUTLINED_FUNCTION_28_46();
  Swift::Bool v36 = SiriPhoneContact.isMe()();
  uint64_t v37 = v119;
  uint64_t v38 = v120;
  if (v36) {
    ContactQuery.isMe.setter(1LL);
  }
  uint64_t v117 = v5;
  OUTLINED_FUNCTION_28_46();
  Swift::String_optional v39 = SiriPhoneContact.getContactName()();
  if (v39.value._object)
  {
    uint64_t v40 = ContactQuery.givenName.getter();
    OUTLINED_FUNCTION_65_15(v40, v41);
    OUTLINED_FUNCTION_75_19();
    if (v42
      || (uint64_t v43 = ContactQuery.middleName.getter(), OUTLINED_FUNCTION_65_15(v43, v44), OUTLINED_FUNCTION_75_19(), v45)
      || (uint64_t v46 = ContactQuery.familyName.getter(), OUTLINED_FUNCTION_65_15(v46, v47), OUTLINED_FUNCTION_75_19(), v48))
    {
      OUTLINED_FUNCTION_39();
    }

    else
    {
      ContactQuery.givenName.setter(v39.value._countAndFlagsBits);
    }

    uint64_t v37 = v119;
  }

  OUTLINED_FUNCTION_28_46();
  Swift::String_optional v49 = SiriPhoneContact.getHandleType()();
  if (v49.value._object)
  {
    uint64_t v115 = v3;
    uint64_t v116 = v0;
    uint64_t v112 = v9;
    uint64_t v113 = v7;
    Swift::String_optional v111 = v49;
    Swift::String_optional v124 = v49;
    unint64_t v110 = lazy protocol witness table accessor for type String and conformance String();
    uint64_t v50 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)( 32LL,  0xE100000000000000LL,  0x7FFFFFFFFFFFFFFFLL,  1LL,  &type metadata for String,  v110);
    uint64_t v51 = *(void *)(v50 + 16);
    uint64_t v114 = v14;
    uint64_t v109 = v50;
    if (v51)
    {
      uint64_t v52 = (uint64_t *)(v50 + 56);
      uint64_t countAndFlagsBits = _swiftEmptyArrayStorage;
      do
      {
        unint64_t v54 = *(v52 - 3);
        unint64_t v55 = *(v52 - 2);
        uint64_t v57 = *(v52 - 1);
        uint64_t v56 = *v52;
        unint64_t v58 = v54 >> 16;
        unint64_t v59 = v55 >> 16;
        if (v57 != 0x656E6F6870LL || v56 != 0xE500000000000000LL || v58 != 0 || v59 != 5)
        {
          uint64_t v63 = OUTLINED_FUNCTION_124_7();
          if ((OUTLINED_FUNCTION_120_7(v63, v64, v65, v66, 0x656E6F6870LL) & 1) == 0)
          {
            BOOL v67 = v57 == 0x6C69616D65LL && v56 == 0xE500000000000000LL;
            BOOL v68 = v67 && v58 == 0;
            if (!v68 || v59 != 5)
            {
              uint64_t v70 = OUTLINED_FUNCTION_124_7();
              if ((OUTLINED_FUNCTION_120_7(v70, v71, v72, v73, 0x6C69616D65LL) & 1) == 0)
              {
                OUTLINED_FUNCTION_8_1();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(countAndFlagsBits);
                v124.value._uint64_t countAndFlagsBits = (uint64_t)countAndFlagsBits;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  uint64_t countAndFlagsBits = (void *)v124.value._countAndFlagsBits;
                }

                unint64_t v76 = countAndFlagsBits[2];
                unint64_t v75 = countAndFlagsBits[3];
                if (v76 >= v75 >> 1)
                {
                  OUTLINED_FUNCTION_142_8(v75);
                  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  uint64_t countAndFlagsBits = (void *)v124.value._countAndFlagsBits;
                }

                countAndFlagsBits[2] = v76 + 1;
                uint64_t v77 = &countAndFlagsBits[4 * v76];
                v77[4] = v54;
                v77[5] = v55;
                v77[6] = v57;
                v77[7] = v56;
              }
            }
          }
        }

        v52 += 4;
        --v51;
      }

      while (v51);
    }

    else
    {
      uint64_t countAndFlagsBits = _swiftEmptyArrayStorage;
    }

    swift_bridgeObjectRelease();
    v124.value._uint64_t countAndFlagsBits = (uint64_t)countAndFlagsBits;
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Substring]);
    unint64_t v79 = lazy protocol witness table accessor for type [Substring] and conformance [A]();
    unint64_t v80 = lazy protocol witness table accessor for type Substring and conformance Substring();
    uint64_t v81 = Sequence<>.joined(separator:)(32LL, 0xE100000000000000LL, v78, v79, v80);
    uint64_t v83 = v82;
    swift_release(countAndFlagsBits);
    v124.value._uint64_t countAndFlagsBits = v81;
    v124.value._object = v83;
    uint64_t v122 = 0x6C616E6F73726570LL;
    unint64_t v123 = 0xE800000000000000LL;
    v121[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonHandleLabelHome);
    v121[1] = v84;
    unint64_t v85 = v110;
    uint64_t v86 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v122,  v121,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
    uint64_t v88 = v87;
    OUTLINED_FUNCTION_34_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39();
    Swift::String_optional v124 = v111;
    uint64_t v122 = 0x6C69616D65LL;
    unint64_t v123 = 0xE500000000000000LL;
    int v89 = (os_log_s *)StringProtocol.contains<A>(_:)( &v122,  &type metadata for String,  &type metadata for String,  v85,  v85);
    uint64_t v90 = OUTLINED_FUNCTION_34_0();
    uint64_t v37 = v119;
    uint64_t v91 = v120;
    uint64_t v92 = (unsigned int *)&enum case for ContactHandle.HandleType.email(_:);
    uint64_t v93 = (uint64_t)v114;
    OUTLINED_FUNCTION_149_6(v90, *v92);
    os_log_type_t v94 = v116;
    char v95 = (*(uint64_t (**)(uint64_t))(v115 + 344))(v117);
    uint64_t v96 = (uint64_t)v112;
    if ((v95 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v97 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v97, (uint64_t)static Logger.siriPhone);
      os_log_type_t v98 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v98))
      {
        uint64_t v99 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v99 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v89,  v94,  "#ContactResolution received AmbiguousHandle. Setting handleType as unknown",  v99);
        OUTLINED_FUNCTION_0_2((uint64_t)v99);
      }

      uint64_t v91 = v120;
      uint64_t v93 = (uint64_t)v114;
      uint64_t v100 = OUTLINED_FUNCTION_91_0(*(uint64_t (**)(uint64_t, uint64_t))(v120 + 8));
      OUTLINED_FUNCTION_149_6(v100, enum case for ContactHandle.HandleType.unknown(_:));
    }

    uint64_t v101 = v118;
    OUTLINED_FUNCTION_79_2(v118, v93, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 16));
    OUTLINED_FUNCTION_137_7(v101, v86, v88);
    uint64_t v102 = OUTLINED_FUNCTION_108_6();
    __swift_storeEnumTagSinglePayload(v96, 0LL, 1LL, v102);
    ContactQuery.handle.setter(v96);
    OUTLINED_FUNCTION_91_0(*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8));
    uint64_t v38 = v91;
  }

  OUTLINED_FUNCTION_28_46();
  if ((unint64_t)SiriPhoneContact.getPhoneNumber()().value._object)
  {
    OUTLINED_FUNCTION_5_26();
    os_log_type_t v103 = *(void (**)(uint64_t, void, uint64_t))(v38 + 104);
    uint64_t v104 = v118;
    v103(v118, enum case for ContactHandle.HandleType.phone(_:), v37);
    uint64_t v105 = v104;
    uint64_t v38 = v120;
    OUTLINED_FUNCTION_101_8(v105);
    uint64_t v106 = OUTLINED_FUNCTION_108_6();
    OUTLINED_FUNCTION_80_10(v106);
  }

  OUTLINED_FUNCTION_28_46();
  if ((unint64_t)SiriPhoneContact.getEmailAddress()().value._object)
  {
    OUTLINED_FUNCTION_5_26();
    uint64_t v107 = v118;
    (*(void (**)(uint64_t, void, uint64_t))(v38 + 104))( v118,  enum case for ContactHandle.HandleType.email(_:),  v37);
    OUTLINED_FUNCTION_101_8(v107);
    uint64_t v108 = OUTLINED_FUNCTION_108_6();
    OUTLINED_FUNCTION_80_10(v108);
  }

  OUTLINED_FUNCTION_7_5();
}

Swift::String_optional __swiftcall SiriPhoneContact.getPrefixName()()
{
  uint64_t v8 = OUTLINED_FUNCTION_25_20(v0, v1, v2, v3, v4, v5, v6, v7, v27);
  OUTLINED_FUNCTION_8_25( (uint64_t)v8,  v9,  &demangling cache variable for type metadata for PhoneCallPersonName?,  v10,  v11,  v12,  v13,  v14,  v28,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43);
  OUTLINED_FUNCTION_26_18();
  if (v15)
  {
    OUTLINED_FUNCTION_29_13();
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_20_15(v16, v17, v18, v19, v20, v21, v22, v23, v29);
  }

  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_0_36();
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

Swift::String_optional __swiftcall SiriPhoneContact.getMiddleName(filteredAlternatives:)( Swift::Bool filteredAlternatives)
{
  uint64_t v8 = OUTLINED_FUNCTION_9_32(filteredAlternatives, v1, v2, v3, v4, v5, v6, v7, v27);
  OUTLINED_FUNCTION_8_25( (uint64_t)v8,  v9,  &demangling cache variable for type metadata for PhoneCallPersonName?,  v10,  v11,  v12,  v13,  v14,  v28,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43);
  OUTLINED_FUNCTION_26_18();
  if (v15)
  {
    OUTLINED_FUNCTION_29_13();
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_20_15(v16, v17, v18, v19, v20, v21, v22, v23, v29);
  }

  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_0_36();
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

Swift::String_optional __swiftcall SiriPhoneContact.getLastName(filteredAlternatives:)( Swift::Bool filteredAlternatives)
{
  uint64_t v8 = OUTLINED_FUNCTION_9_32(filteredAlternatives, v1, v2, v3, v4, v5, v6, v7, v27);
  OUTLINED_FUNCTION_8_25( (uint64_t)v8,  v9,  &demangling cache variable for type metadata for PhoneCallPersonName?,  v10,  v11,  v12,  v13,  v14,  v28,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43);
  OUTLINED_FUNCTION_26_18();
  if (v15)
  {
    OUTLINED_FUNCTION_29_13();
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_20_15(v16, v17, v18, v19, v20, v21, v22, v23, v29);
  }

  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_0_36();
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

Swift::String_optional __swiftcall SiriPhoneContact.getPostfixName()()
{
  uint64_t v8 = OUTLINED_FUNCTION_25_20(v0, v1, v2, v3, v4, v5, v6, v7, v27);
  OUTLINED_FUNCTION_8_25( (uint64_t)v8,  v9,  &demangling cache variable for type metadata for PhoneCallPersonName?,  v10,  v11,  v12,  v13,  v14,  v28,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43);
  OUTLINED_FUNCTION_26_18();
  if (v15)
  {
    OUTLINED_FUNCTION_29_13();
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_20_15(v16, v17, v18, v19, v20, v21, v22, v23, v29);
  }

  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_0_36();
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

Swift::String_optional __swiftcall SiriPhoneContact.getNickName()()
{
  uint64_t v8 = OUTLINED_FUNCTION_25_20(v0, v1, v2, v3, v4, v5, v6, v7, v27);
  OUTLINED_FUNCTION_8_25( (uint64_t)v8,  v9,  &demangling cache variable for type metadata for PhoneCallPersonName?,  v10,  v11,  v12,  v13,  v14,  v28,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43);
  OUTLINED_FUNCTION_26_18();
  if (v15)
  {
    OUTLINED_FUNCTION_29_13();
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_20_15(v16, v17, v18, v19, v20, v21, v22, v23, v29);
  }

  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_0_36();
  result.value._object = v25;
  result.value._uint64_t countAndFlagsBits = v24;
  return result;
}

Swift::String_optional __swiftcall SiriPhoneContact.getRelationship()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 200))();
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:) in conformance CallingIntentHandleIntentFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 376LL))();
}

void PhoneCallContactIntentNode.relationship.getter()
{
}

Swift::String_optional __swiftcall SiriPhoneContact.getOrganzationName()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 128))();
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for SiriPhoneContact.organizationName.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 328LL))();
}

void PhoneCallContactIntentNode.organizationName.getter(void (*a1)(uint64_t, void *))
{
  uint64_t v3 = OUTLINED_FUNCTION_74_23();
  uint64_t v4 = OUTLINED_FUNCTION_35(v1, 1LL, v3);
  if (v5)
  {
    OUTLINED_FUNCTION_150(v4, &demangling cache variable for type metadata for PersonIntentNode?);
  }

  else
  {
    a1(v3, &protocol witness table for PersonIntentNode);
    OUTLINED_FUNCTION_122_5(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL));
  }

  OUTLINED_FUNCTION_6();
}

void PhoneCallContactIntentNode.organizationName.getter()
{
}

Swift::Bool __swiftcall SiriPhoneContact.isMe()()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t protocol witness for SiriPhoneContact.isMe.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 280LL))() & 1;
}

uint64_t PhoneCallContactIntentNode.isMe.getter()
{
  uint64_t v24 = v1;
  uint64_t v25 = v2;
  uint64_t v3 = ((uint64_t (*)(void))type metadata accessor for PersonOntologyNode.PersonSelfReference)(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v23 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PersonOntologyNode.PersonSelfReference?, PersonOntologyNode.PersonSelfReference?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonIntentNode?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v22 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v22 - v13;
  PhoneCallContactIntentNode.person.getter();
  uint64_t v15 = OUTLINED_FUNCTION_74_23();
  OUTLINED_FUNCTION_35(v0, 1LL, v15);
  if (v18)
  {
    outlined destroy of UUID?(v0, &demangling cache variable for type metadata for PersonIntentNode?);
    OUTLINED_FUNCTION_44_2((uint64_t)v14, 1LL);
  }

  else
  {
    ((void (*)(uint64_t, void *))PersonIntentNodeContaining.selfReference.getter)( v15,  &protocol witness table for PersonIntentNode);
    OUTLINED_FUNCTION_11_20(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL));
  }

  (*(void (**)(char *, void, uint64_t))(v4 + 104))( v12,  enum case for PersonOntologyNode.PersonSelfReference.me(_:),  v3);
  OUTLINED_FUNCTION_44_2((uint64_t)v12, 0LL);
  uint64_t v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of CommonDirectAction?( (uint64_t)v14,  (uint64_t)v8,  &demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
  outlined init with copy of CommonDirectAction?( (uint64_t)v12,  v16,  &demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
  OUTLINED_FUNCTION_35((uint64_t)v8, 1LL, v3);
  if (v18)
  {
    outlined destroy of UUID?( (uint64_t)v12,  &demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
    outlined destroy of UUID?( (uint64_t)v14,  &demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
    OUTLINED_FUNCTION_35(v16, 1LL, v3);
    if (v18) {
      char v17 = -1;
    }
    else {
      char v17 = 0;
    }
  }

  else
  {
    outlined init with copy of CommonDirectAction?( (uint64_t)v8,  (uint64_t)v10,  &demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
    OUTLINED_FUNCTION_35(v16, 1LL, v3);
    if (v18)
    {
      outlined destroy of UUID?( (uint64_t)v12,  &demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
      outlined destroy of UUID?( (uint64_t)v14,  &demangling cache variable for type metadata for PersonOntologyNode.PersonSelfReference?);
      OUTLINED_FUNCTION_90_19(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      char v17 = 0;
    }

    else
    {
      uint64_t v19 = v23;
      OUTLINED_FUNCTION_56_4(v23, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PersonOntologyNode.PersonSelfReference and conformance PersonOntologyNode.PersonSelfReference,  (uint64_t (*)(uint64_t))&type metadata accessor for PersonOntologyNode.PersonSelfReference);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v19, v3);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v20(v19, v3);
      OUTLINED_FUNCTION_119_7((uint64_t)v12);
      OUTLINED_FUNCTION_119_7((uint64_t)v14);
      v20((uint64_t)v10, v3);
    }
  }

  OUTLINED_FUNCTION_119_7((uint64_t)v8);
  return v17 & 1;
}

Swift::String_optional __swiftcall SiriPhoneContact.getContactName()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 56))();
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:) in conformance InCallActionHandleIntentFlowStrategy<A, B>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 256LL))();
}

Swift::String_optional __swiftcall SiriPhoneContact.getHandleType()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 224))();
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for SiriPhoneContact.handleType.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 400LL))();
}

uint64_t PhoneCallContactIntentNode.handleType.getter()
{
  return PhoneCallContactIntentNode.contactId.getter( &one-time initialization token for contactTypeNode,  (uint64_t)&static PhoneCallContactOntologyNode.contactTypeNode,  (uint64_t)one-time initialization function for contactTypeNode);
}

uint64_t protocol witness for SiriPhoneContact.telephoneNumber.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 352LL))();
}

uint64_t PhoneCallContactIntentNode.telephoneNumber.getter()
{
  return PhoneCallContactIntentNode.contactId.getter( &one-time initialization token for phoneNumberNode,  (uint64_t)&static PhoneCallContactOntologyNode.phoneNumberNode,  (uint64_t)one-time initialization function for phoneNumberNode);
}

Swift::String_optional __swiftcall SiriPhoneContact.getEmailAddress()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 176))();
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance AnnounceVoicemailReadingFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232LL))();
}

uint64_t PhoneCallContactIntentNode.emailAddress.getter()
{
  return PhoneCallContactIntentNode.contactId.getter( &one-time initialization token for emailAddressNode,  (uint64_t)&static PhoneCallContactOntologyNode.emailAddressNode,  (uint64_t)one-time initialization function for emailAddressNode);
}

  ;
}

uint64_t OUTLINED_FUNCTION_196(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

void *OUTLINED_FUNCTION_196_0(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, 0LL);
}

__n128 *OUTLINED_FUNCTION_196_1(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x746361746E6F63LL;
  result[2].n128_u64[1] = 0xE700000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_196_2(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_196_3(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  return swift_task_alloc(v1);
}

uint64_t OUTLINED_FUNCTION_196_4( uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  *(void *)(v10 + 56) = a7;
  *(void *)(v10 + 64) = v9;
  *(_BYTE *)(v10 + 98) = a9;
  *(_BYTE *)(v10 + 97) = a8;
  *(void *)(v10 + 40) = a5;
  *(void *)(v10 + 48) = a6;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(_BYTE *)(v10 + 96) = a2;
  *(void *)(v10 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_196_5()
{
  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_196_6(void *a1)
{
  *(void *)(v2 + 232) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 32);
}

void OUTLINED_FUNCTION_196_7()
{
}

uint64_t OUTLINED_FUNCTION_178()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return v0;
}

void OUTLINED_FUNCTION_26(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_178_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_178_1(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0xD000000000000010LL;
  return result;
}

void OUTLINED_FUNCTION_178_2(uint64_t a1@<X8>)
{
  v2[6] = a1;
  v2[9] = v1;
  v2[10] = 0xD000000000000014LL;
}

uint64_t OUTLINED_FUNCTION_16_2@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_178_3(uint64_t a1)
{
  *(void *)(v2 + 384) = a1;
  return ParameterResolutionRecord.intent.getter(v1);
}

uint64_t specialized SharedGlobalsProviding.skTransformer.getter@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for SharedGlobals;
  a1[4] = (uint64_t)&protocol witness table for SharedGlobals;
  uint64_t v3 = swift_allocObject(&unk_419CA8, 136LL, 7LL);
  *a1 = v3;
  return outlined init with copy of SharedGlobals(v1, v3 + 16);
}

uint64_t outlined init with copy of SharedGlobals(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for SharedGlobals(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  uint64_t v5 = a2 + 1;
  __int128 v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v4);
  v8(a1 + 8, v5, v7);
  __int128 v9 = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 72) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, (uint64_t)(a2 + 6));
  uint64_t v10 = a2[11];
  uint64_t v11 = a2[12];
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  uint64_t v13 = a2[13];
  uint64_t v12 = a2[14];
  *(void *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v12;
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v13);
  swift_retain(v12);
  return a1;
}

void SKTransformer.convertToSKIntent<A>(ofType:input:rchFlowContext:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void SKTransformer.convertToSKIntent<A>(input:rchFlowContext:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v51 = a2;
  uint64_t v8 = type metadata accessor for Input(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Parse(0LL);
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v57 = a1;
  uint64_t v15 = OUTLINED_FUNCTION_15_1();
  v50[1] = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v16 = OUTLINED_FUNCTION_6_0();
  BOOL v17 = os_log_type_enabled(v5, v16);
  uint64_t v54 = a5;
  if (v17)
  {
    uint64_t v18 = OUTLINED_FUNCTION_7_0(22LL);
    v50[0] = v8;
    uint64_t v19 = v18;
    uint64_t v20 = OUTLINED_FUNCTION_7_0(64LL);
    v60[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v21 = OUTLINED_FUNCTION_47_0(40LL, 0x8000000000348F10LL, v60);
    uint64_t v22 = OUTLINED_FUNCTION_6_37(v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, v23, v24, v25);
    *(_WORD *)(v19 + 12) = 2080;
    *(void *)&__int128 v58 = a5;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(a5);
    uint64_t v27 = OUTLINED_FUNCTION_29_14(MetatypeMetadata);
    uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v60);
    uint64_t v30 = OUTLINED_FUNCTION_6_37(v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v30, v31, v32, v33);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_6(&dword_0, v5, v16, "#SKTransformer %s to %s", (uint8_t *)v19);
    OUTLINED_FUNCTION_42_2(v20);
    OUTLINED_FUNCTION_0_2(v20);
    uint64_t v34 = v19;
    uint64_t v8 = v50[0];
    OUTLINED_FUNCTION_0_2(v34);
  }

  uint64_t v35 = *((void *)v5 + 3);
  uint64_t v36 = *((void *)v5 + 4);
  __swift_project_boxed_opaque_existential_1(v5, v35);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 72))(v35, v36);
  uint64_t v38 = v57;
  Input.parse.getter(v37);
  (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v37 + 192LL))(&v58, v14);
  swift_release(v37);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v56);
  if (v59)
  {
    outlined init with take of AppSelectionSignalComponent(&v58, (uint64_t)v60);
    SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)((uint64_t)v60, v51, v52, v53, v54);
    OUTLINED_FUNCTION_18();
  }

  else
  {
    outlined destroy of PhoneCallNLIntent?((uint64_t)&v58);
    uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v38, v8);
    Logger.logObject.getter(v39);
    os_log_type_t v40 = OUTLINED_FUNCTION_33_18();
    if (os_log_type_enabled(v5, v40))
    {
      uint64_t v41 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v42 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v57 = v9;
      uint64_t v43 = v42;
      v60[0] = v42;
      *(_DWORD *)uint64_t v41 = 136315138;
      Input.parse.getter(v42);
      uint64_t v44 = String.init(describing:)((uint64_t)v14);
      uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, v60);
      uint64_t v47 = OUTLINED_FUNCTION_6_37(v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v47, v48, v49, v41 + 12);
      OUTLINED_FUNCTION_62();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v8);
      _os_log_impl( &dword_0,  v5,  v40,  "#SKTransformer Could not transform Input to PhoneCallNLIntent: %s. Returning nil.",  v41,  0xCu);
      swift_arrayDestroy(v43, 1LL);
      OUTLINED_FUNCTION_0_2(v43);
      OUTLINED_FUNCTION_0_2((uint64_t)v41);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }

  OUTLINED_FUNCTION_7_5();
}

void SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v9 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  OUTLINED_FUNCTION_37_13(v9, (uint64_t)&v72);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v61 = v10;
  OUTLINED_FUNCTION_28_14();
  uint64_t v12 = v11;
  uint64_t v64 = a5;
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v14 = [v13 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  OUTLINED_FUNCTION_7_39();
  static Signpost.begin(_:string1:)();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_23_16(v17, (uint64_t)&v73 + 4);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v19 = OUTLINED_FUNCTION_6_0();
  uint64_t v59 = v16;
  if (OUTLINED_FUNCTION_63(v19))
  {
    uint64_t v20 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v21 = OUTLINED_FUNCTION_7_0(64LL);
    v69[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v22 = OUTLINED_FUNCTION_47_0(52LL, 0x8000000000348ED0LL, v69);
    uint64_t v23 = OUTLINED_FUNCTION_20_16(v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v23, v24, v25, v26);
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v70 = v64;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v64);
    uint64_t v28 = String.init<A>(describing:)(&v70, MetatypeMetadata);
    uint64_t v30 = OUTLINED_FUNCTION_24_13(v28, v29);
    uint64_t v31 = OUTLINED_FUNCTION_20_16(v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v31, v32, v33, v34);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_6(&dword_0, (os_log_s *)v14, v6, "#SKTransformer %s to %s", (uint8_t *)v20);
    OUTLINED_FUNCTION_42_2(v21);
    uint64_t v35 = v21;
    uint64_t v16 = v59;
    OUTLINED_FUNCTION_0_2(v35);
    OUTLINED_FUNCTION_0_2(v20);
  }

  uint64_t v36 = v61;
  outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)&v70);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (!OUTLINED_FUNCTION_14_21((uint64_t)v61, (uint64_t)&v70, v37, v60))
  {
    if (OUTLINED_FUNCTION_14_21( (uint64_t)v69,  (uint64_t)&v70,  v37,  (uint64_t)&type metadata for PhoneCallNLv4Intent))
    {
      uint64_t v43 = (void *)OUTLINED_FUNCTION_5_33();
      SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(v43, v44, v45, v46, v47);
      if (v7)
      {
        outlined destroy of PhoneCallNLv4Intent(v69);
        goto LABEL_11;
      }

      outlined destroy of PhoneCallNLv4Intent(v69);
    }

void static Signpost.begin(_:string1:)()
{
  unint64_t v1 = v0;
  uint64_t v56 = v2;
  uint64_t v57 = v3;
  unint64_t v5 = v4;
  int v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = OUTLINED_FUNCTION_11_44();
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v62 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v60 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v50 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = OUTLINED_FUNCTION_6_49();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  OUTLINED_FUNCTION_53_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  __swift_project_value_buffer(v19, (uint64_t)static OSSignposter.siriPhone);
  uint64_t v59 = v20;
  uint64_t v21 = OUTLINED_FUNCTION_22_27(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
  OSSignposter.logHandle.getter(v21);
  OUTLINED_FUNCTION_30_21();
  OUTLINED_FUNCTION_33_29(v5);
  uint64_t v22 = OUTLINED_FUNCTION_33_29(v1);
  uint64_t v23 = (void *)OSSignposter.logHandle.getter(v22);
  int v55 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
  {
    OUTLINED_FUNCTION_12_48(v1);
    OUTLINED_FUNCTION_12_48(v5);

    uint64_t v25 = v61;
    uint64_t v24 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v18, v62);
LABEL_19:
    uint64_t v49 = OUTLINED_FUNCTION_36_16();
    OUTLINED_FUNCTION_15_2(v49);
    OUTLINED_FUNCTION_10_44();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v24);
    OUTLINED_FUNCTION_21_27(v59);
    OUTLINED_FUNCTION_7_5();
    return;
  }

  unint64_t v53 = v11;
  uint64_t v54 = v9;
  int v52 = v7;
  if ((v7 & 1) != 0)
  {
    if ((unint64_t)v11 >> 32)
    {
      __break(1u);
    }

    else
    {
      if (v11 >> 11 == 27)
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }

      if (v11 >> 16 <= 0x10)
      {
        uint64_t v50 = (const char *)&v65;
        goto LABEL_12;
      }
    }

    __break(1u);
    goto LABEL_22;
  }

  if (v11)
  {
    uint64_t v50 = v11;
LABEL_12:
    uint64_t v26 = (uint64_t)v56;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v56(v58, v18, v62);
    uint64_t v27 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v51 = OUTLINED_FUNCTION_7_0(96LL);
    uint64_t v64 = v51;
    *(_DWORD *)uint64_t v27 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v5, &v64);
    uint64_t v28 = OUTLINED_FUNCTION_13_47();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28, v29, v27 + 4, v30);
    OUTLINED_FUNCTION_7_4(v1);
    OUTLINED_FUNCTION_32_10(v5);
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v1, &v64);
    uint64_t v32 = OUTLINED_FUNCTION_15_37(v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v32, v33, v27 + 14, v34);
    OUTLINED_FUNCTION_7_4(v5);
    OUTLINED_FUNCTION_32_10(v1);
    *(_WORD *)(v27 + 22) = 2080;
    if ((v52 & 0x100) != 0) {
      uint64_t v35 = " enableTelemetry=YES";
    }
    else {
      uint64_t v35 = "";
    }
    if ((v52 & 0x100) != 0) {
      uint64_t v36 = 20LL;
    }
    else {
      uint64_t v36 = 0LL;
    }
    uint64_t v37 = OUTLINED_FUNCTION_17_36((uint64_t)v35, v36);
    unint64_t v39 = v38;
    uint64_t v40 = OUTLINED_FUNCTION_16_30(v37, v38);
    uint64_t v41 = OUTLINED_FUNCTION_15_37(v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v41, v42, v27 + 24, v43);
    unint64_t v44 = v39;
    uint64_t v25 = v61;
    uint64_t v45 = swift_bridgeObjectRelease(v44);
    uint64_t v46 = v58;
    os_signpost_id_t v47 = OSSignpostID.rawValue.getter(v45);
    _os_signpost_emit_with_name_impl( &dword_0,  (os_log_t)v23,  (os_signpost_type_t)v55,  v47,  v50,  "%s=%{public, signpost.telemetry:string1}s%s",  (uint8_t *)v27,  0x20u);
    uint64_t v48 = v51;
    swift_arrayDestroy(v51, 3LL);
    OUTLINED_FUNCTION_0_2(v48);
    OUTLINED_FUNCTION_0_2(v27);

    uint64_t v24 = v62;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v46, v62);
    v56(v60, v18, v24);
    goto LABEL_19;
  }

uint64_t SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  void (*v25)(__int128 *__return_ptr, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(__int128 *__return_ptr, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(__int128 *__return_ptr, uint64_t);
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(__int128 *__return_ptr, uint64_t);
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  __int128 v123[3];
  uint64_t v124;
  uint64_t v114 = a4;
  uint64_t v122 = a3;
  Swift::String_optional v124 = a2;
  uint64_t v119 = a1;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INHangUpCallIntent>);
  uint64_t v106 = *(void *)(v104 - 8);
  __chkstk_darwin();
  uint64_t v105 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INIdentifyIncomingCallerIntent>);
  uint64_t v109 = *(void *)(v107 - 8);
  __chkstk_darwin();
  uint64_t v108 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INJoinCallIntent>);
  Swift::String_optional v111 = *(void *)(v117 - 8);
  __chkstk_darwin();
  unint64_t v110 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAnswerCallIntent>);
  uint64_t v113 = *(void *)(v116 - 8);
  __chkstk_darwin();
  uint64_t v112 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartVideoCallIntent>);
  uint64_t v10 = *(void *)(v115 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartAudioCallIntent>);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartCallIntent>);
  uint64_t v118 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  if (swift_dynamicCastMetatype(a5, v20))
  {
    outlined init with copy of SharedGlobalsProviding(v121, (uint64_t)v123);
    uint64_t v21 = swift_allocObject(&unk_3FB718, 72LL, 7LL);
    uint64_t v22 = v122;
    *(void *)(v21 + 16) = v124;
    *(void *)(v21 + 24) = v22;
    outlined init with take of AppSelectionSignalComponent(v123, v21 + 32);
    id v23 = v22;
    swift_retain();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v21,  v24);
    uint64_t v25 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v17);
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v19, v17);
    uint64_t v28 = v120;
    v25(v123, v119);
    uint64_t v29 = v27;
    if (!v28) {
      goto LABEL_16;
    }
    return swift_release(v29);
  }

  uint64_t v102 = v16;
  os_log_type_t v103 = v14;
  uint64_t v118 = v13;
  uint64_t v101 = v12;
  uint64_t v31 = v115;
  uint64_t v30 = v116;
  uint64_t v32 = v117;
  uint64_t v33 = v121;
  uint64_t v34 = v122;
  uint64_t v35 = v124;
  uint64_t v36 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartAudioCallIntent,  &OBJC_CLASS___INStartAudioCallIntent_ptr);
  if (swift_dynamicCastMetatype(a5, v36))
  {
    outlined init with copy of SharedGlobalsProviding(v33, (uint64_t)v123);
    uint64_t v37 = swift_allocObject(&unk_3FB6F0, 72LL, 7LL);
    *(void *)(v37 + 16) = v35;
    *(void *)(v37 + 24) = v34;
    outlined init with take of AppSelectionSignalComponent(v123, v37 + 32);
    unint64_t v38 = v34;
    swift_retain();
    unint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    uint64_t v40 = v102;
    Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v37,  v39);
    uint64_t v41 = v118;
    uint64_t v42 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v118);
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v40, v41);
    goto LABEL_12;
  }

  uint64_t v45 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartVideoCallIntent,  &OBJC_CLASS___INStartVideoCallIntent_ptr);
  if (swift_dynamicCastMetatype(a5, v45))
  {
    outlined init with copy of SharedGlobalsProviding(v33, (uint64_t)v123);
    uint64_t v46 = swift_allocObject(&unk_3FB6C8, 72LL, 7LL);
    *(void *)(v46 + 16) = v35;
    *(void *)(v46 + 24) = v34;
    outlined init with take of AppSelectionSignalComponent(v123, v46 + 32);
    os_signpost_id_t v47 = v34;
    swift_retain();
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    uint64_t v49 = v101;
    Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v46,  v48);
    uint64_t v42 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v31);
    unint64_t v44 = v50;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v49, v31);
    goto LABEL_12;
  }

  uint64_t v51 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INAnswerCallIntent,  &OBJC_CLASS___INAnswerCallIntent_ptr);
  if (swift_dynamicCastMetatype(a5, v51))
  {
    outlined init with copy of SharedGlobalsProviding(v33, (uint64_t)v123);
    int v52 = (void *)swift_allocObject(&unk_3FB6A0, 80LL, 7LL);
    v52[2] = v35;
    v52[3] = v34;
    outlined init with take of AppSelectionSignalComponent(v123, (uint64_t)(v52 + 4));
    unint64_t v53 = v114;
    v52[9] = v114;
    uint64_t v54 = v53;
    swift_retain();
    int v55 = v34;
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    uint64_t v57 = v112;
    Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v52,  v56);
    uint64_t v42 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v30);
    unint64_t v44 = v58;
    (*(void (**)(char *, uint64_t))(v113 + 8))(v57, v30);
    goto LABEL_12;
  }

  uint64_t v59 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INJoinCallIntent,  &OBJC_CLASS___INJoinCallIntent_ptr);
  if (swift_dynamicCastMetatype(a5, v59))
  {
    outlined init with copy of SharedGlobalsProviding(v33, (uint64_t)v123);
    uint64_t v60 = swift_allocObject(&unk_3FB678, 72LL, 7LL);
    *(void *)(v60 + 16) = v35;
    *(void *)(v60 + 24) = v34;
    outlined init with take of AppSelectionSignalComponent(v123, v60 + 32);
    uint64_t v61 = v34;
    swift_retain();
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    uint64_t v63 = v110;
    Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v60,  v62);
    uint64_t v42 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v32);
    unint64_t v44 = v64;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v63, v32);
LABEL_12:
    uint64_t v65 = v120;
    v42(v123, v119);
    if (!v65)
    {
      uint64_t v29 = v44;
LABEL_16:
      swift_release(v29);
      uint64_t v67 = *(void **)&v123[0];
      goto LABEL_17;
    }

    goto LABEL_13;
  }

  BOOL v68 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent,  &OBJC_CLASS___INIdentifyIncomingCallerIntent_ptr);
  os_log_type_t v69 = swift_dynamicCastMetatype(a5, v68);
  uint64_t v70 = a5;
  uint64_t v72 = v119;
  uint64_t v71 = v120;
  if (v69)
  {
    outlined init with copy of SharedGlobalsProviding(v33, (uint64_t)v123);
    uint64_t v73 = swift_allocObject(&unk_3FB650, 72LL, 7LL);
    *(void *)(v73 + 16) = v35;
    *(void *)(v73 + 24) = v34;
    outlined init with take of AppSelectionSignalComponent(v123, v73 + 32);
    uint64_t v74 = v34;
    swift_retain();
    unint64_t v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    unint64_t v76 = v108;
    Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v73,  v75);
    uint64_t v77 = v107;
    uint64_t v78 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v107);
    unint64_t v44 = v79;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v76, v77);
    v78(v123, v72);
    if (!v71)
    {
      swift_release(v44);
      uint64_t v67 = *(void **)&v123[0];
      a5 = v70;
      goto LABEL_17;
    }

uint64_t type metadata accessor for CNContactStore(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

void INIntent.setMetaData(app:previousIntent:sharedGlobals:)(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  id v5 = [a2 _metadata];
  if (!v5)
  {
    id v5 = OUTLINED_FUNCTION_17_5(0LL, "_metadata");
    if (!v5) {
      id v5 = [objc_allocWithZone(_INPBIntentMetadata) init];
    }
  }

  OUTLINED_FUNCTION_17_6(v3, "_setMetadata:");

  OUTLINED_FUNCTION_140_4(v6, (SEL *)&selRef_intentId);
  char v9 = specialized Optional<A>.isNilOrEmpty.getter(v7, v8);
  uint64_t v10 = OUTLINED_FUNCTION_62();
  if ((v9 & 1) != 0)
  {
    id v11 = OUTLINED_FUNCTION_17_5(v10, "_metadata");
    if (v11)
    {
      uint64_t v12 = v11;
      type metadata accessor for SiriEnvironment(0LL);
      NSString v13 = (NSString)static SiriEnvironment.forCurrentTask.getter();
      if (v13)
      {
        uint64_t v14 = SiriEnvironment.flowTask.getter();
        uint64_t v15 = swift_release(v13);
        dispatch thunk of FlowTaskProvider.id.getter(v15);
        uint64_t v17 = v16;
        swift_release(v14);
        if (v17)
        {
          NSString v13 = OUTLINED_FUNCTION_145_3();
          OUTLINED_FUNCTION_13_1();
        }

        else
        {
          NSString v13 = 0LL;
        }
      }

      OUTLINED_FUNCTION_17_6(v12, "setIntentId:");
    }
  }

  OUTLINED_FUNCTION_5_41();
  OUTLINED_FUNCTION_7_3();
  uint64_t v18 = v42;
  uint64_t v19 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  dispatch thunk of AceServiceInvoker.peerInfo()(v38, v18, v19);
  INIntent.setPeerInfoMetadata(from:)(v38);
  __swift_destroy_boxed_opaque_existential_1(v38);
  __swift_destroy_boxed_opaque_existential_1(v41);
  OUTLINED_FUNCTION_5_41();
  OUTLINED_FUNCTION_7_3();
  INIntent.setDeviceMetadata(from:)(v41);
  __swift_destroy_boxed_opaque_existential_1(v41);
  OUTLINED_FUNCTION_5_41();
  OUTLINED_FUNCTION_7_3();
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  __swift_project_boxed_opaque_existential_1(v38, v39);
  if (a1)
  {
    uint64_t v22 = App.appIdentifier.getter();
    uint64_t v24 = v23;
  }

  else
  {
    uint64_t v22 = 0LL;
    uint64_t v24 = 0LL;
  }

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))( v41,  v22,  v24,  v20,  v21);
  OUTLINED_FUNCTION_23_5();
  __swift_destroy_boxed_opaque_existential_1(v38);
  INIntent.setAppMetadata(from:cachedApp:)(a1, (uint64_t)v41);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v25 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  id v26 = v3;
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v30 = OUTLINED_FUNCTION_7_0(64LL);
    v38[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v37 = OUTLINED_FUNCTION_47_0(46LL, 0x800000000034B6D0LL, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v29 + 4, v29 + 12);
    *(_WORD *)(v29 + 12) = 2080;
    id v31 = [v26 _metadata];
    if (v31
      && (uint64_t v32 = v31,
          id v33 = [v31 dictionaryRepresentation],
          v32,
          v33))
    {
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v33,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    }

    else
    {
      Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    }

    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_23_5();
    uint64_t v37 = (uint64_t)isa;
    uint64_t v35 = String.init<A>(describing:)(&v37, (char *)&type metadata for Swift.AnyObject + 8);
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v29 + 14, v29 + 22);

    OUTLINED_FUNCTION_23_5();
    _os_log_impl(&dword_0, v27, v28, "#INIntent %s: %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v30, 2LL);
    OUTLINED_FUNCTION_0_2(v30);
    OUTLINED_FUNCTION_0_2(v29);
  }

  else
  {
  }

  outlined release of AnnotatedApp?(v41);
}

void DeviceState.isPrimaryDisplayDisabled.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
}

uint64_t DeviceState.idiom.getter(uint64_t a1, uint64_t a2)
{
  if ((dispatch thunk of DeviceState.isMac.getter(a1, a2) & 1) != 0) {
    return 7LL;
  }
  uint64_t v3 = OUTLINED_FUNCTION_99_2();
  if ((dispatch thunk of DeviceState.isPad.getter(v3, v4) & 1) != 0) {
    return 2LL;
  }
  uint64_t v5 = OUTLINED_FUNCTION_99_2();
  if ((dispatch thunk of DeviceState.isWatch.getter(v5, v6) & 1) != 0) {
    return 3LL;
  }
  uint64_t v7 = OUTLINED_FUNCTION_99_2();
  if ((dispatch thunk of DeviceState.isHomePod.getter(v7, v8) & 1) != 0) {
    return 4LL;
  }
  uint64_t v9 = OUTLINED_FUNCTION_99_2();
  if ((dispatch thunk of DeviceState.isCarPlay.getter(v9, v10) & 1) != 0) {
    return 5LL;
  }
  uint64_t v11 = OUTLINED_FUNCTION_99_2();
  if ((dispatch thunk of DeviceState.isAppleTV.getter(v11, v12) & 1) != 0) {
    return 6LL;
  }
  else {
    return 1LL;
  }
}

void DeviceState.triggerMethod.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_21_57();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_5_1();
  dispatch thunk of DeviceState.inputOrigin.getter(a1, a2);
  uint64_t v6 = OUTLINED_FUNCTION_99_2();
  int v8 = v7(v6);
  if (v8 != enum case for InputOrigin.homeButton(_:)
    && v8 != enum case for InputOrigin.remoteButton(_:)
    && v8 != enum case for InputOrigin.voiceTrigger(_:))
  {
    OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }

  OUTLINED_FUNCTION_16();
}

uint64_t SharedGlobalsProviding.appResolutionProvider.getter@<X0>(uint64_t *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v2 = static AppResolutionProvider.instance;
  a1[3] = type metadata accessor for AppResolutionProvider();
  a1[4] = (uint64_t)&protocol witness table for AppResolutionProvider;
  *a1 = v2;
  return swift_retain();
}

uint64_t type metadata accessor for AppResolutionProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin21AppResolutionProvider);
}

uint64_t protocol witness for AppResolutionProviding.get(appId:) in conformance AppResolutionProvider@<X0>( uint64_t a1@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)v1 + 160LL))(v4);
  return outlined init with take of AnnotatedApp?( (uint64_t)v4,  a1,  &demangling cache variable for type metadata for AnnotatedApp?);
}

void AppResolutionProvider.get(appId:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (a2)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 96LL);
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = v7(v8);
    specialized Dictionary.subscript.getter(a1, a2, v9, v21);
    __int128 v19 = v21[1];
    __int128 v20 = v21[0];
    __int128 v18 = v21[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __int128 v11 = v18;
    __int128 v10 = v19;
    __int128 v12 = v20;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl( &dword_0,  v15,  v16,  "#AppResolution could not retrieve annotated app with an app identifier nil",  v17,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v17);
    }

    __int128 v12 = 0uLL;
    __int128 v10 = 0uLL;
    __int128 v11 = 0uLL;
  }

  *a3 = v12;
  a3[1] = v10;
  a3[2] = v11;
}

uint64_t AppResolutionProvider.annotatedApps.getter()
{
  return swift_bridgeObjectRetain();
}

void type metadata accessor for INCallAudioRoute(uint64_t a1)
{
}

uint64_t closure #1 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartVideoCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __int128 v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  __int128 v12 = (char *)&v25 - v11;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallAudioRoute(0LL);
  uint64_t v15 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v14);
  swift_release(KeyPath);
  uint64_t v16 = swift_getKeyPath(&unk_339F48);
  --> infix<A, B, C, D>(_:_:)(v15, v5, v16);
  swift_release(v15);
  swift_release(v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v10, v17, v18);
  __int128 v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartVideoCallIntentExport>>);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = swift_allocObject(v20, v22 + *(void *)(v7 + 72), v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v23 + v22, v12, v6);
  static ReducerBuilder.buildBlock(_:)(v23, v17, v18);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallAudioRoute(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A090);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  __int128 v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallAudioRoute(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A238);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  __int128 v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

void DeviceState.isVoiceTrigger.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_21_57();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = OUTLINED_FUNCTION_99_2();
  dispatch thunk of DeviceState.inputOrigin.getter(v4, v5);
  InputOrigin.isVoiceTrigger.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  OUTLINED_FUNCTION_16();
}

uint64_t InputOrigin.isVoiceTrigger.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_21_57();
  uint64_t v3 = *(void *)(v2 - 8);
  OUTLINED_FUNCTION_27_61();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  __int128 v10 = (char *)&v15 - v9;
  OUTLINED_FUNCTION_30_48(v8, enum case for InputOrigin.voiceTrigger(_:));
  char v11 = specialized == infix<A>(_:_:)(v1, (uint64_t)v10);
  OUTLINED_FUNCTION_22_29((uint64_t)v10);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v7, v1, v2);
  if ((v11 & 1) != 0)
  {
    char v13 = 1;
  }

  else
  {
    OUTLINED_FUNCTION_30_48(v12, enum case for InputOrigin.bluetoothVoiceTrigger(_:));
    char v13 = specialized == infix<A>(_:_:)((uint64_t)v7, (uint64_t)v10);
    OUTLINED_FUNCTION_22_29((uint64_t)v10);
  }

  OUTLINED_FUNCTION_22_29((uint64_t)v7);
  return v13 & 1;
}

void PhoneCallNLv3Intent.phoneCallAudioRoute.getter()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallAudioRoute(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_27124 + 4 * byte_326508[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_27158 + 4 * byte_326503[v4]))();
}

uint64_t sub_27158(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_27160(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x27168LL);
  }
  return result;
}

uint64_t sub_27174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2717CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_27180(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27188(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void DeviceState.isTriggerlessFollowup.getter()
{
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_76_14();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = OUTLINED_FUNCTION_21_57();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_52_16();
  __chkstk_darwin(v10);
  OUTLINED_FUNCTION_66_9();
  uint64_t v11 = dispatch thunk of DeviceState.inputOrigin.getter(v0, v7);
  OUTLINED_FUNCTION_34_39(v11, enum case for InputOrigin.clientGenerated(_:));
  char v12 = OUTLINED_FUNCTION_33_55();
  OUTLINED_FUNCTION_17_67(v3);
  OUTLINED_FUNCTION_17_67(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v1, v0);
  if ((v12 & 1) == 0)
  {
    uint64_t v13 = dispatch thunk of DeviceState.inputOrigin.getter(v0, v7);
    OUTLINED_FUNCTION_34_39(v13, enum case for InputOrigin.triggerlessFollowup(_:));
    OUTLINED_FUNCTION_33_55();
    OUTLINED_FUNCTION_17_67(v3);
    OUTLINED_FUNCTION_17_67(v4);
  }

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #2 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339DC8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A210);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339DC8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A068);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SiriPhoneContact], [INPerson]?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartVideoCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  char v12 = (char *)&v25 - v11;
  uint64_t KeyPath = swift_getKeyPath(&unk_339DC8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
  uint64_t v15 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v14);
  swift_release(KeyPath);
  uint64_t v16 = swift_getKeyPath(&unk_339F20);
  --> infix<A, B, C, D>(_:_:)(v15, v5, v16);
  swift_release(v15);
  swift_release(v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v10, v17, v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartVideoCallIntentExport>>);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = swift_allocObject(v20, v22 + *(void *)(v7 + 72), v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v23 + v22, v12, v6);
  static ReducerBuilder.buildBlock(_:)(v23, v17, v18);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v6);
}

uint64_t key path getter for PhoneCallNLIntent.contacts : PhoneCallNLIntent@<X0>( void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  *a2 = result;
  return result;
}

id @nonobjc INPersonHandle.init(value:type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v6 = 0LL;
  }

  id v7 = [v3 initWithValue:v6 type:a3];

  return v7;
}

Swift::String_optional __swiftcall SiriPhoneContact.getDisplayName()()
{
  uint64_t countAndFlagsBits = (*(uint64_t (**)(void))(v0 + 56))();
  if (object) {
    goto LABEL_4;
  }
  OUTLINED_FUNCTION_51_0();
  Swift::String_optional v3 = SiriPhoneContact.getNickName()();
  object = v3.value._object;
  uint64_t countAndFlagsBits = v3.value._countAndFlagsBits;
  if (v3.value._object
    || (uint64_t v4 = OUTLINED_FUNCTION_51_0(),
        default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(v4, v5),
        char v6 = OUTLINED_FUNCTION_31_15(),
        Swift::String_optional v7 = SiriPhoneContact.getFullName(filteredAlternatives:)(v6),
        object = v7.value._object,
        uint64_t countAndFlagsBits = v7.value._countAndFlagsBits,
        v7.value._object))
  {
LABEL_4:
    uint64_t v8 = countAndFlagsBits;
    uint64_t v9 = object;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_51_0();
    default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(v12, v13);
    char v14 = OUTLINED_FUNCTION_31_15();
    Swift::String_optional v15 = SiriPhoneContact.getFirstName(filteredAlternatives:)(v14);
    uint64_t v8 = v15.value._countAndFlagsBits;
    uint64_t v16 = v15.value._object;
    uint64_t v17 = OUTLINED_FUNCTION_51_0();
    default argument 3 of SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(v17, v18);
    char v19 = OUTLINED_FUNCTION_31_15();
    Swift::String_optional v20 = SiriPhoneContact.getLastName(filteredAlternatives:)(v19);
    uint64_t v9 = v20.value._object;
    if (v15.value._object && (OUTLINED_FUNCTION_49_5(), v21))
    {
      if (!v20.value._object)
      {
        uint64_t v9 = v15.value._object;
        goto LABEL_5;
      }
    }

    else
    {
      if (!v20.value._object)
      {
        OUTLINED_FUNCTION_50();
        uint64_t v8 = 0LL;
        goto LABEL_5;
      }

      unint64_t v22 = ((unint64_t)v20.value._object >> 56) & 0xF;
      if (!v22)
      {
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_50();
        uint64_t v8 = 0LL;
        uint64_t v9 = 0LL;
        goto LABEL_5;
      }

      if (!v15.value._object)
      {
        uint64_t v8 = 0LL;
        uint64_t v16 = (void *)0xE000000000000000LL;
      }
    }

    OUTLINED_FUNCTION_49_5();
    if (v23)
    {
      OUTLINED_FUNCTION_27_17();
      String.append(_:)(v20.value);
      OUTLINED_FUNCTION_39();
      uint64_t v9 = v16;
    }

    else
    {
      OUTLINED_FUNCTION_50();
      uint64_t v8 = v20.value._countAndFlagsBits;
    }
  }

LABEL_5:
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  result.value._object = v11;
  result.value._uint64_t countAndFlagsBits = v10;
  return result;
}

  OUTLINED_FUNCTION_57_12(v15);
  OUTLINED_FUNCTION_38_18(v16);
  if (!v17) {
    PhoneCallNLIntent.hasVoiceMail()();
  }
  OUTLINED_FUNCTION_57_12(v16);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

  uint64_t v13 = v17;
  char v14 = v7;
  Swift::String_optional v15 = v6;
LABEL_8:
  result.lastHintTimestamp = v15;
  result.hintCount = v14;
  result.count = v13;
  return result;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v2 & 0xC000000000000001LL) == 0, v2);
  if ((v2 & 0xC000000000000001LL) != 0) {
    OUTLINED_FUNCTION_29_7();
  }
  else {
    Swift::String_optional v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_46_7(v4, "callRecordType");
  OUTLINED_FUNCTION_51_9();
LABEL_10:
  OUTLINED_FUNCTION_2();
  return result;
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = a4;
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  uint64_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    Swift::String_optional v15 = swift_slowAlloc(32LL, -1LL);
    uint64_t v24 = v15;
    *(_DWORD *)char v14 = 136315138;
    uint64_t v16 = swift_getObjectType(v10);
    uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a5 + 8) + 8LL) + 8LL))(v16);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
    uint64_t v18 = String.init<A>(describing:)(&v23, v17);
    uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v14 + 4);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v11, v13, "#ContactResolution Emergency contact conversion: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {
  }

  return OS_dispatch_semaphore.signal()();
}

  OUTLINED_FUNCTION_62();
LABEL_6:
  uint64_t v10 = [a2 contactIdentifier];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    char v14 = v13;
  }

  else
  {
    uint64_t v12 = 0LL;
    char v14 = 0LL;
  }

  LOBYTE(v12) = specialized Optional<A>.isNilOrEmpty.getter(v12, v14);
  OUTLINED_FUNCTION_62();
  Swift::String_optional v15 = &unk_42A000;
  if ((v12 & 1) == 0)
  {
    uint64_t v16 = a2;
    uint64_t v17 = OUTLINED_FUNCTION_6_1();
    uint64_t v12 = OUTLINED_FUNCTION_81_24(v17);
    char v19 = v18;
    OUTLINED_FUNCTION_50();
    if ((v19 & 1) == 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      Swift::String_optional v20 = OUTLINED_FUNCTION_15_1();
      uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
      unint64_t v22 = v16;
      uint64_t v23 = (os_log_s *)v21;
      Logger.logObject.getter(v22);
      uint64_t v24 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        id v26 = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v66 = v26;
        *(_DWORD *)uint64_t v25 = 136315138;
        BOOL v68 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v22);
        v69[0] = v27;
        os_log_type_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
        uint64_t v29 = String.init<A>(describing:)(&v68, v28);
        BOOL v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v25 + 4);

        Swift::String_optional v15 = (void *)&unk_42A000;
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0( &dword_0,  v23,  v24,  "#CallingIntentConfirmationFlowStrategy updateForConfirmedContact: Found confirmed contact with contactId=%s wh o is now confirmed",  v25);
        OUTLINED_FUNCTION_17_0(v26);
        OUTLINED_FUNCTION_0_2(v26);
        OUTLINED_FUNCTION_0_2((uint64_t)v25);

        Swift::String_optional v7 = v70;
      }

      else
      {
      }

      os_signpost_id_t v47 = v22;
      Swift::String_optional result = OUTLINED_FUNCTION_90_22();
      uint64_t v70 = v7;
      if (!(_DWORD)result || v7 < 0 || (v7 & 0x4000000000000000LL) != 0)
      {
        Swift::String_optional result = specialized _ArrayBuffer._consumeAndCreateNew()(v7);
        Swift::String_optional v7 = result;
        uint64_t v70 = result;
      }

      if ((v12 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (v12 < *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8LL)))
      {
        unint64_t v36 = (v7 & 0xFFFFFFFFFFFFFF8LL) + 8 * v12;
        goto LABEL_43;
      }

      __break(1u);
      return result;
    }
  }

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v63 = v7;
    }
    else {
      uint64_t v63 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v23 = (os_log_s *)_CocoaArrayWrapper.endIndex.getter(v63);
    OUTLINED_FUNCTION_50();
  }

  else
  {
    uint64_t v23 = *(os_log_s **)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL));
  }

  if ((uint64_t)v23 <= a1)
  {
    if (one-time initialization token for siriPhone == -1)
    {
LABEL_30:
      uint64_t v37 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v37, (uint64_t)static Logger.siriPhone);
      unint64_t v38 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v38))
      {
        uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl( &dword_0,  v23,  (os_log_type_t)v12,  "#CallingIntentConfirmationFlowStrategy updateForConfirmedContact: Adding confirmed contact to the contacts",  v39,  2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v39);
      }

      uint64_t v40 = a2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      uint64_t v42 = *(void *)((char *)&dword_10 + (v70 & 0xFFFFFFFFFFFFFF8LL));
      uint64_t v41 = *(void *)((char *)&dword_18 + (v70 & 0xFFFFFFFFFFFFFF8LL));
      if (v42 >= v41 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1LL);
      }
      uint64_t v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
      goto LABEL_44;
    }

uint64_t protocol witness for SiriKitFlowFactoryProtocol.makeLocationAccessGuardFlow() in conformance SiriKitFlowFactory()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184LL))();
}

uint64_t PhoneCallContactIntentNode.contactId.getter(void *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 != -1LL) {
    OUTLINED_FUNCTION_52_31((uint64_t)a1, a2, a3);
  }
  type metadata accessor for PhoneCallContactIntentNode(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallContactIntentNode and conformance PhoneCallContactIntentNode,  type metadata accessor for PhoneCallContactIntentNode);
  OUTLINED_FUNCTION_28_60(v3, &v5);
  return v5;
}

uint64_t PhoneCallContactIntentNode.contactId.getter()
{
  return PhoneCallContactIntentNode.contactId.getter( &one-time initialization token for phoneCallContactIdNode,  (uint64_t)&static PhoneCallContactOntologyNode.phoneCallContactIdNode,  (uint64_t)one-time initialization function for phoneCallContactIdNode);
}

id @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:relationship:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v11 = v10;
  uint64_t v17 = OUTLINED_FUNCTION_30_12();
  Class isa = 0LL;
  if (__swift_getEnumTagSinglePayload(a2, 1LL, v17) != 1)
  {
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8LL))(a2, v17);
  }

  if (a4)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_87_0();
  }

  else
  {
    NSString v19 = 0LL;
  }

  if (a7)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_23_5();
  }

  else
  {
    NSString v20 = 0LL;
  }

  if (a9)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_87_0();
  }

  else
  {
    NSString v21 = 0LL;
  }

  id v22 = [v11 initWithPersonHandle:a1 nameComponents:isa displayName:v19 image:a5 contactIdentifier:v20 customIdentifier:v21 relationship:a10];

  return v22;
}

void key path getter for INAddCallParticipantIntentExport.participants : INAddCallParticipantIntentExport( uint64_t a1)
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_43_27(a1);
  id v4 = [v2 *v3];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = OUTLINED_FUNCTION_24_43();
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);
  }

  else
  {
    uint64_t v7 = 0LL;
  }

  uint64_t *v1 = v7;
}

void key path setter for INAddCallParticipantIntentExport.participants : INAddCallParticipantIntentExport( void *a1, void **a2, uint64_t a3, uint64_t a4, unint64_t *a5, void *a6, SEL *a7)
{
  uint64_t v8 = *a2;
  if (*a1)
  {
    type metadata accessor for CNContactStore(0LL, a5, a6);
    v9.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  }

  else
  {
    v9.super.Class isa = 0LL;
  }

  Class isa = v9.super.isa;
  [v8 *a7];
}

void type metadata accessor for INCallDestinationType(uint64_t a1)
{
}

uint64_t closure #3 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  NSArray v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallDestinationType(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A040);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  NSArray v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallDestinationType(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A1E8);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

void partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:)( void *a1@<X0>, uint64_t *a2@<X8>)
{
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasVoiceMail()()
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 - 8);
  uint64_t v4 = __chkstk_darwin();
  int v6 = OUTLINED_FUNCTION_113_4(v4, v5);
  OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  if (v6 == 6)
  {
    OUTLINED_FUNCTION_33_28(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120));
    OUTLINED_FUNCTION_220();
  }

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_16();
  return result;
}

void PhoneCallNLv3Intent.voiceMailVerb.getter()
{
}

uint64_t storeEnumTagSinglePayload for VoiceMail.VoiceMailVerb(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_28304 + 4 * byte_326544[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_28338 + 4 * byte_32653F[v4]))();
}

uint64_t sub_28338(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_28340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x28348LL);
  }
  return result;
}

uint64_t sub_28354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2835CLL);
  }
  *(_BYTE *)Swift::Bool result = a2 + 5;
  return result;
}

uint64_t sub_28360(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_28368(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

id OUTLINED_FUNCTION_69_0()
{
  return *(id *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_70@<X0>(uint64_t a1@<X8>)
{
  if (v1 >= 0) {
    return _CocoaArrayWrapper.endIndex.getter(a1);
  }
  else {
    return _CocoaArrayWrapper.endIndex.getter(v1);
  }
}

uint64_t OUTLINED_FUNCTION_161(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

void OUTLINED_FUNCTION_161_0(uint64_t a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_109(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_161_3(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0x656D614E707061LL;
  v2[11] = 0xE700000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_255(char a1@<W8>)
{
  *(void *)(v3 + 376) = (v1 - 32) | 0x8000000000000000LL;
  *(void *)(v3 + 408) = v2;
  *(_BYTE *)(v3 + 384) = a1;
}

uint64_t OUTLINED_FUNCTION_6_6(unint64_t a1)
{
  return specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 2);
}

uint64_t OUTLINED_FUNCTION_161_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v4, a4);
}

Swift::Bool __swiftcall PhoneCallNLIntent.isRedial()()
{
  if (!v8)
  {
    uint64_t v6 = PhoneCallVerb.rawValue.getter(v5);
    BOOL v8 = v6 == 0x6C6169646572LL && v7 == 0xE600000000000000LL;
    if (v8)
    {
      OUTLINED_FUNCTION_122_3();
    }

    else
    {
      char v9 = OUTLINED_FUNCTION_49_2(v6, v7, 0x6C6169646572LL, 0xE600000000000000LL);
      OUTLINED_FUNCTION_4_1();
      if ((v9 & 1) == 0) {
        goto LABEL_19;
      }
    }

    OUTLINED_FUNCTION_72_8();
    Swift::Bool v10 = PhoneCallNLIntent.hasAnyContactReference()();
    OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    if (v10)
    {
      OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }

    else
    {
      uint64_t v11 = OUTLINED_FUNCTION_39_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
      OUTLINED_FUNCTION_72_11(v11);
      OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      if (v0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v12 = OUTLINED_FUNCTION_15_1();
        uint64_t v13 = (void *)OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
        os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
        if (OUTLINED_FUNCTION_10(v15))
        {
          uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
          *uint64_t v16 = 0;
          OUTLINED_FUNCTION_2_2( &dword_0,  v17,  v18,  "#PhoneCallNLIntent Not a redial request as utterance contains either number or contact name");
          OUTLINED_FUNCTION_0_2((uint64_t)v16);
        }
      }
    }
  }

uint64_t OUTLINED_FUNCTION_8_5()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_198@<X0>(uint64_t a1@<X8>)
{
  return outlined init with take of SpeakableString?(v1, v2 + a1);
}

uint64_t OUTLINED_FUNCTION_20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = (a2 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_85()
{
  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_270@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 128) = v2;
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000LL;
  return 0LL;
}

void OUTLINED_FUNCTION_198_0()
{
}

uint64_t OUTLINED_FUNCTION_198_1()
{
  return swift_retain(*(void *)(v0 - 176));
}

Swift::Bool __swiftcall PhoneCallNLIntent.isCallBack()()
{
  uint64_t v45 = v3;
  uint64_t v46 = v4;
  unsigned __int8 v5 = v0;
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_266();
  __chkstk_darwin();
  OUTLINED_FUNCTION_66_9();
  uint64_t v42 = *(void (**)(void))(v12 + 104);
  v42();
  OUTLINED_FUNCTION_22_25();
  if (v15)
  {
    char v14 = 0;
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_97_5(v13);
    if (v15) {
      BOOL v18 = v17 == 0xE400000000000000LL;
    }
    else {
      BOOL v18 = 0;
    }
    if (v18)
    {
      OUTLINED_FUNCTION_58_10();
      char v14 = 1;
    }

    else
    {
      char v14 = OUTLINED_FUNCTION_49_2(v16, v17, 1819042147LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_70_2();
    }
  }

  uint64_t v19 = *(void *)(v9 + 16);
  OUTLINED_FUNCTION_164_2(v1);
  if ((v14 & 1) != 0)
  {
    uint64_t v41[3] = v9;
    uint64_t v20 = OUTLINED_FUNCTION_39_1(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40));
    if (v20) {
      uint64_t v21 = (void *)v20;
    }
    else {
      uint64_t v21 = _swiftEmptyArrayStorage;
    }
    if (v21[2])
    {
      v41[0] = v19;
      v41[1] = v2;
      void v41[2] = v11;
      OUTLINED_FUNCTION_6_3();
      v41[4] = "Range";
      void v41[5] = 0xE900000000000065LL;
      OUTLINED_FUNCTION_25_31();
      __asm { BR              X9 }
    }

    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_56_11(v1);
  uint64_t v23 = OUTLINED_FUNCTION_72_8();
  ((void (*)(uint64_t))v42)(v23);
  OUTLINED_FUNCTION_22_25();
  if (!v15)
  {
    uint64_t v26 = OUTLINED_FUNCTION_267(v24);
    if (v25) {
      BOOL v28 = v27 == 0xE90000000000006BLL;
    }
    else {
      BOOL v28 = 0;
    }
    if (v28)
    {
      OUTLINED_FUNCTION_229(107LL);
    }

    else
    {
      char v29 = OUTLINED_FUNCTION_49_2(v26, v27, 0x636162206C6C6163LL, 0xE90000000000006BLL);
      OUTLINED_FUNCTION_62();
      if ((v29 & 1) == 0) {
        goto LABEL_42;
      }
    }

    Swift::Bool v30 = PhoneCallNLIntent.hasAnyContactReference()();
    OUTLINED_FUNCTION_164_2(v2);
    if (v30)
    {
      OUTLINED_FUNCTION_56_11(v2);
    }

    else
    {
      uint64_t v31 = OUTLINED_FUNCTION_39_1(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24));
      OUTLINED_FUNCTION_72_11(v31);
      OUTLINED_FUNCTION_56_11(v2);
      if (v2)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v32 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v32, (uint64_t)static Logger.siriPhone);
        os_log_type_t v33 = OUTLINED_FUNCTION_234();
        if (os_log_type_enabled(v5, v33))
        {
          uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
          *(_WORD *)uint64_t v34 = 0;
          _os_log_impl( &dword_0,  v5,  v33,  "#PhoneCallNLIntent Not a call back request as utterance contains either number or contact name",  v34,  2u);
          OUTLINED_FUNCTION_0_2((uint64_t)v34);
        }

        goto LABEL_41;
      }
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    uint64_t v36 = OUTLINED_FUNCTION_164_2((uint64_t)v11);
    Logger.logObject.getter(v36);
    os_log_type_t v37 = OUTLINED_FUNCTION_234();
    if (os_log_type_enabled(v5, v37))
    {
      unint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_7_0(8LL);
      *(_DWORD *)unint64_t v38 = 67109120;
      uint64_t v39 = OUTLINED_FUNCTION_39_1(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24));
      OUTLINED_FUNCTION_72_11(v39);
      OUTLINED_FUNCTION_56_11((uint64_t)v11);
      BOOL v43 = v11 == 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v38 + 4, v38 + 8);
      _os_log_impl(&dword_0, v5, v37, "PhoneCallNLIntent contacts empty: %{BOOL}d", v38, 8u);
      OUTLINED_FUNCTION_0_2((uint64_t)v38);
    }

    else
    {
      OUTLINED_FUNCTION_56_11((uint64_t)v11);
    }

uint64_t PhoneCallNLv3Intent.phoneCallAttributes.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_99_2();
  return IntentNodeTraversable.values<A>(forNode:)(v0);
}

void type metadata accessor for INPreferredCallProvider(uint64_t a1)
{
}

uint64_t closure #4 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  unsigned __int8 v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INPreferredCallProvider(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A008);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  unsigned __int8 v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INPreferredCallProvider(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A1C0);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)partial apply()
{
  return _s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo011INPreferredE8ProviderVRs_rlE11transformer13sharedGlobals3app14previousIntentACyAdE_pAGGAD06SharedN9Providing_p_0A13AppResolution0T0CSgSo8INIntentCSgtFZAgdE_pcfU_TA_0();
}

Swift::Bool __swiftcall PhoneCallNLIntent.isRedialOrCallBack()()
{
  return result;
}

Swift::Bool __swiftcall App.isFaceTime()()
{
  uint64_t v0 = App.appIdentifier.getter();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t inited = swift_initStackObject(v4, &v9);
    *(_OWORD *)(inited + 16) = xmmword_31D880;
    *(void *)(inited + 32) = 0xD000000000000012LL;
    *(void *)(inited + 40) = 0x80000000003479B0LL;
    if (one-time initialization token for macFaceTimeBundleId != -1) {
      swift_once( &one-time initialization token for macFaceTimeBundleId,  one-time initialization function for macFaceTimeBundleId);
    }
    uint64_t v6 = unk_477F50;
    *(void *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
    *(void *)(inited + 56) = v6;
    swift_bridgeObjectRetain();
    specialized Set.init(_nonEmptyArrayLiteral:)();
    specialized Set.contains(_:)(v2, v3, v7);
    OUTLINED_FUNCTION_27_2();
    swift_bridgeObjectRelease();
  }

  else
  {
    LOBYTE(v2) = 0;
  }

  return v2 & 1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_57_1()
{
  return type metadata accessor for ResponseFactory(0LL);
}

uint64_t OUTLINED_FUNCTION_25_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_beginAccess(a1, a2, a3, 0LL);
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return type metadata accessor for SpeakableString(0LL);
}

uint64_t OUTLINED_FUNCTION_40@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

double OUTLINED_FUNCTION_57_2()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return swift_task_dealloc(v0);
}

void *OUTLINED_FUNCTION_49_0(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return swift_retain(v0);
}

__n128 OUTLINED_FUNCTION_57_3()
{
  __int128 v2 = *(_OWORD *)(v1 - 120);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)(v1 - 136);
  *(_OWORD *)(v0 + 16) = v2;
  __n128 result = *(__n128 *)(v1 - 104);
  *(__n128 *)(v0 + 32) = result;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_44_2(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, v2);
}

  ;
}

void OUTLINED_FUNCTION_57_5( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

uint64_t OUTLINED_FUNCTION_57_6()
{
  return swift_task_alloc(v0);
}

uint64_t OUTLINED_FUNCTION_57_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_57_8(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_57_9()
{
  return dispatch thunk of DeviceState.isAppleTV.getter(v0, v1);
}

void OUTLINED_FUNCTION_57_10( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t OUTLINED_FUNCTION_57_11()
{
  return swift_task_dealloc(*(void *)(v0 + 120));
}

uint64_t OUTLINED_FUNCTION_57_12(uint64_t a1)
{
  return v2(a1, v1);
}

void OUTLINED_FUNCTION_57_13(id a1)
{
}

uint64_t OUTLINED_FUNCTION_27_4(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_205(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

void OUTLINED_FUNCTION_57_14(uint64_t a1, uint64_t a2)
{
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_57_17(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

void OUTLINED_FUNCTION_57_18()
{
}

void OUTLINED_FUNCTION_57_19()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_57_21( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a12 + 8))(v13, a11);
}

void OUTLINED_FUNCTION_57_22(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_57_24()
{
  return SpanProperty.key.getter();
}

uint64_t OUTLINED_FUNCTION_57_25()
{
  return outlined init with take of ButtonConfigurationModel(*(void *)(v0 + 320), *(void *)(v0 + 264));
}

uint64_t OUTLINED_FUNCTION_57_26()
{
  *(void *)(v1 + 24) = v0;
  return type metadata accessor for SimpleOutputFlowAsync(0LL);
}

uint64_t OUTLINED_FUNCTION_57_27()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(v0, v2 - 81, *(void *)(v2 - 120), v0, v1);
}

uint64_t OUTLINED_FUNCTION_57_28(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_57_29(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2 - 216, a2);
}

BOOL OUTLINED_FUNCTION_57_30(uint64_t a1, os_log_type_t a2)
{
  return os_log_type_enabled(v2, a2);
}

uint64_t OUTLINED_FUNCTION_57_31(uint64_t a1, uint64_t a2)
{
  return _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_57_32()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v0 - 8) + 88LL))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_57_33()
{
  return swift_arrayDestroy(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_57_34(void *a1)
{
  return dispatch thunk of DeviceState.siriLocale.getter(v1, v2);
}

Swift::Bool __swiftcall PhoneCallNLIntent.isFirstPartyOrDefaultAppRequest()()
{
  if (v3)
  {
    type metadata accessor for App(0LL);
    uint64_t v4 = OUTLINED_FUNCTION_245();
    uint64_t v6 = App.__allocating_init(appIdentifier:)(v4, v5);
    App.isFirstParty()();
    swift_release(v6);
  }

  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t specialized UserDefaultsSetting.wrappedValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (one-time initialization token for userDefaults != -1) {
    swift_once(&one-time initialization token for userDefaults, one-time initialization function for userDefaults);
  }
  uint64_t v3 = (void *)static PhoneCallFeatureFlags.userDefaults;
  if (static PhoneCallFeatureFlags.userDefaults)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 valueForKey:v4];

    if (v5)
    {
      _bridgeAnyObjectToAny(_:)(v8, v5);
      swift_unknownObjectRelease(v5);
    }

    else
    {
      memset(v8, 0, sizeof(v8));
    }

    outlined init with take of Any?((uint64_t)v8, (uint64_t)v9);
  }

  else
  {
    memset(v9, 0, sizeof(v9));
  }

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  else {
    return 0LL;
  }
}

uint64_t outlined init with take of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void type metadata accessor for INAudioCallTTYType(uint64_t a1)
{
}

uint64_t closure #5 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAudioCallTTYType>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INAudioCallTTYType(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A198);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordType>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallRecordType(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_339FC8);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

void type metadata accessor for INCallCapability(uint64_t a1)
{
}

uint64_t closure #6 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallCapability>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INCallCapability(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A170);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAudioCallTTYType>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  type metadata accessor for INAudioCallTTYType(0LL);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_339F80);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartAudioCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

void DeviceState.isAnyCar.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
}

{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  void (*v24)(uint64_t);
  uint64_t (*v25)(uint64_t);
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(uint64_t);
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  OUTLINED_FUNCTION_29_2();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  OUTLINED_FUNCTION_76_14();
  __chkstk_darwin(v27);
  OUTLINED_FUNCTION_39_2();
  char v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&a9 - v30;
  os_log_type_t v33 = v32(v29);
  OUTLINED_FUNCTION_32_51((uint64_t)v31);
  if ((v33 & 1) != 0)
  {
    uint64_t v34 = 1;
  }

  else
  {
    uint64_t v35 = OUTLINED_FUNCTION_258();
    uint64_t v34 = v26(v35);
  }

  OUTLINED_FUNCTION_31_22((uint64_t)v31);
  OUTLINED_FUNCTION_32_51(v20);
  if ((v34 & 1) == 0)
  {
    uint64_t v36 = OUTLINED_FUNCTION_258();
    v24(v36);
  }

  OUTLINED_FUNCTION_31_22(v20);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

uint64_t partial apply for closure #7 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #7 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

uint64_t closure #7 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordFilter?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_339E38);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A138);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

id closure #1 in static Transformer<>.transformer(device:callCapability:participants:)@<X0>( void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  Swift::Bool v8 = PhoneCallNLIntent.isRedial()();
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v27);
  if (v8)
  {
    __swift_destroy_boxed_opaque_existential_1(v27);
    goto LABEL_4;
  }

  OUTLINED_FUNCTION_0_109(v27);
  Swift::Bool v9 = PhoneCallNLIntent.isCallBack()();
  __swift_destroy_boxed_opaque_existential_1(v27);
  if (v9)
  {
LABEL_4:
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    v27[6] = a3;
    if (v12)
    {
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        uint64_t v14 = 0LL;
        uint64_t v15 = (PhoneCallFlowDelegatePlugin::PhoneCallAttribute *)(v12 + 32);
        do
        {
          PhoneCallFlowDelegatePlugin::PhoneCallAttribute v16 = *v15++;
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          INCallRecordTypeOptions_optional v28 = PhoneCallNLIntent.getCallRecordTypeOption(attr:)(v16);
          if ((v28.value & ~v14) != 0) {
            INCallRecordTypeOptions value = v28.value;
          }
          else {
            INCallRecordTypeOptions value = 0LL;
          }
          if (v28.is_nil) {
            INCallRecordTypeOptions value = 0LL;
          }
          v14 |= value;
          --v13;
        }

        while (v13);
      }

      else
      {
        uint64_t v14 = 0LL;
      }

      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v14 = 0LL;
    }

    uint64_t v19 = a1[3];
    uint64_t v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    uint64_t v21 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20) + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v26);
    if (v21 == 1)
    {
      __swift_project_boxed_opaque_existential_1(v26, v26[3]);
      Swift::Bool v22 = PhoneCallNLIntent.hasAnyContactReference()();
      __swift_destroy_boxed_opaque_existential_1(v26);
      if (v22)
      {
        id v23 = objc_allocWithZone(&OBJC_CLASS___INCallRecordFilter);
        uint64_t v24 = 0LL;
LABEL_23:
        id result = @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:)(v24, v14, a2);
        goto LABEL_24;
      }
    }

    else
    {
      __swift_destroy_boxed_opaque_existential_1(v26);
    }

    id v25 = objc_allocWithZone(&OBJC_CLASS___INCallRecordFilter);
    uint64_t v24 = swift_bridgeObjectRetain();
    goto LABEL_23;
  }

  id result = 0LL;
LABEL_24:
  *a4 = result;
  return result;
}

id key path getter for INStartCallIntentExport.callRecordFilter : INStartCallIntentExport@<X0>( id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 callRecordFilter];
  *a2 = result;
  return result;
}

uint64_t partial apply for closure #8 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)()
{
  return closure #8 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(*(void *)(v0 + 16));
}

uint64_t closure #8 in closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reducer<PhoneCallNLIntent, INStartCallIntentExport>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  Swift::Bool v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath(&unk_33A0C0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  uint64_t v14 = -- infix<A, B, C>(_:_:)(v5, KeyPath, a1, v13);
  swift_release(KeyPath);
  uint64_t v15 = swift_getKeyPath(&unk_33A0F0);
  --> infix<A, B, C, D>(_:_:)(v14, v5, v15);
  swift_release(v14);
  swift_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntentExport);
  static ReducerBuilder.buildExpression(_:)(v9, v16, v17);
  BOOL v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Reducer<PhoneCallNLIntent, INStartCallIntentExport>>);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = swift_allocObject(v19, v21 + *(void *)(v7 + 72), v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v22 + v21, v11, v6);
  static ReducerBuilder.buildBlock(_:)(v22, v16, v17);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

uint64_t key path getter for PhoneCallNLIntent.smsGroups : PhoneCallNLIntent@<X0>( void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 136))(v3, v4);
  *a2 = result;
  return result;
}

void closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
}

void closure #1 in static Transformer<>.transformer(device:groupResolver:)( uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = *a1;
  id v5 = _swiftEmptyArrayStorage;
  unint64_t v70 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v9 = v4 + 32;
    swift_bridgeObjectRetain();
    do
    {
      outlined init with copy of SignalProviding(v9, (uint64_t)v67);
      uint64_t v10 = v69;
      __swift_project_boxed_opaque_existential_1(v67, v68);
      uint64_t v11 = OUTLINED_FUNCTION_0_40(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16));
      if (v12)
      {
        uint64_t v13 = v11;
        unint64_t v14 = v12;
        swift_bridgeObjectRelease();
        uint64_t v15 = HIBYTE(v14) & 0xF;
        if ((v14 & 0x2000000000000000LL) == 0) {
          uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
        }
        if (v15) {
          goto LABEL_9;
        }
      }

      uint64_t v16 = v69;
      __swift_project_boxed_opaque_existential_1(v67, v68);
      uint64_t v17 = OUTLINED_FUNCTION_0_40(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
      if (!v18)
      {
LABEL_9:
        uint64_t v20 = v69;
        __swift_project_boxed_opaque_existential_1(v67, v68);
        uint64_t v21 = OUTLINED_FUNCTION_0_40(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
        uint64_t v23 = v22;
        uint64_t v24 = v68;
        uint64_t v25 = v69;
        __swift_project_boxed_opaque_existential_1(v67, v68);
        uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
        uint64_t v28 = v27;
        id v29 = objc_allocWithZone(&OBJC_CLASS___INCallGroup);
        @nonobjc INCallGroup.init(groupName:groupId:)(v21, v23, v26, v28);
        uint64_t v31 = v30;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        unint64_t v33 = *(void *)((char *)&dword_10 + (v70 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v32 = *(void *)((char *)&dword_18 + (v70 & 0xFFFFFFFFFFFFFF8LL));
        if (v33 >= v32 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1LL);
        }
        uint64_t v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
        specialized Array._endMutation()(v34, v35, v36, v37);
      }

      else
      {
        uint64_t v19 = static Transformer<>.resolveGroupNameIdentifier(groupName:device:groupResolver:)(v17, v18, a2, a3);
        swift_bridgeObjectRelease();
        specialized Array.append<A>(contentsOf:)((uint64_t)v19);
      }

      __swift_destroy_boxed_opaque_existential_1(v67);
      v9 += 40LL;
      --v6;
    }

    while (v6);
    swift_bridgeObjectRelease();
    id v5 = (void *)v70;
  }

  uint64_t v38 = static Transformer<>.normalizeFirstPartyMessagesGroups(_:)((uint64_t)v5);
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v39 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v39, (uint64_t)static Logger.siriPhone);
  uint64_t v40 = swift_bridgeObjectRetain_n(v38, 2LL);
  uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc(22LL, -1LL);
    uint64_t v44 = swift_slowAlloc(64LL, -1LL);
    v67[0] = v44;
    *(_DWORD *)uint64_t v43 = 136315394;
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>.Type);
    uint64_t v46 = String.init<A>(describing:)(&v66, v45);
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v67);
    OUTLINED_FUNCTION_1_42(v66, v48, v49, v43 + 12, v50, v51, v52, v53);
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    unint64_t v54 = type metadata accessor for INCallGroup();
    uint64_t v55 = swift_bridgeObjectRetain();
    uint64_t v56 = Array.description.getter(v55, v54);
    unint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v58, v67);
    OUTLINED_FUNCTION_1_42(v66, v59, v60, v43 + 22, v61, v62, v63, v64);
    OUTLINED_FUNCTION_28_16();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v41, v42, "#%s --> %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy(v44, 2LL);
    OUTLINED_FUNCTION_0_2(v44);
    OUTLINED_FUNCTION_0_2(v43);
  }

  else
  {

    OUTLINED_FUNCTION_28_16();
  }

  *a4 = v38;
}

uint64_t static Transformer<>.normalizeFirstPartyMessagesGroups(_:)(uint64_t a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_324648);
  uint64_t v25 = &_swiftEmptySetSingleton;
  swift_retain();
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = specialized Sequence.filter(_:)(v3, (uint64_t)&v25, KeyPath);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  id v5 = static Transformer<>.groupFirstPartyChatsByIdentifier(_:)((uint64_t)v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = specialized _NativeDictionary.filter(_:)((uint64_t)v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = specialized Set.init<A>(_:)(v6);
  swift_bridgeObjectRetain();
  uint64_t v8 = (uint64_t)specialized Sequence.compactMap<A>(_:)(a1, (uint64_t)v7);
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v10 = swift_bridgeObjectRetain_n(v8, 2LL);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    unint64_t v14 = (void *)swift_slowAlloc(32LL, -1LL);
    uint64_t v25 = v14;
    *(_DWORD *)uint64_t v13 = 136315650;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>.Type);
    uint64_t v16 = String.init<A>(describing:)(&v23, v15);
    uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, (uint64_t *)&v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0) {
        uint64_t v21 = a1;
      }
      else {
        uint64_t v21 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v18 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    }

    swift_bridgeObjectRelease();
    uint64_t v23 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 14, v13 + 22);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2048;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0) {
        uint64_t v22 = v8;
      }
      else {
        uint64_t v22 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v19 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
    }

    swift_bridgeObjectRelease();
    uint64_t v23 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 24, v13 + 32);
    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v11,  v12,  "#%s normalizeFirstPartyMessagesGroups: Before deduping: %ld, After deduping: %ld",  (uint8_t *)v13,  0x20u);
    swift_arrayDestroy(v14, 1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease_n(v8, 2LL);
  }

  return v8;
}

void *specialized Sequence.filter(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v28 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
LABEL_3:
  uint64_t v25 = v6;
  if (v6)
  {
    unint64_t v7 = 0LL;
    unint64_t v26 = v5 & 0xC000000000000001LL;
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v9 = v6;
    while (1)
    {
      if (v26)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      }

      else
      {
        if (v7 >= *(void *)(v8 + 16))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          if (v5 < 0) {
            uint64_t v24 = v5;
          }
          else {
            uint64_t v24 = v5 & 0xFFFFFFFFFFFFFF8LL;
          }
          uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v24);
          goto LABEL_3;
        }

        id v10 = *(id *)(v5 + 8 * v7 + 32);
      }

      uint64_t v11 = v10;
      unint64_t v12 = v7 + 1;
      if (__OFADD__(v7, 1LL)) {
        goto LABEL_18;
      }
      id v27 = v10;
      swift_getAtKeyPath(&v27, a3);
      specialized Set._Variant.insert(_:)();
      char v14 = v13;
      uint64_t v15 = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        uint64_t v16 = a2;
        uint64_t v17 = v5;
        uint64_t v18 = a3;
        uint64_t v19 = v28[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        uint64_t v20 = v19;
        a3 = v18;
        uint64_t v5 = v17;
        a2 = v16;
        uint64_t v9 = v25;
        uint64_t v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v11);
        specialized ContiguousArray._endMutation()(v21);
      }

      else
      {
      }

      ++v7;
      if (v12 == v9)
      {
        uint64_t v22 = v28;
        goto LABEL_16;
      }
    }
  }

  uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_16:
  swift_release(a3);
  swift_bridgeObjectRelease();
  return v22;
}

{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v5 = a1;
  uint64_t v28 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
LABEL_3:
  uint64_t v25 = v6;
  if (v6)
  {
    unint64_t v7 = 0LL;
    unint64_t v26 = v5 & 0xC000000000000001LL;
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v9 = v6;
    while (1)
    {
      if (v26)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      }

      else
      {
        if (v7 >= *(void *)(v8 + 16))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          if (v5 < 0) {
            uint64_t v24 = v5;
          }
          else {
            uint64_t v24 = v5 & 0xFFFFFFFFFFFFFF8LL;
          }
          uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v24);
          goto LABEL_3;
        }

        id v10 = *(id *)(v5 + 8 * v7 + 32);
      }

      uint64_t v11 = v10;
      unint64_t v12 = v7 + 1;
      if (__OFADD__(v7, 1LL)) {
        goto LABEL_18;
      }
      id v27 = v10;
      swift_getAtKeyPath(&v27, a3);
      specialized Set._Variant.insert(_:)();
      char v14 = v13;
      uint64_t v15 = swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        uint64_t v16 = a2;
        uint64_t v17 = v5;
        uint64_t v18 = a3;
        uint64_t v19 = v28[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        uint64_t v20 = v19;
        a3 = v18;
        uint64_t v5 = v17;
        a2 = v16;
        uint64_t v9 = v25;
        uint64_t v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v11);
        specialized ContiguousArray._endMutation()(v21);
      }

      else
      {
      }

      ++v7;
      if (v12 == v9)
      {
        uint64_t v22 = v28;
        goto LABEL_16;
      }
    }
  }

  uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_16:
  swift_release(a3);
  swift_bridgeObjectRelease();
  return v22;
}

void *static Transformer<>.groupFirstPartyChatsByIdentifier(_:)(uint64_t a1)
{
  uint64_t v48 = type metadata accessor for UUID(0LL);
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  unint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = &_swiftEmptyDictionarySingleton;
  if ((unint64_t)a1 >> 62)
  {
LABEL_28:
    if (a1 < 0) {
      uint64_t v42 = a1;
    }
    else {
      uint64_t v42 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v42);
    if (v4) {
      goto LABEL_3;
    }
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v51 = a1 & 0xC000000000000001LL;
      uint64_t v45 = &v59;
      uint64_t v5 = &_swiftEmptyDictionarySingleton;
      uint64_t v6 = 4LL;
      __int128 v46 = xmmword_31FE60;
      uint64_t v50 = a1;
      uint64_t v49 = v4;
      while (1)
      {
        if (v51) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v6);
        }
        id v8 = v7;
        a1 = v6 - 3;
        if (__OFADD__(v6 - 4, 1LL))
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }

        uint64_t PartyChat = outlined bridged method (pb) of @objc INCallGroup.groupId.getter(v7);
        if (v10
          && (FirstPartyChatGUID.init(_:)(PartyChat, v10, v54),
              uint64_t PartyChat = outlined init with take of FirstPartyChatGUID?((uint64_t)v54, (uint64_t)v55),
              *((void *)&v55[0] + 1)))
        {
          __int128 v58 = v55[0];
          __int128 v59 = v55[1];
          uint64_t v12 = v56;
          uint64_t v11 = v57;
          __int128 v60 = v55[0];
          swift_bridgeObjectRetain();
          outlined release of String?((uint64_t)&v60);
          __int128 v61 = *v45;
          outlined release of String?((uint64_t)&v61);
          swift_bridgeObjectRelease();
        }

        else
        {
          uint64_t v13 = UUID.init()(PartyChat);
          uint64_t v12 = UUID.uuidString.getter(v13);
          uint64_t v11 = v14;
          (*(void (**)(char *, uint64_t))(v47 + 8))(v3, v48);
        }

        unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(v12, v11);
        uint64_t v17 = v5[2];
        BOOL v18 = (v15 & 1) == 0;
        uint64_t v19 = v17 + v18;
        if (__OFADD__(v17, v18)) {
          goto LABEL_26;
        }
        char v20 = v15;
        if (v5[3] < v19)
        {
          specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v19, 1LL);
          uint64_t v5 = v53;
          unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)(v12, v11);
          if ((v20 & 1) != (v22 & 1))
          {
            uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
            __break(1u);
            return result;
          }

          unint64_t v16 = v21;
        }

        if ((v20 & 1) != 0)
        {
          uint64_t v23 = swift_bridgeObjectRelease();
          uint64_t v24 = (void *)(v5[7] + 8 * v16);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
          unint64_t v26 = *(void *)((char *)&dword_10 + (*v24 & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v25 = *(void *)((char *)&dword_18 + (*v24 & 0xFFFFFFFFFFFFFF8LL));
          if (v26 >= v25 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1LL);
          }
          uint64_t v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v8);
          specialized Array._endMutation()(v27, v28, v29, v30);
        }

        else
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v32 = swift_allocObject(v31, 40LL, 7LL);
          *(_OWORD *)(v32 + 16) = v46;
          *(void *)(v32 + 32) = v8;
          uint64_t v52 = v32;
          specialized Array._endMutation()(v32, v33, v34, v35);
          uint64_t v36 = v52;
          v5[(v16 >> 6) + 8] |= 1LL << v16;
          uint64_t v37 = (uint64_t *)(v5[6] + 16 * v16);
          *uint64_t v37 = v12;
          v37[1] = v11;
          *(void *)(v5[7] + 8 * v16) = v36;
          uint64_t v38 = v5[2];
          BOOL v39 = __OFADD__(v38, 1LL);
          uint64_t v40 = v38 + 1;
          if (v39) {
            goto LABEL_27;
          }
          v5[2] = v40;
        }

        ++v6;
        BOOL v41 = a1 == v49;
        a1 = v50;
        if (v41)
        {
          swift_bridgeObjectRelease();
          return v5;
        }
      }
    }
  }

  swift_bridgeObjectRelease();
  return &_swiftEmptyDictionarySingleton;
}

uint64_t specialized _NativeDictionary.filter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v9 = *(_BYTE *)(a1 + 32);
  unsigned int v10 = v9 & 0x3F;
  unint64_t v11 = (unint64_t)((1LL << v9) + 63) >> 6;
  uint64_t v12 = 8 * v11;
  swift_bridgeObjectRetain_n(a3, 2LL);
  id v13 = a4;
  if (v10 <= 0xD || (swift_stdlib_isStackAllocationSafe(v12, 8LL) & 1) != 0)
  {
    __chkstk_darwin();
    uint64_t v14 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0LL));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, v11, v14);
    swift_bridgeObjectRetain();
    id v15 = v13;
    uint64_t v16 = specialized closure #1 in _NativeDictionary.filter(_:)((uint64_t)v14, v11, a1, a2, a3, v15);
    if (v4) {
      swift_willThrow(v16, v17, v18, v19, v20, v21, v22, v23);
    }
    else {
      a2 = v16;
    }

    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v24 = (void *)swift_slowAlloc(v12, -1LL);
    specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, v11, v24);
    swift_bridgeObjectRetain();
    id v25 = v13;
    a2 = specialized closure #1 in _NativeDictionary.filter(_:)((uint64_t)v24, v11, a1, a2, a3, v25);
    swift_slowDealloc(v24, -1LL, -1LL);

    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease_n(a3, 2LL);
  return a2;
}

uint64_t specialized _NativeDictionary.filter(_:)(uint64_t a1, double a2)
{
  uint64_t v4 = a1;
  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (1LL << v5) + 63;
  uint64_t v8 = v7 >> 6;
  uint64_t v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD || (swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8LL) & 1) != 0)
  {
    __chkstk_darwin();
    unsigned int v10 = (unint64_t *)((char *)&v22 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0LL));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, v8, v10);
    specialized closure #1 in _NativeDictionary.filter(_:)(v10, v8, v4, a2);
    if (v2) {
      swift_willThrow(v11, v12, v13, v14, v15, v16, v17, v18);
    }
    else {
      return v11;
    }
  }

  else
  {
    uint64_t v19 = (unint64_t *)swift_slowAlloc(v9, -1LL);
    specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, v8, v19);
    specialized closure #1 in _NativeDictionary.filter(_:)(v19, v8, v4, a2);
    uint64_t v4 = v20;
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  return v4;
}

uint64_t specialized UnsafeMutablePointer.assign(repeating:count:)(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }

  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }

  return result;
}

void specialized closure #1 in _NativeDictionary.filter(_:)( unint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = 0LL;
  int64_t v6 = 0LL;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v9 = -1LL;
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }

    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1LL))
    {
      __break(1u);
      goto LABEL_26;
    }

    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }

uint64_t specialized closure #1 in _NativeDictionary.filter(_:)( uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v28 = (unint64_t *)result;
  uint64_t v9 = 0LL;
  int64_t v10 = 0LL;
  uint64_t v11 = a3 + 64;
  uint64_t v12 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v13 = -1LL;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & *(void *)(a3 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v16 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v17 = v16 | (v10 << 6);
LABEL_20:
    uint64_t v21 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v17);
    uint64_t result = *v21;
    uint64_t v22 = v21[1];
    if (*v21 != a4 || v22 != a5)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v22, a4, a5, 0LL);
      if ((result & 1) == 0)
      {
        *(unint64_t *)((char *)v28 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v17;
        if (__OFADD__(v9++, 1LL))
        {
          __break(1u);
LABEL_28:
          Swift::Int v25 = specialized _NativeDictionary.extractDictionary(using:count:)(v28, a2, v9, a3);

          swift_bridgeObjectRelease();
          return v25;
        }
      }
    }
  }

  int64_t v18 = v10 + 1;
  if (__OFADD__(v10, 1LL))
  {
    __break(1u);
    goto LABEL_30;
  }

  if (v18 >= v15) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v11 + 8 * v18);
  ++v10;
  if (v19) {
    goto LABEL_19;
  }
  int64_t v10 = v18 + 1;
  if (v18 + 1 >= v15) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v11 + 8 * v10);
  if (v19) {
    goto LABEL_19;
  }
  int64_t v10 = v18 + 2;
  if (v18 + 2 >= v15) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v11 + 8 * v10);
  if (v19)
  {
LABEL_19:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
    goto LABEL_20;
  }

  int64_t v20 = v18 + 3;
  if (v20 >= v15) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v11 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_19;
  }

  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v10 >= v15) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v11 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }

LABEL_30:
  __break(1u);
  return result;
}

        __int128 v46 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a2 + 112))( v60,  ObjectType,  a2);
        *uint64_t v47 = !*v47;
        v46(v60, 0LL);
        uint64_t v48 = swift_unknownObjectRetain(a1);
        uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
        unint64_t v51 = static os_log_type_t.debug.getter(v49, v50);
        if (os_log_type_enabled(v49, v51))
        {
          uint64_t v52 = (uint8_t *)OUTLINED_FUNCTION_7_0(8LL);
          *(_DWORD *)uint64_t v52 = 67109120;
          LOBYTE(v60[0]) = v54(ObjectType, a2) & 1;
          LODWORD(v60[0]) = LOBYTE(v60[0]);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v60, (char *)v60 + 4, v52 + 4);
          swift_unknownObjectRelease(a1);
          _os_log_impl(&dword_0, v49, v51, "#MicrophoneControlFlow microphone is muted: %{BOOL}d", v52, 8u);
          OUTLINED_FUNCTION_0_2((uint64_t)v52);
        }

        else
        {

          swift_unknownObjectRelease(a1);
        }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

        outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
        return 0LL;
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v40);
      swift_unknownObjectRelease(v38);
      goto LABEL_25;
    }

    if (v37 == enum case for Parse.uso(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      __int128 v46 = v120;
      uint64_t v47 = v121;
      uint64_t v48 = (*(uint64_t (**)(void))(v35 + 32))();
      uint64_t v49 = v115;
      uint64_t v50 = USOParse.userParse.getter(v48);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v50);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v49, v127);
      uint64_t v7 = v116;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        unint64_t v51 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          unint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v55 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)unint64_t v54 = 136315138;
          *(void *)&uint64_t v133 = v55;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v54 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v52, v53, "%s USO: No user dialog act found in userParse.", v54, 0xCu);
          swift_arrayDestroy(v55, 1LL);
          swift_slowDealloc(v55, -1LL, -1LL);
          swift_slowDealloc(v54, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v131 + 8))(v120, v121);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
        }

        goto LABEL_30;
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
LABEL_25:
      uint64_t v81 = v117;
      Swift::Bool v82 = v122;
      (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v122, v7, v20);
      uint64_t v83 = outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
      uint64_t v84 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter(v83);
      unint64_t v85 = v118;
      if ((v84 & 1) == 0)
      {
        uint64_t v86 = Siri_Nlu_External_UserDialogAct.hasRejected.getter(v84);
        uint64_t v87 = v114;
        uint64_t v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 16))(v114, v82, v20);
        if ((v86 & 1) != 0)
        {
          uint64_t v84 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v87, v20);
        }

        else
        {
          int v89 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter(v88);
          uint64_t v90 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
          uint64_t v84 = v90(v87, v20);
          if ((v89 & 1) == 0)
          {
            uint64_t v99 = v85[3];
            uint64_t v100 = v85[4];
            __swift_project_boxed_opaque_existential_1(v85, v99);
            uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 72))(v99, v100);
            (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v101 + 216LL))(&v133, v82);
            swift_release(v101);
            if (v134)
            {
              outlined init with take of AppSelectionSignalComponent(&v133, (uint64_t)&v135);
              __swift_project_boxed_opaque_existential_1(v112, v112[3]);
              uint64_t v132 = (void *)specialized static HangUpCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( (uint64_t)&v135,  v113,  (uint64_t)v85,  v132,  0LL);
              __swift_destroy_boxed_opaque_existential_1(&v135);
              v90(v82, v20);
              return v132;
            }

            uint64_t v102 = outlined destroy of SpeakableString?( (uint64_t)&v133,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            os_log_type_t v103 = (os_log_s *)Logger.logObject.getter(v102);
            uint64_t v104 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v103, v104))
            {
              uint64_t v105 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v106 = v82;
              uint64_t v107 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v105 = 136315138;
              *(void *)&uint64_t v133 = v107;
              uint64_t v131 = v20;
              uint64_t v135 = 0LL;
              v136[0] = 0xE000000000000000LL;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
              uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v105 + 4);
              swift_bridgeObjectRelease();
              _os_log_impl( &dword_0,  v103,  v104,  "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.",  v105,  0xCu);
              swift_arrayDestroy(v107, 1LL);
              swift_slowDealloc(v107, -1LL, -1LL);
              swift_slowDealloc(v105, -1LL, -1LL);

              uint64_t v108 = v106;
              uint64_t v109 = v131;
            }

            else
            {

              uint64_t v108 = v82;
              uint64_t v109 = v20;
            }

            v90(v108, v109);
            goto LABEL_35;
          }
        }
      }

      uint64_t v91 = (os_log_s *)Logger.logObject.getter(v84);
      uint64_t v93 = static os_log_type_t.debug.getter(v91, v92);
      if (os_log_type_enabled(v91, v93))
      {
        os_log_type_t v94 = v81;
        char v95 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v96 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)char v95 = 136315138;
        *(void *)&uint64_t v133 = v96;
        uint64_t v131 = v20;
        uint64_t v135 = 0LL;
        v136[0] = 0xE000000000000000LL;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
        uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v95 + 4);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v91, v93, "%s NLv4 parse is a confirmation. Returning previousIntent.", v95, 0xCu);
        swift_arrayDestroy(v96, 1LL);
        swift_slowDealloc(v96, -1LL, -1LL);
        swift_slowDealloc(v95, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v122, v131);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v20);
      }

        outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
        return 0LL;
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v40);
      swift_unknownObjectRelease(v38);
      goto LABEL_25;
    }

    if (v37 == enum case for Parse.uso(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      __int128 v46 = v123;
      uint64_t v47 = v124;
      uint64_t v48 = (*(uint64_t (**)(void))(v35 + 32))();
      uint64_t v49 = v118;
      uint64_t v50 = USOParse.userParse.getter(v48);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v50);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v49, v130);
      uint64_t v7 = v119;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        unint64_t v51 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          unint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v55 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)unint64_t v54 = 136315138;
          *(void *)&uint64_t v136 = v55;
          uint64_t v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v54 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v52, v53, "%s USO: No user dialog act found in userParse.", v54, 0xCu);
          swift_arrayDestroy(v55, 1LL);
          swift_slowDealloc(v55, -1LL, -1LL);
          swift_slowDealloc(v54, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v134 + 8))(v123, v124);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
        }

        goto LABEL_30;
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
LABEL_25:
      uint64_t v81 = v120;
      Swift::Bool v82 = v125;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v125, v7, v20);
      uint64_t v83 = outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
      uint64_t v84 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter(v83);
      unint64_t v85 = v121;
      if ((v84 & 1) == 0)
      {
        uint64_t v86 = Siri_Nlu_External_UserDialogAct.hasRejected.getter(v84);
        uint64_t v87 = v117;
        uint64_t v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 16))(v117, v82, v20);
        if ((v86 & 1) != 0)
        {
          uint64_t v84 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v87, v20);
        }

        else
        {
          int v89 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter(v88);
          uint64_t v90 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
          uint64_t v84 = v90(v87, v20);
          if ((v89 & 1) == 0)
          {
            uint64_t v99 = v85[3];
            uint64_t v100 = v85[4];
            __swift_project_boxed_opaque_existential_1(v85, v99);
            uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 72))(v99, v100);
            (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v101 + 216LL))(&v136, v82);
            swift_release(v101);
            if (v137)
            {
              outlined init with take of AppSelectionSignalComponent(&v136, (uint64_t)&v138);
              uint64_t v102 = v115[3];
              os_log_type_t v103 = v115[4];
              uint64_t v104 = __swift_project_boxed_opaque_existential_1(v115, v102);
              uint64_t v135 = specialized static StartAudioCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( &v138,  v116,  v85,  v135,  0LL,  (uint64_t)v104,  v102,  v103);
              __swift_destroy_boxed_opaque_existential_1(&v138);
              v90(v82, v20);
              return v135;
            }

            uint64_t v105 = outlined destroy of SpeakableString?( (uint64_t)&v136,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v106 = (os_log_s *)Logger.logObject.getter(v105);
            uint64_t v107 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v106, v107))
            {
              uint64_t v108 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v109 = v82;
              unint64_t v110 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v108 = 136315138;
              *(void *)&uint64_t v136 = v110;
              uint64_t v134 = v20;
              uint64_t v138 = 0LL;
              v139[0] = 0xE000000000000000LL;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
              uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v108 + 4);
              swift_bridgeObjectRelease();
              _os_log_impl( &dword_0,  v106,  v107,  "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.",  v108,  0xCu);
              swift_arrayDestroy(v110, 1LL);
              swift_slowDealloc(v110, -1LL, -1LL);
              swift_slowDealloc(v108, -1LL, -1LL);

              Swift::String_optional v111 = v109;
              uint64_t v112 = v134;
            }

            else
            {

              Swift::String_optional v111 = v82;
              uint64_t v112 = v20;
            }

            v90(v111, v112);
            goto LABEL_35;
          }
        }
      }

      uint64_t v91 = (os_log_s *)Logger.logObject.getter(v84);
      uint64_t v93 = static os_log_type_t.debug.getter(v91, v92);
      if (os_log_type_enabled(v91, v93))
      {
        os_log_type_t v94 = v81;
        char v95 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v96 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)char v95 = 136315138;
        *(void *)&uint64_t v136 = v96;
        uint64_t v134 = v20;
        uint64_t v138 = 0LL;
        v139[0] = 0xE000000000000000LL;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
        uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v95 + 4);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v91, v93, "%s NLv4 parse is a confirmation. Returning previousIntent.", v95, 0xCu);
        swift_arrayDestroy(v96, 1LL);
        swift_slowDealloc(v96, -1LL, -1LL);
        swift_slowDealloc(v95, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v125, v134);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v20);
      }

        outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
        return 0LL;
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v40);
      swift_unknownObjectRelease(v38);
      goto LABEL_25;
    }

    if (v37 == enum case for Parse.uso(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      __int128 v46 = v120;
      uint64_t v47 = v121;
      uint64_t v48 = (*(uint64_t (**)(void))(v35 + 32))();
      uint64_t v49 = v115;
      uint64_t v50 = USOParse.userParse.getter(v48);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v50);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v49, v127);
      uint64_t v7 = v116;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        unint64_t v51 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          unint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v55 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)unint64_t v54 = 136315138;
          *(void *)&uint64_t v133 = v55;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v54 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v52, v53, "%s USO: No user dialog act found in userParse.", v54, 0xCu);
          swift_arrayDestroy(v55, 1LL);
          swift_slowDealloc(v55, -1LL, -1LL);
          swift_slowDealloc(v54, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v131 + 8))(v120, v121);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
        }

        goto LABEL_30;
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
LABEL_25:
      uint64_t v81 = v117;
      Swift::Bool v82 = v122;
      (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v122, v7, v20);
      uint64_t v83 = outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
      uint64_t v84 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter(v83);
      unint64_t v85 = v118;
      if ((v84 & 1) == 0)
      {
        uint64_t v86 = Siri_Nlu_External_UserDialogAct.hasRejected.getter(v84);
        uint64_t v87 = v114;
        uint64_t v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 16))(v114, v82, v20);
        if ((v86 & 1) != 0)
        {
          uint64_t v84 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v87, v20);
        }

        else
        {
          int v89 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter(v88);
          uint64_t v90 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
          uint64_t v84 = v90(v87, v20);
          if ((v89 & 1) == 0)
          {
            uint64_t v99 = v85[3];
            uint64_t v100 = v85[4];
            __swift_project_boxed_opaque_existential_1(v85, v99);
            uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 72))(v99, v100);
            (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v101 + 216LL))(&v133, v82);
            swift_release(v101);
            if (v134)
            {
              outlined init with take of AppSelectionSignalComponent(&v133, (uint64_t)&v135);
              __swift_project_boxed_opaque_existential_1(v112, v112[3]);
              uint64_t v132 = specialized static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( &v135,  v113,  (uint64_t)v85,  v132,  0LL);
              __swift_destroy_boxed_opaque_existential_1(&v135);
              v90(v82, v20);
              return v132;
            }

            uint64_t v102 = outlined destroy of SpeakableString?( (uint64_t)&v133,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            os_log_type_t v103 = (os_log_s *)Logger.logObject.getter(v102);
            uint64_t v104 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v103, v104))
            {
              uint64_t v105 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v106 = v82;
              uint64_t v107 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v105 = 136315138;
              *(void *)&uint64_t v133 = v107;
              uint64_t v131 = v20;
              uint64_t v135 = 0LL;
              v136[0] = 0xE000000000000000LL;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
              uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v105 + 4);
              swift_bridgeObjectRelease();
              _os_log_impl( &dword_0,  v103,  v104,  "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.",  v105,  0xCu);
              swift_arrayDestroy(v107, 1LL);
              swift_slowDealloc(v107, -1LL, -1LL);
              swift_slowDealloc(v105, -1LL, -1LL);

              uint64_t v108 = v106;
              uint64_t v109 = v131;
            }

            else
            {

              uint64_t v108 = v82;
              uint64_t v109 = v20;
            }

            v90(v108, v109);
            goto LABEL_35;
          }
        }
      }

      uint64_t v91 = (os_log_s *)Logger.logObject.getter(v84);
      uint64_t v93 = static os_log_type_t.debug.getter(v91, v92);
      if (os_log_type_enabled(v91, v93))
      {
        os_log_type_t v94 = v81;
        char v95 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v96 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)char v95 = 136315138;
        *(void *)&uint64_t v133 = v96;
        uint64_t v131 = v20;
        uint64_t v135 = 0LL;
        v136[0] = 0xE000000000000000LL;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
        uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v95 + 4);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v91, v93, "%s NLv4 parse is a confirmation. Returning previousIntent.", v95, 0xCu);
        swift_arrayDestroy(v96, 1LL);
        swift_slowDealloc(v96, -1LL, -1LL);
        swift_slowDealloc(v95, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v122, v131);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v20);
      }

        outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
        return 0LL;
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v40);
      swift_unknownObjectRelease(v38);
      goto LABEL_25;
    }

    if (v37 == enum case for Parse.uso(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      __int128 v46 = v123;
      uint64_t v47 = v124;
      uint64_t v48 = (*(uint64_t (**)(void))(v35 + 32))();
      uint64_t v49 = v118;
      uint64_t v50 = USOParse.userParse.getter(v48);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v50);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v49, v130);
      uint64_t v7 = v119;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        unint64_t v51 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          unint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v55 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)unint64_t v54 = 136315138;
          *(void *)&uint64_t v136 = v55;
          uint64_t v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v54 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v52, v53, "%s USO: No user dialog act found in userParse.", v54, 0xCu);
          swift_arrayDestroy(v55, 1LL);
          swift_slowDealloc(v55, -1LL, -1LL);
          swift_slowDealloc(v54, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v134 + 8))(v123, v124);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
        }

        goto LABEL_30;
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
LABEL_25:
      uint64_t v81 = v120;
      Swift::Bool v82 = v125;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v125, v7, v20);
      uint64_t v83 = outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
      uint64_t v84 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter(v83);
      unint64_t v85 = v121;
      if ((v84 & 1) == 0)
      {
        uint64_t v86 = Siri_Nlu_External_UserDialogAct.hasRejected.getter(v84);
        uint64_t v87 = v117;
        uint64_t v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 16))(v117, v82, v20);
        if ((v86 & 1) != 0)
        {
          uint64_t v84 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v87, v20);
        }

        else
        {
          int v89 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter(v88);
          uint64_t v90 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
          uint64_t v84 = v90(v87, v20);
          if ((v89 & 1) == 0)
          {
            uint64_t v99 = v85[3];
            uint64_t v100 = v85[4];
            __swift_project_boxed_opaque_existential_1(v85, v99);
            uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 72))(v99, v100);
            (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v101 + 216LL))(&v136, v82);
            swift_release(v101);
            if (v137)
            {
              outlined init with take of AppSelectionSignalComponent(&v136, (uint64_t)&v138);
              uint64_t v102 = v115[3];
              os_log_type_t v103 = v115[4];
              uint64_t v104 = __swift_project_boxed_opaque_existential_1(v115, v102);
              uint64_t v135 = (void *)specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( &v138,  v116,  v85,  v135,  0LL,  (uint64_t)v104,  v102,  v103);
              __swift_destroy_boxed_opaque_existential_1(&v138);
              v90(v82, v20);
              return v135;
            }

            uint64_t v105 = outlined destroy of SpeakableString?( (uint64_t)&v136,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v106 = (os_log_s *)Logger.logObject.getter(v105);
            uint64_t v107 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v106, v107))
            {
              uint64_t v108 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v109 = v82;
              unint64_t v110 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v108 = 136315138;
              *(void *)&uint64_t v136 = v110;
              uint64_t v134 = v20;
              uint64_t v138 = 0LL;
              v139[0] = 0xE000000000000000LL;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
              uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v108 + 4);
              swift_bridgeObjectRelease();
              _os_log_impl( &dword_0,  v106,  v107,  "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.",  v108,  0xCu);
              swift_arrayDestroy(v110, 1LL);
              swift_slowDealloc(v110, -1LL, -1LL);
              swift_slowDealloc(v108, -1LL, -1LL);

              Swift::String_optional v111 = v109;
              uint64_t v112 = v134;
            }

            else
            {

              Swift::String_optional v111 = v82;
              uint64_t v112 = v20;
            }

            v90(v111, v112);
            goto LABEL_35;
          }
        }
      }

      uint64_t v91 = (os_log_s *)Logger.logObject.getter(v84);
      uint64_t v93 = static os_log_type_t.debug.getter(v91, v92);
      if (os_log_type_enabled(v91, v93))
      {
        os_log_type_t v94 = v81;
        char v95 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v96 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)char v95 = 136315138;
        *(void *)&uint64_t v136 = v96;
        uint64_t v134 = v20;
        uint64_t v138 = 0LL;
        v139[0] = 0xE000000000000000LL;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
        uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v95 + 4);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v91, v93, "%s NLv4 parse is a confirmation. Returning previousIntent.", v95, 0xCu);
        swift_arrayDestroy(v96, 1LL);
        swift_slowDealloc(v96, -1LL, -1LL);
        swift_slowDealloc(v95, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v125, v134);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v20);
      }

        outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
        return 0LL;
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v40);
      swift_unknownObjectRelease(v38);
      goto LABEL_25;
    }

    if (v37 == enum case for Parse.uso(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      __int128 v46 = v123;
      uint64_t v47 = v124;
      uint64_t v48 = (*(uint64_t (**)(void))(v35 + 32))();
      uint64_t v49 = v118;
      uint64_t v50 = USOParse.userParse.getter(v48);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v50);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v49, v130);
      uint64_t v7 = v119;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        unint64_t v51 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          unint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v55 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)unint64_t v54 = 136315138;
          *(void *)&uint64_t v136 = v55;
          uint64_t v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v54 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v52, v53, "%s USO: No user dialog act found in userParse.", v54, 0xCu);
          swift_arrayDestroy(v55, 1LL);
          swift_slowDealloc(v55, -1LL, -1LL);
          swift_slowDealloc(v54, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v134 + 8))(v123, v124);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
        }

        goto LABEL_30;
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
LABEL_25:
      uint64_t v81 = v120;
      Swift::Bool v82 = v125;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v125, v7, v20);
      uint64_t v83 = outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
      uint64_t v84 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter(v83);
      unint64_t v85 = v121;
      if ((v84 & 1) == 0)
      {
        uint64_t v86 = Siri_Nlu_External_UserDialogAct.hasRejected.getter(v84);
        uint64_t v87 = v117;
        uint64_t v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 16))(v117, v82, v20);
        if ((v86 & 1) != 0)
        {
          uint64_t v84 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v87, v20);
        }

        else
        {
          int v89 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter(v88);
          uint64_t v90 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
          uint64_t v84 = v90(v87, v20);
          if ((v89 & 1) == 0)
          {
            uint64_t v99 = v85[3];
            uint64_t v100 = v85[4];
            __swift_project_boxed_opaque_existential_1(v85, v99);
            uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 72))(v99, v100);
            (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v101 + 216LL))(&v136, v82);
            swift_release(v101);
            if (v137)
            {
              outlined init with take of AppSelectionSignalComponent(&v136, (uint64_t)&v138);
              uint64_t v102 = v115[3];
              os_log_type_t v103 = v115[4];
              uint64_t v104 = __swift_project_boxed_opaque_existential_1(v115, v102);
              uint64_t v135 = specialized static StartVideoCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( &v138,  v116,  v85,  v135,  0LL,  (uint64_t)v104,  v102,  v103);
              __swift_destroy_boxed_opaque_existential_1(&v138);
              v90(v82, v20);
              return v135;
            }

            uint64_t v105 = outlined destroy of SpeakableString?( (uint64_t)&v136,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            uint64_t v106 = (os_log_s *)Logger.logObject.getter(v105);
            uint64_t v107 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v106, v107))
            {
              uint64_t v108 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v109 = v82;
              unint64_t v110 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v108 = 136315138;
              *(void *)&uint64_t v136 = v110;
              uint64_t v134 = v20;
              uint64_t v138 = 0LL;
              v139[0] = 0xE000000000000000LL;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
              uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v108 + 4);
              swift_bridgeObjectRelease();
              _os_log_impl( &dword_0,  v106,  v107,  "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.",  v108,  0xCu);
              swift_arrayDestroy(v110, 1LL);
              swift_slowDealloc(v110, -1LL, -1LL);
              swift_slowDealloc(v108, -1LL, -1LL);

              Swift::String_optional v111 = v109;
              uint64_t v112 = v134;
            }

            else
            {

              Swift::String_optional v111 = v82;
              uint64_t v112 = v20;
            }

            v90(v111, v112);
            goto LABEL_35;
          }
        }
      }

      uint64_t v91 = (os_log_s *)Logger.logObject.getter(v84);
      uint64_t v93 = static os_log_type_t.debug.getter(v91, v92);
      if (os_log_type_enabled(v91, v93))
      {
        os_log_type_t v94 = v81;
        char v95 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v96 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)char v95 = 136315138;
        *(void *)&uint64_t v136 = v96;
        uint64_t v134 = v20;
        uint64_t v138 = 0LL;
        v139[0] = 0xE000000000000000LL;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
        uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v95 + 4);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v91, v93, "%s NLv4 parse is a confirmation. Returning previousIntent.", v95, 0xCu);
        swift_arrayDestroy(v96, 1LL);
        swift_slowDealloc(v96, -1LL, -1LL);
        swift_slowDealloc(v95, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v125, v134);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v20);
      }

        outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
        return 0LL;
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v40);
      swift_unknownObjectRelease(v38);
      goto LABEL_25;
    }

    if (v37 == enum case for Parse.uso(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      __int128 v46 = v120;
      uint64_t v47 = v121;
      uint64_t v48 = (*(uint64_t (**)(void))(v35 + 32))();
      uint64_t v49 = v115;
      uint64_t v50 = USOParse.userParse.getter(v48);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v50);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v49, v127);
      uint64_t v7 = v116;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        unint64_t v51 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          unint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v55 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)unint64_t v54 = 136315138;
          *(void *)&uint64_t v133 = v55;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v54 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v52, v53, "%s USO: No user dialog act found in userParse.", v54, 0xCu);
          swift_arrayDestroy(v55, 1LL);
          swift_slowDealloc(v55, -1LL, -1LL);
          swift_slowDealloc(v54, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v131 + 8))(v120, v121);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
        }

        goto LABEL_30;
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v47);
LABEL_25:
      uint64_t v81 = v117;
      Swift::Bool v82 = v122;
      (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v122, v7, v20);
      uint64_t v83 = outlined destroy of SpeakableString?((uint64_t)v19, &demangling cache variable for type metadata for Parse?);
      uint64_t v84 = Siri_Nlu_External_UserDialogAct.hasAccepted.getter(v83);
      unint64_t v85 = v118;
      if ((v84 & 1) == 0)
      {
        uint64_t v86 = Siri_Nlu_External_UserDialogAct.hasRejected.getter(v84);
        uint64_t v87 = v114;
        uint64_t v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 16))(v114, v82, v20);
        if ((v86 & 1) != 0)
        {
          uint64_t v84 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v87, v20);
        }

        else
        {
          int v89 = Siri_Nlu_External_UserDialogAct.hasCancelled.getter(v88);
          uint64_t v90 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
          uint64_t v84 = v90(v87, v20);
          if ((v89 & 1) == 0)
          {
            uint64_t v99 = v85[3];
            uint64_t v100 = v85[4];
            __swift_project_boxed_opaque_existential_1(v85, v99);
            uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 72))(v99, v100);
            (*(void (**)(__int128 *__return_ptr, char *))(*(void *)v101 + 216LL))(&v133, v82);
            swift_release(v101);
            if (v134)
            {
              outlined init with take of AppSelectionSignalComponent(&v133, (uint64_t)&v135);
              __swift_project_boxed_opaque_existential_1(v112, v112[3]);
              uint64_t v132 = specialized static IdentifyCallerIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( &v135,  v113,  (uint64_t)v85,  v132);
              __swift_destroy_boxed_opaque_existential_1(&v135);
              v90(v82, v20);
              return v132;
            }

            uint64_t v102 = outlined destroy of SpeakableString?( (uint64_t)&v133,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            os_log_type_t v103 = (os_log_s *)Logger.logObject.getter(v102);
            uint64_t v104 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v103, v104))
            {
              uint64_t v105 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v106 = v82;
              uint64_t v107 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v105 = 136315138;
              *(void *)&uint64_t v133 = v107;
              uint64_t v131 = v20;
              uint64_t v135 = 0LL;
              v136[0] = 0xE000000000000000LL;
              DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
              uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v105 + 4);
              swift_bridgeObjectRelease();
              _os_log_impl( &dword_0,  v103,  v104,  "%s couldn't convert Parse to PhoneCallNLIntent. Returning previousIntent.",  v105,  0xCu);
              swift_arrayDestroy(v107, 1LL);
              swift_slowDealloc(v107, -1LL, -1LL);
              swift_slowDealloc(v105, -1LL, -1LL);

              uint64_t v108 = v106;
              uint64_t v109 = v131;
            }

            else
            {

              uint64_t v108 = v82;
              uint64_t v109 = v20;
            }

            v90(v108, v109);
            goto LABEL_35;
          }
        }
      }

      uint64_t v91 = (os_log_s *)Logger.logObject.getter(v84);
      uint64_t v93 = static os_log_type_t.debug.getter(v91, v92);
      if (os_log_type_enabled(v91, v93))
      {
        os_log_type_t v94 = v81;
        char v95 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v96 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)char v95 = 136315138;
        *(void *)&uint64_t v133 = v96;
        uint64_t v131 = v20;
        uint64_t v135 = 0LL;
        v136[0] = 0xE000000000000000LL;
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
        uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v95 + 4);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v91, v93, "%s NLv4 parse is a confirmation. Returning previousIntent.", v95, 0xCu);
        swift_arrayDestroy(v96, 1LL);
        swift_slowDealloc(v96, -1LL, -1LL);
        swift_slowDealloc(v95, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v122, v131);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v20);
      }

  OUTLINED_FUNCTION_69_12(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callMetrics);
  uint64_t v30 = v125;
  if ((v49 & 1) != 0)
  {
LABEL_12:
    OUTLINED_FUNCTION_49_19(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_callCapability);
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }

  uint64_t v181 = *v180;
  matched = type metadata accessor for AppMatchResolution(0LL);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(matched - 8) + 104LL))(v179, v181, matched);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

      OUTLINED_FUNCTION_84_21(v25);
      uint64_t v68 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v68))
      {
        uint64_t v69 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_31_0(v69);
        uint64_t v40 = "#CallingIntentContactNeedsDisambiguationFlowStrategy intent does not belong to this task, ignoring…";
LABEL_32:
        OUTLINED_FUNCTION_5(&dword_0, (os_log_s *)v18, (os_log_type_t)&v102, v40, v19);
        OUTLINED_FUNCTION_0_2((uint64_t)v19);
      }

unint64_t type metadata accessor for INCallGroup()
{
  unint64_t result = lazy cache variable for type metadata for INCallGroup;
  if (!lazy cache variable for type metadata for INCallGroup)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INCallGroup);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for INCallGroup);
  }

  return result;
}

Swift::Void __swiftcall INStartCallIntent.updateIsGroupCall(isGroupCall:)(Swift::Bool isGroupCall)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v4 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v1, v4))
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v5 = 67109120;
    LODWORD(v6[0]) = isGroupCall;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v6, (char *)v6 + 4, v5 + 4, v5 + 8);
    _os_log_impl(&dword_0, v1, v4, "#INStartCallIntent Updating intent with isGroupCall : %{BOOL}d", v5, 8u);
    OUTLINED_FUNCTION_0_2((uint64_t)v5);
  }

  void v6[3] = &type metadata for Bool;
  LOBYTE(v6[0]) = isGroupCall;
  NSObject.update(with:at:)((uint64_t)v6, 0x4370756F72477369LL, 0xEB000000006C6C61LL);
  __swift_destroy_boxed_opaque_existential_1(v6);
  OUTLINED_FUNCTION_62_9();
}

void NSObject.update(with:at:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v6 = a5 >> 1;
  if (a5 >> 1 == a4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
    oslog = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(oslog, v9)) {
      goto LABEL_19;
    }
    int64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)int64_t v10 = 0;
    uint64_t v11 = "No keyPath specified, not updating object";
    goto LABEL_18;
  }

  if ((uint64_t)(a5 >> 1) <= a4)
  {
    __break(1u);
LABEL_29:
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
LABEL_16:
    uint64_t v25 = type metadata accessor for Logger(0LL);
    uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    oslog = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      int64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int64_t v10 = 0;
      uint64_t v11 = "keyPath invalid for object";
LABEL_18:
      _os_log_impl(&dword_0, oslog, v9, v11, v10, 2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

uint64_t NSObject.update(with:at:)(uint64_t result, uint64_t a2)
{
  uint64_t v17 = (void *)result;
  uint64_t v16 = *(void *)(a2 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = lazy protocol witness table accessor for type String and conformance String();
    for (uint64_t i = 0LL; i != v16; ++i)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)( 46LL,  0xE100000000000000LL,  0x7FFFFFFFFFFFFFFFLL,  1LL,  &type metadata for String,  v15);
      swift_bridgeObjectRelease();
      uint64_t v4 = *(void *)(v3 + 16);
      if (v4)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v5 = (uint64_t *)(v3 + 56);
        do
        {
          uint64_t v6 = *(v5 - 3);
          uint64_t v7 = *(v5 - 2);
          uint64_t v9 = *(v5 - 1);
          uint64_t v8 = *v5;
          swift_bridgeObjectRetain();
          uint64_t v10 = static String._fromSubstring(_:)(v6, v7, v9, v8);
          uint64_t v12 = v11;
          swift_bridgeObjectRelease();
          unint64_t v13 = _swiftEmptyArrayStorage[2];
          if (v13 >= _swiftEmptyArrayStorage[3] >> 1) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          _swiftEmptyArrayStorage[2] = v13 + 1;
          unint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
          v14[4] = v10;
          v14[5] = v12;
          v5 += 4;
          --v4;
        }

        while (v4);
      }

      swift_bridgeObjectRelease();
      NSObject.update(with:at:)( v17,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&_swiftEmptyArrayStorage[4],  0LL,  (2LL * _swiftEmptyArrayStorage[2]) | 1);
      swift_bridgeObjectRelease();
    }

    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t NSObject.update(with:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject(v6, &v9);
  *(_OWORD *)(inited + 16) = xmmword_31D870;
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  swift_bridgeObjectRetain();
  NSObject.update(with:at:)(a1, inited);
  swift_setDeallocating(inited);
  return specialized _ContiguousArrayStorage.__deallocating_deinit();
}

unint64_t lazy protocol witness table accessor for type String and conformance String()
{
  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }

  return result;
}

void specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

{
  void *v0;
  uint64_t v1;
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *uint64_t v0 = v1;
}

char *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)( char *a1, int64_t a2, char a3)
{
  unint64_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( a1,  a2,  a3,  *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_40_4();
      if (v7)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_39_4();
  if (v5)
  {
    uint64_t v14 = OUTLINED_FUNCTION_30_7(v9, v10, v11, v12, v13);
    unint64_t v15 = (void *)OUTLINED_FUNCTION_8_2(v14, 32 * v5 + 32);
    size_t v16 = _swift_stdlib_malloc_size(v15);
    v15[2] = v4;
    v15[3] = 2 * ((uint64_t)(v16 - 32) / 32);
  }

  uint64_t v17 = OUTLINED_FUNCTION_38_7();
  if ((v3 & 1) != 0)
  {
    v2(v17);
    *(void *)(v0 + 16) = 0LL;
  }

  else
  {
    v1(v17);
  }

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  size_t v16;
  uint64_t v17;
  OUTLINED_FUNCTION_18_11();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_40_4();
      if (v7)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_39_4();
  if (v5)
  {
    uint64_t v14 = OUTLINED_FUNCTION_30_7(v9, v10, v11, v12, v13);
    unint64_t v15 = (void *)OUTLINED_FUNCTION_8_2(v14, 40 * v5 + 32);
    size_t v16 = _swift_stdlib_malloc_size(v15);
    v15[2] = v4;
    v15[3] = 2 * ((uint64_t)(v16 - 32) / 40);
  }

  uint64_t v17 = OUTLINED_FUNCTION_38_7();
  if ((v3 & 1) != 0)
  {
    v2(v17);
    *(void *)(v0 + 16) = 0LL;
  }

  else
  {
    v1(v17);
  }

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_58();
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  OUTLINED_FUNCTION_37_6();
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_40_4();
      if (v13)
      {
LABEL_23:
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  else
  {
    uint64_t v12 = v8;
  }

  unint64_t v15 = *(void *)(v0 + 16);
  if (v12 <= v15) {
    size_t v16 = *(void *)(v0 + 16);
  }
  else {
    size_t v16 = v12;
  }
  if (!v16) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_30_7(v7, v8, v9, v10, v11);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(v4);
  int64_t v18 = (void *)OUTLINED_FUNCTION_11_14(v17);
  unint64_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v5)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  if (v19 - v6 == 0x8000000000000000LL && v5 == -1) {
    goto LABEL_22;
  }
  v18[2] = v15;
  v18[3] = 2 * ((uint64_t)(v19 - v6) / v5);
LABEL_17:
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(v4);
  uint64_t v22 = OUTLINED_FUNCTION_21_7(v21);
  if ((v3 & 1) != 0)
  {
    v2(v22);
    *(void *)(v0 + 16) = 0LL;
  }

  else
  {
    v1(v22);
  }

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_7_5();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  size_t v16;
  uint64_t v17;
  OUTLINED_FUNCTION_18_11();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_40_4();
      if (v7)
      {
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  OUTLINED_FUNCTION_39_4();
  if (v5)
  {
    uint64_t v14 = OUTLINED_FUNCTION_30_7(v9, v10, v11, v12, v13);
    unint64_t v15 = (void *)OUTLINED_FUNCTION_8_2(v14, 16 * v5 + 32);
    size_t v16 = _swift_stdlib_malloc_size(v15);
    v15[2] = v4;
    v15[3] = 2 * ((uint64_t)(v16 - 32) / 16);
  }

  uint64_t v17 = OUTLINED_FUNCTION_38_7();
  if ((v3 & 1) != 0)
  {
    v2(v17);
    *(void *)(v0 + 16) = 0LL;
  }

  else
  {
    v1(v17);
  }

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  OUTLINED_FUNCTION_37_6();
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_17();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_40_4();
      if (v13)
      {
LABEL_23:
        __break(1u);
        return;
      }

      OUTLINED_FUNCTION_15_10();
    }
  }

  else
  {
    uint64_t v12 = v8;
  }

  unint64_t v15 = *(void *)(v0 + 16);
  if (v12 <= v15) {
    size_t v16 = *(void *)(v0 + 16);
  }
  else {
    size_t v16 = v12;
  }
  if (!v16) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_30_7(v7, v8, v9, v10, v11);
  uint64_t v17 = v4(0LL);
  int64_t v18 = (void *)OUTLINED_FUNCTION_11_14(v17);
  unint64_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v5)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  if (v19 - v6 == 0x8000000000000000LL && v5 == -1) {
    goto LABEL_22;
  }
  v18[2] = v15;
  v18[3] = 2 * ((uint64_t)(v19 - v6) / v5);
LABEL_17:
  uint64_t v21 = v4(0LL);
  uint64_t v22 = OUTLINED_FUNCTION_21_7(v21);
  if ((v3 & 1) != 0)
  {
    v2(v22);
    *(void *)(v0 + 16) = 0LL;
  }

  else
  {
    v1(v22);
  }

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_7_5();
}

void partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:sirikitIntent:)( void *a1@<X0>, void *a2@<X8>)
{
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:sirikitIntent:)( void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v97 = a5;
  uint64_t v9 = type metadata accessor for Locale(0LL);
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v80 = v10;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  size_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 72);
  uint64_t v17 = v15;
  int64_t v18 = a3;
  v16(v14, v17);
  outlined init with copy of SiriPhoneContact();
  uint64_t v19 = OUTLINED_FUNCTION_38_1();
  static SiriKitEventSender.current.getter(&v90, v19);
  static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:)( v13,  (uint64_t)&v92,  &v90,  v89);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(&v90);
  __swift_destroy_boxed_opaque_existential_1(&v92);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v89,  (uint64_t)&v90,  &demangling cache variable for type metadata for TargetContacts?);
  if (!(void)v90) {
    goto LABEL_27;
  }
  __int128 v92 = v90;
  *(_OWORD *)uint64_t v93 = v91[0];
  *(_OWORD *)&v93[9] = *(_OWORD *)((char *)v91 + 9);
  uint64_t v20 = *(void *)&v91[0];
  if (*(void *)&v91[0] && *(void *)(*(void *)v93 + 16LL))
  {
    uint64_t v94 = v92;
    OUTLINED_FUNCTION_20_14();
    outlined release of Set<String>(&v94);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v92 + 8,  (uint64_t)&v95,  &demangling cache variable for type metadata for [ContactSourceType]?);
    outlined release of Set<String>(&v95);
    OUTLINED_FUNCTION_13_1();
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v93[8],  (uint64_t)v96,  &demangling cache variable for type metadata for [UsoEntity_common_Group]?);
    outlined release of Set<String>(v96);
    OUTLINED_FUNCTION_133_11((uint64_t)&v93[16], v21, &demangling cache variable for type metadata for [UsoEntity]?);
    OUTLINED_FUNCTION_153_8();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v77 = (uint64_t)a3;
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = swift_bridgeObjectRetain_n(v20, 2LL);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    int v26 = static os_log_type_t.debug.getter(v24, v25);
    uint64_t v78 = v5;
    if (os_log_type_enabled(v24, (os_log_type_t)v26))
    {
      HIDWORD(v76) = v26;
      uint64_t v27 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v75 = OUTLINED_FUNCTION_7_0(64LL);
      v84[0] = v75;
      *(_DWORD *)uint64_t v27 = 136315394;
      if (one-time initialization token for logPrefix != -1) {
        swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
      }
      uint64_t v28 = static NLv4Transformer.logPrefix;
      uint64_t v29 = *(void *)algn_478188;
      unint64_t v85 = 0LL;
      v86[0] = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_111_11();
      OUTLINED_FUNCTION_131_8(v28, v29, v30, v31);
      swift_bridgeObjectRelease();
      unint64_t v85 = (void *)OUTLINED_FUNCTION_10_3(0LL, v32, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v27 + 4, v27 + 12);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v74 = v27 + 14;
      uint64_t v33 = type metadata accessor for ContactQuery(0LL);
      uint64_t v34 = OUTLINED_FUNCTION_20_14();
      uint64_t v35 = Array.description.getter(v34, v33);
      OUTLINED_FUNCTION_13_1();
      unint64_t v85 = (void *)OUTLINED_FUNCTION_10_3(v35, v36, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v27 + 14, v27 + 22);
      OUTLINED_FUNCTION_7_4(v20);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_33_6(&dword_0, v24, (os_log_type_t)v26, "%s SRR returned contact queries: %s", (uint8_t *)v27);
      OUTLINED_FUNCTION_12_24();
      OUTLINED_FUNCTION_0_2(v75);
      OUTLINED_FUNCTION_0_2(v27);
    }

    else
    {

      OUTLINED_FUNCTION_7_4(v20);
    }

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    Swift::Bool v54 = PhoneCallNLIntent.isDisplayNameEmergencyContact()();
    uint64_t v55 = a2[3];
    uint64_t v56 = a2[4];
    OUTLINED_FUNCTION_42(a2);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v56 + 8))(&v85, v55, v56);
    uint64_t v57 = v87;
    uint64_t v58 = v88;
    OUTLINED_FUNCTION_42(&v85);
    uint64_t v59 = dispatch thunk of DeviceState.siriLocale.getter(v57, v58);
    static SiriKitEventSender.current.getter(v84, v59);
    uint64_t v60 = type metadata accessor for EmergencyContactResolution();
    uint64_t v61 = OUTLINED_FUNCTION_8_2(v60, 16LL);
    uint64_t v62 = a1[3];
    uint64_t v63 = a1[4];
    uint64_t v64 = OUTLINED_FUNCTION_42(a1);
    uint64_t v71 = v63;
    LOBYTE(v70) = 1;
    int64_t v18 = (void *)v77;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( v77,  v20,  v54,  a4,  v80,  (uint64_t)v64,  (uint64_t)a2,  0LL,  v70,  (uint64_t)v84,  v61,  v62,  v71,  v72,  v73,  v74,  v75,  v76,  v77,  v78,  a4);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_38_1();
    __swift_destroy_boxed_opaque_existential_1(v84);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
    __swift_destroy_boxed_opaque_existential_1(&v85);
    goto LABEL_27;
  }

  uint64_t v37 = v92;
  if ((unint64_t)v92 >> 62)
  {
    else {
      uint64_t v66 = v92 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter(v66);
    OUTLINED_FUNCTION_50();
    if (v67) {
      goto LABEL_12;
    }
LABEL_26:
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_133_11( (uint64_t)&v92 + 8,  v68,  &demangling cache variable for type metadata for [ContactSourceType]?);
    OUTLINED_FUNCTION_153_8();
    OUTLINED_FUNCTION_13_1();
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v93[8],  (uint64_t)v84,  &demangling cache variable for type metadata for [UsoEntity_common_Group]?);
    outlined release of Set<String>(v84);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v93[16],  (uint64_t)&v85,  &demangling cache variable for type metadata for [UsoEntity]?);
    outlined release of Set<String>(&v85);
    goto LABEL_27;
  }

uint64_t static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v74 = a4;
  uint64_t v7 = type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = type metadata accessor for UsoEntityBuilder_common_ReferenceType(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = UsoEntityBuilder_common_ReferenceType.init()();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:),  v7);
  dispatch thunk of UsoEntityBuilder_common_ReferenceType.setDefinedValue(value:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v13 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v14 = UsoEntityBuilder_common_Person.init()();
  uint64_t v15 = swift_retain();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoReferenceType(value:)( v15,  &protocol witness table for UsoEntityBuilder_common_ReferenceType);
  uint64_t v73 = v12;
  swift_release(v12);
  uint64_t v72 = v14;
  uint64_t v16 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v14);
  if (v16)
  {
    uint64_t v17 = *(void *)(a1 + 16);
    if (v17)
    {
      uint64_t v70 = a2;
      uint64_t v71 = a3;
      uint64_t v18 = a1;
      uint64_t v19 = a1 + 32;
      swift_retain();
      uint64_t v69 = v18;
      swift_bridgeObjectRetain();
      while (1)
      {
        outlined init with copy of SiriPhoneContact();
        __swift_project_boxed_opaque_existential_1(&v81, *(uint64_t *)&v82[8]);
        v20.INCallRecordTypeOptions value = SiriPhoneContact.getContactReference()().value;
        if (v20.value == PhoneCallFlowDelegatePlugin_PhoneCallContactReference_unknownDefault)
        {
          outlined init with copy of SiriPhoneContact();
        }

        else
        {
          uint64_t v21 = PhoneCallContactReference.rawValue.getter(v20.value);
          if (v21 == 6647407 && v22 == 0xE300000000000000LL)
          {
            swift_bridgeObjectRelease();
            outlined init with copy of SiriPhoneContact();
LABEL_21:
            __swift_destroy_boxed_opaque_existential_1(&v79);
LABEL_22:
            uint64_t v30 = swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
            unint64_t v32 = *(void *)((char *)&dword_10 + (v76 & 0xFFFFFFFFFFFFFF8LL));
            unint64_t v31 = *(void *)((char *)&dword_18 + (v76 & 0xFFFFFFFFFFFFFF8LL));
            if (v32 >= v31 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1LL);
            }
            uint64_t v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v16);
            specialized Array._endMutation()(v33, v34, v35, v36);
            goto LABEL_25;
          }

          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 6647407LL, 0xE300000000000000LL, 0LL);
          swift_bridgeObjectRelease();
          outlined init with copy of SiriPhoneContact();
          if ((v24 & 1) != 0) {
            goto LABEL_21;
          }
        }

        __swift_project_boxed_opaque_existential_1(&v79, *(uint64_t *)&v80[8]);
        v25.INCallRecordTypeOptions value = SiriPhoneContact.getContactReference()().value;
        if (v25.value == PhoneCallFlowDelegatePlugin_PhoneCallContactReference_unknownDefault)
        {
          __swift_destroy_boxed_opaque_existential_1(&v79);
        }

        else
        {
          uint64_t v26 = PhoneCallContactReference.rawValue.getter(v25.value);
          if (v26 == 2037277037 && v27 == 0xE400000000000000LL)
          {
            swift_bridgeObjectRelease();
            goto LABEL_21;
          }

          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, 2037277037LL, 0xE400000000000000LL, 0LL);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(&v79);
          if ((v29 & 1) != 0) {
            goto LABEL_22;
          }
        }

LABEL_25:
        __swift_destroy_boxed_opaque_existential_1(&v81);
        v19 += 40LL;
        if (!--v17)
        {
          swift_release(v16);
          swift_bridgeObjectRelease();
          a3 = v71;
          a2 = v70;
          break;
        }
      }
    }
  }

  if ((unint64_t)v76 >> 62)
  {
    if (v76 < 0) {
      uint64_t v65 = v76;
    }
    else {
      uint64_t v65 = v76 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease();
    if (!v66) {
      goto LABEL_38;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (v76 & 0xFFFFFFFFFFFFF8LL)))
  {
    goto LABEL_38;
  }

  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v38 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  if (v39) {
    uint64_t v40 = v38;
  }
  else {
    uint64_t v40 = 0LL;
  }
  if (v39) {
    unint64_t v41 = v39;
  }
  else {
    unint64_t v41 = 0xE000000000000000LL;
  }
  uint64_t v42 = __chkstk_darwin();
  *(&v67 - 2) = (uint64_t)&v76;
  *(&v67 - 1) = a2;
  static SiriKitEventSender.current.getter(&v81, v42);
  uint64_t v70 = v40;
  specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
  uint64_t v43 = v77[0];
  uint64_t v44 = v77[1];
  uint64_t v45 = v77[2];
  uint64_t v46 = v77[3];
  uint64_t v47 = v77[4];
  LODWORD(v71) = v78;
  __swift_destroy_boxed_opaque_existential_1(&v81);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v77,  (uint64_t)&v79,  &demangling cache variable for type metadata for TargetContacts?);
  if ((void)v79)
  {
    __int128 v81 = v79;
    *(_OWORD *)uint64_t v82 = *(_OWORD *)v80;
    *(_OWORD *)&v82[9] = *(_OWORD *)&v80[9];
    unint64_t v68 = v41;
    uint64_t v83 = v79;
    swift_bridgeObjectRetain();
    uint64_t v69 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    outlined release of Set<String>(&v83);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v81 + 8,  (uint64_t)&v84,  &demangling cache variable for type metadata for [ContactSourceType]?);
    outlined release of Set<String>(&v84);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v82,  (uint64_t)&v85,  &demangling cache variable for type metadata for [ContactQuery]?);
    outlined release of Set<String>(&v85);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v82[8],  (uint64_t)&v86,  &demangling cache variable for type metadata for [UsoEntity_common_Group]?);
    outlined release of Set<String>(&v86);
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v82[16],  (uint64_t)&v87,  &demangling cache variable for type metadata for [UsoEntity]?);
    outlined release of Set<String>(&v87);
    uint64_t v49 = a3[3];
    uint64_t v48 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v49);
    type metadata accessor for SiriKitEvent(0LL);
    char v75 = 0;
    uint64_t v50 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v70,  v68,  31LL,  closure #2 in static Transformer<>.makeCallReferenceUsoEntity(contacts:referenceResolver:siriKitEventSender:),  0LL);
    uint64_t v51 = v48;
    uint64_t v52 = v69;
    dispatch thunk of SiriKitEventSending.send(_:)(v50, v49, v51);
    swift_release(v73);
    swift_release(v72);
    swift_release(v50);
    swift_release(v16);
    char v53 = (char)v71;
    goto LABEL_46;
  }

  swift_bridgeObjectRelease();
LABEL_38:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v54 = type metadata accessor for Logger(0LL);
  uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)static Logger.siriPhone);
  uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
  os_log_type_t v58 = static os_log_type_t.debug.getter(v56, v57);
  if (os_log_type_enabled(v56, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v60 = swift_slowAlloc(32LL, -1LL);
    uint64_t v87 = v60;
    *(_DWORD *)uint64_t v59 = 136315138;
    if (one-time initialization token for logPrefix != -1) {
      swift_once(&one-time initialization token for logPrefix, one-time initialization function for logPrefix);
    }
    uint64_t v61 = static NLv4Transformer.logPrefix;
    uint64_t v62 = *(void *)algn_478188;
    *(void *)&__int128 v81 = 0LL;
    *((void *)&v81 + 1) = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( v61,  v62,  0xD00000000000004ALL,  (void *)0x8000000000350D90LL);
    swift_bridgeObjectRelease();
    *(void *)&__int128 v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v81,  *((unint64_t *)&v81 + 1),  &v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, (char *)&v81 + 8, v59 + 4, v59 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v56, v58, "%s makeCallReferenceUsoEntity: no person resolved", v59, 0xCu);
    swift_arrayDestroy(v60, 1LL);
    swift_slowDealloc(v60, -1LL, -1LL);
    swift_slowDealloc(v59, -1LL, -1LL);
    swift_release(v73);
    swift_release(v72);
  }

  else
  {

    swift_release(v72);
    swift_release(v73);
  }

  swift_release(v16);
  uint64_t v52 = 0LL;
  uint64_t v44 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t v47 = 0LL;
  char v53 = 0;
LABEL_46:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v64 = v74;
  *uint64_t v74 = v52;
  v64[1] = v44;
  v64[2] = v45;
  v64[3] = v46;
  v64[4] = v47;
  *((_BYTE *)v64 + 40) = v53;
  return result;
}

    OUTLINED_FUNCTION_18_52( v79,  (void (*)(void, void, void, void, void, void))outlined consume of AnnotatedApp?);
    __swift_destroy_boxed_opaque_existential_1(v103);
LABEL_26:
    uint64_t v76 = 0LL;
    goto LABEL_27;
  }

  uint64_t v101 = (void *)(v0 + 440);
  uint64_t v99 = v0 + 840;
  uint64_t v51 = *(void *)(v0 + 952);
  uint64_t v52 = *(void *)(v0 + 944);
  char v53 = *(void *)(v0 + 936);
  uint64_t v54 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 368) = v54;
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 240);
  uint64_t v55 = v1[12];
  uint64_t v56 = v1[13];
  __swift_project_boxed_opaque_existential_1(v102, v55);
  (*(void (**)(uint64_t, uint64_t))(v56 + 104))(v55, v56);
  int v89 = *(void *)(v0 + 792);
  __int128 v92 = *(void *)(v0 + 784);
  uint64_t v88 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 760), v92);
  static PhoneCallNLv3Intent.placeCall()(v51);
  (*(void (**)(uint64_t, void, uint64_t))(v52 + 104))(v51, enum case for Parse.NLv3IntentOnly(_:), v53);
  Input.init(parse:)(v51);
  uint64_t v57 = swift_bridgeObjectRetain();
  specialized _copyCollectionToContiguousArray<A>(_:)(v57);
  uint64_t v85 = v58;
  OUTLINED_FUNCTION_39();
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v40 + 4), v0 + 800);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v102, v0 + 480);
  type metadata accessor for StartCallCATsSimple(0LL);
  memset(v104, 0, 40);
  static CATOption.defaultMode.getter();
  uint64_t v59 = OUTLINED_FUNCTION_32_39();
  type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter();
  uint64_t v60 = OUTLINED_FUNCTION_32_39();
  uint64_t v61 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
  uint64_t v62 = ResponseFactory.init()();
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v83 = *(void *)(v0 + 976);
  uint64_t v86 = *(void *)(v0 + 968);
  uint64_t v95 = *(void *)(v0 + 960);
  uint64_t v63 = static EligibleAppFinder.instance;
  uint64_t v64 = type metadata accessor for AppInfoBuilder();
  uint64_t v65 = OUTLINED_FUNCTION_8_2(v64, 16LL);
  uint64_t v66 = type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy();
  uint64_t v67 = OUTLINED_FUNCTION_8_2(v66, 448LL);
  swift_retain();
  specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)( v85,  v0 + 800,  v0 + 480,  v59,  v60,  v62,  v63,  v65,  0LL,  0LL,  (uint64_t)v104,  v67,  v82,  v0 + 480,  v83,  v85,  v86,  (uint64_t)v88,  v89,  v0 + 600,  v92,  v0 + 400,  v95,  v0 + 872);
  uint64_t v69 = v68;
  *(void *)(v0 + 872) = v68;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v103, (uint64_t)v91);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v102, (uint64_t)v94);
  uint64_t v70 = type metadata accessor for PhoneProtectedAppCheckStrategy();
  uint64_t v71 = OUTLINED_FUNCTION_8_2(v70, 96LL);
  outlined init with take of AppSelectionSignalComponent(v91, v71 + 16);
  outlined init with take of AppSelectionSignalComponent(v94, v71 + 56);
  *(void *)(v0 + 464) = v70;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneProtectedAppCheckStrategy and conformance PhoneProtectedAppCheckStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneProtectedAppCheckStrategy,  (uint64_t)&protocol conformance descriptor for PhoneProtectedAppCheckStrategy);
  *(void *)(v0 + 472) = v72;
  *(void *)(v0 + 440) = v71;
  uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v90 + 72);
  uint64_t v74 = type metadata accessor for INIntent();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneAppResolutionOnDeviceFlowStrategy and conformance PhoneAppResolutionOnDeviceFlowStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy,  (uint64_t)&protocol conformance descriptor for PhoneAppResolutionOnDeviceFlowStrategy);
  uint64_t v76 = v73(v84, v97, v101, v66, v74, v75, v93, v90);
  swift_release(*(void *)(v0 + 352));
  OUTLINED_FUNCTION_39();
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( v0 + 368,  v99,  &demangling cache variable for type metadata for String?);
  outlined release of String?(v99);
  *(void *)(v0 + 880) = *(void *)(v0 + 392);
  uint64_t v77 = outlined release of Set<String>((void *)(v0 + 880));
  OUTLINED_FUNCTION_18_52( (uint64_t)v77,  (void (*)(void, void, void, void, void, void))outlined consume of AnnotatedApp?);
  swift_release(v69);
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v84, v96);
  __swift_destroy_boxed_opaque_existential_1(v103);
  __swift_destroy_boxed_opaque_existential_1(v101);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 760));
LABEL_27:
  uint64_t v80 = *(void *)(v0 + 928);
  swift_task_dealloc(*(void *)(v0 + 976));
  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc(v80);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v76);
}

    uint64_t v12 = (v17 - 1) & v17;
  }

  uint64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    uint64_t v9 = v18;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }

    uint64_t v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    uint64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v17 - 1) & v17;
  }

  uint64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    uint64_t v9 = v18;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }

    uint64_t v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    uint64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    uint64_t v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    uint64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    uint64_t v15 = (v20 - 1) & v20;
  }

  uint64_t v21 = v19 + 3;
  if (v21 >= v16)
  {
LABEL_28:
    uint64_t result = (void *)swift_release(v5);
    uint64_t v1 = v24;
    goto LABEL_30;
  }

  PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional v20 = *(void *)(v9 + 8 * v21);
  if (v20)
  {
    uint64_t v12 = v21;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1LL)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_28;
    }
    PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional v20 = *(void *)(v9 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }

            swift_release(v7);
            uint64_t v4 = v27;
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
      }

      else
      {
        uint64_t v19 = 0LL;
        if (!object) {
          goto LABEL_24;
        }
      }

      if (!v16) {
        goto LABEL_25;
      }
      if (countAndFlagsBits == v19 && object == v16)
      {
        swift_bridgeObjectRelease_n(v27, 2LL);
        swift_release(v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0LL;
      }

      uint64_t v21 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v19, v16, 0LL);
      swift_release(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v27;
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRelease_n(v27, 2LL);
        return 0LL;
      }

              OUTLINED_FUNCTION_122();
              uint64_t v8 = v28;
              OUTLINED_FUNCTION_62();
              goto LABEL_26;
            }
          }
        }

        else
        {
          uint64_t v22 = 0LL;
          if (!object) {
            goto LABEL_24;
          }
        }

        if (!v19) {
          goto LABEL_25;
        }
        if (countAndFlagsBits == v22 && object == v19)
        {
          OUTLINED_FUNCTION_7_4(v28);
          OUTLINED_FUNCTION_122();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_62();
          goto LABEL_30;
        }

        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v22, v19, 0LL);
        OUTLINED_FUNCTION_122();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_62();
        uint64_t v8 = v28;
        if ((v24 & 1) != 0) {
          break;
        }
LABEL_26:
        ++v10;
      }

      while (v11 != v27);
    }
  }

  OUTLINED_FUNCTION_2_12();
LABEL_30:
  OUTLINED_FUNCTION_7_5();
}

    OUTLINED_FUNCTION_6_10(v17);
  }

  OUTLINED_FUNCTION_6_10((uint64_t)v5);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

                    swift_bridgeObjectRetain();
                    swift_release(v5);
                    return *(void **)&v7;
                  }
                }
              }
            }
          }

      (*(void (**)(void, void))(*(void *)(v0 + 184) + 8LL))( *(void *)(v0 + 224),  *(void *)(v0 + 176));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    case 6:
      (*(void (**)(void))(**(void **)(v0 + 104) + 232LL))();
      goto LABEL_25;
    case 7:
      goto LABEL_24;
    default:
      goto LABEL_18;
  }

  __break(1u);
  return result;
}

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v46 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
  uint64_t v72 = a1;
  uint64_t v47 = (os_log_s *)Logger.logObject.getter(v72);
  uint64_t v49 = static os_log_type_t.debug.getter(v47, v48);
  if (os_log_type_enabled(v47, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v51 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v50 = 138412290;
    uint64_t v73 = (uint64_t)v72;
    uint64_t v52 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v50 + 4, v50 + 12);
    *uint64_t v51 = v72;

    _os_log_impl(&dword_0, v47, v49, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@", v50, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v51, 1LL);
    swift_slowDealloc(v51, -1LL, -1LL);
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  else
  {
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v46 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
  uint64_t v72 = a1;
  uint64_t v47 = (os_log_s *)Logger.logObject.getter(v72);
  uint64_t v49 = static os_log_type_t.debug.getter(v47, v48);
  if (os_log_type_enabled(v47, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v51 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v50 = 138412290;
    uint64_t v73 = (uint64_t)v72;
    uint64_t v52 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v50 + 4, v50 + 12);
    *uint64_t v51 = v72;

    _os_log_impl(&dword_0, v47, v49, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@", v50, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v51, 1LL);
    swift_slowDealloc(v51, -1LL, -1LL);
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  else
  {
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v46 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
  uint64_t v72 = a1;
  uint64_t v47 = (os_log_s *)Logger.logObject.getter(v72);
  uint64_t v49 = static os_log_type_t.debug.getter(v47, v48);
  if (os_log_type_enabled(v47, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v51 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v50 = 138412290;
    uint64_t v73 = (uint64_t)v72;
    uint64_t v52 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v50 + 4, v50 + 12);
    *uint64_t v51 = v72;

    _os_log_impl(&dword_0, v47, v49, "#ReferenceContactResolutionWrapper skipping CRR - UpdatedSKIntent %@", v50, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v51, 1LL);
    swift_slowDealloc(v51, -1LL, -1LL);
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  else
  {
  }

              swift_release(v6);
              return (id)v24;
            }
          }
        }
      }
    }

    uint64_t v12 = (v18 - 1) & v18;
    uint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_26:
    PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    OUTLINED_FUNCTION_54_26(v8, v9, v10);
    OUTLINED_FUNCTION_128();
    String.hash(into:)(v36, v22, v21);
    char v24 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v11 + 32));
    if (((-1LL << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_10_25();
      while (++v26 != v27 || (v25 & 1) == 0)
      {
        uint64_t v28 = v26 == v27;
        if (v26 == v27) {
          uint64_t v26 = 0LL;
        }
        v25 |= v28;
        if (*(void *)(v14 + 8 * v26) != -1LL)
        {
          OUTLINED_FUNCTION_4_29();
          goto LABEL_35;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    OUTLINED_FUNCTION_5_29();
LABEL_35:
    OUTLINED_FUNCTION_37_3();
    *(void *)(v14 + v29) |= v30;
    unint64_t v32 = (void *)(*(void *)(v11 + 48) + 16 * v31);
    *unint64_t v32 = v22;
    v32[1] = v21;
    *(void *)(*(void *)(v11 + 56) + 8 * v31) = v23;
    OUTLINED_FUNCTION_38_39();
    if (v33) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v34) {
    return;
  }
  uint64_t v18 = a1[v19];
  if (v18)
  {
    uint64_t v13 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v13 >= v34) {
      return;
    }
    uint64_t v18 = a1[v13];
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    uint64_t v14 = (v20 - 1) & v20;
    uint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_26:
    uint64_t v22 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
    char v24 = *v22;
    uint64_t v23 = v22[1];
    PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional v25 = *(void *)(*(void *)(v3 + 56) + 8 * v18);
    OUTLINED_FUNCTION_54_26(v10, v11, v12);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_128();
    String.hash(into:)(v38, v24, v23);
    uint64_t v26 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v13 + 32));
    if (((-1LL << v26) & ~*(void *)(v16 + 8 * (v26 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_10_25();
      while (++v28 != v29 || (v27 & 1) == 0)
      {
        uint64_t v30 = v28 == v29;
        if (v28 == v29) {
          uint64_t v28 = 0LL;
        }
        v27 |= v30;
        if (*(void *)(v16 + 8 * v28) != -1LL)
        {
          OUTLINED_FUNCTION_4_29();
          goto LABEL_35;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    OUTLINED_FUNCTION_5_29();
LABEL_35:
    OUTLINED_FUNCTION_37_3();
    *(void *)(v16 + v31) |= v32;
    uint64_t v34 = (void *)(*(void *)(v13 + 48) + 16 * v33);
    *uint64_t v34 = v24;
    v34[1] = v23;
    *(void *)(*(void *)(v13 + 56) + 8 * v33) = v25;
    OUTLINED_FUNCTION_38_39();
    if (v35) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }

  uint64_t v21 = v19 + 3;
  if (v21 >= v37) {
    return;
  }
  PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional v20 = v36[v21];
  if (v20)
  {
    uint64_t v15 = v21;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1LL)) {
      break;
    }
    if (v15 >= v37) {
      return;
    }
    PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional v20 = v36[v15];
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }

  uint64_t v46 = 0;
LABEL_26:
  unint64_t v32 = type metadata accessor for SpeakableString(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 1LL, 1LL, v32);
  if ((a6 & 1) == 0)
  {
    SpeakableString.init(print:speak:)( 0x747369486C6C6163LL,  0xEB0000000079726FLL,  0x747369486C6C6163LL,  0xEB0000000079726FLL);
    outlined destroy of PhoneCallNLIntent?( (uint64_t)v20,  &demangling cache variable for type metadata for SpeakableString?);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0LL, 1LL, v32);
    outlined init with take of SpeakableString?((uint64_t)v18, (uint64_t)v20);
  }

  uint64_t v45 = *(void **)(v8 + 40);
  type metadata accessor for PhonePerson(0LL);
  static Device.current.getter(v51);
  uint64_t v33 = v52;
  uint64_t v34 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  dispatch thunk of DeviceState.siriLocale.getter(v33, v34);
  __swift_destroy_boxed_opaque_existential_1(v51);
  static PhonePerson.make(phonePerson:options:locale:)(v23, 0, (uint64_t)v16);
  uint64_t v36 = v35;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v38 = (uint64_t)v20;
  unint64_t v39 = v23;
  uint64_t v40 = v48;
  v37(v16, v48);
  static Device.current.getter(v51);
  uint64_t v42 = v52;
  unint64_t v41 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  dispatch thunk of DeviceState.siriLocale.getter(v42, v41);
  __swift_destroy_boxed_opaque_existential_1(v51);
  static PhonePerson.make(phonePerson:options:locale:)(v39, 0, (uint64_t)v16);
  uint64_t v44 = v43;
  v37(v16, v40);
  (*(void (**)(void, uint64_t, uint64_t, BOOL, void, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                            + *v45
                                                                                            + 64))( 0LL,  v36,  v44,  (v47 & 0xFFFFFFFFFFFFFFFELL) == 2,  v46,  v38,  v49,  v50);
  swift_release(v36);
  swift_release(v44);

  outlined destroy of PhoneCallNLIntent?(v38, &demangling cache variable for type metadata for SpeakableString?);
}

PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional __swiftcall SiriPhoneContact.getContactReference()()
{
  return (PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional)(*(unsigned __int8 (**)(void))(v0 + 320))();
}

uint64_t protocol witness for SiriPhoneContact.contactReference.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208LL))();
}

void PhoneCallContactIntentNode.contactReference.getter()
{
  if (one-time initialization token for phoneCallContactReferenceNode != -1) {
    swift_once( &one-time initialization token for phoneCallContactReferenceNode,  one-time initialization function for phoneCallContactReferenceNode);
  }
  type metadata accessor for PhoneCallContactIntentNode(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallContactIntentNode and conformance PhoneCallContactIntentNode,  type metadata accessor for PhoneCallContactIntentNode);
  OUTLINED_FUNCTION_28_60(v0, &v1);
  OUTLINED_FUNCTION_24_0();
}

uint64_t storeEnumTagSinglePayload for PhoneCallContactReference(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 37 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 37) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xDB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xDA) {
    return ((uint64_t (*)(void))((char *)&loc_2DA44 + 4 * byte_326526[v4]))();
  }
  *a1 = a2 + 37;
  return ((uint64_t (*)(void))((char *)sub_2DA78 + 4 * byte_326521[v4]))();
}

uint64_t sub_2DA78(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DA80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2DA88LL);
  }
  return result;
}

uint64_t sub_2DA94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2DA9CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 37;
  return result;
}

uint64_t sub_2DAA0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DAA8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t objectdestroy_24Tm()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t objectdestroy_3Tm()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t objectdestroy_38Tm()
{
  swift_release(*(void *)(v0 + 40));
  OUTLINED_FUNCTION_11_55();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 88));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 128));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 168));
  swift_release(*(void *)(v0 + 208));
  return swift_deallocObject(v0, 224LL, 7LL);
}

uint64_t objectdestroy_38Tm_0()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t outlined destroy of SKTransformer(uint64_t a1)
{
  return a1;
}

void CallingIntentNeedsValueFlowStrategy.updateINIntent(currentINIntent:resolveRecord:)()
{
  uint64_t v50 = v2;
  uint64_t v51 = v3;
  uint64_t v4 = *v0;
  uint64_t v5 = OUTLINED_FUNCTION_113_3();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v8 = *(void *)(v4 + 264);
  uint64_t v7 = *(void *)(v4 + 272);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v10 = type metadata accessor for ParameterResolutionRecord(0LL, AssociatedTypeWitness);
  uint64_t v11 = (void *)ParameterResolutionRecord.intent.getter(v10);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v7, v8, AssociatedTypeWitness);
  uint64_t v13 = OUTLINED_FUNCTION_114_5( AssociatedConformanceWitness,  *(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8LL));

  ParameterResolutionRecord.parameter.getter(v10);
  uint64_t v14 = OUTLINED_FUNCTION_76_17();
  LOBYTE(v8) = v15 & 1;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  CallingIntentNeedsValueFlowStrategy.updateContactsInIntent(callingIntent:contacts:multicardinalIndex:)( v50,  v51,  v13,  v14,  v8);
  OUTLINED_FUNCTION_87_0();
  uint64_t v16 = (void *)ParameterResolutionRecord.intent.getter(v10);
  uint64_t v17 = OUTLINED_FUNCTION_63_18();

  if (v17 == 1) {
    goto LABEL_31;
  }
  uint64_t ObjectType = swift_getObjectType(v50);
  uint64_t v19 = *(void *)(*(void *)(v51 + 8) + 16LL);
  PhoneCallFlowDelegatePlugin::PhoneCallContactReference_optional v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  uint64_t v49 = ObjectType;
  if (v20(ObjectType, v19) != 1) {
    goto LABEL_31;
  }
  OUTLINED_FUNCTION_139_7();
  uint64_t v48 = v21;
  uint64_t v22 = v20(v49, v19);
  if (!v22)
  {
    unint64_t v25 = 0xE700000000000000LL;
    OUTLINED_FUNCTION_139_7();
    uint64_t v47 = v26;
    goto LABEL_14;
  }

  uint64_t v23 = INPreferredCallProviderGetBackingType(v22);
  switch((_DWORD)v23)
  {
    case 4:
      char v24 = @"THIRD_PARTY_PROVIDER";
      break;
    case 3:
      char v24 = @"FACETIME_PROVIDER";
      break;
    case 2:
      char v24 = @"TELEPHONY_PROVIDER";
      break;
    default:
      char v24 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v23));
      goto LABEL_13;
  }

  uint64_t v27 = v24;
LABEL_13:
  uint64_t v28 = v24;
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  unint64_t v25 = v29;

LABEL_14:
  uint64_t v30 = (void *)ParameterResolutionRecord.intent.getter(v10);
  uint64_t v31 = OUTLINED_FUNCTION_63_18();

  if (v31)
  {
    uint64_t v32 = INPreferredCallProviderGetBackingType(v31);
    if ((_DWORD)v32 == 4)
    {
      uint64_t v34 = @"THIRD_PARTY_PROVIDER";
      uint64_t v36 = @"THIRD_PARTY_PROVIDER";
      unint64_t v33 = v25;
    }

    else
    {
      unint64_t v33 = v25;
      if ((_DWORD)v32 == 3)
      {
        uint64_t v34 = @"FACETIME_PROVIDER";
      }

      else
      {
        if ((_DWORD)v32 != 2)
        {
          uint64_t v34 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v32));
          goto LABEL_24;
        }

        uint64_t v34 = @"TELEPHONY_PROVIDER";
      }

      uint64_t v37 = v34;
    }

void @nonobjc INStartCallIntent.contacts.getter()
{
}

void CallingIntentNeedsValueFlowStrategy.updateContactsInIntent(callingIntent:contacts:multicardinalIndex:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t ObjectType = swift_getObjectType(a1);
  uint64_t v11 = *(void *)(*(void *)(a2 + 8) + 8LL);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t v13 = v12(ObjectType, v11);
  if (!v13)
  {
LABEL_35:
    OUTLINED_FUNCTION_18_7();
    return;
  }

  uint64_t v14 = v13;
  if (!((unint64_t)v13 >> 62))
  {
LABEL_23:
    OUTLINED_FUNCTION_18_7();
    swift_bridgeObjectRelease();
    return;
  }

  if (v13 >= 0) {
    v13 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v13)) {
    goto LABEL_23;
  }
LABEL_4:
  uint64_t v52 = v12;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v14 & 0xC000000000000001LL) == 0, v14);
  if ((v14 & 0xC000000000000001LL) != 0) {
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v14);
  }
  else {
    id v15 = *(id *)(v14 + 32);
  }
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_62();
  if ((a5 & 1) != 0) {
    a4 = 0LL;
  }
  uint64_t v17 = &unk_42A000;
  if (!a3) {
    goto LABEL_29;
  }
  if (!((unint64_t)a3 >> 62))
  {
LABEL_29:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v31 = OUTLINED_FUNCTION_8_2(v30, 40LL);
    *(_OWORD *)(v31 + 16) = xmmword_31FE60;
    *(void *)(v31 + 32) = v16;
    uint64_t v54 = (void *)v31;
    specialized Array._endMutation()(v31, v32, v33, v34);
    unint64_t v25 = v54;
    unint64_t v35 = *(void (**)(uint64_t))(v11 + 16);
    id v36 = v16;
    uint64_t v37 = OUTLINED_FUNCTION_121_7();
    v35(v37);
    goto LABEL_30;
  }

  if (a3 >= 0) {
    uint64_t v28 = a3 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v28 = a3;
  }
  OUTLINED_FUNCTION_20_14();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  OUTLINED_FUNCTION_13_1();
  if (!v29) {
    goto LABEL_29;
  }
LABEL_11:
  uint64_t v54 = (void *)a3;
  uint64_t v18 = (os_log_s *)one-time initialization token for siriPhone;
  OUTLINED_FUNCTION_20_14();
  if (v18 != (os_log_s *)-1LL) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v19 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v19, (uint64_t)static Logger.siriPhone);
  os_log_type_t v20 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v50 = v16;
    uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    *(_DWORD *)uint64_t v21 = 134217984;
    uint64_t v53 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v21 + 4, v21 + 12);
    OUTLINED_FUNCTION_57_0( &dword_0,  v18,  v20,  "#CallingIntentNeedsValueFlowStrategy updating contact at multicardinalValueIndex : %ld",  v21);
    uint64_t v22 = (uint64_t)v21;
    uint64_t v16 = v50;
    OUTLINED_FUNCTION_0_2(v22);
  }

  uint64_t v17 = (void *)&unk_42A000;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v48 = a3;
    }
    else {
      uint64_t v48 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    id v49 = v16;
    OUTLINED_FUNCTION_20_14();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v48);
    OUTLINED_FUNCTION_13_1();
  }

  else
  {
    uint64_t v23 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8LL));
    id v24 = v16;
  }

  if (v23 < a4)
  {
    __break(1u);
  }

  else if ((a4 & 0x8000000000000000LL) == 0)
  {
    specialized Array.replaceSubrange<A>(_:with:)(a4, a4, (uint64_t)v16);
    unint64_t v25 = v54;
    uint64_t v26 = OUTLINED_FUNCTION_121_7();
    v27(v26);
LABEL_30:
    OUTLINED_FUNCTION_13_1();
    if (v17[107] != -1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v38 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
    id v39 = a1;
    uint64_t v40 = (os_log_s *)OUTLINED_FUNCTION_129_7();
    os_log_type_t v42 = static os_log_type_t.debug.getter(v40, v41);
    if (os_log_type_enabled(v40, v42))
    {
      os_log_type_t v43 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v51 = v16;
      uint64_t v44 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v54 = (void *)v44;
      *(_DWORD *)os_log_type_t v43 = 136315138;
      uint64_t v53 = v52(ObjectType, v11);
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
      uint64_t v46 = String.init<A>(describing:)(&v53, v45);
      uint64_t v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, (uint64_t *)&v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v43 + 4, v43 + 12);

      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v40, v42, "#CallingIntentNeedsValueFlowStrategy updated contacts: %s", v43);
      OUTLINED_FUNCTION_17_0(v44);
      OUTLINED_FUNCTION_0_2(v44);
      OUTLINED_FUNCTION_0_2((uint64_t)v43);
    }

    else
    {
    }

    goto LABEL_35;
  }

  __break(1u);
}

Swift::Void __swiftcall INStartCallIntent.overwriteContacts(newContacts:)(Swift::OpaquePointer newContacts)
{
  v8[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  v8[0] = newContacts._rawValue;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = (__n128 *)swift_initStackObject(v2, &v7);
  OUTLINED_FUNCTION_65_3(inited, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_179();
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = v6;
  OUTLINED_FUNCTION_8_1();
  NSObject.update(with:at:)((uint64_t)v8, (uint64_t)inited);
  OUTLINED_FUNCTION_124_4();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  __swift_destroy_boxed_opaque_existential_1(v8);
}

uint64_t specialized _ContiguousArrayStorage.__deallocating_deinit()
{
  uint64_t v1 = OUTLINED_FUNCTION_34_3();
  return swift_deallocClassInstance(v1, v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  swift_arrayDestroy(v0 + 32, *(void *)(v0 + 16));
  uint64_t v1 = OUTLINED_FUNCTION_34_3();
  return swift_deallocClassInstance(v1, v2, v3);
}

{
  return specialized _ContiguousArrayStorage.__deallocating_deinit(&demangling cache variable for type metadata for UsoVocIdentifier);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  type metadata accessor for RRCandidate(0LL);
  OUTLINED_FUNCTION_129_4();
  swift_arrayDestroy( v0 + ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)),  *(void *)(v0 + 16));
  uint64_t v2 = OUTLINED_FUNCTION_34_3();
  return swift_deallocClassInstance(v2, v3, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  swift_arrayDestroy(v0 + 32, *(void *)(v0 + 16));
  uint64_t v1 = OUTLINED_FUNCTION_34_3();
  return swift_deallocClassInstance(v1, v2, v3);
}

id @nonobjc INStartCallIntent.preferredCallProvider.getter()
{
  return [v0 preferredCallProvider];
}

uint64_t CallingIntentNeedsValueFlowStrategy.executeCRR(siriKitIntent:nlIntent:resolveRecord:isNLv3Only:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_getAssociatedTypeWitness(255LL);
  uint64_t v2 = OUTLINED_FUNCTION_85_5();
  swift_getAssociatedConformanceWitness(v2, v3, v4);
  CallingIntentNeedsValueFlowStrategy.executeCRRDeprecated(siriKitIntent:nlIntent:resolveRecord:isNLv3Only:)();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  id v5 = v1;
  return v7(*(void *)(v0 + 16));
}

uint64_t CallingIntentNeedsValueFlowStrategy.executeCRR(siriKitIntent:nlIntent:resolveRecord:isNLv3Only:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(_BYTE *)(v5 + 56) = a4;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 48) = *v4;
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v6, v7, v8);
}

void CallingIntentNeedsValueFlowStrategy.executeCRRDeprecated(siriKitIntent:nlIntent:resolveRecord:isNLv3Only:)()
{
  uint64_t v2 = v0;
  char v4 = v3;
  uint64_t v73 = v6;
  uint64_t v74 = v5;
  uint64_t v75 = v7;
  uint64_t v9 = v8;
  uint64_t v10 = OUTLINED_FUNCTION_113_3();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v12 = *(void *)(type metadata accessor for Locale(0LL) - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  uint64_t v76 = v9;
  uint64_t v70 = v16;
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_107_10();
    uint64_t v17 = OUTLINED_FUNCTION_93_0();
    uint64_t v18 = OUTLINED_FUNCTION_70_9(v17);
    uint64_t v69 = OUTLINED_FUNCTION_88_15(v18);
    uint64_t v19 = v2 + 3;
    uint64_t v67 = (uint64_t)(v2 + 3);
    uint64_t v20 = v2[6];
    uint64_t v21 = v2[7];
    OUTLINED_FUNCTION_42(v19);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 8))(v82, v20, v21);
    uint64_t v22 = v83;
    uint64_t v23 = v84;
    OUTLINED_FUNCTION_42(v82);
    dispatch thunk of DeviceState.siriLocale.getter(v22, v23);
    ParameterResolutionRecord.parameter.getter(v18);
    uint64_t v24 = OUTLINED_FUNCTION_76_17();
    uint64_t v26 = v25 & 1;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v10);
    uint64_t ObjectType = swift_getObjectType(v76);
    specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)( v76,  v75,  v69,  v15,  v67,  v24,  v26,  ObjectType,  v74,  v55,  v56,  v58,  v60,  v62,  v63,  v65,  v67,  v69,  v70,  v73,  v74);
    OUTLINED_FUNCTION_22();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v71);
  }

  else
  {
    uint64_t v68 = v11;
    uint64_t v57 = v14 - v13;
    uint64_t v28 = v2[6];
    uint64_t v29 = v2[7];
    OUTLINED_FUNCTION_82(v2 + 3);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 56))(v28, v29);
    LOBYTE(v29) = OUTLINED_FUNCTION_30_24(v30);
    OUTLINED_FUNCTION_38_1();
    uint64_t v64 = swift_getObjectType(v9);
    uint64_t v31 = *(void *)(v75 + 32);
    uint64_t v32 = (void *)OUTLINED_FUNCTION_120_0();
    __swift_project_boxed_opaque_existential_1(v32, v33);
    uint64_t v66 = OUTLINED_FUNCTION_104(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 128));
    OUTLINED_FUNCTION_97_11();
    Swift::Bool v61 = PhoneCallNLIntent.isEmergencyContactCall()();
    OUTLINED_FUNCTION_107_10();
    uint64_t v34 = OUTLINED_FUNCTION_93_0();
    uint64_t v35 = OUTLINED_FUNCTION_70_9(v34);
    ParameterResolutionRecord.app.getter(v35);
    if ((v29 & 1) != 0)
    {
      OUTLINED_FUNCTION_79_11();
      uint64_t v36 = OUTLINED_FUNCTION_76_17();
      uint64_t v38 = v37 & 1;
      uint64_t v39 = OUTLINED_FUNCTION_81_16();
      static SiriKitEventSender.current.getter(v82, v39);
      uint64_t v40 = type metadata accessor for EmergencyContactResolution();
      uint64_t v41 = OUTLINED_FUNCTION_8_2(v40, 16LL);
      uint64_t v80 = type metadata accessor for ContactGroupResolver(0LL);
      __int128 v81 = &protocol witness table for ContactGroupResolver;
      os_log_type_t v42 = __swift_allocate_boxed_opaque_existential_1(&v77);
      ContactGroupResolver.init()(v42);
      OUTLINED_FUNCTION_118_4();
      uint64_t v43 = v64;
      specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)( v76,  v66,  v61,  v64,  v75,  (uint64_t)(v2 + 3),  v36,  v38,  (uint64_t)v82,  v41,  (uint64_t)&v77,  v64,  v64,  v66,  v68,  v10,  v70,  v73,  v74,  v75,  v76,  (uint64_t)v77,  v78,  v79,  v80);
      swift_bridgeObjectRelease();
      swift_release(v43);
      swift_release(v41);
      __swift_destroy_boxed_opaque_existential_1(&v77);
    }

    else
    {
      uint64_t v44 = v2[6];
      uint64_t v45 = v2[7];
      __swift_project_boxed_opaque_existential_1(v2 + 3, v44);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v45 + 8))(v82, v44, v45);
      uint64_t v46 = v83;
      uint64_t v47 = v84;
      __swift_project_boxed_opaque_existential_1(v82, v83);
      uint64_t v48 = v57;
      dispatch thunk of DeviceState.siriLocale.getter(v46, v47);
      OUTLINED_FUNCTION_79_11();
      uint64_t v49 = OUTLINED_FUNCTION_76_17();
      LOBYTE(v46) = v50 & 1;
      uint64_t v51 = OUTLINED_FUNCTION_81_16();
      static SiriKitEventSender.current.getter(&v77, v51);
      uint64_t v52 = type metadata accessor for EmergencyContactResolution();
      OUTLINED_FUNCTION_8_2(v52, 16LL);
      OUTLINED_FUNCTION_118_4();
      LOBYTE(v57) = v46;
      uint64_t v53 = v64;
      specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( v76,  v66,  v61,  v64,  v48,  v75,  (uint64_t)(v2 + 3),  v49,  v57,  (uint64_t)&v77,  v54,  v64,  v64,  v66,  v68,  v10,  v70,  v73,  v74,  v75,  v76,  v77,  v78,  v79,  v80);
      swift_bridgeObjectRelease();
      swift_release(v53);
      OUTLINED_FUNCTION_16_3();
      __swift_destroy_boxed_opaque_existential_1(&v77);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v48, v72);
    }
  }

  __swift_destroy_boxed_opaque_existential_1(v82);
  OUTLINED_FUNCTION_7_5();
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (swift_conformsToProtocol2(a2, a3)) {
    return a1;
  }
  else {
    return 0LL;
  }
}

id @nonobjc INStartCallIntent.destinationType.getter()
{
  return [v0 destinationType];
}

void INPerson.hasHandleValue.getter()
{
  id v1 = [v0 personHandle];
  if (v1)
  {
    outlined bridged method (ob) of @objc INPersonHandle.value.getter(v1, (SEL *)&selRef_value);
    unint64_t v3 = v2;
  }

  else
  {
    unint64_t v3 = 0LL;
  }

  specialized Optional<A>.isNilOrEmpty.getter((uint64_t)v1, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
}

Swift::Bool __swiftcall PhoneCallNLIntent.isDisplayNameEmergencyContact()()
{
  uint64_t v3 = *(void *)(OUTLINED_FUNCTION_51_4(v0, v1) + 16);
  if (!v3)
  {
    OUTLINED_FUNCTION_39();
    return 0;
  }

  OUTLINED_FUNCTION_47_11();
  while (1)
  {
    OUTLINED_FUNCTION_36_15();
    uint64_t v4 = v13;
    uint64_t v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 408))(v4, v5);
    if (!v7)
    {
      OUTLINED_FUNCTION_11_6(v6);
      goto LABEL_9;
    }

    if (v6 == 0xD000000000000011LL && v7 == 0x8000000000348E90LL) {
      break;
    }
    char v8 = OUTLINED_FUNCTION_49_2(v6, v7, 0xD000000000000011LL, 0x8000000000348E90LL);
    uint64_t v9 = OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_11_6(v9);
    if ((v8 & 1) != 0) {
      goto LABEL_14;
    }
LABEL_9:
    v2 += 40LL;
    if (!--v3)
    {
      OUTLINED_FUNCTION_2_12();
      return 0;
    }
  }

  uint64_t v11 = OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_11_6(v11);
LABEL_14:
  OUTLINED_FUNCTION_2_12();
  return 1;
}

  ;
}

void OUTLINED_FUNCTION_201_0()
{
}

uint64_t OUTLINED_FUNCTION_6_7(uint64_t a1, uint64_t a2)
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, a2, v2);
}

void OUTLINED_FUNCTION_201_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 184) = (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_276@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = (a1 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_201_2()
{
  return SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:completion:)();
}

uint64_t OUTLINED_FUNCTION_201_3()
{
  return swift_task_dealloc(*(void *)(v0 + 104));
}

uint64_t OUTLINED_FUNCTION_201_4(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_201_5(unint64_t a1)
{
  return specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 1);
}

uint64_t type metadata accessor for EmergencyContactResolution()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin26EmergencyContactResolution);
}

uint64_t type metadata accessor for ContactResolverConfigHashable(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for ContactResolverConfigHashable;
  if (!type metadata singleton initialization cache for ContactResolverConfigHashable) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContactResolverConfigHashable);
  }
  return result;
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)( uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (agent: UsoEntity_common_Agent, person: UsoEntity_common_Person));
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (agent: UsoEntity_common_Agent, contactRole: PhoneCallContactRole));
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 32 * a1 + 32;
  unint64_t v7 = a3 + 32 * v4;
  if (v6 >= v7 || v6 + 32 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ());
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 48 * a1 + 32;
  unint64_t v7 = a3 + 48 * v4;
  if (v6 >= v7 || v6 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const char *v10;
  uint64_t v11;
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t v10 = "UnsafeMutablePointer.initialize with negative count";
    uint64_t v11 = 51LL;
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t v10 = "UnsafeMutablePointer.initialize overlapping range";
  uint64_t v11 = 49LL;
LABEL_11:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v10,  v11,  2LL,  "Swift/UnsafePointer.swift",  25LL);
  __break(1u);
  return result;
}

void specialized _ArrayBuffer._copyContents(subRange:initializing:)( uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
    goto LABEL_11;
  }

  OUTLINED_FUNCTION_30_7(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_34_9();
  if (v7) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = v6 > a3;
  }
  if (!v8)
  {
    OUTLINED_FUNCTION_86_2();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_26_1();
    return;
  }

  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_63_2();
LABEL_11:
  OUTLINED_FUNCTION_5_15(v9, v10, v11, v12, v13, v14, v15);
  __break(1u);
}

uint64_t specialized _ArrayBuffer._copyContents(subRange:initializing:)( uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
    goto LABEL_11;
  }

  unint64_t v7 = a4 + 40 * a1 + 32;
  unint64_t v8 = a3 + 40 * v5;
  if (v7 >= v8 || v7 + 40 * v5 <= a3)
  {
    OUTLINED_FUNCTION_30_7(a1, a2, a3, a4, a5);
    swift_arrayInitWithCopy(a3);
    OUTLINED_FUNCTION_39();
    return v8;
  }

  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_63_2();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_5_15(v11, v12, v13, v14, v15, v16, v17);
  __break(1u);
  return result;
}

void outlined bridged method (pb) of @objc INIntent.intentId.getter(void *a1)
{
}

uint64_t outlined init with copy of ContactHandleTypePreference?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactHandleTypePreference?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ContactHandleTypePreference?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactHandleTypePreference?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PhoneSelfPerformanceLogger()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin26PhoneSelfPerformanceLogger);
}

uint64_t PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)( void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  type metadata accessor for UUID(0LL);
  __chkstk_darwin();
  *(_BYTE *)(v5 + 88) = 0;
  outlined init with copy of SignalProviding((uint64_t)a1, v5 + 16);
  *(_DWORD *)(v5 + 56) = a2;
  *(void *)(v5 + 64) = a3;
  *(void *)(v5 + 72) = a4;
  unint64_t v10 = type metadata accessor for SISchemaUUID();
  UUID.init()(v10);
  *(void *)(v5 + 80) = SISchemaUUID.__allocating_init(nsuuid:)();
  PhoneSelfPerformanceLogger.createAndLogStartEvent()();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

id SISchemaUUID.__allocating_init(nsuuid:)()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v2 = [v0 initWithNSUUID:isa];

  uint64_t v3 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_0(v3);
  return v2;
}

void PhoneSelfPerformanceLogger.createAndLogStartEvent()()
{
  id v1 = [objc_allocWithZone(FLOWSchemaFLOWDomainExecutionStarted) init];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = v0[14];
    [v1 setDomainExecutionType:v3];
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v4 = OUTLINED_FUNCTION_15_1();
    uint64_t v5 = OUTLINED_FUNCTION_4_23(v4, (uint64_t)static Logger.siriPhone);
    unint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
    if (os_log_type_enabled(v6, v8))
    {
      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v10 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v32 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v11 = FLOWSchemaFLOWDomainExecutionType.description.getter(v3);
      uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v9 + 4, v9 + 12);
      OUTLINED_FUNCTION_0_3();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v6, v8, "#PhoneSelfPerformanceLogger Registered start event for %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1LL);
      OUTLINED_FUNCTION_0_2(v10);
      OUTLINED_FUNCTION_0_2((uint64_t)v9);
    }

    else
    {

      OUTLINED_FUNCTION_0_3();
    }

    OUTLINED_FUNCTION_14_59((uint64_t)v2, 0);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v13 = OUTLINED_FUNCTION_15_1();
    uint64_t v14 = OUTLINED_FUNCTION_4_23(v13, (uint64_t)static Logger.siriPhone);
    Logger.logObject.getter(v14);
    os_log_type_t v15 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_29_4(v15))
    {
      uint64_t v16 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v17 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v18 = OUTLINED_FUNCTION_4_85(4.8149e-34);
      uint64_t v21 = OUTLINED_FUNCTION_12_72(v18, v19, v20);
      OUTLINED_FUNCTION_18_15(v21, v22, v23, v24, v25, v26, v27, v28, v31, v17);
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_5_82(&dword_0, v29, v30, "#PhoneSelfPerformanceLogger Failed to create start event for %s");
      OUTLINED_FUNCTION_9_68();
      OUTLINED_FUNCTION_0_2(v17);
      OUTLINED_FUNCTION_0_2(v16);
    }

    else
    {

      OUTLINED_FUNCTION_0_3();
    }
  }

void PhoneSelfPerformanceLogger.logEvent(_:eventType:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  oslog = (os_log_s *)[objc_allocWithZone(FLOWSchemaFLOWDomainExecutionContext) init];
  if (!oslog)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v9 = OUTLINED_FUNCTION_15_1();
    uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    oslog = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      unint64_t v12 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *unint64_t v12 = 0;
      OUTLINED_FUNCTION_11_69(&dword_0, oslog, v13, "#PhoneSelfPerformanceLogger Failed to create execution context");
      OUTLINED_FUNCTION_0_2((uint64_t)v12);
    }

    goto LABEL_30;
  }

  uint64_t v5 = objc_opt_self(&OBJC_CLASS___FLOWSchemaFLOWDomainExecutionStarted);
  uint64_t v6 = OUTLINED_FUNCTION_33_4(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    os_log_type_t v8 = &selRef_setStartedOrChanged_;
  }

  else
  {
    uint64_t v14 = objc_opt_self(&OBJC_CLASS___FLOWSchemaFLOWDomainExecutionFailed);
    uint64_t v15 = OUTLINED_FUNCTION_33_4(v14);
    if (v15)
    {
      uint64_t v7 = v15;
      os_log_type_t v8 = &selRef_setFailed_;
    }

    else
    {
      uint64_t v16 = objc_opt_self(&OBJC_CLASS___FLOWSchemaFLOWDomainExecutionEnded);
      uint64_t v17 = OUTLINED_FUNCTION_33_4(v16);
      if (!v17) {
        goto LABEL_13;
      }
      uint64_t v7 = v17;
      os_log_type_t v8 = &selRef_setEnded_;
    }
  }

  objc_msgSend(oslog, *v8, v7);
LABEL_13:
  id v18 = [objc_allocWithZone(FLOWSchemaFLOWClientEvent) init];
  if (!v18)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = OUTLINED_FUNCTION_15_1();
    uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    os_log_type_t v42 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v37))
    {
      uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      _WORD *v38 = 0;
      OUTLINED_FUNCTION_11_69(&dword_0, v42, v39, "#PhoneSelfPerformanceLogger Failed to create client event");
      OUTLINED_FUNCTION_0_2((uint64_t)v38);

      return;
    }

    goto LABEL_30;
  }

  unint64_t v19 = v18;
  -[os_log_s setContextId:](oslog, "setContextId:", *(void *)(v3 + 80));
  [v19 setFlowDomainExecutionContext:oslog];
  type metadata accessor for SiriKitEvent(0LL);
  uint64_t v20 = *(void *)(v3 + 64);
  uint64_t v21 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  id v22 = v19;
  uint64_t v23 = SiriKitEvent.__allocating_init(taskType:domainPerfContext:_:)( v20,  v21,  v22,  INStartAudioCallIntent.overwriteCallGroups(newCallGroups:),  0LL);
  uint64_t v24 = *(void *)(v3 + 40);
  uint64_t v25 = *(void *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), v24);
  dispatch thunk of SiriKitEventSending.send(_:)(v23, v24, v25);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v26 = OUTLINED_FUNCTION_15_1();
  uint64_t v27 = OUTLINED_FUNCTION_4_23(v26, (uint64_t)static Logger.siriPhone);
  uint64_t v28 = (void *)Logger.logObject.getter(v27);
  os_log_type_t v30 = static os_log_type_t.debug.getter(v28, v29);
  if (!os_log_type_enabled((os_log_t)v28, v30))
  {

    swift_release(v23);
    OUTLINED_FUNCTION_0_3();

LABEL_30:
    return;
  }

  uint64_t v31 = OUTLINED_FUNCTION_7_0(22LL);
  uint64_t v32 = OUTLINED_FUNCTION_7_0(64LL);
  uint64_t v45 = v32;
  *(_DWORD *)uint64_t v31 = 136315394;
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v33 = 0x6572756C696166LL;
    }
    else {
      uint64_t v33 = 6581861LL;
    }
    if (a2 == 1) {
      unint64_t v34 = 0xE700000000000000LL;
    }
    else {
      unint64_t v34 = 0xE300000000000000LL;
    }
  }

  else
  {
    unint64_t v34 = 0xE500000000000000LL;
    uint64_t v33 = 0x7472617473LL;
  }

  uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &v45);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v31 + 4, v31 + 12);
  swift_bridgeObjectRelease();
  *(_WORD *)(v31 + 12) = 2080;
  uint64_t v40 = FLOWSchemaFLOWDomainExecutionType.description.getter(*(unsigned int *)(v3 + 56));
  uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &v45);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v31 + 14, v31 + 22);
  OUTLINED_FUNCTION_0_3();
  swift_bridgeObjectRelease();
  _os_log_impl( &dword_0,  (os_log_t)v28,  v30,  "#PhoneSelfPerformanceLogger successfully sent %s performance event for %s",  (uint8_t *)v31,  0x16u);
  swift_arrayDestroy(v32, 2LL);
  OUTLINED_FUNCTION_0_2(v32);
  OUTLINED_FUNCTION_0_2(v31);

  swift_release(v23);
}

void SharedGlobals.phoneContactResolver.getter(uint64_t a1@<X8>)
{
}

uint64_t protocol witness for SiriKitContactResolverProtocol.resolveContacts(queries:configHash:) in conformance PhoneContactResolver()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192LL))();
}

os_log_s *PhoneContactResolver.resolveContacts(queries:configHash:)(uint64_t a1, char *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  type metadata accessor for ContactResolverConfigHashable(0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  os_log_type_t v11 = (char *)&v62 - v10;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v62 - v12;
  uint64_t v14 = PhoneContactResolver.get(config:queries:)(a2, a1);
  if (v14)
  {
    uint64_t v15 = (os_log_s *)v14;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
    outlined init with copy of ContactResolverConfigHashable((uint64_t)a2, (uint64_t)v13);
    uint64_t v17 = OUTLINED_FUNCTION_9_46();
    id v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
    if (os_log_type_enabled(v18, v20))
    {
      uint64_t v21 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v66 = v3;
      uint64_t v22 = v21;
      uint64_t v65 = (char *)OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v69 = v65;
      *(_DWORD *)uint64_t v22 = 136315394;
      OUTLINED_FUNCTION_17_34();
      uint64_t v23 = OUTLINED_FUNCTION_6_1();
      uint64_t v24 = OUTLINED_FUNCTION_20_26(v23);
      OUTLINED_FUNCTION_19_25();
      uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, (unint64_t)v15, (uint64_t *)&v69);
      OUTLINED_FUNCTION_14_0((uint64_t)&v67, (uint64_t)&v68, v25, v22 + 12);
      OUTLINED_FUNCTION_14_19();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v26 = ContactResolverConfigHashable.description.getter();
      uint64_t v67 = OUTLINED_FUNCTION_8_42(v26, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v22 + 14, v22 + 22);
      OUTLINED_FUNCTION_62();
      outlined destroy of ContactResolverConfigHashable((uint64_t)v13);
      OUTLINED_FUNCTION_33_6( &dword_0,  v18,  v20,  "#PhoneContactResolver resolveContacts: reusing cached result for contactQuery:%s and config:%s.",  (uint8_t *)v22);
      uint64_t v28 = (uint64_t)v65;
      OUTLINED_FUNCTION_42_2((uint64_t)v65);
      OUTLINED_FUNCTION_0_2(v28);
      OUTLINED_FUNCTION_0_2(v22);
    }

    else
    {
      OUTLINED_FUNCTION_14_19();
      outlined destroy of ContactResolverConfigHashable((uint64_t)v13);
    }
  }

  else
  {
    uint64_t v65 = v9;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v29 = type metadata accessor for Logger(0LL);
    uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
    outlined init with copy of ContactResolverConfigHashable((uint64_t)a2, (uint64_t)v11);
    uint64_t v31 = OUTLINED_FUNCTION_9_46();
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.debug.getter(v15, v32);
    if (os_log_type_enabled(v15, v33))
    {
      uint64_t v34 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v63 = (os_log_s *)v30;
      uint64_t v35 = v34;
      uint64_t v62 = (char *)OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v69 = v62;
      *(_DWORD *)uint64_t v35 = 136315394;
      OUTLINED_FUNCTION_17_34();
      uint64_t v36 = OUTLINED_FUNCTION_6_1();
      uint64_t v37 = OUTLINED_FUNCTION_20_26(v36);
      uint64_t v64 = v2;
      uint64_t v38 = v37;
      uint64_t v66 = v3;
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, (uint64_t *)&v69);
      OUTLINED_FUNCTION_14_0((uint64_t)&v67, (uint64_t)&v68, v41, v35 + 12);
      OUTLINED_FUNCTION_14_19();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v42 = ContactResolverConfigHashable.description.getter();
      uint64_t v67 = OUTLINED_FUNCTION_8_42(v42, v43);
      uint64_t v5 = v64;
      uint64_t v4 = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v35 + 14, v35 + 22);
      OUTLINED_FUNCTION_62();
      outlined destroy of ContactResolverConfigHashable((uint64_t)v11);
      OUTLINED_FUNCTION_33_6( &dword_0,  v15,  v33,  "#PhoneContactResolver resolveContacts: no cached result for contactQuery:%s and config:%s.",  (uint8_t *)v35);
      uint64_t v44 = (uint64_t)v62;
      OUTLINED_FUNCTION_42_2((uint64_t)v62);
      OUTLINED_FUNCTION_0_2(v44);
      OUTLINED_FUNCTION_0_2(v35);
    }

    else
    {
      OUTLINED_FUNCTION_14_19();
      outlined destroy of ContactResolverConfigHashable((uint64_t)v11);
    }

    __chkstk_darwin();
    *(&v62 - 4) = (char *)v5;
    *(&v62 - 3) = (char *)a1;
    *(&v62 - 2) = a2;
    uint64_t v45 = PhoneContactResolver.signpost(configHash:around:)( (uint64_t)a2,  (uint64_t)partial apply for closure #1 in PhoneContactResolver.resolveContacts(queries:configHash:),  (uint64_t)(&v62 - 6));
    if (!v4)
    {
      uint64_t v15 = (os_log_s *)v45;
      uint64_t v46 = (uint64_t)v65;
      outlined init with copy of ContactResolverConfigHashable((uint64_t)a2, (uint64_t)v65);
      uint64_t v47 = OUTLINED_FUNCTION_9_46();
      uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
      os_log_type_t v50 = static os_log_type_t.debug.getter(v48, v49);
      int v51 = v50;
      if (os_log_type_enabled(v48, v50))
      {
        uint64_t v52 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v53 = OUTLINED_FUNCTION_7_0(64LL);
        uint64_t v64 = v5;
        uint64_t v54 = v53;
        uint64_t v69 = (char *)v53;
        *(_DWORD *)uint64_t v52 = 136315394;
        LODWORD(v62) = v51;
        OUTLINED_FUNCTION_17_34();
        uint64_t v55 = OUTLINED_FUNCTION_6_1();
        uint64_t v56 = OUTLINED_FUNCTION_20_26(v55);
        uint64_t v66 = 0LL;
        uint64_t v57 = v56;
        uint64_t v63 = v15;
        OUTLINED_FUNCTION_19_25();
        uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, (unint64_t)v15, (uint64_t *)&v69);
        OUTLINED_FUNCTION_14_0((uint64_t)&v67, (uint64_t)&v68, v58, v52 + 12);
        OUTLINED_FUNCTION_14_19();
        swift_bridgeObjectRelease();
        *(_WORD *)(v52 + 12) = 2080;
        uint64_t v59 = ContactResolverConfigHashable.description.getter();
        uint64_t v67 = OUTLINED_FUNCTION_8_42(v59, v60);
        uint64_t v15 = v63;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v52 + 14, v52 + 22);
        OUTLINED_FUNCTION_62();
        outlined destroy of ContactResolverConfigHashable(v46);
        OUTLINED_FUNCTION_33_6( &dword_0,  v48,  (os_log_type_t)v62,  "#PhoneContactResolver resolveContacts: caching result from CRR for contactQuery:%s and config:%s.",  (uint8_t *)v52);
        OUTLINED_FUNCTION_42_2(v54);
        OUTLINED_FUNCTION_0_2(v54);
        OUTLINED_FUNCTION_0_2(v52);
      }

      else
      {
        OUTLINED_FUNCTION_14_19();
        outlined destroy of ContactResolverConfigHashable(v46);
      }

      PhoneContactResolver.update(config:queries:resolvedSiriKitContacts:)();
    }
  }

  return v15;
}

uint64_t PhoneContactResolver.get(config:queries:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_25_0(v2 + 16, (uint64_t)v17, 0LL);
  uint64_t v6 = *(void *)(v2 + 16);
  if (!*(void *)(v6 + 16)) {
    return 0LL;
  }
  OUTLINED_FUNCTION_6_3();
  unint64_t v7 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  if ((v8 & 1) == 0)
  {
    OUTLINED_FUNCTION_62();
    return 0LL;
  }

  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_62();
  uint64_t v10 = swift_bridgeObjectRetain();
  char v11 = specialized static Array<A>.== infix(_:_:)(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 0LL;
  }
  OUTLINED_FUNCTION_25_0(v3 + 24, (uint64_t)&v16, 0LL);
  uint64_t v12 = *(void *)(v3 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(a2, v12);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

void ContactResolverConfigHashable.hash(into:)()
{
  uint64_t v2 = v1;
  uint64_t v3 = OUTLINED_FUNCTION_12_84();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v7 = v6 - v5;
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_14_72();
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_14_72();
  OUTLINED_FUNCTION_23_5();
  uint64_t v8 = OUTLINED_FUNCTION_7_101();
  uint64_t v9 = OUTLINED_FUNCTION_94_4();
  uint64_t v10 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type Locale and conformance Locale,  (uint64_t (*)(uint64_t))&type metadata accessor for Locale,  (uint64_t)&protocol conformance descriptor for Locale);
  dispatch thunk of Hashable.hash(into:)(v2, v9, v10);
  uint64_t v11 = *(void *)(v0 + *(int *)(v8 + 28));
  OUTLINED_FUNCTION_6_3();
  specialized Array<A>.hash(into:)(v2, v11);
  uint64_t v12 = swift_bridgeObjectRelease();
  ContactResolverConfig.actionType.getter(v12);
  uint64_t v13 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type ContactActionType and conformance ContactActionType,  (uint64_t (*)(uint64_t))&type metadata accessor for ContactActionType,  (uint64_t)&protocol conformance descriptor for ContactActionType);
  dispatch thunk of Hashable.hash(into:)(v2, v3, v13);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_7_5();
}

void specialized Array<A>.hash(into:)(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      swift_bridgeObjectRetain();
      String.hash(into:)(a1, v6, v7);
      swift_bridgeObjectRelease();
      v5 += 2;
      --v4;
    }

    while (v4);
  }

  OUTLINED_FUNCTION_16();
}

{
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::UInt v4 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    uint64_t v5 = type metadata accessor for ContactQuery(0LL);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    uint64_t v9 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type ContactQuery and conformance ContactQuery,  (uint64_t (*)(uint64_t))&type metadata accessor for ContactQuery,  (uint64_t)&protocol conformance descriptor for ContactQuery);
    do
    {
      dispatch thunk of Hashable.hash(into:)(a1, v5, v9);
      v7 += v8;
      --v4;
    }

    while (v4);
  }

  OUTLINED_FUNCTION_16();
}

uint64_t outlined init with copy of ContactResolverConfigHashable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactResolverConfigHashable(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void *initializeWithCopy for ContactResolverConfigHashable(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Locale(0LL);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = *(void *)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v15;
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  uint64_t v18 = type metadata accessor for ContactResolverConfig(0LL);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16LL);
  swift_bridgeObjectRetain(v15);
  v19(v16, v17, v18);
  return a1;
}

uint64_t outlined destroy of ContactResolverConfigHashable(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContactResolverConfigHashable(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t destroy for ContactResolverConfigHashable(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Locale(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  swift_bridgeObjectRelease(*(void *)(a1 + a2[7]));
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for ContactResolverConfig(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
}

uint64_t protocol witness for SiriKitContactResolverProtocol.resolveContacts(queries:configHash:) in conformance SiriKitContactResolver( uint64_t a1, uint64_t a2)
{
  return SiriKitContactResolver.resolveContacts(queries:configHash:)(a1, a2);
}

uint64_t SiriKitContactResolver.resolveContacts(queries:configHash:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactResolverConfigHashable(0LL);
  return SiriKitContactResolver.resolveContacts(queries:config:)(a1, a2 + *(int *)(v4 + 32));
}

uint64_t PhoneContactResolver.update(config:queries:resolvedSiriKitContacts:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_55_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

  ;
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return _CocoaArrayWrapper.endIndex.getter(v0);
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  return v0 + 32;
}

  ;
}

uint64_t OUTLINED_FUNCTION_23_3()
{
  return swift_task_dealloc(v0);
}

uint64_t OUTLINED_FUNCTION_27_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(v3, v4, a3);
}

void OUTLINED_FUNCTION_39_0(void *a1@<X8>)
{
  *a1 = *v1;
}

void OUTLINED_FUNCTION_27_7()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_28()
{
  return swift_task_alloc(v0);
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_task_dealloc(v0);
}

BOOL OUTLINED_FUNCTION_63(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_90()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return swift_task_dealloc(v0);
}

uint64_t OUTLINED_FUNCTION_27_8@<X0>(void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  *a1 = v3;
  a1[1] = a2;
  return a3;
}

  ;
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return type metadata accessor for CATOption(0LL);
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return type metadata accessor for Input(0LL);
}

uint64_t OUTLINED_FUNCTION_17_7@<X0>(uint64_t a1@<X8>)
{
  return outlined destroy of SpeakableString?(v1 + a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_27_9(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return _CocoaArrayWrapper.endIndex.getter(v0);
}

id OUTLINED_FUNCTION_27_10@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_27_11@<X0>(void *a1@<X8>)
{
  uint64_t v2 = a1[1];
  void *v1 = *a1;
  v1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t OUTLINED_FUNCTION_29_3()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return swift_retain(v0);
}

BOOL OUTLINED_FUNCTION_29_4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_27_12()
{
}

uint64_t OUTLINED_FUNCTION_43_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_92(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

  ;
}

void OUTLINED_FUNCTION_27_14()
{
}

uint64_t OUTLINED_FUNCTION_27_15()
{
  return 0x746E65746E69LL;
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  return swift_release_n(v0, 2LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_9_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

void OUTLINED_FUNCTION_27_17()
{
  v0._uint64_t countAndFlagsBits = 32LL;
  v0._object = (void *)0xE100000000000000LL;
  String.append(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_27_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, v5, v4, a4);
}

void OUTLINED_FUNCTION_27_19()
{
}

void OUTLINED_FUNCTION_27_20(unint64_t *a1)
{
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return type metadata accessor for StartCallCATsSimple(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_27_21( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  return outlined init with copy of SignalProviding(v7, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_68_1(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_27_22( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *uint64_t v15 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v15, a15, v17, v16);
}

void OUTLINED_FUNCTION_40_0(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_27_23(void *a1)
{
  return v1;
}

uint64_t OUTLINED_FUNCTION_27_24(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(_BYTE *)(result + 24) = v2 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_25@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t OUTLINED_FUNCTION_27_26()
{
  return 0x746E65636572LL;
}

uint64_t OUTLINED_FUNCTION_27_27(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_27_28()
{
  uint64_t v1 = *(void *)(v0 - 104);
  uint64_t v2 = *(void *)(v0 - 96);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 128), v1);
  return dispatch thunk of DeviceState.siriLocale.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_27_29()
{
  return type metadata accessor for UsoTask_update_common_PhoneCall(0LL);
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 48);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 56) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_27_30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:)( a1,  a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL,  a3);
}

uint64_t OUTLINED_FUNCTION_27_31(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 272));
}

uint64_t OUTLINED_FUNCTION_27_32(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

void *OUTLINED_FUNCTION_27_33()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_27_34()
{
  return __swift_mutable_project_boxed_opaque_existential_1(v0, *(void *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return swift_release(*(void *)(v0 + 1376));
}

uint64_t OUTLINED_FUNCTION_8_7(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_27_35()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 184) + 8LL))( *(void *)(v0 - 120),  *(void *)(v0 - 176));
}

void OUTLINED_FUNCTION_27_36()
{
}

uint64_t OUTLINED_FUNCTION_27_37(uint64_t a1, uint64_t a2)
{
  return swift_getWitnessTable(v2, a2);
}

void OUTLINED_FUNCTION_27_38(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_27_39()
{
  return swift_getEnumCaseMultiPayload(v0, v1);
}

uint64_t OUTLINED_FUNCTION_27_40()
{
  return Logger.logObject.getter();
}

NSString OUTLINED_FUNCTION_27_41()
{
  return String._bridgeToObjectiveC()();
}

uint64_t OUTLINED_FUNCTION_27_42(uint64_t a1)
{
  v2[6] = v1;
  v2[9] = a1;
  v2[10] = 0x746E65746E69LL;
  v2[11] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_27_43(uint64_t a1)
{
  return String.hash(into:)(a1, 0x6576697463416F6ELL, 0xEC0000006C6C6143LL);
}

uint64_t OUTLINED_FUNCTION_27_44(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_60(uint64_t a1)
{
  v1[3] = a1;
  void *v1 = v2;
  return v2;
}

void *OUTLINED_FUNCTION_27_45@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 168) = a1;
  return __swift_allocate_boxed_opaque_existential_1((void *)(v1 - 200));
}

uint64_t OUTLINED_FUNCTION_47_1(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v1, v2);
}

void OUTLINED_FUNCTION_27_46()
{
}

uint64_t OUTLINED_FUNCTION_27_47(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(v1 - 240);
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 168), a1 + 24);
  *(void *)(a1 + 64) = *(void *)(v1 - 248);
  return swift_retain();
}

  ;
}

uint64_t OUTLINED_FUNCTION_27_49()
{
  return String.init<A>(describing:)(v1 - 168, v0);
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:))();
}

uint64_t OUTLINED_FUNCTION_27_50()
{
  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_27_51(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_27_52()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_27_54@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_55()
{
  return swift_release(*(void *)(v0 + 136));
}

uint64_t OUTLINED_FUNCTION_11_2(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_27_56(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_27_57(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_27_60@<X0>(uint64_t a1@<X8>)
{
  return outlined init with take of SpeakableString?(v2, v1 + a1);
}

  ;
}

id OUTLINED_FUNCTION_27_62()
{
  return [v1 *(SEL *)(v0 + 2568)];
}

uint64_t OUTLINED_FUNCTION_27_63()
{
  return outlined init with copy of InputOrigin?(v0, v2);
}

uint64_t OUTLINED_FUNCTION_27_64(uint64_t result)
{
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_65()
{
  return ((uint64_t (*)(void))NonTerminalOntologyNode.init(name:multicardinal:childNodes:))();
}

uint64_t OUTLINED_FUNCTION_27_66()
{
  return v2(v1, v0);
}

double OUTLINED_FUNCTION_21_1@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_4(uint64_t a1)
{
  return CodableAceObject.wrappedValue.setter(v1, a1);
}

uint64_t OUTLINED_FUNCTION_15_5( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.wrappedValue.setter(&a9, a1);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return swift_task_dealloc(*(void *)(v0 + 192));
}

uint64_t OUTLINED_FUNCTION_21_4@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return swift_task_dealloc(v0);
}

uint64_t OUTLINED_FUNCTION_21_5(uint64_t a1)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v1, (uint64_t *)(v2 - 80));
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return swift_task_dealloc(v0);
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  return swift_release(*v0);
}

uint64_t OUTLINED_FUNCTION_21_7(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL);
  return v1 + ((v2 + 32) & ~v2);
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_21_8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

Swift::Int OUTLINED_FUNCTION_33_3(Swift::OpaquePointer a1, uint64_t a2)
{
  uint64_t v3 = v2;
  return _findStringSwitchCase(cases:string:)(a1, *(Swift::String *)&a2);
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0, v1, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_22_4()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

  ;
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  return 6579297LL;
}

void OUTLINED_FUNCTION_21_12(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_21_13(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v5 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)va, va1, a2, v3 + 12);
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  return swift_retain_n(v0, 2LL);
}

void OUTLINED_FUNCTION_21_14(void *a1)
{
}

uint64_t OUTLINED_FUNCTION_21_15@<X0>(uint64_t a1@<X8>)
{
  return specialized UnsafeMutablePointer.assign(repeating:count:)(0LL, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t OUTLINED_FUNCTION_42_2(uint64_t a1)
{
  return swift_arrayDestroy(a1, 2LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_21_17()
{
  return type metadata accessor for UnsupportedFlowSearchCallHistoryParameters(0LL);
}

void OUTLINED_FUNCTION_9_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_21_18()
{
  if (v0) {
    uint64_t v2 = 1LL;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, v2, v1);
}

uint64_t OUTLINED_FUNCTION_95()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_21_19@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 40);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 48) = v0;
  return swift_task_dealloc(v5);
}

__n128 *OUTLINED_FUNCTION_7_9(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x656D614E707061LL;
  result[2].n128_u64[1] = 0xE700000000000000LL;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_21_21@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_21_22()
{
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(v1, v2);
  return swift_getDynamicType(v3, v2, 1LL);
}

uint64_t OUTLINED_FUNCTION_21_23()
{
  return dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)(v2, v3, v1, v0);
}

unint64_t OUTLINED_FUNCTION_21_24()
{
  return type metadata accessor for SAAceView();
}

_WORD *OUTLINED_FUNCTION_60_0(_WORD *result)
{
  char *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_25()
{
  return PhoneCallSlotNames.rawValue.getter(v0);
}

uint64_t OUTLINED_FUNCTION_12_4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_21_26@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a2 > 1, a1, 1LL);
}

uint64_t OUTLINED_FUNCTION_21_27@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_37_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_21_28(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_21_29()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter();
}

uint64_t OUTLINED_FUNCTION_3_6(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_21_31@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)(v2 + 96) = v1;
  *(void *)(v2 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a1;
  *(void *)(v2 + 128) = 0x43746E6572727563LL;
  *(void *)(v2 + 136) = 0xEB000000006C6C61LL;
  return 0LL;
}

void OUTLINED_FUNCTION_21_32( uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
}

void OUTLINED_FUNCTION_21_33(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = v2;
}

uint64_t OUTLINED_FUNCTION_3_7(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_97_1@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_13_8( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_21_35()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 + 19);
}

  ;
}

id OUTLINED_FUNCTION_21_37()
{
  *(_WORD *)(v1 + 22) = 2112;
  return v0;
}

void OUTLINED_FUNCTION_21_38()
{
}

uint64_t OUTLINED_FUNCTION_21_39(uint64_t a1, uint64_t a2)
{
  return String.hash(into:)(a1, a2, 0xE400000000000000LL);
}

void OUTLINED_FUNCTION_21_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t OUTLINED_FUNCTION_21_41(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000013LL, a2, a3);
}

uint64_t OUTLINED_FUNCTION_21_42(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0LL, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_21_43@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRetain(*(void *)(a1 + 8));
}

void *OUTLINED_FUNCTION_21_44()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 48));
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return v2(v0, v1);
}

void OUTLINED_FUNCTION_21_45()
{
  *(void *)(v0 - 144) = 0LL;
  *(void *)(v0 - 136) = 0xE000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_21_46()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_21_48()
{
  return outlined destroy of CommonDirectAction(v0);
}

uint64_t OUTLINED_FUNCTION_21_49()
{
  return swift_task_dealloc(*(void *)(v0 + 160));
}

id OUTLINED_FUNCTION_21_50@<X0>(void *a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_21_51()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
}

void OUTLINED_FUNCTION_21_52()
{
}

uint64_t OUTLINED_FUNCTION_21_53()
{
  return specialized == infix<A>(_:_:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_54(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_21_55()
{
  return v0(v1);
}

uint64_t OUTLINED_FUNCTION_21_56()
{
  uint64_t v2 = *(void *)(v1 - 96);
  uint64_t v3 = *(void *)(v1 - 88);
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 120), v2);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 16))(*(void *)(v1 - 192), v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_21_57()
{
  return type metadata accessor for InputOrigin(0LL);
}

uint64_t OUTLINED_FUNCTION_21_58@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v3 + (v2 & ~v1));
}

uint64_t OUTLINED_FUNCTION_21_59()
{
  return swift_arrayDestroy(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_21_60()
{
  return __swift_storeEnumTagSinglePayload(v0, 0LL, 1LL, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_21_62()
{
  return swift_task_dealloc(*(void *)(v0 + 544));
}

uint64_t OUTLINED_FUNCTION_21_63(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return String.hash(into:)(va, a2, 0xE700000000000000LL);
}

uint64_t outlined init with take of ContactResolverConfigHashable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactResolverConfigHashable(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t PhoneSelfPerformanceLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 89LL, 7LL);
}

uint64_t PhoneSelfPerformanceLogger.deinit()
{
  if ((*(_BYTE *)(v0 + 88) & 1) == 0) {
    PhoneSelfPerformanceLogger.createAndLogEndEventIfNoFailure()();
  }
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  swift_bridgeObjectRelease();

  return v0;
}

void PhoneSelfPerformanceLogger.createAndLogEndEventIfNoFailure()()
{
  id v2 = [objc_allocWithZone(FLOWSchemaFLOWDomainExecutionEnded) init];
  if (v2)
  {
    id v12 = v2;
    OUTLINED_FUNCTION_14_59((uint64_t)v2, 2);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v3 = OUTLINED_FUNCTION_15_1();
    uint64_t v4 = OUTLINED_FUNCTION_4_23(v3, (uint64_t)static Logger.siriPhone);
    Logger.logObject.getter(v4);
    os_log_type_t v5 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_29_4(v5))
    {
      uint64_t v6 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v7 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v14 = v7;
      uint64_t v8 = OUTLINED_FUNCTION_4_85(4.8149e-34);
      uint64_t v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, 12LL, v1);
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_5_82(&dword_0, v10, v11, "#PhoneSelfPerformanceLogger Failed to register end event for %s");
      OUTLINED_FUNCTION_9_68();
      OUTLINED_FUNCTION_0_2(v7);
      OUTLINED_FUNCTION_0_2(v6);
    }

    else
    {

      OUTLINED_FUNCTION_0_3();
    }
  }

void static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv4(phoneContext:resolvedSiriKitContacts:)( void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResolvedSiriKitContact(0LL);
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v28 - v8;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = OUTLINED_FUNCTION_15_1();
  uint64_t v34 = __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  os_log_type_t v11 = v34;
  id v12 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_10(v13))
  {
    uint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v14 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v12, v11, "#PhoneDomainContextMetricsUtils addContactRecipientTypeNLv4", v14);
    OUTLINED_FUNCTION_0_2((uint64_t)v14);
  }

  uint64_t v15 = *(void *)(a2 + 16);
  if (v15)
  {
    uint64_t v16 = (char *)(a2 + ((*(unsigned __int8 *)(v35 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80)));
    uint64_t v17 = *(void *)(v35 + 72);
    uint64_t v32 = *(uint64_t (**)(char *, char *, uint64_t))(v35 + 16);
    uint64_t v33 = v17;
    uint64_t v29 = a2;
    swift_bridgeObjectRetain();
    *(void *)&__int128 v18 = 67109120LL;
    __int128 v30 = v18;
    uint64_t v31 = a1;
    do
    {
      uint64_t v19 = v32;
      v32(v9, v16, v4);
      uint64_t v20 = v19(v7, v9, v4);
      uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint64_t)v7;
        uint64_t v24 = OUTLINED_FUNCTION_7_0(8LL);
        *(_DWORD *)uint64_t v24 = v30;
        uint64_t v25 = v9;
        int v26 = ResolvedSiriKitContact.personType.getter();
        OUTLINED_FUNCTION_22_34(v23);
        *(_DWORD *)(v24 + 4) = v26;
        unint64_t v9 = v25;
        _os_log_impl(&dword_0, v21, v22, "#PhoneDomainContextMetricsUtils personType : %d", (uint8_t *)v24, 8u);
        uint64_t v27 = v24;
        a1 = v31;
        uint64_t v7 = (char *)v23;
        OUTLINED_FUNCTION_0_2(v27);
      }

      else
      {
        OUTLINED_FUNCTION_22_34((uint64_t)v7);
      }

      [a1 addPersonType:ResolvedSiriKitContact.personType.getter()];
      OUTLINED_FUNCTION_22_34((uint64_t)v9);
      v16 += v33;
      --v15;
    }

    while (v15);
    swift_bridgeObjectRelease(v29);
  }

void *static ContactResolution.dedupeContacts(contacts:)(uint64_t a1)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  uint64_t v4 = (os_log_s *)__swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = swift_bridgeObjectRetain_n(a1, 2LL);
  Logger.logObject.getter(v5);
  os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_29_4(v6))
  {
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v8 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v19 = (void *)v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    uint64_t v10 = OUTLINED_FUNCTION_8_1();
    uint64_t v11 = Array.description.getter(v10, v9);
    unint64_t v13 = v12;
    OUTLINED_FUNCTION_39();
    uint64_t v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, (uint64_t *)&v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v7 + 4, v7 + 12);
    OUTLINED_FUNCTION_7_4(a1);
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_57_0(&dword_0, v4, v1, "#ContactResolution attempting to dedupe contacts: %s", v7);
    OUTLINED_FUNCTION_17_0(v8);
    OUTLINED_FUNCTION_0_2(v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  else
  {

    OUTLINED_FUNCTION_7_4(a1);
  }

  uint64_t v19 = &_swiftEmptySetSingleton;
  uint64_t v14 = OUTLINED_FUNCTION_8_1();
  uint64_t v15 = specialized _ArrayProtocol.filter(_:)(v14, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(void *a1)
{
  return outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(a1, (SEL *)&selRef_contactIdentifier);
}

uint64_t outlined bridged method (pb) of @objc SAUIConfirmationOption.label.getter(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v4;
}

void outlined bridged method (pb) of @objc INPerson.siriMatches.getter(void *a1)
{
  id v1 = [a1 siriMatches];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  }

  OUTLINED_FUNCTION_2();
}

unint64_t type metadata accessor for SISchemaUUID()
{
  unint64_t result = lazy cache variable for type metadata for SISchemaUUID;
  if (!lazy cache variable for type metadata for SISchemaUUID)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SISchemaUUID);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID);
  }

  return result;
}

void specialized _ArrayBuffer._consumeAndCreateNew()()
{
}

{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void specialized _ArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
}

char *specialized _ArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  *(void *)(a1 + 16),  0,  (char *)a1);
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_8_1();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0LL, v2, 0LL, a1);
}

uint64_t UnsetRelationshipTemplatesWrapper.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

void @nonobjc INStartCallIntent.callGroups.getter()
{
}

id CallingIntentNeedsValueFlowStrategy.mergePreviousIntentIntoCurrentOne(previousIntent:callingIntent:)( void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v4 = OUTLINED_FUNCTION_9_0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v5, AssociatedTypeWitness);
  uint64_t v7 = *(uint64_t (**)(void))(AssociatedConformanceWitness + 32);
  swift_checkMetadataState(0LL, AssociatedTypeWitness);
  uint64_t v8 = v7();
  uint64_t v9 = &unk_42A000;
  if (v8 != OUTLINED_FUNCTION_12_5() && !OUTLINED_FUNCTION_12_5())
  {
    uint64_t v10 = OUTLINED_FUNCTION_12_5();
    OUTLINED_FUNCTION_35_30( v10,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 112));
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v11 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
    id v12 = a1;
    unint64_t v13 = (os_log_s *)OUTLINED_FUNCTION_129_7();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_54_2(v13))
    {
      uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      *(_DWORD *)uint64_t v15 = 134217984;
      uint64_t v40 = OUTLINED_FUNCTION_12_5();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v15 + 4, v15 + 12);

      OUTLINED_FUNCTION_57_0( &dword_0,  v13,  v14,  "#CallingIntentNeedsValueFlowStrategy updated audio route to %ld from previous intent",  v15);
      uint64_t v16 = (uint64_t)v15;
      uint64_t v9 = (void *)&unk_42A000;
      OUTLINED_FUNCTION_0_2(v16);
    }

    else
    {
    }
  }

  uint64_t v17 = OUTLINED_FUNCTION_12_5();
  if (v17 != OUTLINED_FUNCTION_12_5() && !OUTLINED_FUNCTION_12_5())
  {
    uint64_t v18 = OUTLINED_FUNCTION_12_5();
    OUTLINED_FUNCTION_35_30( v18,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 120));
    uint64_t v19 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 8) + 16LL) + 8LL);
    uint64_t v20 = OUTLINED_FUNCTION_258();
    uint64_t v21 = v19(v20);
    OUTLINED_FUNCTION_35_30( v21,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 128));
    if (v9[107] != -1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    id v23 = a1;
    uint64_t v24 = (os_log_s *)OUTLINED_FUNCTION_129_7();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (OUTLINED_FUNCTION_54_2(v24))
    {
      uint64_t v26 = OUTLINED_FUNCTION_7_0(22LL);
      *(_DWORD *)uint64_t v26 = 134218240;
      uint64_t v40 = OUTLINED_FUNCTION_12_5();
      OUTLINED_FUNCTION_84_12(v40, v27, v28, v26 + 12, v29, v30, v31);
      *(_WORD *)(v26 + 1outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2048;
      uint64_t v32 = OUTLINED_FUNCTION_258();
      uint64_t v40 = v19(v32);
      OUTLINED_FUNCTION_84_12(v40, v33, v34, v26 + 22, v35, v36, v37);

      OUTLINED_FUNCTION_33_6( &dword_0,  v24,  v25,  "#CallingIntentNeedsValueFlowStrategy updated callCapability to:%ld and PreferredCallProvider to: %ld from previous intent",  (uint8_t *)v26);
      OUTLINED_FUNCTION_0_2(v26);
    }

    else
    {

      uint64_t v24 = (os_log_s *)v1;
    }
  }

  OUTLINED_FUNCTION_18_7();
  return v38;
}

id @nonobjc INStartCallIntent.audioRoute.getter()
{
  return [v0 audioRoute];
}

id @nonobjc INStartCallIntent.callCapability.getter()
{
  return [v0 callCapability];
}

uint64_t ContactNeedsValueGuardFlow.exitValue.getter@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = type metadata accessor for ContactNeedsValueGuardFlow.FlowState(0LL, v5, *(void *)(*v2 + 88), a1);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v10 = (unsigned __int8 *)(v8 - v9);
  uint64_t v11 = __chkstk_darwin();
  unint64_t v13 = (char *)&v22 - v12;
  (*(void (**)(uint64_t))(v4 + 128))(v11);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v6);
  if ((_DWORD)EnumCaseMultiPayload != 1) {
    goto LABEL_5;
  }
  (*(void (**)(unsigned __int8 *, char *, uint64_t))(v7 + 16))(v10, v13, v6);
  int v15 = *v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ExecutionPath.FallbackLocation, Parse));
  if (v15 != 2)
  {
    uint64_t v20 = OUTLINED_FUNCTION_4_3();
    uint64_t EnumCaseMultiPayload = OUTLINED_FUNCTION_14_9(v20);
LABEL_5:
    dispatch thunk of AnyValueFlow.exitValue.getter(EnumCaseMultiPayload);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }

  uint64_t v16 = enum case for PromptResult.cancelled<A>(_:);
  uint64_t v17 = type metadata accessor for IntentPromptAnswer(255LL, v5);
  uint64_t v18 = type metadata accessor for PromptResult(0LL, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104LL))(a2, v16, v18);
  uint64_t v19 = OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_14_9(v19);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
}

void partial apply for specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
}

{
  uint64_t v6;
  OUTLINED_FUNCTION_146_0( a1,  a2,  a3,  a4,  a5,  a6,  *(void *)(v6 + 16),  v6 + 24,  (uint64_t)&outlined read-only object #0 of specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:));
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v6;
  OUTLINED_FUNCTION_146_0( a1,  a2,  a3,  a4,  a5,  a6,  *(void *)(v6 + 16),  v6 + 24,  (uint64_t)&outlined read-only object #0 of specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:));
  OUTLINED_FUNCTION_120();
}

uint64_t specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v11 = a6;
  if ((specialized Sequence<>.contains(_:)(a6, a9) & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v16 = OUTLINED_FUNCTION_15_1();
    uint64_t v17 = (os_log_s *)OUTLINED_FUNCTION_12_1(v16, (uint64_t)static Logger.siriPhone);
    os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
    if (os_log_type_enabled(v17, v19))
    {
      uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v20 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v17,  v19,  "#PhoneCallFlowFactory makeAppResolutionFlowBeforeNextResolveFlowProducer: resolutionResultCode is needsDisambigu ation or needsConfirmation, don't start app resolution again",  v20);
      OUTLINED_FUNCTION_0_2((uint64_t)v20);
    }

    return 0LL;
  }

  else
  {
    uint64_t v115 = a4;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    swift_retain_n(a2, 2LL);
    id v23 = a3;
    swift_bridgeObjectRetain_n(a5, 2LL);
    id v24 = v23;
    os_log_type_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
    if (os_log_type_enabled(v25, v27))
    {
      uint64_t v101 = a8;
      uint64_t v28 = OUTLINED_FUNCTION_7_0(42LL);
      uint64_t v94 = OUTLINED_FUNCTION_7_0(96LL);
      v139[0] = v94;
      *(_DWORD *)uint64_t v28 = 136315906;
      uint64_t v108 = a7;
      uint64_t v29 = type metadata accessor for App(0LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App);
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v29, v30);
      uint64_t v39 = OUTLINED_FUNCTION_160_0( v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v94,  v101,  v108,  v115,  v121,  *((uint64_t *)&v121 + 1),  v122,  v123,  v124,  v125,  v126,  v127,  a2,  *((uint64_t *)&v128 + 1),  v129,  (uint64_t)v130,  (uint64_t)v131,  v132,  v133,  (uint64_t)v134,  v135,  *((uint64_t *)&v135 + 1),  v136,  v137,  v138,  v139[0]);
      uint64_t v46 = OUTLINED_FUNCTION_147( v39,  v40,  v41,  v28 + 12,  v42,  v43,  v44,  v45,  v95,  v102,  v109,  v116,  v121,  *((uint64_t *)&v121 + 1),  v122,  v123,  v124,  v125,  v126,  v127,  v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v46, v47, v28 + 4);
      OUTLINED_FUNCTION_165_0();
      uint64_t v48 = OUTLINED_FUNCTION_62();
      *(_WORD *)(v28 + 1outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2048;
      uint64_t v54 = OUTLINED_FUNCTION_147( v48,  v49,  v28 + 14,  v28 + 22,  v50,  v51,  v52,  v53,  v96,  v103,  v110,  v117,  v121,  *((uint64_t *)&v121 + 1),  v122,  v123,  v124,  v125,  v126,  v127,  v11);
      uint64_t v57 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, v55, v56);
      *(_WORD *)(v28 + 2outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2080;
      uint64_t v58 = INIntent.debugDescriptionLite.getter(v57);
      uint64_t v66 = OUTLINED_FUNCTION_160_0( v58,  v59,  v60,  v61,  v62,  v63,  v64,  v65,  v97,  v104,  v111,  v118,  v121,  *((uint64_t *)&v121 + 1),  v122,  v123,  v124,  v125,  v126,  v127,  v128,  *((uint64_t *)&v128 + 1),  v129,  (uint64_t)v130,  (uint64_t)v131,  v132,  v133,  (uint64_t)v134,  v135,  *((uint64_t *)&v135 + 1),  v136,  v137,  v138,  v139[0]);
      uint64_t v73 = OUTLINED_FUNCTION_147( v66,  v67,  v68,  v28 + 32,  v69,  v70,  v71,  v72,  v98,  v105,  v112,  v119,  v121,  *((uint64_t *)&v121 + 1),  v122,  v123,  v124,  v125,  v126,  v127,  v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v73, v74, v28 + 24);

      OUTLINED_FUNCTION_62();
      *(_WORD *)(v28 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v75 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v120, a5, v139);
      uint64_t v82 = OUTLINED_FUNCTION_147( v75,  v76,  v77,  v28 + 42,  v78,  v79,  v80,  v81,  v99,  v106,  v113,  v120,  v121,  *((uint64_t *)&v121 + 1),  v122,  v123,  v124,  v125,  v126,  v127,  v75);
      a7 = v114;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v82, v83, v28 + 34);
      swift_bridgeObjectRelease_n(a5, 3LL);
      _os_log_impl( &dword_0,  v25,  v27,  "#PhoneCallFlowFactory makeAppResolutionFlowBeforeNextResolveFlowProducer: app:%s resolutionResultCode:%ld intent :%s parameterName: %s ",  (uint8_t *)v28,  0x2Au);
      swift_arrayDestroy(v100, 3LL);
      OUTLINED_FUNCTION_0_2(v100);
      uint64_t v84 = v28;
      a8 = v107;
      OUTLINED_FUNCTION_0_2(v84);
    }

    else
    {

      swift_bridgeObjectRelease_n(a5, 2LL);
      OUTLINED_FUNCTION_165_0();
    }

    outlined init with copy of SharedGlobalsProviding(a8, (uint64_t)&v135);
    uint64_t v85 = one-time initialization token for instance;
    OUTLINED_FUNCTION_95();
    if (v85 != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    OUTLINED_FUNCTION_88_4(v139);
    uint64_t v86 = type metadata accessor for PhoneCallFeatureManager();
    uint64_t v87 = OUTLINED_FUNCTION_8_2(v86, 56LL);
    uint64_t v130 = &type metadata for PhoneCallFeatureFlags;
    uint64_t v131 = &protocol witness table for PhoneCallFeatureFlags;
    *(void *)&__int128 v128 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3FCA80, 192LL);
    OUTLINED_FUNCTION_88_4((void *)(v128 + 16));
    outlined init with take of AppSelectionSignalComponent(&v128, v87 + 16);
    outlined retain of PhoneCallFeatureFlags(v139);
    if (one-time initialization token for instance != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    uint64_t v88 = (ValueMetadata *)static ThirdPartyAnnotatedAppStore.instance;
    uint64_t v133 = type metadata accessor for ThirdPartyAnnotatedAppStore();
    uint64_t v134 = &protocol witness table for ThirdPartyAnnotatedAppStore;
    *(void *)&__int128 v128 = closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultAppExistsPredicate;
    *((void *)&v128 + 1) = 0LL;
    uint64_t v129 = v87;
    uint64_t v130 = v88;
    uint64_t v89 = type metadata accessor for AppResolutionBeforeResolveFlow(0LL);
    __int128 v90 = (void *)OUTLINED_FUNCTION_15_2(v89);
    outlined init with copy of AnnotatedAppFinder((uint64_t)&v128, (uint64_t)&v121);
    uint64_t v91 = specialized AppResolutionBeforeResolveFlow.init(previousTurnIntent:previouslyResolvedApp:sharedGlobals:appFinder:)( v24,  a7,  &v135,  &v121,  v90);
    id v92 = v24;
    UsoEntity_common_Person.usoPerson.getter();
    outlined destroy of AnnotatedAppFinder(&v128);
    *(void *)&__int128 v128 = v91;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AppResolutionBeforeResolveFlow and conformance AppResolutionBeforeResolveFlow,  type metadata accessor for AppResolutionBeforeResolveFlow);
    uint64_t v21 = Flow.eraseToAnyValueFlow()(v89);
    OUTLINED_FUNCTION_76();
  }

  return v21;
}

uint64_t type metadata accessor for AppResolutionBeforeResolveFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for AppResolutionBeforeResolveFlow.State,  (uint64_t)&nominal type descriptor for AppResolutionBeforeResolveFlow.State);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantHandleIntentFlowStrategy and conformance AddCallParticipantHandleIntentFlowStrategy()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantHandleIntentFlowStrategy and conformance AddCallParticipantHandleIntentFlowStrategy;
  if (!lazy protocol witness table cache variable for type AddCallParticipantHandleIntentFlowStrategy and conformance AddCallParticipantHandleIntentFlowStrategy)
  {
    uint64_t v1 = type metadata accessor for AddCallParticipantHandleIntentFlowStrategy();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AddCallParticipantHandleIntentFlowStrategy, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantHandleIntentFlowStrategy and conformance AddCallParticipantHandleIntentFlowStrategy);
  }

  return result;
}

uint64_t type metadata accessor for ThirdPartyAnnotatedAppStore()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin27ThirdPartyAnnotatedAppStore);
}

uint64_t type metadata accessor for AppResolutionBeforeResolveFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for AppResolutionBeforeResolveFlow,  (uint64_t)&nominal type descriptor for AppResolutionBeforeResolveFlow);
}

uint64_t outlined init with copy of AnnotatedAppFinder(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for AnnotatedAppFinder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2 + 24;
  __int128 v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain(v3);
  swift_retain(v4);
  v8(a1 + 24, v5, v7);
  return a1;
}

uint64_t outlined init with take of AppResolutionBeforeResolveFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppResolutionBeforeResolveFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void *outlined destroy of AnnotatedAppFinder(void *a1)
{
  return a1;
}

uint64_t destroy for AnnotatedAppFinder(void *a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 3);
}

uint64_t protocol witness for Flow.execute() in conformance IncomingCallFollowUpFlow<A, B>(uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 176LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1);
}

uint64_t AppResolutionBeforeResolveFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 200);
  if (v1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v2 = OUTLINED_FUNCTION_15_1();
    uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
    if (os_log_type_enabled(v4, v6))
    {
      uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_0, v4, v6, "#AppResolutionBeforeResolveFlow pushing app resolution flow", v7, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v7);
    }

    uint64_t v8 = *(void **)(v0 + 176);
    uint64_t v39 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 136);

    swift_storeEnumTagMultiPayload(v10, v11, 2LL);
    OUTLINED_FUNCTION_25_0(v12 + v9, v0 + 40, 33LL);
    outlined assign with take of AppResolutionBeforeResolveFlow.State(v10, v12 + v9);
    swift_endAccess(v0 + 40);
    *(void *)(v0 + 11outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v1;
    uint64_t v13 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_40EFD0, 32LL);
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v12;
    id v14 = v8;
    swift_retain();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyAppResolutionFlow<INIntent>);
    lazy protocol witness table accessor for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)( v0 + 112,  partial apply for closure #1 in AppResolutionBeforeResolveFlow.execute(),  v13,  v15);
    swift_release(v39);

    swift_release(v13);
    swift_release(v1);
  }

  else
  {
    uint64_t v16 = v0 + 64;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    uint64_t v18 = OUTLINED_FUNCTION_15_64();
    os_log_type_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
    BOOL v22 = os_log_type_enabled(v19, v21);
    uint64_t v23 = *(void *)(v0 + 184);
    if (v22)
    {
      id v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v25 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v40 = v25;
      *(_DWORD *)id v24 = 136315138;
      *(void *)(v0 + 88) = v23;
      uint64_t v26 = type metadata accessor for App(0LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v26, v27);
      *(void *)(v0 + 96) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v40);
      uint64_t v16 = v0 + 64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31_1(v23);
      OUTLINED_FUNCTION_57_0( &dword_0,  v19,  v21,  "#AppResolutionBeforeResolveFlow no app resolution flow, returning previously resolved app: %s",  v24);
      OUTLINED_FUNCTION_17_0(v25);
      OUTLINED_FUNCTION_0_2(v25);
      OUTLINED_FUNCTION_0_2((uint64_t)v24);
    }

    else
    {
      OUTLINED_FUNCTION_31_1(*(void *)(v0 + 184));
    }

    uint64_t v30 = *(void **)(v0 + 176);
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v32 = *(void *)(v0 + 144);
    uint64_t v31 = *(void **)(v0 + 152);
    uint64_t v33 = *(void *)(v0 + 136);
    uint64_t v34 = *(void *)(v0 + 128) + *(void *)(v0 + 168);
    *uint64_t v31 = v9;
    uint64_t v35 = enum case for AppResolutionFlowResult.resolved(_:);
    uint64_t v36 = type metadata accessor for AppResolutionFlowResult(0LL);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104LL))(v31, v35, v36);
    swift_storeEnumTagMultiPayload(v31, v33, 1LL);
    outlined init with take of AppResolutionBeforeResolveFlow.State((uint64_t)v31, v32);
    OUTLINED_FUNCTION_25_0(v34, v16, 33LL);
    swift_retain();
    outlined assign with take of AppResolutionBeforeResolveFlow.State(v32, v34);
    uint64_t v37 = swift_endAccess(v16);
    static ExecuteResponse.complete()(v37);
    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_22_41();
  swift_task_dealloc(v9);
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  os_log_s *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(os_log_s **)(v0 + 136);
  uint64_t v4 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state;
  *(void *)(v0 + 168) = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state;
  uint64_t v5 = v2 + v4;
  OUTLINED_FUNCTION_25_0(v2 + v4, v0 + 16, 0LL);
  outlined init with copy of AppResolutionBeforeResolveFlow.State(v5, v1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v3);
  if ((_DWORD)EnumCaseMultiPayload)
  {
    if ((_DWORD)EnumCaseMultiPayload != 1)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v7 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
      uint64_t v8 = OUTLINED_FUNCTION_15_64();
      uint64_t v9 = v3;
      Logger.logObject.getter(v8);
      uint64_t v10 = OUTLINED_FUNCTION_24();
      if (os_log_type_enabled(v3, v10))
      {
        uint64_t v11 = *(void *)(v0 + 152);
        os_log_type_t v21 = *(void *)(v0 + 128);
        uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v13 = OUTLINED_FUNCTION_7_0(32LL);
        BOOL v22 = v13;
        *(_DWORD *)uint64_t v12 = 136315138;
        outlined init with copy of AppResolutionBeforeResolveFlow.State(v5, v11);
        id v14 = specialized String.init<A>(describing:)(v11);
        *(void *)(v0 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v12 + 4, v12 + 12);
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_31_1(v21);
        OUTLINED_FUNCTION_57_0(&dword_0, v9, v10, "#AppResolutionBeforeResolveFlow execute() called in %s", v12);
        OUTLINED_FUNCTION_17_0(v13);
        OUTLINED_FUNCTION_0_2(v13);
        OUTLINED_FUNCTION_0_2((uint64_t)v12);
      }

      else
      {
        OUTLINED_FUNCTION_31_1(*(void *)(v0 + 128));
      }
    }

    uint64_t v20 = *(void *)(v0 + 160);
    static ExecuteResponse.complete()(EnumCaseMultiPayload);
    outlined destroy of MainFlow(v20, type metadata accessor for AppResolutionBeforeResolveFlow.State);
    OUTLINED_FUNCTION_22_41();
    swift_task_dealloc(v20);
    OUTLINED_FUNCTION_7_8();
    return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
  }

  else
  {
    uint64_t v16 = *(void **)(v0 + 160);
    *(void *)(v0 + 176) = *v16;
    uint64_t v17 = v16[1];
    *(void *)(v0 + 184) = v17;
    uint64_t v18 = (void *)swift_task_alloc(dword_43A2AC);
    *(void *)(v0 + 19outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v18;
    *uint64_t v18 = v0;
    v18[1] = AppResolutionBeforeResolveFlow.execute();
    return AppResolutionBeforeResolveFlow.makeAppResolutionFlow(intent:previouslyResolvedApp:)((uint64_t)v18, v17);
  }

uint64_t AppResolutionBeforeResolveFlow.execute()(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  v2[17] = OUTLINED_FUNCTION_29_35();
  v2[18] = OUTLINED_FUNCTION_28();
  v2[19] = OUTLINED_FUNCTION_28();
  v2[20] = OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v2 = *(void *)(*(void *)v1 + 192LL);
  *(void *)(*(void *)v1 + 20OUTLINED_FUNCTION_25_0(v0 + 16, (uint64_t)v2, 0LL) = a1;
  swift_task_dealloc(v2);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t outlined init with copy of AppResolutionBeforeResolveFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppResolutionBeforeResolveFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void *initializeWithCopy for AppResolutionBeforeResolveFlow.State(void *a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for AppResolutionFlowResult(0LL);
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
    uint64_t v10 = a1;
    uint64_t v11 = a3;
    uint64_t v12 = 1LL;
  }

  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      return a1;
    }

    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    *a1 = v7;
    a1[1] = v8;
    id v9 = v7;
    swift_retain(v8);
    uint64_t v10 = a1;
    uint64_t v11 = a3;
    uint64_t v12 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

uint64_t AppResolutionBeforeResolveFlow.makeAppResolutionFlow(intent:previouslyResolvedApp:)()
{
  uint64_t v1 = *(void **)(v0 + 920);
  uint64_t v2 = v1[12];
  uint64_t v3 = v1[13];
  __swift_project_boxed_opaque_existential_1(v1 + 9, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
  (*(void (**)(uint64_t))(*(void *)v4 + 232LL))(v4);
  OUTLINED_FUNCTION_38_1();
  if (*(void *)(v0 + 48) == 1LL)
  {
    outlined destroy of UUID?( v0 + 16,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    *(_OWORD *)(v0 + 56outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0u;
    *(_OWORD *)(v0 + 576) = 0u;
    *(void *)(v0 + 59outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 0LL;
LABEL_8:
    outlined destroy of UUID?(v0 + 560, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    id v24 = (void *)__swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    Logger.logObject.getter(v24);
    os_log_type_t v25 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_27_1(v25))
    {
      uint64_t v26 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v26 = 0;
      OUTLINED_FUNCTION_5_13( &dword_0,  v27,  v28,  "#AppResolutionBeforeResolveFlow NL should already be transformed before, it is not expected to get nil history");
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }

    goto LABEL_26;
  }

  outlined init with copy of PhoneCallNLIntent?(v0 + 24, v0 + 560);
  outlined destroy of TransformationResult(v0 + 16);
  if (!*(void *)(v0 + 584)) {
    goto LABEL_8;
  }
  uint64_t v5 = (void *)(v0 + 64);
  uint64_t v103 = (void *)(v0 + 520);
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 560), v0 + 520);
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[13];
  uint64_t v102 = v1 + 9;
  __swift_project_boxed_opaque_existential_1(v1 + 9, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 152))(v6, v7);
  uint64_t v8 = *(void *)(v0 + 672);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 640), *(void *)(v0 + 664));
  uint64_t v9 = App.appIdentifier.getter();
  (*(void (**)(uint64_t))(v8 + 16))(v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 640));
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = (_OWORD *)(v0 + 304);
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_26_45();
  OUTLINED_FUNCTION_26_45();
  uint64_t v100 = (void *)v12;
  id v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v16 = static os_log_type_t.debug.getter(v14, v15);
  if (os_log_type_enabled(v14, v16))
  {
    uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v18 = OUTLINED_FUNCTION_7_0(32LL);
    v104[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( (uint64_t)v5,  v0 + 112,  &demangling cache variable for type metadata for AnnotatedApp?);
    OUTLINED_FUNCTION_18_52( v19,  (void (*)(void, void, void, void, void, void))outlined copy of AnnotatedApp?);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnnotatedApp?);
    uint64_t v21 = String.init<A>(describing:)(v0 + 112, v20);
    *(void *)(v0 + 904) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 904, v0 + 912, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease();
    outlined retain of AnnotatedApp?( v5,  (void (*)(void, void, void, void, void, void))outlined consume of AnnotatedApp?);
    outlined retain of AnnotatedApp?( v5,  (void (*)(void, void, void, void, void, void))outlined consume of AnnotatedApp?);
    OUTLINED_FUNCTION_57_0( &dword_0,  v14,  v16,  "#AppResolutionBeforeResolveFlow Previously-resolved annotated app %s",  v17);
    OUTLINED_FUNCTION_17_0(v18);
    OUTLINED_FUNCTION_0_2(v18);
    OUTLINED_FUNCTION_0_2((uint64_t)v17);
  }

  else
  {
    OUTLINED_FUNCTION_27_46();
    OUTLINED_FUNCTION_27_46();
  }

  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( (uint64_t)v5,  v0 + 304,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)v10)
  {
    __int128 v29 = *(_OWORD *)(v0 + 336);
    *(_OWORD *)(v0 + 27outlined consume of AnnounceVoicemailFlow.State(v0, 2) = *(_OWORD *)(v0 + 320);
    *(_OWORD *)(v0 + 288) = v29;
    *(_OWORD *)(v0 + 256) = *v10;
    int v30 = *(unsigned __int8 *)(v0 + 288);
    uint64_t v31 = *(void *)(v0 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release(v31);
    *(void *)(v0 + 888) = *(void *)(v0 + 264);
    outlined release of Set<String>((void *)(v0 + 888));
    outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( v0 + 272,  v0 + 856,  &demangling cache variable for type metadata for String?);
    outlined release of String?(v0 + 856);
    *(void *)(v0 + 896) = *(void *)(v0 + 296);
    uint64_t v32 = outlined release of Set<String>((void *)(v0 + 896));
    if (v30 == 2)
    {
      uint64_t v33 = (void *)Logger.logObject.getter(v32);
      os_log_type_t v35 = static os_log_type_t.debug.getter(v33, v34);
      if (OUTLINED_FUNCTION_27_1(v35))
      {
        uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        _WORD *v38 = 0;
        uint64_t v39 = "#AppResolutionBeforeResolveFlow User specifically requested this app, not running SeAS";
LABEL_24:
        OUTLINED_FUNCTION_5_13(&dword_0, v36, v37, v39);
        OUTLINED_FUNCTION_0_2((uint64_t)v38);
        goto LABEL_25;
      }

      goto LABEL_25;
    }
  }

  uint64_t v40 = *(void **)(v0 + 920);
  type metadata accessor for AppQuery.Builder();
  outlined init with copy of SharedGlobalsProviding((uint64_t)v103, v0 + 680);
  uint64_t v41 = AppQuery.Builder.__allocating_init(intent:)((void *)(v0 + 680));
  uint64_t v98 = (*(uint64_t (**)(uint64_t))(*(void *)v41 + 160LL))(v41);
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  OUTLINED_FUNCTION_38_1();
  uint64_t v46 = v40[7];
  uint64_t v47 = v40[8];
  __swift_project_boxed_opaque_existential_1(v40 + 4, v46);
  uint64_t v49 = v1[12];
  uint64_t v48 = v1[13];
  __swift_project_boxed_opaque_existential_1(v102, v49);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8))( v98,  v43,  v45,  v0 + 720,  v46,  v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 720));
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( v0 + 160,  v0 + 208,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (!*(void *)(v0 + 208))
  {
    uint64_t v33 = v100;
    Logger.logObject.getter(v50);
    os_log_type_t v78 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_27_1(v78))
    {
      uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      _WORD *v38 = 0;
      uint64_t v39 = "#AppResolutionBeforeResolveFlow No matching app";
      goto LABEL_24;
    }

uint64_t AppResolutionBeforeResolveFlow.makeAppResolutionFlow(intent:previouslyResolvedApp:)( uint64_t a1, uint64_t a2)
{
  v3[115] = v2;
  v3[114] = a2;
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  v3[116] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for Parse(0LL);
  v3[117] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[118] = v6;
  v3[119] = OUTLINED_FUNCTION_23(v6);
  uint64_t v7 = type metadata accessor for Input(0LL);
  v3[120] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[121] = v8;
  v3[122] = OUTLINED_FUNCTION_23(v8);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t NLTransformer.getCurrentNLResult()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OUTLINED_FUNCTION_13_23();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    outlined init with copy of TransformationResult((uint64_t *)(v2 + 48 * v4 - 16), (void *)a1);
  }

  else
  {
    OUTLINED_FUNCTION_57_2();
    *(_OWORD *)(a1 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = xmmword_31D8A0;
  }

  return OUTLINED_FUNCTION_16_6(v3);
}

void protocol witness for SharedGlobalsProviding.skFlowFactory.getter in conformance SharedGlobals( uint64_t *a1@<X8>)
{
}

void default argument 2 of static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)( uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0LL);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 16LL);
  a3[3] = v5;
  a3[4] = a2;
  *a3 = v6;
  OUTLINED_FUNCTION_6();
}

uint64_t type metadata accessor for SiriKitFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin18SiriKitFlowFactory);
}

uint64_t type metadata accessor for StartCallCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartCallCATsSimple;
  if (!type metadata singleton initialization cache for StartCallCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartCallCATsSimple);
  }
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.__allocating_init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AnnounceGroupFaceTimeInviteCATsSimple.init(templateDir:options:globals:)(a1, a2, a3);
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v11,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v12 = CATWrapperSimple.init(templateDir:options:globals:)(v11, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  outlined destroy of SpeakableString?(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t type metadata accessor for PhoneCallDisplayTextCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PhoneCallDisplayTextCATs;
  if (!type metadata singleton initialization cache for PhoneCallDisplayTextCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PhoneCallDisplayTextCATs);
  }
  return result;
}

uint64_t PhoneCallDisplayTextCATs.__allocating_init(templateDir:options:globals:)()
{
  return PhoneCallDisplayTextCATs.init(templateDir:options:globals:)();
}

uint64_t PhoneCallDisplayTextCATs.init(templateDir:options:globals:)()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for CATOption(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  outlined init with copy of SpeakableString?( v6,  v10 - v9,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v0, v4, v7);
  uint64_t v12 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))CATWrapper.init(templateDir:options:globals:))(v11, v0, v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  outlined destroy of SpeakableString?(v6, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t type metadata accessor for PhoneCallDisplayTextCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PhoneCallDisplayTextCATsSimple;
  if (!type metadata singleton initialization cache for PhoneCallDisplayTextCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PhoneCallDisplayTextCATsSimple);
  }
  return result;
}

uint64_t type metadata accessor for StartCallCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartCallCATs;
  if (!type metadata singleton initialization cache for StartCallCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartCallCATs);
  }
  return result;
}

uint64_t StartCallCATs.__allocating_init(templateDir:options:globals:)()
{
  return SuggestionsCATs.init(templateDir:options:globals:)();
}

uint64_t SuggestionsCATs.init(templateDir:options:globals:)()
{
  uint64_t v16 = v1;
  uint64_t v17 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for CATOption(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?( v8,  (uint64_t)v12,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v0, v6, v9);
  uint64_t v13 = ((uint64_t (*)(char *, uint64_t, uint64_t))CATWrapper.init(templateDir:options:globals:))(v12, v0, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v9);
  outlined destroy of SpeakableString?(v8, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v13;
}

uint64_t type metadata accessor for StartCallCATPatternsExecutor(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for StartCallCATPatternsExecutor,  (uint64_t)&nominal type descriptor for StartCallCATPatternsExecutor);
}

#error "344D0: call analysis failed (funcsize=18)"
void StartCallCATPatternsExecutor.init(templateDir:options:globals:)( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10,  uint64_t a11,  uint64_t a12,  uint64_t a13,  uint64_t a14,  uint64_t a15,  uint64_t a16,  uint64_t a17,  uint64_t a18,  uint64_t a19,  uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  OUTLINED_FUNCTION_29_2();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  os_log_type_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = type metadata accessor for CATOption(0LL);
  __int128 v29 = *(void *)(v28 - 8);
  __chkstk_darwin();
  uint64_t v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of Result<TemplatingResult, Error>( v27,  (uint64_t)v33,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_71_4((uint64_t)v31, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  CATWrapper.init(templateDir:options:globals:)(v33, v31, v23);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v28);
  outlined destroy of UUID?(v27, (uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_7_5();
}

void *OUTLINED_FUNCTION_108(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, *(void *)(v1 + 40));
}

uint64_t OUTLINED_FUNCTION_35(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

  ;
}

uint64_t OUTLINED_FUNCTION_108_1(uint64_t a1)
{
  return static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(v2 - 128, v1, a1);
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_108_2(uint64_t a1)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v1, (uint64_t *)(v2 - 168));
}

uint64_t OUTLINED_FUNCTION_67()
{
  return v0;
}

void OUTLINED_FUNCTION_157()
{
  *(_BYTE *)(v2 + 24outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v0;
  *(void *)(v2 + 264) = v1;
  *(void *)(v2 + 27outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 0x656D614E707061LL;
  *(void *)(v2 + 28outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0xE700000000000000LL;
}

uint64_t OUTLINED_FUNCTION_108_3()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 88);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 96) = v0;
  return swift_task_dealloc(v5);
}

  ;
}

uint64_t OUTLINED_FUNCTION_108_5@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t OUTLINED_FUNCTION_108_6()
{
  return type metadata accessor for ContactHandleQuery(0LL);
}

void OUTLINED_FUNCTION_108_7(Swift::String a1)
{
}

uint64_t OUTLINED_FUNCTION_108_8(uint64_t a1)
{
  if (a1 >= 0) {
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  return _CocoaArrayWrapper.endIndex.getter(a1);
}

uint64_t OUTLINED_FUNCTION_108_9()
{
  return Logger.logObject.getter();
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_41_1(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_95_1()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v0);
}

void OUTLINED_FUNCTION_95_2()
{
}

uint64_t OUTLINED_FUNCTION_95_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_67_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_94()
{
  return type metadata accessor for OutputGenerationManifest(0LL);
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_95_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  *(_BYTE *)(a1 + 48) = v4;
  uint64_t v6 = *(unsigned int *)(a2 + 4);
  *(void *)(v5 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v3;
  v3[1] = a3;
  return swift_task_alloc(v6);
}

uint64_t OUTLINED_FUNCTION_95_6(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0x656D614E707061LL;
  v2[11] = 0xE700000000000000LL;
  return result;
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_95_9(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_95_10()
{
  return swift_bridgeObjectRelease(v0);
}

BOOL OUTLINED_FUNCTION_95_11(os_log_s *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_95_12()
{
  return Reducer.reduce.getter();
}

  ;
}

void OUTLINED_FUNCTION_95_14(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v2 - 96) + DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v2, v3, v0, v1) = a1;
}

uint64_t OUTLINED_FUNCTION_95_15()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

void OUTLINED_FUNCTION_95_16()
{
}

void OUTLINED_FUNCTION_95_17()
{
}

void OUTLINED_FUNCTION_95_18(unint64_t *a1)
{
}

  ;
}

unint64_t OUTLINED_FUNCTION_13_9(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

unint64_t OUTLINED_FUNCTION_59_1(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_119()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_4(uint64_t a1)
{
  return swift_dynamicCastObjCClass(v1, a1);
}

uint64_t OUTLINED_FUNCTION_119_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_131()
{
  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_119_1(uint64_t a1, uint64_t *a2)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_119_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_119_4()
{
  return ParameterResolutionRecord.result.getter(*(void *)(v0 + 456));
}

  ;
}

id OUTLINED_FUNCTION_119_6(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 0);
}

void OUTLINED_FUNCTION_119_7(uint64_t a1)
{
}

void OUTLINED_FUNCTION_119_8()
{
}

uint64_t type metadata accessor for AppInfoBuilder()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin14AppInfoBuilder);
}

uint64_t type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin38PhoneAppResolutionOnDeviceFlowStrategy);
}

uint64_t type metadata accessor for EligibleAppFinder()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin17EligibleAppFinder);
}

uint64_t type metadata accessor for AppUsageProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin16AppUsageProvider);
}

uint64_t type metadata accessor for PhoneAppResolutionHelper(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PhoneAppResolutionHelper;
  if (!type metadata singleton initialization cache for PhoneAppResolutionHelper) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PhoneAppResolutionHelper);
  }
  return result;
}

uint64_t type metadata accessor for TrialSmartAppSelectionConfigProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin36TrialSmartAppSelectionConfigProvider);
}

uint64_t type metadata accessor for DiagnosticLogPermission()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin23DiagnosticLogPermission);
}

uint64_t type metadata accessor for SmartAppSelectionFeatureManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin31SmartAppSelectionFeatureManager);
}

void SmartAppSelectionFeatureManager.init(sharedGlobals:trialSmartAppSelectionConfigProvider:diagnosticLogPermission:)( __int128 *a1, uint64_t a2, uint64_t a3)
{
  v3[9] = type metadata accessor for SmartAppSelectionFeatureManager();
  v3[10] = &outlined read-only object #0 of SmartAppSelectionFeatureManager.init(sharedGlobals:trialSmartAppSelectionConfigProvider:diagnosticLogPermission:);
  v3[11] = 0LL;
  v3[12] = 0LL;
  v3[2] = a2;
  outlined init with take of AppSelectionSignalComponent(a1, (uint64_t)(v3 + 3));
  v3[8] = a3;
  OUTLINED_FUNCTION_6();
}

uint64_t specialized SharedGlobalsProviding.currentRequest.getter()
{
  uint64_t v0 = static SiriEnvironment.forCurrentTask.getter();
  if (!v0) {
    return 0LL;
  }
  uint64_t v1 = v0;
  uint64_t v2 = SiriEnvironment.currentRequest.getter();
  swift_release(v1);
  return v2;
}

uint64_t outlined init with copy of PhoneAppResolutionLogging?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneAppResolutionLogging?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t static PhoneCallNLv3Intent.placeCall()@<X0>(uint64_t a1@<X8>)
{
  return static PhoneCallNLv3Intent.placeCall()(1819042147LL, 0xE400000000000000LL, a1);
}

uint64_t static PhoneCallNLv3Intent.placeCall()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = OUTLINED_FUNCTION_22_5();
  uint64_t v9 = type metadata accessor for TerminalIntentNode(v8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  TerminalElement.SemanticValue.init(_:javaPojoName:)(a1, a2, 0LL, 0LL);
  uint64_t v11 = enum case for TerminalElement.Value.semantic(_:);
  uint64_t v12 = type metadata accessor for TerminalElement.Value(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104LL))(v4, v11, v12);
  __swift_storeEnumTagSinglePayload(v4, 0LL, 1LL, v12);
  uint64_t v13 = OUTLINED_FUNCTION_0_106();
  TerminalIntentNode.init(name:value:semanticTags:)(v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IntentNode>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 72LL);
  *(_OWORD *)(v15 + 16) = xmmword_31D870;
  *(void *)(v15 + 56) = v9;
  *(void *)(v15 + 64) = &protocol witness table for TerminalIntentNode;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v15 + 32));
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v3, v9);
  static PhoneCallNLv3Intent.phoneCallNLv3Intent(_:)(v15, a3);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v3, v9);
}

uint64_t static PhoneCallNLv3Intent.phoneCallNLv3Intent(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v27 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MitigatorClassification?);
  __chkstk_darwin();
  uint64_t v26 = (uint64_t)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLState?);
  __chkstk_darwin();
  uint64_t v25 = (uint64_t)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IntentNode>);
  uint64_t v5 = swift_allocObject(v4, 72LL, 7LL);
  __int128 v28 = xmmword_31D870;
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  id v24 = (void *)(v5 + 32);
  uint64_t v6 = swift_allocObject(v4, 72LL, 7LL);
  *(_OWORD *)(v6 + 16) = v28;
  unint64_t v22 = (void *)(v6 + 32);
  uint64_t v7 = swift_allocObject(v4, 72LL, 7LL);
  *(_OWORD *)(v7 + 16) = v28;
  uint64_t v21 = (void *)(v7 + 32);
  uint64_t v8 = swift_allocObject(v4, 72LL, 7LL);
  *(_OWORD *)(v8 + 16) = v28;
  uint64_t v9 = swift_allocObject(v4, 72LL, 7LL);
  *(_OWORD *)(v9 + 16) = v28;
  uint64_t v10 = type metadata accessor for NonTerminalIntentNode(0LL);
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = &protocol witness table for NonTerminalIntentNode;
  __swift_allocate_boxed_opaque_existential_1((void *)(v9 + 32));
  uint64_t v11 = v23;
  swift_bridgeObjectRetain();
  NonTerminalIntentNode.init(name:childNodes:resultIDs:)(0x6C6143656E6F6870LL, 0xE90000000000006CLL, v11);
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = &protocol witness table for NonTerminalIntentNode;
  __swift_allocate_boxed_opaque_existential_1((void *)(v8 + 32));
  NonTerminalIntentNode.init(name:childNodes:resultIDs:)(0x746E657665LL, 0xE500000000000000LL, v9);
  *(void *)(v7 + 56) = v10;
  *(void *)(v7 + 64) = &protocol witness table for NonTerminalIntentNode;
  __swift_allocate_boxed_opaque_existential_1(v21);
  NonTerminalIntentNode.init(name:childNodes:resultIDs:)(0x7463656A627573LL, 0xE700000000000000LL, v8);
  *(void *)(v6 + 56) = v10;
  *(void *)(v6 + 64) = &protocol witness table for NonTerminalIntentNode;
  __swift_allocate_boxed_opaque_existential_1(v22);
  NonTerminalIntentNode.init(name:childNodes:resultIDs:)(0x646E616D6D6F63LL, 0xE700000000000000LL, v7);
  *(void *)(v5 + 56) = v10;
  *(void *)(v5 + 64) = &protocol witness table for NonTerminalIntentNode;
  __swift_allocate_boxed_opaque_existential_1(v24);
  NonTerminalIntentNode.init(name:childNodes:resultIDs:)(0x6E6F69746361LL, 0xE600000000000000LL, v6);
  void v29[3] = v10;
  void v29[4] = &protocol witness table for NonTerminalIntentNode;
  __swift_allocate_boxed_opaque_existential_1(v29);
  NonTerminalIntentNode.init(name:childNodes:resultIDs:)(0x6973734169726953LL, 0xED0000746E617473LL, v5);
  uint64_t v12 = type metadata accessor for NLState(0LL);
  uint64_t v13 = v25;
  __swift_storeEnumTagSinglePayload(v25, 1LL, 1LL, v12);
  uint64_t v14 = type metadata accessor for MitigatorClassification(0LL);
  uint64_t v15 = v26;
  __swift_storeEnumTagSinglePayload(v26, 1LL, 1LL, v14);
  __int16 v19 = 0;
  char v18 = 1;
  __int16 v17 = 1;
  return NLIntent.init(rootNode:score:originalInput:allWordsMatched:primary:usingExplicitInput:intentRank:isNERBasedParse:intentID:nlState:mitigatorClassification:strippedVoiceTrigger:isInvalidVoiceTrigger:isSuggested:metaDomainActions:)( v29,  0LL,  1LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  v17,  0LL,  v18,  v13,  v15,  0LL,  0LL,  v19,  _swiftEmptyArrayStorage);
}

void **assignWithCopy for AppResolutionBeforeResolveFlow.State(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of MainFlow((uint64_t)a1, type metadata accessor for AppResolutionBeforeResolveFlow.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = type metadata accessor for AppResolutionFlowResult(0LL);
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v12 - 8) + 16LL))(a1, a2, v12);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 1LL;
    }

    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        return a1;
      }

      uint64_t v7 = *a2;
      *a1 = *a2;
      a1[1] = a2[1];
      id v8 = v7;
      swift_retain();
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }

  return a1;
}

uint64_t destroy for AppResolutionBeforeResolveFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    uint64_t v4 = type metadata accessor for AppResolutionFlowResult(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  }

  else if (!(_DWORD)result)
  {

    return swift_release(*(void *)(a1 + 8));
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>;
  if (!lazy protocol witness table cache variable for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for AnyAppResolutionFlow<INIntent>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AnyAppResolutionFlow<A>, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>);
  }

  return result;
}

uint64_t protocol witness for AppResolutionOnDeviceFlowStrategyAsync.resolveApp(input:) in conformance PhoneAppResolutionOnDeviceFlowStrategy()
{
  uint64_t v1 = OUTLINED_FUNCTION_176_3();
  return v2(v1);
}

uint64_t protocol witness for AppResolutionOnDeviceFlowStrategyAsync.resolveApp(input:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 296LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.resolveApp(input:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return v7(a1);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.resolveApp(input:)()
{
  uint64_t v32 = v1;
  uint64_t v33 = v2;
  uint64_t v31 = v0;
  uint64_t v4 = (uint64_t *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v3 + 232);
  OUTLINED_FUNCTION_49_0((void *)(v3 + 200));
  uint64_t v6 = OUTLINED_FUNCTION_67();
  uint64_t v8 = v7(v6, v5);
  *(void *)(v0 + 16outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v8;
  (*(void (**)(void))(*(void *)v8 + 232LL))();
  if (*(void *)(v0 + 48) == 1LL)
  {
    outlined destroy of PhoneCallNLIntent?( v0 + 16,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0u;
    *(void *)(v0 + 136) = 0LL;
  }

  else
  {
    outlined init with copy of PhoneCallNLIntent?( v0 + 24,  v0 + 104,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined destroy of TransformationResult(v0 + 16);
    if (*(void *)(v0 + 128))
    {
      outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 104), v0 + 64);
      uint64_t v9 = (void *)swift_task_alloc(dword_43BB14);
      *(void *)(v0 + 168) = v9;
      *uint64_t v9 = v0;
      v9[1] = PhoneAppResolutionOnDeviceFlowStrategy.resolveApp(input:);
      return PhoneAppResolutionOnDeviceFlowStrategy.shouldSmartAppSelectOrForceAppDisambiguate(phoneCallNLIntent:)(v0 + 64);
    }
  }

  outlined destroy of PhoneCallNLIntent?(v0 + 104, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = *v4;
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = OUTLINED_FUNCTION_11_18(v11);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.fault.getter();
  BOOL v16 = OUTLINED_FUNCTION_50_12(v14);
  uint64_t v17 = *v4;
  if (v16)
  {
    os_log_type_t v26 = v15;
    char v18 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v27 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v28 = v27;
    uint64_t v29 = 0LL;
    *(_DWORD *)char v18 = 136315138;
    uint64_t v19 = *(void *)(v17 + 416);
    uint64_t v20 = *(void *)(v17 + 424);
    unint64_t v30 = 0xE000000000000000LL;
    OUTLINED_FUNCTION_124();
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_53_24(v19, v20);
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_129();
    uint64_t v22 = OUTLINED_FUNCTION_10_3(v29, v21, &v28);
    uint64_t v23 = OUTLINED_FUNCTION_148_7(v22, (void *)(v0 + 144));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v23, v0 + 152, v18 + 4);
    OUTLINED_FUNCTION_31_1(v17);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_57_0( &dword_0,  v14,  v26,  "%s NL should already be transformed before, it is not expected to get nil history",  v18);
    OUTLINED_FUNCTION_17_0(v27);
    OUTLINED_FUNCTION_0_2(v27);
    OUTLINED_FUNCTION_0_2((uint64_t)v18);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v17);
  }

  OUTLINED_FUNCTION_103_8();
  static AppResolutionAction.noAppFound()();
  OUTLINED_FUNCTION_22();
  uint64_t v24 = OUTLINED_FUNCTION_176_3();
  return OUTLINED_FUNCTION_8_35(v24, v25);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 15outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v0;
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneAppResolutionOnDeviceFlowStrategy.resolveApp(input:));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v1 + 176) = v0;
  OUTLINED_FUNCTION_28_17(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  if (*(void *)(v0 + 176))
  {
    OUTLINED_FUNCTION_11_12();
    OUTLINED_FUNCTION_16_3();
  }

  else
  {
    PhoneAppResolutionOnDeviceFlowStrategy.resolveAppByQuery(phoneCallIntent:)((void *)(v0 + 64));
    OUTLINED_FUNCTION_16_3();
    OUTLINED_FUNCTION_11_12();
  }

  uint64_t v1 = OUTLINED_FUNCTION_176_3();
  return v2(v1);
}

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.shouldSmartAppSelectOrForceAppDisambiguate(phoneCallNLIntent:)()
{
  *(void *)(v1 + 128) = v0;
  OUTLINED_FUNCTION_28_17(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  if (!v0[16]) {
    goto LABEL_5;
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = OUTLINED_FUNCTION_3_8();
  AppResolutionAction.result.getter(v4);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  uint64_t v7 = v0[12];
  uint64_t v6 = v0[13];
  if (v5 != enum case for AppResolutionResult.needsDisambiguation(_:))
  {
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_81_3(v6, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
LABEL_5:
    uint64_t v12 = OUTLINED_FUNCTION_81_18();
    swift_release(v12);
    goto LABEL_6;
  }

  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  OUTLINED_FUNCTION_81_3(v0[13], *(uint64_t (**)(uint64_t, uint64_t))(v7 + 96));
  swift_bridgeObjectRelease();
  PhoneAppResolutionOnDeviceFlowStrategy.shadowPredictAndStore(phoneCallNLIntent:)(v9);
  uint64_t v10 = *(void *)(v8 + 328);
  uint64_t v11 = *(void *)(v8 + 336);
  __swift_project_boxed_opaque_existential_1((void *)(v8 + 304), v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(3LL, v10, v11);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_38_1();
  *(_BYTE *)(v8 + 344) = 4;
LABEL_6:
  OUTLINED_FUNCTION_201_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  uint64_t v13 = OUTLINED_FUNCTION_176_3();
  return OUTLINED_FUNCTION_90_12(v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  uint64_t v4 = v2[20];
  *uint64_t v5 = *v3;
  v2[21] = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    v2[22] = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v6, v7, v8);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v1 = v0[6];
  *(void *)(v1 + 16) = v0[22];
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 16);
  v0[23] = v2;
  OUTLINED_FUNCTION_48_0();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_259_2();
  v0[24] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = PhoneAppResolutionOnDeviceFlowStrategy.shouldSmartAppSelectOrForceAppDisambiguate(phoneCallNLIntent:);
  return OUTLINED_FUNCTION_120_8(v0[7], v0[5], v2);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 192));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  Signpost.OpenSignpost.end()();
  PhoneAppResolutionOnDeviceFlowStrategy.logAppSelectionActionToSelf(action:)(v1);
  OUTLINED_FUNCTION_16_3();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v1) {
    *(_BYTE *)(v0[6] + 344LL) = 3;
  }
  OUTLINED_FUNCTION_201_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  uint64_t v5 = OUTLINED_FUNCTION_176_3();
  return OUTLINED_FUNCTION_90_12(v5, v6);
}

#error "3586C: call analysis failed (funcsize=198)"
uint64_t PhoneAppResolutionOnDeviceFlowStrategy.shouldSmartAppSelectOrForceAppDisambiguate(phoneCallNLIntent:)( uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppResolverResult?);
  v2[7] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = OUTLINED_FUNCTION_1_35();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[9] = v5;
  v2[10] = OUTLINED_FUNCTION_23(v5);
  uint64_t v6 = OUTLINED_FUNCTION_231_2();
  v2[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[12] = v7;
  v2[13] = OUTLINED_FUNCTION_23(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneAppResolutionHelper.shouldForcedDisambiguateApps(phoneCallNLIntent:)()
{
  else {
    return 0LL;
  }
}

uint64_t PhoneAppResolutionHelper.shouldDisambiguateAppsCommon(phoneCallIntent:)(void *a1)
{
  BOOL v1 = PhoneCallNLIntent.hasApplicationNameOrId()();
  BOOL v2 = v1;
  OUTLINED_FUNCTION_22_16(v1, (uint64_t)v79);
  if (v2)
  {
    uint64_t v3 = __swift_destroy_boxed_opaque_existential_1(v79);
    OUTLINED_FUNCTION_22_16(v3, (uint64_t)v78);
LABEL_20:
    uint64_t v55 = __swift_destroy_boxed_opaque_existential_1(v78);
    OUTLINED_FUNCTION_22_16(v55, (uint64_t)v77);
    goto LABEL_21;
  }

  OUTLINED_FUNCTION_0_55(v79);
  Swift::Bool v4 = PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial()();
  uint64_t v5 = __swift_destroy_boxed_opaque_existential_1(v79);
  OUTLINED_FUNCTION_22_16(v5, (uint64_t)v78);
  if (!v4) {
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_0_55(v78);
  Swift::Bool v6 = PhoneCallNLIntent.isEmergencyCall()();
  uint64_t v7 = __swift_destroy_boxed_opaque_existential_1(v78);
  OUTLINED_FUNCTION_22_16(v7, (uint64_t)v77);
  if (v6)
  {
LABEL_21:
    uint64_t v56 = __swift_destroy_boxed_opaque_existential_1(v77);
    OUTLINED_FUNCTION_22_16(v56, (uint64_t)v76);
    goto LABEL_22;
  }

  uint64_t v8 = v77[3];
  uint64_t v9 = v77[4];
  OUTLINED_FUNCTION_82(v77);
  uint64_t v10 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9) + 16);
  swift_bridgeObjectRelease();
  uint64_t v11 = __swift_destroy_boxed_opaque_existential_1(v77);
  OUTLINED_FUNCTION_22_16(v11, (uint64_t)v76);
  if (v10 != 1)
  {
LABEL_22:
    uint64_t v57 = __swift_destroy_boxed_opaque_existential_1(v76);
    OUTLINED_FUNCTION_22_16(v57, (uint64_t)v75);
    goto LABEL_23;
  }

  OUTLINED_FUNCTION_0_55(v76);
  Swift::Bool v12 = PhoneCallNLIntent.isBusinessNameCall()();
  uint64_t v13 = __swift_destroy_boxed_opaque_existential_1(v76);
  OUTLINED_FUNCTION_22_16(v13, (uint64_t)v75);
  if (v12)
  {
LABEL_23:
    uint64_t v58 = __swift_destroy_boxed_opaque_existential_1(v75);
    OUTLINED_FUNCTION_22_16(v58, (uint64_t)v72);
    goto LABEL_24;
  }

  OUTLINED_FUNCTION_0_55(v75);
  Swift::Bool v14 = PhoneCallNLIntent.isTelephonyTargetFromSrr()();
  uint64_t v15 = __swift_destroy_boxed_opaque_existential_1(v75);
  OUTLINED_FUNCTION_22_16(v15, (uint64_t)v72);
  if (v14) {
    goto LABEL_24;
  }
  uint64_t v16 = v73;
  uint64_t v17 = v74;
  __swift_project_boxed_opaque_existential_1(v72, v73);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 + 16);
  if (!v20)
  {
    OUTLINED_FUNCTION_39();
LABEL_27:
    uint64_t v59 = 1LL;
    goto LABEL_25;
  }

  uint64_t v21 = v18 + 32;
  uint64_t v22 = OUTLINED_FUNCTION_8_1();
  while (1)
  {
    OUTLINED_FUNCTION_16_29(v22, (uint64_t)v71);
    OUTLINED_FUNCTION_102_3(v71);
    uint64_t v24 = v23;
    Swift::String_optional v31 = SiriPhoneContact.getPhoneNumber()();
    if (v31.value._object) {
      break;
    }
    OUTLINED_FUNCTION_52_11( v31.value._countAndFlagsBits,  0LL,  v25,  v26,  v27,  v28,  v29,  v30,  v66,  v67,  v68,  v69,  v70,  v71[0]);
LABEL_14:
    uint64_t v40 = v69;
    uint64_t v41 = v70;
    uint64_t v42 = __swift_project_boxed_opaque_existential_1(&v66, v69);
    uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 248))(v40, v41);
    if (v44)
    {
      OUTLINED_FUNCTION_34(v43, v44);
      OUTLINED_FUNCTION_50_18();
      uint64_t v45 = __swift_destroy_boxed_opaque_existential_1(&v66);
      uint64_t v22 = OUTLINED_FUNCTION_99_3(v45, v46, v47, v48, v49);
      if (v42) {
        goto LABEL_28;
      }
    }

    else
    {
      uint64_t v50 = __swift_destroy_boxed_opaque_existential_1(&v66);
      uint64_t v22 = OUTLINED_FUNCTION_99_3(v50, v51, v52, v53, v54);
    }

    v21 += 40LL;
    if (!--v20)
    {
      OUTLINED_FUNCTION_7_4(v19);
      goto LABEL_27;
    }
  }

  OUTLINED_FUNCTION_34(v31.value._countAndFlagsBits, (uint64_t)v31.value._object);
  OUTLINED_FUNCTION_50_18();
  OUTLINED_FUNCTION_52_11(v32, v33, v34, v35, v36, v37, v38, v39, v66, v67, v68, v69, v70, v71[0]);
  if (!v24) {
    goto LABEL_14;
  }
  uint64_t v61 = __swift_destroy_boxed_opaque_existential_1(&v66);
  OUTLINED_FUNCTION_99_3(v61, v62, v63, v64, v65);
LABEL_28:
  OUTLINED_FUNCTION_7_4(v19);
LABEL_24:
  uint64_t v59 = 0LL;
LABEL_25:
  __swift_destroy_boxed_opaque_existential_1(v72);
  return v59;
}

Swift::Bool __swiftcall PhoneCallNLIntent.hasApplicationNameOrId()()
{
  char v6 = specialized Optional<A>.isNilOrEmpty.getter(v4, v5);
  OUTLINED_FUNCTION_4_1();
  uint64_t v7 = OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_199_0(v7, v8, v9);
    OUTLINED_FUNCTION_243(v10, v11);
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_273_0();
  OUTLINED_FUNCTION_58();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial()()
{
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_277();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_6_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_117();
  (*(void (**)(void))(v7 + 104))();
  OUTLINED_FUNCTION_22_25();
  if (v11)
  {
    int v23 = 0;
  }

  else
  {
    uint64_t v9 = PhoneCallVerb.rawValue.getter(v8);
    BOOL v11 = v9 == v2 && v10 == 0xEE006F6964756120LL;
    if (v11)
    {
      OUTLINED_FUNCTION_84_7();
      int v23 = 1;
    }

    else
    {
      int v23 = OUTLINED_FUNCTION_49_2(v9, v10, 0x656D697465636166LL, 0xEE006F6964756120LL);
      OUTLINED_FUNCTION_62();
    }
  }

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_22_25();
  if (v11)
  {
    int v13 = 0;
  }

  else
  {
    uint64_t v14 = PhoneCallVerb.rawValue.getter(v12);
    if (v14 == v2 && v15 == 0xE800000000000000LL)
    {
      OUTLINED_FUNCTION_210();
      int v13 = 1;
    }

    else
    {
      int v13 = OUTLINED_FUNCTION_49_2(v14, v15, 0x656D697465636166LL, 0xE800000000000000LL);
      OUTLINED_FUNCTION_62();
    }
  }

  int v17 = OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_257_0(v1);
  if (v17 == 17)
  {
    OUTLINED_FUNCTION_68_11();
    Swift::Bool v18 = PhoneCallNLIntent.hasPhoneNumber()();
  }

  else
  {
    Swift::Bool v18 = 0;
  }

  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v19(v1, v4);
  int v20 = PhoneCallNLIntent.hasCallVerb()() | v23 | v13;
  OUTLINED_FUNCTION_257_0(v0);
  if ((v20 & 1) == 0 && !v18)
  {
    OUTLINED_FUNCTION_69_11();
    PhoneCallNLIntent.isInferredCallFromRedialOrCallBack()();
  }

  uint64_t v21 = OUTLINED_FUNCTION_99_2();
  ((void (*)(uint64_t))v19)(v21);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
  return result;
}

unint64_t OUTLINED_FUNCTION_17_8()
{
  return 0xD000000000000010LL;
}

uint64_t OUTLINED_FUNCTION_157_0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_157_1(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_225@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_157_3()
{
  *(_WORD *)(v0 + 1outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2080;
  return App.appIdentifier.getter();
}

uint64_t OUTLINED_FUNCTION_157_4()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_157_5(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_157_6()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v0, v1);
}

uint64_t protocol witness for SiriPhoneContact.handleLabel.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 424LL))();
}

uint64_t PhoneCallContactIntentNode.handleLabel.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall SmartAppSelectionFeatureManager.isForcedAppDisambiguationEnabled()()
{
  uint64_t v1 = v0 + 3;
  uint64_t v2 = OUTLINED_FUNCTION_25_14();
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 168LL))(v2);
  OUTLINED_FUNCTION_38_1();
  if ((v3 & 1) == 0)
  {
    uint64_t v26 = OUTLINED_FUNCTION_25_14();
    uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 176LL))(v26);
    uint64_t v28 = OUTLINED_FUNCTION_38_1();
    if ((v27 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v29 = OUTLINED_FUNCTION_15_1();
      uint64_t v30 = OUTLINED_FUNCTION_4_23(v29, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v30);
      os_log_type_t v31 = OUTLINED_FUNCTION_15_16();
      if (!OUTLINED_FUNCTION_33_10(v31)) {
        goto LABEL_29;
      }
      OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v108 = OUTLINED_FUNCTION_7_29();
      OUTLINED_FUNCTION_0_27(4.8149e-34);
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_3_32();
      OUTLINED_FUNCTION_13_1();
      uint64_t v32 = OUTLINED_FUNCTION_129();
      uint64_t v37 = OUTLINED_FUNCTION_9_25(v32, v33, v34, v35, v36);
      OUTLINED_FUNCTION_1_32(v37, v38, v39, v40);
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_62();
      uint64_t v43 = "%s ForceTrialFeatureOff flag is on for internal testing, forcedAppDisambiguation is off";
    }

    else
    {
      SmartAppSelectionFeatureManager.isLongEnoughSinceLastForcedAppDisambiguationShowed()();
      if ((v45 & 1) == 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v68 = OUTLINED_FUNCTION_15_1();
        uint64_t v69 = OUTLINED_FUNCTION_4_23(v68, (uint64_t)static Logger.siriPhone);
        Logger.logObject.getter(v69);
        os_log_type_t v70 = OUTLINED_FUNCTION_15_16();
        if (!OUTLINED_FUNCTION_33_10(v70)) {
          goto LABEL_29;
        }
        OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v71 = OUTLINED_FUNCTION_7_29();
        OUTLINED_FUNCTION_18_16(4.8151e-34);
        OUTLINED_FUNCTION_76_4();
        OUTLINED_FUNCTION_27_14();
        swift_bridgeObjectRelease();
        uint64_t v72 = OUTLINED_FUNCTION_87_0();
        uint64_t v77 = OUTLINED_FUNCTION_9_25(v72, v73, v74, v75, v76);
        OUTLINED_FUNCTION_22_13(v77, v78, v79, v80);
        OUTLINED_FUNCTION_0_3();
        uint64_t v81 = OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_16_15(v81, v82, v83, v84, v85, v86, v87, v88, v104, v105, v106, v110);
        OUTLINED_FUNCTION_29_11( &dword_0,  v89,  v90,  "%s forcedAppDisambiguation is off since there is a forced apps disambiguation within %ld days");
        OUTLINED_FUNCTION_17_0(v71);
        uint64_t v44 = v71;
LABEL_12:
        OUTLINED_FUNCTION_0_2(v44);
        OUTLINED_FUNCTION_0_2(v27);

        goto LABEL_30;
      }

      if (((*(uint64_t (**)(void, void *))(*v0[2] + 96LL))(0LL, v1) & 1) != 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v46 = OUTLINED_FUNCTION_15_1();
        uint64_t v47 = OUTLINED_FUNCTION_4_23(v46, (uint64_t)static Logger.siriPhone);
        Logger.logObject.getter(v47);
        os_log_type_t v48 = OUTLINED_FUNCTION_15_16();
        if (OUTLINED_FUNCTION_33_10(v48))
        {
          OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v109 = OUTLINED_FUNCTION_7_29();
          OUTLINED_FUNCTION_0_27(4.8149e-34);
          OUTLINED_FUNCTION_36_1();
          OUTLINED_FUNCTION_3_32();
          OUTLINED_FUNCTION_13_1();
          uint64_t v49 = OUTLINED_FUNCTION_129();
          uint64_t v54 = OUTLINED_FUNCTION_9_25(v49, v50, v51, v52, v53);
          OUTLINED_FUNCTION_1_32(v54, v55, v56, v57);
          OUTLINED_FUNCTION_0_3();
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_21_12(&dword_0, v58, v59, "%s forcedAppDisambiguation is enabled for current request");
          OUTLINED_FUNCTION_14_16(v60, v61, v62, v63, v64, v65, v66, v67, v104, v105, v109);
          OUTLINED_FUNCTION_0_2(12LL);
          OUTLINED_FUNCTION_0_2(v27);

          goto LABEL_30;
        }

LABEL_29:
        OUTLINED_FUNCTION_0_3();
        goto LABEL_30;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v91 = OUTLINED_FUNCTION_15_1();
      uint64_t v92 = OUTLINED_FUNCTION_4_23(v91, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v92);
      os_log_type_t v93 = OUTLINED_FUNCTION_15_16();
      if (!OUTLINED_FUNCTION_33_10(v93)) {
        goto LABEL_29;
      }
      OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v108 = OUTLINED_FUNCTION_7_29();
      OUTLINED_FUNCTION_0_27(4.8149e-34);
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_3_32();
      OUTLINED_FUNCTION_13_1();
      uint64_t v94 = OUTLINED_FUNCTION_129();
      uint64_t v99 = OUTLINED_FUNCTION_9_25(v94, v95, v96, v97, v98);
      OUTLINED_FUNCTION_1_32(v99, v100, v101, v102);
      OUTLINED_FUNCTION_0_3();
      OUTLINED_FUNCTION_62();
      uint64_t v43 = "%s trial experiment for forcedAppDisambiguation is off since current request isn't picked up randomly";
    }

    OUTLINED_FUNCTION_21_12(&dword_0, v41, v42, v43);
    OUTLINED_FUNCTION_17_0(v108);
    uint64_t v44 = v108;
    goto LABEL_12;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  uint64_t v5 = OUTLINED_FUNCTION_4_23(v4, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v5);
  os_log_type_t v6 = OUTLINED_FUNCTION_15_16();
  if (!OUTLINED_FUNCTION_33_10(v6)) {
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_7_0(12LL);
  uint64_t v107 = OUTLINED_FUNCTION_7_29();
  OUTLINED_FUNCTION_0_27(4.8149e-34);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_3_32();
  OUTLINED_FUNCTION_13_1();
  uint64_t v7 = OUTLINED_FUNCTION_129();
  uint64_t v12 = OUTLINED_FUNCTION_9_25(v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_1_32(v12, v13, v14, v15);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_21_12(&dword_0, v16, v17, "%s forcedAppDisambiguation override flag is on");
  OUTLINED_FUNCTION_14_16(v18, v19, v20, v21, v22, v23, v24, v25, v104, v105, v107);
  OUTLINED_FUNCTION_0_2(12LL);
  OUTLINED_FUNCTION_0_2(v3);

LABEL_30:
  OUTLINED_FUNCTION_23_13();
  return result;
}

  __break(1u);
}

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

  if (!(_DWORD)v54)
  {
LABEL_11:
    uint64_t v30 = v125;
    if ((_DWORD)v49) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }

  (*(void (**)(uint64_t, void (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(a5 + 8 * v50))( a1,  partial apply for closure #1 in IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:),  v17,  a4,  a5);
  swift_release(v17);
  swift_release(v10);
  OUTLINED_FUNCTION_38_5();
}

    uint64_t v71 = (char **)v117;
    specialized Array.append<A>(contentsOf:)((uint64_t)v54);
    uint64_t v72 = v123;
    uint64_t v73 = *(void *)(v123 + 16);
    if (v73)
    {
      uint64_t v134 = (char *)_swiftEmptyArrayStorage;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      OUTLINED_FUNCTION_37_2();
      uint64_t v75 = v72 + v74;
      uint64_t v130 = *(void *)(v76 + 72);
      uint64_t v77 = v129;
      do
      {
        outlined init with copy of TransformationResult?( v75,  (uint64_t)v3,  &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        uint64_t v78 = *(int *)(v133 + 48);
        uint64_t v79 = &v128[v78];
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v128[v78], &v3[v78], v46);
        uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v80(v77, v79, v46);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v3,  &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        uint64_t v81 = v134;
        if ((swift_isUniquelyReferenced_nonNull_native(v134) & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v81 = v134;
        }

        uint64_t v82 = *((void *)v81 + 2);
        if (v82 >= *((void *)v81 + 3) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v81 = v134;
        }

        *((void *)v81 + outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v82 + 1;
        uint64_t v77 = v129;
        v80( &v81[((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
             + *(void *)(v7 + 72) * v82],
          v129,
          v46);
        uint64_t v134 = v81;
        v75 += v130;
        --v73;
      }

      while (v73);
      swift_bridgeObjectRelease();
      uint64_t v71 = (char **)v117;
    }

    else
    {
      swift_bridgeObjectRelease();
      uint64_t v81 = (char *)_swiftEmptyArrayStorage;
    }

    specialized Array.append<A>(contentsOf:)((uint64_t)v81);
    uint64_t v83 = swift_bridgeObjectRetain();
    uint64_t v84 = OrdinalDisplayHintsBuilder.build(for:)(v83);
    OUTLINED_FUNCTION_39();
    specialized Array.append<A>(contentsOf:)(v84);
    uint64_t v85 = *v71;
    uint64_t v86 = *((void *)*v71 + 2);
    uint64_t v87 = v131;
    uint64_t v129 = v85;
    if (v86)
    {
      OUTLINED_FUNCTION_37_2();
      uint64_t v90 = v88 + v89;
      uint64_t v92 = *(void *)(v91 + 72);
      os_log_type_t v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 16);
      swift_bridgeObjectRetain();
      *(void *)&uint64_t v94 = 136315138LL;
      uint64_t v133 = v94;
      uint64_t v130 = (uint64_t)&type metadata for Any + 8;
      uint64_t v95 = v125;
      do
      {
        uint64_t v96 = v93(v87, v90, v95);
        uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
        uint64_t v99 = static os_log_type_t.debug.getter(v97, v98);
        if (os_log_type_enabled(v97, v99))
        {
          uint64_t v100 = OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v101 = (char *)OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v134 = v101;
          *(_DWORD *)uint64_t v100 = v133;
          uint64_t v102 = DisplayHint.description.getter();
          *(void *)(v100 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v102,  v103,  (uint64_t *)&v134);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v131, v95);
          _os_log_impl(&dword_0, v97, v99, "DisplayHint: %s", (uint8_t *)v100, 0xCu);
          swift_arrayDestroy(v101, 1LL);
          uint64_t v104 = (uint64_t)v101;
          uint64_t v87 = v131;
          OUTLINED_FUNCTION_0_2(v104);
          OUTLINED_FUNCTION_0_2(v100);
        }

        else
        {
          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v87, v95);
        }

        v90 += v92;
        --v86;
      }

      while (v86);
    }

    else
    {
      swift_bridgeObjectRetain();
    }

    v115(v129);
    swift_release(v119);
    OUTLINED_FUNCTION_39();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v124, v122);
    swift_release(v120);
    char v45 = v118;
  }

  return swift_release(v45);
}

  swift_bridgeObjectRelease();
LABEL_30:
  swift_bridgeObjectRelease();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)v37);
  uint64_t v30 = type metadata accessor for HangUpAndCallHandleIntentStrategy(0LL);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  os_log_type_t v31 = HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)((uint64_t)v37, v12);
  *(void *)&v37[0] = v31;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>,  type metadata accessor for HangUpAndCallHandleIntentStrategy);
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)( v37,  v30,  v32);
  uint64_t v28 = v34;
  swift_release(v31);
  uint64_t v29 = v33(a1, a2);
LABEL_31:
  uint64_t v35 = v29;
  swift_release(v28);
  return v35;
}

void PhoneCallFeatureManager.shouldEnableForcedAppDisambiguation.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureFlags.forcedAppDisambiguationFlag.getter()
{
  if (v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_5_17(v2);
    while (1)
    {
      uint64_t v11 = OUTLINED_FUNCTION_3_23(v3, v4, v5, v6, v7, v8, v9, v10, v33);
      uint64_t v19 = OUTLINED_FUNCTION_4_16(v11, v12, v13, v14, v15, v16, v17, v18, v34);
      uint64_t v27 = OUTLINED_FUNCTION_2_17(v19, v20, v21, v22, v23, v24, v25, v26, v35);
      if ((v0 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_7_19();
      if (v32)
      {
        OUTLINED_FUNCTION_1_22(v3, v4, v5, v6, v7);
        goto LABEL_9;
      }
    }

    OUTLINED_FUNCTION_1_22(v27, v28, v29, v30, v31);
  }

void PhoneCallFeatureManager.shouldForceTrialFeatureOff.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v15, v16, v17, v18, v19);
  uint64_t v10 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
  if (v11)
  {
    Swift::String v12 = String.lowercased()();
    uint64_t v13 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_6(v13);
    if (v12._countAndFlagsBits != 1702195828 || v12._object != (void *)0xE400000000000000LL) {
      _stringCompareWithSmolCheck(_:_:expecting:)( v12._countAndFlagsBits,  v12._object,  1702195828LL,  0xE400000000000000LL,  0LL);
    }
    swift_bridgeObjectRelease();
  }

  else
  {
    OUTLINED_FUNCTION_11_6(v10);
  }

  OUTLINED_FUNCTION_0_0();
}

uint64_t PhoneCallFeatureFlags.forceTrialFeatureOff.getter()
{
  return specialized UserDefaultsSetting.wrappedValue.getter( *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(_BYTE *)(v0 + 40));
}

Swift::Bool __swiftcall SmartAppSelectionFeatureManager.shouldEnableSignalCollectionBasedOnCommonConditions()()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, (uint64_t)v1);
  (*(void (**)(uint64_t *__return_ptr, void *, uint64_t))(v2 + 8))(&v11, v1, v2);
  __swift_destroy_boxed_opaque_existential_1(&v11);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  uint64_t v4 = OUTLINED_FUNCTION_4_23(v3, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v4);
  os_log_type_t v5 = OUTLINED_FUNCTION_15_16();
  if (OUTLINED_FUNCTION_33_10(v5))
  {
    OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v9 = OUTLINED_FUNCTION_7_29();
    uint64_t v10 = v9;
    *(_DWORD *)uint64_t v2 = 136315138;
    uint64_t v11 = 0LL;
    v12[0] = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_3_32();
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_129();
    uint64_t v11 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12[0], &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v2 + 4);
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_21_12( &dword_0,  v6,  v7,  "%s forcedAppDisambiguation/appNameSpecifiedByUserDataCollection is off since current device is not eligible");
    OUTLINED_FUNCTION_17_0(v9);
    OUTLINED_FUNCTION_0_2(v9);
    OUTLINED_FUNCTION_0_2(v2);
  }

  else
  {

    OUTLINED_FUNCTION_0_3();
  }

  return 0;
}

void AppQuery.Builder.overrides.setter()
{
}

Swift::Bool __swiftcall DiagnosticLogPermission.isDiagnosticsAndUsageEnabled()()
{
  return DiagnosticLogSubmissionEnabled();
}

void SmartAppSelectionFeatureManager.isLongEnoughSinceLastForcedAppDisambiguationShowed()()
{
  uint64_t v1 = OUTLINED_FUNCTION_30_10();
  Date.timeIntervalSince1970.getter(v1);
  OUTLINED_FUNCTION_28_10();
  v5[0] = 0;
  uint64_t v6 = v0;
  uint64_t v7 = _swiftEmptyArrayStorage;
  unint64_t v2 = lazy protocol witness table accessor for type ForcedAppDisambiguationHistory and conformance ForcedAppDisambiguationHistory();
  OUTLINED_FUNCTION_33_13(2LL, (uint64_t)v5, (uint64_t)&type metadata for ForcedAppDisambiguationHistory, v2, (uint64_t)v8);
  uint64_t v3 = v8[0];
  uint64_t v4 = v9;
  __swift_destroy_boxed_opaque_existential_1(v10);
  ForcedAppDisambiguationHistory.daysSinceLastShowed.getter(v3, v4);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_26_14();
}

id SharedGlobalsProviding.siriPhoneDefaults.getter@<X0>(void *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  unint64_t v2 = (void *)static SiriPhoneDefaults.instance;
  a1[3] = &type metadata for SiriPhoneDefaults;
  a1[4] = &protocol witness table for SiriPhoneDefaults;
  *a1 = v2;
  return v2;
}

void SiriPhoneDefaultsProviding.getOrDefault<A>(key:defaultValue:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a7;
  uint64_t v12 = *(void *)(a4 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Optional(0LL, v15);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v21 - v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, a4, a6, a3, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v22, a4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, a4) == 1)
  {
    OUTLINED_FUNCTION_8_66();
    v20();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a4);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v23, v19, a4);
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t protocol witness for SiriPhoneDefaultsProviding.get<A>(key:) in conformance SiriPhoneDefaults@<X0>( char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return SiriPhoneDefaults.get<A>(key:)(a1, *v4, a2, a3, a4);
}

uint64_t SiriPhoneDefaults.get<A>(key:)@<X0>( char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v16[5] = a4;
  uint64_t v17 = a5;
  type metadata accessor for Optional(0LL, a3);
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  v16[4] = (char *)v16 - v8;
  if (a2) {
    __asm { BR              X11 }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = OUTLINED_FUNCTION_15_1();
  uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    uint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v11, v13, "#SiriPhoneDefaults No entry found.", v14, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v14);
  }

  return __swift_storeEnumTagSinglePayload(v17, 1LL, 1LL, a3);
}

uint64_t storeEnumTagSinglePayload for AppQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)Swift::Bool result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

uint64_t getEnumTagSinglePayload for AppQuery(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t destroy for ForcedAppDisambiguationHistory(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 16));
}

void Array.subscript.readspecialized (id *a1)
{
}

void ForcedAppDisambiguationHistory.daysSinceLastShowed.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_4_96();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v7 = OUTLINED_FUNCTION_8_77();
  Date.init()(v7);
  double v8 = Date.distance(to:)(v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_5_96();
  if (v8 / 86400.0 < 0.0) {
    double v9 = 0.0;
  }
  else {
    double v9 = v8 / 86400.0;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v11 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    uint64_t v29 = a2;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc(64LL, -1LL);
    uint64_t v28 = v17;
    *(_DWORD *)uint64_t v16 = 136315650;
    uint64_t v30 = 0LL;
    unint64_t v31 = 0xE000000000000000LL;
    uint64_t v32 = v17;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for ForcedAppDisambiguationHistory,  (uint64_t)&outlined read-only object #0 of ForcedAppDisambiguationHistory.daysSinceLastShowed.getter,  0LL,  0LL);
    uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v32);
    OUTLINED_FUNCTION_3_111(v30, v18, v19, v16 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 1outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2080;
    OUTLINED_FUNCTION_8_77();
    unint64_t v20 = lazy protocol witness table accessor for type Date and conformance Date();
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v3, v20);
    unint64_t v23 = v22;
    OUTLINED_FUNCTION_5_96();
    uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v32);
    OUTLINED_FUNCTION_3_111(v30, v24, v25, v16 + 22);
    swift_bridgeObjectRelease_n(v29, 2LL);
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 2outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2048;
    if ((~*(void *)&v9 & 0x7FF0000000000000LL) == 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }

    if (v9 <= -9.22337204e18)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }

    if (v9 >= 9.22337204e18)
    {
LABEL_20:
      __break(1u);
      return;
    }

    uint64_t v30 = (uint64_t)v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v16 + 24);
    _os_log_impl(&dword_0, v12, v14, "%s is shown at %s, which is %ld days ago last time", (uint8_t *)v16, 0x20u);
    uint64_t v26 = v28;
    swift_arrayDestroy(v28, 2LL);
    OUTLINED_FUNCTION_0_2(v26);
    OUTLINED_FUNCTION_0_2(v16);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    if ((~*(void *)&v9 & 0x7FF0000000000000LL) == 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }

  if (v9 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  if (v9 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

void TrialSmartAppSelectionConfigProvider.isEnabled(configKey:sharedGlobals:)(char a1)
{
  __asm { BR              X11 }

BOOL sub_373B0()
{
  v1._uint64_t countAndFlagsBits = 0xD000000000000016LL;
  v2._uint64_t countAndFlagsBits = v0 + 28;
  v2._object = (void *)0x8000000000346700LL;
  v1._object = (void *)0x8000000000346130LL;
  Swift::Bool v3 = TRIClient.isEnabled(forFactor:withNamespace:)(v1, v2);
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Bool __swiftcall TRIClient.isEnabled(forFactor:withNamespace:)( Swift::String forFactor, Swift::String withNamespace)
{
  object = forFactor._object;
  unint64_t v4 = type metadata accessor for TRIClient();
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v2 levelForFactor:v5 withNamespaceName:v6];

  if (!v7)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v15 = OUTLINED_FUNCTION_15_1();
    uint64_t v16 = OUTLINED_FUNCTION_1_95(v15, (uint64_t)static Logger.siriPhone);
    id v17 = (id)Logger.logObject.getter(v16);
    os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
    if (!os_log_type_enabled((os_log_t)v17, v19))
    {

      OUTLINED_FUNCTION_2_12();
      return 0;
    }

    uint64_t v20 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v21 = OUTLINED_FUNCTION_7_0(64LL);
    *(_DWORD *)uint64_t v20 = 136315394;
    unint64_t v123 = 0xE000000000000000LL;
    uint64_t v124 = v21;
    OUTLINED_FUNCTION_4_100( v21,  (uint64_t)&outlined read-only object #0 of TRIClient.isEnabled(forFactor:withNamespace:));
    uint64_t v122 = OUTLINED_FUNCTION_3_116(v22, v23, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v20 + 4);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v20 + 1outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2080;
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v122 = OUTLINED_FUNCTION_2_86(v25, v26, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v20 + 14);
    OUTLINED_FUNCTION_9_14();
    _os_log_impl(&dword_0, (os_log_t)v17, v19, "%s - Trial factor %s can't be loaded", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 2LL);
    OUTLINED_FUNCTION_0_2(v21);
    OUTLINED_FUNCTION_0_2(v20);
LABEL_31:

    return 0;
  }

  id v9 = OUTLINED_FUNCTION_170_4(v8, "levelOneOfCase");
  if ((_DWORD)v9 == 10)
  {
    unsigned __int8 v14 = OUTLINED_FUNCTION_170_4((uint64_t)v9, "BOOLeanValue");
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v28 = OUTLINED_FUNCTION_15_1();
    uint64_t v29 = OUTLINED_FUNCTION_1_95(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v30 = (void *)Logger.logObject.getter(v29);
    os_log_type_t v32 = static os_log_type_t.debug.getter(v30, v31);
    if (!OUTLINED_FUNCTION_15_75(v32))
    {

      OUTLINED_FUNCTION_2_12();
      return v14;
    }

    uint64_t v33 = OUTLINED_FUNCTION_7_0(28LL);
    uint64_t v116 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v122 = 0LL;
    *(_DWORD *)uint64_t v33 = 136315650;
    unint64_t v123 = 0xE000000000000000LL;
    uint64_t v124 = v116;
    OUTLINED_FUNCTION_4_100( v116,  (uint64_t)&outlined read-only object #0 of TRIClient.isEnabled(forFactor:withNamespace:));
    uint64_t v37 = OUTLINED_FUNCTION_3_116(v34, v35, v36);
    OUTLINED_FUNCTION_8_81(v37, v38, v39, v33 + 12, v40);
    OUTLINED_FUNCTION_62();
    uint64_t v41 = OUTLINED_FUNCTION_10_76();
    uint64_t v44 = OUTLINED_FUNCTION_2_86(v41, v42, v43);
    OUTLINED_FUNCTION_11_82(v44, v45, v46, v33 + 22, v47, v48, v49, v50, v116, v122);
    uint64_t v51 = OUTLINED_FUNCTION_9_14();
    *(_WORD *)(v33 + 2outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 1024;
    OUTLINED_FUNCTION_9_77(v51, v52, v33 + 24, v33 + 28, v53, v54, v55, v56, v117, v122, SBYTE4(v122));
    uint64_t v57 = "%s - Trial factor %s is configured as BOOLean value %{BOOL}d";
    uint64_t v58 = (os_log_s *)v30;
    uint64_t v59 = (uint8_t *)v33;
    uint32_t v60 = 28;
LABEL_28:
    _os_log_impl(&dword_0, v58, (os_log_type_t)&selRef_setAppTimeSpentAffinityScore_, v57, v59, v60);
    OUTLINED_FUNCTION_12_87(v108, v109, v110, v111, v112, v113, v114, v115, v118);
    OUTLINED_FUNCTION_0_2((uint64_t)object);
    OUTLINED_FUNCTION_0_2(v33);

    return v14;
  }

  if ((_DWORD)v9 != 15)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v61 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_1_95(v61, (uint64_t)static Logger.siriPhone);
    id v17 = v7;
    uint64_t v62 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v63 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = OUTLINED_FUNCTION_7_0(28LL);
      uint64_t v119 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v122 = 0LL;
      *(_DWORD *)uint64_t v64 = 136315650;
      unint64_t v123 = 0xE000000000000000LL;
      uint64_t v124 = v119;
      OUTLINED_FUNCTION_4_100( v119,  (uint64_t)&outlined read-only object #0 of TRIClient.isEnabled(forFactor:withNamespace:));
      uint64_t v68 = OUTLINED_FUNCTION_3_116(v65, v66, v67);
      OUTLINED_FUNCTION_8_81(v68, v69, v70, v64 + 12, v71);
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v64 + 1outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2080;
      uint64_t v72 = swift_bridgeObjectRetain();
      uint64_t v75 = OUTLINED_FUNCTION_2_86(v72, v73, v74);
      OUTLINED_FUNCTION_11_82(v75, v76, v77, v64 + 22, v78, v79, v80, v81, v119, v122);
      uint64_t v82 = OUTLINED_FUNCTION_9_14();
      *(_WORD *)(v64 + 2outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 1024;
      unsigned int v83 = OUTLINED_FUNCTION_170_4(v82, "levelOneOfCase");

      LODWORD(v12outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v83;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4, v64 + 24);

      _os_log_impl( &dword_0,  v62,  v63,  "%s - Trial factor %s is configed as unsupported type %d, only BooleanValue and StringValue(True, False) are supported",  (uint8_t *)v64,  0x1Cu);
      OUTLINED_FUNCTION_12_87(v84, v85, v86, v87, v88, v89, v90, v91, v120);
      OUTLINED_FUNCTION_0_2(v64 + 24);
      OUTLINED_FUNCTION_0_2(v64);

      return 0;
    }

    OUTLINED_FUNCTION_2_12();
    goto LABEL_31;
  }

  Swift::Bool result = [v7 doubleValue];
  double v12 = v11;
  if (v11 <= 0.0)
  {
    unsigned __int8 v14 = 0;
    goto LABEL_24;
  }

  double v13 = 1.0 / v11;
  if ((~COERCE__INT64(1.0 / v12) & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }

  if (v13 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }

  if (v13 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  if ((uint64_t)v13 >= 1)
  {
    unsigned __int8 v14 = specialized static FixedWidthInteger.random<A>(in:using:)(1LL, (uint64_t)v13) == 1;
LABEL_24:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v92 = OUTLINED_FUNCTION_15_1();
    uint64_t v93 = OUTLINED_FUNCTION_1_95(v92, (uint64_t)static Logger.siriPhone);
    uint64_t v30 = (void *)Logger.logObject.getter(v93);
    os_log_type_t v95 = static os_log_type_t.debug.getter(v30, v94);
    if (!OUTLINED_FUNCTION_15_75(v95))
    {

      OUTLINED_FUNCTION_2_12();
      return v14;
    }

    uint64_t v33 = OUTLINED_FUNCTION_7_0(38LL);
    uint64_t v121 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v124 = v121;
    *(_DWORD *)uint64_t v33 = 136315906;
    unint64_t v123 = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( v4,  (uint64_t)&outlined read-only object #0 of TRIClient.isEnabled(forFactor:withNamespace:),  0LL,  0LL);
    uint64_t v122 = OUTLINED_FUNCTION_3_116(v96, v97, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v33 + 4);
    OUTLINED_FUNCTION_62();
    uint64_t v99 = OUTLINED_FUNCTION_10_76();
    uint64_t v122 = OUTLINED_FUNCTION_2_86(v99, v100, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, &v122);
    OUTLINED_FUNCTION_9_14();
    *(_WORD *)(v33 + 2outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2048;
    uint64_t v122 = *(void *)&v12;
    uint64_t v102 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v33 + 24);
    *(_WORD *)(v33 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 1024;
    OUTLINED_FUNCTION_9_77(v102, v103, v33 + 34, v33 + 38, v104, v105, v106, v107, v121, v122, SBYTE4(v122));
    uint64_t v57 = "%s - Trial factor %s is configured as double value %f, 1 is maximum, and current request is randomly selected: %{BOOL}d";
    uint64_t v58 = (os_log_s *)v30;
    uint64_t v59 = (uint8_t *)v33;
    uint32_t v60 = 38;
    goto LABEL_28;
  }

LABEL_38:
  __break(1u);
  return result;
}

    __break(1u);
LABEL_39:
    if (v3 < 0) {
      unint64_t v24 = v3;
    }
    else {
      unint64_t v24 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
  }

  __break(1u);
  return result;
}

  OUTLINED_FUNCTION_49_19(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_selectAction);
  if ((v118 & 1) != 0)
  {
LABEL_20:
    OUTLINED_FUNCTION_49_19(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallRecord_playVoicemailAction);
    if ((v119 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }

          uint64_t v41 = 0LL;
          uint64_t v43 = 1;
          goto LABEL_51;
        }

        __break(1u);
LABEL_86:
        __break(1u);
        return;
      }

      uint64_t v41 = (v30 - 48);
      if (v33 != 1)
      {
        uint64_t v41 = 10LL * v41 + (v48 - 48);
        uint64_t v56 = v33 - 2;
        if (v56)
        {
          uint64_t v57 = (unsigned __int8 *)v107 + 2;
          while (1)
          {
            uint64_t v58 = *v57 - 48;
            if (v58 > 9) {
              goto LABEL_38;
            }
            uint64_t v59 = 10 * v41;
            uint64_t v41 = v59 + v58;
            uint64_t v43 = 0;
            ++v57;
            if (!--v56) {
              goto LABEL_51;
            }
          }
        }
      }
    }

unint64_t specialized RandomNumberGenerator.next<A>(upperBound:)(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0LL;
    swift_stdlib_random(&v3, 8LL);
    Swift::Bool result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0LL;
          swift_stdlib_random(&v3, 8LL);
        }

        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

BOOL PhoneAppResolutionHelper.shouldQueryAppSelection(phoneCallNLIntent:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 208LL))();
  char v3 = v2;
  OUTLINED_FUNCTION_16_29(v2, (uint64_t)&v24);
  if ((v3 & 1) != 0)
  {
    char v4 = (*(uint64_t (**)(uint64_t *))(*(void *)v1 + 200LL))(&v24);
    uint64_t v5 = __swift_destroy_boxed_opaque_existential_1(&v24);
    OUTLINED_FUNCTION_16_29(v5, (uint64_t)v23);
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_0_55(v23);
      BOOL v6 = !PhoneCallNLIntent.hasVideoCallSemantic()();
      goto LABEL_6;
    }
  }

  else
  {
    uint64_t v7 = __swift_destroy_boxed_opaque_existential_1(&v24);
    OUTLINED_FUNCTION_16_29(v7, (uint64_t)v23);
  }

  BOOL v6 = 0;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(v23);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = swift_retain_n(v1, 2LL);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v12 = static os_log_type_t.debug.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    uint64_t v13 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(64LL);
    v23[0] = v22;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix);
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 8);
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 16);
    uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 24);
    uint64_t v24 = 0LL;
    v25[0] = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v14, v15, v17, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = OUTLINED_FUNCTION_10_3(v24, v18, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v13 + 4);
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v13 + 1outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 2080;
    if (v6) {
      uint64_t v19 = 0LL;
    }
    else {
      uint64_t v19 = 7630702LL;
    }
    if (v6) {
      unint64_t v20 = 0xE000000000000000LL;
    }
    else {
      unint64_t v20 = 0xE300000000000000LL;
    }
    uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v13 + 14);
    OUTLINED_FUNCTION_39();
    _os_log_impl(&dword_0, v10, v12, "%s this request is %s eligible for smart app selection.", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v22, 2LL);
    OUTLINED_FUNCTION_0_2(v22);
    OUTLINED_FUNCTION_0_2(v13);
  }

  else
  {

    OUTLINED_FUNCTION_0_3();
  }

  return v6;
}

Swift::Bool __swiftcall PhoneAppResolutionHelper.isAppSelectionEnabled()()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 96) + 136LL))() & 1;
}

Swift::Bool __swiftcall SmartAppSelectionFeatureManager.isAppSelectionEnabled()()
{
  uint64_t v2 = v0;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  OUTLINED_FUNCTION_37_10();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 184LL))(v5);
  OUTLINED_FUNCTION_38_1();
  if ((v6 & 1) == 0)
  {
    uint64_t v20 = v0[6];
    uint64_t v21 = v0[7];
    OUTLINED_FUNCTION_37_10();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v21 + 8))(&v37, v20, v21);
    __swift_destroy_boxed_opaque_existential_1(&v37);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = OUTLINED_FUNCTION_31_11();
    uint64_t v9 = (void *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.debug.getter(v9, v24);
    if (OUTLINED_FUNCTION_14_15(v25))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v35 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v36 = v35;
      buf = v26;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v27 = v0[9];
      uint64_t v28 = v0[10];
      uint64_t v29 = v0[11];
      BOOL v6 = (void *)v0[12];
      OUTLINED_FUNCTION_34_11();
      OUTLINED_FUNCTION_36_1();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v27, v28, v29, v6);
      OUTLINED_FUNCTION_82_3();
      OUTLINED_FUNCTION_129();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v36);
      OUTLINED_FUNCTION_35_7();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v30, v31, v32);
      OUTLINED_FUNCTION_31_1((uint64_t)v0);
      OUTLINED_FUNCTION_62();
      uint64_t v19 = "%s SEAS is off since current device is not eligible";
      goto LABEL_10;
    }

void PhoneCallFeatureManager.shouldEnableSmartEnoughAppSelection.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureFlags.smartEnoughAppSelectionFlag.getter()
{
  if (v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_5_17(v2);
    while (1)
    {
      uint64_t v11 = OUTLINED_FUNCTION_3_23(v3, v4, v5, v6, v7, v8, v9, v10, v33);
      uint64_t v19 = OUTLINED_FUNCTION_4_16(v11, v12, v13, v14, v15, v16, v17, v18, v34);
      uint64_t v27 = OUTLINED_FUNCTION_2_17(v19, v20, v21, v22, v23, v24, v25, v26, v35);
      if ((v0 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_7_19();
      if (v32)
      {
        OUTLINED_FUNCTION_1_22(v3, v4, v5, v6, v7);
        goto LABEL_9;
      }
    }

    OUTLINED_FUNCTION_1_22(v27, v28, v29, v30, v31);
  }

uint64_t PhoneAppResolutionHelper.appsToDisambiguate(for:)(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return swift_task_switch(PhoneAppResolutionHelper.appsToDisambiguate(for:), 0LL, 0LL);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v2 = *(void *)(*(void *)v1 + 128LL);
  *(void *)(*(void *)v1 + 136LL) = a1;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_62();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneAppResolutionHelper.appsToDisambiguate(for:)()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  static Signpost.begin(_:)();
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 7outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v5;
  *(_WORD *)(v0 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v6;
  *(void *)(v0 + 11outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v3;
  uint64_t v7 = (void *)static PhoneCallRequestSupportPolicy.getIntentFromInputParse(phoneCallNLIntent:sharedGlobals:)( v1,  v2 + 56);
  id v8 = OUTLINED_FUNCTION_40_14(v7);

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v11 = v10;

  id v12 = [objc_allocWithZone(INStartCallIntent) init];
  id v13 = OUTLINED_FUNCTION_40_14(v12);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v16 = v15;

  if (v9 == v14 && v11 == v16)
  {
    OUTLINED_FUNCTION_62();
    goto LABEL_8;
  }

  char v18 = OUTLINED_FUNCTION_49_2(v9, v11, v14, v16);
  OUTLINED_FUNCTION_34_0();
  if ((v18 & 1) != 0)
  {
LABEL_8:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v20 = OUTLINED_FUNCTION_8_2(v21, 64LL);
    *(_OWORD *)(v20 + 16) = xmmword_31D880;
    *(void *)(v20 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v9;
    *(void *)(v20 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v11;
    id v22 = [objc_allocWithZone(INStartAudioCallIntent) init];
    id v23 = OUTLINED_FUNCTION_40_14(v22);

    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    uint64_t v26 = v25;

    *(void *)(v20 + 48) = v24;
    *(void *)(v20 + 56) = v26;
    goto LABEL_9;
  }

  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v20 = OUTLINED_FUNCTION_8_2(v19, 48LL);
  *(_OWORD *)(v20 + 16) = xmmword_31D870;
  *(void *)(v20 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v9;
  *(void *)(v20 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v11;
LABEL_9:
  *(void *)(v0 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v20;
  uint64_t v27 = *(void **)(v0 + 104);
  uint64_t v28 = v27[5];
  uint64_t v29 = v27[6];
  __swift_project_boxed_opaque_existential_1(v27 + 2, v28);
  uint64_t v30 = *(int **)(v29 + 16);
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v30 + *v30);
  uint64_t v31 = (void *)swift_task_alloc(v30[1]);
  *(void *)(v0 + 128) = v31;
  *uint64_t v31 = v0;
  v31[1] = PhoneAppResolutionHelper.appsToDisambiguate(for:);
  return v33(v20, v28, v29);
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_s *v30;
  uint64_t v31;
  os_log_type_t v32;
  BOOL v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  os_log_type_t v65;
  unint64_t v66;
  uint64_t v67;
  void *v68;
  unint64_t v69;
  uint64_t v3 = *(void *)(v1 + 136);
  uint64_t v68 = _swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      id v13 = v3;
    }
    else {
      id v13 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_3();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    OUTLINED_FUNCTION_62();
    if (v4) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    id v12 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }

  uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8LL));
  if (!v4) {
    goto LABEL_17;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }

  uint64_t v5 = 0LL;
  __int16 v6 = *(void *)(v1 + 136) + 32LL;
  do
  {
    if ((v3 & 0xC000000000000001LL) != 0)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, *(void *)(v1 + 136));
    }

    else
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5);
      swift_retain();
    }

    id v8 = App.appIdentifier.getter();
    uint64_t v10 = OUTLINED_FUNCTION_34(v8, v9);
    if (v7)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      uint64_t v2 = v68[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v2);
      uint64_t v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v7);
      specialized ContiguousArray._endMutation()(v11);
    }

    else
    {
      swift_release(0LL);
    }

    ++v5;
  }

  while (v4 != v5);
  swift_bridgeObjectRelease();
  id v12 = (unint64_t)v68;
LABEL_18:
  uint64_t v68 = _swiftEmptyArrayStorage;
  if ((v12 & 0x8000000000000000LL) == 0 && (v12 & 0x4000000000000000LL) == 0)
  {
    uint64_t v0 = *(void *)(v12 + 16);
    if (v0) {
      goto LABEL_21;
    }
LABEL_32:
    OUTLINED_FUNCTION_22();
    uint64_t v19 = _swiftEmptyArrayStorage;
    goto LABEL_33;
  }

  uint64_t v20 = OUTLINED_FUNCTION_8_1();
  uint64_t v0 = _CocoaArrayWrapper.endIndex.getter(v20);
  OUTLINED_FUNCTION_22();
  if (!v0) {
    goto LABEL_32;
  }
LABEL_21:
  if (v0 < 1)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }

  for (uint64_t i = 0LL; i != v0; ++i)
  {
    if ((v12 & 0xC000000000000001LL) != 0)
    {
      uint64_t v15 = OUTLINED_FUNCTION_5_49(i);
    }

    else
    {
      uint64_t v15 = *(void *)(v12 + 8 * i + 32);
      OUTLINED_FUNCTION_95();
    }

    uint64_t v16 = App.isFirstParty()();
    if (v16)
    {
      OUTLINED_FUNCTION_77_0();
    }

    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      uint64_t v17 = v68[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      char v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
    }
  }

  OUTLINED_FUNCTION_22();
  uint64_t v19 = v68;
LABEL_33:
  uint64_t v2 = 0xD000000000000012LL;
  uint64_t v0 = v1 + 96;
  uint64_t v66 = (unint64_t)v19;
  OUTLINED_FUNCTION_102_3(*(void **)(v1 + 96));
  if (!PhoneCallNLIntent.hasVideoCallSemantic()())
  {
    if (one-time initialization token for siriPhone == -1)
    {
LABEL_39:
      uint64_t v28 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
      uint64_t v29 = OUTLINED_FUNCTION_48();
      uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
      char v32 = static os_log_type_t.debug.getter(v30, v31);
      uint64_t v33 = os_log_type_enabled(v30, v32);
      uint64_t v34 = *(void *)(v1 + 104);
      if (v33)
      {
        uint64_t v65 = v32;
        uint64_t v35 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v64 = OUTLINED_FUNCTION_7_0(32LL);
        *(_DWORD *)uint64_t v35 = 136315138;
        unint64_t v67 = v64;
        uint64_t v68 = 0LL;
        uint64_t v62 = (uint64_t)(v35 + 4);
        os_log_type_t v63 = v35;
        uint64_t v37 = *(void *)(v34 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix);
        uint64_t v36 = *(void *)(v34 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 8);
        unint64_t v38 = *(void *)(v34 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 16);
        uint64_t v39 = *(void **)(v34 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 24);
        uint64_t v69 = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v37, v36, v38, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v1 + 88) = OUTLINED_FUNCTION_10_3(0LL, v40, &v67);
        uint64_t v2 = 0xD000000000000012LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 88, v0, v62);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_12_7();
        uint64_t v41 = (uint64_t)v63;
        OUTLINED_FUNCTION_57_0(&dword_0, v30, v65, "%s adding Phone as another app to disambiguate..", v63);
        OUTLINED_FUNCTION_22_26(v42, v43, v44, v45, v46, v47, v48, v49, v62, (uint64_t)v63, v1 + 88, v64);
        OUTLINED_FUNCTION_0_2(v38);
        OUTLINED_FUNCTION_0_2(v41);
      }

      else
      {
        OUTLINED_FUNCTION_12_7();
      }

      OUTLINED_FUNCTION_46_5();
      uint64_t v50 = v2 + 3;
      uint64_t v51 = 0x8000000000348BF0LL;
      goto LABEL_45;
    }

LABEL_50:
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    goto LABEL_39;
  }

  uint64_t v21 = *(void **)(v1 + 104);
  id v22 = v21[10];
  id v23 = v21[11];
  OUTLINED_FUNCTION_82(v21 + 7);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  uint64_t v24 = *(void *)(v1 + 40);
  uint64_t v25 = *(void *)(v1 + 48);
  OUTLINED_FUNCTION_82((void *)(v1 + 16));
  uint64_t v26 = dispatch thunk of DeviceState.isMac.getter(v24, v25);
  __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 16));
  if ((v26 & 1) != 0)
  {
    if (one-time initialization token for macFaceTimeBundleId != -1) {
      swift_once( &one-time initialization token for macFaceTimeBundleId,  one-time initialization function for macFaceTimeBundleId);
    }
    uint64_t v2 = static PhoneCallAppNameConstants.macFaceTimeBundleId;
    uint64_t v27 = unk_477F50;
    OUTLINED_FUNCTION_6_3();
  }

  else
  {
    uint64_t v27 = 0x80000000003479B0LL;
  }

  OUTLINED_FUNCTION_46_5();
  uint64_t v50 = v2;
  uint64_t v51 = v27;
LABEL_45:
  uint64_t v52 = App.__allocating_init(appIdentifier:)(v50, v51);
  uint64_t v53 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
  uint64_t v55 = *(void *)((char *)&dword_10 + (v66 & 0xFFFFFFFFFFFFFF8LL));
  uint64_t v54 = *(void *)((char *)&dword_18 + (v66 & 0xFFFFFFFFFFFFFF8LL));
  if (v55 >= v54 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1LL);
  }
  uint64_t v56 = *(void *)(v1 + 112);
  uint64_t v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v52);
  specialized Array._endMutation()(v57, v58, v59, v60);
  OUTLINED_FUNCTION_22();
  Signpost.OpenSignpost.end()();
  swift_release(v56);
  return (*(uint64_t (**)(unint64_t))(v1 + 8))(v66);
}

  __break(1u);
}

    uint64_t v43 = 0;
    goto LABEL_51;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v5, v12);
  uint64_t v44 = (void *)objc_opt_self(&OBJC_CLASS___NSURL);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  uint64_t v46 = [v44 phoneAppVoicemailURLForMessageUUID:isa];

  if (v46)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v46);

    uint64_t v47 = 0LL;
  }

  else
  {
    uint64_t v47 = 1LL;
  }

  uint64_t v39 = v102;
  uint64_t v36 = (uint64_t)v103;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unint64_t v38 = v105;
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v47, 1LL, v105);
  uint64_t v37 = v104;
  uint64_t v50 = (uint64_t)v101;
LABEL_71:
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v10,  v36,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  outlined init with copy of TransformationResult?( v36,  v50,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  if (__swift_getEnumTagSinglePayload(v50, 1LL, v38) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v50,  (uint64_t *)&demangling cache variable for type metadata for URL?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v73 = type metadata accessor for Logger(0LL);
    uint64_t v74 = __swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
    uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
    uint64_t v76 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v77 = 0;
      swift_slowDealloc(v77, -1LL, -1LL);
    }

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v36,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  }

  else
  {
    uint64_t v78 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v37, v50, v38);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v79 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v79, (uint64_t)static Logger.siriPhone);
    uint64_t v80 = (*(uint64_t (**)(char *, char *, uint64_t))(v78 + 16))(v39, v37, v38);
    uint64_t v81 = (os_log_s *)Logger.logObject.getter(v80);
    unsigned int v83 = static os_log_type_t.debug.getter(v81, v82);
    if (os_log_type_enabled(v81, v83))
    {
      uint64_t v84 = v36;
      uint64_t v85 = v39;
      uint64_t v86 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v87 = swift_slowAlloc(32LL, -1LL);
      v107[0] = v87;
      *(_DWORD *)uint64_t v86 = 136315138;
      uint64_t v88 = URL.absoluteString.getter();
      uint64_t v108 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v89, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v86 + 4);
      swift_bridgeObjectRelease();
      uint64_t v90 = *(void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v91 = v85;
      uint64_t v36 = v84;
      unint64_t v38 = v105;
      v90(v91, v105);
      _os_log_impl(&dword_0, v81, v83, "#CallRecordViewUtils VM punchout: %s", v86, 0xCu);
      swift_arrayDestroy(v87, 1LL);
      uint64_t v92 = v87;
      uint64_t v37 = v104;
      swift_slowDealloc(v92, -1LL, -1LL);
      swift_slowDealloc(v86, -1LL, -1LL);
    }

    else
    {
      uint64_t v90 = *(void (**)(char *, uint64_t))(v78 + 8);
      v90(v39, v38);
    }

    URL._bridgeToObjectiveC()(v93);
    os_log_type_t v95 = v94;
    [v106 setPunchOutUri:v94];

    v90(v37, v38);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v36,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  }

#error "38B64: call analysis failed (funcsize=128)"
uint64_t static PhoneCallRequestSupportPolicy.getSiriKitIntentName(nlIntent:sharedGlobals:)( void *a1,  void *a2)
{
  uint64_t v3;
  uint64_t v4;
  Swift::Bool v5;
  Swift::Bool v6;
  Swift::Bool v8;
  Swift::Bool v9;
  Swift::Bool v10;
  Swift::Bool v11;
  Swift::Bool v12;
  Swift::Bool v13;
  void v14[4];
  void v15[4];
  void v16[4];
  void v17[4];
  void v18[5];
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v18, v3, v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = PhoneCallNLIntent.isAnswerCall()();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v17);
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1(v17);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1(v18);
    return 0LL;
  }

  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  __int16 v6 = PhoneCallNLIntent.isJoinCall()();
  __swift_destroy_boxed_opaque_existential_1(v17);
  if (v6) {
    goto LABEL_4;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v8 = PhoneCallNLIntent.isAddParticipant()();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v16);
  if (v8)
  {
    __swift_destroy_boxed_opaque_existential_1(v16);
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1(v18);
    return 7LL;
  }

  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  uint64_t v9 = PhoneCallNLIntent.isRemoveParticipant()();
  __swift_destroy_boxed_opaque_existential_1(v16);
  if (v9) {
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (PhoneCallNLIntent.isHangUpCall()())
  {
    __swift_destroy_boxed_opaque_existential_1(v18);
    return 1LL;
  }

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (PhoneCallNLIntent.isIncomingCallSearch()())
  {
    __swift_destroy_boxed_opaque_existential_1(v18);
    return 2LL;
  }

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = PhoneCallNLIntent.isSearchCallOrVoiceMail()();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v15);
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1(v15);
LABEL_17:
    __swift_destroy_boxed_opaque_existential_1(v18);
    return 3LL;
  }

  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  uint64_t v11 = PhoneCallNLIntent.isDelete()();
  __swift_destroy_boxed_opaque_existential_1(v15);
  if (v11) {
    goto LABEL_17;
  }
  if ((static PhoneCallRequestSupportPolicy.isAudioRequired(nlIntent:device:)(a1, (uint64_t)v18) & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1(v18);
    return 5LL;
  }

  else if ((static PhoneCallRequestSupportPolicy.isVideoCall(nlIntent:device:)(a1, (uint64_t)v18) & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1(v18);
    return 6LL;
  }

  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    id v12 = PhoneCallNLIntent.isOutgoingCall()();
    outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v14);
    if (v12)
    {
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      id v13 = PhoneCallNLIntent.isVoiceMailCall()();
      __swift_destroy_boxed_opaque_existential_1(v18);
      __swift_destroy_boxed_opaque_existential_1(v14);
      if (v13) {
        return 8LL;
      }
      else {
        return 4LL;
      }
    }

    else
    {
      __swift_destroy_boxed_opaque_existential_1(v18);
      __swift_destroy_boxed_opaque_existential_1(v14);
      return 8LL;
    }
  }

Swift::Bool __swiftcall PhoneCallNLIntent.isAnswerCall()()
{
  if (!v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_97_5(v2);
    if (v3) {
      BOOL v6 = v5 == 0xE600000000000000LL;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      OUTLINED_FUNCTION_122_3();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v4, v5, 0x726577736E61LL, 0xE600000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isJoinCall()()
{
  if (!v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_97_5(v2);
    if (v3) {
      BOOL v6 = v5 == 0xE400000000000000LL;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      OUTLINED_FUNCTION_58_10();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v4, v5, 1852403562LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isAddParticipant()()
{
  if (!v5)
  {
    uint64_t v3 = PhoneCallVerb.rawValue.getter(v2);
    BOOL v5 = v3 == 0x6974726150646461LL && v4 == 0xEE00746E61706963LL;
    if (v5)
    {
      OUTLINED_FUNCTION_144_2(0x746E61706963LL);
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v3, v4, 0x6974726150646461LL, 0xEE00746E61706963LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_6();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isRemoveParticipant()()
{
  if (!v3)
  {
    uint64_t v4 = PhoneCallVerb.rawValue.getter(v2);
    if (v4 == 0xD000000000000011LL && v5 == 0x8000000000343500LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v4, v5, 0xD000000000000011LL, 0x8000000000343500LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isIncomingCallSearch()()
{
  if (!v9) {
    goto LABEL_31;
  }
  OUTLINED_FUNCTION_39_1(v1[10]);
  OUTLINED_FUNCTION_145_2();
  if (v9)
  {
    char v6 = 0;
  }

  else
  {
    char v6 = 99;
    uint64_t v7 = PhoneCallNoun.rawValue.getter(v5);
    BOOL v9 = v7 == 1819042147 && v8 == 0xE400000000000000LL;
    if (v9)
    {
      OUTLINED_FUNCTION_58_10();
      char v6 = 1;
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v7, v8, 1819042147LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_117_2();
    }
  }

  OUTLINED_FUNCTION_30_20(v2);
  if ((v6 & 1) != 0) {
    goto LABEL_21;
  }
  unsigned __int8 v10 = OUTLINED_FUNCTION_39_1(v1[12]);
  if (v10 != 35)
  {
    char v11 = 111;
    uint64_t v12 = PhoneCallReference.rawValue.getter(v10);
    if (v12 != 6647407 || v13 != 0xE300000000000000LL)
    {
      OUTLINED_FUNCTION_49_2(v12, v13, 6647407LL, 0xE300000000000000LL);
      OUTLINED_FUNCTION_117_2();
      goto LABEL_22;
    }

    OUTLINED_FUNCTION_225_0();
LABEL_21:
    char v11 = 1;
    goto LABEL_22;
  }

  char v11 = 0;
LABEL_22:
  OUTLINED_FUNCTION_31_22(v2);
  OUTLINED_FUNCTION_30_20(v0);
  if ((v11 & 1) != 0)
  {
    uint64_t v15 = OUTLINED_FUNCTION_39_1(v1[5]);
    if (v15) {
      uint64_t v16 = (void *)v15;
    }
    else {
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    if (v16[2])
    {
      OUTLINED_FUNCTION_6_3();
      uint64_t v17 = OUTLINED_FUNCTION_25_31();
      return ((uint64_t (*)(uint64_t))((char *)&loc_39280 + 4 * byte_326484[v18]))(v17);
    }

    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_31_22(v0);
LABEL_31:
  OUTLINED_FUNCTION_7_5();
  return result;
}

void sub_39374()
{
}

Swift::Bool __swiftcall PhoneCallNLIntent.isSearchCallOrVoiceMail()()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v28 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v29 = (uint64_t)&v26 - v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_83_6();
  __chkstk_darwin();
  unsigned __int8 v10 = (char *)&v26 - v9;
  __chkstk_darwin();
  OUTLINED_FUNCTION_266();
  __chkstk_darwin();
  uint64_t v12 = (char *)&v26 - v11;
  Swift::Bool v13 = PhoneCallNLIntent.isFind()();
  uint64_t v14 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
  OUTLINED_FUNCTION_38_18((uint64_t)v12);
  if (v13)
  {
    OUTLINED_FUNCTION_57_12((uint64_t)v12);
    OUTLINED_FUNCTION_38_18((uint64_t)v10);
LABEL_3:
    OUTLINED_FUNCTION_57_12((uint64_t)v10);
    uint64_t v15 = v29;
    OUTLINED_FUNCTION_38_18(v29);
    uint64_t v16 = v28;
LABEL_4:
    BOOL v17 = !PhoneCallNLIntent.isIncomingCallSearch()();
    goto LABEL_5;
  }

  uint64_t v27 = v0;
  Swift::Bool v18 = PhoneCallNLIntent.hasReadVerb()();
  v14(v1, v12, v5);
  if (v18)
  {
    uint64_t v19 = v3;
    int v20 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v3 + 120))(v5, v3);
    OUTLINED_FUNCTION_57_12(v1);
    OUTLINED_FUNCTION_57_12((uint64_t)v12);
    OUTLINED_FUNCTION_38_18((uint64_t)v10);
    if (v20 == 2) {
      goto LABEL_3;
    }
  }

  else
  {
    uint64_t v19 = v3;
    OUTLINED_FUNCTION_57_12(v1);
    OUTLINED_FUNCTION_57_12((uint64_t)v12);
    OUTLINED_FUNCTION_38_18((uint64_t)v10);
  }

  uint64_t v22 = v19;
  Swift::Bool v23 = PhoneCallNLIntent.hasCallVerb()();
  uint64_t v24 = v27;
  v14(v27, v10, v5);
  uint64_t v15 = v29;
  if (v23)
  {
    int v25 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v22 + 120))(v5, v22);
    OUTLINED_FUNCTION_57_12(v24);
    OUTLINED_FUNCTION_57_12((uint64_t)v10);
    OUTLINED_FUNCTION_38_18(v15);
    uint64_t v16 = v28;
    if (v25 != 2) {
      goto LABEL_4;
    }
    BOOL v17 = 0;
  }

  else
  {
    OUTLINED_FUNCTION_57_12(v24);
    OUTLINED_FUNCTION_57_12((uint64_t)v10);
    OUTLINED_FUNCTION_38_18(v15);
    BOOL v17 = 0;
    uint64_t v16 = v28;
  }

Swift::Bool __swiftcall PhoneCallNLIntent.hasReadVerb()()
{
  if (!v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_97_5(v2);
    if (v3) {
      BOOL v6 = v5 == 0xE400000000000000LL;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      OUTLINED_FUNCTION_58_10();
    }

    else
    {
      OUTLINED_FUNCTION_49_2(v4, v5, 1684104562LL, 0xE400000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t OUTLINED_FUNCTION_68_2(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

  ;
}

void *OUTLINED_FUNCTION_163_0()
{
  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_163_1()
{
  return v0;
}

void OUTLINED_FUNCTION_163_2()
{
  *(void *)(v0 + 224) = 0x5074737269467369LL;
  *(void *)(v0 + 23outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 0xEF70704179747261LL;
}

void OUTLINED_FUNCTION_163_3(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = (a1 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_113(uint64_t a1@<X8>)
{
  void *v1 = v2;
  v1[1] = a1;
}

uint64_t OUTLINED_FUNCTION_163_4(uint64_t a1, uint64_t a2)
{
  return __swift_project_value_buffer(a1, a2);
}

void OUTLINED_FUNCTION_163_5( unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_163_7()
{
  return static ActionForInput.handle()();
}

uint64_t OUTLINED_FUNCTION_163_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_180()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_180_0()
{
  return v2(v0, v1);
}

  ;
}

uint64_t PhoneNumberImpl.tags.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRetain(a3);
}

void OUTLINED_FUNCTION_180_2()
{
  *(void *)(v0 + 104) = 0LL;
  *(void *)(v0 + 11outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 0LL;
}

uint64_t OUTLINED_FUNCTION_180_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_180_4()
{
  return swift_retain_n(v0, 2LL);
}

Swift::Bool __swiftcall PhoneCallNLIntent.isDelete()()
{
  if (!v3)
  {
    OUTLINED_FUNCTION_97_5(v2);
    if (v3) {
      BOOL v5 = v4 == 0xE600000000000000LL;
    }
    else {
      BOOL v5 = 0;
    }
    if (v5)
    {
      OUTLINED_FUNCTION_122_3();
    }

    else
    {
      OUTLINED_FUNCTION_203_0();
      OUTLINED_FUNCTION_49_2(v6, v7, v8, 0xE600000000000000LL);
      OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t static PhoneCallRequestSupportPolicy.isAudioRequired(nlIntent:device:)(void *a1, uint64_t a2)
{
  Swift::Bool v4 = PhoneCallNLIntent.hasAnyFaceTime()();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  char v5 = PhoneCallNLIntent.hasAudioCallSemantic()();
  outlined init with copy of SharedGlobalsProviding(a2, (uint64_t)v17);
  if (v4)
  {
    uint64_t v6 = v18;
    uint64_t v7 = v19;
    uint64_t v8 = __swift_project_boxed_opaque_existential_1(v17, v18);
    DeviceState.isAnyCar.getter( v6,  v7,  (uint64_t)v8,  v9,  v10,  v11,  v12,  v13,  v16,  v17[0],  v17[1],  v17[2],  v18,  v19,  v20,  v21,  v22,  v23,  v24,  v25);
    LOBYTE(v6) = v14;
    __swift_destroy_boxed_opaque_existential_1(v17);
    v5 |= v6;
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1(v17);
  }

  return v5 & 1;
}

uint64_t static PhoneCallRequestSupportPolicy.isVideoCall(nlIntent:device:)(void *a1, uint64_t a2)
{
  Swift::Bool v4 = PhoneCallNLIntent.hasVideoCallSemantic()();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v8);
  outlined init with copy of SharedGlobalsProviding(a2, (uint64_t)v7);
  if (v4) {
    char v5 = static PhoneCallRequestSupportPolicy.isAudioRequired(nlIntent:device:)(v8, (uint64_t)v7) ^ 1;
  }
  else {
    char v5 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1(v7);
  __swift_destroy_boxed_opaque_existential_1(v8);
  return v5 & 1;
}

Swift::Bool __swiftcall PhoneCallNLIntent.isOutgoingCall()()
{
  return result;
}

void PhoneCallNLIntent.isOutgoingCall()( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = v20;
  OUTLINED_FUNCTION_95_4();
  __chkstk_darwin(v29);
  OUTLINED_FUNCTION_39_2();
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v33 = (char *)&a9 - v32;
  char v35 = v34(v31);
  OUTLINED_FUNCTION_129_3((uint64_t)v33, v28);
  if ((v35 & 1) != 0)
  {
    char v36 = 1;
  }

  else
  {
    uint64_t v37 = OUTLINED_FUNCTION_258();
    char v36 = v27(v37);
  }

  OUTLINED_FUNCTION_31_22((uint64_t)v33);
  OUTLINED_FUNCTION_129_3(v21, v28);
  if ((v36 & 1) == 0)
  {
    uint64_t v38 = OUTLINED_FUNCTION_258();
    v25(v38);
  }

  OUTLINED_FUNCTION_31_22(v21);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

Swift::Bool __swiftcall PhoneCallNLIntent.isVoiceMailCall()()
{
  Swift::Bool v1 = PhoneCallNLIntent.isOutgoingCall()();
  OUTLINED_FUNCTION_19_12(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  if (v1)
  {
    OUTLINED_FUNCTION_69_11();
    PhoneCallNLIntent.hasVoiceMail()();
  }

  OUTLINED_FUNCTION_4_13(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_16();
  return result;
}

void PhoneCallIntentClassNames.intentInstance.getter(char a1)
{
  __asm { BR              X10 }

id sub_39B28()
{
  if (one-time initialization token for emptyAnswerCallIntent != -1) {
    swift_once( &one-time initialization token for emptyAnswerCallIntent,  one-time initialization function for emptyAnswerCallIntent);
  }
  return (id)static PhoneCallIntentClassNames.emptyAnswerCallIntent;
}

void AppUsageProvider.relativeAppUsageProbabilities(forCandidateBundleIds:daysAgo:)(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone(_PSSuggester) init];
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v5 = [v3 relativeAppUsageProbabilitiesForCandidateBundleIds:isa daysAgo:a2];

  unint64_t v6 = type metadata accessor for NSNumber();
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v5,  &type metadata for String,  v6,  &protocol witness table for String);

  OUTLINED_FUNCTION_6();
}

void PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(uint64_t a1)
{
  uint64_t v2 = App.appIdentifier.getter();
  if (v3)
  {
    uint64_t v4 = v3;
    if (*(void *)(a1 + 16)
      && (uint64_t v5 = v2,
          OUTLINED_FUNCTION_48_0(),
          specialized __RawDictionaryStorage.find<A>(_:)(v5, v4),
          char v7 = v6,
          OUTLINED_FUNCTION_34_0(),
          (v7 & 1) != 0))
    {
      specialized Dictionary.subscript.getter(v5, v4, a1);
      uint64_t v9 = v8;
      OUTLINED_FUNCTION_39();
      if (v9)
      {
        [v9 doubleValue];
      }
    }

    else
    {
      OUTLINED_FUNCTION_39();
    }
  }

void static PhoneCallRequestSupportPolicy.getSiriKitIntent(phoneCallNLIntent:sharedGlobals:app:intentTypeName:)( uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 80))(v7, v5, v6);
  __asm { BR              X10 }

uint64_t sub_39E94()
{
  uint64_t v0 = OUTLINED_FUNCTION_209_2();
  specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,  (uint64_t)specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:),  v11[0],  v11[1],  v11[2],  v11[3],  v11[4],  v11[5],  v11[6],  v11[7],  v11[8],  v11[9],  v11[10],  (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11[11]);
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_22();
  outlined destroy of SKTransformer((uint64_t)v11);
  return v9;
}

void static PhoneCallRequestSupportPolicy.getSiriKitIntent(phoneCallNLIntent:sharedGlobals:app:intentTypeName:)( uint64_t a1, void *a2, os_log_s *a3, PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames value)
{
  if (value != PhoneCallFlowDelegatePlugin_PhoneCallIntentClassNames_unknownDefault) {
    goto LABEL_9;
  }
  uint64_t v7 = (void *)static PhoneCallRequestSupportPolicy.getIntentFromInputParse(phoneCallNLIntent:sharedGlobals:)(a1, a2);
  id v8 = [v7 _className];

  uint64_t v9 = OUTLINED_FUNCTION_132_12();
  uint64_t v11 = v10;

  v12._uint64_t countAndFlagsBits = v9;
  v12._object = v11;
  v13.INCallRecordTypeOptions value = PhoneCallIntentClassNames.init(intentClassName:)(v12).value;
  if (v13.value != PhoneCallFlowDelegatePlugin_PhoneCallIntentClassNames_unknownDefault)
  {
    INCallRecordTypeOptions value = v13.value;
LABEL_9:
    static PhoneCallRequestSupportPolicy.getSiriKitIntent(phoneCallNLIntent:sharedGlobals:app:intentTypeName:)( a1,  a2,  (uint64_t)a3,  value);
    return;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v14 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v14, (uint64_t)static Logger.siriPhone);
  os_log_type_t v15 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_10(v15))
  {
    uint64_t v16 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v16);
    OUTLINED_FUNCTION_5( &dword_0,  a3,  (os_log_type_t)a2,  "#PhoneCallRequestSupportPolicy getSiriKitIntent: couldn't convert input to its corresponding INIntent",  (uint8_t *)v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }
}

PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional __swiftcall PhoneCallIntentClassNames.init(intentClassName:)( Swift::String intentClassName)
{
  object = intentClassName._object;
  uint64_t countAndFlagsBits = intentClassName._countAndFlagsBits;
  if (one-time initialization token for emptyAnswerCallIntent != -1) {
    swift_once( &one-time initialization token for emptyAnswerCallIntent,  one-time initialization function for emptyAnswerCallIntent);
  }
  id v5 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptyAnswerCallIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v5);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    OUTLINED_FUNCTION_2_12();
    return 0;
  }

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_3_18();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return 0;
  }

  if (one-time initialization token for emptyHangUpCallIntent != -1) {
    swift_once( &one-time initialization token for emptyHangUpCallIntent,  one-time initialization function for emptyHangUpCallIntent);
  }
  id v9 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptyHangUpCallIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v9);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    OUTLINED_FUNCTION_2_12();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)1;
  }

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_3_18();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)1;
  }

  if (one-time initialization token for emptyIncomingCallSearchIntent != -1) {
    swift_once( &one-time initialization token for emptyIncomingCallSearchIntent,  one-time initialization function for emptyIncomingCallSearchIntent);
  }
  id v11 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptyIncomingCallSearchIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v11);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    v7.INCallRecordTypeOptions value = PhoneCallFlowDelegatePlugin_PhoneCallIntentClassNames_incomingCallSearch;
    OUTLINED_FUNCTION_2_12();
    return v7;
  }

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_3_18();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)2;
  }

  if (one-time initialization token for emptySearchCallHistoryIntent != -1) {
    swift_once( &one-time initialization token for emptySearchCallHistoryIntent,  one-time initialization function for emptySearchCallHistoryIntent);
  }
  id v13 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptySearchCallHistoryIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v13);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    OUTLINED_FUNCTION_2_12();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)3;
  }

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_3_18();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)3;
  }

  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
  }
  id v15 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptyStartCallIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v15);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    OUTLINED_FUNCTION_2_12();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)4;
  }

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_3_18();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)4;
  }

  if (one-time initialization token for emptyStartAudioCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartAudioCallIntent,  one-time initialization function for emptyStartAudioCallIntent);
  }
  id v17 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptyStartAudioCallIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v17);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    OUTLINED_FUNCTION_2_12();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)5;
  }

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_3_18();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)5;
  }

  if (one-time initialization token for emptyStartVideoCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartVideoCallIntent,  one-time initialization function for emptyStartVideoCallIntent);
  }
  id v19 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptyStartVideoCallIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v19);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    OUTLINED_FUNCTION_2_12();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)6;
  }

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_3_18();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)6;
  }

  if (one-time initialization token for emptyAddCallParticipantIntent != -1) {
    swift_once( &one-time initialization token for emptyAddCallParticipantIntent,  one-time initialization function for emptyAddCallParticipantIntent);
  }
  id v21 = OUTLINED_FUNCTION_6_19((void *)static PhoneCallIntentClassNames.emptyAddCallParticipantIntent);
  OUTLINED_FUNCTION_5_11((uint64_t)v21);
  OUTLINED_FUNCTION_1_1();
  if (v2 == countAndFlagsBits && v1 == object)
  {
    OUTLINED_FUNCTION_2_12();
    return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)7;
  }

  else
  {
    char v23 = OUTLINED_FUNCTION_0_15();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39();
    if ((v23 & 1) != 0) {
      return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)7;
    }
    else {
      return (PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional)8;
    }
  }

Swift::String __swiftcall INPerson.asBase64()()
{
  id v0 = (id)((uint64_t (*)())INIntentSlotValueTransformToContactValue)();
  if (!v0)
  {
    __break(1u);
    goto LABEL_5;
  }

  id v0 = (id)outlined bridged method (ob) of @objc PBCodable.data.getter(v0);
  if (v1 >> 60 == 15)
  {
LABEL_5:
    __break(1u);
    goto _$sSo8INPersonC27PhoneCallFlowDelegatePluginE8asBase64SSyF;
  }

  Swift::String v2 = Data.base64EncodedString(options:)(0LL);
  uint64_t v3 = OUTLINED_FUNCTION_9_0();
  outlined consume of Data?(v3, v4);
  OUTLINED_FUNCTION_179();
  String.append(_:)(v2);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_24_0();
_$sSo8INPersonC27PhoneCallFlowDelegatePluginE8asBase64SSyF:
  result._object = (void *)v1;
  result._uint64_t countAndFlagsBits = (uint64_t)v0;
  return result;
}

uint64_t outlined bridged method (ob) of @objc PBCodable.data.getter(void *a1)
{
  id v2 = [a1 data];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t outlined consume of Data?(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return outlined consume of Data._Representation(result, a2);
  }
  return result;
}

uint64_t outlined consume of Data._Representation(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release(result);
  }

  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

void outlined bridged method (mbnn) of @objc INPerson.contactIdentifier.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setContactIdentifier:v5];
}

void PhoneAppResolutionHelper.getSiriRememberVersionApps(apps:)(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_8_1();
    uint64_t v2 = OUTLINED_FUNCTION_61_1();
    if (v2) {
      goto LABEL_3;
    }
LABEL_23:
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_18_7();
    return;
  }

  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_8_1();
  if (!v2) {
    goto LABEL_23;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v3 = 0LL;
    while (1)
    {
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v4 = OUTLINED_FUNCTION_5_49(v3);
      }

      else
      {
        uint64_t v4 = *(void *)(a1 + 8 * v3 + 32);
        OUTLINED_FUNCTION_95();
      }

      uint64_t v5 = App.appIdentifier.getter();
      if (!v6) {
        goto LABEL_20;
      }
      if (v5 == 0xD000000000000015LL && v6 == 0x8000000000348BF0LL)
      {
        OUTLINED_FUNCTION_62();
      }

      else
      {
        char v7 = OUTLINED_FUNCTION_49_2(v5, v6, 0xD000000000000015LL, 0x8000000000348BF0LL);
        OUTLINED_FUNCTION_62();
        if ((v7 & 1) == 0)
        {
          uint64_t v13 = OUTLINED_FUNCTION_95();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          unint64_t v15 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
          unint64_t v14 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
          if (v15 >= v14 >> 1) {
            OUTLINED_FUNCTION_21_26(v15 + 1, v14);
          }
          unint64_t v11 = v15;
          uint64_t v12 = v4;
          goto LABEL_19;
        }
      }

      OUTLINED_FUNCTION_46_5();
      uint64_t v8 = App.__allocating_init(appIdentifier:)(0xD000000000000017LL, 0x8000000000348B90LL);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      unint64_t v10 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v9 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
      if (v10 >= v9 >> 1) {
        OUTLINED_FUNCTION_21_26(v10 + 1, v9);
      }
      unint64_t v11 = v10;
      uint64_t v12 = v8;
LABEL_19:
      uint64_t v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v12);
      specialized Array._endMutation()(v16, v17, v18, v19);
LABEL_20:
      ++v3;
      OUTLINED_FUNCTION_77_0();
      if (v2 == v3) {
        goto LABEL_23;
      }
    }
  }

  __break(1u);
}

uint64_t PhoneAppResolutionHelper.getAppSelectionRecommendation(startCallIntent:phoneCallNLIntent:apps:)()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0) {
      uint64_t v39 = *(void *)(v0 + 88);
    }
    else {
      uint64_t v39 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_3();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v39);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v2 < 2)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v25 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = OUTLINED_FUNCTION_6_3();
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      *(_DWORD *)uint64_t v29 = 134217984;
      *(void *)(v0 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v29 + 4);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_57_0( &dword_0,  v27,  v28,  "#PhoneAppResolutionHelper getAppSelectionRecommendation: get app counts %ld which is not expected, return noMatchFound",  v29);
      OUTLINED_FUNCTION_0_2((uint64_t)v29);
    }

    else
    {
      OUTLINED_FUNCTION_13_1();
    }

    uint64_t v36 = *(void *)(v0 + 56);
    uint64_t v37 = enum case for AppResolverResult.noMatchFound(_:);
    uint64_t v38 = type metadata accessor for AppResolverResult(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104LL))(v36, v37, v38);
    swift_task_dealloc(*(void *)(v0 + 120));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v3 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
    uint64_t v4 = OUTLINED_FUNCTION_48();
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
    BOOL v8 = os_log_type_enabled(v5, v7);
    uint64_t v9 = *(void *)(v0 + 96);
    if (v8)
    {
      unint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v42 = OUTLINED_FUNCTION_7_0(32LL);
      v43[0] = v42;
      uint64_t v41 = v10;
      *(_DWORD *)unint64_t v10 = 136315138;
      uint64_t v40 = (uint64_t)(v10 + 4);
      uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix);
      uint64_t v12 = *(void *)(v9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 8);
      uint64_t v14 = *(void *)(v9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 16);
      uint64_t v13 = *(void **)(v9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix + 24);
      v43[1] = 0LL;
      v43[2] = 0xE000000000000000LL;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v11, v12, v14, v13);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_4_1();
      *(void *)(v0 + 48) = OUTLINED_FUNCTION_10_3(0LL, v15, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v40);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_12_7();
      uint64_t v16 = (uint64_t)v41;
      OUTLINED_FUNCTION_57_0( &dword_0,  v5,  v7,  "%s getAppSelectionRecommendation: Found more than 1 app and starts to query AppMatcher",  v41);
      OUTLINED_FUNCTION_22_26(v17, v18, v19, v20, v21, v22, v23, v24, v40, v0 + 48, (uint64_t)v41, v42);
      OUTLINED_FUNCTION_0_2(v11);
      OUTLINED_FUNCTION_0_2(v16);
    }

    else
    {
      OUTLINED_FUNCTION_12_7();
    }

    uint64_t v30 = *(void **)(v0 + 96);
    uint64_t v31 = v30[16];
    uint64_t v32 = v30[17];
    __swift_project_boxed_opaque_existential_1(v30 + 13, v31);
    uint64_t v33 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v32 + 8))(0LL, v31, v32);
    swift_release(v33);
    PhoneAppResolutionHelper.generateAppSelectionInputFeature(startCallIntent:phoneCallNLIntent:apps:)();
    swift_beginAccess( (char *)v30 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_appResolver,  v0 + 16,  33LL,  0LL);
    uint64_t v34 = (void *)swift_task_alloc(async function pointer to AppResolver.resolveApp(features:)[1]);
    *(void *)(v0 + 128) = v34;
    *uint64_t v34 = v0;
    v34[1] = PhoneAppResolutionHelper.getAppSelectionRecommendation(startCallIntent:phoneCallNLIntent:apps:);
    return AppResolver.resolveApp(features:)(*(void *)(v0 + 56), *(void *)(v0 + 120));
  }

{
  uint64_t v0;
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8LL))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  swift_task_dealloc(*(void *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)v0 + 16LL;
  swift_task_dealloc(*(void *)(*(void *)v0 + 128LL));
  swift_endAccess(v1);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneAppResolutionHelper.getAppSelectionRecommendation(startCallIntent:phoneCallNLIntent:apps:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  uint64_t v7 = type metadata accessor for CommsAppResolutionFeature(0LL);
  v6[13] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[14] = v8;
  v6[15] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return OUTLINED_FUNCTION_5_7();
}

void protocol witness for PhoneAppResolutionLogging.emitTriggeredLog(codePathId:) in conformance PhoneAppResolutionLogger( char a1)
{
}

void PhoneAppResolutionLogger.emitTriggeredLog(codePathId:)(char a1)
{
  char v2 = a1 & 1;
  id v3 = [objc_allocWithZone((Class)type metadata accessor for ExperimentationAnalyticsManager(0)) init];
  specialized PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)(v2, v3, v1);

  OUTLINED_FUNCTION_6();
}

uint64_t specialized PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)( char a1, void *a2, uint64_t *a3)
{
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v25[3] = type metadata accessor for ExperimentationAnalyticsManager(0LL);
  void v25[4] = &protocol witness table for ExperimentationAnalyticsManager;
  v25[0] = a2;
  uint64_t v8 = a3[1];
  if (v8)
  {
    uint64_t v9 = *a3;
    id v10 = a2;
    uint64_t v11 = swift_bridgeObjectRetain();
    static TaskPriority.utility.getter(v11);
    uint64_t v12 = type metadata accessor for TaskPriority(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, v12);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v25, (uint64_t)v24);
    uint64_t v13 = swift_allocObject(&unk_4150B8, 89LL, 7LL);
    *(void *)(v13 + 16) = 0LL;
    *(void *)(v13 + 24) = 0LL;
    *(void *)(v13 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v9;
    *(void *)(v13 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v8;
    outlined init with take of AppSelectionSignalComponent(v24, v13 + 48);
    *(_BYTE *)(v13 + 88) = a1 & 1;
    uint64_t v14 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( (uint64_t)v7,  (uint64_t)&closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)partial apply,  v13);
  }

  else
  {
    uint64_t v15 = one-time initialization token for siriPhone;
    id v16 = a2;
    if (v15 != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
    if (os_log_type_enabled(v19, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl( &dword_0,  v19,  v21,  "#PhoneAppResolutionLogger emitTriggeredLog: no request ID in context, skipping triggered log",  v22,  2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    uint64_t v14 = 0LL;
  }

  __swift_destroy_boxed_opaque_existential_1(v25);
  return v14;
}

uint64_t specialized PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:)( char a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v27[3] = a4;
  v27[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16LL))(boxed_opaque_existential_1, a2, a4);
  uint64_t v13 = a3[1];
  if (v13)
  {
    uint64_t v14 = *a3;
    uint64_t v15 = swift_bridgeObjectRetain();
    static TaskPriority.utility.getter(v15);
    uint64_t v16 = type metadata accessor for TaskPriority(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0LL, 1LL, v16);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v27, (uint64_t)v26);
    uint64_t v17 = swift_allocObject(&unk_415090, 89LL, 7LL);
    *(void *)(v17 + 16) = 0LL;
    *(void *)(v17 + 24) = 0LL;
    *(void *)(v17 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v14;
    *(void *)(v17 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v13;
    outlined init with take of AppSelectionSignalComponent(v26, v17 + 48);
    *(_BYTE *)(v17 + 88) = a1 & 1;
    uint64_t v18 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( (uint64_t)v11,  (uint64_t)&async function pointer to partial apply for closure #1 in PhoneAppResolutionLogger.emitTriggeredLog(codePathId:experimentationAnalyticsManager:),  v17);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    os_log_type_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
    if (os_log_type_enabled(v21, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl( &dword_0,  v21,  v23,  "#PhoneAppResolutionLogger emitTriggeredLog: no request ID in context, skipping triggered log",  v24,  2u);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    uint64_t v18 = 0LL;
  }

  __swift_destroy_boxed_opaque_existential_1(v27);
  return v18;
}

uint64_t PhoneAppResolutionHelper.generateAppSelectionInputFeature(startCallIntent:phoneCallNLIntent:apps:)()
{
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v29 = v9;
  uint64_t v10 = type metadata accessor for CommunicationTypeSignal.CommunicationType(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_26(v12, v27);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v27 - v13;
  outlined init with copy of SignalProviding((uint64_t)v6, (uint64_t)v30);
  OUTLINED_FUNCTION_102_3(v30);
  Swift::Bool v15 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  __swift_destroy_boxed_opaque_existential_1(v30);
  OUTLINED_FUNCTION_0_55(v6);
  Swift::Bool v16 = PhoneCallNLIntent.isVideoCall()();
  uint64_t v17 = (unsigned int *)&enum case for CommunicationTypeSignal.CommunicationType.groupVideoCall(_:);
  if (!v16) {
    uint64_t v17 = (unsigned int *)&enum case for CommunicationTypeSignal.CommunicationType.groupAudioCall(_:);
  }
  uint64_t v18 = (unsigned int *)&enum case for CommunicationTypeSignal.CommunicationType.videoCall(_:);
  if (!v16) {
    uint64_t v18 = (unsigned int *)&enum case for CommunicationTypeSignal.CommunicationType.audioCall(_:);
  }
  if (!v15) {
    uint64_t v17 = v18;
  }
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, *v17, v10);
  uint64_t v19 = (*(uint64_t (**)(void *, uint64_t))(*(void *)v0 + 232LL))(v6, v4);
  uint64_t v20 = v6[3];
  uint64_t v21 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v20);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 24);
  id v23 = v8;
  uint64_t v24 = *(void *)(v22(v20, v21) + 16);
  swift_bridgeObjectRelease();
  uint64_t v25 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v28, v14, v10);
  ((void (*)(id, uint64_t, uint64_t, uint64_t))CommsAppResolutionFeature.init(intent:nlContactCount:appFeatures:communicationType:))( v23,  v24,  v19,  v25);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

NSUUID_optional __swiftcall NSUUID.__allocating_init(uuidString:)(Swift::String uuidString)
{
  object = uuidString._object;
  id v2 = objc_allocWithZone((Class)((uint64_t (*)())swift_getObjCClassFromMetadata)());
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  uint64_t v4 = (objc_class *)[v2 initWithUUIDString:v3];

  uint64_t v6 = v4;
  result.value.super.Class isa = v6;
  result.is_nil = v5;
  return result;
}

uint64_t protocol witness for ExperimentationAnalyticsManaging.cacheTrialExperimentIdentifiers(for:namespaces:) in conformance ExperimentationAnalyticsManager( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = v5;
  *Swift::Bool v5 = v2;
  v5[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return v7(a1, a2);
}

Swift::Bool __swiftcall PhoneCallNLIntent.isVideoCall()()
{
  Swift::Bool v4 = PhoneCallNLIntent.hasAnyFaceTime()();
  OUTLINED_FUNCTION_37_20(v1);
  if (v4)
  {
    OUTLINED_FUNCTION_68_11();
    BOOL v5 = !PhoneCallNLIntent.hasAudioCallSemantic()();
  }

  else
  {
    BOOL v5 = 0;
  }

  OUTLINED_FUNCTION_31_22(v1);
  OUTLINED_FUNCTION_37_20(v0);
  if (v5)
  {
    OUTLINED_FUNCTION_69_11();
    PhoneCallNLIntent.isFind()();
  }

  OUTLINED_FUNCTION_31_22(v0);
  OUTLINED_FUNCTION_273_0();
  OUTLINED_FUNCTION_58();
  return result;
}

void PhoneAppResolutionHelper.generateAppFeatures(phoneCallNLIntent:apps:)()
{
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v42 = type metadata accessor for CommsAppFeature(0LL);
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_26(v5, v39[0]);
  __chkstk_darwin();
  uint64_t v7 = (char *)v39 - v6;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = OUTLINED_FUNCTION_61_1();
  }

  else
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
  }

  uint64_t v40 = v3;
  v39[0] = (uint64_t)v7;
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
      goto LABEL_35;
    }

    uint64_t v9 = 0LL;
    unint64_t v10 = v1 & 0xC000000000000001LL;
    uint64_t v11 = _swiftEmptyArrayStorage;
    unint64_t v12 = v1;
    do
    {
      if (v10) {
        specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
      }
      else {
        OUTLINED_FUNCTION_12_27(v1 + 8 * v9);
      }
      uint64_t v13 = App.appIdentifier.getter();
      unint64_t v15 = v14;
      OUTLINED_FUNCTION_38_1();
      if (!v15)
      {
        uint64_t v13 = 0LL;
        unint64_t v15 = 0xE000000000000000LL;
      }

      if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      {
        OUTLINED_FUNCTION_17_35(0LL, v11[2] + 1LL);
        uint64_t v11 = v19;
      }

      unint64_t v17 = v11[2];
      unint64_t v16 = v11[3];
      if (v17 >= v16 >> 1)
      {
        OUTLINED_FUNCTION_17_35(v16 > 1, v17 + 1);
        uint64_t v11 = v20;
      }

      ++v9;
      v11[2] = v17 + 1;
      uint64_t v18 = &v11[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
      unint64_t v1 = v12;
    }

    while (v8 != v9);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  OUTLINED_FUNCTION_13_1();
  __swift_project_boxed_opaque_existential_1(v40, v40[3]);
  uint64_t v21 = *(void *)(OUTLINED_FUNCTION_46_15() + 16);
  swift_bridgeObjectRelease();
  if (!v21)
  {
    uint64_t v40 = &_swiftEmptySetSingleton;
    uint64_t v23 = v39[0];
    goto LABEL_22;
  }

  uint64_t v22 = OUTLINED_FUNCTION_46_15();
  uint64_t v23 = v39[0];
  if (!*(void *)(v22 + 16))
  {
LABEL_35:
    __break(1u);
    return;
  }

  outlined init with copy of SignalProviding(v22 + 32, (uint64_t)v43);
  OUTLINED_FUNCTION_62();
  uint64_t v24 = v43[4];
  uint64_t v25 = OUTLINED_FUNCTION_102_3(v43);
  uint64_t v40 = (void *)SiriPhoneContact.getVocabularyAppsBundleSet()(v25, v24);
  __swift_destroy_boxed_opaque_existential_1(v43);
LABEL_22:
  uint64_t v26 = v11[2];
  if (v26)
  {
    v39[1] = OUTLINED_FUNCTION_46_5();
    uint64_t v27 = v11 + 5;
    uint64_t v28 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v29 = *(v27 - 1);
      uint64_t v30 = *v27;
      swift_bridgeObjectRetain_n(*v27, 2LL);
      App.__allocating_init(appIdentifier:)(v29, v30);
      Swift::Bool v31 = App.isFirstParty()();
      OUTLINED_FUNCTION_38_1();
      if (v31)
      {
        uint64_t v32 = 0x73746361746E6F43LL;
        uint64_t v33 = 0xE800000000000000LL;
      }

      else
      {
        uint64_t v32 = v29;
        uint64_t v33 = v30;
      }

      specialized Set.contains(_:)(v32, v33, (uint64_t)v40);
      CommsAppFeature.init(bundleID:isContactInApp:)(v29, v30, v34 & 1);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v41, v23, v42);
      if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
      {
        OUTLINED_FUNCTION_56_12();
        uint64_t v28 = v37;
      }

      unint64_t v35 = v28[2];
      if (v35 >= v28[3] >> 1)
      {
        OUTLINED_FUNCTION_56_12();
        uint64_t v28 = v38;
      }

      v27 += 2;
      _OWORD v28[2] = v35 + 1;
      uint64_t v36 = v42;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))( (unint64_t)v28 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
      + *(void *)(v4 + 72) * v35,
        v41,
        v42);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v23, v36);
      --v26;
    }

    while (v26);
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SiriPhoneContact.getVocabularyAppsBundleSet()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t protocol witness for SiriPhoneContact.emergencyLocationType.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 528LL))();
}

void *variable initialization expression of SharedNeedsValueContext.registeredPrompts()
{
  return &_swiftEmptySetSingleton;
}

uint64_t protocol witness for ExperimentationAnalyticsManaging.emitTriggerFromCache(for:requestID:) in conformance ExperimentationAnalyticsManager( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1, a2);
}

uint64_t objectdestroy_17Tm()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t objectdestroy_17Tm_0()
{
  return swift_deallocObject(v0, 50LL, 7LL);
}

void PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:)(char a1)
{
  uint64_t v2 = type metadata accessor for TaskPriority(0LL);
  OUTLINED_FUNCTION_20_63(v2);
  uint64_t v3 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_414E58, 184LL);
  *(void *)(v3 + 16) = 0LL;
  *(void *)(v3 + 24) = 0LL;
  *(_BYTE *)(v3 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = a1;
  uint64_t v4 = OUTLINED_FUNCTION_49_30((void *)(v3 + 40));
  OUTLINED_FUNCTION_57_31( (uint64_t)v4,  (uint64_t)&async function pointer to partial apply for closure #1 in PhoneAppResolutionLogger.emitAndLinkExecutionResultMessage(_:));
  OUTLINED_FUNCTION_6();
}

uint64_t PhoneAppResolutionLogger.EvaluationResult.toSelfSchema()(char a1)
{
  return dword_33D5D0[a1];
}

void *PhoneAppResolutionLogger.linkMessage(inferenceID:requestID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = [objc_allocWithZone(SISchemaRequestLink) init];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [objc_allocWithZone(SISchemaRequestLinkInfo) init];
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = [objc_allocWithZone(SISchemaRequestLinkInfo) init];
      if (v12)
      {
        uint64_t v13 = v12;
        [v12 setComponent:27];
        type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SISchemaUUID,  &OBJC_CLASS___SISchemaUUID_ptr);
        unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v14(v7, a1, v4);
        id v15 = SISchemaUUID.__allocating_init(nsuuid:)();
        [v13 setUuid:v15];

        [v11 setComponent:1];
        v14(v7, a2, v4);
        id v16 = SISchemaUUID.__allocating_init(nsuuid:)();
        [v11 setUuid:v16];

        [v9 setSource:v13];
        [v9 setTarget:v11];

        return v9;
      }
    }

    else
    {
      uint64_t v11 = v9;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl( &dword_0,  v19,  v20,  "#PhoneAppResolutionLogger linkMessage: Failed to create RequestLink SELF message templates. Skipping Emission.",  v21,  2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  return 0LL;
}

void PhoneCallFeatureManager.shouldEnableHSAnswerCallNotification.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_85(a1);
  OUTLINED_FUNCTION_0_88((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v11[2], v11[3]);
  OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 72));
  OUTLINED_FUNCTION_4_87(v11);
  OUTLINED_FUNCTION_0_0();
}

void PhoneCallFeatureFlags.hsAnswerCallNotificationFlag.getter()
{
  if (v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_5_17(v2);
    while (1)
    {
      uint64_t v11 = OUTLINED_FUNCTION_3_23(v3, v4, v5, v6, v7, v8, v9, v10, v33);
      uint64_t v19 = OUTLINED_FUNCTION_4_16(v11, v12, v13, v14, v15, v16, v17, v18, v34);
      uint64_t v27 = OUTLINED_FUNCTION_2_17(v19, v20, v21, v22, v23, v24, v25, v26, v35);
      if ((v0 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_7_19();
      if (v32)
      {
        OUTLINED_FUNCTION_1_22(v3, v4, v5, v6, v7);
        goto LABEL_9;
      }
    }

    OUTLINED_FUNCTION_1_22(v27, v28, v29, v30, v31);
  }

void ContactDisambiguationPromptResponseParser.referenceResolver.getter(uint64_t a1@<X8>)
{
}

uint64_t protocol witness for SmartAppSelectionFeature.isForcedAppDisambiguationEnabled() in conformance SmartAppSelectionFeatureManager()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120LL))() & 1;
}

Swift::Bool __swiftcall CallNotificationContextProvider.hasCallNotification(for:)(Swift::String a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_2_31();
  OUTLINED_FUNCTION_14_22(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12);
  OUTLINED_FUNCTION_38_1();
  if (v14) {
    outlined consume of CallNotificationContextProvider.CallNotification?(v13, v14, v15, v16);
  }
  return v14 != 0;
}

void DictionaryBackedCache.get(key:)()
{
  uint64_t v50 = v2;
  uint64_t v51 = v1;
  uint64_t v3 = (void *)*v0;
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v47 = *(void *)(v4 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_26(v5, v36);
  uint64_t v49 = v3[11];
  uint64_t v48 = type metadata accessor for Optional(255LL, v49);
  uint64_t v43 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_1_27(255LL, v48, v4, (uint64_t)"value expirationDate ");
  uint64_t v7 = type metadata accessor for Optional(0LL, v6);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v42 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v36 - v13;
  uint64_t v14 = v0 + 2;
  OUTLINED_FUNCTION_22_0((uint64_t)(v0 + 2), (uint64_t)&v52);
  uint64_t v44 = v0;
  uint64_t v15 = v0[2];
  uint64_t v16 = v3[10];
  uint64_t v17 = v3[12];
  uint64_t v18 = v51;
  swift_bridgeObjectRetain();
  Dictionary.subscript.getter(v18, v15, v16, v6, v17);
  swift_bridgeObjectRelease();
  if (OUTLINED_FUNCTION_13_21((uint64_t)v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    OUTLINED_FUNCTION_12_23();
  }

  else
  {
    uint64_t v37 = v16;
    uint64_t v38 = v17;
    uint64_t v40 = v7;
    uint64_t v41 = v12;
    uint64_t v39 = v8;
    uint64_t v23 = v49;
    uint64_t v24 = *(int *)(v6 + 48);
    uint64_t v25 = &v45[v24];
    uint64_t v26 = &v11[v24];
    uint64_t v36 = *(void *)(v48 - 8);
    OUTLINED_FUNCTION_9_21(v36);
    uint64_t v27 = v47;
    uint64_t v28 = v43;
    uint64_t v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v47 + 32))(v25, v26, v43);
    uint64_t v30 = v44;
    uint64_t v31 = v46;
    ((void (*)(uint64_t))v44[5])(v29);
    unint64_t v32 = lazy protocol witness table accessor for type Date and conformance Date();
    char v33 = dispatch thunk of static Comparable.< infix(_:_:)(v31, v25, v28, v32);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v28);
    if ((v33 & 1) != 0)
    {
      uint64_t v34 = *v14;
      swift_bridgeObjectRetain();
      uint64_t v35 = v42;
      Dictionary.subscript.getter(v51, v34, v37, v6, v38);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_27();
      if (!OUTLINED_FUNCTION_13_21(v35))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v50, v35, v48);
        OUTLINED_FUNCTION_5_24(v39);
        goto LABEL_9;
      }

      OUTLINED_FUNCTION_5_24(v39);
    }

    else
    {
      (*(void (**)(uint64_t))(*v30 + 192LL))(v51);
      OUTLINED_FUNCTION_6_27();
    }

    OUTLINED_FUNCTION_12_23();
    uint64_t v22 = v23;
  }

  __swift_storeEnumTagSinglePayload(v19, v20, v21, v22);
LABEL_9:
  OUTLINED_FUNCTION_7_5();
}

uint64_t storeEnumTagSinglePayload for CallNotificationContextProvider.CallNotification( uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)Swift::Bool result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

uint64_t getEnumTagSinglePayload for CallNotificationContextProvider.CallNotification(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t specialized Set._isDisjoint<A>(with:)(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1LL;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1LL;
  }
  uint64_t v25 = a1 + 32;
  uint64_t v4 = a2 + 56;
  swift_bridgeObjectRetain(a1);
  uint64_t v5 = 0LL;
  while (!*(void *)(a2 + 16))
  {
LABEL_20:
    if (++v5 == v2)
    {
      uint64_t v22 = 1LL;
      uint64_t v7 = a1;
      goto LABEL_24;
    }
  }

  uint64_t v6 = (uint64_t *)(v25 + 16 * v5);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  Hasher.init(_seed:)(v26, *(void *)(a2 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v26, v8, v7);
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v11) & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease(v7);
    goto LABEL_20;
  }

  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = (void *)(v12 + 16 * v11);
  uint64_t v14 = v13[1];
  BOOL v15 = *v13 == v8 && v14 == v7;
  if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v13, v14, v8, v7, 0LL) & 1) == 0)
  {
    uint64_t v16 = ~v10;
    for (unint64_t i = v11 + 1; ; unint64_t i = v18 + 1)
    {
      uint64_t v18 = i & v16;
      uint64_t v19 = (void *)(v12 + 16 * v18);
      uint64_t v20 = v19[1];
      BOOL v21 = *v19 == v8 && v20 == v7;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, v8, v7, 0LL) & 1) != 0) {
        goto LABEL_23;
      }
    }

    goto LABEL_19;
  }

void AppResolutionProvider.set(annotatedApp:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = a1 + 16;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v135 = *(void *)(a1 + 40);
  App.appIdentifier.getter();
  if (v10)
  {
    uint64_t v140 = v5;
    outlined init with take of AnnotatedApp?( v6,  (uint64_t)v139,  &demangling cache variable for type metadata for String?);
    uint64_t v138 = *(void *)(a1 + 40);
    OUTLINED_FUNCTION_25_0((uint64_t)(v1 + 2), (uint64_t)v136, 33LL);
    uint64_t v11 = OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_3_103(v11, v12, v13, v14, v15, v16, v17, v18, v129);
    outlined retain of String?((uint64_t)v139);
    outlined retain of Set<String>(&v138);
    specialized Dictionary._Variant.setValue(_:forKey:)();
    swift_endAccess(v136);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_25_0((uint64_t)(v1 + 3), (uint64_t)v136, 1LL);
    uint64_t v19 = v1[3];
    uint64_t v20 = v2[4];
    uint64_t v21 = v2[5];
    uint64_t v22 = v2[6];
    uint64_t v23 = v7;
    uint64_t v24 = v8;
    uint64_t v25 = v2[7];
    uint64_t v26 = v2[8];
    v2[3] = v4;
    v2[4] = v5;
    v2[5] = v23;
    v2[6] = v24;
    v2[7] = v9;
    v2[8] = v135;
    uint64_t v27 = OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_3_103(v27, v28, v29, v30, v31, v32, v33, v34, v130);
    outlined retain of String?((uint64_t)v139);
    outlined retain of Set<String>(&v138);
    outlined consume of AnnotatedApp?(v19, v20, v21, v22, v25, v26);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v35, (uint64_t)static Logger.siriPhone);
    v139[0] = *(void *)(a1 + 8);
    outlined init with take of AnnotatedApp?( v6,  (uint64_t)v136,  &demangling cache variable for type metadata for String?);
    uint64_t v140 = *(void *)(a1 + 40);
    OUTLINED_FUNCTION_3_8();
    outlined retain of Set<String>(v139);
    uint64_t v36 = outlined retain of String?((uint64_t)v136);
    OUTLINED_FUNCTION_3_103(v36, v37, v38, v39, v40, v41, v42, v43, v129);
    OUTLINED_FUNCTION_3_8();
    outlined retain of Set<String>(v139);
    uint64_t v44 = outlined retain of String?((uint64_t)v136);
    uint64_t v52 = OUTLINED_FUNCTION_3_103(v44, v45, v46, v47, v48, v49, v50, v51, v131);
    uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v56 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v137 = v4;
      uint64_t v138 = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v57 = type metadata accessor for App(0LL);
      unint64_t v58 = lazy protocol witness table accessor for type App and conformance App();
      uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter(v57, v58);
      uint64_t v137 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, &v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v55 + 4);
      OUTLINED_FUNCTION_22();
      uint64_t v61 = swift_bridgeObjectRelease();
      uint64_t v68 = OUTLINED_FUNCTION_7_93(v61, v62, v63, v64, v65, v66, v67);
      uint64_t v70 = OUTLINED_FUNCTION_6_88((uint64_t)v68, v69);
      OUTLINED_FUNCTION_2_77(v70, v71, v72, v73, v74, v75, v76, v77, v132);
      uint64_t v78 = OUTLINED_FUNCTION_22();
      uint64_t v85 = OUTLINED_FUNCTION_7_93(v78, v79, v80, v81, v82, v83, v84);
      uint64_t v87 = OUTLINED_FUNCTION_6_88((uint64_t)v85, v86);
      OUTLINED_FUNCTION_2_77(v87, v88, v89, v90, v91, v92, v93, v94, v133);
      _os_log_impl( &dword_0,  v53,  v54,  "#AppResolution annotatedApp: %s could not be cached since it doesn't have an app identifier",  v55,  0xCu);
      swift_arrayDestroy(v56, 1LL);
      OUTLINED_FUNCTION_0_2(v56);
      OUTLINED_FUNCTION_0_2((uint64_t)v55);
    }

    else
    {
      uint64_t v95 = OUTLINED_FUNCTION_22();
      uint64_t v102 = OUTLINED_FUNCTION_7_93(v95, v96, v97, v98, v99, v100, v101);
      uint64_t v104 = OUTLINED_FUNCTION_6_88((uint64_t)v102, v103);
      OUTLINED_FUNCTION_2_77(v104, v105, v106, v107, v108, v109, v110, v111, v132);
      uint64_t v112 = OUTLINED_FUNCTION_22();
      uint64_t v119 = OUTLINED_FUNCTION_7_93(v112, v113, v114, v115, v116, v117, v118);
      uint64_t v121 = OUTLINED_FUNCTION_6_88((uint64_t)v119, v120);
      OUTLINED_FUNCTION_2_77(v121, v122, v123, v124, v125, v126, v127, v128, v134);
    }
  }

uint64_t OUTLINED_FUNCTION_40_1()
{
  return type metadata accessor for CATOption(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_12_6(uint64_t a1)
{
  return *(void *)a1;
}

  ;
}

void OUTLINED_FUNCTION_40_3(uint64_t a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return swift_retain(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_40_5(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + *(void *)(*(void *)(a1 - 8) + 72LL) * v2,
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_0_4(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  return swift_release_n(v0, 2LL);
}

void OUTLINED_FUNCTION_40_6()
{
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_40_9()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_52_0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return swift_task_dealloc(a9);
}

uint64_t OUTLINED_FUNCTION_40_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v7 - 160))( a1,  a2,  a3,  0LL,  a5,  v5,  v6);
}

uint64_t OUTLINED_FUNCTION_40_12()
{
  uint64_t v2 = *v0;
  *(void *)(v1 - 8) = *v0;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t OUTLINED_FUNCTION_40_13()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_39_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

id OUTLINED_FUNCTION_40_14(void *a1)
{
  return [a1 *(SEL *)(v1 + 1320)];
}

uint64_t OUTLINED_FUNCTION_40_15@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

BOOL OUTLINED_FUNCTION_11_5(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_40_16@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_40_17(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 168));
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_121@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, char a9@<W8>)
{
  *(_BYTE *)(v10 + 9__swift_destroy_boxed_opaque_existential_1(v0 + 9) = a9;
  *(void *)(v10 + 48) = a8;
  *(void *)(v10 + 56) = v9;
  *(_BYTE *)(v10 + 98) = a7;
  *(void *)(v10 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = a5;
  *(void *)(v10 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a6;
  *(_BYTE *)(v10 + 97) = a4;
  *(_BYTE *)(v10 + 96) = a3;
  *(void *)(v10 + 16) = result;
  *(void *)(v10 + 24) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_40_18( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_40_19(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_40_21@<X0>(uint64_t a1@<X8>)
{
  return outlined init with take of SpeakableString?(v2, v1 + a1);
}

uint64_t OUTLINED_FUNCTION_40_22()
{
  return swift_bridgeObjectRelease(v0);
}

unint64_t OUTLINED_FUNCTION_40_23()
{
  *(_BYTE *)(v0 - 11outlined consume of AnnounceVoicemailFlow.State(v0, 2) = 10;
  return lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
}

uint64_t OUTLINED_FUNCTION_104@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_40_25()
{
  return swift_bridgeObjectRelease_n(v0, 3LL);
}

void OUTLINED_FUNCTION_40_26(uint64_t a1@<X8>)
{
  *(void *)(v1 + 3outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v2;
  *(void *)(v1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_40_27(uint64_t a1, uint64_t a2)
{
  return Reducer.init(builder:)(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_40_28()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_40_29()
{
  return swift_errorRelease(*(void *)(v0 + 144));
}

uint64_t OUTLINED_FUNCTION_40_30@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_40_31()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_40_32(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
}

uint64_t OUTLINED_FUNCTION_40_33()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  return v0 + *(int *)(*(void *)(v1 - 112) + 40LL);
}

uint64_t OUTLINED_FUNCTION_25_4@<X0>(uint64_t a1@<X8>)
{
  return v3(a1 + 32, v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a2, a3);
}

uint64_t OUTLINED_FUNCTION_25_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_35_0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x656369766564LL;
  a1[2].n128_u64[1] = 0xE600000000000000LL;
  return 0LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  if (v0 >= 0) {
    return _CocoaArrayWrapper.endIndex.getter(v1);
  }
  else {
    return _CocoaArrayWrapper.endIndex.getter(v0);
  }
}

uint64_t OUTLINED_FUNCTION_25_8()
{
  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_25_9()
{
  return __swift_storeEnumTagSinglePayload(v0, 0LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  return swift_release_n(v0, 5LL);
}

  ;
}

void *OUTLINED_FUNCTION_13_10()
{
  *(void *)(v2 + 7outlined consume of AnnounceVoicemailFlow.State(v0, 2) = v1;
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_25_11(uint64_t result)
{
  *(void *)(v1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = result;
  return result;
}

void OUTLINED_FUNCTION_25_12()
{
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 56);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 64) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_13(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_25_14()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_15(uint64_t result, unint64_t a2)
{
  return outlined copy of Data._Representation(result, a2);
}

void OUTLINED_FUNCTION_25_16(void *a1, os_log_s *a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_25_17()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

void OUTLINED_FUNCTION_25_18()
{
}

uint64_t OUTLINED_FUNCTION_25_19(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 32LL))(a1, v2, v1);
}

void *OUTLINED_FUNCTION_25_20( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(void *(**)(uint64_t *__return_ptr))(a2 + 104))(&a9);
}

  ;
}

uint64_t OUTLINED_FUNCTION_25_22(float a1)
{
  float *v2 = a1;
  return swift_bridgeObjectRetain(v1);
}

uint64_t OUTLINED_FUNCTION_25_23(uint64_t a1)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_25_24(uint64_t a1)
{
  return outlined init with take of PersonNameComponents?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_25_25@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_28_1@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_25_26( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  return outlined init with copy of SignalProviding((uint64_t)&a36, (uint64_t)&a26);
}

uint64_t OUTLINED_FUNCTION_25_27@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 24outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_25_28()
{
  return specialized closure #1 in FirstHitIntentResolver.resolve(skIntent:nlIntent:)(v0, v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_29()
{
  return type metadata accessor for SimpleOutputFlowAsync(0LL);
}

_WORD *OUTLINED_FUNCTION_38_4(_WORD *result)
{
  char *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v4, a2, v3);
}

uint64_t OUTLINED_FUNCTION_25_31()
{
  return 0x64657373696DLL;
}

uint64_t OUTLINED_FUNCTION_63_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_12_7()
{
  return swift_release_n(v0, 2LL);
}

  ;
}

id OUTLINED_FUNCTION_89_0(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2);
}

void OUTLINED_FUNCTION_25_33()
{
}

uint64_t OUTLINED_FUNCTION_12_8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_25_34()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_25_35( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &a37);
}

uint64_t OUTLINED_FUNCTION_25_36()
{
  return RREntity.usoEntity.getter();
}

uint64_t OUTLINED_FUNCTION_25_37(uint64_t a1)
{
  return String.init<A>(describing:)(v1, a1);
}

void OUTLINED_FUNCTION_25_38(uint64_t a1@<X8>)
{
  _BYTE v2[24] = v1;
  v2[27] = a1;
  v2[28] = v3 + 3;
}

  ;
}

uint64_t OUTLINED_FUNCTION_25_40()
{
  return 0x756F526F69647561LL;
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

void OUTLINED_FUNCTION_25_41()
{
}

id OUTLINED_FUNCTION_46_1(void *a1)
{
  return [a1 *(SEL *)(v1 + 1088)];
}

uint64_t OUTLINED_FUNCTION_25_42()
{
  return (*(uint64_t (**)(void, void))(v0[38] + 8LL))(v0[39], v0[37]);
}

void OUTLINED_FUNCTION_25_43( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v23 = __swift_project_boxed_opaque_existential_1(v20, v21);
  DeviceState.isPrimaryDisplayDisabled.getter( v21,  v22,  (uint64_t)v23,  v24,  v25,  v26,  v27,  v28,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20);
}

void OUTLINED_FUNCTION_25_44(uint64_t a1@<X8>)
{
  uint64_t v4 = v2 + a1;
  *(void *)uint64_t v4 = v3;
  *(_BYTE *)(v4 + 8) = v1 & 1;
}

uint64_t OUTLINED_FUNCTION_25_45(uint64_t a1, uint64_t a2)
{
  return PhoneError.logged()(a2);
}

uint64_t OUTLINED_FUNCTION_54()
{
  return ((uint64_t (*)(void))swift_deallocObject)();
}

uint64_t OUTLINED_FUNCTION_25_46()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_47()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_25_48()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_49(uint64_t (*a1)(void, uint64_t))
{
  *(void *)(v1 - 128) = *(void *)(v1 - 608);
  return a1(*(void *)(v1 - 336), v1 - 128);
}

uint64_t OUTLINED_FUNCTION_25_50()
{
  return type metadata accessor for PhoneSnippetDataModels(0LL);
}

uint64_t OUTLINED_FUNCTION_25_51()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return dispatch thunk of DeviceState.isMac.getter(v2, v3);
}

uint64_t OUTLINED_FUNCTION_25_52()
{
  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_25_53@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_54(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, *(void *)(v3 - 144));
}

uint64_t OUTLINED_FUNCTION_25_55()
{
  return 0x657079546C6C6163LL;
}

uint64_t OUTLINED_FUNCTION_25_56()
{
  return swift_getEnumCaseMultiPayload(v0, v1);
}

uint64_t OUTLINED_FUNCTION_25_57()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_25_58()
{
  return v1(v2, v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_25_60(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_25_61()
{
  return dispatch thunk of DeviceState.isPad.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_25_62( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return swift_task_dealloc(a17);
}

uint64_t OUTLINED_FUNCTION_25_63()
{
  return swift_errorRetain(v0);
}

uint64_t OUTLINED_FUNCTION_25_64( _OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, char a12)
{
  __int128 v12 = a10;
  a1[1] = a9;
  a1[2] = v12;
  a1[3] = a11;
  return outlined init with copy of CallRecordToCallBackSlotTemplating((uint64_t)&a12, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_25_65()
{
  return type metadata accessor for RRResult(0LL);
}

  ;
}

uint64_t protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionSuccessfulResponse(app:) in conformance PhoneAppResolutionOnDeviceFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionSuccessfulResponse(app:)[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionUnsuccessfulResponse(reason:) in conformance PhoneAppResolutionOnDeviceFlowStrategy;
  return AppResolutionOnDeviceFlowStrategyAsync.makeAppResolutionSuccessfulResponse(app:)(a1, a2, a3, a4);
}

uint64_t partial apply for closure #1 in AppResolutionBeforeResolveFlow.execute()(uint64_t a1)
{
  return closure #1 in AppResolutionBeforeResolveFlow.execute()(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t closure #1 in AppResolutionBeforeResolveFlow.execute()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a3;
  uint64_t v56 = a2;
  uint64_t v4 = type metadata accessor for AppResolutionBeforeResolveFlow.State(0LL);
  __chkstk_darwin();
  uint64_t v58 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v57 = (char *)&v51 - v6;
  uint64_t v7 = type metadata accessor for AppResolutionFlowResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin();
  __int128 v12 = (char *)&v51 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v51 - v13;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v59 = a1;
  uint64_t v18 = v17(v14, a1, v7);
  uint64_t v55 = v16;
  uint64_t v19 = v7;
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v22 = static os_log_type_t.debug.getter(v20, v21);
  if (os_log_type_enabled(v20, v22))
  {
    uint64_t v23 = swift_slowAlloc(12LL, -1LL);
    uint64_t v54 = v4;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v53 = swift_slowAlloc(32LL, -1LL);
    v62[0] = v53;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v52 = v24 + 4;
    v17(v12, (uint64_t)v14, v19);
    uint64_t v25 = String.init<A>(describing:)(v12, v19);
    uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v52, v24 + 12);
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v14, v19);
    _os_log_impl(&dword_0, v20, v22, "#AppResolutionBeforeResolveFlow app resolution flow completed with %s", v24, 0xCu);
    uint64_t v28 = v53;
    swift_arrayDestroy(v53, 1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
    uint64_t v29 = v24;
    uint64_t v4 = v54;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v14, v19);
  }

  uint64_t v30 = v59;
  v17((char *)v10, v59, v19);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v8 + 88))(v10, v19) == enum case for AppResolutionFlowResult.resolved(_:))
  {
    uint64_t v53 = (uint64_t)v17;
    uint64_t v54 = v19;
    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v10, v19);
    uint64_t v31 = *v10;
    uint64_t v32 = swift_retain_n(v31, 2LL);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v35 = static os_log_type_t.debug.getter(v33, v34);
    if (os_log_type_enabled(v33, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v61 = v31;
      v62[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v38 = v4;
      uint64_t v39 = type metadata accessor for App(0LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v41 = v40;
      uint64_t v42 = v39;
      uint64_t v4 = v38;
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter(v42, v41);
      uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v36 + 4, v36 + 12);
      swift_release_n(v31, 2LL);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v33, v35, "#AppResolutionBeforeResolveFlow set meta data for app: %s", v36, 0xCu);
      swift_arrayDestroy(v37, 1LL);
      uint64_t v45 = v37;
      uint64_t v30 = v59;
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    else
    {

      swift_release_n(v31, 2LL);
    }

    uint64_t v46 = swift_retain();
    INIntent.setMetaData(app:previousIntent:sharedGlobals:)(v46, 0LL);
    swift_release_n(v31, 2LL);
    uint64_t v17 = (uint64_t (*)(char *, uint64_t, uint64_t))v53;
    uint64_t v19 = v54;
  }

  else
  {
    v27((char *)v10, v19);
  }

  uint64_t v47 = (uint64_t)v57;
  v17(v57, v30, v19);
  swift_storeEnumTagMultiPayload(v47, v4, 1LL);
  uint64_t v48 = v58;
  outlined init with take of AppResolutionBeforeResolveFlow.State(v47, v58);
  uint64_t v49 = v60 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state;
  swift_beginAccess( v60 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state,  v62,  33LL,  0LL);
  outlined assign with take of AppResolutionBeforeResolveFlow.State(v48, v49);
  return swift_endAccess(v62);
}

uint64_t protocol witness for CATType.getProperty(_:) in conformance PhoneCallMetrics()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160LL))();
}

uint64_t AppResolutionBeforeResolveFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PhoneError(0LL);
  __chkstk_darwin();
  uint64_t v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v6 = OUTLINED_FUNCTION_29_35();
  __chkstk_darwin();
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin();
  uint64_t v10 = &v25[-v9 - 8];
  uint64_t v11 = type metadata accessor for AppResolutionFlowResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v15 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state;
  OUTLINED_FUNCTION_25_0(v15, (uint64_t)v25, 0LL);
  outlined init with copy of AppResolutionBeforeResolveFlow.State(v15, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v6) == 1)
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v16(v14, v10, v11);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a1, v14, v11);
  }

  else
  {
    outlined destroy of MainFlow((uint64_t)v10, type metadata accessor for AppResolutionBeforeResolveFlow.State);
    outlined init with copy of AppResolutionBeforeResolveFlow.State(v15, (uint64_t)v8);
    unint64_t v18 = AppResolutionBeforeResolveFlow.State.description.getter();
    uint64_t v20 = v19;
    outlined destroy of MainFlow((uint64_t)v8, type metadata accessor for AppResolutionBeforeResolveFlow.State);
    *uint64_t v5 = 0xD00000000000001ELL;
    v5[1] = 0x8000000000338140LL;
    v5[2] = v18;
    v5[3] = v20;
    swift_storeEnumTagMultiPayload(v5, v3, 7LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    uint64_t v22 = swift_allocError(v3, v21, 0LL, 0LL);
    PhoneError.logged()(v23);
    outlined destroy of MainFlow((uint64_t)v5, type metadata accessor for PhoneError);
    *(void *)a1 = v22;
    *(_BYTE *)(a1 + 8) = 0;
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v12 + 104))( a1,  enum case for AppResolutionFlowResult.error(_:),  v11);
  }

uint64_t PhoneAppResolutionOnDeviceFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 448LL, 7LL);
}

void PhoneAppResolutionOnDeviceFlowStrategy.deinit()
{
}

uint64_t AnnounceGroupFaceTimeInviteCATPatternsExecutor.__deallocating_deinit()
{
  uint64_t v0 = CATWrapper.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.__deallocating_deinit()
{
  uint64_t v0 = CATWrapperSimple.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t PhoneAppResolutionHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

void *PhoneAppResolutionHelper.deinit()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_appResolver;
  uint64_t v2 = type metadata accessor for AppResolver(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39();
  return v0;
}

uint64_t SmartAppSelectionFeatureManager.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

void *SmartAppSelectionFeatureManager.deinit()
{
  return v0;
}

uint64_t TrialSmartAppSelectionConfigProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t destroy for PhoneAppResolutionLogger(void *a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 13);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  uint64_t v10 = type metadata accessor for CallingIntentRCHFlowStrategy(0LL, a3[10], a3[11], a3[12]);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v10, a4);
}

uint64_t type metadata accessor for CallingIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CallingIntentRCHFlowStrategy);
}

uint64_t partial apply for specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( uint64_t a1, uint64_t a2)
{
  return specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2);
}

{
  uint64_t v2;
  return specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2);
}

{
  uint64_t v2;
  return specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2);
}

uint64_t specialized closure #2 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a1;
  uint64_t v56 = a3;
  uint64_t v61 = a2;
  uint64_t v3 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v8 = swift_retain();
  static CATOption.defaultMode.getter(v8);
  uint64_t v58 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v9 = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v9);
  uint64_t v57 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v10 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v54 = v10;
  uint64_t v11 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v12 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v12);
  uint64_t v13 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v14 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v14);
  uint64_t v15 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v16 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static SiriKitEventSender.current.getter(v72, v17);
  uint64_t v18 = type metadata accessor for AppInfoBuilder();
  uint64_t v19 = swift_allocObject(v18, 16LL, 7LL);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartVideoCallRCHFlowDelegate>);
  uint64_t v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  uint64_t v53 = v19;
  uint64_t v22 = v56;
  uint64_t v23 = specialized CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( v56,  v58,  v57,  v11,  v13,  v15,  v17,  v72,  v53,  v21,  &direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartVideoCallIntent>);
  uint64_t v25 = ParameterResolutionRecord.parameter.getter(v24);
  uint64_t v26 = ParameterIdentifier.name.getter(v25);
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v5, v60);
  v29._uint64_t countAndFlagsBits = v26;
  v29._object = v28;
  if ((PhoneCallSlotNames.init(rawValue:)(v29).value & 0xFE) == 4)
  {
    char v30 = specialized ParameterResolutionRecord<>.isUnsetRelationship.getter( (uint64_t)&demangling cache variable for type metadata for ParameterResolutionRecord<INStartVideoCallIntent>,  (uint64_t (*)(void))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter);
    uint64_t v31 = v55;
    if ((v30 & 1) != 0)
    {
      outlined init with copy of SharedGlobalsProviding( v22 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals,  (uint64_t)&v71);
      id v32 = [objc_allocWithZone(CNContactStore) init];
      uint64_t v69 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for CNContactStore,  &OBJC_CLASS___CNContactStore_ptr);
      uint64_t v70 = &protocol witness table for CNContactStore;
      id v68 = v32;
      uint64_t v66 = &type metadata for LabelTemplatesProvider;
      uint64_t v67 = &protocol witness table for LabelTemplatesProvider;
      uint64_t v33 = swift_allocObject(&unk_3FCA58, 48LL, 7LL);
      uint64_t v65 = v33;
      *(_OWORD *)(v33 + ++*(void *)(v0 + 16) = 0u;
      *(_OWORD *)(v33 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
      uint64_t v34 = type metadata accessor for UnsetRelationshipTemplatesWrapper();
      uint64_t v35 = swift_allocObject(v34, 16LL, 7LL);
      uint64_t v63 = v34;
      uint64_t v64 = &protocol witness table for UnsetRelationshipTemplatesWrapper;
      uint64_t v62 = v35;
      uint64_t v36 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
      static CATOption.defaultMode.getter(v36);
      uint64_t v37 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
      static CATOption.defaultMode.getter(v37);
      CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
      specialized ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)();
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartVideoCallIntent>);
      uint64_t v39 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartVideoCallIntentResponse,  &OBJC_CLASS___INStartVideoCallIntentResponse_ptr);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactUnsetRelationshipFlowStrategy<INStartVideoCallIntent> and conformance ContactUnsetRelationshipFlowStrategy<A>,  &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartVideoCallIntent>);
      uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)( v72,  v38,  v39,  v40);
      uint64_t v43 = v42;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v72,  &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartVideoCallIntent>);
      uint64_t v44 = v41(v31, v61);
    }

    else
    {
      v72[0] = v23;
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentUnsupportedValueFlowStrategy<StartVideoCallRCHFlowDelegate> and conformance CallingIntentUnsupportedValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartVideoCallRCHFlowDelegate>);
      uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)( v72,  v20,  v48);
      uint64_t v43 = v50;
      uint64_t v44 = v49(v31, v61);
    }
  }

  else
  {
    v72[0] = v23;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentUnsupportedValueFlowStrategy<StartVideoCallRCHFlowDelegate> and conformance CallingIntentUnsupportedValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartVideoCallRCHFlowDelegate>);
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)( v72,  v20,  v45);
    uint64_t v43 = v47;
    uint64_t v44 = v46(v55, v61);
  }

  uint64_t v51 = v44;
  swift_release(v23);
  swift_release(v43);
  return v51;
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  char v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  void v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _UNKNOWN **v66;
  uint64_t v67;
  ValueMetadata *v68;
  _UNKNOWN **v69;
  id v70;
  uint64_t v71;
  _UNKNOWN **v72;
  uint64_t v73;
  void v74[24];
  uint64_t v58 = a3;
  uint64_t v61 = a2;
  uint64_t v56 = a1;
  uint64_t v3 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin();
  uint64_t v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v8 = swift_retain();
  static CATOption.defaultMode.getter(v8);
  uint64_t v60 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v9 = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v9);
  uint64_t v59 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v10 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v10);
  v55[1] = v10;
  uint64_t v57 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v11 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v11);
  uint64_t v12 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v13 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v13);
  uint64_t v14 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v15 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v15);
  uint64_t v16 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static SiriKitEventSender.current.getter(v74, v16);
  uint64_t v17 = type metadata accessor for AppInfoBuilder();
  uint64_t v18 = swift_allocObject(v17, 16LL, 7LL);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  uint64_t v54 = v18;
  uint64_t v21 = v58;
  uint64_t v22 = v61;
  uint64_t v23 = specialized CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( v58,  v60,  v59,  v57,  v12,  v14,  v16,  v74,  v54,  v20,  &direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartCallIntent>);
  uint64_t v25 = v22;
  uint64_t v26 = ParameterResolutionRecord.parameter.getter(v24);
  uint64_t v27 = ParameterIdentifier.name.getter(v26);
  Swift::String v29 = v28;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v5, v63);
  v30._uint64_t countAndFlagsBits = v27;
  v30._object = v29;
  if ((PhoneCallSlotNames.init(rawValue:)(v30).value & 0xFE) == 4)
  {
    uint64_t v31 = specialized ParameterResolutionRecord<>.isUnsetRelationship.getter();
    id v32 = v56;
    if ((v31 & 1) != 0)
    {
      outlined init with copy of SharedGlobalsProviding( v21 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals,  (uint64_t)&v73);
      uint64_t v33 = [objc_allocWithZone(CNContactStore) init];
      uint64_t v71 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for CNContactStore,  &OBJC_CLASS___CNContactStore_ptr);
      uint64_t v72 = &protocol witness table for CNContactStore;
      uint64_t v70 = v33;
      id v68 = &type metadata for LabelTemplatesProvider;
      uint64_t v69 = &protocol witness table for LabelTemplatesProvider;
      uint64_t v34 = swift_allocObject(&unk_3FCA58, 48LL, 7LL);
      uint64_t v67 = v34;
      *(_OWORD *)(v34 + ++*(void *)(v0 + 16) = 0u;
      *(_OWORD *)(v34 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
      uint64_t v35 = type metadata accessor for UnsetRelationshipTemplatesWrapper();
      uint64_t v36 = swift_allocObject(v35, 16LL, 7LL);
      uint64_t v65 = v35;
      uint64_t v66 = &protocol witness table for UnsetRelationshipTemplatesWrapper;
      uint64_t v64 = v36;
      uint64_t v37 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
      static CATOption.defaultMode.getter(v37);
      uint64_t v38 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
      static CATOption.defaultMode.getter(v38);
      CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
      specialized ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)();
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartCallIntent>);
      uint64_t v40 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartCallIntentResponse,  &OBJC_CLASS___INStartCallIntentResponse_ptr);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactUnsetRelationshipFlowStrategy<INStartCallIntent> and conformance ContactUnsetRelationshipFlowStrategy<A>,  &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartCallIntent>);
      uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)( v74,  v39,  v40,  v41);
      uint64_t v44 = v43;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v74,  &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartCallIntent>);
      uint64_t v45 = v42(v32, v25);
    }

    else
    {
      v74[0] = v23;
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentUnsupportedValueFlowStrategy<StartCallRCHFlowDelegate> and conformance CallingIntentUnsupportedValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartCallRCHFlowDelegate>);
      uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)( v74,  v19,  v49);
      uint64_t v44 = v51;
      uint64_t v45 = v50(v32, v25);
    }
  }

  else
  {
    v74[0] = v23;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentUnsupportedValueFlowStrategy<StartCallRCHFlowDelegate> and conformance CallingIntentUnsupportedValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartCallRCHFlowDelegate>);
    uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)( v74,  v19,  v46);
    uint64_t v44 = v48;
    uint64_t v45 = v47(v56, v25);
  }

  uint64_t v52 = v45;
  swift_release(v23);
  swift_release(v44);
  return v52;
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  char v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _UNKNOWN **v64;
  uint64_t v65;
  ValueMetadata *v66;
  _UNKNOWN **v67;
  id v68;
  uint64_t v69;
  _UNKNOWN **v70;
  uint64_t v71;
  void v72[24];
  uint64_t v55 = a1;
  uint64_t v56 = a3;
  uint64_t v61 = a2;
  uint64_t v3 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v8 = swift_retain();
  static CATOption.defaultMode.getter(v8);
  uint64_t v58 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v9 = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v9);
  uint64_t v57 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v10 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v54 = v10;
  uint64_t v11 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v12 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v12);
  uint64_t v13 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v14 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v14);
  uint64_t v15 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v16 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  static SiriKitEventSender.current.getter(v72, v17);
  uint64_t v18 = type metadata accessor for AppInfoBuilder();
  uint64_t v19 = swift_allocObject(v18, 16LL, 7LL);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartAudioCallRCHFlowDelegate>);
  uint64_t v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  uint64_t v53 = v19;
  uint64_t v22 = v56;
  uint64_t v23 = specialized CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( v56,  v58,  v57,  v11,  v13,  v15,  v17,  v72,  v53,  v21,  &direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartAudioCallIntent>);
  uint64_t v25 = ParameterResolutionRecord.parameter.getter(v24);
  uint64_t v26 = ParameterIdentifier.name.getter(v25);
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v5, v60);
  v29._uint64_t countAndFlagsBits = v26;
  v29._object = v28;
  if ((PhoneCallSlotNames.init(rawValue:)(v29).value & 0xFE) == 4)
  {
    char v30 = specialized ParameterResolutionRecord<>.isUnsetRelationship.getter( (uint64_t)&demangling cache variable for type metadata for ParameterResolutionRecord<INStartAudioCallIntent>,  (uint64_t (*)(void))outlined bridged method (pb) of @objc INStartAudioCallIntent.contacts.getter);
    uint64_t v31 = v55;
    if ((v30 & 1) != 0)
    {
      outlined init with copy of SharedGlobalsProviding( v22 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals,  (uint64_t)&v71);
      id v32 = [objc_allocWithZone(CNContactStore) init];
      uint64_t v69 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for CNContactStore,  &OBJC_CLASS___CNContactStore_ptr);
      uint64_t v70 = &protocol witness table for CNContactStore;
      id v68 = v32;
      uint64_t v66 = &type metadata for LabelTemplatesProvider;
      uint64_t v67 = &protocol witness table for LabelTemplatesProvider;
      uint64_t v33 = swift_allocObject(&unk_3FCA58, 48LL, 7LL);
      uint64_t v65 = v33;
      *(_OWORD *)(v33 + ++*(void *)(v0 + 16) = 0u;
      *(_OWORD *)(v33 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
      uint64_t v34 = type metadata accessor for UnsetRelationshipTemplatesWrapper();
      uint64_t v35 = swift_allocObject(v34, 16LL, 7LL);
      uint64_t v63 = v34;
      uint64_t v64 = &protocol witness table for UnsetRelationshipTemplatesWrapper;
      uint64_t v62 = v35;
      uint64_t v36 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
      static CATOption.defaultMode.getter(v36);
      uint64_t v37 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
      static CATOption.defaultMode.getter(v37);
      CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
      specialized ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)();
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartAudioCallIntent>);
      uint64_t v39 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartAudioCallIntentResponse,  &OBJC_CLASS___INStartAudioCallIntentResponse_ptr);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactUnsetRelationshipFlowStrategy<INStartAudioCallIntent> and conformance ContactUnsetRelationshipFlowStrategy<A>,  &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartAudioCallIntent>);
      uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)( v72,  v38,  v39,  v40);
      uint64_t v43 = v42;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v72,  &demangling cache variable for type metadata for ContactUnsetRelationshipFlowStrategy<INStartAudioCallIntent>);
      uint64_t v44 = v41(v31, v61);
    }

    else
    {
      v72[0] = v23;
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentUnsupportedValueFlowStrategy<StartAudioCallRCHFlowDelegate> and conformance CallingIntentUnsupportedValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartAudioCallRCHFlowDelegate>);
      uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)( v72,  v20,  v48);
      uint64_t v43 = v50;
      uint64_t v44 = v49(v31, v61);
    }
  }

  else
  {
    v72[0] = v23;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentUnsupportedValueFlowStrategy<StartAudioCallRCHFlowDelegate> and conformance CallingIntentUnsupportedValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentUnsupportedValueFlowStrategy<StartAudioCallRCHFlowDelegate>);
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)( v72,  v20,  v45);
    uint64_t v43 = v47;
    uint64_t v44 = v46(v55, v61);
  }

  uint64_t v51 = v44;
  swift_release(v23);
  swift_release(v43);
  return v51;
}

uint64_t type metadata accessor for PhoneCallCommonCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PhoneCallCommonCATs;
  if (!type metadata singleton initialization cache for PhoneCallCommonCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PhoneCallCommonCATs);
  }
  return result;
}

uint64_t PhoneCallCommonCATs.__allocating_init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PhoneCallCommonCATs.init(templateDir:options:globals:)(a1, a2, a3);
}

uint64_t PhoneCallCommonCATs.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?( a1,  (uint64_t)v11,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v12 = CATWrapper.init(templateDir:options:globals:)(v11, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  outlined destroy of SpeakableString?(a1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v12;
}

uint64_t type metadata accessor for PhoneCallCommonCATPatternsExecutor(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PhoneCallCommonCATPatternsExecutor;
  if (!type metadata singleton initialization cache for PhoneCallCommonCATPatternsExecutor) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PhoneCallCommonCATPatternsExecutor);
  }
  return result;
}

uint64_t AnnounceVoicemailCATs.__allocating_init(templateDir:options:globals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AnnounceVoicemailCATs.init(templateDir:options:globals:)(a1, a2, a3);
}

uint64_t AnnounceVoicemailCATs.init(templateDir:options:globals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of URL?(a1, (uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v12 = CATWrapper.init(templateDir:options:globals:)(v11, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  outlined destroy of URL?(a1);
  return v12;
}

uint64_t outlined init with copy of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of URL?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PhoneCallCommonCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PhoneCallCommonCATsSimple;
  if (!type metadata singleton initialization cache for PhoneCallCommonCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PhoneCallCommonCATsSimple);
  }
  return result;
}

uint64_t closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest()
{
  return OutputGenerationManifest.listenAfterSpeaking.setter(0LL);
}

PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional __swiftcall PhoneCallSlotNames.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  unint64_t v2 = _findStringSwitchCaseWithCache(cases:string:cache:)( &outlined read-only object #0 of PhoneCallSlotNames.init(rawValue:),  rawValue._countAndFlagsBits,  rawValue._object,  &outlined variable #1 of PhoneCallSlotNames.init(rawValue:));
  swift_bridgeObjectRelease(object);
  if (v2 >= 0x14) {
    return (PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional)20;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional)v2;
  }
}

uint64_t specialized ParameterResolutionRecord<>.isUnsetRelationship.getter(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v6 = OUTLINED_FUNCTION_172_0();
  ParameterResolutionRecord.app.getter(v6);
  Swift::Bool v7 = App.isFirstParty()();
  OUTLINED_FUNCTION_38_1();
  if (v7)
  {
    uint64_t v8 = ParameterResolutionRecord.parameter.getter(v6);
    uint64_t v9 = ParameterIdentifier.multicardinalIndex.getter(v8);
    char v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    uint64_t v12 = (v11 & 1) != 0 ? 0LL : v9;
    uint64_t v13 = (void *)OUTLINED_FUNCTION_173_0();
    uint64_t v14 = a2();

    if (v14)
    {
      if (v12 < 0) {
        goto LABEL_14;
      }
      if ((unint64_t)v14 >> 62)
      {
        uint64_t v21 = v14 >= 0 ? v14 & 0xFFFFFFFFFFFFFF8LL : v14;
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v21);
        OUTLINED_FUNCTION_62();
      }

      else
      {
        uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8LL));
      }

      if (v12 >= v15)
      {
LABEL_14:
        OUTLINED_FUNCTION_62();
      }

      else
      {
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v12, (v14 & 0xC000000000000001LL) == 0, v14);
        if ((v14 & 0xC000000000000001LL) != 0) {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v14);
        }
        else {
          id v16 = *(id *)(v14 + 8 * v12 + 32);
        }
        uint64_t v17 = v16;
        OUTLINED_FUNCTION_62();
        id v18 = [v17 relationship];

        if (v18)
        {
          uint64_t v19 = (void *)OUTLINED_FUNCTION_173_0();
        }
      }
    }
  }

  return 0LL;
}

uint64_t specialized ParameterResolutionRecord<>.isUnsetRelationship.getter()
{
  uint64_t v0 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartCallIntent>);
  uint64_t v5 = ParameterResolutionRecord.app.getter(v4);
  Swift::Bool v6 = App.isFirstParty()();
  swift_release(v5);
  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = ParameterResolutionRecord.parameter.getter(v4);
  uint64_t v8 = ParameterIdentifier.multicardinalIndex.getter(v7);
  char v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v11 = (v10 & 1) != 0 ? 0LL : v8;
  uint64_t v12 = (void *)ParameterResolutionRecord.intent.getter(v4);
  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v12);
  uint64_t v14 = v13;

  if (!v14) {
    return 0LL;
  }
  if (v11 < 0) {
    goto LABEL_19;
  }
  if ((unint64_t)v14 >> 62)
  {
    uint64_t v41 = v14 >= 0 ? v14 & 0xFFFFFFFFFFFFFF8LL : v14;
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8LL));
  }

  if (v11 >= v15)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return 0LL;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v11, (v14 & 0xC000000000000001LL) == 0, v14);
  if ((v14 & 0xC000000000000001LL) != 0) {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v14);
  }
  else {
    id v16 = *(id *)(v14 + 8 * v11 + 32);
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  id v18 = [v17 relationship];

  if (!v18) {
    return 0LL;
  }
  uint64_t v19 = (void *)ParameterResolutionRecord.intent.getter(v4);
  uint64_t v20 = (void *)ParameterResolutionRecord.result.getter(v4);
  uint64_t v44 = v19;
  id v45 = v20;
  id v21 = v19;
  id v22 = v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (INStartCallIntent, INIntentResolutionResult));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (INStartCallIntent, INStartCallContactResolutionResult));
  if (!swift_dynamicCast(&v42, &v44, v23))
  {

    id v18 = v44;
    id v40 = v45;

    goto LABEL_22;
  }

  id v24 = v43;
  uint64_t v25 = (char *)[v43 unsupportedReason];

  uint64_t v26 = v44;
  if (v25 != (_BYTE *)&dword_0 + 1)
  {
LABEL_22:

    return 0LL;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v27 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  id v28 = v18;
  Swift::String v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
  if (os_log_type_enabled(v29, v31))
  {
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = swift_slowAlloc(96LL, -1LL);
    uint64_t v44 = (void *)v33;
    *(_DWORD *)uint64_t v32 = 136315650;
    id v42 = (id)type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent.Type);
    uint64_t v35 = String.init<A>(describing:)(&v42, v34);
    id v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v32 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    id v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000013LL,  0x8000000000349590LL,  (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v32 + 14);
    *(_WORD *)(v32 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    id v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v32 + 24);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v29,  v31,  "#ParameterResolutionRecord<%s> %s Found unsetRelationship = %s",  (uint8_t *)v32,  0x20u);
    swift_arrayDestroy(v33, 3LL);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {
  }

  return 1LL;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Bool v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  char *v23;
  void *v24;
  uint64_t v25;
  id v26;
  os_log_s *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v0 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INAddCallParticipantIntent>);
  uint64_t v5 = ParameterResolutionRecord.app.getter(v4);
  Swift::Bool v6 = App.isFirstParty()();
  swift_release(v5);
  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = ParameterResolutionRecord.parameter.getter(v4);
  uint64_t v8 = ParameterIdentifier.multicardinalIndex.getter(v7);
  char v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v11 = (v10 & 1) != 0 ? 0LL : v8;
  uint64_t v12 = (void *)ParameterResolutionRecord.intent.getter(v4);
  outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(v12);
  uint64_t v14 = v13;

  if (!v14) {
    return 0LL;
  }
  if (v11 < 0) {
    goto LABEL_19;
  }
  if ((unint64_t)v14 >> 62)
  {
    unint64_t v38 = v14 >= 0 ? v14 & 0xFFFFFFFFFFFFFF8LL : v14;
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8LL));
  }

  if (v11 >= v15)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return 0LL;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v11, (v14 & 0xC000000000000001LL) == 0, v14);
  if ((v14 & 0xC000000000000001LL) != 0) {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v14);
  }
  else {
    id v16 = *(id *)(v14 + 8 * v11 + 32);
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  id v18 = [v17 relationship];

  if (!v18) {
    return 0LL;
  }
  uint64_t v19 = ParameterResolutionRecord.intent.getter(v4);
  uint64_t v20 = (void *)ParameterResolutionRecord.result.getter(v4);
  uint64_t v41 = (void *)v19;
  id v42 = v20;
  id v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (INAddCallParticipantIntent, INIntentResolutionResult));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (INAddCallParticipantIntent, INAddCallParticipantParticipantResolutionResult));
  if ((swift_dynamicCast(&v39, &v41, v21) & 1) == 0)
  {

    id v18 = v41;
    goto LABEL_22;
  }

  id v22 = v40;
  uint64_t v23 = (char *)[v40 unsupportedReason];

  id v24 = v41;
  if (v23 != (_BYTE *)&dword_0 + 1)
  {
LABEL_22:

    return 0LL;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v25 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  uint64_t v26 = v18;
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  Swift::String v29 = static os_log_type_t.debug.getter(v27, v28);
  if (os_log_type_enabled(v27, v29))
  {
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    os_log_type_t v31 = swift_slowAlloc(96LL, -1LL);
    uint64_t v41 = (void *)v31;
    *(_DWORD *)uint64_t v30 = 136315650;
    uint64_t v39 = (id)type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent,  &OBJC_CLASS___INAddCallParticipantIntent_ptr);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantIntent.Type);
    uint64_t v33 = String.init<A>(describing:)(&v39, v32);
    uint64_t v39 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, (uint64_t *)&v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v30 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v39 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000013LL,  0x8000000000349590LL,  (uint64_t *)&v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v30 + 14);
    *(_WORD *)(v30 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v39 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, (uint64_t *)&v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v30 + 24);

    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v27,  v29,  "#ParameterResolutionRecord<%s> %s Found unsetRelationship = %s",  (uint8_t *)v30,  0x20u);
    swift_arrayDestroy(v31, 3LL);
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  else
  {
  }

  return 1LL;
}

void outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter( void *a1, SEL *a2, unint64_t *a3, void *a4)
{
  id v6 = OUTLINED_FUNCTION_103_5(a1, a2);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for CNContactStore(0LL, a3, a4);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);
  }

  OUTLINED_FUNCTION_6();
}

void outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(void *a1)
{
}

uint64_t protocol witness for UnsupportedValueFlowStrategyAsync.makeUnsupportedValueOutput(resolveRecord:) in conformance CallingIntentUnsupportedValueFlowStrategy<A>( uint64_t a1, uint64_t a2)
{
  id v6 = *(int **)(**(void **)v2 + 296LL);
  char v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + ++*(void *)(v0 + 16) = v7;
  void *v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v9(a1, a2);
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueOutput(resolveRecord:)()
{
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc(v3);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    swift_task_dealloc(*(void *)(v0 + 88));
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_6_17(v5);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char v7;
  void *v8;
  uint64_t v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v1 = *(void *)(v0 + 80);
  OUTLINED_FUNCTION_105_3();
  uint64_t v2 = OUTLINED_FUNCTION_93_0();
  uint64_t v3 = OUTLINED_FUNCTION_70_9(v2);
  ParameterResolutionRecord.parameter.getter(v3);
  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  uint64_t v4 = (void *)ParameterResolutionRecord.result.getter(v3);
  uint64_t v5 = OUTLINED_FUNCTION_85_5();
  uint64_t v7 = CallingIntentUnsupportedValueFlowStrategy.shouldEnableFeatureOnResponseFramework(parameterName:intentResolutionResult:)( v5,  v6);

  OUTLINED_FUNCTION_70_2();
  if ((v7 & 1) != 0)
  {
    uint64_t v8 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(**(void **)(v0 + 40) + 312LL));
    *(void *)(v0 + 96) = v8;
    char v9 = OUTLINED_FUNCTION_55_8(v8);
    return v14(v9);
  }

  else
  {
    uint64_t v11 = (void *)swift_task_alloc(dword_432344);
    *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
    uint64_t v12 = OUTLINED_FUNCTION_55_8(v11);
    return CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( v12,  v13);
  }

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_132_2(*(void *)(v0 + 112), v2);
  swift_task_dealloc(*(void *)(v0 + 88));
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v1 = *(void *)(v0 + 104);
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  uint64_t v2 = *(void *)(v0 + 64);
  swift_errorRetain(v1);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast(v2, v0 + 16, v3))
  {
    uint64_t v4 = *(void *)(v0 + 64);
    if (swift_getEnumCaseMultiPayload(v4, *(void *)(v0 + 56)) == 4)
    {
      swift_errorRelease(*(void *)(v0 + 104));
      outlined destroy of CommonDirectAction(v4, type metadata accessor for PhoneError);
      uint64_t v5 = (void *)swift_task_alloc(dword_432344);
      *(void *)(v0 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v5;
      id v6 = OUTLINED_FUNCTION_55_8(v5);
      return CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueTemplatingResultOutput(resolveRecord:)( v6,  v7);
    }

    outlined destroy of CommonDirectAction(v4, type metadata accessor for PhoneError);
  }

  char v9 = OUTLINED_FUNCTION_170_0();
  swift_willThrow(v9, v10, v11, v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_169_0();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 128) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_169_0();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueOutput(resolveRecord:)( uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = *v2;
  uint64_t v4 = OUTLINED_FUNCTION_82_0();
  v3[7] = v4;
  v3[8] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = OUTLINED_FUNCTION_113_3();
  v3[9] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[10] = v6;
  v3[11] = OUTLINED_FUNCTION_23(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.shouldEnableFeatureOnResponseFramework(parameterName:intentResolutionResult:)( uint64_t a1, void *a2)
{
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  if (PhoneCallSlotNames.init(rawValue:)(v4).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_preferredCallProvider)
  {
    if ([(id)objc_opt_self(TUCallCapabilities) supportsDisplayingFaceTimeVideoCalls]) {
      return 0LL;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v6 = OUTLINED_FUNCTION_15_1();
    uint64_t v7 = (os_log_s *)OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
    os_log_type_t v9 = static os_log_type_t.debug.getter(v7, v8);
    if (os_log_type_enabled(v7, v9))
    {
      char v10 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)char v10 = 0;
      _os_log_impl( &dword_0,  v7,  v9,  "#CallingIntentUnsupportedValueFlowStrategy shouldEnableFeatureOnResponseFramework: this device has more likely F aceTime restriction based on region. Returning unsupported call capability RF dialog..",  v10,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v10);
    }
  }

  return 1LL;
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueRFOutput(resolveRecord:)()
{
  v1[27] = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    uint64_t v5 = (void *)v1[24];
    uint64_t v6 = (void *)v1[23];
    swift_release(v1[25]);

    OUTLINED_FUNCTION_57_11();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    uint64_t v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_6_17(v7);
  }

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_81_7();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    uint64_t v5 = *(void **)(v1 + 224);

    OUTLINED_FUNCTION_57_11();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    uint64_t v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_6_17(v6);
  }

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t (*v7)(void);
  OUTLINED_FUNCTION_81_7();
  OUTLINED_FUNCTION_39_0(v2);
  v1[21] = v0;
  swift_task_dealloc(v3);
  Swift::String v4 = (void *)v1[19];
  uint64_t v5 = (void *)v1[17];
  if (v0)
  {

    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_16_3();
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    OUTLINED_FUNCTION_39();

    OUTLINED_FUNCTION_16_3();
    OUTLINED_FUNCTION_57_11();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    uint64_t v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_6_17(v7);
  }

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void **)(v0 + 224);

  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_106_2();
  OUTLINED_FUNCTION_132_2(*(void *)(v1 + 176), v2);
  swift_task_dealloc(*(void *)(v1 + 120));
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void **)(v0 + 184);
  swift_release(*(void *)(v0 + 200));

  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_56_10();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueRFOutput(resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  a27 = v29;
  a28 = v30;
  a26 = v28;
  uint64_t v31 = *(void *)(v28 + 120);
  uint64_t v32 = *(void *)(v28 + 96);
  ParameterResolutionRecord.parameter.getter(*(void *)(v28 + 64));
  uint64_t v33 = OUTLINED_FUNCTION_136_1();
  uint64_t v35 = v34;
  unint64_t v36 = *(void (**)(uint64_t))(v32 + 8);
  uint64_t v37 = OUTLINED_FUNCTION_120_0();
  v36(v37);
  v38._uint64_t countAndFlagsBits = v33;
  v38._object = v35;
  switch(PhoneCallSlotNames.init(rawValue:)(v38).value)
  {
    case PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_preferredCallProvider:
      uint64_t v55 = (void *)swift_task_alloc(dword_432364);
      *(void *)(v28 + 176) = v55;
      OUTLINED_FUNCTION_55_8(v55);
      OUTLINED_FUNCTION_15_30();
      uint64_t result = CallingIntentUnsupportedValueFlowStrategy.makePreferredCallProviderUnsupportedValueOutput(resolveRecord:)( v56,  v57);
      break;
    case PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_contact:
    case PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_contacts:
      uint64_t v40 = *(void *)(v28 + 104);
      uint64_t v39 = *(void *)(v28 + 112);
      uint64_t v41 = *(void *)(v28 + 88);
      uint64_t v42 = *(void *)(v28 + 64);
      *(void *)(v28 + 128) = ParameterResolutionRecord.app.getter(v42);
      *(void *)(v28 + 136) = ParameterResolutionRecord.intent.getter(v42);
      uint64_t v43 = ParameterResolutionRecord.parameter.getter(v42);
      ParameterIdentifier.name.getter(v43);
      *(void *)(v28 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v44;
      ((void (*)(uint64_t, uint64_t))v36)(v39, v41);
      uint64_t v45 = ParameterResolutionRecord.parameter.getter(v42);
      ParameterIdentifier.multicardinalIndex.getter(v45);
      ((void (*)(uint64_t, uint64_t))v36)(v40, v41);
      *(void *)(v28 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = ParameterResolutionRecord.result.getter(v42);
      uint64_t v46 = (void *)swift_task_alloc(dword_43236C);
      *(void *)(v28 + 16outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v46;
      *uint64_t v46 = v28;
      v46[1] = CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueRFOutput(resolveRecord:);
      OUTLINED_FUNCTION_15_30();
      uint64_t result = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)( v47,  v48,  v49,  v50,  v51,  v52,  v53);
      break;
    case PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_callCapability:
      *(void *)(v28 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_129_2();
      *(void *)(v28 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = ParameterResolutionRecord.result.getter(v31);
      *(void *)(v28 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = ParameterResolutionRecord.app.getter(v31);
      uint64_t v74 = (void *)swift_task_alloc(dword_43235C);
      *(void *)(v28 + 208) = v74;
      OUTLINED_FUNCTION_104_3(v74);
      OUTLINED_FUNCTION_15_30();
      uint64_t result = CallingIntentUnsupportedValueFlowStrategy.makeCallCapabilityUnsupportedValueOutput(intent:intentResolutionResult:app:)( v75,  v76,  v77,  v78);
      break;
    case PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_callRecordToCallBack:
      *(void *)(v28 + 22__swift_destroy_boxed_opaque_existential_1(v0 + 4) = OUTLINED_FUNCTION_129_2();
      *(void *)(v28 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = ParameterResolutionRecord.result.getter(v31);
      uint64_t v79 = (void *)swift_task_alloc(dword_432354);
      *(void *)(v28 + 24outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v79;
      OUTLINED_FUNCTION_104_3(v79);
      OUTLINED_FUNCTION_15_30();
      uint64_t result = CallingIntentUnsupportedValueFlowStrategy.makeContactsNoCallHistoryForRedialUnsupportedValueOutput(intent:intentResolutionResult:)( v80,  v81);
      break;
    default:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v59 = *(void *)(v28 + 72);
      uint64_t v58 = *(void *)(v28 + 80);
      uint64_t v60 = *(void *)(v28 + 64);
      uint64_t v61 = *(void *)(v28 + 32);
      uint64_t v62 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v62, (uint64_t)static Logger.siriPhone);
      uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v58, v61, v60);
      uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
      os_log_type_t v66 = static os_log_type_t.debug.getter(v64, v65);
      if (OUTLINED_FUNCTION_124_2(v64))
      {
        uint64_t v67 = *(void *)(v28 + 120);
        uint64_t v106 = *(void *)(v28 + 88);
        uint64_t v68 = *(void *)(v28 + 64);
        uint64_t v107 = *(void *)(v28 + 72);
        uint64_t v105 = *(void *)(v28 + 80);
        uint64_t v69 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v70 = OUTLINED_FUNCTION_7_0(32LL);
        a15 = v70;
        *(_DWORD *)uint64_t v69 = 136315138;
        uint64_t v71 = ParameterResolutionRecord.parameter.getter(v68);
        ParameterIdentifier.name.getter(v71);
        uint64_t v72 = ((uint64_t (*)(uint64_t, uint64_t))v36)(v67, v106);
        *(void *)(v28 + ++*(void *)(v0 + 16) = OUTLINED_FUNCTION_166_0(v72, v73, &a15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v28 + 16, v28 + 24, v69 + 4);
        OUTLINED_FUNCTION_70_2();
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v105, v68);
        OUTLINED_FUNCTION_57_0( &dword_0,  v64,  v66,  "#CallingIntentUnsupportedValueFlowStrategy makeUnsupportedValueOutput: the corresponding dialog for Slot %s ha sn't been migrated to Response Framework.",  v69);
        OUTLINED_FUNCTION_17_0(v70);
        OUTLINED_FUNCTION_0_2(v70);
        OUTLINED_FUNCTION_0_2((uint64_t)v69);
      }

      else
      {
        OUTLINED_FUNCTION_54_9(*(void *)(v28 + 72));
      }

      uint64_t v82 = *(void **)(v28 + 56);
      uint64_t v83 = *(void *)(v28 + 64);
      uint64_t v84 = *(void *)(v28 + 48);
      a15 = 0LL;
      a16 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(20LL);
      swift_bridgeObjectRelease();
      a15 = 0xD000000000000012LL;
      a16 = 0x800000000034A1B0LL;
      uint64_t v85 = ParameterResolutionRecord.parameter.getter(v83);
      ParameterIdentifier.name.getter(v85);
      OUTLINED_FUNCTION_135_2();
      uint64_t v86 = OUTLINED_FUNCTION_161_1();
      v36(v86);
      v87._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_85_5();
      String.append(_:)(v87);
      OUTLINED_FUNCTION_70_2();
      unint64_t v88 = a16;
      *uint64_t v82 = a15;
      v82[1] = v88;
      OUTLINED_FUNCTION_179();
      v82[2] = v89;
      void v82[3] = v90;
      OUTLINED_FUNCTION_179();
      v82[4] = v91;
      v82[5] = v92;
      v82[6] = 124LL;
      uint64_t v93 = OUTLINED_FUNCTION_120_0();
      swift_storeEnumTagMultiPayload(v93, v94, 4LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
      OUTLINED_FUNCTION_4_4(v84, v95);
      PhoneError.logged()(v96);
      outlined destroy of CommonDirectAction((uint64_t)v82, type metadata accessor for PhoneError);
      swift_willThrow(v97, v98, v99, v100, v101, v102, v103, v104);
      swift_task_dealloc(*(void *)(v28 + 120));
      OUTLINED_FUNCTION_23_3();
      OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_46_0();
      uint64_t result = OUTLINED_FUNCTION_36_14(*(uint64_t (**)(void))(v28 + 8));
      break;
  }

  return result;
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUnsupportedValueRFOutput(resolveRecord:)( uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = OUTLINED_FUNCTION_82_0();
  v3[6] = v4;
  v3[7] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = OUTLINED_FUNCTION_93_0();
  uint64_t v6 = OUTLINED_FUNCTION_70_9(v5);
  v3[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[9] = v7;
  v3[10] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = OUTLINED_FUNCTION_113_3();
  v3[11] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[12] = v9;
  v3[13] = OUTLINED_FUNCTION_8_30(v9);
  void v3[14] = OUTLINED_FUNCTION_28();
  v3[15] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)()
{
  *(void *)(v2 + 968) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 976) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 992));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 912));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 952));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 928) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 936) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  OUTLINED_FUNCTION_50_11();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_106_2();
  OUTLINED_FUNCTION_39_0(v4);
  v1[130] = v0;
  swift_task_dealloc(v5);
  uint64_t v6 = v1[89];
  if (!v0) {
    v1[131] = v3;
  }
  outlined destroy of PhoneCallNLIntent?(v6, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_67_11(v7, v8, v9);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = *(void **)(v0 + 1016);
  uint64_t v2 = *(void **)(v0 + 832);
  uint64_t v3 = *(void *)(v0 + 720);

  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_22();
  outlined destroy of PhoneCallNLIntent?(v3, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_114_1();
  OUTLINED_FUNCTION_76_1();

  OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t (*v8)(void);
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = *(void **)(v0 + 832);
  uint64_t v2 = *(void *)(v0 + 808);
  uint64_t v3 = *(void *)(v0 + 792);
  uint64_t v4 = *(void *)(v0 + 784);
  uint64_t v5 = *(void *)(v0 + 744);

  OUTLINED_FUNCTION_22();
  uint64_t v6 = *(void (**)(uint64_t))(v3 + 8);
  uint64_t v7 = OUTLINED_FUNCTION_161_1();
  v6(v7);
  outlined destroy of CommonDirectAction(v5, type metadata accessor for ButtonConfigurationModel);
  ((void (*)(uint64_t, uint64_t))v6)(v2, v4);
  OUTLINED_FUNCTION_76_1();

  OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_47_10(*(void **)(v0 + 936));
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v2);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 1208));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_47_10(*(void **)(v0 + 976));
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v2);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t (*v7)(void);
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = *(void **)(v0 + 832);
  uint64_t v2 = *(void *)(v0 + 808);
  uint64_t v3 = *(void *)(v0 + 792);
  uint64_t v4 = *(void *)(v0 + 784);

  uint64_t v5 = *(void (**)(uint64_t))(v3 + 8);
  uint64_t v6 = OUTLINED_FUNCTION_98();
  v5(v6);
  ((void (*)(uint64_t, uint64_t))v5)(v2, v4);
  OUTLINED_FUNCTION_76_1();

  OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 888) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 896) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_27_7();
  v2[76] = v1;
  v2[77] = v3;
  v2[78] = v0;
  OUTLINED_FUNCTION_73_6();
  *(void *)(v4 + 118__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  swift_task_dealloc(v5);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 108outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 1088) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 112outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 1128) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + **(void **)(*(void *)(v0 + 680) + 176LL)
                                                  + 264));
  *(void *)(v0 + 88outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v1;
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_8( v1,  (uint64_t)CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:),  v4);
  return OUTLINED_FUNCTION_3_0(v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_47_10(*(void **)(v0 + 1088));
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_47_10(*(void **)(v0 + 1128));
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_100_2();
  OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v2);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 1144));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "402B8: call analysis failed (funcsize=30)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void (*v25)(uint64_t, void, void, unint64_t, unint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v1 = v0[112];
  uint64_t v26 = (void *)v0[108];
  uint64_t v25 = (void (*)(uint64_t, void, void, unint64_t, unint64_t, uint64_t))v0[105];
  uint64_t v2 = (void *)v0[93];
  uint64_t v3 = v0[92];
  uint64_t v4 = v0[91];
  uint64_t v5 = v0[85];
  uint64_t v6 = v0[82];
  uint64_t v7 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_38_1();
  ButtonConfigurationModel.init(label:url:)(v7, v9, 0xD000000000000017LL, 0x800000000034A080LL, v2);
  outlined init with copy of ButtonConfigurationModel((uint64_t)v2, v3);
  char v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v11 = OUTLINED_FUNCTION_39_5(v10, *(void *)(v4 + 72));
  *(_OWORD *)(v11 + ++*(void *)(v0 + 16) = xmmword_31D870;
  outlined init with take of ButtonConfigurationModel(v3, v11 + v1);
  OUTLINED_FUNCTION_155_0();
  swift_bridgeObjectRelease();
  v25(v6, 0LL, 0LL, 0xD000000000000020LL, 0x800000000034A3B0LL, 1LL);
  OUTLINED_FUNCTION_4_50((void *)(v5 + 24));
  uint64_t v12 = (void *)OUTLINED_FUNCTION_98();
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v14 = OUTLINED_FUNCTION_149_2();
  v0[66] = v14;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  v0[67] = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 63);
  void *boxed_opaque_existential_1 = v11;
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 1;
  swift_storeEnumTagMultiPayload(boxed_opaque_existential_1, v14, 6LL);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  id v18 = OUTLINED_FUNCTION_5_32(v17);
  *(_OWORD *)(v18 + ++*(void *)(v0 + 16) = xmmword_31FE60;
  *(void *)(v18 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v26;
  uint64_t v27 = v18;
  specialized Array._endMutation()(v18, v19, v20, v21);
  v0[113] = v27;
  id v22 = v26;
  uint64_t v23 = (void *)OUTLINED_FUNCTION_48_9();
  v0[114] = v23;
  *uint64_t v23 = v0;
  v23[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_154_1();
  OUTLINED_FUNCTION_110_4();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v21 = *((void *)v20 + 86);
  uint64_t v22 = *((void *)v20 + 82);
  uint64_t v23 = *(void *)(v21 + 272);
  *((void *)v20 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v23;
  *((void *)v20 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 3) = *(void *)(v21 + 264);
  uint64_t v24 = OUTLINED_FUNCTION_139_1();
  uint64_t v25 = OUTLINED_FUNCTION_120_0();
  uint64_t v218 = *(uint64_t (**)(void))(swift_getAssociatedConformanceWitness(v25, v26, v24) + 8);
  uint64_t v27 = *((void *)v218 + 1);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
  uint64_t v29 = swift_checkMetadataState(0LL, v24);
  uint64_t v212 = v28;
  if (v28(v29, v27))
  {
    OUTLINED_FUNCTION_125_3();
    uint64_t v23 = v31 ? OUTLINED_FUNCTION_70(v30) : *(void *)(v30 + 16);
    OUTLINED_FUNCTION_62();
    if (v23)
    {
      if (OUTLINED_FUNCTION_102_2())
      {
        OUTLINED_FUNCTION_125_3();
        if (v33) {
          uint64_t v34 = OUTLINED_FUNCTION_70(v32);
        }
        else {
          uint64_t v34 = *(void *)(v32 + 16);
        }
        uint64_t v35 = *((void *)v20 + 83);
        if (v34 > v35 && (v35 & 0x8000000000000000LL) == 0)
        {
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v35, (v22 & 0xC000000000000001LL) == 0, v22);
          uint64_t v36 = *((void *)v20 + 83);
          if ((v22 & 0xC000000000000001LL) == 0)
          {
            uint64_t v37 = *(void **)(v22 + 8 * v36 + 32);
LABEL_18:
            id v40 = v37;
LABEL_19:
            uint64_t v41 = v40;
            OUTLINED_FUNCTION_62();
            goto LABEL_24;
          }

          goto LABEL_82;
        }

        OUTLINED_FUNCTION_62();
      }
    }
  }

  if (OUTLINED_FUNCTION_102_2())
  {
    OUTLINED_FUNCTION_125_3();
    if (v39)
    {
      if (OUTLINED_FUNCTION_70(v38)) {
        goto LABEL_16;
      }
    }

    else if (*(void *)(v38 + 16))
    {
LABEL_16:
      OUTLINED_FUNCTION_88_6();
      if (!v23)
      {
        uint64_t v37 = *(void **)(v22 + 32);
        goto LABEL_18;
      }

      uint64_t v36 = 0LL;
LABEL_82:
      id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v22);
      goto LABEL_19;
    }

    OUTLINED_FUNCTION_62();
  }

  uint64_t v41 = 0LL;
LABEL_24:
  *((void *)v20 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v41;
  uint64_t v42 = (void *)*((void *)v20 + 84);
  *((void *)v20 + 105) = *(void *)(**((void **)v20 + 85) + 256LL);
  OUTLINED_FUNCTION_144_1();
  v43();
  id v44 = [v42 unsupportedReason];
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v45 = (void *)*((void *)v20 + 84);
  uint64_t v46 = OUTLINED_FUNCTION_15_1();
  uint64_t v47 = (os_log_s *)__swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v50 = static os_log_type_t.debug.getter(v48, v49);
  uint64_t v51 = v50;
  BOOL v52 = os_log_type_enabled(v48, v50);
  uint64_t v53 = (void *)*((void *)v20 + 84);
  if (v52)
  {
    a12 = v44;
    a13 = v29;
    a15 = v27;
    uint64_t v54 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    *(_DWORD *)uint64_t v54 = 134217984;
    uint64_t v45 = v54 + 12;
    *((void *)v20 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 9) = [v53 unsupportedReason];
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)v20 + 632, (char *)v20 + 640, v54 + 4);

    OUTLINED_FUNCTION_57_0( &dword_0,  v48,  (os_log_type_t)v51,  "#CallingIntentUnsupportedValueFlowStrategy making contact unsupported value output for unsupported reason %ld",  v54);
    uint64_t v55 = (uint64_t)v54;
    uint64_t v27 = a15;
    OUTLINED_FUNCTION_0_2(v55);
  }

  else
  {
  }

  if ((id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v44)
  {
    Logger.logObject.getter(v56);
    os_log_type_t v57 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_124_2(v47))
    {
      uint64_t v58 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl( &dword_0,  v47,  v57,  "#CallingIntentUnsupportedValueFlowStrategy: contact unsupported value output for foreign emergency disambiguation",  v58,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v58);
    }

    uint64_t v59 = *((void *)v20 + 99);

    type metadata accessor for EmptyOutput(0LL);
    static EmptyOutput.instance.getter();
    OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));

    OUTLINED_FUNCTION_5_48();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_29_17();
    OUTLINED_FUNCTION_25();
    uint64_t v60 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_36_14(v60);
  }

  switch((unint64_t)v44)
  {
    case 2uLL:
      OUTLINED_FUNCTION_73_10();
      uint64_t v62 = (void *)OUTLINED_FUNCTION_27_25(*(void *)(class metadata base offset for StartCallCATsSimple + v61 + 832));
      *((void *)v20 + 115) = v62;
      uint64_t v63 = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
      goto LABEL_59;
    case 3uLL:
      uint64_t v66 = *((void *)v20 + 82);
      uint64_t v67 = OUTLINED_FUNCTION_142_0();
      specialized static PhoneStartCallIntent.makeForSlotTemplating(intent:isRelationshipRequest:)( v66,  0,  v67,  v29,  (uint64_t)v218);
      uint64_t v51 = v68;
      *((void *)v20 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 25) = v68;
      if (v41
        && (id v69 = [v41 personHandle]) != 0
        && (uint64_t v70 = v69, v71 = [v69 label], v70, v71)
        && (uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71), v74 = v73, v71, v74))
      {
        uint64_t v45 = (void *)*((void *)v20 + 90);
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_1_34(v72, v74);
        uint64_t v75 = OUTLINED_FUNCTION_26_0();
        __swift_storeEnumTagSinglePayload((uint64_t)v45, 0LL, 1LL, v75);
        OUTLINED_FUNCTION_62();
      }

      else
      {
        uint64_t v100 = *((void *)v20 + 90);
        uint64_t v101 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1(v100, v102, v103, v101);
      }

      uint64_t v104 = *(void *)(v51 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin20PhoneStartCallIntent_contacts);
      if (!v104) {
        goto LABEL_93;
      }
      unint64_t v105 = *(void *)(v104 + 24);
      if (v105 >> 62)
      {
        OUTLINED_FUNCTION_35_19();
        if (OUTLINED_FUNCTION_15_4()) {
          goto LABEL_65;
        }
LABEL_92:
        OUTLINED_FUNCTION_62();
LABEL_93:
        uint64_t v112 = 0LL;
        goto LABEL_94;
      }

      uint64_t v106 = *(void *)((char *)&dword_10 + (v105 & 0xFFFFFFFFFFFFF8LL));
      OUTLINED_FUNCTION_6_3();
      if (!v106) {
        goto LABEL_92;
      }
LABEL_65:
      uint64_t v107 = OUTLINED_FUNCTION_68_9();
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v107, v108, v109);
      if (v45) {
        goto LABEL_102;
      }
      uint64_t v110 = *(void *)(v105 + 32);
      swift_retain();
LABEL_67:
      uint64_t v111 = OUTLINED_FUNCTION_62();
      uint64_t v112 = DialogPerson.personHandle.getter(v111);
      swift_release(v110);
LABEL_94:
      *((void *)v20 + 126) = v112;
      unint64_t v170 = *((void *)v20 + 82);
      INPersonContainingIntent.hasSiriMatches.getter(v29, v27);
      uint64_t v217 = v27;
      uint64_t v209 = v112;
      if ((v171 & 1) != 0)
      {
        if (!v41) {
          goto LABEL_106;
        }
        id v172 = [v41 siriMatches];
        if (v172)
        {
          uint64_t v173 = OUTLINED_FUNCTION_49( (uint64_t)v172,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
          OUTLINED_FUNCTION_153_2(v173);
          OUTLINED_FUNCTION_79();
          if (v170 >> 62)
          {
            OUTLINED_FUNCTION_35_19();
            uint64_t v175 = OUTLINED_FUNCTION_15_4();
            OUTLINED_FUNCTION_62();
            if (v175) {
              goto LABEL_99;
            }
          }

          else if (*(void *)((char *)&dword_10 + (v170 & 0xFFFFFFFFFFFFF8LL)))
          {
LABEL_99:
            OUTLINED_FUNCTION_88_6();
            uint64_t v41 = (void *)OUTLINED_FUNCTION_38_3();
            OUTLINED_FUNCTION_62();
            goto LABEL_106;
          }

          OUTLINED_FUNCTION_62();
        }

        uint64_t v41 = 0LL;
      }

      else
      {
        id v174 = v41;
      }

LABEL_106:
      *((void *)v20 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v41;
      uint64_t v176 = *(void **)(*((void *)v20 + 85)
                        + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple);
      uint64_t v177 = *((void *)v218 + 2);
      os_log_type_t v178 = *(uint64_t (**)(uint64_t, uint64_t))(v177 + 8);
      swift_retain();
      uint64_t v179 = v178(v29, v177);
      uint64_t v211 = v51;
      os_log_type_t v214 = v41;
      uint64_t v207 = v176;
      if (v179)
      {
        uint64_t v180 = INPreferredCallProviderGetBackingType(v179);
        switch((_DWORD)v180)
        {
          case 4:
            uint64_t v181 = @"THIRD_PARTY_PROVIDER";
            break;
          case 3:
            uint64_t v181 = @"FACETIME_PROVIDER";
            break;
          case 2:
            uint64_t v181 = @"TELEPHONY_PROVIDER";
            break;
          default:
            a9 = v180;
            uint64_t v181 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)"));
            goto LABEL_116;
        }

        uint64_t v185 = v181;
LABEL_116:
        uint64_t v182 = v29;
        uint64_t v186 = v181;
        uint64_t v184 = static String._unconditionallyBridgeFromObjectiveC(_:)(v186);
        uint64_t v183 = v187;

        goto LABEL_117;
      }

      uint64_t v182 = v29;
      uint64_t v183 = 0xE700000000000000LL;
      uint64_t v184 = 0x4E574F4E4B4E55LL;
LABEL_117:
      uint64_t v188 = *((void *)v20 + 96);
      uint64_t v189 = *((void *)v20 + 95);
      uint64_t v219 = *((void *)v20 + 94);
      uint64_t v190 = *((void *)v20 + 89);
      OUTLINED_FUNCTION_1_34(v184, v183);
      uint64_t v191 = OUTLINED_FUNCTION_26_0();
      __swift_storeEnumTagSinglePayload(v190, 0LL, 1LL, v191);
      OUTLINED_FUNCTION_18_22();
      INPersonContainingIntent.isFirstContactRelatedOrMyself.getter(v182, v217);
      char v193 = v192;
      static Device.current.getter((void *)v20 + 38);
      uint64_t v194 = *((void *)v20 + 41);
      uint64_t v195 = *((void *)v20 + 42);
      __swift_project_boxed_opaque_existential_1((void *)v20 + 38, v194);
      dispatch thunk of DeviceState.siriLocale.getter(v194, v195);
      OUTLINED_FUNCTION_133_2();
      static PhonePerson.make(phonePerson:options:locale:)(v214, v193 & 1, v188);
      *((void *)v20 + 128) = v196;
      (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v188, v219);
      uint64_t v197 = (void *)OUTLINED_FUNCTION_27_25(*(void *)(class metadata base offset for StartCallCATsSimple
                                                         + *v207
                                                         + 896));
      *((void *)v20 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 9) = v197;
      *uint64_t v197 = v20;
      v197[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
      OUTLINED_FUNCTION_15_30();
      return v203( v198,  v199,  v200,  v201,  v202,  v203,  v204,  v205,  a9,  a10,  v207,  v209,  v211,  v214,  v217,  v219,  a17,  a18,  a19,  a20);
    case 4uLL:
      uint64_t v76 = v212(v29, v27);
      if (!v76) {
        goto LABEL_90;
      }
      uint64_t v77 = v76;
      a17 = _swiftEmptyArrayStorage;
      if ((unint64_t)v76 >> 62)
      {
        if (v76 >= 0) {
          uint64_t v159 = v76 & 0xFFFFFFFFFFFFFF8LL;
        }
        else {
          uint64_t v159 = v76;
        }
        swift_bridgeObjectRetain();
        uint64_t v41 = (void *)_CocoaArrayWrapper.endIndex.getter(v159);
        if (v41) {
          goto LABEL_45;
        }
      }

      else
      {
        uint64_t v41 = *(void **)((char *)&dword_10 + (v76 & 0xFFFFFFFFFFFFFF8LL));
        swift_bridgeObjectRetain();
        if (v41)
        {
LABEL_45:
          uint64_t v218 = v20;
          a15 = OUTLINED_FUNCTION_18_22();
          if ((uint64_t)v41 < 1)
          {
            __break(1u);
LABEL_102:
            uint64_t v110 = OUTLINED_FUNCTION_38_3();
            goto LABEL_67;
          }

          uint64_t v78 = 0LL;
          uint64_t v79 = (void *)((char *)v20 + 544);
          a13 = v77 & 0xC000000000000001LL;
          uint64_t v212 = (uint64_t (*)(uint64_t, uint64_t))*((void *)v20 + 95);
          uint64_t v80 = v77;
          do
          {
            if (a13) {
              id v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v78, v77);
            }
            else {
              id v81 = *(id *)(v77 + 8LL * (void)v78 + 32);
            }
            uint64_t v82 = v81;
            uint64_t v83 = *((void *)v218 + 97);
            uint64_t v84 = *((void *)v218 + 94);
            static Device.current.getter(v79);
            uint64_t v85 = *((void *)v218 + 71);
            uint64_t v86 = *((void *)v218 + 72);
            __swift_project_boxed_opaque_existential_1(v79, v85);
            dispatch thunk of DeviceState.siriLocale.getter(v85, v86);
            __swift_destroy_boxed_opaque_existential_1(v79);
            static PhonePerson.make(phonePerson:options:locale:)(v82, 0, v83);
            uint64_t v88 = v87;
            (*((void (**)(uint64_t, uint64_t))v212 + 1))(v83, v84);

            if (v88)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
              unint64_t v91 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
              unint64_t v90 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
              if (v91 >= v90 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1LL);
              }
              uint64_t v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v88);
              specialized Array._endMutation()(v92, v93, v94, v95);
            }

            uint64_t v78 = (char *)v78 + 1;
            uint64_t v77 = v80;
          }

          while (v41 != v78);
          OUTLINED_FUNCTION_39();
          uint64_t v20 = v218;
LABEL_89:
          OUTLINED_FUNCTION_39();
LABEL_90:
          uint64_t v160 = *((void *)v20 + 85);
          type metadata accessor for PhonePersonList();
          *((void *)v20 + 106) = PhonePersonList.__allocating_init(list:)((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v161 = (void *)OUTLINED_FUNCTION_27_25(*(void *)(class metadata base offset for StartCallCATsSimple
                                                             + **(void **)(v160
                                                                           + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple)
                                                             + 816));
          *((void *)v20 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v161;
          *uint64_t v161 = v20;
          v161[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
          OUTLINED_FUNCTION_15_30();
          return v163( v162,  v163,  v164,  v165,  v166,  v167,  v168,  v169,  a9,  a10,  a11,  a12,  a13,  (void (**)(uint64_t, void))v212,  a15,  v218,  a17,  a18,  a19,  a20);
        }
      }

      OUTLINED_FUNCTION_39();
      goto LABEL_89;
    case 5uLL:
      OUTLINED_FUNCTION_73_10();
      uint64_t v62 = (void *)OUTLINED_FUNCTION_27_25(*(void *)(class metadata base offset for StartCallCATsSimple + v96 + 928));
      *((void *)v20 + 13__swift_destroy_boxed_opaque_existential_1(v0 + 9) = v62;
      uint64_t v63 = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
      goto LABEL_59;
    case 6uLL:
      OUTLINED_FUNCTION_73_10();
      uint64_t v62 = (void *)OUTLINED_FUNCTION_27_25(*(void *)(class metadata base offset for StartCallCATsSimple + v97 + 848));
      *((void *)v20 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v62;
      uint64_t v63 = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
      goto LABEL_59;
    case 7uLL:
      OUTLINED_FUNCTION_73_10();
      uint64_t v62 = (void *)OUTLINED_FUNCTION_27_25(*(void *)(class metadata base offset for StartCallCATsSimple + v98 + 912));
      *((void *)v20 + 13__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v62;
      uint64_t v63 = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
      goto LABEL_59;
    default:
      OUTLINED_FUNCTION_49( v56,  (unint64_t *)&lazy cache variable for type metadata for INIntentResponse,  &OBJC_CLASS___INIntentResponse_ptr);
      char v64 = static ContactsSlotTemplating.isMissingMeCardCase(intent:)();
      uint64_t v65 = (void *)*((void *)v20 + 85);
      if ((v64 & 1) != 0)
      {
        uint64_t v62 = (void *)OUTLINED_FUNCTION_27_25(*(void *)(class metadata base offset for StartCallCATsSimple
                                                          + **(void **)((char *)v65
                                                                        + direct field offset for CallingIntentUnsupportedValueFlowStrategy.startCallCatsSimple)
                                                          + 880));
        *((void *)v20 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v62;
        uint64_t v63 = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
LABEL_59:
        void *v62 = v20;
        v62[1] = v63;
        uint64_t v60 = v218;
        return OUTLINED_FUNCTION_36_14(v60);
      }

      v215 = (void *)((char *)v20 + 104);
      BOOL v113 = App.isFirstParty()();
      uint64_t v114 = v65[6];
      uint64_t v115 = v65[7];
      OUTLINED_FUNCTION_49_0(v65 + 3);
      uint64_t v116 = (*(uint64_t (**)(uint64_t, uint64_t))(v115 + 72))(v114, v115);
      (*(void (**)(uint64_t))(*(void *)v116 + 152LL))(v116);
      OUTLINED_FUNCTION_38_1();
      LODWORD(v218) = v113;
      if (*((void *)v20 + 6) == 1LL)
      {
        outlined destroy of PhoneCallNLIntent?( (uint64_t)v20 + 16,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
        *((_OWORD *)v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
        *((_OWORD *)v20 + 5) = 0u;
        *((void *)v20 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
      }

      else
      {
        outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v20 + 24,  (uint64_t)v20 + 64,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
        outlined destroy of TransformationResult((uint64_t)v20 + 16);
        if (*((void *)v20 + 11))
        {
          uint64_t v117 = *((void *)v20 + 87);
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
          uint64_t v119 = type metadata accessor for PhoneCallNLv3Intent(0LL);
          int v120 = swift_dynamicCast(v117, (char *)v20 + 64, v118);
          __swift_storeEnumTagSinglePayload(v117, v120 ^ 1u, 1LL, v119);
          if (__swift_getEnumTagSinglePayload(v117, 1LL, v119) != 1)
          {
            outlined destroy of PhoneCallNLIntent?( *((void *)v20 + 87),  &demangling cache variable for type metadata for PhoneCallNLv3Intent?);
            if (v41)
            {
              id v121 = v41;
              id v122 = INPerson.nameLowercasedWithFirstUppercased.getter();
            }

            else
            {
              id v122 = 0LL;
            }

    uint64_t v106 = swift_bridgeObjectRelease();
    if (v124 < -1) {
      goto LABEL_137;
    }
    *(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)) = 0LL;
LABEL_108:
    specialized Array._endMutation()(v106, v107, v108, v109);
    swift_bridgeObjectRelease();
    uint64_t v6 = v126;
    swift_release_n(v126, 2LL);
    swift_bridgeObjectRelease();
LABEL_109:
    swift_release_n(v6, 2LL);
    return swift_bridgeObjectRelease_n(a3, 3LL);
  }

  id v122 = v10;
  uint64_t v13 = 0LL;
  uint64_t v135 = *a1;
  int v120 = *a1 - 8;
  uint64_t v14 = (char *)_swiftEmptyArrayStorage;
  uint64_t v137 = a3;
  while (1)
  {
    uint64_t v15 = v13;
    id v16 = v13 + 1;
    if (v13 + 1 < v8)
    {
      uint64_t v17 = *(void *)(v135 + 8 * v16);
      id v18 = *(void *)(v135 + 8 * v13);
      swift_retain();
      swift_retain();
      PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a3);
      uint64_t v20 = v19;
      PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a3);
      uint64_t v22 = v21;
      swift_release(v17);
      uint64_t v8 = v124;
      swift_release(v18);
      id v16 = v15 + 2;
      if (v15 + 2 < v124)
      {
        uint64_t v23 = v15;
        while (1)
        {
          uint64_t v24 = v135 + 8 * v23;
          uint64_t v26 = *(void *)(v24 + 8);
          uint64_t v25 = *(void *)(v24 + 16);
          swift_retain();
          swift_retain();
          PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a3);
          uint64_t v28 = v27;
          PhoneAppResolutionHelper.getUsageTime(relativeAppUsage:app:)(a3);
          uint64_t v30 = v29;
          swift_release(v25);
          swift_release(v26);
          if (v22 < v20 == v30 >= v28) {
            break;
          }
          uint64_t v31 = v23 + 3;
          ++v23;
          uint64_t v8 = v124;
          if (v31 >= v124)
          {
            id v16 = v124;
            goto LABEL_11;
          }
        }

        id v16 = v23 + 2;
        uint64_t v8 = v124;
      }

    uint64_t v97 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v55);
    goto LABEL_75;
  }

  swift_bridgeObjectRelease();
  uint64_t v97 = 0LL;
  p_base_props = &CameraControlFlow.base_props;
LABEL_77:
  if (objc_msgSend(a1, (SEL)p_base_props[301]) != (char *)&dword_4 + 1)
  {
    uint64_t v101 = [a1 preferredCallProvider];
    if (!v101)
    {
      uint64_t v104 = 0xE700000000000000LL;
      uint64_t v233 = 0x4E574F4E4B4E55LL;
      goto LABEL_91;
    }

    uint64_t v102 = INPreferredCallProviderGetBackingType(v101);
    switch((_DWORD)v102)
    {
      case 4:
        uint64_t v103 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v103 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v103 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v103 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v102));
        goto LABEL_89;
    }

    unint64_t v105 = v103;
LABEL_89:
    uint64_t v99 = v103;
    goto LABEL_90;
  }

  uint64_t v99 = @"TELEPHONY_PROVIDER";
  uint64_t v100 = @"TELEPHONY_PROVIDER";
LABEL_90:
  uint64_t v106 = v99;
  uint64_t v233 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
  uint64_t v104 = v107;

LABEL_91:
  uint64_t v108 = type metadata accessor for PhoneCallRecord.Builder(0LL);
  swift_allocObject(v108, *(unsigned int *)(v108 + 48), *(unsigned __int16 *)(v108 + 52));
  PhoneCallRecord.Builder.init()();
  uint64_t v110 = v109;
  uint64_t v111 = [a1 identifier];
  uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
  uint64_t v114 = v113;

  uint64_t v115 = (uint64_t)v239;
  SpeakableString.init(serializedValue:)(v112, v114);
  __swift_storeEnumTagSinglePayload(v115, 0LL, 1LL, v12);
  uint64_t v116 = (*(uint64_t (**)(uint64_t))(*(void *)v110 + 856LL))(v115);
  swift_release(v110);
  outlined destroy of SpeakableString?(v115, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v117 = *(uint64_t (**)(uint64_t))(*(void *)v116 + 872LL);
  uint64_t v118 = v237;
  uint64_t v119 = swift_retain();
  int v120 = v117(v119);
  swift_release(v116);
  swift_release(v118);
  id v121 = (*(uint64_t (**)(uint64_t))(*(void *)v120 + 888LL))(v97);
  swift_release(v120);
  outlined bridged method (pb) of @objc INCallRecord.participants.getter(a1);
  uint64_t v246 = (char *)v121;
  if (!v122)
  {
    uint64_t v126 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_111;
  }

  int v120 = v122;
  if ((unint64_t)v122 >> 62)
  {
    if (v122 >= 0) {
      v122 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v122)) {
      goto LABEL_94;
    }
LABEL_110:
    swift_bridgeObjectRelease();
    uint64_t v126 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_111;
  }

LABEL_76:
            uint64_t v128 = *((void *)v20 + 97);
            uint64_t v206 = *((void *)v20 + 94);
            uint64_t v208 = *((void *)v20 + 95);
            uint64_t v129 = (void *)*((void *)v20 + 85);
            uint64_t v210 = *((void *)v20 + 81);
            OUTLINED_FUNCTION_18_22();
            static Device.current.getter(v215);
            OUTLINED_FUNCTION_82(v215);
            uint64_t v130 = OUTLINED_FUNCTION_98();
            dispatch thunk of DeviceState.siriLocale.getter(v130, v131);
            __swift_destroy_boxed_opaque_existential_1(v215);
            static PhonePerson.make(phonePerson:options:locale:)(v122, 0, v128);
            uint64_t v216 = v132;
            *((void *)v20 + 146) = v132;

            uint64_t v133 = *(void (**)(uint64_t))(v208 + 8);
            uint64_t v134 = OUTLINED_FUNCTION_85_5();
            v133(v134);
            uint64_t v135 = v129[41];
            uint64_t v136 = v129[42];
            OUTLINED_FUNCTION_49_0(v129 + 38);
            (*(void (**)(void))(*v129 + 208LL))();
            uint64_t v138 = *((void *)v20 + 21);
            uint64_t v137 = *((void *)v20 + 22);
            __swift_project_boxed_opaque_existential_1((void *)v20 + 18, v138);
            dispatch thunk of DeviceState.siriLocale.getter(v138, v137);
            uint64_t v139 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 16))(v210, v128, v135, v136);
            uint64_t v141 = v140;
            ((void (*)(uint64_t, uint64_t))v133)(v128, v206);
            OUTLINED_FUNCTION_133_2();
            uint64_t v142 = *((void *)v20 + 88);
            if (v141)
            {
              OUTLINED_FUNCTION_6_3();
              OUTLINED_FUNCTION_1_34(v139, v141);
              uint64_t v143 = OUTLINED_FUNCTION_26_0();
              __swift_storeEnumTagSinglePayload(v142, 0LL, 1LL, v143);
              OUTLINED_FUNCTION_62();
            }

            else
            {
              uint64_t v144 = OUTLINED_FUNCTION_26_0();
              OUTLINED_FUNCTION_29_1(v142, v145, v146, v144);
            }

            OUTLINED_FUNCTION_73_10();
            char v148 = *(int **)(class metadata base offset for StartCallCATsSimple + v147 + 864);
            uint64_t v149 = v148[1];
            uint64_t v213 = (char *)v148 + *v148;
            swift_retain();
            uint64_t v150 = (uint64_t (**)(void))swift_task_alloc(v149);
            *((void *)v20 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v150;
            void *v150 = v20;
            v150[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
            OUTLINED_FUNCTION_15_30();
            return v154( v151,  v152,  v153,  v154,  v155,  v156,  v157,  v158,  a9,  a10,  v206,  v208,  v210,  v213,  v216,  v218,  a17,  a18,  a19,  a20);
          }

  __break(1u);
}

LABEL_75:
          outlined destroy of PhoneCallNLIntent?( *((void *)v20 + 87),  &demangling cache variable for type metadata for PhoneCallNLv3Intent?);
          id v127 = v41;
          id v122 = v41;
          goto LABEL_76;
        }
      }

      uint64_t v123 = *((void *)v20 + 87);
      outlined destroy of PhoneCallNLIntent?( (uint64_t)v20 + 64,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      uint64_t v124 = type metadata accessor for PhoneCallNLv3Intent(0LL);
      OUTLINED_FUNCTION_29_1(v123, v125, v126, v124);
      goto LABEL_75;
  }

    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_50();
  }

  PhoneStartCallIntent.__allocating_init(callCapability:audioRoute:preferredCallProvider:destinationType:contacts:callGroups:)( v91,  v92,  v93,  v94,  v69);

  OUTLINED_FUNCTION_7_5();
}

  if (v23 >= 0) {
    uint64_t v93 = v24;
  }
  else {
    uint64_t v93 = v23;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v93);
  swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    goto LABEL_80;
  }

  if (v23 >= 0) {
    uint64_t v93 = v24;
  }
  else {
    uint64_t v93 = v23;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v93);
  swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    goto LABEL_80;
  }

  if (v23 >= 0) {
    uint64_t v93 = v24;
  }
  else {
    uint64_t v93 = v23;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v93);
  swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    goto LABEL_80;
  }

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = (void *)v10[131];
  OUTLINED_FUNCTION_4_50((void *)(v10[85] + 24LL));
  OUTLINED_FUNCTION_22_24();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_5_32(v12);
  OUTLINED_FUNCTION_14_31(v13, v14, v15, v16, (__n128)xmmword_31FE60);
  v10[132] = a10;
  id v17 = v11;
  id v18 = (void *)OUTLINED_FUNCTION_48_9();
  v10[133] = v18;
  *id v18 = v10;
  v18[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

{
  void *v10;
  void *v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  OUTLINED_FUNCTION_44();
  uint64_t v11 = (void *)v10[122];
  OUTLINED_FUNCTION_4_50((void *)(v10[85] + 24LL));
  OUTLINED_FUNCTION_22_24();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_5_32(v12);
  OUTLINED_FUNCTION_14_31(v13, v14, v15, v16, (__n128)xmmword_31FE60);
  v10[123] = a10;
  id v17 = v11;
  id v18 = (void *)OUTLINED_FUNCTION_48_9();
  v10[124] = v18;
  *id v18 = v10;
  v18[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

{
  void *v10;
  void *v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  OUTLINED_FUNCTION_44();
  uint64_t v11 = (void *)v10[141];
  OUTLINED_FUNCTION_4_50((void *)(v10[85] + 24LL));
  OUTLINED_FUNCTION_22_24();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_5_32(v12);
  OUTLINED_FUNCTION_14_31(v13, v14, v15, v16, (__n128)xmmword_31FE60);
  v10[142] = a10;
  id v17 = v11;
  id v18 = (void *)OUTLINED_FUNCTION_48_9();
  v10[143] = v18;
  *id v18 = v10;
  v18[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  OUTLINED_FUNCTION_44();
  uint64_t v11 = v10[88];
  uint64_t v12 = swift_release(v10[146]);
  OUTLINED_FUNCTION_167(v12, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = (void *)v10[77];
  uint64_t v14 = OUTLINED_FUNCTION_66_8();
  OUTLINED_FUNCTION_65_8(v14);
  OUTLINED_FUNCTION_4_50((void *)(v11 + 24));
  OUTLINED_FUNCTION_22_24();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_5_32(v15);
  OUTLINED_FUNCTION_14_31(v16, v17, v18, v19, (__n128)xmmword_31FE60);
  v10[150] = a10;
  uint64_t v20 = v13;
  uint64_t v21 = (void *)OUTLINED_FUNCTION_48_9();
  v10[151] = v21;
  *uint64_t v21 = v10;
  v21[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

{
  uint64_t v10;
  void *v11;
  void *v12;
  char v13;
  uint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  OUTLINED_FUNCTION_44();
  uint64_t v12 = (void *)v11[74];
  uint64_t v13 = OUTLINED_FUNCTION_66_8();
  OUTLINED_FUNCTION_65_8(v13);
  OUTLINED_FUNCTION_4_50((void *)(v10 + 24));
  OUTLINED_FUNCTION_22_24();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_5_32(v14);
  OUTLINED_FUNCTION_14_31(v15, v16, v17, v18, (__n128)xmmword_31FE60);
  v11[150] = a10;
  uint64_t v19 = v12;
  uint64_t v20 = (void *)OUTLINED_FUNCTION_48_9();
  v11[151] = v20;
  *uint64_t v20 = v11;
  v20[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

#error "414B4: call analysis failed (funcsize=36)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)()
{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 1064));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "41548: call analysis failed (funcsize=22)"
#error "415A0: call analysis failed (funcsize=22)"
#error "415F8: call analysis failed (funcsize=22)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_27_7();
  v2[73] = v1;
  v2[74] = v3;
  v2[75] = v0;
  OUTLINED_FUNCTION_73_6();
  *(void *)(v4 + 116outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v0;
  swift_task_dealloc(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "416A8: call analysis failed (funcsize=22)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10)
{
  void *v10;
  void *v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  OUTLINED_FUNCTION_44();
  uint64_t v11 = (void *)v10[117];
  OUTLINED_FUNCTION_4_50((void *)(v10[85] + 24LL));
  OUTLINED_FUNCTION_22_24();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_5_32(v12);
  OUTLINED_FUNCTION_14_31(v13, v14, v15, v16, (__n128)xmmword_31FE60);
  v10[118] = a10;
  id v17 = v11;
  id v18 = (void *)OUTLINED_FUNCTION_48_9();
  v10[119] = v18;
  *id v18 = v10;
  v18[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)( uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 856);
  *(void *)(v3 + 86__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(v3 + 87__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "41B74: call analysis failed (funcsize=31)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)()
{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 1104));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[85] = v7;
  v8[84] = a7;
  v8[83] = a6;
  v8[82] = a3;
  v8[81] = a2;
  v8[80] = a1;
  v8[86] = *v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLv3Intent?);
  v8[87] = OUTLINED_FUNCTION_23(*(void *)(v9 - 8));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v8[88] = OUTLINED_FUNCTION_8_30(*(void *)(v10 - 8));
  v8[89] = OUTLINED_FUNCTION_28();
  v8[90] = OUTLINED_FUNCTION_28();
  uint64_t v11 = *(void *)(OUTLINED_FUNCTION_152_1() - 8);
  v8[91] = v11;
  v8[92] = OUTLINED_FUNCTION_8_30(v11);
  v8[93] = OUTLINED_FUNCTION_28();
  uint64_t v12 = OUTLINED_FUNCTION_94_4();
  v8[94] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[95] = v13;
  v8[96] = OUTLINED_FUNCTION_8_30(v13);
  v8[97] = OUTLINED_FUNCTION_28();
  uint64_t v14 = OUTLINED_FUNCTION_94();
  v8[98] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v8[99] = v15;
  v8[100] = OUTLINED_FUNCTION_8_30(v15);
  v8[101] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "41E24: call analysis failed (funcsize=22)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:)( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10)
{
  void *v10;
  void *v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  OUTLINED_FUNCTION_44();
  uint64_t v11 = (void *)v10[136];
  OUTLINED_FUNCTION_4_50((void *)(v10[85] + 24LL));
  OUTLINED_FUNCTION_22_24();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_5_32(v12);
  OUTLINED_FUNCTION_14_31(v13, v14, v15, v16, (__n128)xmmword_31FE60);
  v10[137] = a10;
  id v17 = v11;
  id v18 = (void *)OUTLINED_FUNCTION_48_9();
  v10[138] = v18;
  *id v18 = v10;
  v18[1] = CallingIntentUnsupportedValueFlowStrategy.makeContactUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:);
  OUTLINED_FUNCTION_16_28();
  return OUTLINED_FUNCTION_3_54();
}

unint64_t type metadata accessor for DialogElement()
{
  unint64_t result = lazy cache variable for type metadata for DialogElement;
  if (!lazy cache variable for type metadata for DialogElement)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___DialogElement);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for DialogElement);
  }

  return result;
}

uint64_t static ContactsSlotTemplating.isMissingMeCardCase(intent:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v3);
  uint64_t v5 = v4;
  if (!v4)
  {
    uint64_t v9 = 0LL;
    unint64_t v11 = 0LL;
LABEL_12:
    uint64_t v7 = 0LL;
    goto LABEL_13;
  }

  if ((unint64_t)v4 >> 62)
  {
    if (v4 >= 0) {
      v4 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v4)) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }

  if (!*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_11:
    OUTLINED_FUNCTION_4_1();
    uint64_t v9 = 0LL;
    unint64_t v11 = 0LL;
    LODWORD(v5) = 0;
    goto LABEL_12;
  }

LABEL_4:
  OUTLINED_FUNCTION_9_33();
  if ((v5 & 0xC000000000000001LL) != 0) {
    uint64_t v6 = OUTLINED_FUNCTION_19_20();
  }
  else {
    uint64_t v6 = (uint64_t)OUTLINED_FUNCTION_43_5();
  }
  uint64_t v7 = (void *)v6;
  OUTLINED_FUNCTION_4_1();
  LODWORD(v5) = [v7 isMe];
  id v8 = [v7 displayName];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  unint64_t v11 = v10;

LABEL_13:
  int v12 = specialized Optional<A>.isNilOrEmpty.getter(v9, v11);
  OUTLINED_FUNCTION_23_5();
  if (!v7)
  {
LABEL_17:
    uint64_t v14 = 0LL;
    goto LABEL_18;
  }

  id v13 = [v7 personHandle];
  uint64_t v14 = v13;
  if (v13)
  {
    id v15 = [v13 label];

    if (v15)
    {
      uint64_t v14 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      unint64_t v17 = v16;

      goto LABEL_19;
    }

    goto LABEL_17;
  }

  if ((v3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v5 = (id)OUTLINED_FUNCTION_29_7();
  }

  else
  {
    if (!*(void *)(v4 + 16))
    {
      __break(1u);
      goto LABEL_15;
    }

    uint64_t v5 = *(id *)(v3 + 32);
  }

  uint64_t v6 = v5;
  OUTLINED_FUNCTION_39();
  uint64_t v7 = [v6 siriMatches];

  if (v7)
  {
    uint64_t v9 = OUTLINED_FUNCTION_49( v8,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v9);

LABEL_15:
    if (v3 < 0) {
      unint64_t v10 = v3;
    }
    else {
      unint64_t v10 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_8_1();
    _CocoaArrayWrapper.endIndex.getter(v10);
    OUTLINED_FUNCTION_39();
    goto LABEL_11;
  }

  if ((v3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v5 = (id)OUTLINED_FUNCTION_29_7();
  }

  else
  {
    if (!*(void *)(v4 + 16))
    {
      __break(1u);
      return;
    }

    uint64_t v5 = *(id *)(v3 + 32);
  }

  uint64_t v6 = v5;
  OUTLINED_FUNCTION_39();
LABEL_11:

  if (v6)
  {
    [v6 isMe];
  }

  OUTLINED_FUNCTION_6();
}

  OUTLINED_FUNCTION_6_7(v4, (v1 & 0xC000000000000001LL) == 0);
  if ((v1 & 0xC000000000000001LL) != 0) {
    uint64_t v5 = (id)OUTLINED_FUNCTION_5_49(0LL);
  }
  else {
    uint64_t v5 = *(id *)(v1 + 32);
  }
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_39();
  return v6;
}

  OUTLINED_FUNCTION_6_7(v5, (v2 & 0xC000000000000001LL) == 0);
  if ((v2 & 0xC000000000000001LL) != 0) {
    uint64_t v6 = (id)OUTLINED_FUNCTION_5_49(0LL);
  }
  else {
    uint64_t v6 = *(id *)(v2 + 32);
  }
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_39();
  return v7;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v2 & 0xC000000000000001LL) == 0, v2);
  if ((v2 & 0xC000000000000001LL) != 0) {
    uint64_t v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
  }
  else {
    uint64_t v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = [v4 siriMatches];

  if (v5)
  {
    uint64_t v6 = type metadata accessor for INPerson();
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0) {
        id v8 = v7;
      }
      else {
        id v8 = v7 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v2 & 0xC000000000000001LL) == 0, v2);
  if ((v2 & 0xC000000000000001LL) != 0) {
    uint64_t v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
  }
  else {
    uint64_t v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v5 = [v4 relationship];

  if (!v4) {
    return v5 != 0LL;
  }
  uint64_t v6 = [v4 isMe];

  if (v5) {
    return 1LL;
  }
  else {
    return v6;
  }
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v2 & 0xC000000000000001LL) == 0, v2);
  if ((v2 & 0xC000000000000001LL) != 0) {
    uint64_t v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
  }
  else {
    uint64_t v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = [v4 isMe];
  uint64_t v5 = [v4 displayName];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  id v8 = v7;

LABEL_13:
  uint64_t v9 = specialized Optional<A>.isNilOrEmpty.getter(v6, v8);
  swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_17:
    id v13 = 0LL;
    unint64_t v11 = 0LL;
    goto LABEL_19;
  }

  unint64_t v10 = [v4 personHandle];
  unint64_t v11 = v10;
  if (v10)
  {
    int v12 = [v10 label];

    if (v12)
    {
      id v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      unint64_t v11 = v14;

      goto LABEL_19;
    }

    goto LABEL_17;
  }

  id v13 = 0LL;
LABEL_19:
  id v15 = specialized Optional<A>.isNilOrEmpty.getter(v13, (unint64_t)v11);
  swift_bridgeObjectRelease();
  if ((_DWORD)v2)
  {
    specialized INPersonContainingIntent.hasSiriMatches.getter();
    unint64_t v17 = v16;

    char v18 = (v17 ^ 1) & v9 & (v15 ^ 1);
  }

  else
  {

    char v18 = 0;
  }

  return v18 & 1;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v5 & 0xC000000000000001LL) == 0, v5);
  if ((v5 & 0xC000000000000001LL) != 0) {
    uint64_t v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v5);
  }
  else {
    uint64_t v6 = *(id *)(v5 + 32);
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = [v7 isMe];
  LODWORD(v5) = (_DWORD)v8;
  uint64_t v9 = OUTLINED_FUNCTION_38_37((uint64_t)v8, "displayName");
  unint64_t v10 = OUTLINED_FUNCTION_149_9((uint64_t)v9);
  int v12 = v11;

LABEL_13:
  id v13 = specialized Optional<A>.isNilOrEmpty.getter(v10, v12);
  uint64_t v14 = OUTLINED_FUNCTION_13_1();
  if (!v7)
  {
LABEL_17:
    char v18 = 0LL;
    unint64_t v16 = 0LL;
    goto LABEL_19;
  }

  id v15 = OUTLINED_FUNCTION_38_37(v14, "personHandle");
  unint64_t v16 = v15;
  if (v15)
  {
    unint64_t v17 = OUTLINED_FUNCTION_23_24((uint64_t)v15, "label");

    if (v17)
    {
      char v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      unint64_t v16 = v19;

      goto LABEL_19;
    }

    goto LABEL_17;
  }

  char v18 = 0LL;
LABEL_19:
  char v20 = specialized Optional<A>.isNilOrEmpty.getter(v18, (unint64_t)v16);
  OUTLINED_FUNCTION_13_1();
  if ((_DWORD)v5)
  {
    specialized INPersonContainingIntent.hasSiriMatches.getter((uint64_t (*)(uint64_t))a2);
    uint64_t v22 = v21;

    uint64_t v23 = (v22 ^ 1) & v13 & (v20 ^ 1);
  }

  else
  {

    uint64_t v23 = 0;
  }

  return v23 & 1;
}

  id v13 = v2[2];
  int v12 = v2[3];
  uint64_t v14 = type metadata accessor for Date(0LL);
  __swift_storeEnumTagSinglePayload(v6, 1LL, 1LL, v14);
  if (v7)
  {
    id v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    unint64_t v16 = swift_allocObject(v15, 40LL, 7LL);
    *(_OWORD *)(v16 + ++*(void *)(v0 + 16) = xmmword_31FE60;
    *(void *)(v16 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
    uint64_t v55 = v16;
    specialized Array._endMutation()(v16, v17, v18, v19);
    char v20 = v55;
  }

  else
  {
    char v20 = 0LL;
  }

  char v21 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  swift_bridgeObjectRetain();
  uint64_t v22 = v7;
  uint64_t v23 = [v21 initWithInteger:1];
  uint64_t v24 = [objc_allocWithZone(NSNumber) initWithInteger:0];
  uint64_t v25 = objc_allocWithZone(&OBJC_CLASS___INCallRecord);
  uint64_t v26 = @nonobjc INCallRecord.init(__identifier:dateCreated:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:participants:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)( v13,  v12,  v6,  5LL,  1LL,  0LL,  0LL,  1LL,  v20,  v23,  0LL,  0LL,  0LL,  0LL,  v24);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v27 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  uint64_t v28 = v26;
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  uint64_t v31 = static os_log_type_t.debug.getter(v29, v30);
  if (os_log_type_enabled(v29, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v32 = 138412290;
    uint64_t v55 = (uint64_t)v28;
    uint64_t v34 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v32 + 4);
    *uint64_t v33 = v28;

    _os_log_impl(&dword_0, v29, v31, "Voicemail INCallRecord to announce = %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v33, 1LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v33);
    OUTLINED_FUNCTION_0_2((uint64_t)v32);
    uint64_t v35 = v22;
  }

  else
  {

    uint64_t v35 = v28;
    uint64_t v29 = (os_log_s *)v22;
  }

  return v28;
}

uint64_t storeEnumTagSinglePayload for PhoneCallNLv3Intent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2F032C);
}

uint64_t getEnumTagSinglePayload for PhoneCallNLv3Intent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2F0320);
}

id INPerson.nameLowercasedWithFirstUppercased.getter()
{
  id v70 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v67 = v6;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v68 = (char *)&v65 - v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v69 = (uint64_t)&v65 - v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134_3();
  __chkstk_darwin();
  unint64_t v10 = (char *)&v65 - v9;
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin();
  int v12 = (char *)&v65 - v11;
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_15();
  __chkstk_darwin();
  OUTLINED_FUNCTION_79_8();
  __chkstk_darwin();
  OUTLINED_FUNCTION_92_7();
  id v14 = OUTLINED_FUNCTION_78_11(v13, "displayName");
  uint64_t v15 = OUTLINED_FUNCTION_112_3((uint64_t)v14);
  uint64_t v17 = v16;

  uint64_t v71 = v15;
  uint64_t v72 = v17;
  unint64_t v66 = lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.capitalized.getter(&type metadata for String, v66);
  swift_bridgeObjectRelease();
  NSString v18 = OUTLINED_FUNCTION_145_3();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_17_6(v70, "setDisplayName:");

  id v20 = OUTLINED_FUNCTION_78_11(v19, "nameComponents");
  if (v20)
  {
    char v21 = v20;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_30_12();
    uint64_t v22 = v1;
    uint64_t v23 = 0LL;
  }

  else
  {
    type metadata accessor for PersonNameComponents(0LL);
    uint64_t v22 = v1;
    uint64_t v23 = 1LL;
  }

  OUTLINED_FUNCTION_34_13(v22, v23);
  outlined init with take of PersonNameComponents?( v1,  v5,  &demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_30_12();
  uint64_t v24 = OUTLINED_FUNCTION_27_32(v5);
  if ((_DWORD)v24)
  {
    _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0( v5,  v2,  &demangling cache variable for type metadata for PersonNameComponents?);
    OUTLINED_FUNCTION_0_4(v2);
    if (v25)
    {
      uint64_t v29 = 0LL;
    }

    else
    {
      uint64_t v29 = (void *)v2;
      PersonNameComponents._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_49_15();
      OUTLINED_FUNCTION_11_20(v2, v30);
    }

    OUTLINED_FUNCTION_17_6(v70, "setNameComponents:");

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v5,  &demangling cache variable for type metadata for PersonNameComponents?);
    id v31 = v70;
    p_base_props = (__objc2_prop_list **)(&CameraControlFlow + 64);
  }

  else
  {
    id v26 = OUTLINED_FUNCTION_78_11(v24, "nameComponents");
    if (v26)
    {
      uint64_t v27 = v26;
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v28 = 0LL;
    }

    else
    {
      uint64_t v28 = 1LL;
    }

    OUTLINED_FUNCTION_34_13(v3, v28);
    outlined init with take of PersonNameComponents?( v3,  (uint64_t)v12,  &demangling cache variable for type metadata for PersonNameComponents?);
    if (OUTLINED_FUNCTION_27_32((uint64_t)v12) || (uint64_t v35 = PersonNameComponents.givenName.getter(), !v36))
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v12,  &demangling cache variable for type metadata for PersonNameComponents?);
      uint64_t v33 = 0LL;
      uint64_t v34 = 0LL;
    }

    else
    {
      uint64_t v37 = v35;
      uint64_t v38 = v36;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v12,  &demangling cache variable for type metadata for PersonNameComponents?);
      uint64_t v71 = v37;
      uint64_t v72 = v38;
      uint64_t v33 = OUTLINED_FUNCTION_107_4((uint64_t)&type metadata for String);
      uint64_t v34 = v39;
      OUTLINED_FUNCTION_34_0();
    }

    PersonNameComponents.givenName.setter(v33, v34);
    OUTLINED_FUNCTION_0_4(v5);
    p_base_props = &CameraControlFlow.base_props;
    if (v25)
    {
      id v40 = 0LL;
    }

    else
    {
      id v40 = (void *)v5;
      PersonNameComponents._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_49_15();
      OUTLINED_FUNCTION_11_20(v5, v41);
    }

    OUTLINED_FUNCTION_17_6(v70, "setNameComponents:");

    id v31 = v70;
  }

  id v42 = objc_msgSend(v31, (SEL)p_base_props[233]);
  if (v42)
  {
    uint64_t v43 = v42;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v44 = 0LL;
  }

  else
  {
    uint64_t v44 = 1LL;
  }

  OUTLINED_FUNCTION_34_13(v4, v44);
  outlined init with take of PersonNameComponents?( v4,  (uint64_t)v10,  &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v45 = OUTLINED_FUNCTION_27_32((uint64_t)v10);
  if ((_DWORD)v45)
  {
    uint64_t v46 = v69;
    _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0( (uint64_t)v10,  v69,  &demangling cache variable for type metadata for PersonNameComponents?);
    OUTLINED_FUNCTION_0_4(v46);
    if (v25)
    {
      BOOL v52 = 0LL;
    }

    else
    {
      BOOL v52 = (void *)v46;
      PersonNameComponents._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_49_15();
      OUTLINED_FUNCTION_11_20(v46, v53);
    }

    OUTLINED_FUNCTION_17_6(v70, "setNameComponents:");

    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  &demangling cache variable for type metadata for PersonNameComponents?);
  }

  else
  {
    id v47 = OUTLINED_FUNCTION_78_11(v45, (const char *)p_base_props[233]);
    if (v47)
    {
      uint64_t v48 = v47;
      uint64_t v49 = v67;
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v50 = 0LL;
    }

    else
    {
      uint64_t v50 = 1LL;
      uint64_t v49 = v67;
    }

    uint64_t v51 = (uint64_t)v68;
    OUTLINED_FUNCTION_34_13(v49, v50);
    outlined init with take of PersonNameComponents?( v49,  v51,  &demangling cache variable for type metadata for PersonNameComponents?);
    if (OUTLINED_FUNCTION_27_32(v51) || (uint64_t v56 = PersonNameComponents.familyName.getter(), !v57))
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v51,  &demangling cache variable for type metadata for PersonNameComponents?);
      uint64_t v54 = 0LL;
      uint64_t v55 = 0LL;
    }

    else
    {
      uint64_t v58 = v56;
      uint64_t v59 = v57;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v51,  &demangling cache variable for type metadata for PersonNameComponents?);
      uint64_t v71 = v58;
      uint64_t v72 = v59;
      uint64_t v54 = OUTLINED_FUNCTION_107_4((uint64_t)&type metadata for String);
      uint64_t v55 = v60;
      OUTLINED_FUNCTION_34_0();
    }

    PersonNameComponents.familyName.setter(v54, v55);
    OUTLINED_FUNCTION_0_4((uint64_t)v10);
    if (v25)
    {
      uint64_t v61 = 0LL;
    }

    else
    {
      uint64_t v61 = v10;
      PersonNameComponents._bridgeToObjectiveC()();
      OUTLINED_FUNCTION_49_15();
      OUTLINED_FUNCTION_11_20((uint64_t)v10, v62);
    }

    OUTLINED_FUNCTION_17_6(v70, "setNameComponents:");
  }

  OUTLINED_FUNCTION_7_5();
  return v63;
}

uint64_t type metadata accessor for PhonePerson(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhonePerson,  (uint64_t)&nominal type descriptor for PhonePerson);
}

void static PhonePerson.make(phonePerson:options:locale:)(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DialogPerson(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  id v10 = a1;
  uint64_t v11 = DialogPerson.init(person:locale:isRelative:)(a1, (uint64_t)v9, a2 & 1);
  if (v11)
  {
    uint64_t v12 = v11;
    type metadata accessor for DialogPersonHandle(0LL);
    id v13 = [v10 personHandle];
    uint64_t v14 = static DialogPersonHandle.make(phoneHandle:locale:)(v13, a3);

    uint64_t v15 = type metadata accessor for PhonePerson.Builder(0LL);
    OUTLINED_FUNCTION_15_2(v15);
    DialogPerson.Builder.init()();
    specialized DialogPerson.copy<A>(to:)();
    OUTLINED_FUNCTION_52();
    dispatch thunk of DialogPerson.Builder.withPersonHandle(_:)(v14);
    OUTLINED_FUNCTION_38_1();
    DialogPerson.Builder.applyOptions(_:)(a2);
    uint64_t v16 = OUTLINED_FUNCTION_52();
    uint64_t v17 = dispatch thunk of DialogPerson.Builder.build()(v16);
    OUTLINED_FUNCTION_38_1();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v18 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = swift_retain_n(v17, 2LL);
    id v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v22 = static os_log_type_t.debug.getter(v20, v21);
    if (os_log_type_enabled(v20, v22))
    {
      uint64_t v36 = v12;
      uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v24 = swift_slowAlloc(32LL, -1LL);
      uint64_t v37 = v17;
      uint64_t v38 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v34 = v23 + 4;
      uint64_t v25 = type metadata accessor for PhonePerson(0LL);
      uint64_t v35 = v14;
      uint64_t v26 = v25;
      unint64_t v27 = lazy protocol witness table accessor for type PhonePerson and conformance DialogPerson();
      uint64_t v28 = CATType.toDictionary.getter(v26, v27);
      uint64_t v29 = Dictionary.description.getter( v28,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      unint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v34);
      OUTLINED_FUNCTION_6_8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v20, v22, "DialogPerson: %s", v23, 0xCu);
      swift_arrayDestroy(v24, 1LL);
      OUTLINED_FUNCTION_0_2(v24);
      OUTLINED_FUNCTION_0_2((uint64_t)v23);

      swift_release(v36);
      uint64_t v32 = v35;
    }

    else
    {

      swift_release(v12);
      OUTLINED_FUNCTION_6_8();
      uint64_t v32 = v14;
    }

    swift_release(v32);
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t static DialogPersonHandle.make(phoneHandle:locale:)(void *a1, uint64_t a2)
{
  uint64_t v67 = type metadata accessor for CharacterSet(0LL);
  uint64_t v4 = *(void *)(v67 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v8 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v10 = (char *)v62 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)v62 - v11;
  uint64_t v13 = type metadata accessor for SpeakableString(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a1) {
    return 0LL;
  }
  id v17 = a1;
  id v18 = (id)INIntentSlotValueTransformToContactHandle();
  if (!v18)
  {

    return 0LL;
  }

  id v64 = v18;
  id v19 = [v18 type];
  uint64_t v68 = v17;
  uint64_t v65 = v8;
  uint64_t v63 = a2;
  switch((int)v19)
  {
    case 0:
      id v20 = @"Unknown";
      goto LABEL_12;
    case 1:
      id v20 = @"EmailAddress";
      goto LABEL_12;
    case 2:
      id v20 = @"PhoneNumber";
      goto LABEL_12;
    case 3:
      id v20 = @"Website";
      goto LABEL_12;
    case 4:
      id v20 = @"InstantMessage";
LABEL_12:
      os_log_type_t v22 = v20;
      break;
    default:
      id v20 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v19));
      break;
  }

  uint64_t v23 = v20;
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  uint64_t v26 = v25;

  unint64_t v66 = v16;
  SpeakableString.init(print:speak:)(v24, v26, 0LL, 0LL);
  outlined bridged method (pb) of @objc INPersonHandle.value.getter(v68);
  if (v28)
  {
    uint64_t v29 = v27;
    unint64_t v30 = v28;
    static CharacterSet.controlCharacters.getter();
    __chkstk_darwin();
    unint64_t v60 = (unint64_t)v6;
    swift_bridgeObjectRetain();
    uint64_t v31 = specialized RangeReplaceableCollection.filter(_:)( (uint64_t (*)(void *))_sSS27PhoneCallFlowDelegatePluginE6remove10charactersSS10Foundation12CharacterSetV_tFSbs7UnicodeO6ScalarVXEfU_TA_0,  (uint64_t)v59,  v29,  v30);
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v67);
    SpeakableString.init(print:speak:)(v31, v33, 0LL, 0LL);
    uint64_t v34 = 0LL;
  }

  else
  {
    uint64_t v34 = 1LL;
  }

  uint64_t v35 = 1LL;
  __swift_storeEnumTagSinglePayload((uint64_t)v12, v34, 1LL, v13);
  uint64_t v36 = v68;
  id v37 = [v68 label];
  if (v37)
  {
    uint64_t v38 = v37;
    static Signpost.begin(_:)();
    uint64_t v40 = v39;
    uint64_t v67 = v41;
    v62[1] = v42;
    v70[2] = Locale.identifier.getter(v39);
    v70[3] = v43;
    v70[0] = 45LL;
    v70[1] = 0xE100000000000000LL;
    v69[0] = 95LL;
    v69[1] = 0xE100000000000000LL;
    unint64_t v60 = lazy protocol witness table accessor for type String and conformance String();
    unint64_t v61 = v60;
    v59[0] = &type metadata for String;
    v59[1] = v60;
    uint64_t v44 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v70,  v69,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    uint64_t v47 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v38, v44, v46);
    uint64_t v49 = v48;
    uint64_t v36 = v68;
    swift_bridgeObjectRelease();
    Signpost.OpenSignpost.end()();
    SpeakableString.init(print:speak:)(v47, v49, 0LL, 0LL);

    swift_release(v40);
    uint64_t v35 = 0LL;
  }

  __swift_storeEnumTagSinglePayload((uint64_t)v10, v35, 1LL, v13);
  uint64_t v50 = type metadata accessor for DialogPersonHandle.Builder(0LL);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  uint64_t v51 = DialogPersonHandle.Builder.init()();
  uint64_t v53 = (uint64_t)v65;
  BOOL v52 = v66;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v65, v66, v13);
  __swift_storeEnumTagSinglePayload(v53, 0LL, 1LL, v13);
  uint64_t v54 = dispatch thunk of DialogPersonHandle.Builder.withType(_:)(v53);
  swift_release(v51);
  outlined destroy of SpeakableString?(v53);
  uint64_t v55 = dispatch thunk of DialogPersonHandle.Builder.withValue(_:)(v12);
  swift_release(v54);
  uint64_t v56 = dispatch thunk of DialogPersonHandle.Builder.withLabel(_:)(v10);
  uint64_t v57 = swift_release(v55);
  uint64_t v21 = dispatch thunk of DialogPersonHandle.Builder.build()(v57);

  swift_release(v56);
  outlined destroy of SpeakableString?((uint64_t)v10);
  outlined destroy of SpeakableString?((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v52, v13);
  return v21;
}

uint64_t type metadata accessor for PhonePerson.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhonePerson.Builder,  (uint64_t)&nominal type descriptor for PhonePerson.Builder);
}

uint64_t specialized DialogPerson.copy<A>(to:)()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  DialogPerson.givenName.getter(v0);
  uint64_t v3 = dispatch thunk of DialogPerson.Builder.withGivenName(_:)(v2);
  uint64_t v4 = outlined destroy of SpeakableString?((uint64_t)v2);
  DialogPerson.middleName.getter(v4);
  uint64_t v5 = dispatch thunk of DialogPerson.Builder.withMiddleName(_:)(v2);
  swift_release(v3);
  uint64_t v6 = outlined destroy of SpeakableString?((uint64_t)v2);
  DialogPerson.familyName.getter(v6);
  uint64_t v7 = dispatch thunk of DialogPerson.Builder.withFamilyName(_:)(v2);
  swift_release(v5);
  uint64_t v8 = outlined destroy of SpeakableString?((uint64_t)v2);
  DialogPerson.nickname.getter(v8);
  uint64_t v9 = dispatch thunk of DialogPerson.Builder.withNickname(_:)(v2);
  swift_release(v7);
  uint64_t v10 = outlined destroy of SpeakableString?((uint64_t)v2);
  DialogPerson.fullNameFromInput.getter(v10);
  uint64_t v11 = dispatch thunk of DialogPerson.Builder.withFullName(_:)(v2);
  swift_release(v9);
  uint64_t v12 = outlined destroy of SpeakableString?((uint64_t)v2);
  uint64_t v13 = DialogPerson.pronoun.getter(v12);
  uint64_t v14 = dispatch thunk of DialogPerson.Builder.withPronoun(_:)();
  swift_release(v11);
  uint64_t v15 = swift_release(v13);
  DialogPerson.company.getter(v15);
  uint64_t v16 = dispatch thunk of DialogPerson.Builder.withCompany(_:)(v2);
  swift_release(v14);
  uint64_t v17 = outlined destroy of SpeakableString?((uint64_t)v2);
  char v18 = DialogPerson.useConversationalName.getter(v17);
  uint64_t v19 = dispatch thunk of DialogPerson.Builder.withUseConversationalName(_:)(v18 & 1);
  uint64_t v20 = swift_release(v16);
  char v21 = DialogPerson.related.getter(v20);
  uint64_t v22 = dispatch thunk of DialogPerson.Builder.withRelated(_:)(v21 & 1);
  uint64_t v23 = swift_release(v19);
  uint64_t v24 = DialogPerson.personHandle.getter(v23);
  uint64_t v25 = dispatch thunk of DialogPerson.Builder.withPersonHandle(_:)();
  swift_release(v22);
  uint64_t v26 = swift_release(v24);
  char v27 = DialogPerson.friendlyPhoneNumberName.getter(v26);
  uint64_t v28 = dispatch thunk of DialogPerson.Builder.withFriendlyPhoneNumberName(_:)(v27 & 1);
  uint64_t v29 = swift_release(v25);
  char v30 = DialogPerson.friendlyPhoneNumberNameShort.getter(v29);
  uint64_t v31 = dispatch thunk of DialogPerson.Builder.withFriendlyPhoneNumberNameShort(_:)(v30 & 1);
  uint64_t v32 = swift_release(v28);
  DialogPerson.relationship.getter(v32);
  uint64_t v33 = dispatch thunk of DialogPerson.Builder.withRelationship(_:)(v2);
  swift_release(v31);
  uint64_t v34 = outlined destroy of SpeakableString?((uint64_t)v2);
  char v35 = DialogPerson.useRelationshipName.getter(v34);
  uint64_t v36 = dispatch thunk of DialogPerson.Builder.withUseRelationshipName(_:)(v35 & 1);
  swift_release(v33);
  return v36;
}

uint64_t DialogPerson.Builder.applyOptions(_:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    uint64_t v3 = dispatch thunk of DialogPerson.Builder.withUseConversationalName(_:)(1LL);
    swift_release(v3);
  }

  if ((a1 & 2) != 0)
  {
    uint64_t v4 = dispatch thunk of DialogPerson.Builder.withFriendlyPhoneNumberNameShort(_:)(1LL);
    swift_release(v4);
  }

  return swift_retain(v1);
}

void PhonePerson.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhonePerson(0LL);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t v1 = swift_retain();
  DialogPerson.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

uint64_t PhonePerson.Builder.__deallocating_deinit()
{
  uint64_t v0 = DialogPerson.Builder.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t CallingIntentBaseFlowStrategy.deviceState.getter()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t protocol witness for SiriKitFlowFactoryProtocol.makeConfirmIntentFlowProducer<A>(strategy:) in conformance SiriKitFlowFactory()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88LL))();
}

uint64_t AppInfoBuilder.getAppName(_:requestedLocale:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppInformationResolver(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t v5 = swift_retain(a1);
  uint64_t v6 = AppInformationResolver.init(app:)(v5);
  uint64_t v7 = dispatch thunk of AppInformationResolver.getLocalizedAppDisplayName(inLocale:)(a2);
  swift_release(v6);
  return v7;
}

uint64_t protocol witness for StartCallCATPatternsExecuting.unsupportedContactsNoContactFound(isFirstPartyApp:_:) in conformance StartCallCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(class metadata base offset for StartCallCATPatternsExecutor + **v3 + 216);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = StartCallCATPatternsExecutor.errorWithCodeScreenTimeRestrictionEnabled();
  return v11(a1, a2, a3);
}

uint64_t StartCallCATPatternsExecutor.unsupportedContactsNoContactFound(isFirstPartyApp:_:)( char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = OUTLINED_FUNCTION_83_2(a1, a2, a3);
  uint64_t v5 = type metadata accessor for StartCallUnsupportedContactsNoContactFoundParameters(v4);
  *(void *)(v3 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v5;
  *(void *)(v3 + 48) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATPatternsExecutor.unsupportedContactsNoContactFound(isFirstPartyApp:_:)()
{
  if (!v1) {
    *(void *)(v2 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(_BYTE *)(v0 + 88);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v4);
  *(void *)(v1 + *(int *)(v2 + 20)) = 0LL;
  *(_BYTE *)(v1 + *(int *)(v2 + 24)) = v3;
  OUTLINED_FUNCTION_175();
  StartCallUnsupportedContactsNoContactFoundParameters.asKeyValuePairs()();
  OUTLINED_FUNCTION_68_2(v5);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v6;
  OUTLINED_FUNCTION_53_7( v6,  (uint64_t)StartCallCATPatternsExecutor.unsupportedContactsNoContactFound(isFirstPartyApp:_:));
  uint64_t v7 = OUTLINED_FUNCTION_103_1(43LL);
  return OUTLINED_FUNCTION_12_28(v7, v8, v9, v10);
}

uint64_t StartCallCATPatternsExecutor.unsupportedContactsNoContactFound(isFirstPartyApp:_:)(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_22_15();
  return OUTLINED_FUNCTION_4_31(v1, v2);
}

{
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for StartCallUnsupportedContactsNoContactFoundParameters);
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

uint64_t type metadata accessor for StartCallUnsupportedContactsNoContactFoundParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for StartCallUnsupportedContactsNoContactFoundParameters,  (uint64_t)&nominal type descriptor for StartCallUnsupportedContactsNoContactFoundParameters);
}

void StartCallUnsupportedContactsNoContactFoundParameters.asKeyValuePairs()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_320080;
  OUTLINED_FUNCTION_43_6(v3);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_34_5(v1);
  if (v6)
  {
    OUTLINED_FUNCTION_150(v5, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_162_0();
  }

  else
  {
    *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
    uint64_t v7 = OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_61_5((uint64_t)v7);
  }

  *(void *)(v3 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0x746361746E6F63LL;
  *(void *)(v3 + 88) = 0xE700000000000000LL;
  uint64_t v8 = type metadata accessor for StartCallUnsupportedContactsNoContactFoundParameters(0LL);
  uint64_t v9 = *(void *)(v0 + *(int *)(v8 + 20));
  if (v9)
  {
    OUTLINED_FUNCTION_140_0();
  }

  else
  {
    *(void *)(v3 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
    *(void *)(v3 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  *(void *)(v3 + 96) = v9;
  OUTLINED_FUNCTION_207();
  *(void *)(v3 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v10;
  *(void *)(v3 + 128) = v11;
  OUTLINED_FUNCTION_192();
  *(void *)(v3 + 136) = v12;
  LOBYTE(v1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(v0 + *(int *)(v8 + 24));
  *(void *)(v3 + 168) = &type metadata for Bool;
  *(_BYTE *)(v3 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v12;
  swift_retain();
  OUTLINED_FUNCTION_16();
}

void *OUTLINED_FUNCTION_109_0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, *(void *)(v3 + 40));
}

void OUTLINED_FUNCTION_31_3()
{
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112LL))();
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_109_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x746E65746E69LL;
  v2[11] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_109_3(uint64_t a1)
{
  return static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(v2 - 128, v1, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_109_4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 8))(v10, a10);
}

uint64_t OUTLINED_FUNCTION_109_5()
{
  return 0x7373694D7473754ALL;
}

uint64_t OUTLINED_FUNCTION_109_6()
{
  return static Device.current.getter();
}

__n128 *OUTLINED_FUNCTION_153(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "relationship");
  result[2].n128_u8[13] = 0;
  result[2].n128_u16[7] = -5120;
  return result;
}

uint64_t OUTLINED_FUNCTION_109_7(uint64_t result)
{
  v2[12] = v1;
  v2[15] = result;
  v2[16] = 0xD000000000000013LL;
  return result;
}

void OUTLINED_FUNCTION_156()
{
  *(_BYTE *)(v2 + 24outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v0;
  *(void *)(v2 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  *(void *)(v2 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x656D614E707061LL;
  *(void *)(v2 + 28outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0xE700000000000000LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_109_9@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_87_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v4, a4);
}

void OUTLINED_FUNCTION_109_10()
{
  uint64_t v1 = *(void *)(v0 - 104);
  uint64_t v2 = *(void *)(v0 - 96);
  uint64_t v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 - 128), v1);
  PhoneCallNLIntent.applicationId.getter(v1, v2, (uint64_t)v3);
}

  ;
}

id OUTLINED_FUNCTION_109_12()
{
  return *(id *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_142_0()
{
  return type metadata accessor for PhoneStartCallIntent(0LL);
}

uint64_t OUTLINED_FUNCTION_142_1()
{
  return v0;
}

void OUTLINED_FUNCTION_19_2()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_142_2@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

BOOL OUTLINED_FUNCTION_6_9(os_log_s *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_142_3()
{
  return swift_getObjCClassFromMetadata(v0);
}

__n128 *OUTLINED_FUNCTION_142_4(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x74616E6974736564LL;
  result[2].n128_u64[1] = 0xEF657079546E6F69LL;
  return result;
}

__n128 *OUTLINED_FUNCTION_217@<X0>(__n128 *result@<X0>, unint64_t a2@<X8>, __n128 a3@<Q0>)
{
  result[1] = a3;
  result[5].n128_u64[1] = (v3 - 32) | 0x8000000000000000LL;
  result[6].n128_u8[0] = v4;
  result[7].n128_u64[1] = a2;
  result[8].n128_u64[0] = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_142_5(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1);
}

uint64_t OUTLINED_FUNCTION_142_6(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0xD000000000000013LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_142_7()
{
  return v2(v0, v1);
}

BOOL OUTLINED_FUNCTION_142_8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_142_9()
{
}

uint64_t OUTLINED_FUNCTION_142_10()
{
  return static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_142_11()
{
  return type metadata accessor for SearchCallHistoryUnsupportedSearchParametersParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_142_12(uint64_t a1)
{
  return swift_task_dealloc(a1);
}

uint64_t OUTLINED_FUNCTION_142_13@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_107()
{
  return type metadata accessor for DialogPhase(0LL);
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return 0LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_107_1(uint64_t a1)
{
  return static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v2 - 128, v1, a1);
}

uint64_t OUTLINED_FUNCTION_118()
{
  return swift_release(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_107_2@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v2;
  a1[1] = a2;
  return *(void *)(v2 + 328);
}

uint64_t OUTLINED_FUNCTION_41_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

id OUTLINED_FUNCTION_107_3()
{
  return *(id *)(v0 - 176);
}

uint64_t OUTLINED_FUNCTION_107_4(uint64_t a1)
{
  return StringProtocol.capitalized.getter(a1, *(void *)(v1 - 136));
}

uint64_t OUTLINED_FUNCTION_107_5()
{
  return swift_task_dealloc(*(void *)(v0 + 296));
}

uint64_t OUTLINED_FUNCTION_107_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(a1, (a2 - 32) | 0x8000000000000000LL, v2);
}

uint64_t OUTLINED_FUNCTION_107_7()
{
  uint64_t v3 = *v1;
  unsigned __int8 v4 = (uint64_t *)(v2 - 8);
  *unsigned __int8 v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 72);
  *unsigned __int8 v4 = *v1;
  *(void *)(v3 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_107_8@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x746E65746E69LL;
  v2[17] = 0xE600000000000000LL;
  return 0LL;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_107_12()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void OUTLINED_FUNCTION_122_0(uint64_t a1, uint64_t *a2)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_107_14@<X0>(uint64_t a1@<X8>)
{
  return specialized BidirectionalCollection.last.getter(v1, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_128()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t ForcedAppDisambiguationHistory.phase.getter(char a1)
{
  return a1 & 1;
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  v0[2] = 0LL;
  uint64_t v1 = (uint64_t (*)(void *))v0[4];
  v0[3] = 0LL;
  return v1(v0 + 2);
}

uint64_t OUTLINED_FUNCTION_128_1()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_128_2()
{
  return swift_task_dealloc(*(void *)(v1 + 280));
}

uint64_t OUTLINED_FUNCTION_128_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 96, a2, v4, a4);
}

uint64_t OUTLINED_FUNCTION_128_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_52_1()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 56) = 0LL;
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  return result;
}

void OUTLINED_FUNCTION_128_5(uint64_t a1@<X8>)
{
  *(_BYTE *)(v3 + 24outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v1;
  *(void *)(v3 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  strcpy((char *)(v3 + 272), "isWalkieTalkie");
  *(_BYTE *)(v3 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 7) = -18;
  *(_BYTE *)(v3 + 288) = v2 & 1;
}

void OUTLINED_FUNCTION_181()
{
  *(void *)(v0 + 34__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(void *)(v0 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
}

uint64_t OUTLINED_FUNCTION_17_9()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_128_6()
{
  return type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
}

NSString OUTLINED_FUNCTION_128_7()
{
  return String._bridgeToObjectiveC()();
}

void *OUTLINED_FUNCTION_128_8()
{
  return outlined retain of Set<String>((void *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_128_9()
{
  return Input.parse.getter();
}

void OUTLINED_FUNCTION_128_10()
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 296LL)) = v3;
  outlined init with copy of SiriPhoneContact?(v0, v4, v2);
}

uint64_t OUTLINED_FUNCTION_128_11@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for InteractionType(0LL);
}

void outlined destroy of StartCallConfirmContactsParameters(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = OUTLINED_FUNCTION_55_2(a1, a2);
  OUTLINED_FUNCTION_2_0(v2);
  OUTLINED_FUNCTION_2();
}

uint64_t destroy for StartCallUnsupportedContactsNoContactFoundParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  return swift_release(*(void *)(a1 + *(int *)(a2 + 20)));
}

uint64_t PhonePerson.__deallocating_deinit()
{
  uint64_t v0 = DialogPerson.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t protocol witness for UnsupportedValueFlowStrategyAsync.makeUpdatedIntentForUnsupportedValue(resolveRecord:) in conformance CallingIntentUnsupportedValueFlowStrategy<A>( uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 368LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeUpdatedIntentForUnsupportedValue(resolveRecord:) in conformance CallingIntentUnsupportedValueFlowStrategy<A>;
  return v7(a1);
}

{
  uint64_t v1;
  uint64_t (**v2)(void);
  uint64_t v4;
  uint64_t v4 = OUTLINED_FUNCTION_14_1(*((void *)*v2 + 2));
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v2[1](v4);
}

#error "443D4: call analysis failed (funcsize=375)"
uint64_t CallingIntentUnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(resolveRecord:)( uint64_t a1)
{
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = OUTLINED_FUNCTION_113_3();
  v2[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[14] = v5;
  v2[15] = OUTLINED_FUNCTION_8_30(v5);
  v2[16] = OUTLINED_FUNCTION_28();
  v2[17] = *(void *)(v3 + 272);
  v2[18] = *(void *)(v3 + 264);
  char v6 = OUTLINED_FUNCTION_93_0();
  v2[19] = v6;
  uint64_t v7 = type metadata accessor for ParameterResolutionRecord(0LL, v6);
  v2[20] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[21] = v8;
  v2[22] = OUTLINED_FUNCTION_8_30(v8);
  v2[23] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

BOOL CallingIntentUnsupportedValueFlowStrategy.shouldClearContactsSlot(resolveRecord:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_93_0();
  uint64_t v3 = OUTLINED_FUNCTION_70_9(v2);
  uint64_t v4 = a1;
  uint64_t v5 = (void *)ParameterResolutionRecord.result.getter(v3);
  uint64_t v6 = objc_opt_self(&OBJC_CLASS___INStartCallContactResolutionResult);
  uint64_t v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    [v7 unsupportedReason];
    OUTLINED_FUNCTION_79();
    return v4 == 2;
  }

  else
  {

    return 0LL;
  }

uint64_t specialized Array.remove(at:)(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  uint64_t *v1 = v3;
  if (!(_DWORD)result || v3 < 0 || (v3 & 0x4000000000000000LL) != 0)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()(v3);
    uint64_t v3 = result;
    uint64_t *v1 = result;
  }

  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8LL;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }

  else
  {
    unint64_t v7 = v6 - 1;
    unint64_t v8 = v6 - 1 - a1;
    uint64_t v9 = v5 + 8 * a1;
    uint64_t v10 = *(void *)(v9 + 32);
    uint64_t v11 = specialized UnsafeMutablePointer.moveInitialize(from:count:)(v9 + 40, v8, v9 + 32);
    *(void *)(v5 + ++*(void *)(v0 + 16) = v7;
    specialized Array._endMutation()(v11, v12, v13, v14);
    return v10;
  }

  return result;
}

uint64_t default argument 0 of ContactDonationInfo.init(thirdPartyAppId:contactInNumberOfThirdPartyApps:contactExistsInFirstParty:)()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_64()
{
  return v0(v1, v2);
}

  ;
}

void OUTLINED_FUNCTION_34_4(uint64_t a1@<X8>)
{
  void *v1 = v2;
  v1[1] = a1;
}

uint64_t OUTLINED_FUNCTION_11_6(uint64_t a1, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  return static os_log_type_t.debug.getter();
}

uint64_t OUTLINED_FUNCTION_55_2(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0LL);
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  return __swift_getEnumTagSinglePayload(v0, 1LL, v1);
}

void OUTLINED_FUNCTION_93_1(uint64_t a1, uint64_t *a2)
{
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_64_4()
{
}

uint64_t OUTLINED_FUNCTION_64_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_64_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_64_7()
{
  return type metadata accessor for SiriKitAceViewBuilder(0LL);
}

void OUTLINED_FUNCTION_64_8()
{
}

void OUTLINED_FUNCTION_64_9(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

  ;
}

void OUTLINED_FUNCTION_64_10()
{
}

unint64_t OUTLINED_FUNCTION_64_11()
{
  return 0xD000000000000010LL;
}

void *OUTLINED_FUNCTION_64_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  void *(*v6)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  va_list va;
  va_start(va, a6);
  return v6((uint64_t *)va, v7, v8);
}

void OUTLINED_FUNCTION_64_13(uint64_t a1, uint64_t *a2)
{
}

  ;
}

void *OUTLINED_FUNCTION_64_15()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 104));
}

uint64_t OUTLINED_FUNCTION_64_16()
{
  return v0 + 16;
}

void OUTLINED_FUNCTION_64_17()
{
}

uint64_t OUTLINED_FUNCTION_64_18()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v0);
}

  ;
}

void *OUTLINED_FUNCTION_81@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[3] = a1;
  v2[4] = a2;
  return __swift_allocate_boxed_opaque_existential_1(v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_64_21(uint64_t result)
{
  *(void *)(v1 - 34__swift_destroy_boxed_opaque_existential_1(v0 + 4) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_64_22()
{
  return swift_retain(v0);
}

void OUTLINED_FUNCTION_64_23()
{
  *(void *)(v0 - 96) = 0LL;
  *(void *)(v0 - 88) = 0xE000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_64_24(uint64_t a1)
{
  return outlined init with copy of SpeakableString?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_64_25(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_64_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_asyncLet_begin(a1, 0LL, v5, a4, v4);
}

uint64_t OUTLINED_FUNCTION_64_27(uint64_t a1)
{
  *(void *)(v1 + 408) = a1;
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
}

uint64_t OUTLINED_FUNCTION_64_28()
{
  return dispatch thunk of DeviceState.siriLocale.getter(v1, v0);
}

uint64_t partial apply for specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( uint64_t a1, uint64_t a2)
{
  return specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2);
}

{
  uint64_t v2;
  return specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2);
}

{
  uint64_t v2;
  return specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( a1,  a2,  v2);
}

uint64_t specialized closure #1 in static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = a3;
  uint64_t v71 = a2;
  uint64_t v73 = a1;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartVideoCallIntent>.FlowState);
  __chkstk_darwin();
  unint64_t v66 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v8 = swift_retain();
  static CATOption.defaultMode.getter(v8);
  uint64_t v68 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v9 = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v9);
  uint64_t v67 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v10 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v11 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v12 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v12);
  uint64_t v13 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v14 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v14);
  uint64_t v15 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v16 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v18 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v18);
  uint64_t v19 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v20 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  uint64_t v21 = ResponseFactory.init()();
  static SiriKitEventSender.current.getter(v75, v21);
  uint64_t v22 = type metadata accessor for AppInfoBuilder();
  uint64_t v23 = swift_allocObject(v22, 16LL, 7LL);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartVideoCallRCHFlowDelegate>);
  uint64_t v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t v64 = v23;
  uint64_t v26 = v69;
  uint64_t v27 = v15;
  uint64_t v28 = v71;
  uint64_t v29 = specialized CallingIntentNeedsValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v69,  v68,  v67,  v11,  v13,  v27,  v17,  v19,  v21,  v75,  v64,  v25,  &direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartVideoCallIntent>);
  uint64_t v31 = ParameterResolutionRecord.parameter.getter(v30);
  uint64_t v32 = ParameterIdentifier.name.getter(v31);
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v5, v72);
  v35._uint64_t countAndFlagsBits = v32;
  v35._object = v34;
  if ((PhoneCallSlotNames.init(rawValue:)(v35).value & 0xFE) == 4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v36 = type metadata accessor for Logger(0LL);
    uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v40 = static os_log_type_t.debug.getter(v38, v39);
    if (os_log_type_enabled(v38, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl( &dword_0,  v38,  v40,  "#PhoneCallFlowFactory Contact slot needs value. Wrapping needsValueStrategy in NeedsValueGuardFlow.",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    v75[0] = v29;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentNeedsValueFlowStrategy<StartVideoCallRCHFlowDelegate> and conformance CallingIntentNeedsValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartVideoCallRCHFlowDelegate>);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v24,  v42);
    uint64_t v45 = v44;
    uint64_t v46 = v43(v73, v28);
    swift_release(v45);
    outlined init with copy of SharedGlobalsProviding( v26 + direct field offset for StartVideoCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v75);
    uint64_t v47 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload(v66, v65, 2LL);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v75, (uint64_t)v74);
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartVideoCallIntent>);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    specialized ContactNeedsValueGuardFlow.init(flow:state:sharedGlobals:)( v46,  v47,  v74,  &demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartVideoCallIntent>.FlowState);
    uint64_t v50 = v49;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1(v75);
    v75[0] = v50;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactNeedsValueGuardFlow<INStartVideoCallIntent> and conformance ContactNeedsValueGuardFlow<A>,  &demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartVideoCallIntent>);
    uint64_t v51 = Flow.eraseToAnyValueFlow()(v48);
    swift_release(v50);
    swift_release(v46);
    uint64_t v52 = v29;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v53 = type metadata accessor for Logger(0LL);
    uint64_t v54 = __swift_project_value_buffer(v53, (uint64_t)static Logger.siriPhone);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v57 = static os_log_type_t.debug.getter(v55, v56);
    if (os_log_type_enabled(v55, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl( &dword_0,  v55,  v57,  "#PhoneCallFlowFactory Needs value for non contact slot. Appending needsValueStrategy only.",  v58,  2u);
      swift_slowDealloc(v58, -1LL, -1LL);
    }

    v75[0] = v29;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentNeedsValueFlowStrategy<StartVideoCallRCHFlowDelegate> and conformance CallingIntentNeedsValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartVideoCallRCHFlowDelegate>);
    unint64_t v60 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v24,  v59);
    uint64_t v62 = v61;
    uint64_t v51 = v60(v73, v28);
    swift_release(v29);
    uint64_t v52 = v62;
  }

  swift_release(v52);
  return v51;
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  os_log_s *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_s *v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74[2];
  void v75[6];
  uint64_t v69 = a3;
  uint64_t v71 = a2;
  uint64_t v73 = a1;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartAudioCallIntent>.FlowState);
  __chkstk_darwin();
  unint64_t v66 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v8 = swift_retain();
  static CATOption.defaultMode.getter(v8);
  uint64_t v68 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v9 = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v9);
  uint64_t v67 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v10 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v11 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v12 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v12);
  uint64_t v13 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v14 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v14);
  uint64_t v15 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v16 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v18 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v18);
  uint64_t v19 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v20 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  uint64_t v21 = ResponseFactory.init()();
  static SiriKitEventSender.current.getter(v75, v21);
  uint64_t v22 = type metadata accessor for AppInfoBuilder();
  uint64_t v23 = swift_allocObject(v22, 16LL, 7LL);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartAudioCallRCHFlowDelegate>);
  uint64_t v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t v64 = v23;
  uint64_t v26 = v69;
  uint64_t v27 = v15;
  uint64_t v28 = v71;
  uint64_t v29 = specialized CallingIntentNeedsValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v69,  v68,  v67,  v11,  v13,  v27,  v17,  v19,  v21,  v75,  v64,  v25,  &direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartAudioCallIntent>);
  uint64_t v31 = ParameterResolutionRecord.parameter.getter(v30);
  uint64_t v32 = ParameterIdentifier.name.getter(v31);
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v5, v72);
  v35._uint64_t countAndFlagsBits = v32;
  v35._object = v34;
  if ((PhoneCallSlotNames.init(rawValue:)(v35).value & 0xFE) == 4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v36 = type metadata accessor for Logger(0LL);
    uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v40 = static os_log_type_t.debug.getter(v38, v39);
    if (os_log_type_enabled(v38, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl( &dword_0,  v38,  v40,  "#PhoneCallFlowFactory Contact slot needs value. Wrapping needsValueStrategy in NeedsValueGuardFlow.",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    v75[0] = v29;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentNeedsValueFlowStrategy<StartAudioCallRCHFlowDelegate> and conformance CallingIntentNeedsValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartAudioCallRCHFlowDelegate>);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v24,  v42);
    uint64_t v45 = v44;
    uint64_t v46 = v43(v73, v28);
    swift_release(v45);
    outlined init with copy of SharedGlobalsProviding( v26 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v75);
    uint64_t v47 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload(v66, v65, 2LL);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v75, (uint64_t)v74);
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartAudioCallIntent>);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    specialized ContactNeedsValueGuardFlow.init(flow:state:sharedGlobals:)( v46,  v47,  v74,  &demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartAudioCallIntent>.FlowState);
    uint64_t v50 = v49;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1(v75);
    v75[0] = v50;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactNeedsValueGuardFlow<INStartAudioCallIntent> and conformance ContactNeedsValueGuardFlow<A>,  &demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartAudioCallIntent>);
    uint64_t v51 = Flow.eraseToAnyValueFlow()(v48);
    swift_release(v50);
    swift_release(v46);
    uint64_t v52 = v29;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v53 = type metadata accessor for Logger(0LL);
    uint64_t v54 = __swift_project_value_buffer(v53, (uint64_t)static Logger.siriPhone);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v57 = static os_log_type_t.debug.getter(v55, v56);
    if (os_log_type_enabled(v55, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl( &dword_0,  v55,  v57,  "#PhoneCallFlowFactory Needs value for non contact slot. Appending needsValueStrategy only.",  v58,  2u);
      swift_slowDealloc(v58, -1LL, -1LL);
    }

    v75[0] = v29;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentNeedsValueFlowStrategy<StartAudioCallRCHFlowDelegate> and conformance CallingIntentNeedsValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartAudioCallRCHFlowDelegate>);
    unint64_t v60 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v24,  v59);
    uint64_t v62 = v61;
    uint64_t v51 = v60(v73, v28);
    swift_release(v29);
    uint64_t v52 = v62;
  }

  swift_release(v52);
  return v51;
}

{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  os_log_s *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_s *v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74[2];
  void v75[6];
  uint64_t v69 = a3;
  uint64_t v71 = a2;
  uint64_t v73 = a1;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState);
  __chkstk_darwin();
  unint64_t v66 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v8 = swift_retain();
  static CATOption.defaultMode.getter(v8);
  uint64_t v68 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v9 = type metadata accessor for StartCallCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v9);
  uint64_t v67 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v10 = type metadata accessor for StartCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v11 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v12 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v12);
  uint64_t v13 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v14 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v14);
  uint64_t v15 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v16 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v18 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v18);
  uint64_t v19 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v20 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  uint64_t v21 = ResponseFactory.init()();
  static SiriKitEventSender.current.getter(v75, v21);
  uint64_t v22 = type metadata accessor for AppInfoBuilder();
  uint64_t v23 = swift_allocObject(v22, 16LL, 7LL);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartCallRCHFlowDelegate>);
  uint64_t v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t v64 = v23;
  uint64_t v26 = v69;
  uint64_t v27 = v15;
  uint64_t v28 = v71;
  uint64_t v29 = specialized CallingIntentNeedsValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( v69,  v68,  v67,  v11,  v13,  v27,  v17,  v19,  v21,  v75,  v64,  v25,  &direct field offset for StartCallRCHFlowDelegate.sharedGlobals);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartCallIntent>);
  uint64_t v31 = ParameterResolutionRecord.parameter.getter(v30);
  uint64_t v32 = ParameterIdentifier.name.getter(v31);
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v5, v72);
  v35._uint64_t countAndFlagsBits = v32;
  v35._object = v34;
  if ((PhoneCallSlotNames.init(rawValue:)(v35).value & 0xFE) == 4)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v36 = type metadata accessor for Logger(0LL);
    uint64_t v37 = __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v40 = static os_log_type_t.debug.getter(v38, v39);
    if (os_log_type_enabled(v38, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl( &dword_0,  v38,  v40,  "#PhoneCallFlowFactory Contact slot needs value. Wrapping needsValueStrategy in NeedsValueGuardFlow.",  v41,  2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    v75[0] = v29;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentNeedsValueFlowStrategy<StartCallRCHFlowDelegate> and conformance CallingIntentNeedsValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartCallRCHFlowDelegate>);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v24,  v42);
    uint64_t v45 = v44;
    uint64_t v46 = v43(v73, v28);
    swift_release(v45);
    outlined init with copy of SharedGlobalsProviding( v26 + direct field offset for StartCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v75);
    uint64_t v47 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload(v66, v65, 2LL);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v75, (uint64_t)v74);
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartCallIntent>);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    specialized ContactNeedsValueGuardFlow.init(flow:state:sharedGlobals:)( v46,  v47,  v74,  &demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState);
    uint64_t v50 = v49;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1(v75);
    v75[0] = v50;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type ContactNeedsValueGuardFlow<INStartCallIntent> and conformance ContactNeedsValueGuardFlow<A>,  &demangling cache variable for type metadata for ContactNeedsValueGuardFlow<INStartCallIntent>);
    uint64_t v51 = Flow.eraseToAnyValueFlow()(v48);
    swift_release(v50);
    swift_release(v46);
    uint64_t v52 = v29;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v53 = type metadata accessor for Logger(0LL);
    uint64_t v54 = __swift_project_value_buffer(v53, (uint64_t)static Logger.siriPhone);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v57 = static os_log_type_t.debug.getter(v55, v56);
    if (os_log_type_enabled(v55, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl( &dword_0,  v55,  v57,  "#PhoneCallFlowFactory Needs value for non contact slot. Appending needsValueStrategy only.",  v58,  2u);
      swift_slowDealloc(v58, -1LL, -1LL);
    }

    v75[0] = v29;
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type CallingIntentNeedsValueFlowStrategy<StartCallRCHFlowDelegate> and conformance CallingIntentNeedsValueFlowStrategy<A>,  &demangling cache variable for type metadata for CallingIntentNeedsValueFlowStrategy<StartCallRCHFlowDelegate>);
    unint64_t v60 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)( v75,  v24,  v59);
    uint64_t v62 = v61;
    uint64_t v51 = v60(v73, v28);
    swift_release(v29);
    uint64_t v52 = v62;
  }

  swift_release(v52);
  return v51;
}

void ContactNeedsValueGuardFlow.__allocating_init(flow:state:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3)
{
}

void ContactNeedsValueGuardFlow.init(flow:state:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v7 = *v4;
  *(uint64_t *)((char *)v4 + *(void *)(*v4 + 104)) = a1;
  uint64_t v8 = (uint64_t)v4 + *(void *)(*v4 + 96);
  uint64_t v9 = type metadata accessor for ContactNeedsValueGuardFlow.FlowState( 0LL,  *(void *)(v7 + 80),  *(void *)(v7 + 88),  a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))(v8, a2, v9);
  outlined init with take of AppSelectionSignalComponent(a3, (uint64_t)v4 + *(void *)(*v4 + 112));
  OUTLINED_FUNCTION_6();
}

uint64_t protocol witness for NeedsValueFlowStrategyAsync.makePromptForValue(resolveRecord:) in conformance CallingIntentNeedsValueFlowStrategy<A>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 392LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + ++*(void *)(v0 + 16) = v7;
  void *v7 = v3;
  v7[1] = ContactUnsetRelationshipFlowStrategy.makeUnsupportedPlatformResponse(requestedRelationship:resolveRecord:);
  return v9(a1, a2);
}

uint64_t ContactUnsetRelationshipFlowStrategy.makeUnsupportedPlatformResponse(requestedRelationship:resolveRecord:)()
{
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentNeedsValueFlowStrategy.makePromptForValue(resolveRecord:)()
{
  uint64_t v80 = v0 + 224;
  uint64_t v1 = v0 + 392;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v81 = v0 + 312;
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v4 = *(void *)(v0 + 464);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  uint64_t v7 = (os_log_s *)__swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v2, v5, v3);
  uint64_t v9 = OUTLINED_FUNCTION_258();
  uint64_t v78 = v8;
  uint64_t v10 = ((uint64_t (*)(uint64_t))v8)(v9);
  uint64_t v11 = v7;
  Logger.logObject.getter(v10);
  os_log_type_t v12 = OUTLINED_FUNCTION_6_0();
  BOOL v13 = os_log_type_enabled(v7, v12);
  uint64_t v14 = *(void *)(v0 + 488);
  uint64_t v79 = *(void *)(v0 + 480);
  uint64_t v15 = *(void *)(v0 + 456);
  uint64_t v77 = (void *)(v0 + 384);
  if (v13)
  {
    uint64_t v16 = *(void *)(v0 + 448);
    uint64_t v73 = *(void *)(v0 + 432);
    uint64_t v74 = *(void *)(v0 + 424);
    uint64_t v17 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v76 = OUTLINED_FUNCTION_7_0(96LL);
    uint64_t v82 = v76;
    *(_DWORD *)uint64_t v17 = 136315650;
    *(void *)(v0 + 368) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000022LL,  0x800000000034ECD0LL,  &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 368, v0 + 376, v17 + 4);
    *(_WORD *)(v17 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v18 = ParameterResolutionRecord.parameter.getter(v15);
    uint64_t v19 = ParameterIdentifier.name.getter(v18);
    uint64_t v72 = v14;
    unint64_t v21 = v20;
    os_log_type_t type = v12;
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
    v22(v16, v74);
    *(void *)(v0 + 376) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 376, v0 + 384, v17 + 14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_10(v72);
    *(_WORD *)(v17 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v23 = ParameterResolutionRecord.parameter.getter(v15);
    uint64_t v24 = ParameterIdentifier.multicardinalIndex.getter(v23);
    char v26 = v25;
    uint64_t v27 = v16;
    uint64_t v1 = v0 + 392;
    v22(v27, v74);
    *(void *)(v0 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v24;
    *(_BYTE *)(v0 + 36outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v26 & 1;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Int?);
    uint64_t v29 = String.init<A>(describing:)(v0 + 352, v28);
    *(void *)(v0 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 392, v0 + 400, v17 + 24);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_6_10(v79);
    uint64_t v11 = v7;
    _os_log_impl( &dword_0,  v7,  type,  "#CallingIntentNeedsValueFlowStrategy %s parameter={ %s, %s }",  (uint8_t *)v17,  0x20u);
    swift_arrayDestroy(v76, 3LL);
    OUTLINED_FUNCTION_0_2(v76);
    OUTLINED_FUNCTION_0_2(v17);
  }

  else
  {
    OUTLINED_FUNCTION_6_10(v14);
    OUTLINED_FUNCTION_6_10(v79);
  }

  uint64_t v31 = *(void *)(v0 + 416);
  uint64_t v32 = *(void *)(v31 + 56);
  OUTLINED_FUNCTION_82((void *)(v31 + 24));
  uint64_t v33 = OUTLINED_FUNCTION_104(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 72));
  (*(void (**)(uint64_t))(*(void *)v33 + 240LL))(v33);
  OUTLINED_FUNCTION_38_1();
  if (*(void *)(v0 + 256) == 1LL)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v80,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    *(_OWORD *)(v0 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(v0 + 288) = 0u;
    *(void *)(v0 + 30__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  }

  else
  {
    outlined init with copy of SiriPhoneContact?( v0 + 232,  v0 + 272,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    outlined destroy of TransformationResult(v80);
  }

  uint64_t v34 = (_OWORD *)(v0 + 120);
  Swift::String v35 = (void *)(v0 + 312);
  outlined init with copy of SiriPhoneContact?( v0 + 272,  v81,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if (!*(void *)(v0 + 336))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v81,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    *uint64_t v34 = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(v0 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0u;
    *(void *)(v0 + 2++*(void *)(v0 + 16) = 0LL;
    goto LABEL_19;
  }

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  uint64_t v36 = OUTLINED_FUNCTION_34_1();
  uint64_t v39 = swift_dynamicCast(v36, v37, v38);
  if ((v39 & 1) == 0)
  {
    *(void *)(v0 + 2++*(void *)(v0 + 16) = 0LL;
    *(_OWORD *)(v0 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
    *(_OWORD *)(v0 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0u;
    *(_OWORD *)(v0 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    *uint64_t v34 = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    goto LABEL_19;
  }

  if (!*(void *)v34)
  {
LABEL_19:
    OUTLINED_FUNCTION_71_14(v39, &demangling cache variable for type metadata for PhoneCallNLv4Intent?);
    goto LABEL_20;
  }

  Swift::String v35 = (void *)(v0 + 16);
  os_log_type_t v40 = (void *)OUTLINED_FUNCTION_9_0();
  memcpy(v40, v41, 0x68uLL);
  BOOL v42 = PhoneCallNLv4Intent.isCallLabelOnly()();
  if (v42)
  {
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v45 = static os_log_type_t.debug.getter(v43, v44);
    if (os_log_type_enabled(v43, v45))
    {
      uint64_t v46 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl( &dword_0,  v43,  v45,  "#CallingIntentNeedsValueFlowStrategy - redirected here from Needs DisambiguationFlowStrategy missing label loop, so setting startOver to true.",  v46,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v46);
    }

    uint64_t v47 = *(void *)(v0 + 416);

    (*(void (**)(uint64_t))(*(void *)v47 + 336LL))(1LL);
  }

  outlined destroy of PhoneCallNLv4Intent((void *)(v0 + 16));
LABEL_20:
  [(id)OUTLINED_FUNCTION_119_4() unsupportedReason];
  OUTLINED_FUNCTION_51_9();
  if (v35)
  {
    id v48 = [(id)OUTLINED_FUNCTION_119_4() alternatives];
    OUTLINED_FUNCTION_51_9();
    uint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, (char *)&type metadata for Any + 8);

    uint64_t v50 = *(void *)(v49 + 16);
    OUTLINED_FUNCTION_62();
    if (!v50)
    {
      uint64_t v51 = ((uint64_t (*)(void, void, void))v78)( *(void *)(v0 + 472),  *(void *)(v0 + 408),  *(void *)(v0 + 456));
      Logger.logObject.getter(v51);
      os_log_type_t v52 = OUTLINED_FUNCTION_41();
      BOOL v53 = os_log_type_enabled(0LL, v52);
      uint64_t v54 = *(void *)(v0 + 456);
      if (v53)
      {
        uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        *(_DWORD *)uint64_t v55 = 134217984;
        uint64_t v56 = (void *)ParameterResolutionRecord.result.getter(v54);
        id v57 = [v56 unsupportedReason];

        OUTLINED_FUNCTION_142_7();
        *uint64_t v77 = v57;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v77, v1, v55 + 4);
        OUTLINED_FUNCTION_0_2((uint64_t)v55);
      }

      else
      {
        OUTLINED_FUNCTION_142_7();
      }

      uint64_t v58 = *(void *)(v0 + 416);

      *(_BYTE *)(v58 + direct field offset for CallingIntentNeedsValueFlowStrategy.isUnsupportedFollowUp) = 1;
    }
  }

  uint64_t v59 = *(void *)(v0 + 456);
  uint64_t v61 = *(void *)(v0 + 432);
  uint64_t v60 = *(void *)(v0 + 440);
  uint64_t v62 = *(void *)(v0 + 424);
  *(void *)(v0 + 496) = ParameterResolutionRecord.app.getter(v59);
  *(void *)(v0 + 50__swift_destroy_boxed_opaque_existential_1(v0 + 4) = ParameterResolutionRecord.intent.getter(v59);
  uint64_t v63 = ParameterResolutionRecord.parameter.getter(v59);
  ParameterIdentifier.name.getter(v63);
  *(void *)(v0 + 51__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v64;
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  *(void *)(v0 + 52outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = ParameterResolutionRecord.result.getter(v59);
  uint64_t v65 = (void *)swift_task_alloc(dword_43A57C);
  *(void *)(v0 + 528) = v65;
  *uint64_t v65 = v0;
  v65[1] = CallingIntentNeedsValueFlowStrategy.makePromptForValue(resolveRecord:);
  OUTLINED_FUNCTION_55_19();
  return CallingIntentNeedsValueFlowStrategy.makePromptForNeedsValueOutput(app:intent:parameterName:intentResolutionResult:)( v66,  v67,  v68,  v69,  v70);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v0 = OUTLINED_FUNCTION_115_5();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_12_4(v1);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 528);
  *(void *)(*v1 + 536) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void **)(v2 + 520);
  uint64_t v5 = *(void **)(v2 + 504);
  if (v0)
  {

    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_22();
  }

  else
  {

    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_34_0();
  }

  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = OUTLINED_FUNCTION_115_5();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentNeedsValueFlowStrategy.makePromptForValue(resolveRecord:)(uint64_t a1, uint64_t a2)
{
  v3[51] = a2;
  v3[52] = v2;
  v3[50] = a1;
  uint64_t v4 = OUTLINED_FUNCTION_113_3();
  v3[53] = v4;
  v3[54] = *(void *)(v4 - 8);
  v3[55] = OUTLINED_FUNCTION_28();
  v3[56] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_107_10();
  uint64_t v5 = OUTLINED_FUNCTION_93_0();
  uint64_t v6 = OUTLINED_FUNCTION_70_9(v5);
  v3[57] = v6;
  v3[58] = *(void *)(v6 - 8);
  v3[59] = OUTLINED_FUNCTION_28();
  v3[60] = OUTLINED_FUNCTION_28();
  v3[61] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

Swift::Bool __swiftcall PhoneCallNLv4Intent.isCallLabelOnly()()
{
  uint64_t v5 = *(unsigned __int8 *)(v4 + 79);
  if ((_DWORD)v5 == 17)
  {
    OUTLINED_FUNCTION_46_17(v5, v0, v1, v2, v3);
LABEL_13:
    char v15 = 0;
    goto LABEL_14;
  }

  uint64_t v6 = PhoneCallVerb.rawValue.getter(v5);
  if (v6 == 1819042147 && v7 == 0xE400000000000000LL)
  {
    uint64_t v16 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_46_17(v16, v17, v18, v19, v20);
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_49_2(v6, v7, 1819042147LL, 0xE400000000000000LL);
    uint64_t v10 = OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_46_17(v10, v11, v12, v13, v14);
    char v15 = 0;
    if ((v9 & 1) == 0) {
      goto LABEL_14;
    }
  }

  if (*(void *)(v27[1] + 16LL) != 1LL) {
    goto LABEL_13;
  }
  specialized Collection.first.getter(v25);
  char v15 = v26;
  if (v26)
  {
    Class isa = OUTLINED_FUNCTION_45_18(v25).super.isa;
    uint64_t v22 = __swift_destroy_boxed_opaque_existential_1(v25);
    INPerson.isUnnamedHandleLabel.getter(v22);
    char v15 = v23;
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v25,  &demangling cache variable for type metadata for SiriPhoneContact?);
  }

LABEL_14:
  outlined destroy of PhoneCallNLv4Intent(v27);
  return v15 & 1;
}

  swift_bridgeObjectRelease();
  if (v14) {
LABEL_8:
  }
    swift_bridgeObjectRelease();
LABEL_9:
  if ((_DWORD)v6)
  {
    uint64_t v29 = OUTLINED_FUNCTION_25_3();
    (*(void (**)(uint64_t))(v30 + 8))(v29);
  }

  uint64_t v38 = OUTLINED_FUNCTION_23_9();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v38 + 192LL))(&v54, v21);
  OUTLINED_FUNCTION_38_1();
  if (!v56)
  {
LABEL_22:
    outlined destroy of PhoneCallNLIntent?( (uint64_t)&v54,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    goto LABEL_23;
  }

  OUTLINED_FUNCTION_49_4();
  __swift_destroy_boxed_opaque_existential_1(v57);
LABEL_25:
  OUTLINED_FUNCTION_7_5();
}

  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = __OFADD__(v13, 1LL);
  char v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + ++*(void *)(v0 + 16) = v15;
  }
  return result;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v23 & 0xC000000000000001LL) == 0, v23);
  if ((v23 & 0xC000000000000001LL) != 0) {
    uint64_t v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
  }
  else {
    uint64_t v24 = *(id *)(v23 + 32);
  }
  char v25 = v24;
  OUTLINED_FUNCTION_62();
  *uint64_t v10 = 0xD000000000000024LL;
  v10[1] = 0x8000000000322490LL;
  v10[2] = 0xD000000000000034LL;
  v10[3] = 0x8000000000348540LL;
  swift_storeEnumTagMultiPayload(v10, v46[0], 7LL);
  PhoneError.logged()((uint64_t)v12);

  outlined destroy of PhoneError((uint64_t)v10);
  outlined destroy of PhoneError((uint64_t)v12);
LABEL_21:
  uint64_t v26 = type metadata accessor for IncomingCallActionConfirmation(255LL);
  lazy protocol witness table accessor for type PlayVoiceMailAction and conformance PlayVoiceMailAction( (unint64_t *)&lazy protocol witness table cache variable for type IncomingCallActionConfirmation and conformance IncomingCallActionConfirmation,  255LL,  type metadata accessor for IncomingCallActionConfirmation,  (uint64_t)&protocol conformance descriptor for IncomingCallActionConfirmation);
  uint64_t v28 = type metadata accessor for PromptForConfirmationFlowAsync(0LL, a4, v26, v27);
  uint64_t v54 = a2;
  unint64_t v30 = type metadata accessor for IncomingCallActionConfirmationStrategy(0LL, a4, a5, v29);
  outlined init with copy of SharedGlobalsProviding(v46[1], (uint64_t)&v47);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)&v51);
  uint64_t v31 = a2;
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v33 = v32;
  default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)((uint64_t *)v50);
  IncomingCallActionConfirmationStrategy.__allocating_init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)( (uint64_t)v31,  &v47,  &v51,  0LL,  0,  v33,  v50);
  Swift::String v35 = v34;
  uint64_t v36 = a3[3];
  uint64_t v37 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v36);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v37 + 16))(&v47, v36, v37);
  uint64_t v38 = v48;
  uint64_t v39 = v49;
  os_log_type_t v40 = __swift_project_boxed_opaque_existential_1(&v47, v48);
  os_log_type_t v52 = v38;
  BOOL v53 = v39;
  uint64_t v41 = __swift_allocate_boxed_opaque_existential_1(&v51);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16LL))(v41, v40, v38);
  uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for IncomingCallActionConfirmationStrategy<A>,  v30);
  uint64_t v43 = PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)( &v54,  v35,  &v51,  v30,  WitnessTable);
  __swift_destroy_boxed_opaque_existential_1(&v47);
  *(void *)&uint64_t v47 = v43;
  swift_getWitnessTable(&protocol conformance descriptor for PromptForConfirmationFlowAsync<A, B>, v28);
  uint64_t v44 = Flow.eraseToAnyValueFlow()(v28);
  swift_release(v43);
  return v44;
}

  uint64_t v100 = v23 & 0xC000000000000001LL;
  if ((v23 & 0xC000000000000001LL) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
  }

  else
  {
    uint64_t v26 = *(void **)(v23 + 32);
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
  }

  uint64_t v28 = v27;
  INPerson.hasHandleValue.getter();
  unint64_t v30 = v29;

  if ((v30 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 1)
  {
LABEL_50:
    swift_bridgeObjectRelease_n(v23, 2LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v59 = type metadata accessor for Logger(0LL);
    uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v60);
    Swift::String v35 = static os_log_type_t.debug.getter(v17, v61);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    uint64_t v37 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_84;
  }

  uint64_t v31 = v100 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v23) : *(id *)(v23 + 40);
  uint64_t v38 = v31;
  INPerson.hasHandleValue.getter();
  os_log_type_t v40 = v39;

  if ((v40 & 1) == 0)
  {
LABEL_54:
    uint64_t v99 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v6 = 4LL;
    do
    {
      if (v100) {
        uint64_t v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v23);
      }
      else {
        uint64_t v62 = *(id *)(v23 + 8 * v6);
      }
      uint64_t v63 = v62;
      uint64_t v64 = v6 - 3;
      if (__OFADD__(v6 - 4, 1LL))
      {
        __break(1u);
        goto LABEL_75;
      }

      uint64_t v65 = [v62 personHandle];
      if (v65)
      {
        uint64_t v66 = v65;
        uint64_t v67 = [v65 emergencyType];

        if (v67)
        {
          swift_bridgeObjectRelease_n(v23, 2LL);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v83 = type metadata accessor for Logger(0LL);
          uint64_t v84 = __swift_project_value_buffer(v83, (uint64_t)static Logger.siriPhone);
          uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
          uint64_t v87 = static os_log_type_t.debug.getter(v85, v86);
          if (os_log_type_enabled(v85, v87))
          {
            uint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v89 = swift_slowAlloc(32LL, -1LL);
            v102[0] = v89;
            *(_DWORD *)uint64_t v88 = 136315138;
            uint64_t v104 = (uint64_t)v67;
            type metadata accessor for INPersonHandleEmergencyType(0LL);
            unint64_t v91 = String.init<A>(describing:)(&v104, v90);
            uint64_t v104 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v92, v102);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v88 + 4);
            swift_bridgeObjectRelease();
            _os_log_impl( &dword_0,  v85,  v87,  "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution",  v88,  0xCu);
            unint64_t v21 = 1LL;
            swift_arrayDestroy(v89, 1LL);
            swift_slowDealloc(v89, -1LL, -1LL);
            swift_slowDealloc(v88, -1LL, -1LL);

            goto LABEL_87;
          }

          goto LABEL_86;
        }
      }

      ++v6;
    }

    while (v64 != v25);
    swift_bridgeObjectRelease();
    uint64_t v68 = v99;
    uint64_t v69 = *(void *)((char *)boxed_opaque_existential_1 + *(int *)(v99 + 48));
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent,  (uint64_t)&protocol conformance descriptor for PhoneCallNLv3Intent);
    uint64_t v71 = v70;
    uint64_t v72 = IntentNodeTraversable.intentNodes(forOntologyNode:)(v69, v99, v70);
    __chkstk_darwin();
    uint64_t v98 = boxed_opaque_existential_1;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)v97,  v72,  (uint64_t)v103);
    uint64_t v74 = v73;
    swift_bridgeObjectRelease();
    uint64_t v75 = *(void *)(v74 + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SharedGlobalsProviding((uint64_t)v105, (uint64_t)v102);
    if (!v75)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v102);
      goto LABEL_10;
    }

    uint64_t v76 = __swift_project_boxed_opaque_existential_1(v102, v102[3]);
    uint64_t v77 = IntentNodeTraversable.intentNodes(forOntologyNode:)(*(void *)((char *)v76 + *(int *)(v68 + 48)), v68, v71);
    __chkstk_darwin();
    uint64_t v98 = v76;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)v97,  v77,  (uint64_t)v101);
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();
    LOBYTE(v7__swift_destroy_boxed_opaque_existential_1(v0 + 7) = specialized Sequence.allSatisfy(_:)(v79, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v102);
    if ((v77 & 1) == 0) {
      goto LABEL_10;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v80 = type metadata accessor for Logger(0LL);
    uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v81);
    Swift::String v35 = static os_log_type_t.debug.getter(v17, v82);
    if (os_log_type_enabled((os_log_t)v17, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      uint64_t v37 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_84;
    }

    goto LABEL_85;
  }

  if (v25 == 2) {
    goto LABEL_50;
  }
  if (v100) {
    uint64_t v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2LL, v23);
  }
  else {
    uint64_t v41 = *(id *)(v23 + 48);
  }
  BOOL v42 = v41;
  INPerson.hasHandleValue.getter();
  uint64_t v44 = v43;

  if ((v44 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 3) {
    goto LABEL_50;
  }
  if (v100) {
    os_log_type_t v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3LL, v23);
  }
  else {
    os_log_type_t v45 = *(id *)(v23 + 56);
  }
  uint64_t v46 = v45;
  INPerson.hasHandleValue.getter();
  id v48 = v47;

  if ((v48 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 4) {
    goto LABEL_50;
  }
  if (v100) {
    uint64_t v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4LL, v23);
  }
  else {
    uint64_t v49 = *(id *)(v23 + 64);
  }
  uint64_t v50 = v49;
  INPerson.hasHandleValue.getter();
  os_log_type_t v52 = v51;

  if ((v52 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 5) {
    goto LABEL_50;
  }
  BOOL v53 = 9LL;
  while (1)
  {
    uint64_t result = v100
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v53 - 4, v23)
           : *(id *)(v23 + 8 * v53);
    uint64_t v55 = result;
    uint64_t v56 = v53 - 3;
    if (__OFADD__(v53 - 4, 1LL)) {
      break;
    }
    INPerson.hasHandleValue.getter();
    uint64_t v58 = v57;

    if ((v58 & 1) == 0) {
      goto LABEL_54;
    }
    ++v53;
    if (v56 == v25) {
      goto LABEL_50;
    }
  }

  __break(1u);
  return result;
}

  uint64_t v100 = v23 & 0xC000000000000001LL;
  if ((v23 & 0xC000000000000001LL) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
  }

  else
  {
    uint64_t v26 = *(void **)(v23 + 32);
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
  }

  uint64_t v28 = v27;
  INPerson.hasHandleValue.getter();
  unint64_t v30 = v29;

  if ((v30 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 1)
  {
LABEL_50:
    swift_bridgeObjectRelease_n(v23, 2LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v59 = type metadata accessor for Logger(0LL);
    uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v60);
    Swift::String v35 = static os_log_type_t.debug.getter(v17, v61);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    uint64_t v37 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_84;
  }

  uint64_t v31 = v100 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v23) : *(id *)(v23 + 40);
  uint64_t v38 = v31;
  INPerson.hasHandleValue.getter();
  os_log_type_t v40 = v39;

  if ((v40 & 1) == 0)
  {
LABEL_54:
    uint64_t v99 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v6 = 4LL;
    do
    {
      if (v100) {
        uint64_t v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v23);
      }
      else {
        uint64_t v62 = *(id *)(v23 + 8 * v6);
      }
      uint64_t v63 = v62;
      uint64_t v64 = v6 - 3;
      if (__OFADD__(v6 - 4, 1LL))
      {
        __break(1u);
        goto LABEL_75;
      }

      uint64_t v65 = [v62 personHandle];
      if (v65)
      {
        uint64_t v66 = v65;
        uint64_t v67 = [v65 emergencyType];

        if (v67)
        {
          swift_bridgeObjectRelease_n(v23, 2LL);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v83 = type metadata accessor for Logger(0LL);
          uint64_t v84 = __swift_project_value_buffer(v83, (uint64_t)static Logger.siriPhone);
          uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
          uint64_t v87 = static os_log_type_t.debug.getter(v85, v86);
          if (os_log_type_enabled(v85, v87))
          {
            uint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v89 = swift_slowAlloc(32LL, -1LL);
            v102[0] = v89;
            *(_DWORD *)uint64_t v88 = 136315138;
            uint64_t v104 = (uint64_t)v67;
            type metadata accessor for INPersonHandleEmergencyType(0LL);
            unint64_t v91 = String.init<A>(describing:)(&v104, v90);
            uint64_t v104 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v92, v102);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v88 + 4);
            swift_bridgeObjectRelease();
            _os_log_impl( &dword_0,  v85,  v87,  "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution",  v88,  0xCu);
            unint64_t v21 = 1LL;
            swift_arrayDestroy(v89, 1LL);
            swift_slowDealloc(v89, -1LL, -1LL);
            swift_slowDealloc(v88, -1LL, -1LL);

            goto LABEL_87;
          }

          goto LABEL_86;
        }
      }

      ++v6;
    }

    while (v64 != v25);
    swift_bridgeObjectRelease();
    uint64_t v68 = v99;
    uint64_t v69 = *(void *)((char *)boxed_opaque_existential_1 + *(int *)(v99 + 48));
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent,  (uint64_t)&protocol conformance descriptor for PhoneCallNLv3Intent);
    uint64_t v71 = v70;
    uint64_t v72 = IntentNodeTraversable.intentNodes(forOntologyNode:)(v69, v99, v70);
    __chkstk_darwin();
    uint64_t v98 = boxed_opaque_existential_1;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)v97,  v72,  (uint64_t)v103);
    uint64_t v74 = v73;
    swift_bridgeObjectRelease();
    uint64_t v75 = *(void *)(v74 + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SharedGlobalsProviding((uint64_t)v105, (uint64_t)v102);
    if (!v75)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v102);
      goto LABEL_10;
    }

    uint64_t v76 = __swift_project_boxed_opaque_existential_1(v102, v102[3]);
    uint64_t v77 = IntentNodeTraversable.intentNodes(forOntologyNode:)(*(void *)((char *)v76 + *(int *)(v68 + 48)), v68, v71);
    __chkstk_darwin();
    uint64_t v98 = v76;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)v97,  v77,  (uint64_t)v101);
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();
    LOBYTE(v7__swift_destroy_boxed_opaque_existential_1(v0 + 7) = specialized Sequence.allSatisfy(_:)(v79, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v102);
    if ((v77 & 1) == 0) {
      goto LABEL_10;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v80 = type metadata accessor for Logger(0LL);
    uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v81);
    Swift::String v35 = static os_log_type_t.debug.getter(v17, v82);
    if (os_log_type_enabled((os_log_t)v17, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      uint64_t v37 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_84;
    }

    goto LABEL_85;
  }

  if (v25 == 2) {
    goto LABEL_50;
  }
  if (v100) {
    uint64_t v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2LL, v23);
  }
  else {
    uint64_t v41 = *(id *)(v23 + 48);
  }
  BOOL v42 = v41;
  INPerson.hasHandleValue.getter();
  uint64_t v44 = v43;

  if ((v44 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 3) {
    goto LABEL_50;
  }
  if (v100) {
    os_log_type_t v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3LL, v23);
  }
  else {
    os_log_type_t v45 = *(id *)(v23 + 56);
  }
  uint64_t v46 = v45;
  INPerson.hasHandleValue.getter();
  id v48 = v47;

  if ((v48 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 4) {
    goto LABEL_50;
  }
  if (v100) {
    uint64_t v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4LL, v23);
  }
  else {
    uint64_t v49 = *(id *)(v23 + 64);
  }
  uint64_t v50 = v49;
  INPerson.hasHandleValue.getter();
  os_log_type_t v52 = v51;

  if ((v52 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 5) {
    goto LABEL_50;
  }
  BOOL v53 = 9LL;
  while (1)
  {
    uint64_t result = v100
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v53 - 4, v23)
           : *(id *)(v23 + 8 * v53);
    uint64_t v55 = result;
    uint64_t v56 = v53 - 3;
    if (__OFADD__(v53 - 4, 1LL)) {
      break;
    }
    INPerson.hasHandleValue.getter();
    uint64_t v58 = v57;

    if ((v58 & 1) == 0) {
      goto LABEL_54;
    }
    ++v53;
    if (v56 == v25) {
      goto LABEL_50;
    }
  }

  __break(1u);
  return result;
}

  uint64_t v100 = v23 & 0xC000000000000001LL;
  if ((v23 & 0xC000000000000001LL) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
  }

  else
  {
    uint64_t v26 = *(void **)(v23 + 32);
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
  }

  uint64_t v28 = v27;
  INPerson.hasHandleValue.getter();
  unint64_t v30 = v29;

  if ((v30 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 1)
  {
LABEL_50:
    swift_bridgeObjectRelease_n(v23, 2LL);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v59 = type metadata accessor for Logger(0LL);
    uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v60);
    Swift::String v35 = static os_log_type_t.debug.getter(v17, v61);
    if (!os_log_type_enabled((os_log_t)v17, v35)) {
      goto LABEL_85;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    uint64_t v37 = "#ContactResolution contacts have been fully resolved. bypassing contact resolution";
    goto LABEL_84;
  }

  uint64_t v31 = v100 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, v23) : *(id *)(v23 + 40);
  uint64_t v38 = v31;
  INPerson.hasHandleValue.getter();
  os_log_type_t v40 = v39;

  if ((v40 & 1) == 0)
  {
LABEL_54:
    uint64_t v99 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v6 = 4LL;
    do
    {
      if (v100) {
        uint64_t v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v23);
      }
      else {
        uint64_t v62 = *(id *)(v23 + 8 * v6);
      }
      uint64_t v63 = v62;
      uint64_t v64 = v6 - 3;
      if (__OFADD__(v6 - 4, 1LL))
      {
        __break(1u);
        goto LABEL_75;
      }

      uint64_t v65 = [v62 personHandle];
      if (v65)
      {
        uint64_t v66 = v65;
        uint64_t v67 = [v65 emergencyType];

        if (v67)
        {
          swift_bridgeObjectRelease_n(v23, 2LL);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v83 = type metadata accessor for Logger(0LL);
          uint64_t v84 = __swift_project_value_buffer(v83, (uint64_t)static Logger.siriPhone);
          uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
          uint64_t v87 = static os_log_type_t.debug.getter(v85, v86);
          if (os_log_type_enabled(v85, v87))
          {
            uint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v89 = swift_slowAlloc(32LL, -1LL);
            v102[0] = v89;
            *(_DWORD *)uint64_t v88 = 136315138;
            uint64_t v104 = (uint64_t)v67;
            type metadata accessor for INPersonHandleEmergencyType(0LL);
            unint64_t v91 = String.init<A>(describing:)(&v104, v90);
            uint64_t v104 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v92, v102);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v88 + 4);
            swift_bridgeObjectRelease();
            _os_log_impl( &dword_0,  v85,  v87,  "#ContactResolution contact has a handle with an emergency type %s. bypassing contact resolution",  v88,  0xCu);
            unint64_t v21 = 1LL;
            swift_arrayDestroy(v89, 1LL);
            swift_slowDealloc(v89, -1LL, -1LL);
            swift_slowDealloc(v88, -1LL, -1LL);

            goto LABEL_87;
          }

          goto LABEL_86;
        }
      }

      ++v6;
    }

    while (v64 != v25);
    swift_bridgeObjectRelease();
    uint64_t v68 = v99;
    uint64_t v69 = *(void *)((char *)boxed_opaque_existential_1 + *(int *)(v99 + 48));
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent,  (uint64_t)&protocol conformance descriptor for PhoneCallNLv3Intent);
    uint64_t v71 = v70;
    uint64_t v72 = IntentNodeTraversable.intentNodes(forOntologyNode:)(v69, v99, v70);
    __chkstk_darwin();
    uint64_t v98 = boxed_opaque_existential_1;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)v97,  v72,  (uint64_t)v103);
    uint64_t v74 = v73;
    swift_bridgeObjectRelease();
    uint64_t v75 = *(void *)(v74 + 16);
    swift_bridgeObjectRelease();
    outlined init with copy of SharedGlobalsProviding((uint64_t)v105, (uint64_t)v102);
    if (!v75)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v102);
      goto LABEL_10;
    }

    uint64_t v76 = __swift_project_boxed_opaque_existential_1(v102, v102[3]);
    uint64_t v77 = IntentNodeTraversable.intentNodes(forOntologyNode:)(*(void *)((char *)v76 + *(int *)(v68 + 48)), v68, v71);
    __chkstk_darwin();
    uint64_t v98 = v76;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( (void (*)(void *__return_ptr, uint64_t))closure #1 in PhoneCallNLv3Intent.contacts.getterpartial apply,  (uint64_t)v97,  v77,  (uint64_t)v101);
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();
    LOBYTE(v7__swift_destroy_boxed_opaque_existential_1(v0 + 7) = specialized Sequence.allSatisfy(_:)(v79, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v102);
    if ((v77 & 1) == 0) {
      goto LABEL_10;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v80 = type metadata accessor for Logger(0LL);
    uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = (void *)Logger.logObject.getter(v81);
    Swift::String v35 = static os_log_type_t.debug.getter(v17, v82);
    if (os_log_type_enabled((os_log_t)v17, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      uint64_t v37 = "#ContactResolution server has already expanded contacts into the SK intent. bypassing contact resolution";
      goto LABEL_84;
    }

    goto LABEL_85;
  }

  if (v25 == 2) {
    goto LABEL_50;
  }
  if (v100) {
    uint64_t v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2LL, v23);
  }
  else {
    uint64_t v41 = *(id *)(v23 + 48);
  }
  BOOL v42 = v41;
  INPerson.hasHandleValue.getter();
  uint64_t v44 = v43;

  if ((v44 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 3) {
    goto LABEL_50;
  }
  if (v100) {
    os_log_type_t v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3LL, v23);
  }
  else {
    os_log_type_t v45 = *(id *)(v23 + 56);
  }
  uint64_t v46 = v45;
  INPerson.hasHandleValue.getter();
  id v48 = v47;

  if ((v48 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 4) {
    goto LABEL_50;
  }
  if (v100) {
    uint64_t v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4LL, v23);
  }
  else {
    uint64_t v49 = *(id *)(v23 + 64);
  }
  uint64_t v50 = v49;
  INPerson.hasHandleValue.getter();
  os_log_type_t v52 = v51;

  if ((v52 & 1) == 0) {
    goto LABEL_54;
  }
  if (v25 == 5) {
    goto LABEL_50;
  }
  BOOL v53 = 9LL;
  while (1)
  {
    uint64_t result = v100
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v53 - 4, v23)
           : *(id *)(v23 + 8 * v53);
    uint64_t v55 = result;
    uint64_t v56 = v53 - 3;
    if (__OFADD__(v53 - 4, 1LL)) {
      break;
    }
    INPerson.hasHandleValue.getter();
    uint64_t v58 = v57;

    if ((v58 & 1) == 0) {
      goto LABEL_54;
    }
    ++v53;
    if (v56 == v25) {
      goto LABEL_50;
    }
  }

  __break(1u);
  return result;
}

      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + ++*(void *)(v0 + 16) = 0u;
      return result;
    }
  }

  if ((*(_BYTE *)(v3 + 32) & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)(v3 + 24);
LABEL_16:
  *(void *)(a3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for Double;
  *(void *)a3 = v8;
  return result;
}

  __swift_storeEnumTagSinglePayload((uint64_t)v9, v17, 1LL, v16);
  char v25 = PhoneCallInvite.Builder.withInviteType(_:)((uint64_t)v9);
  swift_release(v14);
  outlined destroy of UUID?((uint64_t)v9, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 176LL))(a4);
  uint64_t v27 = swift_release(v25);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 184LL))(v27);
  swift_release(v26);
  uint64_t result = swift_release(*a1);
  *a1 = v28;
  return result;
}

    char v25 = *(void **)(v0 + 64);
    uint64_t v26 = v25[5];
    uint64_t v27 = v25[6];
    uint64_t v28 = (os_log_s *)OUTLINED_FUNCTION_17_25(v25 + 2);
    uint64_t v29 = (*(uint64_t (**)(unint64_t, id, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))( v3,  v42,  v25 + 7,  v14,  v13,  v26,  v27);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    unint64_t v30 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
    uint64_t v31 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v28, v31))
    {
      uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v32 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v28,  v31,  "#IncomingCallFollowUpFlow: Offer prompt. IncomingCallFlow is still ongoing.",  v32);
      OUTLINED_FUNCTION_0_2((uint64_t)v32);
    }

    uint64_t v33 = *(void *)(v0 + 64);

    uint64_t v34 = (void *)swift_allocObject(&unk_4029F8, 48LL, 7LL);
    v34[2] = v33;
    v34[3] = v3;
    v34[4] = v43;
    v34[5] = v42;
    OUTLINED_FUNCTION_95_1();
    Swift::String v35 = v43;
    uint64_t v36 = v42;
    swift_retain();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)( v29,  partial apply for closure #1 in IncomingCallFollowUpFlow.execute(),  v34);
    OUTLINED_FUNCTION_38_1();
    swift_release(v29);

LABEL_24:
    OUTLINED_FUNCTION_76();
LABEL_25:
    OUTLINED_FUNCTION_25_33();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (v2 >> 62 == 1)
  {
    uint64_t v8 = (os_log_s *)one-time initialization token for siriPhone;
    swift_retain();
    if (v8 != (os_log_s *)-1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    char v9 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v9, (uint64_t)static Logger.siriPhone);
    uint64_t v10 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_5(v10))
    {
      uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v11 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v8, v1, "#IncomingCallFollowUpFlow: Executing next RCHFlow.", v11);
      OUTLINED_FUNCTION_0_2((uint64_t)v11);
    }

    static ExecuteResponse.complete(next:)(v3 & 0x3FFFFFFFFFFFFFFFLL);
    OUTLINED_FUNCTION_25_33();
    goto LABEL_25;
  }

  static ExecuteResponse.complete()(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

  __break(1u);
  return result;
}

  __chkstk_darwin();
  v88[2] = a1;
  specialized Sequence.compactMap<A>(_:)( (void *(*)(uint64_t *__return_ptr, uint64_t *))closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply,  (uint64_t)v88,  (unint64_t)v28);
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  swift_release(v12);

  return v44;
}

  static ActionForInput.handle()(v29);
  uint64_t v36 = static ActionForInput.== infix(_:_:)(v12, v10);
  uint64_t v37 = v68;
  uint64_t v38 = *(void (**)(void (*)(void), uint64_t))(v68 + 8);
  OUTLINED_FUNCTION_37_23((uint64_t)v10);
  uint64_t v39 = *(uint64_t (**)(uint64_t, void (*)(void), uint64_t))(v37 + 16);
  os_log_type_t v40 = v69;
  uint64_t v41 = v39(v69, v12, v7);
  if ((v36 & 1) != 0)
  {
    OUTLINED_FUNCTION_37_23(v40);
  }

  else
  {
    static ActionForInput.cancel()(v41);
    BOOL v42 = static ActionForInput.== infix(_:_:)(v40, v10);
    OUTLINED_FUNCTION_37_23((uint64_t)v10);
    uint64_t v43 = OUTLINED_FUNCTION_37_23(v40);
    if ((v42 & 1) == 0)
    {
      uint64_t v51 = 0;
      goto LABEL_19;
    }
  }

  uint64_t v44 = type metadata accessor for Input(255LL);
  os_log_type_t v45 = v71;
  uint64_t v46 = OUTLINED_FUNCTION_1_27(0LL, v44, v71, (uint64_t)" previous ");
  uint64_t v47 = swift_allocBox(v46);
  uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16LL))(v48, v72, v44);
  ((void (*)(uint64_t))v23)(v49);
  uint64_t v50 = v67;
  *uint64_t v67 = v47;
  swift_storeEnumTagMultiPayload(v50, v45, 2LL);
  OUTLINED_FUNCTION_54_20();
  uint64_t v51 = 1;
LABEL_19:
  os_log_type_t v52 = (void *)v70;
  Logger.logObject.getter(v43);
  BOOL v53 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_63(v53))
  {
    uint64_t v54 = v12;
    uint64_t v55 = v7;
    uint64_t v56 = OUTLINED_FUNCTION_7_0(18LL);
    id v57 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v74 = v57;
    *(_DWORD *)uint64_t v56 = 136315394;
    uint64_t v73 = OUTLINED_FUNCTION_42_24();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v56 + 4);
    *(_WORD *)(v56 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1024;
    LODWORD(v7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, (char *)&v73 + 4, v56 + 14);
    OUTLINED_FUNCTION_90_14();
    _os_log_impl(v58, v59, v60, v61, v62, 0x12u);
    OUTLINED_FUNCTION_48_13();
    OUTLINED_FUNCTION_0_2(v57);
    OUTLINED_FUNCTION_0_2(v56);

    uint64_t v63 = v54;
    uint64_t v64 = v55;
  }

  else
  {

    uint64_t v63 = v12;
    uint64_t v64 = v7;
  }

  v38(v63, v64);
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_6();
}

INPerson __swiftcall SiriPhoneContact.toINPerson()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin(v4);
  OUTLINED_FUNCTION_11_0();
  uint64_t v5 = OUTLINED_FUNCTION_30_12();
  __chkstk_darwin(v5);
  OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 248))(v3, v2);
  if (v6)
  {
    String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_62();
  }

  uint64_t v7 = (char *)sub_46958 + 4 * byte_323290[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 296))(v3, v2)];
  __asm { BR              X10 }

  return result;
}

id sub_46958()
{
  *(void *)(v0 + 56) = v5;
  *(void *)(v0 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = @nonobjc INPersonHandle.init(value:type:label:)(0LL, 0LL, 0LL, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 152))(v3, v1);
  if (v8)
  {
    uint64_t v9 = v7;
    OUTLINED_FUNCTION_15_23();
    if (v10)
    {
      OUTLINED_FUNCTION_41_10();
      OUTLINED_FUNCTION_34_14();
      @nonobjc INPersonHandle.init(value:type:label:emergencyType:)(v9, v4, 2LL, v5, 1LL);
      OUTLINED_FUNCTION_38_13();
      *(void *)(v0 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v4;
      uint64_t v12 = v3;
      goto LABEL_9;
    }

    OUTLINED_FUNCTION_62();
  }

  uint64_t v12 = v3;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 176))(v3, v1);
  if (v13)
  {
    uint64_t v14 = v11;
    OUTLINED_FUNCTION_15_23();
    if (v15)
    {
      OUTLINED_FUNCTION_41_10();
      OUTLINED_FUNCTION_34_14();
      @nonobjc INPersonHandle.init(value:type:label:)(v14, v4, 1LL, v5);
      OUTLINED_FUNCTION_38_13();
      *(void *)(v0 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v4;
    }

    else
    {
      uint64_t v11 = OUTLINED_FUNCTION_62();
    }
  }

uint64_t protocol witness for SiriPhoneContact.handleLabel.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 480LL))();
}

void PhoneCallNLv4Contact.handleLabel.getter()
{
}

void PhoneCallNLv4Contact.emergencyLocationType.getter()
{
}

id @nonobjc INPersonHandle.init(value:type:label:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  if (a2)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v9 = 0LL;
  }

  id v10 = [v5 initWithValue:v9 type:a3 label:a4];

  return v10;
}

uint64_t protocol witness for SiriPhoneContact.emailAddress.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 288LL))();
}

void PhoneCallNLv4Contact.emailAddress.getter()
{
}

uint64_t protocol witness for SiriPhoneContact.relationship.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 432LL))();
}

void PhoneCallNLv4Contact.relationship.getter()
{
}

uint64_t protocol witness for SiriPhoneContact.contactName.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 336LL))();
}

void PhoneCallNLv4Contact.contactName.getter()
{
}

uint64_t protocol witness for SiriPhoneContact.contactId.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 264LL))();
}

void PhoneCallNLv4Contact.contactId.getter()
{
}

uint64_t protocol witness for SiriPhoneContact.isMe.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 312LL))() & 1;
}

void PhoneCallNLv4Contact.isMe.getter()
{
}

uint64_t CallingIntentNeedsValueFlowStrategy.makePromptForNeedsValueOutput(app:intent:parameterName:intentResolutionResult:)()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = OUTLINED_FUNCTION_139_1();
  uint64_t v3 = OUTLINED_FUNCTION_120_0();
  uint64_t v5 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness(v3, v4, v2) + 8) + 16LL);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v7 = swift_checkMetadataState(0LL, v2);
  uint64_t v8 = v6(v7, v5);
  type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_44_2(v1, 1LL);
  if (!App.isFirstParty()())
  {
    uint64_t v9 = v0[24];
    uint64_t v33 = v0[22];
    id v10 = (void *)v0[12];
    uint64_t v31 = v0[8];
    uint64_t v32 = v0[23];
    uint64_t v11 = v10[41];
    uint64_t v12 = v10[42];
    __swift_project_boxed_opaque_existential_1(v10 + 38, v11);
    (*(void (**)(void))(*v10 + 208LL))();
    uint64_t v14 = v0[5];
    uint64_t v13 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v14);
    dispatch thunk of DeviceState.siriLocale.getter(v14, v13);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16))(v31, v9, v11, v12);
    uint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v9, v33);
    OUTLINED_FUNCTION_62_1();
    uint64_t v18 = v0[25];
    if (v17)
    {
      swift_bridgeObjectRetain();
      SpeakableString.init(print:speak:)(v15, v17, 0LL, 0LL);
      OUTLINED_FUNCTION_44_2(v18, 0LL);
      uint64_t v19 = OUTLINED_FUNCTION_62();
    }

    else
    {
      uint64_t v19 = OUTLINED_FUNCTION_44_2(v0[25], 1LL);
    }

    OUTLINED_FUNCTION_71_14(v19, &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v20 = OUTLINED_FUNCTION_9_0();
    outlined init with take of SpeakableString?(v20, v21);
  }

  uint64_t v22 = v0[12];
  uint64_t v23 = *(void **)(v22 + 112);
  double v24 = (double)OUTLINED_FUNCTION_72_20();
  char v25 = OUTLINED_FUNCTION_145_5();
  uint64_t v26 = *(unsigned __int8 *)(v22 + direct field offset for CallingIntentNeedsValueFlowStrategy.isUnsupportedFollowUp);
  uint64_t v27 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for StartCallCATsSimple + *v23 + 656));
  uint64_t v34 = v28;
  uint64_t v29 = (void *)swift_task_alloc(v27);
  v0[27] = v29;
  void *v29 = v0;
  v29[1] = CallingIntentNeedsValueFlowStrategy.makePromptForNeedsValueOutput(app:intent:parameterName:intentResolutionResult:);
  return v34(v0[26], v8 == 2, *(void *)&v24, 0LL, v25 & 1, v26);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  uint64_t v4 = v2[27];
  *uint64_t v5 = *v3;
  v2[28] = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    v2[29] = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v6, v7, v8);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 248));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 112);

  uint64_t v3 = OUTLINED_FUNCTION_85_5();
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_11_20(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_71_14(v5, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_9_2();
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  uint64_t v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v6();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v18;
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = specialized static PhoneCallNLContextProvider.makeNeedsValueContextFor(parameter:)( *(void *)(v0 + 80),  *(void **)(v0 + 88));
  uint64_t v8 = static DialogPhase.clarification.getter(v7);
  OUTLINED_FUNCTION_126_6( v8,  (uint64_t)closure #1 in CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v2, v4);
  __swift_storeEnumTagSinglePayload(v5, 0LL, 1LL, v4);
  OutputGenerationManifest.nlContextUpdate.setter(v5);
  __swift_project_boxed_opaque_existential_1((void *)(v6 + 184), *(void *)(v6 + 208));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  id v10 = (__n128 *)OUTLINED_FUNCTION_8_2(v9, 40LL);
  OUTLINED_FUNCTION_14_31(v10, v11, v12, v13, (__n128)xmmword_31FE60);
  *(void *)(v0 + 24outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v18;
  uint64_t v14 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  uint64_t v15 = v1;
  uint64_t v16 = (void *)swift_task_alloc(v14);
  *(void *)(v0 + 248) = v16;
  *uint64_t v16 = v0;
  v16[1] = CallingIntentNeedsValueFlowStrategy.makePromptForNeedsValueOutput(app:intent:parameterName:intentResolutionResult:);
  OUTLINED_FUNCTION_80_9();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)();
}

uint64_t CallingIntentNeedsValueFlowStrategy.makePromptForNeedsValueOutput(app:intent:parameterName:intentResolutionResult:)( uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t CallingIntentNeedsValueFlowStrategy.makePromptForNeedsValueOutput(app:intent:parameterName:intentResolutionResult:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v6[13] = *v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v6[14] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v6[15] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v6[16] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[17] = v10;
  v6[18] = OUTLINED_FUNCTION_23(v10);
  uint64_t v11 = type metadata accessor for NLContextUpdate(0LL);
  v6[19] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[20] = v12;
  v6[21] = OUTLINED_FUNCTION_23(v12);
  uint64_t v13 = type metadata accessor for Locale(0LL);
  v6[22] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v6[23] = v14;
  _BYTE v6[24] = OUTLINED_FUNCTION_23(v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v6[25] = OUTLINED_FUNCTION_28();
  v6[26] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentNeedsValueFlowStrategy.startingOver.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + direct field offset for CallingIntentNeedsValueFlowStrategy.startingOver);
  OUTLINED_FUNCTION_25_0( v0 + direct field offset for CallingIntentNeedsValueFlowStrategy.startingOver,  (uint64_t)v3,  0LL);
  return *v1;
}

  ;
}

unint64_t OUTLINED_FUNCTION_96_0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_13_11()
{
  return outlined release of String?(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_72_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

BOOL OUTLINED_FUNCTION_29_5(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return type metadata accessor for AppInfoBuilder();
}

void OUTLINED_FUNCTION_96_1()
{
}

uint64_t OUTLINED_FUNCTION_6_10(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return 0x6565746E65766573LL;
}

  ;
}

__n128 *OUTLINED_FUNCTION_141(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "callCapability");
  result[2].n128_u8[15] = -18;
  return result;
}

uint64_t OUTLINED_FUNCTION_96_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  *(_BYTE *)(a1 + 48) = v4;
  uint64_t v6 = *(unsigned int *)(a2 + 4);
  *(void *)(v5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  v3[1] = a3;
  return swift_task_alloc(v6);
}

  ;
}

uint64_t OUTLINED_FUNCTION_96_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(result + 48) = v2;
  *(void *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  strcpy((char *)(result + 80), "isLastWindow");
  *(_BYTE *)(result + 9__swift_destroy_boxed_opaque_existential_1(v0 + 3) = 0;
  *(_WORD *)(result + 9__swift_destroy_boxed_opaque_existential_1(v0 + 4) = -5120;
  return result;
}

  ;
}

  ;
}

void *OUTLINED_FUNCTION_96_8()
{
  *uint64_t v0 = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_96_9()
{
  return static CATOption.defaultMode.getter();
}

  ;
}

uint64_t OUTLINED_FUNCTION_96_11@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 304), *(void *)(v2 - 296));
}

uint64_t type metadata accessor for StartCallPromptForContactsParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for StartCallPromptForContactsParameters,  (uint64_t)&nominal type descriptor for StartCallPromptForContactsParameters);
}

uint64_t CallingIntentNeedsValueFlowStrategy.rePromptCount.getter()
{
  uint64_t v1 = v0 + direct field offset for CallingIntentNeedsValueFlowStrategy.rePromptCount;
  OUTLINED_FUNCTION_25_0( v0 + direct field offset for CallingIntentNeedsValueFlowStrategy.rePromptCount,  (uint64_t)v3,  0LL);
  return *(void *)v1;
}

void StartCallPromptForContactsParameters.asKeyValuePairs()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 272LL);
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_323F80;
  OUTLINED_FUNCTION_43_6(v3);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_34_5(v1);
  if (v6)
  {
    OUTLINED_FUNCTION_150(v5, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_162_0();
  }

  else
  {
    *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
    uint64_t v7 = OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_61_5((uint64_t)v7);
  }

  OUTLINED_FUNCTION_37_0();
  *(void *)(v3 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v8;
  *(void *)(v3 + 88) = v9;
  *(_BYTE *)(v3 + 96) = *(_BYTE *)(v0
                                 + *(int *)(type metadata accessor for StartCallPromptForContactsParameters(0LL) + 20));
  *(void *)(v3 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = &type metadata for Bool;
  *(void *)(v3 + 128) = 0xD000000000000015LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v3 + 136) = v12;
  *(_BYTE *)(v3 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(_BYTE *)(v0 + v10[6]);
  *(void *)(v3 + 168) = v11;
  strcpy((char *)(v3 + 176), "rePromptCount");
  *(_WORD *)(v3 + 19outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = -4864;
  uint64_t v13 = (uint64_t *)(v0 + v10[7]);
  if ((v13[1] & 1) != 0)
  {
    uint64_t v14 = 0LL;
    *(void *)(v3 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0LL;
    *(void *)(v3 + 208) = 0LL;
    uint64_t v15 = 0LL;
  }

  else
  {
    uint64_t v15 = *v13;
    uint64_t v14 = &type metadata for Double;
  }

  *(void *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  *(void *)(v3 + 2++*(void *)(v0 + 16) = v14;
  strcpy((char *)(v3 + 224), "startingOver");
  *(_BYTE *)(v3 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 0;
  *(_WORD *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 38) = -5120;
  char v16 = *(_BYTE *)(v0 + v10[8]);
  *(void *)(v3 + 26__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v11;
  *(_BYTE *)(v3 + 24outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v16;
  OUTLINED_FUNCTION_16();
}

void destroy for StartCallPromptForContactsParameters(uint64_t a1)
{
  if (OUTLINED_FUNCTION_14_25(a1))
  {
    OUTLINED_FUNCTION_2();
  }

  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_154(v2, v3, v4);
  }

uint64_t OUTLINED_FUNCTION_145@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return outlined init with take of SpeakableString?(a1, a2);
}

uint64_t OUTLINED_FUNCTION_146_0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return specialized closure #1 in static PhoneCallFlowFactory.makeAppResolutionFlowBeforeNextResolveFlowProducer<A>(delegate:app:sharedGlobal:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  return 0x662079746E657774LL;
}

uint64_t OUTLINED_FUNCTION_146_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_146_2@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = (v2 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  *(void *)(v3 + 2++*(void *)(v0 + 16) = a1;
  *(void *)(v3 + 22__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0x656369766564LL;
  *(void *)(v3 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_149(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

void OUTLINED_FUNCTION_146_3(uint64_t a1@<X8>)
{
  *(_BYTE *)(v1 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2 & 1;
  *(void *)(v1 + 2++*(void *)(v0 + 16) = a1;
  *(void *)(v1 + 22__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0x656D614E707061LL;
  *(void *)(v1 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE700000000000000LL;
}

uint64_t OUTLINED_FUNCTION_146_4(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_146_5()
{
  return *(void *)(v0 + 512);
}

uint64_t OUTLINED_FUNCTION_146_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v6 - 28outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 280, v4, v5, a4);
}

  ;
}

uint64_t OUTLINED_FUNCTION_146_8()
{
  return swift_release(*(void *)(v0 + 1816));
}

void OUTLINED_FUNCTION_146_9()
{
}

void PhoneCallNLConstants.canonicalName.getter(unsigned __int8 a1)
{
  Swift::String v2 = String.firstLetterCapitalized()();
  OUTLINED_FUNCTION_39();
  String.append(_:)(v2);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_24_0();
}

uint64_t PhoneCallNLConstants.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_47D54 + 4 * byte_324694[a1]))( 0x6E69616D6F64LL,  0xE600000000000000LL);
}

uint64_t sub_47D54()
{
  return 0x6C6143656E6F6870LL;
}

uint64_t sub_47E10()
{
  return 0x6D754E656E6F6870LL;
}

uint64_t sub_47E30()
{
  return 0x6464416C69616D65LL;
}

uint64_t sub_47E50()
{
  return 0x75466E6F73726570LL;
}

uint64_t sub_47E74()
{
  return 0x69466E6F73726570LL;
}

uint64_t sub_47E98()
{
  return 0x614C6E6F73726570LL;
}

uint64_t sub_47EC0()
{
  return 0x54746361746E6F63LL;
}

uint64_t sub_47EE0()
{
  return 0x69614D6563696F76LL;
}

uint64_t String.firstLetterCapitalized()(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  OUTLINED_FUNCTION_4_42();
  swift_bridgeObjectRetain();
  specialized Collection.dropFirst(_:)(1LL);
  uint64_t v13 = v5;
  uint64_t v14 = v3;
  v12[0] = v6;
  v12[1] = v7;
  v12[2] = v8;
  void v12[3] = v9;
  unint64_t v10 = lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v12, &type metadata for Substring, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

Swift::String __swiftcall String.firstLetterCapitalized()()
{
  uint64_t v2 = String.firstLetterCapitalized()(v0, v1, (uint64_t (*)(void))&Substring.uppercased());
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

void specialized Collection.prefix(_:)(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }

  else
  {
    OUTLINED_FUNCTION_10_35();
    if ((v4 & 0x2000000000000000LL) == 0) {
      uint64_t v5 = v1;
    }
    uint64_t v6 = 7LL;
    if (((v4 >> 60) & ((v1 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v6 = 11LL;
    }
    uint64_t v7 = v6 | (v5 << 16);
    uint64_t v8 = OUTLINED_FUNCTION_1_45(v2, v3);
    if ((v9 & 1) != 0) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = v8;
    }
    OUTLINED_FUNCTION_9_38(15LL, v10);
    OUTLINED_FUNCTION_0_43();
    OUTLINED_FUNCTION_5_39();
    OUTLINED_FUNCTION_16();
  }

uint64_t specialized Collection.prefix(_:)(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  unint64_t v3 = *(void *)(a2 + 16);
  Swift::String result = specialized Array.index(_:offsetBy:limitedBy:)(0LL, result, v3);
  if ((v4 & 1) != 0) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000LL) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

void specialized Collection.dropFirst(_:)(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }

  else
  {
    OUTLINED_FUNCTION_10_35();
    if ((v4 & 0x2000000000000000LL) != 0) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = v1 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v7 = 7LL;
    if (((v4 >> 60) & ((v1 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v7 = 11LL;
    }
    uint64_t v8 = v7 | (v6 << 16);
    unint64_t v9 = OUTLINED_FUNCTION_1_45(v2, v3);
    if ((v10 & 1) != 0) {
      unint64_t v9 = v8;
    }
    if (4 * v6 >= v9 >> 14)
    {
      OUTLINED_FUNCTION_9_38(v9, v8);
      OUTLINED_FUNCTION_0_43();
      OUTLINED_FUNCTION_5_39();
      OUTLINED_FUNCTION_16();
      return;
    }
  }

  __break(1u);
}

unint64_t lazy protocol witness table accessor for type Substring and conformance Substring()
{
  unint64_t result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }

  return result;
}

uint64_t closure #1 in CallHistoryPromptDialogProvider.getAceCommandForVoicemail(searchCallHistorySharedGlobals:isLastPage:)()
{
  return OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
}

uint64_t AppResolutionBeforeResolveFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t AppResolutionBeforeResolveFlow.deinit()
{
  swift_release(*(void *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 32));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 72));
  outlined destroy of MainFlow( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin30AppResolutionBeforeResolveFlow_state,  type metadata accessor for AppResolutionBeforeResolveFlow.State);
  return v0;
}

uint64_t ContactNeedsValueGuardFlow.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_deallocClassInstance( v4,  *(unsigned int *)(*(void *)v4 + 48LL),  *(unsigned __int16 *)(*(void *)v4 + 52LL));
}

void ContactNeedsValueGuardFlow.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for ContactNeedsValueGuardFlow.FlowState( 0LL,  *(void *)(*(void *)v4 + 80LL),  *(void *)(*(void *)v4 + 88LL),  a4);
  OUTLINED_FUNCTION_2_0(v5);
  swift_release(*(void *)(v4 + *(void *)(*(void *)v4 + 104LL)));
  __swift_destroy_boxed_opaque_existential_1((void *)(v4 + *(void *)(*(void *)v4 + 112LL)));
  OUTLINED_FUNCTION_2();
}

uint64_t CallingIntentNeedsValueFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

void CallingIntentBaseFlowStrategy.deinit()
{
  uint64_t v1 = type metadata accessor for OutputGenerationManifest(0LL);
  OUTLINED_FUNCTION_2_0(v1);
  OUTLINED_FUNCTION_2();
}

uint64_t CallingIntentUnsupportedValueFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

void CallingIntentUnsupportedValueFlowStrategy.deinit()
{
}

uint64_t RedirectToServerFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 65LL, 7LL);
}

void *UsoEntity_common_Setting.nameIdentifiers.getter()
{
  unint64_t result = (void *)dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)( 1701667182LL,  0xE400000000000000LL);
  if (!result) {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t UsoVocIdentifier.init(usoIdentifier:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v78 = a4;
  uint64_t v80 = a2;
  uint64_t v5 = type metadata accessor for Optional(0LL, a2);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  uint64_t v68 = v6;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)v66 - v7;
  uint64_t v8 = type metadata accessor for UsoIdentifier.NluComponent(0LL);
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_11_0();
  uint64_t v70 = v10;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoIdentifier.NluComponent?, UsoIdentifier.NluComponent?));
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_11_0();
  uint64_t v75 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoIdentifier.NluComponent?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin(v13);
  OUTLINED_FUNCTION_10_1();
  uint64_t v72 = v14;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v66 - v17;
  __chkstk_darwin(v16);
  uint64_t v73 = (char *)v66 - v19;
  uint64_t v20 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  OUTLINED_FUNCTION_10_1();
  uint64_t v79 = v22;
  __chkstk_darwin(v23);
  char v25 = (char *)v66 - v24;
  uint64_t v26 = type metadata accessor for IdentifierAppBundle(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)v66 - v32;
  UsoIdentifier.appBundleSemantic.getter(v31);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))( v30,  enum case for IdentifierAppBundle.abSiriNL(_:),  v26);
  char v34 = static IdentifierAppBundle.== infix(_:_:)(v33, v30);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v27 + 8);
  v35(v30, v26);
  v35(v33, v26);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v81 = a1;
  uint64_t v37 = v36(v25, a1, v20);
  if ((v34 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_73((uint64_t)v25);
    uint64_t v44 = v79;
    uint64_t v46 = v80;
LABEL_12:
    OUTLINED_FUNCTION_6_89();
LABEL_13:
    OUTLINED_FUNCTION_11_73(v44);
LABEL_14:
    uint64_t v48 = v78;
LABEL_15:
    OUTLINED_FUNCTION_11_73(v81);
    uint64_t v49 = 1LL;
    return __swift_storeEnumTagSinglePayload(v48, v49, 1LL, v46);
  }

  v66[1] = v21;
  uint64_t v39 = v72;
  uint64_t v38 = (uint64_t)v73;
  UsoIdentifier.sourceComponent.getter(v37);
  uint64_t v40 = v76;
  uint64_t v41 = v77;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))( v18,  enum case for UsoIdentifier.NluComponent.spanMatchVocFile(_:),  v77);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 0LL, 1LL, v41);
  uint64_t v42 = v75;
  uint64_t v43 = v75 + *(int *)(v74 + 48);
  outlined init with copy of UsoIdentifier.NluComponent?(v38, v75);
  outlined init with copy of UsoIdentifier.NluComponent?((uint64_t)v18, v43);
  OUTLINED_FUNCTION_14_65(v42);
  if (v47)
  {
    outlined destroy of SpeakableString?( (uint64_t)v18,  &demangling cache variable for type metadata for UsoIdentifier.NluComponent?);
    outlined destroy of SpeakableString?( v38,  &demangling cache variable for type metadata for UsoIdentifier.NluComponent?);
    OUTLINED_FUNCTION_11_73((uint64_t)v25);
    OUTLINED_FUNCTION_14_65(v43);
    if (v47)
    {
      outlined destroy of SpeakableString?( v42,  &demangling cache variable for type metadata for UsoIdentifier.NluComponent?);
      uint64_t v44 = v79;
      uint64_t v45 = OUTLINED_FUNCTION_6_89();
      uint64_t v46 = v80;
      goto LABEL_18;
    }

    goto LABEL_11;
  }

  outlined init with copy of UsoIdentifier.NluComponent?(v42, v39);
  OUTLINED_FUNCTION_14_65(v43);
  if (v47)
  {
    outlined destroy of SpeakableString?( (uint64_t)v18,  &demangling cache variable for type metadata for UsoIdentifier.NluComponent?);
    outlined destroy of SpeakableString?( v38,  &demangling cache variable for type metadata for UsoIdentifier.NluComponent?);
    OUTLINED_FUNCTION_11_73((uint64_t)v25);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
LABEL_11:
    uint64_t v44 = v79;
    uint64_t v46 = v80;
    outlined destroy of SpeakableString?( v42,  &demangling cache variable for type metadata for (UsoIdentifier.NluComponent?, UsoIdentifier.NluComponent?));
    goto LABEL_12;
  }

  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
  v66[0] = (uint64_t)v25;
  uint64_t v52 = v70;
  v51(v70, v43, v41);
  lazy protocol witness table accessor for type UsoIdentifier.NluComponent and conformance UsoIdentifier.NluComponent();
  LODWORD(v7__swift_destroy_boxed_opaque_existential_1(v0 + 4) = dispatch thunk of static Equatable.== infix(_:_:)(v39, v52, v41);
  BOOL v53 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v53(v52, v41);
  OUTLINED_FUNCTION_90_4((uint64_t)v18);
  OUTLINED_FUNCTION_90_4(v38);
  OUTLINED_FUNCTION_11_73(v66[0]);
  v53(v39, v41);
  OUTLINED_FUNCTION_90_4(v42);
  uint64_t v44 = v79;
  uint64_t v45 = OUTLINED_FUNCTION_6_89();
  uint64_t v46 = v80;
  if ((v74 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_18:
  uint64_t v54 = UsoIdentifier.namespace.getter(v45);
  uint64_t v56 = v55;
  uint64_t v57 = v71;
  uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v46, v71);
  if (!v56)
  {
    OUTLINED_FUNCTION_16_51(v44);
    OUTLINED_FUNCTION_62();
    goto LABEL_14;
  }

  if (v54 == v58 && v56 == v59)
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_51(v44);
    uint64_t v62 = OUTLINED_FUNCTION_39();
  }

  else
  {
    char v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v58, v59, 0LL);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_51(v44);
    uint64_t v62 = OUTLINED_FUNCTION_39();
    if ((v61 & 1) == 0)
    {
      uint64_t v48 = v78;
      goto LABEL_15;
    }
  }

  uint64_t v63 = v81;
  uint64_t v64 = UsoIdentifier.value.getter(v62);
  uint64_t v65 = (uint64_t)v69;
  (*(void (**)(uint64_t))(v57 + 24))(v64);
  OUTLINED_FUNCTION_16_51(v63);
  if (__swift_getEnumTagSinglePayload(v65, 1LL, v46))
  {
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v65, v67);
    uint64_t v49 = 1LL;
    uint64_t v48 = v78;
  }

  else
  {
    uint64_t v48 = v78;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32LL))(v78, v65, v46);
    uint64_t v49 = 0LL;
  }

  return __swift_storeEnumTagSinglePayload(v48, v49, 1LL, v46);
}

uint64_t outlined init with copy of UsoIdentifier.NluComponent?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoIdentifier.NluComponent?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CallControlUsoIdentifiers.PhoneSetting( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF7) {
    return ((uint64_t (*)(void))((char *)&loc_48A70 + 4 * byte_339AEE[v4]))();
  }
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_48AA4 + 4 * byte_339AE9[v4]))();
}

uint64_t sub_48AA4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_48AAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x48AB4LL);
  }
  return result;
}

uint64_t sub_48AC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x48AC8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 8;
  return result;
}

uint64_t sub_48ACC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_48AD4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t lazy protocol witness table accessor for type UsoIdentifier.NluComponent and conformance UsoIdentifier.NluComponent()
{
  unint64_t result = lazy protocol witness table cache variable for type UsoIdentifier.NluComponent and conformance UsoIdentifier.NluComponent;
  if (!lazy protocol witness table cache variable for type UsoIdentifier.NluComponent and conformance UsoIdentifier.NluComponent)
  {
    uint64_t v1 = type metadata accessor for UsoIdentifier.NluComponent(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UsoIdentifier.NluComponent, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UsoIdentifier.NluComponent and conformance UsoIdentifier.NluComponent);
  }

  return result;
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::PhoneSetting_optional protocol witness for UsoVocIdentifier.init(rawValue:) in conformance CallControlUsoIdentifiers.PhoneSetting@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::PhoneSetting_optional *a2@<X8>)
{
  result.INCallRecordTypeOptions value = CallControlUsoIdentifiers.PhoneSetting.init(rawValue:)(*(Swift::String *)&a1).value;
  a2->INCallRecordTypeOptions value = result.value;
  return result;
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::PhoneSetting_optional __swiftcall CallControlUsoIdentifiers.PhoneSetting.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of CallControlUsoIdentifiers.PhoneSetting.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void specialized Set._Variant.insert(_:)()
{
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_12_20(*(void *)(*v1 + 40), v6);
  uint64_t v7 = swift_bridgeObjectRetain(v5);
  OUTLINED_FUNCTION_20_9(v7);
  Swift::Int v8 = OUTLINED_FUNCTION_11_17();
  uint64_t v9 = -1LL << *(_BYTE *)(v5 + 32);
  unint64_t v10 = v8 & ~v9;
  OUTLINED_FUNCTION_36_4();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease(v5);
    char v21 = OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_11_19();
    specialized _NativeSet.insertNew(_:at:isUnique:)(v4, v3, v10, v21);
    OUTLINED_FUNCTION_10_19(v22);
    *uint64_t v0 = v4;
    v0[1] = v3;
    goto LABEL_17;
  }

  uint64_t v12 = *(void *)(v5 + 48);
  uint64_t v13 = (uint64_t *)(v12 + 16 * v10);
  uint64_t v14 = v13[1];
  BOOL v15 = *v13 == v4 && v14 == v3;
  if (!v15 && (OUTLINED_FUNCTION_7_22(*v13, v14) & 1) == 0)
  {
    uint64_t v16 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v16;
      OUTLINED_FUNCTION_36_4();
      if ((v17 & 1) == 0) {
        goto LABEL_16;
      }
      uint64_t v18 = (uint64_t *)(v12 + 16 * v10);
      uint64_t v19 = v18[1];
      BOOL v20 = *v18 == v4 && v19 == v3;
    }

    while (!v20 && (OUTLINED_FUNCTION_7_22(*v18, v19) & 1) == 0);
  }

  OUTLINED_FUNCTION_50();
  swift_bridgeObjectRelease(v5);
  OUTLINED_FUNCTION_27_11((void *)(*(void *)(*(void *)v2 + 48LL) + 16 * v10));
LABEL_17:
  OUTLINED_FUNCTION_33_1();
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  OUTLINED_FUNCTION_38_10();
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_12_20(*(void *)(*v1 + 40), v6);
  if (v3)
  {
    OUTLINED_FUNCTION_45_4();
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_20_9(v7);
    OUTLINED_FUNCTION_50();
  }

  else
  {
    OUTLINED_FUNCTION_47_5();
    swift_bridgeObjectRetain();
  }

  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_32_9();
  unint64_t v10 = v9 & ~v8;
  if (((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease(v5);
    uint64_t v16 = OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_11_19();
    specialized _NativeSet.insertNew(_:at:isUnique:)(v4, v3, v10, v16);
    OUTLINED_FUNCTION_10_19(v17);
    *uint64_t v0 = v4;
    v0[1] = v3;
    goto LABEL_19;
  }

  char v11 = ~v8;
  uint64_t v12 = *(void *)(v5 + 48);
  while (1)
  {
    uint64_t v13 = (uint64_t *)(v12 + 16 * v10);
    uint64_t v14 = v13[1];
    if (v14) {
      break;
    }
    if (!v3) {
      goto LABEL_18;
    }
LABEL_15:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
      goto LABEL_16;
    }
  }

  if (!v3) {
    goto LABEL_15;
  }
  BOOL v15 = *v13 == v4 && v14 == v3;
  if (!v15 && (OUTLINED_FUNCTION_7_22(*v13, v14) & 1) == 0) {
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_50();
LABEL_18:
  swift_bridgeObjectRelease(v5);
  OUTLINED_FUNCTION_27_11((void *)(*(void *)(*(void *)v2 + 48LL) + 16 * v10));
LABEL_19:
  OUTLINED_FUNCTION_33_1();
}

uint64_t specialized Set._Variant.insert(_:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)(v21, *(void *)(*v2 + 40LL));
  BOOL v20 = v2;
  if ((_BYTE)a2)
  {
    else {
      uint64_t v6 = 0x4E646E41646C6F68LL;
    }
    else {
      unint64_t v7 = 0xEE006C6C61437765LL;
    }
  }

  else
  {
    unint64_t v7 = 0xE300000000000000LL;
    uint64_t v6 = 6579297LL;
  }

  swift_bridgeObjectRetain();
  String.hash(into:)(v21, v6, v7);
  swift_bridgeObjectRelease();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1LL << *(_BYTE *)(v5 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      if (*(_BYTE *)(*(void *)(v5 + 48) + v10))
      {
        if (*(_BYTE *)(*(void *)(v5 + 48) + v10) == 1)
        {
          uint64_t v12 = 0x654E646E41646E65LL;
          unint64_t v13 = 0xED00006C6C614377LL;
        }

        else
        {
          uint64_t v12 = 0x4E646E41646C6F68LL;
          unint64_t v13 = 0xEE006C6C61437765LL;
        }
      }

      else
      {
        unint64_t v13 = 0xE300000000000000LL;
        uint64_t v12 = 6579297LL;
      }

      if ((_BYTE)a2)
      {
        uint64_t v14 = a2 == 1 ? 0x654E646E41646E65LL : 0x4E646E41646C6F68LL;
        unint64_t v15 = a2 == 1 ? 0xED00006C6C614377LL : 0xEE006C6C61437765LL;
      }

      else
      {
        unint64_t v15 = 0xE300000000000000LL;
        uint64_t v14 = 6579297LL;
      }

      if (v12 == v14 && v13 == v15) {
        break;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v14, v15, 0LL);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0) {
        goto LABEL_32;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        goto LABEL_30;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
    uint64_t result = 0LL;
    LOBYTE(a__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(*(void *)(*v20 + 48LL) + v10);
  }

  else
  {
LABEL_30:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v20);
    v21[0] = *v20;
    *BOOL v20 = 0x8000000000000000LL;
    specialized _NativeSet.insertNew(_:at:isUnique:)(a2, v10, isUniquelyReferenced_nonNull_native);
    *BOOL v20 = v21[0];
    swift_bridgeObjectRelease();
    uint64_t result = 1LL;
  }

  *a1 = a2;
  return result;
}

uint64_t specialized Set._Variant.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v39 = v7 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)
                  - 8);
  __chkstk_darwin();
  uint64_t v42 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  unint64_t v15 = (char *)&v35 - v14;
  __chkstk_darwin();
  uint64_t v36 = (char *)&v35 - v16;
  uint64_t v37 = v2;
  uint64_t v17 = *v2;
  Hasher.init(_seed:)(v47, *(void *)(*v2 + 40));
  swift_bridgeObjectRetain();
  specialized Optional<A>.hash(into:)((uint64_t)v47);
  Hasher._finalize()();
  OUTLINED_FUNCTION_32_9();
  unint64_t v20 = v19 & ~v18;
  uint64_t v46 = v17 + 56;
  if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v20) & 1) == 0)
  {
    OUTLINED_FUNCTION_129();
LABEL_16:
    uint64_t v32 = (uint64_t)v36;
    uint64_t v31 = v37;
    char v33 = OUTLINED_FUNCTION_26_10();
    outlined init with copy of Result<TemplatingResult, Error>( a2,  v32,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    v47[0] = *v31;
    *uint64_t v31 = 0x8000000000000000LL;
    specialized _NativeSet.insertNew(_:at:isUnique:)(v32, v20, v33);
    OUTLINED_FUNCTION_10_19(v47[0]);
    outlined init with take of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?(a2, a1);
    return 1LL;
  }

  uint64_t v35 = a1;
  uint64_t v44 = ~v18;
  uint64_t v45 = *(void *)(v12 + 72);
  uint64_t v21 = (uint64_t)v42;
  uint64_t v38 = v17;
  while (1)
  {
    uint64_t v22 = *(void *)(v17 + 48);
    unint64_t v43 = v45 * v20;
    OUTLINED_FUNCTION_16_10(v22 + v45 * v20, (uint64_t)v15);
    uint64_t v23 = v11 + *(int *)(v8 + 48);
    OUTLINED_FUNCTION_16_10((uint64_t)v15, v11);
    OUTLINED_FUNCTION_16_10(a2, v23);
    OUTLINED_FUNCTION_34_5(v11);
    if (v24) {
      break;
    }
    OUTLINED_FUNCTION_16_10(v11, v21);
    OUTLINED_FUNCTION_34_5(v23);
    if (v24)
    {
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v21, v5);
LABEL_11:
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v11,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
      OUTLINED_FUNCTION_35_6();
      goto LABEL_13;
    }

    uint64_t v25 = v41;
    uint64_t v26 = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v39, v23, v5);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
    int v40 = dispatch thunk of static Equatable.== infix(_:_:)(v42, v26, v5);
    uint64_t v27 = v8;
    uint64_t v28 = a2;
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    uint64_t v17 = v38;
    uint64_t v30 = v26;
    uint64_t v21 = (uint64_t)v42;
    v29(v30, v5);
    v29(v21, v5);
    a2 = v28;
    uint64_t v8 = v27;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v11,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    OUTLINED_FUNCTION_35_6();
    if ((v40 & 1) != 0) {
      goto LABEL_17;
    }
LABEL_13:
    unint64_t v20 = (v20 + 1) & v44;
    if (((*(void *)(v46 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v20) & 1) == 0)
    {
      OUTLINED_FUNCTION_129();
      a1 = v35;
      goto LABEL_16;
    }
  }

  OUTLINED_FUNCTION_34_5(v23);
  if (!v24) {
    goto LABEL_11;
  }
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v11,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v15,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_17:
  OUTLINED_FUNCTION_129();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( a2,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  outlined init with copy of Result<TemplatingResult, Error>( *(void *)(*v37 + 48) + v43,  v35,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  return 0LL;
}

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)( uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if ((a4 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }

  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)specialized _NativeSet.copy()();
      goto LABEL_22;
    }

    specialized _NativeSet.copyAndResize(capacity:)(v9 + 1);
  }

  uint64_t v11 = *v4;
  Hasher.init(_seed:)(v27, *(void *)(*v4 + 40));
  String.hash(into:)(v27, v8, a2);
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1LL << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    uint64_t v16 = v15[1];
    BOOL v17 = *v15 == v8 && v16 == a2;
    if (v17 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(*v15, v16, v8, a2, 0LL), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }

    else
    {
      uint64_t v18 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v19 = (void *)(v14 + 16 * a3);
        uint64_t v20 = v19[1];
        if (*v19 != v8 || v20 != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, v8, a2, 0LL);
          if ((result & 1) == 0) {
            continue;
          }
        }

        goto LABEL_21;
      }
    }
  }

{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  void v25[9];
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      specialized _NativeSet.resize(capacity:)();
    }

    else
    {
      if (v10 > v9)
      {
        uint64_t result = (uint64_t)specialized _NativeSet.copy()();
        goto LABEL_23;
      }

      specialized _NativeSet.copyAndResize(capacity:)(v9 + 1);
    }

    uint64_t v11 = *v4;
    Hasher.init(_seed:)(v25, *(void *)(*v4 + 40));
    if (a2)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)(v25, v8, a2);
      swift_bridgeObjectRelease(a2);
    }

    else
    {
      Hasher._combine(_:)(0);
    }

    uint64_t result = Hasher._finalize()();
    uint64_t v12 = -1LL << *(_BYTE *)(v11 + 32);
    a3 = result & ~v12;
    uint64_t v13 = v11 + 56;
    if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
    {
      uint64_t v14 = ~v12;
      unint64_t v15 = *(void *)(v11 + 48);
      do
      {
        uint64_t v16 = (void *)(v15 + 16 * a3);
        BOOL v17 = v16[1];
        if (v17)
        {
          if (a2)
          {
            if (*v16 == v8 && v17 == a2) {
              goto LABEL_26;
            }
            uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, a2, 0LL);
            if ((result & 1) != 0) {
              goto LABEL_26;
            }
          }
        }

        else if (!a2)
        {
          goto LABEL_26;
        }

        a3 = (a3 + 1) & v14;
      }

      while (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0);
    }
  }

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v43 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v41 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  __chkstk_darwin();
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)
                  - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v35 - v15;
  unint64_t v17 = *(void *)(*v3 + 16);
  unint64_t v18 = *(void *)(*v3 + 24);
  uint64_t v37 = v3;
  if (v18 <= v17 || (a3 & 1) == 0)
  {
    uint64_t v19 = v17 + 1;
    if ((a3 & 1) != 0)
    {
      uint64_t v36 = v14;
      specialized _NativeSet.resize(capacity:)(v19);
    }

    else
    {
      if (v18 > v17)
      {
        specialized _NativeSet.copy()();
        goto LABEL_18;
      }

      uint64_t v36 = v14;
      specialized _NativeSet.copyAndResize(capacity:)(v19);
    }

    uint64_t v20 = *v3;
    Hasher.init(_seed:)(v47, *(void *)(*v3 + 40));
    specialized Optional<A>.hash(into:)((uint64_t)v47);
    Swift::Int v21 = Hasher._finalize()();
    uint64_t v22 = -1LL << *(_BYTE *)(v20 + 32);
    a2 = v21 & ~v22;
    uint64_t v46 = v20 + 56;
    if (((*(void *)(v20 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
    {
      uint64_t v45 = ~v22;
      uint64_t v44 = *(void *)(v40 + 72);
      uint64_t v38 = v20;
      uint64_t v39 = v9;
      do
      {
        outlined init with copy of Result<TemplatingResult, Error>( *(void *)(v20 + 48) + v44 * a2,  (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        uint64_t v23 = (uint64_t)&v11[*(int *)(v9 + 48)];
        outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v16,  (uint64_t)v11,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        outlined init with copy of Result<TemplatingResult, Error>( a1,  v23,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, v7) == 1)
        {
        }

        else
        {
          outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v11,  (uint64_t)v13,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
          if (__swift_getEnumTagSinglePayload(v23, 1LL, v7) != 1)
          {
            uint64_t v24 = v43;
            BOOL v25 = v41;
            (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v41, v23, v7);
            lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
            int v42 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v25, v7);
            uint64_t v26 = a1;
            uint64_t v27 = *(void (**)(char *, uint64_t))(v24 + 8);
            uint64_t v28 = v25;
            uint64_t v20 = v38;
            uint64_t v9 = v39;
            v27(v28, v7);
            v27(v13, v7);
            a1 = v26;
            outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v11,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
            if ((v42 & 1) != 0) {
              goto LABEL_22;
            }
            goto LABEL_17;
          }

          (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v7);
        }

        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v11,  &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v16,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_17:
        a2 = (a2 + 1) & v45;
      }

      while (((*(void *)(v46 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
    }
  }

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16LL);
  unint64_t v7 = *(void *)(*v3 + 24LL);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_37;
  }
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }

  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)specialized _NativeSet.copy()();
      goto LABEL_37;
    }

    specialized _NativeSet.copyAndResize(capacity:)(v6 + 1);
  }

  uint64_t v8 = *v3;
  Hasher.init(_seed:)(v23, *(void *)(*v3 + 40LL));
  if (v5)
  {
    if (v5 == 1) {
      uint64_t v9 = 0x654E646E41646E65LL;
    }
    else {
      uint64_t v9 = 0x4E646E41646C6F68LL;
    }
    if (v5 == 1) {
      unint64_t v10 = 0xED00006C6C614377LL;
    }
    else {
      unint64_t v10 = 0xEE006C6C61437765LL;
    }
  }

  else
  {
    unint64_t v10 = 0xE300000000000000LL;
    uint64_t v9 = 6579297LL;
  }

  String.hash(into:)(v23, v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v3 = v23;
  uint64_t result = Hasher._finalize()();
  uint64_t v11 = -1LL << *(_BYTE *)(v8 + 32);
  a2 = result & ~v11;
  if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v12 = ~v11;
    do
    {
      if (*(_BYTE *)(*(void *)(v8 + 48) + a2))
      {
        if (*(_BYTE *)(*(void *)(v8 + 48) + a2) == 1)
        {
          uint64_t v13 = 0x654E646E41646E65LL;
          uint64_t v3 = (void *)0xED00006C6C614377LL;
        }

        else
        {
          uint64_t v13 = 0x4E646E41646C6F68LL;
          uint64_t v3 = (void *)0xEE006C6C61437765LL;
        }
      }

      else
      {
        uint64_t v3 = (void *)0xE300000000000000LL;
        uint64_t v13 = 6579297LL;
      }

      if (v5)
      {
        uint64_t v14 = v5 == 1 ? 0x654E646E41646E65LL : 0x4E646E41646C6F68LL;
        unint64_t v15 = v5 == 1 ? 0xED00006C6C614377LL : 0xEE006C6C61437765LL;
      }

      else
      {
        unint64_t v15 = 0xE300000000000000LL;
        uint64_t v14 = 6579297LL;
      }

      if (v13 == v14 && v3 == (void *)v15) {
        goto LABEL_40;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v3, v14, v15, 0LL);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v17 & 1) != 0) {
        goto LABEL_41;
      }
      a2 = (a2 + 1) & v12;
    }

    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
  }

{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }

  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)specialized _NativeSet.copy()();
      goto LABEL_14;
    }

    specialized _NativeSet.copyAndResize(capacity:)(v6 + 1);
  }

  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:_:)(*(void *)(*v3 + 40), v5);
  uint64_t v9 = -1LL << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    unint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
    }

    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }

{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v6 = result;
  uint64_t v19 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  uint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }

  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)specialized _NativeSet.copy()();
      goto LABEL_12;
    }

    specialized _NativeSet.copyAndResize(capacity:)(v7 + 1);
  }

  uint64_t v9 = *v3;
  unint64_t v10 = *(void *)(*v3 + 40);
  uint64_t v4 = type metadata accessor for App(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
  uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)(v10, v4, v11);
  uint64_t v12 = -1LL << *(_BYTE *)(v9 + 32);
  a2 = result & ~v12;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v13 = ~v12;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    do
    {
      uint64_t v18 = *(void *)(*(void *)(v9 + 48) + 8 * a2);
      uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v19, v4);
      if ((result & 1) != 0) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v13;
    }

    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
  }

LABEL_37:
  uint64_t v18 = *v22;
  *(void *)(*v22 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(_BYTE *)(*(void *)(v18 + 48) + a__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1LL);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v18 + ++*(void *)(v0 + 16) = v21;
    return result;
  }

  __break(1u);
LABEL_40:
  swift_bridgeObjectRelease_n(v3, 2LL);
LABEL_41:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for OngoingCallOfferOptions);
  __break(1u);
  return result;
}

  uint64_t v93 = *(void *)(v0 + 112);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_18(v93);
  OUTLINED_FUNCTION_138_6();
  uint64_t v94 = OUTLINED_FUNCTION_73_23();
  uint64_t v95 = OUTLINED_FUNCTION_33_10(v94);
  uint64_t v96 = *(void **)(v0 + 112);
  if (v95)
  {
    uint64_t v97 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v137 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v140 = v137;
    uint64_t v141 = 0LL;
    *(_DWORD *)uint64_t v97 = 136315138;
    uint64_t v98 = v96[44];
    uint64_t v99 = v96[45];
    uint64_t v100 = v96[46];
    OUTLINED_FUNCTION_182_2();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_189_2(v98, v99, v100);
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_39();
    *uint64_t v138 = OUTLINED_FUNCTION_10_3(v141, v101, &v140);
    OUTLINED_FUNCTION_85_1((uint64_t)v138, v0 + 64, (uint64_t)(v97 + 4));
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1((uint64_t)v96);
    OUTLINED_FUNCTION_57_0(&dword_0, v2, (os_log_type_t)v1, "%s executeSmartAppSelect: can't find any 1p app..", v97);
    OUTLINED_FUNCTION_17_0(v137);
    OUTLINED_FUNCTION_0_2(v137);
    OUTLINED_FUNCTION_0_2((uint64_t)v97);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(*(void *)(v0 + 112));
  }

LABEL_48:
  uint64_t v115 = *(void *)(v0 + 88);
  uint64_t v116 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_29_1(v115, v117, v118, v116);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

    uint64_t v136 = v97;
    goto LABEL_38;
  }

  unint64_t v10 = (uint64_t *)((char *)v3 - 16);
  OUTLINED_FUNCTION_152_7();
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v6 + 296) + 248LL))(*v5, v5[1]);
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_34_0();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v202 = (uint64_t *)((char *)v3 - 24);
  uint64_t v14 = (os_log_s *)v1[30];
  unint64_t v15 = OUTLINED_FUNCTION_15_1();
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_11_18((uint64_t)v14);
  OUTLINED_FUNCTION_11(v13);
  OUTLINED_FUNCTION_88_11();
  char v17 = OUTLINED_FUNCTION_6_0();
  uint64_t v18 = OUTLINED_FUNCTION_29_4(v17);
  uint64_t v19 = (void *)v1[30];
  uint64_t v208 = v4;
  v215 = v1;
  if (v18)
  {
    uint64_t v191 = (void *)((char *)v3 - 8);
    BOOL v20 = (uint8_t *)OUTLINED_FUNCTION_7_0(22LL);
    char v193 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v216 = v193;
    uint64_t v217 = 0LL;
    OUTLINED_FUNCTION_246_0(4.8151e-34);
    uint64_t v194 = v16;
    uint64_t v198 = (uint8_t *)v3;
    uint64_t v21 = v19[44];
    uint64_t v22 = v19[45];
    uint64_t v23 = v11;
    uint64_t v24 = v10;
    BOOL v25 = v19[46];
    uint64_t v1 = (uint64_t *)v19[47];
    uint64_t v218 = 0xE000000000000000LL;
    OUTLINED_FUNCTION_20_14();
    OUTLINED_FUNCTION_128();
    uint64_t v190 = v14;
    uint64_t v26 = v25;
    unint64_t v10 = v24;
    uint64_t v11 = v23;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v21, v22, v26, v1);
    uint64_t v3 = (os_log_s *)v198;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_123_4();
    *unint64_t v10 = OUTLINED_FUNCTION_10_3(0LL, v27, &v216);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v10, v191, v189);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1((uint64_t)v19);
    OUTLINED_FUNCTION_195_2();
    OUTLINED_FUNCTION_76_4();
    _BYTE *v191 = OUTLINED_FUNCTION_242(v11, v28, &v216);
    uint64_t v29 = OUTLINED_FUNCTION_140_8();
    OUTLINED_FUNCTION_14_0(v29, v30, v31, v32);
    OUTLINED_FUNCTION_32_10(v13);
    OUTLINED_FUNCTION_33_6( &dword_0,  v14,  (os_log_type_t)v192,  "%s executeSmartAppSelect: AppSelection resolved to app: '%s'.",  v20);
    OUTLINED_FUNCTION_42_2(v193);
    OUTLINED_FUNCTION_0_2(v193);
    OUTLINED_FUNCTION_0_2((uint64_t)v20);
  }

  else
  {
    OUTLINED_FUNCTION_31_1((uint64_t)v19);
    OUTLINED_FUNCTION_7_4(v13);
  }

  uint64_t v59 = OUTLINED_FUNCTION_6_1();
  PhoneAppResolutionOnDeviceFlowStrategy.getSeASPredictableAppsList(apps:)(v59);
  OUTLINED_FUNCTION_50();
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_76_4();
  uint64_t v60 = OUTLINED_FUNCTION_280_0();
  uint64_t v62 = specialized Sequence.first(where:)(v60, v61, v11, v13);
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_4_1();
  uint64_t v63 = v1[30];
  if (!v62)
  {
    OUTLINED_FUNCTION_11_18(v1[30]);
    OUTLINED_FUNCTION_88_11();
    uint64_t v95 = OUTLINED_FUNCTION_59_8();
    uint64_t v96 = OUTLINED_FUNCTION_50_12(v3);
    uint64_t v97 = v1[30];
    if (v96)
    {
      uint64_t v98 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v201 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v216 = v201;
      uint64_t v217 = 0LL;
      OUTLINED_FUNCTION_219_2(4.8149e-34);
      uint64_t v1 = *(uint64_t **)(v97 + 376);
      uint64_t v218 = 0xE000000000000000LL;
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_36_1();
      OUTLINED_FUNCTION_17_55();
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_123_4();
      uint64_t v100 = OUTLINED_FUNCTION_10_3(v217, v99, &v216);
      OUTLINED_FUNCTION_89_14(v100, (uint64_t)v202, v208, v188, v189, (uint64_t)v190, (uint64_t)v191, v192, v193, v194);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1(v97);
      OUTLINED_FUNCTION_57_0(&dword_0, v3, v95, "%s executeSmartAppSelect: Could not find the resolved app", v98);
      uint64_t v101 = v201;
LABEL_35:
      OUTLINED_FUNCTION_17_0(v101);
      OUTLINED_FUNCTION_0_2(v101);
      uint64_t v119 = (uint64_t)v98;
      goto LABEL_36;
    }

    goto LABEL_37;
  }

  uint64_t v64 = (void *)((char *)v3 - 216);
  uint64_t v65 = (uint64_t *)((char *)v3 - 168);
  *(_BYTE *)(v63 + 34__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 3;
  PhoneAppResolutionOnDeviceFlowStrategy.findAndCacheAppForAppSelection(app:)(v62, (uint64_t)v65);
  outlined release of AnnotatedApp?(v65);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v65,  (uint64_t)v64,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (!*v64)
  {
    OUTLINED_FUNCTION_11_18(v1[30]);
    OUTLINED_FUNCTION_88_11();
    int v120 = v1;
    id v121 = OUTLINED_FUNCTION_59_8();
    id v122 = OUTLINED_FUNCTION_39_7((os_log_s *)v65);
    uint64_t v123 = v120[30];
    if (v122)
    {
      OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v211 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v216 = v211;
      uint64_t v217 = 0LL;
      OUTLINED_FUNCTION_282_0(4.8149e-34);
      uint64_t v196 = v124;
      OUTLINED_FUNCTION_265_0();
      uint64_t v218 = v125;
      OUTLINED_FUNCTION_124();
      OUTLINED_FUNCTION_76_4();
      uint64_t v126 = OUTLINED_FUNCTION_283_1();
      OUTLINED_FUNCTION_57_22(v126, v127, v128);
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_4_1();
      _BYTE *v202 = OUTLINED_FUNCTION_10_3(v217, v129, &v216);
      OUTLINED_FUNCTION_135_6((uint64_t)v202, (uint64_t)v10, v196);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1(v123);
      OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v65,  v121,  "%s executeSmartAppSelect: AnnotatedAppFinder could not find the resolved app",  v198);
      OUTLINED_FUNCTION_17_0(v211);
      OUTLINED_FUNCTION_0_2(v211);
      OUTLINED_FUNCTION_0_2((uint64_t)v198);
      OUTLINED_FUNCTION_16_3();
    }

    else
    {
      OUTLINED_FUNCTION_16_3();
      OUTLINED_FUNCTION_31_1(v123);
    }

    goto LABEL_62;
  }

  OUTLINED_FUNCTION_103_8();
  uint64_t v66 = OUTLINED_FUNCTION_80_12();
  static AppResolutionAction.select(app:)(v66);
  uint64_t v67 = OUTLINED_FUNCTION_80_12();
LABEL_25:
  swift_release(v67);
LABEL_63:
  swift_task_dealloc(v1[33]);
  return ((uint64_t (*)(uint64_t))v1[1])(v63);
}

  if (!(_DWORD)v117)
  {
LABEL_19:
    if ((_DWORD)v118) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }

    uint64_t v29 = 0LL;
    uint64_t v21 = 1;
    goto LABEL_40;
  }

  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for CallControlUsoIdentifiers.FloatSettingName( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_49EA0 + 4 * byte_339AF8[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_49ED4 + 4 * byte_339AF3[v4]))();
}

uint64_t sub_49ED4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_49EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x49EE4LL);
  }
  return result;
}

uint64_t sub_49EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x49EF8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_49EFC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_49F04(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::FloatSettingName_optional protocol witness for UsoVocIdentifier.init(rawValue:) in conformance CallControlUsoIdentifiers.FloatSettingName@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::FloatSettingName_optional *a2@<X8>)
{
  result.INCallRecordTypeOptions value = CallControlUsoIdentifiers.FloatSettingName.init(rawValue:)(*(Swift::String *)&a1).value;
  a2->INCallRecordTypeOptions value = result.value;
  return result;
}

PhoneCallFlowDelegatePlugin::CallControlUsoIdentifiers::FloatSettingName_optional __swiftcall CallControlUsoIdentifiers.FloatSettingName.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of CallControlUsoIdentifiers.FloatSettingName.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallControlNLIntent.Target()
{
  return PhoneCallControlNLIntent.Target.description.getter(*v0);
}

uint64_t PhoneCallControlNLIntent.Target.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_16_63 + 4 * byte_33EFF0[a1]))( 0x6172656D6163LL,  0xE600000000000000LL);
}

uint64_t sub_4A03C()
{
  return 0x656D756C6F76LL;
}

Swift::Void __swiftcall UsoEntityBuilderNameContaining.setName(value:identifiers:)( Swift::String value, Swift::OpaquePointer identifiers)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  (*(void (**)(uint64_t, void *))(v3 + 16))(value._countAndFlagsBits, value._object);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *((void *)identifiers._rawValue + 2);
    if (v9)
    {
      uint64_t v10 = *(void *)(type metadata accessor for UsoIdentifier(0LL) - 8);
      uint64_t v11 = (char *)identifiers._rawValue
          + ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v12 = *(void *)(v10 + 72);
      swift_bridgeObjectRetain(identifiers._rawValue);
      do
      {
        dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v11);
        v11 += v12;
        --v9;
      }

      while (v9);
      swift_release(v8);
      swift_bridgeObjectRelease(identifiers._rawValue);
    }

    else
    {
      swift_release(v7);
    }
  }

unint64_t variable initialization expression of SearchCallHistoryBinaryButtonModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(33LL);
}

unint64_t variable initialization expression of SingleResultCallHistoryModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(23LL);
}

void *default argument 1 of INIdentifyIncomingCallerIntentResponse.init(statusCode:callRecords:)()
{
  return &_swiftEmptyArrayStorage;
}

unint64_t variable initialization expression of SingleResultVoicemailModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(21LL);
}

uint64_t variable initialization expression of PlayVoicemailModel.responseViewId()
{
  return 0x63696F5679616C50LL;
}

uint64_t variable initialization expression of SingleVoicemailModel.responseViewId()
{
  return 0x6F56656C676E6953LL;
}

unint64_t variable initialization expression of SingleCallRecordModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(16LL);
}

void default argument 1 of ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)( void *a1@<X8>)
{
  id v2 = [objc_allocWithZone(CNContactStore) init];
  a1[3] = OUTLINED_FUNCTION_100((uint64_t)v2, &lazy cache variable for type metadata for CNContactStore);
  a1[4] = &protocol witness table for CNContactStore;
  *a1 = v2;
  OUTLINED_FUNCTION_6();
}

void default argument 2 of ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)( uint64_t a1@<X8>)
{
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = &type metadata for LabelTemplatesProvider;
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &protocol witness table for LabelTemplatesProvider;
  uint64_t v1 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3F5B40, 48LL);
  OUTLINED_FUNCTION_75(v1);
  OUTLINED_FUNCTION_2();
}

void default argument 3 of ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)( uint64_t *a1@<X8>)
{
}

void default argument 2 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
}

void default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
}

unint64_t default argument 0 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
  return OUTLINED_FUNCTION_13_9(16LL);
}

void default argument 6 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)()
{
}

{
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_17_10();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_6();
}

void default argument 3 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
}

id (*default argument 1 of FirstPartyAnnotatedAppStore.init(featureManager:appExistsPredicate:)())(uint64_t a1, uint64_t a2)
{
  return closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultAppExistsPredicate;
}

void specialized _arrayForceCast<A, B>(_:)(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_25_2();
    uint64_t v2 = OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v2)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v2 < 0)
    {
      __break(1u);
    }

    else
    {
      for (uint64_t i = 0LL; i != v2; ++i)
      {
        if ((a1 & 0xC000000000000001LL) != 0) {
          id v4 = (id)OUTLINED_FUNCTION_66_0();
        }
        else {
          id v4 = *(id *)(a1 + 8 * i + 32);
        }
        id v8 = v4;
        uint64_t v5 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
        swift_dynamicCast(v9, &v8, v5);
        unsigned int v6 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          unsigned int v6 = v10;
        }

        unint64_t v7 = v6[2];
        if (v7 >= v6[3] >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          unsigned int v6 = v10;
        }

        void v6[2] = v7 + 1;
        outlined init with take of Any(v9, &v6[4 * v7 + 4]);
      }
    }
  }

void *specialized _arrayForceCast<A, B>(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      outlined init with copy of SignalProviding(v4, (uint64_t)v8);
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SignalProviding);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppSelectionSignalComponent);
      swift_dynamicCast(v9, v8, v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v2 = v10;
      }

      unint64_t v6 = v2[2];
      if (v6 >= v2[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v2 = v10;
      }

      v2[2] = v6 + 1;
      outlined init with take of AppSelectionSignalComponent(v9, (uint64_t)&v2[5 * v6 + 4]);
      v4 += 40LL;
      --v1;
    }

    while (v1);
  }

  return v2;
}

void specialized _arrayForceCast<A, B>(_:)()
{
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    OUTLINED_FUNCTION_25_2();
    uint64_t v2 = OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v2)
  {
    OUTLINED_FUNCTION_70_0();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if ((v2 & 0x8000000000000000LL) == 0)
    {
      while (1)
      {
        if ((v1 & 0xC000000000000001LL) != 0) {
          OUTLINED_FUNCTION_66_0();
        }
        else {
          OUTLINED_FUNCTION_73();
        }
        uint64_t v3 = type metadata accessor for PhoneCallNLv4Contact();
        OUTLINED_FUNCTION_68_3(v3);
        if (v5)
        {
          OUTLINED_FUNCTION_80_0(v4);
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }

        OUTLINED_FUNCTION_71_0();
        OUTLINED_FUNCTION_82_1();
        __chkstk_darwin();
        OUTLINED_FUNCTION_28_2(v6, v7, v13);
        uint64_t v8 = OUTLINED_FUNCTION_81_0();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v9, v10, v11, v12);
        __swift_destroy_boxed_opaque_existential_1(&v13);
      }
    }

    __break(1u);
  }

  else
  {
    OUTLINED_FUNCTION_7_5();
  }

{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  OUTLINED_FUNCTION_29_2();
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    OUTLINED_FUNCTION_25_2();
    uint64_t v2 = OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v2)
  {
    OUTLINED_FUNCTION_70_0();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if ((v2 & 0x8000000000000000LL) == 0)
    {
      while (1)
      {
        if ((v1 & 0xC000000000000001LL) != 0) {
          OUTLINED_FUNCTION_66_0();
        }
        else {
          OUTLINED_FUNCTION_73();
        }
        uint64_t v3 = type metadata accessor for UsoEntity_common_Group(0LL);
        OUTLINED_FUNCTION_68_3(v3);
        if (v5)
        {
          OUTLINED_FUNCTION_80_0(v4);
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }

        OUTLINED_FUNCTION_71_0();
        OUTLINED_FUNCTION_82_1();
        __chkstk_darwin();
        OUTLINED_FUNCTION_28_2(v6, v7, v13);
        uint64_t v8 = OUTLINED_FUNCTION_81_0();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v9, v10, v11, v12);
        __swift_destroy_boxed_opaque_existential_1(&v13);
      }
    }

    __break(1u);
  }

  else
  {
    OUTLINED_FUNCTION_7_5();
  }

uint64_t variable initialization expression of PhoneFlow.typeName()
{
  return 0x6F6C46656E6F6850LL;
}

unint64_t variable initialization expression of PlayVoiceMailAction.debugDescription()
{
  return OUTLINED_FUNCTION_13_9(19LL);
}

void default argument 3 of PlayVoiceMailAction.init(voicemailIdentifier:isLeadingSavedVoiceMailPostPrompt:aceServiceInvoker:searchCallHistoryCatFamily:)()
{
}

void default argument 9 of static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)( void *a1@<X8>)
{
}

uint64_t variable initialization expression of IncomingCallActionConfirmationStrategy.confirmationSynonymMap()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(FollowUpOfferType, Set<PhoneCallVerb>)>);
  uint64_t inited = swift_initStackObject(v0, &v5);
  *(_OWORD *)(inited + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(_BYTE *)(inited + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2;
  *(void *)(inited + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = specialized Set.init(_nonEmptyArrayLiteral:)();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<PhoneCallVerb>);
  unint64_t v3 = lazy protocol witness table accessor for type FollowUpOfferType and conformance FollowUpOfferType();
  return Dictionary.init(dictionaryLiteral:)(inited, &type metadata for FollowUpOfferType, v2, v3);
}

void default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)( uint64_t *a1@<X8>)
{
}

void default argument 1 of static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)()
{
}

void specialized SetAlgebra<>.init(arrayLiteral:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0LL;
    unint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if ((v5 & ~v2) == 0) {
        uint64_t v4 = 0LL;
      }
      v2 |= v4;
      --v1;
    }

    while (v1);
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
}

void default argument 2 of static PhoneCallRecord.getBuilder(callRecord:options:appInfoBuilder:locale:)( uint64_t *a1@<X8>)
{
}

void default argument 1 of AddOrCallPromptForValueStrategy.init(sharedGlobals:ongoingCallCats:ongoingCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:)()
{
}

void default argument 2 of AddOrCallPromptForValueStrategy.init(sharedGlobals:ongoingCallCats:ongoingCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:)()
{
}

void default argument 4 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
}

id default argument 2 of AnnounceVoicemailFlow.init(directAction:sharedGlobals:eventStore:contactStore:)@<X0>( void *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v2 = (void *)static SiriPhoneDefaults.instance;
  a1[3] = &type metadata for SiriPhoneDefaults;
  a1[4] = &protocol witness table for SiriPhoneDefaults;
  *a1 = v2;
  return OUTLINED_FUNCTION_26_2(v2);
}

void default argument 2 of AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)( uint64_t *a1@<X8>)
{
}

BOOL specialized OptionSet<>.contains(_:)(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

unint64_t variable initialization expression of PhoneCallFeatureFlags._forceCallsToHandle()
{
  return OUTLINED_FUNCTION_96_0(18LL);
}

unint64_t variable initialization expression of PhoneCallFeatureFlags._forceTrialFeatureOff()
{
  return OUTLINED_FUNCTION_96_0(20LL);
}

void variable initialization expression of PhoneCallFeatureFlags._siriInCallFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._siriLagunaFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._faceTimeUninstallFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._forcedAppDisambiguationFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._smartEnoughAppSelectionFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._answerCallNotificationOnLockedScreenFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._hsAnswerCallNotificationFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._quickStopCallBellFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._cancelCallBellFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._pommesGeoSearchFlag()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<FeatureFlagsKey>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 112LL);
  *(_OWORD *)(v1 + ++*(void *)(v0 + 16) = xmmword_31D880;
  *(void *)(v1 + 56) = &type metadata for SiriPhoneFeature;
  *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = lazy protocol witness table accessor for type SiriPhoneFeature and conformance SiriPhoneFeature();
  *(_BYTE *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 5;
  *(void *)(v1 + 96) = &type metadata for PommesFeature;
  *(void *)(v1 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = lazy protocol witness table accessor for type PommesFeature and conformance PommesFeature();
  OUTLINED_FUNCTION_2();
}

void variable initialization expression of PhoneCallFeatureFlags._shouldEnableCompositionFlow()
{
}

void variable initialization expression of PhoneCallFeatureFlags._shouldEnableSRRRefactor()
{
}

void variable initialization expression of PhoneCallFeatureFlags._useEntitySpansForBusinessCallFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._shouldEnableCompositionFlowForAllLocales()
{
}

void variable initialization expression of PhoneCallFeatureFlags._forcedAppDisambiguationFlag(char a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<FeatureFlagsKey>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 72LL);
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(void *)(v3 + 56) = &type metadata for SiriPhoneFeature;
  *(void *)(v3 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = lazy protocol witness table accessor for type SiriPhoneFeature and conformance SiriPhoneFeature();
  *(_BYTE *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  OUTLINED_FUNCTION_2();
}

void variable initialization expression of PhoneCallFeatureFlags._protectedAppsFlag()
{
}

void variable initialization expression of PhoneCallFeatureFlags._siriInCallFlag( uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<FeatureFlagsKey>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 72LL);
  *(_OWORD *)(v5 + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(void *)(v5 + 56) = a1;
  *(void *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2();
  OUTLINED_FUNCTION_6();
}

uint64_t variable initialization expression of SingleIntentCacheProvider.key()
{
  return -1LL;
}

void variable initialization expression of PhoneCallControlNLTransformer.logPrefix()
{
}

void default argument 0 of PhoneCallControlNLTransformer.init(cacheProvider:)()
{
  uint64_t v0 = type metadata accessor for SingleIntentCacheProvider();
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 32LL);
  *(_OWORD *)(v1 + ++*(void *)(v0 + 16) = xmmword_31D890;
  OUTLINED_FUNCTION_90_0(v1, (uint64_t)&protocol witness table for SingleIntentCacheProvider);
  OUTLINED_FUNCTION_2();
}

void default argument 0 of AppSelectionUserPersonaCollector.init(userPersonaSignal:)()
{
  uint64_t v0 = type metadata accessor for SignalComputationContext(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<DomainUseCase>);
  uint64_t v5 = type metadata accessor for DomainUseCase(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 32) & ~v7;
  uint64_t v9 = swift_allocObject(v4, v8 + *(void *)(v6 + 72), v7 | 7);
  *(_OWORD *)(v9 + ++*(void *)(v0 + 16) = xmmword_31D870;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v9 + v8, enum case for DomainUseCase.phoneCall(_:), v5);
  OUTLINED_FUNCTION_20_1();
  SignalComputationContext.init(bundleIds:entityId:sharedUserId:domainUseCases:)(v10, v11, v12, v13, 0LL, v9);
  uint64_t v14 = static DomainUserPersonaSignal.instances(context:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  specialized _arrayForceCast<A, B>(_:)(v14);
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_58();
}

void default argument 1 of AnswerCallOutputStrategy.init(device:incomingCallCats:announceCallsContext:audioSessionManager:entitlementChecker:)()
{
}

void default argument 3 of IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)( uint64_t a1@<X8>)
{
}

void default argument 4 of AnswerCallOutputStrategy.init(device:incomingCallCats:announceCallsContext:audioSessionManager:entitlementChecker:)( uint64_t a1@<X8>)
{
}

void default argument 3 of ContactsSlotTemplating.init(deviceState:startCallCats:locale:appInfoBuilder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_56_1();
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 16LL);
  OUTLINED_FUNCTION_90_0(v1, (uint64_t)&protocol witness table for AppInfoBuilder);
  OUTLINED_FUNCTION_2();
}

uint64_t specialized DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:)( uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return specialized DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:)( a1,  a2,  a3,  &demangling cache variable for type metadata for (value: AnnotatedApp?, expirationDate: Date),  a4);
}

{
  return specialized DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:)( a1,  a2,  a3,  &demangling cache variable for type metadata for (value: CallNotificationContextProvider.CallNotification?, expirationDate: Date),  a4);
}

uint64_t specialized DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, double a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  *(void *)(v5 + ++*(void *)(v0 + 16) = Dictionary.init(minimumCapacity:)( a1,  &type metadata for String,  v10,  &protocol witness table for String);
  *(double *)(v5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a5;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *(void *)(v5 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a2;
  *(void *)(v5 + 48) = a3;
  return v5;
}

unint64_t variable initialization expression of YesNoConfirmationModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(17LL);
}

uint64_t variable initialization expression of CallStateNotificationManager.tasks()
{
  uint64_t v0 = type metadata accessor for UUID(0LL);
  uint64_t v1 = type metadata accessor for CallStateOneTimeTask(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  return Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v0, v1, v2);
}

void default argument 0 of IdentifyIncomingCallerOutputStrategy.init(incomingCallCats:)()
{
}

void variable initialization expression of NLTransformer.logPrefix()
{
}

double variable initialization expression of NLTransformer.currentTransformation@<D0>(_OWORD *a1@<X8>)
{
  *a1 = 0u;
  a1[1] = 0u;
  *(void *)&double result = 1LL;
  a1[2] = xmmword_31D8A0;
  return result;
}

void *default argument 0 of PhoneCallFeatureManager.init(featureFlags:)@<X0>(uint64_t *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_31_4(v4, &static PhoneCallFeatureFlags.instance);
  a1[3] = (uint64_t)&type metadata for PhoneCallFeatureFlags;
  a1[4] = (uint64_t)&protocol witness table for PhoneCallFeatureFlags;
  uint64_t v2 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3F5B68, 192LL);
  *a1 = v2;
  OUTLINED_FUNCTION_31_4((void *)(v2 + 16), &static PhoneCallFeatureFlags.instance);
  return outlined retain of PhoneCallFeatureFlags(v4);
}

void default argument 5 of AnnounceVoicemailReadingFlow.init(synchronousBurstIndex:voicemail:hintHistory:burstNotificationManager:sharedGlobals:announceVoicemailCats:)()
{
}

void variable initialization expression of SmartAppSelectionFeatureManager.logPrefix()
{
}

id default argument 0 of TrialSmartAppSelectionConfigProvider.init(trialConfigSource:)()
{
  return [(id)objc_opt_self(TRIClient) clientWithIdentifier:112];
}

uint64_t default argument 2 of SmartAppSelectionFeatureManager.init(sharedGlobals:trialSmartAppSelectionConfigProvider:diagnosticLogPermission:)()
{
  uint64_t v0 = type metadata accessor for DiagnosticLogPermission();
  return swift_allocObject(v0, 16LL, 7LL);
}

uint64_t variable initialization expression of ThirdPartyAnnotatedAppStore.cache()
{
  return variable initialization expression of ThirdPartyAnnotatedAppStore.cache( &demangling cache variable for type metadata for DictionaryBackedCache<String, AnnotatedApp>,  &demangling cache variable for type metadata for (value: AnnotatedApp?, expirationDate: Date),  1.0);
}

uint64_t variable initialization expression of UnsupportedFlowSearchCallHistoryParameters.nonDefaultAppName()
{
  uint64_t v0 = OUTLINED_FUNCTION_48_1();
  type metadata accessor for SpeakableString(v0);
  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  return OUTLINED_FUNCTION_16_0(v1, v2, v3, v4);
}

uint64_t variable initialization expression of CallNotificationContextProvider.cache()
{
  return variable initialization expression of ThirdPartyAnnotatedAppStore.cache( &demangling cache variable for type metadata for DictionaryBackedCache<String, CallNotificationContextProvider.CallNotification>,  &demangling cache variable for type metadata for (value: CallNotificationContextProvider.CallNotification?, expirationDate: Date),  30.0);
}

uint64_t variable initialization expression of ThirdPartyAnnotatedAppStore.cache( uint64_t *a1, uint64_t *a2, double a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_8_2(v5, 56LL);
  return specialized DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:)( 5LL,  (uint64_t)closure #1 in default argument 2 of DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:),  0LL,  a2,  a3);
}

id default argument 3 of CallingIntentContinueInAppFlow.init(factory:rchRecord:sharedGlobals:deviceStateConnection:)()
{
  return [objc_allocWithZone(AFDeviceStateConnection) init];
}

void default argument 1 of CallingIntentContinueInAppStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void default argument 2 of CallingIntentContinueInAppStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void default argument 1 of EmergencyContactSlotResolver.init(sharedGlobals:medicalIDStore:)(void *a1@<X8>)
{
  id v2 = [objc_allocWithZone(HKHealthStore) init];
  id v3 = [objc_allocWithZone(HKMedicalIDStore) initWithHealthStore:v2];

  a1[3] = OUTLINED_FUNCTION_103(v4, &lazy cache variable for type metadata for HKMedicalIDStore);
  a1[4] = &protocol witness table for HKMedicalIDStore;
  *a1 = v3;
  OUTLINED_FUNCTION_6();
}

void default argument 1 of CallingIntentContinueInAppStrategy.init(sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = OUTLINED_FUNCTION_67_1();
  uint64_t v7 = a4(v6);
  static CATOption.defaultMode.getter(v7);
  CATWrapperSimple.__allocating_init(options:globals:)(v4, 0LL);
  OUTLINED_FUNCTION_2();
}

void default argument 2 of PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_67_1();
  uint64_t v2 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(v1);
  static CATOption.defaultMode.getter(v2);
  uint64_t v3 = CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
  OUTLINED_FUNCTION_111(v3, (uint64_t)&protocol witness table for PhoneCallCommonCATPatternsExecutor);
  OUTLINED_FUNCTION_6();
}

void default argument 4 of PhoneTCCFlowStrategy.init(sharedGlobals:phoneCallCommonCats:phoneCallCommonCatPatterns:labelTemplatesProvider:tccTemplatesProvider:appInfoBuilder:)( uint64_t a1@<X8>)
{
}

void default argument 2 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)( uint64_t *a1@<X8>)
{
}

void default argument 5 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)()
{
}

void default argument 5 of CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)()
{
}

void default argument 6 of CallingIntentUnsupportedValueFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:phoneCallCommonCATs:phoneCallCommonCatPatterns:startCallCatsSimple:phoneCallDisplayTextCATsSimple:siriKitEventSender:appInfoBuilder:)()
{
}

void default argument 7 of InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_57_1();
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_111(v1, (uint64_t)&protocol witness table for ResponseFactory);
  OUTLINED_FUNCTION_6();
}

void SharedGlobalsProviding.appInfoBuilder.getter(uint64_t *a1@<X8>)
{
}

void default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)( uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = OUTLINED_FUNCTION_106();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v6;
  OUTLINED_FUNCTION_6();
}

void default argument 3 of ContactUnsetRelationshipFlowStrategy.init(sharedGlobals:contactStore:labelTemplates:unsetRelationshipTemplates:displayTextCatFamily:phoneCallCommonCats:)( uint64_t (*a1)(void)@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0LL);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 16LL);
  a3[3] = v5;
  a3[4] = a2;
  *a3 = v6;
  OUTLINED_FUNCTION_6();
}

void default argument 2 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
}

void default argument 6 of FaceTimeMessageControllerFlow.init(app:skIntent:intentResponse:sharedGlobals:state:startCallCATs:flowFinder:siriKitEventSender:)( uint64_t *a1@<X8>)
{
}

uint64_t default argument 2 of IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v0 = type metadata accessor for CallStateNotificationManager();
  uint64_t v1 = OUTLINED_FUNCTION_76_2(v0, (uint64_t)&protocol witness table for CallStateNotificationManager);
  return OUTLINED_FUNCTION_27_0(v1);
}

void default argument 4 of IncomingCallActionHandleIntentFlowStrategy.init(strategy:sharedGlobals:callStateNotificationManager:audioSessionManager:sbsManager:)( uint64_t a1@<X8>)
{
}

void default argument 2 of HangUpCallIntentRCHFlowStrategy.init(app:sharedGlobals:hangUpCallCATsSimple:responseGenerator:)()
{
}

void default argument 6 of InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)()
{
}

id default argument 8 of InCallActionHandleIntentFlowStrategy.init(sharedGlobals:phoneCallBaseCatTemplatingService:aceViewProvider:nlContextProvider:canUseServerTTS:shouldShowDialogAfterIntentHandled:hangUpCallCATsSimple:responseGenerator:biomeEventSender:)@<X0>( void *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v2 = (void *)static BiomeEventSender.instance;
  a1[3] = &type metadata for BiomeEventSender;
  a1[4] = &protocol witness table for BiomeEventSender;
  *a1 = v2;
  return OUTLINED_FUNCTION_26_2(v2);
}

void variable initialization expression of OngoingCallErrorFlowFactory.addCallParticipantCats()
{
}

void default argument 6 of ParticipantOutputProvider.init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)( uint64_t *a1@<X8>)
{
}

void default argument 2 of ParticipantOutputProvider.init(sharedGlobals:app:cats:startCallCats:)()
{
}

Swift::Void (__swiftcall *default argument 1 of static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:)())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void variable initialization expression of AnnounceDropInCallFlow.completionOutputManifest()
{
}

void default argument 5 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)()
{
}

void default argument 2 of UnsupportedFeatureGuardFlow.init(check:sharedGlobals:unsupportedFlowCATsSimple:)()
{
}

void variable initialization expression of FaceTimeSettingsBuilder.phoneCallDisplayTextCATs()
{
}

void default argument 3 of SearchCallHistorySharedGlobals.init(appInfoBuilder:searchCallCatPatterns:responseGenerator:phoneCommonCats:phoneCallCommonCatPatterns:callHistoryPromptDialogProvider:searchCallHistoryCATs:searchCallHistoryCATsSimple:phoneCallDisplayTextCATsSimple:)()
{
}

id (*default argument 0 of AnnotatedAppFinder.init(firstPartyAnnotatedAppStore:thirdPartyAnnotatedAppStore:)())(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_31_4(v12, &static PhoneCallFeatureFlags.instance);
  uint64_t v0 = OUTLINED_FUNCTION_102_0();
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 56LL);
  uint64_t v10 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v11 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v9 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3F5B68, 192LL);
  OUTLINED_FUNCTION_31_4((void *)(v9 + 16), &static PhoneCallFeatureFlags.instance);
  uint64_t v2 = outlined init with take of AppSelectionSignalComponent(&v9, v1 + 16);
  OUTLINED_FUNCTION_85_0(v2, v3, v4, v5, v6, v7);
  return closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultAppExistsPredicate;
}

uint64_t default argument 1 of AnnotatedAppFinder.init(firstPartyAnnotatedAppStore:thirdPartyAnnotatedAppStore:)()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v0 = type metadata accessor for ThirdPartyAnnotatedAppStore();
  uint64_t v1 = OUTLINED_FUNCTION_76_2(v0, (uint64_t)&protocol witness table for ThirdPartyAnnotatedAppStore);
  return OUTLINED_FUNCTION_27_0(v1);
}

uint64_t variable initialization expression of StartCallFlow.flowName()
{
  return 0x6C61437472617453LL;
}

void default argument 2 of UnsupportedCallControlIntentOutputProvider.init(intent:sharedGlobals:callControlCats:unsupportedCats:)()
{
}

uint64_t variable initialization expression of AppSelectionState.forcedDisambiguationShadowPrediction()
{
  uint64_t v0 = OUTLINED_FUNCTION_48_1();
  type metadata accessor for AppResolverResult(v0);
  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  return OUTLINED_FUNCTION_16_0(v1, v2, v3, v4);
}

uint64_t default argument 0 of PhoneContactResolver.init(configCache:queryCache:resolver:)()
{
  uint64_t v0 = type metadata accessor for ContactResolverConfigHashable(0LL);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ContactQuery]);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ContactResolverConfigHashable and conformance ContactResolverConfigHashable,  type metadata accessor for ContactResolverConfigHashable);
  return Dictionary.init(minimumCapacity:)(20LL, v0, v1, v2);
}

uint64_t default argument 1 of PhoneContactResolver.init(configCache:queryCache:resolver:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ContactQuery]);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ResolvedSiriKitContact]);
  unint64_t v2 = lazy protocol witness table accessor for type [ContactQuery] and conformance <A> [A]();
  return Dictionary.init(minimumCapacity:)(20LL, v0, v1, v2);
}

void default argument 2 of PhoneContactResolver.init(configCache:queryCache:resolver:)(void *a1@<X8>)
{
}

void default argument 1 of HangUpCallTemplatingService.init(sharedGlobals:hangUpCats:displayTextCats:phoneCallCommonCats:appInfoBuilder:)()
{
}

void variable initialization expression of PhoneAppResolutionHelper.logPrefix()
{
}

uint64_t default argument 4 of PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)()
{
  uint64_t v0 = type metadata accessor for AppUsageProvider();
  return swift_allocObject(v0, 16LL, 7LL);
}

uint64_t default argument 5 of PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)()
{
  return AppResolver.init(appResolutionRules:)(&_swiftEmptyArrayStorage);
}

void variable initialization expression of IntentConversionFlow.logPrefix( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void default argument 6 of StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)()
{
}

uint64_t CallingIntentContinueInAppStrategy.shouldCheckResponseModeToOutputIntentHandledDialog.getter()
{
  return 1LL;
}

uint64_t default argument 1 of TemplatingParallelizer.init(name:timeout:qos:)@<X0>(void *a1@<X8>)
{
  *a1 = 500LL;
  type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v1 = OUTLINED_FUNCTION_72_1();
  return OUTLINED_FUNCTION_55_1(v1, v2, v3, v4);
}

void variable initialization expression of BiomeEventSender.discoverabilitySource()
{
  id v0 = (id)BiomeLibrary();
  id v1 = [v0 Discoverability];
  swift_unknownObjectRelease(v0);
  id v2 = [v1 Signals];
  swift_unknownObjectRelease(v1);
  id v3 = [v2 source];
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_2();
}

unint64_t variable initialization expression of StartVideoCallFlow.flowName()
{
  return OUTLINED_FUNCTION_13_9(18LL);
}

unint64_t variable initialization expression of ContactConfirmationModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(19LL);
}

double variable initialization expression of ContactConfirmationModel.phoneContactHeader@<D0>( uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = 0u;
  return result;
}

void default argument 4 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_48_1();
  v0[3] = type metadata accessor for ContactGroupResolver(v1);
  v0[4] = &protocol witness table for ContactGroupResolver;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0);
  ContactGroupResolver.init()(boxed_opaque_existential_1);
  OUTLINED_FUNCTION_2();
}

uint64_t default argument 9 of static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)()
{
  uint64_t v0 = type metadata accessor for EmergencyContactResolution();
  return swift_allocObject(v0, 16LL, 7LL);
}

void default argument 4 of SearchCallHistorySharedGlobals.init(appInfoBuilder:searchCallCatPatterns:responseGenerator:phoneCommonCats:phoneCallCommonCatPatterns:callHistoryPromptDialogProvider:searchCallHistoryCATs:searchCallHistoryCATsSimple:phoneCallDisplayTextCATsSimple:)( uint64_t *a1@<X8>)
{
}

void default argument 1 of AnnounceIncomingCallerOutputStrategy.init(announceCallsContext:incomingCallCats:)()
{
}

void variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest()
{
}

uint64_t default argument 1 of NLTransformer.transformToAnyPhoneNLIntent(parse:callStateProvider:)@<X0>( uint64_t *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  a1[3] = (uint64_t)&type metadata for CallStateProvider;
  a1[4] = (uint64_t)&protocol witness table for CallStateProvider;
  uint64_t v2 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3F5BB8, 80LL);
  *a1 = v2;
  return outlined init with copy of CallStateProvider((uint64_t)static CallStateProvider.instance, v2 + 16);
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional __swiftcall AnnounceVoicemailDirectAction.CodingKeys.init(intValue:)( Swift::Int intValue)
{
  return (PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional)4;
}

uint64_t variable initialization expression of PhoneCallDirectInvocationNLIntent.phoneCallNoun()
{
  return 9LL;
}

uint64_t variable initialization expression of PhoneCallDirectInvocationNLIntent.phoneCallReference()
{
  return 35LL;
}

uint64_t variable initialization expression of PhoneCallDirectInvocationNLIntent.phoneCallVerb()
{
  return 17LL;
}

uint64_t variable initialization expression of PhoneCallDirectInvocationNLIntent.voiceMailVerb()
{
  return 6LL;
}

uint64_t variable initialization expression of PhoneCallNLv4Contact.contactReference()
{
  return 38LL;
}

double variable initialization expression of PhoneCallNLv4Contact.personName@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_31D8B0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  return result;
}

uint64_t variable initialization expression of PhoneCallNLv4Contact.emergencyType()
{
  return 0LL;
}

uint64_t variable initialization expression of PhoneCallNLv4Contact.searchQualifier()
{
  return 512LL;
}

double variable initialization expression of PhoneCallNLv4Contact.backingContact@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = 0u;
  *(_BYTE *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = -1;
  return result;
}

uint64_t default argument 2 of static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)()
{
  return default argument 2 of static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)( (uint64_t)&enum case for MatchedResultsSetting.defaultMatching(_:),  (void (*)(void))&type metadata accessor for MatchedResultsSetting);
}

uint64_t variable initialization expression of ContactNeedsDisambiguationFlowStrategy.cachedPromptResponse()
{
  return 0LL;
}

void default argument 1 of HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)()
{
}

unint64_t variable initialization expression of EmergencyCountdownModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(23LL);
}

void variable initialization expression of SeasContactInSingleAppRule.logPrefix()
{
}

uint64_t variable initialization expression of ReaderNlIntent.traversableIntentNode()
{
  uint64_t v0 = OUTLINED_FUNCTION_48_1();
  type metadata accessor for NonTerminalIntentNode(v0);
  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  return OUTLINED_FUNCTION_16_0(v1, v2, v3, v4);
}

void variable initialization expression of InCallActionHandleIntentFlowStrategy.completionOutputManifest()
{
}

unint64_t variable initialization expression of HangUpTipGenerator.templateIdentifier()
{
  return OUTLINED_FUNCTION_13_9(19LL);
}

unint64_t default argument 0 of DIIdentifier.init(namespace:id:)()
{
  return OUTLINED_FUNCTION_13_9(37LL);
}

void variable initialization expression of CallHistoryPromptDialogProvider.logPrefix()
{
}

void variable initialization expression of CommunalDeviceEmergencyFlow._identifiedUser()
{
}

void key path getter for SiriEnvironment.userIdentity : SiriEnvironment(void *a1@<X8>)
{
  *a1 = SiriEnvironment.userIdentity.getter();
  OUTLINED_FUNCTION_2();
}

void key path setter for SiriEnvironment.userIdentity : SiriEnvironment(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_91(a1);
  SiriEnvironment.userIdentity.setter(v1);
  OUTLINED_FUNCTION_2();
}

void key path getter for UserIdentityProvider.identifiedUser : UserIdentityProvider()
{
}

void variable initialization expression of CommunalDeviceEmergencyFlow._multiUserState()
{
}

void variable initialization expression of CommunalDeviceEmergencyFlow._identifiedUser( uint64_t a1, uint64_t *a2)
{
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_15_2(v4);
  SiriEnvironmentValue.init(_:)(KeyPath);
  OUTLINED_FUNCTION_2();
}

void key path getter for SiriEnvironment.currentRequest : SiriEnvironment(void *a1@<X8>)
{
  *a1 = SiriEnvironment.currentRequest.getter();
  OUTLINED_FUNCTION_2();
}

void key path setter for SiriEnvironment.currentRequest : SiriEnvironment(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_91(a1);
  SiriEnvironment.currentRequest.setter(v1);
  OUTLINED_FUNCTION_2();
}

void key path getter for CurrentRequest.multiUserState : CurrentRequest()
{
}

void default argument 3 of SAUIColor.init(r:g:b:alpha:)(uint64_t a1)
{
}

void default argument 5 of static HangUpCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  a4[3] = a1(0LL);
  a4[4] = a2;
  __swift_allocate_boxed_opaque_existential_1(a4);
  a3();
  OUTLINED_FUNCTION_6();
}

unint64_t variable initialization expression of ForeignEmergencyCallDisambiguationModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(30LL);
}

unint64_t variable initialization expression of LocalEmergencyCallDisambiguationModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(28LL);
}

void variable initialization expression of LazyContainer.queue(uint64_t a1)
{
  uint64_t v5 = OUTLINED_FUNCTION_78_0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_44_3();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v7 = OUTLINED_FUNCTION_22_5();
  type metadata accessor for OS_dispatch_queue.Attributes(v7);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_49( v8,  (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue,  &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v19 = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)(5LL, 1LL);
  uint64_t v20 = v9;
  v10._uint64_t countAndFlagsBits = 0x5F797A614CLL;
  v10._object = (void *)0xE500000000000000LL;
  String.append(_:)(v10);
  uint64_t v18 = a1;
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v12._uint64_t countAndFlagsBits = String.init<A>(describing:)(&v18, MetatypeMetadata);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0LL;
  v13._object = (void *)0xE000000000000000LL;
  String.append(_:)(v13);
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  uint64_t v17 = static OS_dispatch_queue.Attributes.concurrent.getter(v16);
  static DispatchQoS.unspecified.getter(v17);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))( v1,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v5);
  OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v14, v15, v2, v3, v1, 0LL);
  OUTLINED_FUNCTION_58();
}

uint64_t variable initialization expression of LazyContainer.$__lazy_storage_$__value@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return __swift_storeEnumTagSinglePayload(a2, 1LL, 1LL, a1);
}

void variable initialization expression of EligibleAppFinder.queue()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  OUTLINED_FUNCTION_29_2();
  uint64_t v18 = v1;
  uint64_t v19 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = OUTLINED_FUNCTION_78_0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DispatchQoS(0LL);
  OUTLINED_FUNCTION_5_2();
  Swift::String v10 = __chkstk_darwin();
  Swift::String v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_49( v10,  (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue,  &OBJC_CLASS___OS_dispatch_queue_ptr);
  v4();
  uint64_t v20 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v14 = v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A],  &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v15, v16, v7, v14);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))( v0,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v5);
  OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v18, v19, v12, v9, v0, 0LL);
  OUTLINED_FUNCTION_7_5();
}

void *variable initialization expression of EligibleAppFinder.taskMap()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of PhoneCallBaseCatTemplatingService.voxDisambiguationPauseSeparator()
{
  return 0x3D65737561705C1BLL;
}

double variable initialization expression of PhoneAppSelectionSignalsGatherer.timeout()
{
  return 10.0;
}

void default argument 1 of PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)()
{
  id v0 =  objc_msgSend( objc_msgSend((id)objc_opt_self(AssistantSiriAnalytics), "sharedAnalytics"),  "defaultMessageStream");
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_2();
}

double variable initialization expression of SignalValueObject.doubleValue()
{
  return -1.0;
}

uint64_t variable initialization expression of IdiomKeyedHintHistory.idiomMap(uint64_t a1)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0LL, &type metadata for Int, a1, 0LL, 0LL);
  uint64_t v3 = static Array._allocateUninitialized(_:)(0LL, TupleTypeMetadata2);
  return OUTLINED_FUNCTION_54_1(v3, (uint64_t)&type metadata for Int, a1, (uint64_t)&protocol witness table for Int);
}

BOOL specialized SetAlgebra.isEmpty.getter(uint64_t a1)
{
  return a1 == 0;
}

unint64_t variable initialization expression of StartAudioCallFlow.flowName()
{
  return OUTLINED_FUNCTION_13_9(18LL);
}

void variable initialization expression of SiriPhoneDefaults.userDefaults()
{
  id v0 = objc_allocWithZone(&OBJC_CLASS___NSUserDefaults);
  @nonobjc NSUserDefaults.init(suiteName:)(0xD000000000000014LL, 0x8000000000346CB0LL);
  OUTLINED_FUNCTION_2();
}

void variable initialization expression of CallingIntentBaseFlowStrategy.completionOutputManifest()
{
}

uint64_t variable initialization expression of ParticipantOutputProvider.contactsSlotName()
{
  return 0x73746361746E6F63LL;
}

void default argument 5 of ParticipantOutputProvider.init(sharedGlobals:app:templatingService:cats:startCallCats:startCallCatPatterns:addCallParticipantCatPatterns:responseGenerator:crrOutputGenerator:)( uint64_t *a1@<X8>)
{
}

void variable initialization expression of PhoneAppResolutionOnDeviceFlowStrategy.logSeasPrefix()
{
}

void variable initialization expression of PhoneAppResolutionOnDeviceFlowStrategy.logAppPrefix()
{
}

void variable initialization expression of PhoneAppResolutionOnDeviceFlowStrategy.logAppAndSeasPrefix()
{
}

uint64_t variable initialization expression of AppResolutionProvider.annotatedApps()
{
  return Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  &type metadata for AnnotatedApp,  &protocol witness table for String);
}

double variable initialization expression of AppResolutionProvider.lastSetApp@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

void default argument 1 of SearchCallHistorySharedGlobals.init(appInfoBuilder:searchCallCatPatterns:responseGenerator:phoneCommonCats:phoneCallCommonCatPatterns:callHistoryPromptDialogProvider:searchCallHistoryCATs:searchCallHistoryCATsSimple:phoneCallDisplayTextCATsSimple:)( uint64_t *a1@<X8>)
{
}

void default argument 2 of AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = OUTLINED_FUNCTION_106();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v6;
  OUTLINED_FUNCTION_6();
}

void default argument 5 of SearchCallHistorySharedGlobals.init(appInfoBuilder:searchCallCatPatterns:responseGenerator:phoneCommonCats:phoneCallCommonCatPatterns:callHistoryPromptDialogProvider:searchCallHistoryCATs:searchCallHistoryCATsSimple:phoneCallDisplayTextCATsSimple:)()
{
}

void default argument 6 of StartCallCatTemplatingService.init(sharedGlobals:startCallCats:displayTextCats:phoneCallCommonCats:unsupportedFlowCats:appInfoBuilder:operationManager:)( uint64_t (*a1)(void), uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = OUTLINED_FUNCTION_94_0(a1);
  OUTLINED_FUNCTION_8_2(v5, a2);
  a3();
  OUTLINED_FUNCTION_2();
}

void default argument 7 of SearchCallHistorySharedGlobals.init(appInfoBuilder:searchCallCatPatterns:responseGenerator:phoneCommonCats:phoneCallCommonCatPatterns:callHistoryPromptDialogProvider:searchCallHistoryCATs:searchCallHistoryCATsSimple:phoneCallDisplayTextCATsSimple:)()
{
}

uint64_t specialized OptionSet.union(_:)(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t specialized OptionSet.symmetricDifference(_:)(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL specialized OptionSet<>.insert(_:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t specialized OptionSet<>.remove(_:)(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t specialized OptionSet<>.update(with:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

void specialized OptionSet<>.formUnion(_:)(uint64_t a1)
{
}

void specialized OptionSet<>.formSymmetricDifference(_:)(uint64_t a1)
{
}

uint64_t specialized SetAlgebra.subtracting(_:)(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL specialized SetAlgebra.isDisjoint(with:)(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

void specialized SetAlgebra.subtract(_:)(uint64_t a1)
{
}

uint64_t default argument 2 of static PhonePerson.make(phonePerson:isRelated:locale:)()
{
  uint64_t v0 = v4;
  uint64_t v1 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  dispatch thunk of DeviceState.siriLocale.getter(v0, v1);
  return __swift_destroy_boxed_opaque_existential_1(v3);
}

uint64_t default argument 0 of FirstPartyAnnotatedAppStore.init(featureManager:appExistsPredicate:)()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_31_4(v12, &static PhoneCallFeatureFlags.instance);
  uint64_t v0 = OUTLINED_FUNCTION_102_0();
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 56LL);
  Swift::String v10 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v11 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v9 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3F5B68, 192LL);
  OUTLINED_FUNCTION_31_4((void *)(v9 + 16), &static PhoneCallFeatureFlags.instance);
  uint64_t v2 = outlined init with take of AppSelectionSignalComponent(&v9, v1 + 16);
  OUTLINED_FUNCTION_85_0(v2, v3, v4, v5, v6, v7);
  return v1;
}

_UNKNOWN **variable initialization expression of AnnounceCallConfirmationStrategy.sectionIDs()
{
  return &outlined read-only object #0 of variable initialization expression of AnnounceCallConfirmationStrategy.sectionIDs;
}

uint64_t default argument 2 of PhoneCallControlFlow.init(input:sharedGlobals:appFinder:)@<X0>( void *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_31_4(v16, &static PhoneCallFeatureFlags.instance);
  uint64_t v2 = OUTLINED_FUNCTION_102_0();
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 56LL);
  uint64_t v14 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v15 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v13 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_3F5B68, 192LL);
  OUTLINED_FUNCTION_31_4((void *)(v13 + 16), &static PhoneCallFeatureFlags.instance);
  uint64_t v4 = outlined init with take of AppSelectionSignalComponent(&v13, v3 + 16);
  OUTLINED_FUNCTION_85_0(v4, v5, v6, v7, v8, v9);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v10 = static ThirdPartyAnnotatedAppStore.instance;
  a1[3] = &type metadata for AnnotatedAppFinder;
  a1[4] = &protocol witness table for AnnotatedAppFinder;
  uint64_t v11 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_3F5B90, 80LL);
  *a1 = v11;
  v11[8] = type metadata accessor for ThirdPartyAnnotatedAppStore();
  v11[9] = &protocol witness table for ThirdPartyAnnotatedAppStore;
  v11[2] = closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultAppExistsPredicate;
  v11[3] = 0LL;
  v11[4] = v3;
  uint64_t v11[5] = v10;
  return swift_retain();
}

uint64_t default argument 3 of PhoneCallFlow.init(input:sharedGlobals:appFinder:eligibleAppsFinder:)()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v0 = type metadata accessor for EligibleAppFinder();
  uint64_t v1 = OUTLINED_FUNCTION_76_2(v0, (uint64_t)&protocol witness table for EligibleAppFinder);
  return OUTLINED_FUNCTION_27_0(v1);
}

unint64_t variable initialization expression of SearchCallHistoryModel.responseViewId()
{
  return OUTLINED_FUNCTION_13_9(17LL);
}

void variable initialization expression of PluginPrewarmProvider.queue()
{
}

void variable initialization expression of TemplatingOperationManager.operationQueue()
{
}

uint64_t variable initialization expression of TemplatingOperationManager.templatingQueue()
{
  uint64_t v2 = OUTLINED_FUNCTION_78_0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_44_3();
  OUTLINED_FUNCTION_5_2();
  uint64_t v4 = __chkstk_darwin();
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = OUTLINED_FUNCTION_49( v4,  (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue,  &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v8 = static DispatchQoS.userInteractive.getter(v7);
  static OS_dispatch_queue.Attributes.concurrent.getter(v8);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))( v0,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v2);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000018LL,  0x8000000000346D30LL,  v6,  v1,  v0,  0LL);
}

uint64_t variable initialization expression of TemplatingOperationManager.operations()
{
  uint64_t v0 = type metadata accessor for TemplatingOperation(0LL);
  unint64_t v1 = lazy protocol witness table accessor for type TemplatingOperationType and conformance TemplatingOperationType();
  return OUTLINED_FUNCTION_54_1( (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for TemplatingOperationType,  v0,  v1);
}

void variable initialization expression of SeasAppUsageRule.logPrefix()
{
}

void default argument 1 of SmartAppSelectionFeatureManager.init(sharedGlobals:trialSmartAppSelectionConfigProvider:diagnosticLogPermission:)()
{
  id v0 = [(id)objc_opt_self(TRIClient) clientWithIdentifier:112];
  uint64_t v1 = type metadata accessor for TrialSmartAppSelectionConfigProvider();
  *(void *)(OUTLINED_FUNCTION_8_2(v1, 24LL) + ++*(void *)(v0 + 16) = v0;
  OUTLINED_FUNCTION_2();
}

uint64_t variable initialization expression of PhoneCallControlNLIntent.action()
{
  return 11LL;
}

void default argument 1 of static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)()
{
}

void variable initialization expression of PhoneCallNLv3Intent.appNode()
{
  uint64_t v0 = type metadata accessor for AppOntologyNode(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  AppOntologyNode.init(name:multicardinal:)(7368801LL, 0xE300000000000000LL, 0LL);
  OUTLINED_FUNCTION_2();
}

void variable initialization expression of PhoneCallNLv3Intent.attributes()
{
}

void variable initialization expression of PhoneCallNLv3Intent.audioRoute()
{
}

void variable initialization expression of PhoneCallNLv3Intent.capability()
{
}

void variable initialization expression of PhoneCallNLv3Intent.preferredProvider()
{
}

void variable initialization expression of PhoneCallNLv3Intent.destinationType()
{
}

void variable initialization expression of PhoneCallNLv3Intent.contact()
{
}

void variable initialization expression of PhoneCallNLv3Intent.smsGroup( uint64_t (*a1)(void), uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = OUTLINED_FUNCTION_94_0(a1);
  OUTLINED_FUNCTION_15_2(v7);
  a4(a2, a3, 1LL);
  OUTLINED_FUNCTION_6();
}

void variable initialization expression of PhoneCallNLv3Intent.message()
{
}

void variable initialization expression of PhoneCallNLv3Intent.noun()
{
}

void variable initialization expression of PhoneCallNLv3Intent.verb()
{
}

void variable initialization expression of PhoneCallNLv3Intent.attributes( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_15_2(v7);
  TerminalOntologyNode.init(name:multicardinal:)(a2, a3, a4);
  OUTLINED_FUNCTION_6();
}

void variable initialization expression of PhoneCallNLv3Intent.voiceMail()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 112LL);
  *(_OWORD *)(v1 + ++*(void *)(v0 + 16) = xmmword_31D880;
  if (one-time initialization token for voiceMailNoun != -1) {
    swift_once(&one-time initialization token for voiceMailNoun, one-time initialization function for voiceMailNoun);
  }
  uint64_t v2 = static VoiceMail.voiceMailNoun;
  *(void *)(v1 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailNoun>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<VoiceMail.VoiceMailNoun> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailNoun>);
  *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v3;
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v4 = one-time initialization token for voiceMailVerb;
  swift_retain();
  if (v4 != -1) {
    swift_once(&one-time initialization token for voiceMailVerb, one-time initialization function for voiceMailVerb);
  }
  uint64_t v5 = static VoiceMail.voiceMailVerb;
  *(void *)(v1 + 96) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailVerb>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type TerminalOntologyNode<VoiceMail.VoiceMailVerb> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<VoiceMail.VoiceMailVerb>);
  *(void *)(v1 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v6;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  uint64_t v7 = type metadata accessor for NonTerminalOntologyNode(0LL);
  OUTLINED_FUNCTION_15_2(v7);
  swift_retain();
  NonTerminalOntologyNode.init(name:multicardinal:childNodes:)(0x69614D6563696F76LL, 0xE90000000000006CLL, 0LL, v1);
  OUTLINED_FUNCTION_6();
}

void variable initialization expression of PhoneCallNLv3Intent.smsGroup()
{
}

uint64_t variable initialization expression of SharedConfirmationRepromptContext.promptedTypes()
{
  unint64_t v0 = lazy protocol witness table accessor for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType();
  return Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for SharedConfirmationRepromptContext.PromptType,  &type metadata for Int,  v0);
}

uint64_t default argument 4 of static PicsDisambiguationBuilder.makeMixedRichCardSectionDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)()
{
  return default argument 2 of static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)( (uint64_t)&enum case for ImageSize.default(_:),  (void (*)(void))&type metadata accessor for ImageSize);
}

uint64_t default argument 2 of static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)( uint64_t a1, void (*a2)(void))
{
  uint64_t v2 = OUTLINED_FUNCTION_72_1();
  return OUTLINED_FUNCTION_55_1(v2, v3, v4, v5);
}

void variable initialization expression of CallStateProvider.callCenter()
{
  uint64_t v3 = OUTLINED_FUNCTION_78_0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v6 = OUTLINED_FUNCTION_22_5();
  type metadata accessor for DispatchQoS(v6);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v8 = OUTLINED_FUNCTION_49( v7,  (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue,  &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v8);
  __int128 v13 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v10 = v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A],  &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v13, v11, v12, v5, v10);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))( v0,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v3);
  objc_msgSend( objc_allocWithZone(TUCallCenter),  "initWithQueue:",  OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000011,  0x8000000000346E10,  v2,  v1,  v0,  0));
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_7_5();
}

void variable initialization expression of CallStateProvider.callCapabilities(uint64_t a1@<X8>)
{
}

uint64_t variable initialization expression of CallStateProvider.callHandleFormatter()
{
  return type metadata accessor for SPHCallHandleFormatter();
}

uint64_t variable initialization expression of CallingIntentConfirmationFlowStrategy.confirmationResponse()
{
  uint64_t v0 = OUTLINED_FUNCTION_48_1();
  type metadata accessor for ConfirmationResponse(v0);
  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  return OUTLINED_FUNCTION_16_0(v1, v2, v3, v4);
}

void @nonobjc NSUserDefaults.init(suiteName:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_88_0();
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  [v3 initWithSuiteName:v2];
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_6();
}

void protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance INPersonHandleLabel()
{
}

NSString protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance INPersonHandleLabel@<X0>( uint64_t a1@<X0>, void *a2@<X8>)
{
  NSString result = specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1);
  *a2 = result;
  return result;
}

void *protocol witness for OptionSet.init(rawValue:) in conformance AFCallState@<X0>( void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance INCallCapability()
{
  uint64_t v1 = OUTLINED_FUNCTION_10_7();
  INStartAudioCallIntent.overwriteCallGroups(newCallGroups:)((Swift::OpaquePointer)v1);
  *uint64_t v0 = v2;
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance INAddCallParticipantParticipantUnsupportedReason( uint64_t *a1, uint64_t *a2)
{
  return static OneTimeHintHistory.__derived_struct_equals(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance TUCallStatus(int *a1, int *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance TUCallStatus@<X0>( unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = TUCallStatus.init(rawValue:)(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t TUCallStatus.init(rawValue:)(uint64_t result)
{
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance TUCallStatus(_DWORD *a1@<X8>)
{
  *a1 = v3;
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance INSiriAuthorizationStatus()
{
}

void protocol witness for Hashable.hash(into:) in conformance INSiriAuthorizationStatus(int a1)
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance INSiriAuthorizationStatus(uint64_t a1)
{
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance INIntentSlotValueType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance INIntentSlotValueType( uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

void protocol witness for SetAlgebra.init() in conformance AFCallState(void *a1@<X8>)
{
  *a1 = variable initialization expression of IdentifyIncomingCallerDirectAction.callerContactIdentifiers();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for SetAlgebra.contains(_:) in conformance AFCallState(uint64_t *a1)
{
  return specialized OptionSet<>.contains(_:)(*a1, *v1);
}

uint64_t protocol witness for SetAlgebra.union(_:) in conformance AFCallState@<X0>( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized OptionSet.union(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

void protocol witness for SetAlgebra.intersection(_:) in conformance AFCallState( void *a1@<X0>, void *a2@<X8>)
{
  *a2 = specialized OptionSet.intersection(_:)(*a1, *v2);
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for SetAlgebra.symmetricDifference(_:) in conformance AFCallState@<X0>( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized OptionSet.symmetricDifference(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL protocol witness for SetAlgebra.insert(_:) in conformance AFCallState(void *a1, uint64_t *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

uint64_t protocol witness for SetAlgebra.remove(_:) in conformance AFCallState@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.remove(_:)(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.update(with:) in conformance AFCallState@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized OptionSet<>.update(with:)(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void protocol witness for SetAlgebra.formUnion(_:) in conformance AFCallState(uint64_t *a1)
{
}

uint64_t protocol witness for SetAlgebra.formIntersection(_:) in conformance AFCallState(void *a1)
{
  return specialized OptionSet<>.formIntersection(_:)(*a1);
}

void protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance AFCallState(uint64_t *a1)
{
}

uint64_t protocol witness for SetAlgebra.subtracting(_:) in conformance AFCallState@<X0>( uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized SetAlgebra.subtracting(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t protocol witness for SetAlgebra.isSubset(of:) in conformance AFCallState(void *a1)
{
  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isDisjoint(with:) in conformance AFCallState(uint64_t *a1)
{
  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

uint64_t protocol witness for SetAlgebra.isSuperset(of:) in conformance AFCallState(void *a1)
{
  return specialized OptionSet<>.contains(_:)(*a1, *v1);
}

BOOL protocol witness for SetAlgebra.isEmpty.getter in conformance AFCallState()
{
  return specialized SetAlgebra.isEmpty.getter(*v0);
}

uint64_t protocol witness for SetAlgebra.init<A>(_:) in conformance AFCallState( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void protocol witness for SetAlgebra.subtract(_:) in conformance AFCallState(uint64_t *a1)
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance INCallAudioRoute(uint64_t a1@<X8>)
{
  *(void *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

  ;
}

void *protocol witness for RawRepresentable.init(rawValue:) in conformance AFCallState@<X0>( void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AFCallState(void *a1@<X8>)
{
  *a1 = *v1;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance INIntentSlotValueType( void *a1@<X8>)
{
  *a1 = v3;
}

void protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance AFCallState( uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = v3;
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance INPersonHandleLabel@<X0>( uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance INPersonHandleLabel@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = INPersonHandleLabel.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance INPersonHandleLabel( uint64_t a1)
{
  uint64_t v3 = v2;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type INPersonHandleLabel and conformance INPersonHandleLabel,  (uint64_t (*)(uint64_t))type metadata accessor for INPersonHandleLabel);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

void protocol witness for Hashable.hashValue.getter in conformance INPersonHandleLabel()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance INPersonHandleLabel(uint64_t a1)
{
  return specialized _SwiftNewtypeWrapper<>.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance INPersonHandleLabel(uint64_t a1)
{
  return specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, *v1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance INPersonHandleLabel( uint64_t *a1, uint64_t *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void specialized static Array._allocateUninitialized(_:)(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_18_4( (uint64_t)"Fatal error",  v1,  v2,  (uint64_t)"Can't construct Array with count < 0",  v3,  v4,  (uint64_t)"Swift/Array.swift");
    __break(1u);
  }

  else
  {
    if (a1) {
      *(void *)(OUTLINED_FUNCTION_99() + ++*(void *)(v0 + 16) = a1;
    }
    OUTLINED_FUNCTION_60_2();
  }

{
  specialized static Array._allocateUninitialized(_:)( a1,  (unint64_t *)&lazy cache variable for type metadata for SABaseCommand,  &OBJC_CLASS___SABaseCommand_ptr);
}

{
  specialized static Array._allocateUninitialized(_:)( a1,  &lazy cache variable for type metadata for INIntentSlotDescription,  &OBJC_CLASS___INIntentSlotDescription_ptr);
}

{
  specialized static Array._allocateUninitialized(_:)( a1,  &lazy cache variable for type metadata for SANotificationOnDeviceObject,  &OBJC_CLASS___SANotificationOnDeviceObject_ptr);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_18_4( (uint64_t)"Fatal error",  v2,  v3,  (uint64_t)"Can't construct Array with count < 0",  v4,  v5,  (uint64_t)"Swift/Array.swift");
    __break(1u);
  }

  else
  {
    if (a1)
    {
      type metadata accessor for App(0LL);
      *(void *)((char *)&dword_10 + (OUTLINED_FUNCTION_99() & 0xFFFFFFFFFFFFF8LL)) = a1;
    }

    OUTLINED_FUNCTION_60_2();
  }

uint64_t sub_4D590()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_4D5BC()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

void *outlined retain of PhoneCallFeatureFlags(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[6];
  uint64_t v4 = a1[7];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[9];
  uint64_t v8 = a1[10];
  uint64_t v7 = a1[11];
  uint64_t v9 = a1[12];
  uint64_t v10 = a1[13];
  uint64_t v12 = a1[14];
  uint64_t v13 = a1[15];
  uint64_t v14 = a1[16];
  uint64_t v15 = a1[17];
  uint64_t v16 = a1[18];
  uint64_t v17 = a1[19];
  uint64_t v18 = a1[21];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  return a1;
}

void specialized static Array._allocateUninitialized(_:)(uint64_t a1, unint64_t *a2, void *a3)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_18_4( (uint64_t)"Fatal error",  v4,  v5,  (uint64_t)"Can't construct Array with count < 0",  v6,  v7,  (uint64_t)"Swift/Array.swift");
    __break(1u);
  }

  else
  {
    if (a1)
    {
      OUTLINED_FUNCTION_49(a1, a2, a3);
      *(void *)((char *)&dword_10 + (OUTLINED_FUNCTION_99() & 0xFFFFFFFFFFFFF8LL)) = a1;
    }

    OUTLINED_FUNCTION_60_2();
  }

void specialized Set.init(_nonEmptyArrayLiteral:)()
{
  if (!v1
    || (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>),
        uint64_t v2 = OUTLINED_FUNCTION_11_7(),
        uint64_t v5 = v2,
        (uint64_t v27 = *(void *)(v0 + 16)) == 0))
  {
LABEL_23:
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_38_5();
    return;
  }

  unint64_t v6 = 0LL;
  uint64_t v7 = v2 + 56;
  while (v6 < *(void *)(v0 + 16))
  {
    uint64_t v8 = (uint64_t *)(v0 + 32 + 16 * v6);
    uint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    OUTLINED_FUNCTION_109_0(v2, v3, v4);
    swift_bridgeObjectRetain(v9);
    String.hash(into:)(v28, v10, v9);
    Swift::Int v11 = Hasher._finalize()();
    uint64_t v12 = -1LL << *(_BYTE *)(v5 + 32);
    unint64_t v13 = v11 & ~v12;
    uint64_t v14 = v13 >> 6;
    if (((1LL << v13) & *(void *)(v7 + 8 * (v13 >> 6))) != 0)
    {
      uint64_t v15 = *(void *)(v5 + 48);
      uint64_t v16 = (uint64_t *)(v15 + 16 * v13);
      uint64_t v17 = v16[1];
      BOOL v18 = *v16 == v10 && v17 == v9;
      if (v18 || (OUTLINED_FUNCTION_35_1(*v16, v17, v10) & 1) != 0)
      {
LABEL_11:
        uint64_t v2 = OUTLINED_FUNCTION_50();
        goto LABEL_22;
      }

      uint64_t v19 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v19;
        uint64_t v14 = v13 >> 6;
        if ((*(void *)(v7 + 8 * (v13 >> 6)) & (1LL << v13)) == 0) {
          break;
        }
        uint64_t v20 = (uint64_t *)(v15 + 16 * v13);
        uint64_t v21 = v20[1];
        BOOL v22 = *v20 == v10 && v21 == v9;
        if (v22 || (OUTLINED_FUNCTION_35_1(*v20, v21, v10) & 1) != 0) {
          goto LABEL_11;
        }
      }
    }

    OUTLINED_FUNCTION_77_2(v14);
    uint64_t v24 = (uint64_t *)(v23 + 16 * v13);
    *uint64_t v24 = v10;
    v24[1] = v9;
    OUTLINED_FUNCTION_59_2();
    if (v26) {
      goto LABEL_25;
    }
    *(void *)(v5 + ++*(void *)(v0 + 16) = v25;
LABEL_22:
    if (++v6 == v27) {
      goto LABEL_23;
    }
  }

  __break(1u);
LABEL_25:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  OUTLINED_FUNCTION_89_1();
  if (!v1
    || (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<AppAndDeviceRestriction.AppCategory>),
        uint64_t v5 = OUTLINED_FUNCTION_11_7(),
        (unint64_t v6 = *(void *)(v0 + 16)) == 0))
  {
LABEL_13:
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_33_1();
    return;
  }

  OUTLINED_FUNCTION_74();
  while (v2 < *(void *)(v0 + 16))
  {
    uint64_t v8 = *(unsigned __int8 *)(v4 + v2);
    uint64_t v9 = OUTLINED_FUNCTION_108(v7);
    OUTLINED_FUNCTION_92_1(v9, v10, v11, v12, v13, v14, v15, v16, v25, v26);
    Hasher._finalize()();
    OUTLINED_FUNCTION_41_3();
    if (!v22)
    {
      while (1)
      {
        OUTLINED_FUNCTION_53_1();
        if (v22) {
          break;
        }
      }
    }

    *(void *)(v3 + 8 * v1__swift_destroy_boxed_opaque_existential_1(v0 + 9) = v21 | v20;
    *(_BYTE *)(v18 + PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = v8;
    OUTLINED_FUNCTION_59_2();
    if (v24) {
      goto LABEL_15;
    }
    *(void *)(v5 + ++*(void *)(v0 + 16) = v23;
LABEL_12:
    if (++v2 == v6) {
      goto LABEL_13;
    }
  }

  __break(1u);
LABEL_15:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  OUTLINED_FUNCTION_89_1();
  if (!v1
    || (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<INSiriAuthorizationStatus>),
        uint64_t v5 = OUTLINED_FUNCTION_11_7(),
        (unint64_t v6 = *(void *)(v0 + 16)) == 0))
  {
LABEL_13:
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_33_1();
    return;
  }

  OUTLINED_FUNCTION_74();
  while (v2 < *(void *)(v0 + 16))
  {
    uint64_t v8 = *(void *)(v4 + 8 * v2);
    uint64_t v9 = OUTLINED_FUNCTION_108(v7);
    OUTLINED_FUNCTION_92_1(v9, v10, v11, v12, v13, v14, v15, v16, v25, v26);
    Hasher._finalize()();
    OUTLINED_FUNCTION_41_3();
    if (!v22)
    {
      if (*(void *)(v18 + 8 * v17) == v8) {
        goto LABEL_12;
      }
      while (1)
      {
        OUTLINED_FUNCTION_53_1();
        if (v22) {
          break;
        }
        if (*(void *)(v18 + 8 * v17) == v8) {
          goto LABEL_12;
        }
      }
    }

    *(void *)(v3 + 8 * v1__swift_destroy_boxed_opaque_existential_1(v0 + 9) = v21 | v20;
    *(void *)(v18 + 8 * PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = v8;
    OUTLINED_FUNCTION_59_2();
    if (v24) {
      goto LABEL_15;
    }
    *(void *)(v5 + ++*(void *)(v0 + 16) = v23;
LABEL_12:
    if (++v2 == v6) {
      goto LABEL_13;
    }
  }

  __break(1u);
LABEL_15:
  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v31 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v26 - v5;
  if (*(void *)(v1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<SiriKitReliabilityCodes>),
        uint64_t v7 = OUTLINED_FUNCTION_11_7(),
        uint64_t v8 = v7,
        (uint64_t v28 = *(void *)(v1 + 16)) != 0))
  {
    uint64_t v9 = 0LL;
    uint64_t v30 = v7 + 56;
    uint64_t v10 = *(unsigned __int8 *)(v31 + 80);
    char v26 = v1;
    uint64_t v27 = v1 + ((v10 + 32) & ~v10);
    while (v9 < *(void *)(v1 + 16))
    {
      Swift::Int v11 = *(void *)(v31 + 72);
      uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      v12(v6, v27 + v11 * v9, v2);
      unint64_t v13 = *(void *)(v8 + 40);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SiriKitReliabilityCodes and conformance SiriKitReliabilityCodes,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriKitReliabilityCodes);
      uint64_t v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v13, v2, v14) & ~(-1LL << *(_BYTE *)(v8 + 32));
      OUTLINED_FUNCTION_69_2();
      if ((v18 & v17) != 0)
      {
        uint64_t v29 = v9;
        uint64_t v20 = ~v19;
        while (1)
        {
          v12(v4, *(void *)(v8 + 48) + v15 * v11, v2);
          lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SiriKitReliabilityCodes and conformance SiriKitReliabilityCodes,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriKitReliabilityCodes);
          uint64_t v21 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v6, v2);
          BOOL v22 = *(void (**)(char *, uint64_t))(v31 + 8);
          v22(v4, v2);
          if ((v21 & 1) != 0) {
            break;
          }
          uint64_t v15 = (v15 + 1) & v20;
          OUTLINED_FUNCTION_69_2();
          if ((v17 & v18) == 0)
          {
            uint64_t v1 = v26;
            uint64_t v9 = v29;
            goto LABEL_10;
          }
        }

        v22(v6, v2);
        uint64_t v1 = v26;
        uint64_t v9 = v29;
      }

      else
      {
LABEL_10:
        *(void *)(v30 + 8 * v++*(void *)(v0 + 16) = v18 | v17;
        (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(*(void *)(v8 + 48) + v15 * v11, v6, v2);
        uint64_t v23 = *(void *)(v8 + 16);
        uint64_t v24 = __OFADD__(v23, 1LL);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_16;
        }
        *(void *)(v8 + ++*(void *)(v0 + 16) = v25;
      }

      if (++v9 == v28) {
        goto LABEL_14;
      }
    }

    __break(1u);
LABEL_16:
    __break(1u);
  }

  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_5();
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void v58[10];
  OUTLINED_FUNCTION_29_2();
  uint64_t v2 = v1;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v3 = OUTLINED_FUNCTION_22_5();
  uint64_t v4 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(v3);
  uint64_t v54 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v52 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v47 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)
                  - 8);
  __chkstk_darwin();
  uint64_t v55 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v42 - v7;
  __chkstk_darwin();
  uint64_t v46 = (char *)&v42 - v9;
  __chkstk_darwin();
  Swift::Int v11 = (char *)&v42 - v10;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?>);
  uint64_t v12 = OUTLINED_FUNCTION_11_7();
  unint64_t v13 = v12;
  uint64_t v45 = *(void *)(v2 + 16);
  if (!v45) {
    goto LABEL_24;
  }
  uint64_t v14 = 0LL;
  uint64_t v15 = v12 + 56;
  uint64_t v44 = v2 + ((*(unsigned __int8 *)(v47 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
  uint64_t v16 = &demangling cache variable for type metadata for (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  uint64_t v43 = v2;
  uint64_t v17 = (uint64_t)v46;
  uint64_t v50 = v8;
  uint64_t v51 = v12 + 56;
  uint64_t v49 = v11;
  while (1)
  {
    if (v14 >= *(void *)(v2 + 16))
    {
      __break(1u);
      goto LABEL_26;
    }

    BOOL v18 = *(void *)(v47 + 72);
    uint64_t v48 = v14;
    outlined init with copy of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?(v44 + v18 * v14, (uint64_t)v11);
    Hasher.init(_seed:)(v58, *(void *)(v13 + 40));
    OUTLINED_FUNCTION_97_2();
    OUTLINED_FUNCTION_34_5(v17);
    BOOL v53 = v18;
    if (v29)
    {
      Hasher._combine(_:)(0);
    }

    else
    {
      uint64_t v19 = v54;
      uint64_t v20 = v52;
      OUTLINED_FUNCTION_86_0(v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32));
      Hasher._combine(_:)(1u);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
      dispatch thunk of Hashable.hash(into:)(v58, v4, v21);
      BOOL v22 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      BOOL v18 = v53;
      uint64_t v15 = v51;
      v22(v20, v4);
    }

    uint64_t v23 = Hasher._finalize()();
    uint64_t v57 = ~(-1LL << *(_BYTE *)(v13 + 32));
    uint64_t v24 = v23 & v57;
    OUTLINED_FUNCTION_95_0();
    if ((v27 & v26) == 0) {
      break;
    }
    while (1)
    {
      outlined init with copy of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?( *(void *)(v13 + 48) + v24 * v18,  (uint64_t)v8);
      uint64_t v28 = v0 + *(int *)(v56 + 48);
      outlined init with copy of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?((uint64_t)v8, v0);
      OUTLINED_FUNCTION_97_2();
      OUTLINED_FUNCTION_34_5(v0);
      if (v29) {
        break;
      }
      outlined init with copy of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?(v0, v55);
      OUTLINED_FUNCTION_34_5(v28);
      if (v29)
      {
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v4);
LABEL_17:
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  v16);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v8,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
        goto LABEL_19;
      }

      uint64_t v30 = v54;
      uint64_t v31 = v13;
      uint64_t v32 = v55;
      BOOL v33 = v52;
      OUTLINED_FUNCTION_86_0(v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32));
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
      uint64_t v34 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v33, v4);
      uint64_t v35 = v16;
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      uint64_t v37 = v33;
      uint64_t v38 = v32;
      unint64_t v13 = v31;
      Swift::Int v11 = v49;
      uint64_t v8 = v50;
      v36(v37, v4);
      v36(v38, v4);
      uint64_t v15 = v51;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      uint64_t v16 = v35;
      BOOL v18 = v53;
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v8,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
      if ((v34 & 1) != 0) {
        goto LABEL_22;
      }
LABEL_19:
      uint64_t v24 = (v24 + 1) & v57;
      OUTLINED_FUNCTION_95_0();
      if ((v26 & v27) == 0) {
        goto LABEL_20;
      }
    }

    OUTLINED_FUNCTION_34_5(v28);
    if (!v29) {
      goto LABEL_17;
    }
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v8,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
LABEL_22:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v11,  &demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
    uint64_t v17 = (uint64_t)v46;
LABEL_23:
    uint64_t v14 = v48 + 1;
    uint64_t v2 = v43;
    if (v48 + 1 == v45)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_5();
      return;
    }
  }

void *specialized Set.init(_nonEmptyArrayLiteral:)()
{
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<PhoneCallVerb>);
    uint64_t v2 = OUTLINED_FUNCTION_11_7();
    uint64_t v3 = (void *)v2;
    if (*(void *)(v0 + 16))
    {
      uint64_t v4 = *(unsigned __int8 *)(v0 + 32);
      Hasher.init(_seed:)(v6, *(void *)(v2 + 40));
      __asm { BR              X8 }
    }
  }

  else
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
  }

  OUTLINED_FUNCTION_39();
  return v3;
}

unint64_t lazy protocol witness table accessor for type FollowUpOfferType and conformance FollowUpOfferType()
{
  unint64_t result = lazy protocol witness table cache variable for type FollowUpOfferType and conformance FollowUpOfferType;
  if (!lazy protocol witness table cache variable for type FollowUpOfferType and conformance FollowUpOfferType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for FollowUpOfferType,  &type metadata for FollowUpOfferType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type FollowUpOfferType and conformance FollowUpOfferType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type FollowUpOfferType and conformance FollowUpOfferType;
  if (!lazy protocol witness table cache variable for type FollowUpOfferType and conformance FollowUpOfferType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for FollowUpOfferType,  &type metadata for FollowUpOfferType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type FollowUpOfferType and conformance FollowUpOfferType);
  }

  return result;
}

uint64_t sub_4E0FC()
{
  return swift_deallocObject(v0, 80LL, 7LL);
}

unint64_t lazy protocol witness table accessor for type SiriInCallFeature and conformance SiriInCallFeature()
{
  unint64_t result = lazy protocol witness table cache variable for type SiriInCallFeature and conformance SiriInCallFeature;
  if (!lazy protocol witness table cache variable for type SiriInCallFeature and conformance SiriInCallFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SiriInCallFeature,  &type metadata for SiriInCallFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SiriInCallFeature and conformance SiriInCallFeature);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SiriInCallFeature and conformance SiriInCallFeature;
  if (!lazy protocol witness table cache variable for type SiriInCallFeature and conformance SiriInCallFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SiriInCallFeature,  &type metadata for SiriInCallFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SiriInCallFeature and conformance SiriInCallFeature);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type TelephonyUtilitiesFeature and conformance TelephonyUtilitiesFeature()
{
  unint64_t result = lazy protocol witness table cache variable for type TelephonyUtilitiesFeature and conformance TelephonyUtilitiesFeature;
  if (!lazy protocol witness table cache variable for type TelephonyUtilitiesFeature and conformance TelephonyUtilitiesFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for TelephonyUtilitiesFeature,  &type metadata for TelephonyUtilitiesFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type TelephonyUtilitiesFeature and conformance TelephonyUtilitiesFeature);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type TelephonyUtilitiesFeature and conformance TelephonyUtilitiesFeature;
  if (!lazy protocol witness table cache variable for type TelephonyUtilitiesFeature and conformance TelephonyUtilitiesFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for TelephonyUtilitiesFeature,  &type metadata for TelephonyUtilitiesFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type TelephonyUtilitiesFeature and conformance TelephonyUtilitiesFeature);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type IDSFeature and conformance IDSFeature()
{
  unint64_t result = lazy protocol witness table cache variable for type IDSFeature and conformance IDSFeature;
  if (!lazy protocol witness table cache variable for type IDSFeature and conformance IDSFeature)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IDSFeature, &type metadata for IDSFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IDSFeature and conformance IDSFeature);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type IDSFeature and conformance IDSFeature;
  if (!lazy protocol witness table cache variable for type IDSFeature and conformance IDSFeature)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IDSFeature, &type metadata for IDSFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IDSFeature and conformance IDSFeature);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type SiriPhoneFeature and conformance SiriPhoneFeature()
{
  unint64_t result = lazy protocol witness table cache variable for type SiriPhoneFeature and conformance SiriPhoneFeature;
  if (!lazy protocol witness table cache variable for type SiriPhoneFeature and conformance SiriPhoneFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SiriPhoneFeature,  &type metadata for SiriPhoneFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SiriPhoneFeature and conformance SiriPhoneFeature);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SiriPhoneFeature and conformance SiriPhoneFeature;
  if (!lazy protocol witness table cache variable for type SiriPhoneFeature and conformance SiriPhoneFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SiriPhoneFeature,  &type metadata for SiriPhoneFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SiriPhoneFeature and conformance SiriPhoneFeature);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type SiriPlaybackControlFeature and conformance SiriPlaybackControlFeature()
{
  unint64_t result = lazy protocol witness table cache variable for type SiriPlaybackControlFeature and conformance SiriPlaybackControlFeature;
  if (!lazy protocol witness table cache variable for type SiriPlaybackControlFeature and conformance SiriPlaybackControlFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SiriPlaybackControlFeature,  &type metadata for SiriPlaybackControlFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SiriPlaybackControlFeature and conformance SiriPlaybackControlFeature);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SiriPlaybackControlFeature and conformance SiriPlaybackControlFeature;
  if (!lazy protocol witness table cache variable for type SiriPlaybackControlFeature and conformance SiriPlaybackControlFeature)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SiriPlaybackControlFeature,  &type metadata for SiriPlaybackControlFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SiriPlaybackControlFeature and conformance SiriPlaybackControlFeature);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PommesFeature and conformance PommesFeature()
{
  unint64_t result = lazy protocol witness table cache variable for type PommesFeature and conformance PommesFeature;
  if (!lazy protocol witness table cache variable for type PommesFeature and conformance PommesFeature)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PommesFeature, &type metadata for PommesFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PommesFeature and conformance PommesFeature);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PommesFeature and conformance PommesFeature;
  if (!lazy protocol witness table cache variable for type PommesFeature and conformance PommesFeature)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PommesFeature, &type metadata for PommesFeature);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PommesFeature and conformance PommesFeature);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type AppProtection and conformance AppProtection()
{
  unint64_t result = lazy protocol witness table cache variable for type AppProtection and conformance AppProtection;
  if (!lazy protocol witness table cache variable for type AppProtection and conformance AppProtection)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppProtection, &type metadata for AppProtection);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppProtection and conformance AppProtection);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppProtection and conformance AppProtection;
  if (!lazy protocol witness table cache variable for type AppProtection and conformance AppProtection)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppProtection, &type metadata for AppProtection);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppProtection and conformance AppProtection);
  }

  return result;
}

uint64_t sub_4E2D4()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 24));
  return swift_deallocObject(v0, 80LL, 7LL);
}

unint64_t lazy protocol witness table accessor for type [ContactQuery] and conformance <A> [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [ContactQuery] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [ContactQuery] and conformance <A> [A])
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [ContactQuery]);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ContactQuery and conformance ContactQuery,  (uint64_t (*)(uint64_t))&type metadata accessor for ContactQuery);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type [ContactQuery] and conformance <A> [A]);
  }

  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

void specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_39;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<OngoingCallOfferOptions>);
  uint64_t v2 = OUTLINED_FUNCTION_11_7();
  uint64_t v5 = v2;
  uint64_t v29 = *(void *)(v1 + 16);
  if (!v29) {
    goto LABEL_39;
  }
  unint64_t v6 = 0LL;
  uint64_t v7 = v2 + 56;
  uint64_t v27 = v1;
  uint64_t v28 = v1 + 32;
  while (1)
  {
    if (v6 >= *(void *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_41;
    }

    int v8 = *(unsigned __int8 *)(v28 + v6++);
    OUTLINED_FUNCTION_109_0(v2, v3, v4);
    uint64_t v9 = 0x654E646E41646E65LL;
    if (v8 != 1) {
      uint64_t v9 = 0x4E646E41646C6F68LL;
    }
    unint64_t v10 = 0xEE006C6C61437765LL;
    if (v8 == 1) {
      unint64_t v10 = 0xED00006C6C614377LL;
    }
    uint64_t v11 = v8 ? v9 : 6579297LL;
    unint64_t v12 = v8 ? v10 : 0xE300000000000000LL;
    String.hash(into:)(v30, v11, v12);
    OUTLINED_FUNCTION_62();
    Swift::Int v13 = Hasher._finalize()();
    uint64_t v14 = ~(-1LL << *(_BYTE *)(v5 + 32));
    unint64_t v15 = v13 & v14;
    unint64_t v16 = (v13 & (unint64_t)v14) >> 6;
    uint64_t v17 = *(void *)(v7 + 8 * v16);
    uint64_t v18 = 1LL << (v13 & v14);
    if ((v18 & v17) == 0) {
      break;
    }
    while (1)
    {
      if (*(_BYTE *)(*(void *)(v5 + 48) + v15))
      {
        if (*(_BYTE *)(*(void *)(v5 + 48) + v15) == 1)
        {
          uint64_t v19 = 0x654E646E41646E65LL;
          uint64_t v20 = 0xED00006C6C614377LL;
          if (!v8) {
            goto LABEL_28;
          }
        }

        else
        {
          uint64_t v19 = 0x4E646E41646C6F68LL;
          uint64_t v20 = 0xEE006C6C61437765LL;
          if (!v8)
          {
LABEL_28:
            unint64_t v22 = 0xE300000000000000LL;
            uint64_t v21 = 6579297LL;
            goto LABEL_29;
          }
        }
      }

      else
      {
        uint64_t v20 = 0xE300000000000000LL;
        uint64_t v19 = 6579297LL;
        if (!v8) {
          goto LABEL_28;
        }
      }

      uint64_t v21 = v8 == 1 ? 0x654E646E41646E65LL : 0x4E646E41646C6F68LL;
      unint64_t v22 = v8 == 1 ? 0xED00006C6C614377LL : 0xEE006C6C61437765LL;
LABEL_29:
      if (v19 == v21 && v20 == v22) {
        break;
      }
      char v24 = OUTLINED_FUNCTION_35_1(v19, v20, v21);
      OUTLINED_FUNCTION_62();
      uint64_t v2 = OUTLINED_FUNCTION_50();
      if ((v24 & 1) != 0) {
        goto LABEL_38;
      }
      unint64_t v15 = (v15 + 1) & v14;
      unint64_t v16 = v15 >> 6;
      uint64_t v17 = *(void *)(v7 + 8 * (v15 >> 6));
      uint64_t v18 = 1LL << v15;
      if ((v17 & (1LL << v15)) == 0) {
        goto LABEL_35;
      }
    }

    uint64_t v2 = OUTLINED_FUNCTION_98_1();
LABEL_38:
    uint64_t v1 = v27;
    if (v6 == v29)
    {
LABEL_39:
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_38_5();
      return;
    }
  }

unint64_t lazy protocol witness table accessor for type TemplatingOperationType and conformance TemplatingOperationType()
{
  unint64_t result = lazy protocol witness table cache variable for type TemplatingOperationType and conformance TemplatingOperationType;
  if (!lazy protocol witness table cache variable for type TemplatingOperationType and conformance TemplatingOperationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for TemplatingOperationType,  &type metadata for TemplatingOperationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type TemplatingOperationType and conformance TemplatingOperationType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type TemplatingOperationType and conformance TemplatingOperationType;
  if (!lazy protocol witness table cache variable for type TemplatingOperationType and conformance TemplatingOperationType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for TemplatingOperationType,  &type metadata for TemplatingOperationType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type TemplatingOperationType and conformance TemplatingOperationType);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType()
{
  unint64_t result = lazy protocol witness table cache variable for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType;
  if (!lazy protocol witness table cache variable for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SharedConfirmationRepromptContext.PromptType,  &type metadata for SharedConfirmationRepromptContext.PromptType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType;
  if (!lazy protocol witness table cache variable for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SharedConfirmationRepromptContext.PromptType,  &type metadata for SharedConfirmationRepromptContext.PromptType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType);
  }

  return result;
}

void type metadata accessor for TUHandleType(uint64_t a1)
{
}

void type metadata accessor for INResolutionResultCode(uint64_t a1)
{
}

void type metadata accessor for FLOWSchemaFLOWDomainExecutionType(uint64_t a1)
{
}

void type metadata accessor for SKIPhoneDropInAnnouncementType(uint64_t a1)
{
}

void type metadata accessor for AFCallState(uint64_t a1)
{
}

void type metadata accessor for INPersonHandleEmergencyType(uint64_t a1)
{
}

void type metadata accessor for INStartCallIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for INIntentSlotValueType(uint64_t a1)
{
}

void type metadata accessor for INCallRecordType(uint64_t a1)
{
}

void type metadata accessor for TUCallStatus(uint64_t a1)
{
}

void type metadata accessor for INFERENCESchemaINFERENCEAppSelectionUserPersona(uint64_t a1)
{
}

void base witness table accessor for Equatable in AFCallState()
{
}

void base witness table accessor for ExpressibleByArrayLiteral in AFCallState()
{
}

void base witness table accessor for RawRepresentable in AFCallState()
{
}

void base witness table accessor for SetAlgebra in AFCallState()
{
}

void base witness table accessor for Equatable in INIntentSlotValueType()
{
}

void *specialized Set.init(_nonEmptyArrayLiteral:)(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_24;
  }
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<App>);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_11_7();
  if (v2)
  {
    while (1)
    {
      OUTLINED_FUNCTION_51_2();
      unint64_t v2 = OUTLINED_FUNCTION_61_1();
      OUTLINED_FUNCTION_50();
      if (!v2) {
        break;
      }
LABEL_5:
      unint64_t v4 = 0LL;
      uint64_t v5 = (char *)(v3 + 7);
      unint64_t v21 = v1;
      unint64_t v22 = v1 & 0xC000000000000001LL;
      uint64_t v19 = v1 & 0xFFFFFFFFFFFFFF8LL;
      unint64_t v20 = v2;
      while (1)
      {
        if (v22)
        {
          uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v21);
        }

        else
        {
          if (v4 >= *(void *)(v19 + 16)) {
            goto LABEL_23;
          }
          uint64_t v6 = swift_retain();
        }

        BOOL v7 = __OFADD__(v4++, 1LL);
        if (v7) {
          break;
        }
        uint64_t v23 = v6;
        uint64_t v25 = v6;
        uint64_t v8 = v3[5];
        uint64_t v9 = type metadata accessor for App(0LL);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App);
        uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)(v8, v9, v10);
        uint64_t v12 = -1LL << *((_BYTE *)v3 + 32);
        unint64_t v1 = v11 & ~v12;
        uint64_t v13 = v1 >> 6;
        if (((1LL << v1) & *(void *)&v5[8 * (v1 >> 6)]) != 0)
        {
          uint64_t v14 = ~v12;
          lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App);
          while (1)
          {
            uint64_t v24 = *(void *)(v3[6] + 8 * v1);
            if ((dispatch thunk of static Equatable.== infix(_:_:)(&v24, &v25, v9) & 1) != 0) {
              break;
            }
            unint64_t v1 = (v1 + 1) & v14;
            uint64_t v13 = v1 >> 6;
            if ((*(void *)&v5[8 * (v1 >> 6)] & (1LL << v1)) == 0)
            {
              unint64_t v2 = v20;
              goto LABEL_16;
            }
          }

          swift_release(v23);
          unint64_t v2 = v20;
        }

        else
        {
LABEL_16:
          OUTLINED_FUNCTION_77_2(v13);
          *(void *)(v15 + 8 * outlined destroy of CommonDirectAction(v0, v1) = v23;
          OUTLINED_FUNCTION_59_2();
          if (v7) {
            goto LABEL_22;
          }
          v3[2] = v16;
        }

        if (v4 == v2) {
          goto LABEL_27;
        }
      }

      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      OUTLINED_FUNCTION_51_2();
      uint64_t v17 = OUTLINED_FUNCTION_61_1();
      OUTLINED_FUNCTION_50();
      if (v17) {
        goto LABEL_3;
      }
LABEL_25:
      uint64_t v3 = &_swiftEmptySetSingleton;
      if (!v2) {
        goto LABEL_4;
      }
    }
  }

  else
  {
LABEL_4:
    unint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
    if (v2) {
      goto LABEL_5;
    }
  }

LABEL_27:
  swift_bridgeObjectRelease();
  return v3;
}

  HIDWORD(v6__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
LABEL_28:
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_1_38(v31, 1LL);
  if ((v63 & 1) == 0)
  {
    SpeakableString.init(print:speak:)( 0x747369486C6C6163LL,  0xEB0000000079726FLL,  0x747369486C6C6163LL,  0xEB0000000079726FLL);
    outlined destroy of SpeakableString?(v31, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_1_38((uint64_t)v29, 0LL);
    outlined init with take of SpeakableString?((uint64_t)v29, v31);
  }

  uint64_t v64 = (void *)v64[5];
  uint64_t v63 = (*(uint64_t (**)(uint64_t))(*(void *)(v22 + 16) + 8LL))(a21);
  OUTLINED_FUNCTION_18_22();
  static Device.current.getter(v70);
  uint64_t v50 = v71;
  uint64_t v49 = v72;
  __swift_project_boxed_opaque_existential_1(v70, v71);
  uint64_t v51 = v27;
  dispatch thunk of DeviceState.siriLocale.getter(v50, v49);
  __swift_destroy_boxed_opaque_existential_1(v70);
  static PhonePerson.make(phonePerson:options:locale:)(v34, 0, v27);
  BOOL v53 = v52;
  uint64_t v54 = v34;
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  uint64_t v56 = v27;
  uint64_t v57 = v67;
  v55(v56, v67);
  static Device.current.getter(v70);
  uint64_t v58 = v71;
  uint64_t v59 = v72;
  __swift_project_boxed_opaque_existential_1(v70, v71);
  dispatch thunk of DeviceState.siriLocale.getter(v58, v59);
  __swift_destroy_boxed_opaque_existential_1(v70);
  static PhonePerson.make(phonePerson:options:locale:)(v54, 0, v51);
  char v61 = v60;
  v55(v51, v57);
  (*(void (**)(BOOL, uint64_t, uint64_t, BOOL, void, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                          + *v64
                                                                                          + 64))( v63 == 2,  v53,  v61,  (v66 & 0xFFFFFFFFFFFFFFFELL) == 2,  HIDWORD(v62),  v31,  v68,  v69);
  swift_release(v53);
  OUTLINED_FUNCTION_76();

  outlined destroy of SpeakableString?(v31, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

  swift_bridgeObjectRelease_n(v4, 2LL);
  return 1LL;
}

  swift_bridgeObjectRelease_n(v42, 2LL);
  uint64_t v48 = v116;
  uint64_t v49 = (uint64_t)v116[3];
  uint64_t v50 = v116[4];
  __swift_project_boxed_opaque_existential_1(v116, v49);
  uint64_t v51 = ((uint64_t (*)(uint64_t, __objc2_prop_list *))v50[14])(v49, v50);
  if (v51)
  {
    uint64_t v52 = v51;
    BOOL v53 = (uint64_t)v124;
    CurrentRequest.responseMode.getter();
    swift_release(v52);
    uint64_t v54 = 0LL;
    uint64_t v56 = (uint64_t)v126;
    uint64_t v55 = v127;
  }

  else
  {
    uint64_t v54 = 1LL;
    uint64_t v56 = (uint64_t)v126;
    uint64_t v55 = v127;
    BOOL v53 = (uint64_t)v124;
  }

  uint64_t v57 = (uint64_t)v125;
  uint64_t v58 = (uint64_t)v123;
  uint64_t v59 = v115;
  uint64_t v60 = __swift_storeEnumTagSinglePayload(v53, v54, 1LL, v55);
  static ResponseMode.voiceOnly.getter(v60);
  __swift_storeEnumTagSinglePayload(v58, 0LL, 1LL, v55);
  char v61 = v56 + *(int *)(v59 + 48);
  outlined init with copy of ResponseMode?(v53, v56);
  outlined init with copy of ResponseMode?(v58, v61);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v56, 1LL, v55);
  uint64_t v63 = v120;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v58,  &demangling cache variable for type metadata for ResponseMode?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v53,  &demangling cache variable for type metadata for ResponseMode?);
    if (__swift_getEnumTagSinglePayload(v61, 1LL, v55) == 1)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v56,  &demangling cache variable for type metadata for ResponseMode?);
      goto LABEL_39;
    }

    goto LABEL_35;
  }

  outlined init with copy of ResponseMode?(v56, v57);
  if (__swift_getEnumTagSinglePayload(v61, 1LL, v55) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v58,  &demangling cache variable for type metadata for ResponseMode?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v53,  &demangling cache variable for type metadata for ResponseMode?);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v57, v55);
LABEL_35:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v56,  &demangling cache variable for type metadata for (ResponseMode?, ResponseMode?));
LABEL_43:
    uint64_t v94 = (uint64_t)v48[3];
    uint64_t v95 = v48[4];
    __swift_project_boxed_opaque_existential_1(v48, v94);
    ((void (*)(uint64_t *__return_ptr, uint64_t, __objc2_prop_list *))v95[13])(&v129, v94, v95);
    uint64_t v96 = v131;
    uint64_t v97 = v132;
    __swift_project_boxed_opaque_existential_1(&v129, v131);
    type metadata accessor for StartCallCATsSimple(0LL);
    uint64_t v98 = v121;
    uint64_t v99 = swift_retain();
    uint64_t v100 = v114;
    static CATOption.defaultMode.getter(v99);
    uint64_t v101 = CATWrapperSimple.__allocating_init(options:globals:)(v100, 0LL);
    uint64_t v102 = type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
    static CATOption.defaultMode.getter(v102);
    uint64_t v103 = CATWrapperSimple.__allocating_init(options:globals:)(v100, 0LL);
    uint64_t v104 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
    swift_allocObject(v104, 41LL, 7LL);
    unint64_t v105 = StartCallConfirmIntentFlowStrategy.init(delegate:startCallCATsSimple:displayTextCATsSimple:)(v98, v101, v103);
    uint64_t v128 = v105;
    uint64_t v106 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 16);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartCallConfirmIntentFlowStrategy and conformance StartCallConfirmIntentFlowStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for StartCallConfirmIntentFlowStrategy);
    uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t))v106(&v128, v104, v107, v96, v97);
    uint64_t v110 = v109;
    swift_release(v105);
    uint64_t v39 = v108(v122, v63);
    swift_release(v110);
    __swift_destroy_boxed_opaque_existential_1(&v129);
    return v39;
  }

  uint64_t v70 = v58;
  uint64_t v72 = v118;
  uint64_t v71 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v118, v61, v55);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type ResponseMode and conformance ResponseMode,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode);
  uint64_t v73 = dispatch thunk of static Equatable.== infix(_:_:)(v57, v72, v55);
  uint64_t v74 = *(void (**)(char *, uint64_t))(v71 + 8);
  v74(v72, v55);
  uint64_t v75 = v70;
  uint64_t v63 = v120;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v75,  &demangling cache variable for type metadata for ResponseMode?);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v53,  &demangling cache variable for type metadata for ResponseMode?);
  v74((char *)v57, v55);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v56,  &demangling cache variable for type metadata for ResponseMode?);
  if ((v73 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v76 = (void *)IntentResolutionRecord.intent.getter(v117);
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v76, 0LL);
  uint64_t v78 = v77;

  if ((v78 & 1) == 0) {
    goto LABEL_43;
  }
  uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
  uint64_t v82 = static os_log_type_t.debug.getter(v80, v81);
  if (os_log_type_enabled(v80, v82))
  {
    uint64_t v83 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v83 = 0;
    _os_log_impl( &dword_0,  v80,  v82,  "#PhoneCallFlowFactory making confirmation producer for voice only emergency call request",  v83,  2u);
    swift_slowDealloc(v83, -1LL, -1LL);
  }

  outlined init with copy of SharedGlobalsProviding((uint64_t)v48, (uint64_t)&v129);
  uint64_t v84 = (void *)IntentResolutionRecord.intent.getter(v117);
  uint64_t v85 = type metadata accessor for StartCallCATsSimple(0LL);
  uint64_t v86 = v114;
  static CATOption.defaultMode.getter(v85);
  uint64_t v87 = CATWrapperSimple.__allocating_init(options:globals:)(v86, 0LL);
  uint64_t v88 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v88);
  uint64_t v89 = CATWrapperSimple.__allocating_init(options:globals:)(v86, 0LL);
  unint64_t v90 = type metadata accessor for VoiceOnlyEmergencyConfirmationFlow();
  swift_allocObject(v90, 82LL, 7LL);
  uint64_t v129 = VoiceOnlyEmergencyConfirmationFlow.init(sharedGlobals:skIntent:startCallCATsSimple:phoneCallCommonCATsSimple:)( &v129,  v84,  v87,  v89);
  unint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  swift_allocObject(v91, *(unsigned int *)(v91 + 48), *(unsigned __int16 *)(v91 + 52));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type VoiceOnlyEmergencyConfirmationFlow and conformance VoiceOnlyEmergencyConfirmationFlow,  (uint64_t (*)(uint64_t))type metadata accessor for VoiceOnlyEmergencyConfirmationFlow);
  uint64_t v93 = AnyConfirmIntentFlow.init<A>(_:)(&v129, v90, v92);
  uint64_t v129 = v93;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyConfirmIntentFlow<INStartCallIntent> and conformance AnyConfirmIntentFlow<A>,  &demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  uint64_t v39 = Flow.eraseToAnyValueFlow()(v91);
  swift_release(v93);
  return v39;
}

  (*(void (**)(char *, uint64_t))(v24 + 8))(v50, v51);
  OUTLINED_FUNCTION_7_5();
}

  OUTLINED_FUNCTION_1_6();
}

      if (!v44)
      {
        uint64_t v49 = v120;
        goto LABEL_32;
      }

      uint64_t v49 = v120;
LABEL_29:
      OUTLINED_FUNCTION_14_44(v49[10]);
      uint64_t v50 = v110;
      if ((v111 & 1) != 0) {
        goto LABEL_34;
      }
LABEL_37:
      if (!(_DWORD)v113)
      {
        uint64_t v51 = (int)v112;
        goto LABEL_43;
      }

      OUTLINED_FUNCTION_23_35();
      uint64_t v51 = (int)v112;
LABEL_39:
      OUTLINED_FUNCTION_14_44(v49[12]);
      if ((v48 & 1) != 0) {
        goto LABEL_44;
      }
      goto LABEL_40;
    }

    goto LABEL_23;
  }

  uint64_t v8 = v9;
LABEL_59:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)v16, (v14 - (char *)v16) / 16, v8);
  swift_bridgeObjectRelease();
  return 1LL;
}

  swift_bridgeObjectRelease();
  return 1LL;
}

      OUTLINED_FUNCTION_31_1(v13);
      goto LABEL_28;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    unint64_t v20 = (os_log_s *)v0[19];
    unint64_t v21 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_205_4((uint64_t)v20);
    OUTLINED_FUNCTION_91_13();
    unint64_t v22 = OUTLINED_FUNCTION_6_0();
    uint64_t v23 = OUTLINED_FUNCTION_35_12(v22);
    uint64_t v24 = (void *)v0[19];
    if (!v23)
    {
      OUTLINED_FUNCTION_204_2(v0[19]);
      goto LABEL_30;
    }

    LOBYTE(v9__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v22;
    uint64_t v98 = v20;
    uint64_t v99 = (uint64_t)(v0 + 14);
    uint64_t v101 = v0;
    uint64_t v94 = (uint64_t)(v0 + 13);
    uint64_t v95 = v0 + 10;
    uint64_t v25 = v0 + 12;
    char v26 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v96 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v103 = v96;
    uint64_t v104 = 0LL;
    *(_DWORD *)char v26 = 136315394;
    uint64_t v28 = v24[44];
    uint64_t v27 = v24[45];
    uint64_t v29 = v3;
    uint64_t v30 = v24[46];
    unint64_t v105 = 0xE000000000000000LL;
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_128();
    OUTLINED_FUNCTION_235_1(v28, v27, v30);
    unint64_t v1 = v94;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_0();
    char *v25 = OUTLINED_FUNCTION_10_3(v104, v31, &v103);
    OUTLINED_FUNCTION_87_1((uint64_t)v25, v94, v32, v26 + 12);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_31_1((uint64_t)v24);
    *(_WORD *)(v26 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    BOOL v33 = *(void *)(v29 + 16);
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v33 & 0xC000000000000001LL) == 0, v33);
    if ((v33 & 0xC000000000000001LL) == 0)
    {
      uint64_t v34 = *(void *)(v33 + 32);
      swift_retain();
LABEL_17:
      uint64_t v0 = v101;
      uint64_t v35 = v101[19];
      uint64_t v36 = App.appIdentifier.getter();
      uint64_t v38 = v37;
      swift_release(v34);
      v101[10] = v36;
      v101[11] = v38;
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v40 = String.init<A>(describing:)(v95, v39);
      v101[13] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &v103);
      OUTLINED_FUNCTION_161_4(v1, v99, v42, v26 + 22);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1(v35);
      unint64_t v20 = v98;
      OUTLINED_FUNCTION_33_6( &dword_0,  v98,  (os_log_type_t)v97,  "%s executeForceAppDisambiguate: Found a single app '%s'. Skipping Forced App disambiguation..",  (uint8_t *)v26);
      OUTLINED_FUNCTION_42_2(v96);
      OUTLINED_FUNCTION_0_2(v96);
      OUTLINED_FUNCTION_0_2(v26);
LABEL_30:

      goto LABEL_50;
    }

    BOOL v7 = (v12 - 1) & v12;
    uint64_t v38 = v13;
  }

  uint64_t v17 = v16 + 4;
  if (v17 >= v37) {
    return;
  }
  uint64_t v12 = *(void *)(v36 + 8 * v17);
  if (v12)
  {
    uint64_t v13 = v17;
    goto LABEL_27;
  }

  while (!__OFADD__(v17, 1LL))
  {
    OUTLINED_FUNCTION_12_77();
    if (v14 == v15) {
      return;
    }
    OUTLINED_FUNCTION_11_75();
    uint64_t v17 = v18 + 1;
    if (v12) {
      goto LABEL_27;
    }
  }

  OUTLINED_FUNCTION_7_5();
  return result;
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v20 & 0xC000000000000001LL) == 0, v20);
  if ((v20 & 0xC000000000000001LL) != 0)
  {
    unint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v20);
  }

  else
  {
    unint64_t v21 = *(void *)(v20 + 32);
    swift_retain();
  }

  swift_bridgeObjectRelease();
  uint64_t v15 = static Transformer<>.toPhoneCallAudioRoute(phoneCallAttribute:)();
  swift_release(v21);
  swift_release(v16);
LABEL_34:
  *a2 = v15;
  Signpost.OpenSignpost.end()();
  return swift_release(v5);
}

  OUTLINED_FUNCTION_7_5();
}

        OUTLINED_FUNCTION_129();
        goto LABEL_28;
      }

      if (!v14) {
        goto LABEL_27;
      }
      if (v8 == v13 && v10 == v14)
      {

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_129();
        return v5;
      }

      uint64_t v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v13, v14, 0LL);

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_129();
      if ((v16 & 1) != 0)
      {

        return v5;
      }

void specialized RawRepresentable<>.hash(into:)(int a1, Swift::UInt a2)
{
}

uint64_t specialized _SwiftNewtypeWrapper<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  uint64_t v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, Swift::UInt a2)
{
  return Hasher._finalize()();
}

Swift::Int specialized _SwiftNewtypeWrapper<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  uint64_t v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  Swift::Int v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

BOOL static OneTimeHintHistory.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t specialized == infix<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v3 == v6 && v5 == v7)
  {
    char v10 = 1;
    uint64_t v9 = v5;
  }

  else
  {
    uint64_t v9 = v7;
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0LL);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

{
  return specialized == infix<A>(_:_:)( a1,  a2,  (uint64_t (*)(uint64_t))&type metadata accessor for ContactActionType,  &lazy protocol witness table cache variable for type ContactActionType and conformance ContactActionType,  (uint64_t)&protocol conformance descriptor for ContactActionType);
}

{
  return specialized == infix<A>(_:_:)( a1,  a2,  (uint64_t (*)(uint64_t))&type metadata accessor for InteractionType,  &lazy protocol witness table cache variable for type InteractionType and conformance InteractionType,  (uint64_t)&protocol conformance descriptor for InteractionType);
}

{
  return specialized == infix<A>(_:_:)( a1,  a2,  (uint64_t (*)(uint64_t))&type metadata accessor for InputOrigin,  &lazy protocol witness table cache variable for type InputOrigin and conformance InputOrigin,  (uint64_t)&protocol conformance descriptor for InputOrigin);
}

{
  return specialized == infix<A>(_:_:)( a1,  a2,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  &lazy protocol witness table cache variable for type UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues and conformance UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues);
}

{
  return specialized == infix<A>(_:_:)( a1,  a2,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues,  &lazy protocol witness table cache variable for type UsoEntity_common_PhoneCallMode.DefinedValues and conformance UsoEntity_common_PhoneCallMode.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_PhoneCallMode.DefinedValues);
}

uint64_t specialized static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, id *a2)
{
  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  uint64_t v5 = v8;
  if (v8)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    uint64_t result = swift_bridgeObjectRelease(v5);
  }

  else
  {
    NSString v6 = 0LL;
  }

  *a2 = v6;
  return result;
}

uint64_t specialized static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)( uint64_t a1, id *a2)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  char v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  uint64_t v5 = v9;
  if (v9)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    NSString v6 = 0LL;
  }

  *a2 = v6;
  return v4 & 1;
}

NSString specialized static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  return v3;
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(Swift::UInt a1)
{
  return Hasher._finalize()();
}

uint64_t outlined init with copy of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void type metadata accessor for INPersonHandleType(uint64_t a1)
{
}

void type metadata accessor for INPersonHandleLabel(uint64_t a1)
{
}

void type metadata accessor for INAddCallParticipantParticipantUnsupportedReason(uint64_t a1)
{
}

void type metadata accessor for INPersonHandleFaceTimeType(uint64_t a1)
{
}

void type metadata accessor for INSiriAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for TUHandleType(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, a3);
    if (!v5) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }

void base witness table accessor for Equatable in INSiriAuthorizationStatus()
{
}

void base witness table accessor for RawRepresentable in INPersonHandleLabel()
{
}

void base witness table accessor for _HasCustomAnyHashableRepresentation in INPersonHandleLabel()
{
}

void base witness table accessor for Equatable in INPersonHandleLabel()
{
}

void specialized _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  a2(v3);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_2();
}

uint64_t default argument 1 of ContactDonationInfo.init(thirdPartyAppId:contactInNumberOfThirdPartyApps:contactExistsInFirstParty:)()
{
  return 0LL;
}

uint64_t AnnounceVoicemailDirectAction.CodingKeys.intValue.getter()
{
  return 0LL;
}

uint64_t CallingIntentContinueInAppStrategy.requireUnlock(intentResolutionRecord:)()
{
  return 0LL;
}

void OUTLINED_FUNCTION_9_5(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return static _SetStorage.allocate(capacity:)(v0);
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  return v0(0LL);
}

uint64_t OUTLINED_FUNCTION_18_4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, 11LL, 2LL, a4, 36LL, 2LL, a7, 17LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return 0LL;
}

void OUTLINED_FUNCTION_24_2()
{
}

id OUTLINED_FUNCTION_26_2(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_28_2@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

  ;
}

void *OUTLINED_FUNCTION_31_4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t OUTLINED_FUNCTION_34_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_35_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, v3, 0LL);
}

uint64_t static PhoneContactDisambiguationProperties.maxItemsForVoxReadout.getter()
{
  return 5LL;
}

PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional __swiftcall PhoneCallMetrics.CodingKeys.init(intValue:)( Swift::Int intValue)
{
  return (PhoneCallFlowDelegatePlugin::PhoneCallMetrics::CodingKeys_optional)2;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return type metadata accessor for OS_dispatch_queue.Attributes(0LL);
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return static DialogPhase.completion.getter();
}

uint64_t OUTLINED_FUNCTION_44_3()
{
  return type metadata accessor for DispatchQoS(0LL);
}

uint64_t OUTLINED_FUNCTION_45()
{
  return v0(0LL);
}

void OUTLINED_FUNCTION_46_2(uint64_t a1@<X8>)
{
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
}

PhoneCallFlowDelegatePlugin::PhoneCallProvider::CodingKeys_optional __swiftcall PhoneCallProvider.CodingKeys.init(intValue:)( Swift::Int intValue)
{
  return (PhoneCallFlowDelegatePlugin::PhoneCallProvider::CodingKeys_optional)3;
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_51_2()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return OutputGenerationManifest.init(dialogPhase:_:)(v1, v0, 0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_54_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Dictionary.init(dictionaryLiteral:)(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  return type metadata accessor for AppInfoBuilder();
}

  ;
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  return _CocoaArrayWrapper.endIndex.getter(v0);
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return v0(v1, 0LL);
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_68_3(uint64_t result)
{
  *(void *)(v4 - 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = result;
  *(void *)(v4 - 96) = v3;
  *(void *)(v4 - 1__swift_destroy_boxed_opaque_existential_1(v0 + 28) = v2;
  *(void *)(v4 - 88) = v1;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_70_0()
{
  *(void *)(v1 - 88) = v0;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return __swift_mutable_project_boxed_opaque_existential_1(v1 - 128, v0);
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73()
{
  return swift_retain(*(void *)(v0 + 8 * v1 + 32));
}

  ;
}

double OUTLINED_FUNCTION_75(uint64_t a1)
{
  void *v1 = a1;
  double result = 0.0;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = 0u;
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_76_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[3] = a1;
  v2[4] = a2;
  void *v2 = v3;
  return v3;
}

void OUTLINED_FUNCTION_77_2(uint64_t a1@<X8>)
{
  *(void *)(v3 + 8 * a1) = v2 | v1;
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
}

BOOL OUTLINED_FUNCTION_80_0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_83(uint64_t a1@<X8>)
{
  void *v1 = a1;
}

  ;
}

void *OUTLINED_FUNCTION_85_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  return outlined retain of PhoneCallFeatureFlags((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_86_0@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return 0x656D697465636166LL;
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_90_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[3] = v3;
  v2[4] = a2;
  void *v2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_91(void *a1)
{
  return swift_retain(*a1);
}

void OUTLINED_FUNCTION_92_1( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_94_0(uint64_t (*a1)(void))
{
  return a1(0LL);
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  return outlined init with copy of UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

uint64_t OUTLINED_FUNCTION_99()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)(v0);
}

uint64_t OUTLINED_FUNCTION_100(uint64_t a1, unint64_t *a2)
{
  return type metadata accessor for CNContactStore(0LL, a2, v2);
}

uint64_t OUTLINED_FUNCTION_101()
{
  return type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy();
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  return type metadata accessor for PhoneCallFeatureManager();
}

uint64_t OUTLINED_FUNCTION_103(uint64_t a1, unint64_t *a2)
{
  return type metadata accessor for CNContactStore(0LL, a2, v2);
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_105()
{
  return ResponseFactory.init()();
}

uint64_t OUTLINED_FUNCTION_106()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_111@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[3] = v3;
  v2[4] = a2;
  void *v2 = result;
  return result;
}

uint64_t property wrapper backing initializer of YesNoConfirmationModel.noText(uint64_t a1, uint64_t a2)
{
  v3[0] = a1;
  v3[1] = a2;
  return Loggable.init(wrappedValue:)(v3, &type metadata for String);
}

uint64_t YesNoConfirmationModel.yesText.getter()
{
  return v1;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.primaryText : SearchCallHistoryBinaryButtonModel( uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  return YesNoConfirmationModel.yesText.setter(v1);
}

uint64_t YesNoConfirmationModel.yesText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
}

void EmergencyCountdownModel.sashTitle.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t property wrapper backing initializer of SearchCallHistoryBinaryButtonModel.primaryAction(uint64_t a1)
{
  unint64_t v2 = type metadata accessor for SABaseClientBoundCommand();
  return CodableAceObject.init(wrappedValue:)(a1, v2);
}

unint64_t type metadata accessor for SABaseClientBoundCommand()
{
  unint64_t result = lazy cache variable for type metadata for SABaseClientBoundCommand;
  if (!lazy cache variable for type metadata for SABaseClientBoundCommand)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SABaseClientBoundCommand);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SABaseClientBoundCommand);
  }

  return result;
}

void SearchCallHistoryBinaryButtonModel.primaryAction.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryBinaryButtonModel;
  if (!type metadata singleton initialization cache for SearchCallHistoryBinaryButtonModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchCallHistoryBinaryButtonModel);
  }
  return result;
}

void key path setter for SearchCallHistoryBinaryButtonModel.primaryAction : SearchCallHistoryBinaryButtonModel( id *a1)
{
  id v1 = *a1;
  SearchCallHistoryBinaryButtonModel.primaryAction.setter();
}

void SearchCallHistoryBinaryButtonModel.primaryAction.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SearchCallHistoryBinaryButtonModel.primaryAction.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_7();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryText.getter()
{
  return v1;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.secondaryText : SearchCallHistoryBinaryButtonModel( uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  return SearchCallHistoryBinaryButtonModel.secondaryText.setter(v1);
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  return OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
}

void SearchCallHistoryBinaryButtonModel.secondaryText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_7();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void SearchCallHistoryBinaryButtonModel.secondaryAction.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for SearchCallHistoryBinaryButtonModel.secondaryAction : SearchCallHistoryBinaryButtonModel( id *a1)
{
  id v1 = *a1;
  SearchCallHistoryBinaryButtonModel.secondaryAction.setter();
}

void SearchCallHistoryBinaryButtonModel.secondaryAction.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SearchCallHistoryBinaryButtonModel.secondaryAction.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_7();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void SearchCallHistoryBinaryButtonModel.primaryText.modify(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32LL))(*a1, 0LL);
  free(v1);
}

uint64_t SearchCallHistoryBinaryButtonModel.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(OUTLINED_FUNCTION_1_7() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

void SearchCallHistoryBinaryButtonModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(OUTLINED_FUNCTION_1_7() + 32));
  swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryBinaryButtonModel.responseViewId.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryBinaryButtonModel.init(primaryText:primaryAction:secondaryText:secondaryAction:)( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13 = (void *)(a7 + *(int *)(OUTLINED_FUNCTION_1_7() + 32));
  *uint64_t v13 = 0xD000000000000021LL;
  v13[1] = 0x8000000000346A90LL;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  Loggable.init(wrappedValue:)(&v16, &type metadata for String);
  unint64_t v14 = type metadata accessor for SABaseClientBoundCommand();
  id v15 = a3;
  CodableAceObject.init(wrappedValue:)(v15, v14);
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  Loggable.init(wrappedValue:)(&v16, &type metadata for String);
  CodableAceObject.init(wrappedValue:)(a6, v14);
}

BOOL static AppResolutionSource.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AppResolutionSource.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t SearchCallHistoryBinaryButtonModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x547972616D697270LL && a2 == 0xEB00000000747865LL)
  {
    unint64_t v5 = 0xEB00000000747865LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x547972616D697270LL, 0xEB00000000747865LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x417972616D697270LL && a2 == 0xED00006E6F697463LL)
  {
    unint64_t v8 = 0xED00006E6F697463LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x417972616D697270LL, 0xED00006E6F697463LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x7261646E6F636573LL && a2 == 0xED00007478655479LL)
  {
    unint64_t v10 = 0xED00007478655479LL;
    goto LABEL_24;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7261646E6F636573LL, 0xED00007478655479LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2LL;
  }

  if (a1 == 0x7261646E6F636573LL && a2 == 0xEF6E6F6974634179LL)
  {
    unint64_t v12 = 0xEF6E6F6974634179LL;
    goto LABEL_32;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7261646E6F636573LL, 0xEF6E6F6974634179LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3LL;
  }

  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    swift_bridgeObjectRelease(0xEE00644977656956LL);
    return 4LL;
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

Swift::Int AppResolutionSource.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t SearchCallHistoryBinaryButtonModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_506DC + 4 * byte_31E570[a1]))( 0x547972616D697270LL,  0xEB00000000747865LL);
}

uint64_t sub_506DC()
{
  return 0x417972616D697270LL;
}

uint64_t sub_50700()
{
  return 0x7261646E6F636573LL;
}

uint64_t sub_50738()
{
  return 0x65736E6F70736572LL;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys( char *a1, char *a2)
{
  return static AppResolutionSource.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return AppResolutionSource.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys( uint64_t a1)
{
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys( uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return SearchCallHistoryBinaryButtonModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = SearchCallHistoryBinaryButtonModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return AnnounceVoicemailDirectAction.CodingKeys.intValue.getter();
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = static PhoneContactDisambiguationProperties.maxItemsForVoxReadout.getter();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void SearchCallHistoryBinaryButtonModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchCallHistoryBinaryButtonModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_3F6158, &unk_3F6158, v12, v10, v11);
  v17[4] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>( &lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>,  (uint64_t)&protocol conformance descriptor for <A> Loggable<A>);
  OUTLINED_FUNCTION_4_5();
  if (!v2)
  {
    uint64_t v16 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
    uint64_t v17[3] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_4_5();
    v17[2] = 2;
    OUTLINED_FUNCTION_4_5();
    v17[1] = 3;
    OUTLINED_FUNCTION_4_5();
    uint64_t v13 = (uint64_t *)(v3 + *(int *)(v16 + 32));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    v17[0] = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, v17, v5);
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SearchCallHistoryBinaryButtonModel.CodingKeys,  &unk_3F6158);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SearchCallHistoryBinaryButtonModel.CodingKeys,  &unk_3F6158);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable("={\r", &unk_3F6158);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SearchCallHistoryBinaryButtonModel.CodingKeys,  &unk_3F6158);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }

  return result;
}

void SearchCallHistoryBinaryButtonModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  __chkstk_darwin();
  uint64_t v50 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v43 - v5;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v53 = *(void *)(v57 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v43 - v8;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchCallHistoryBinaryButtonModel.CodingKeys>);
  uint64_t v9 = *(void *)(v56 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = (uint64_t *)(v15 - v14 + *(int *)(v17 + 32));
  *uint64_t v18 = 0xD000000000000021LL;
  v18[1] = 0x8000000000346A90LL;
  uint64_t v59 = v18;
  uint64_t v20 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  unint64_t v21 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  uint64_t v58 = v12;
  unint64_t v22 = v60;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_3F6158, &unk_3F6158, v21, v20, v19);
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v23 = v54;
    uint64_t v46 = v7;
    uint64_t v47 = v13;
    uint64_t v48 = v9;
    uint64_t v24 = v16;
    uint64_t v60 = a1;
    char v65 = 0;
    uint64_t v25 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>( &lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>,  (uint64_t)&protocol conformance descriptor for <A> Loggable<A>);
    char v26 = v55;
    uint64_t v27 = v56;
    uint64_t v28 = v57;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v57, &v65, v56, v57, v25);
    uint64_t v44 = v25;
    uint64_t v45 = v24;
    uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 32);
    v29(v24, v26, v28);
    char v64 = 1;
    lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_2_4(v30, (uint64_t)&v64);
    uint64_t v31 = v9;
    uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v32(v45 + *(int *)(v47 + 20), v23, v31);
    char v63 = 2;
    BOOL v33 = v46;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v28, &v63, v27, v28, v44);
    uint64_t v54 = (char *)v32;
    uint64_t v55 = 0LL;
    uint64_t v34 = v47;
    uint64_t v35 = ((uint64_t (*)(uint64_t, char *, uint64_t))v29)(v45 + *(int *)(v47 + 24), v33, v28);
    char v62 = 3;
    uint64_t v36 = v50;
    OUTLINED_FUNCTION_2_4(v35, (uint64_t)&v62);
    uint64_t v37 = *(int *)(v34 + 28);
    uint64_t v38 = v45;
    ((void (*)(uint64_t, char *, void))v54)(v45 + v37, v36, v32);
    char v61 = 4;
    uint64_t v39 = KeyedDecodingContainer.decode(_:forKey:)(&v61, v27);
    uint64_t v41 = v40;
    OUTLINED_FUNCTION_0_5();
    int v42 = v59;
    swift_bridgeObjectRelease();
    *int v42 = v39;
    v42[1] = v41;
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v38, v49);
    __swift_destroy_boxed_opaque_existential_1(v60);
    outlined destroy of SearchCallHistoryBinaryButtonModel(v38);
  }

  OUTLINED_FUNCTION_7_1();
}

uint64_t lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>( unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

void lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>( unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    atomic_store(OUTLINED_FUNCTION_110(v2), a1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance SearchCallHistoryBinaryButtonModel( uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1 + 32));
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

void instantiation function for generic protocol witness table for SearchCallHistoryBinaryButtonModel( uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void base witness table accessor for Decodable in SearchCallHistoryBinaryButtonModel()
{
}

void base witness table accessor for Encodable in SearchCallHistoryBinaryButtonModel()
{
}

void lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = type metadata accessor for SearchCallHistoryBinaryButtonModel(255LL);
    atomic_store(OUTLINED_FUNCTION_110(v2), a1);
  }

  OUTLINED_FUNCTION_2();
}

void protocol witness for Decodable.init(from:) in conformance SearchCallHistoryBinaryButtonModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for Encodable.encode(to:) in conformance SearchCallHistoryBinaryButtonModel( void *a1)
{
}

void sub_51154()
{
  *uint64_t v0 = YesNoConfirmationModel.yesText.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_2();
}

void sub_51178()
{
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_2();
}

void sub_5119C()
{
  *uint64_t v0 = SearchCallHistoryBinaryButtonModel.secondaryText.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_2();
}

void sub_511C0()
{
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_2();
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryBinaryButtonModel(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
    v13(v10, v11, v12);
    v8(&a1[a3[6]], &a2[a3[6]], v7);
    v13(&a1[a3[7]], &a2[a3[7]], v12);
    uint64_t v14 = a3[8];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    swift_bridgeObjectRetain();
  }

  return a1;
}

uint64_t destroy for SearchCallHistoryBinaryButtonModel(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL);
  v8(v6, v7);
  v5(a1 + a2[6], v4);
  v8(a1 + a2[7], v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24LL);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40LL);
  v12(v9, v10, v11);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v12(a1 + a3[7], a2 + a3[7], v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_51750);
}

uint64_t sub_51750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }

  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84LL) == (_DWORD)a2)
  {
    uint64_t v7 = v9;
    uint64_t v8 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }

  unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_51808);
}

void sub_51808(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = a1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
    return;
  }

  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84LL) == a3)
  {
    uint64_t v9 = v11;
    uint64_t v10 = a1 + *(int *)(a4 + 20);
    goto LABEL_5;
  }

  *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  OUTLINED_FUNCTION_6();
}

void type metadata completion function for SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    uint64_t v7 = v4;
    type metadata accessor for CodableAceObject<SABaseClientBoundCommand>(319LL);
    if (v6 <= 0x3F)
    {
      uint64_t v8 = *(void *)(v5 - 8) + 64LL;
      uint64_t v9 = v4;
      uint64_t v10 = v8;
      uint64_t v11 = &unk_31E648;
      swift_initStructMetadata(a1, 256LL, 5LL, &v7, a1 + 16);
    }
  }

void type metadata accessor for Loggable<String>()
{
  if (!lazy cache variable for type metadata for Loggable<String>)
  {
    unint64_t v0 = type metadata accessor for Loggable(0LL, &type metadata for String);
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
    }
  }

void type metadata accessor for CodableAceObject<SABaseClientBoundCommand>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>)
  {
    unint64_t v2 = type metadata accessor for SABaseClientBoundCommand();
    unint64_t v3 = type metadata accessor for CodableAceObject(a1, v2);
    if (!v4) {
      atomic_store( v3,  (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    }
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_51A20 + 4 * byte_31E57A[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_51A54 + 4 * byte_31E575[v4]))();
}

uint64_t sub_51A54(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_51A5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x51A64LL);
  }
  return result;
}

uint64_t sub_51A70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x51A78LL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_51A7C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_51A84(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *destructiveInjectEnumTag for SearchCallHistoryBinaryButtonModel.CodingKeys(_BYTE *result, char a2)
{
  void *result = a2;
  return result;
}

void *type metadata accessor for SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return &unk_3F6158;
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(v1 - 184) + 8LL))(*(void *)(v1 - 104), v0);
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
}

uint64_t OUTLINED_FUNCTION_2_4(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(*(void *)(v4 - 152), a2, v3, *(void *)(v4 - 152), v2);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_9_6@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2 + a1, v1);
}

uint64_t OUTLINED_FUNCTION_12_9(uint64_t a1)
{
  return CodableAceObject.wrappedValue.modify(v1, a1);
}

uint64_t OUTLINED_FUNCTION_13_12(uint64_t a1)
{
  return Loggable.wrappedValue.modify(v1, a1);
}

void SingleResultVoicemailModel.responseViewId.getter()
{
}

void SingleResultVoicemailModel.responseViewId.setter()
{
  void *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *AnnounceGroupFaceTimeInviteOfferFollowUpIntentParameters.confirmAction.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SingleResultVoicemailModel.displayName.getter()
{
}

void SingleResultVoicemailModel.displayName.setter()
{
  *(void *)(v1 + ++*(void *)(v0 + 16) = v2;
  *(void *)(v1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SingleResultVoicemailModel.displayName.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SingleResultVoicemailModel.displayCallDetail.getter()
{
}

void SingleResultVoicemailModel.displayCallDetail.setter()
{
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v0;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SingleResultVoicemailModel.displayCallDetail.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SingleResultVoicemailModel.displayDateTime.getter()
{
}

void SingleResultVoicemailModel.displayDateTime.setter()
{
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SingleResultVoicemailModel.displayDateTime.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SingleResultCallHistoryModel.contactIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease(*(void *)(v1 + 64));
  *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  return result;
}

Swift::Void (__swiftcall *SingleResultVoicemailModel.callDuration.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SingleResultCallHistoryModel.searchCallHistoryBinaryButtonModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SingleResultCallHistoryModel(0LL) + 36);
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(v3, a1);
}

uint64_t type metadata accessor for SingleResultCallHistoryModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for SingleResultCallHistoryModel;
  if (!type metadata singleton initialization cache for SingleResultCallHistoryModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SingleResultCallHistoryModel);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t SingleResultCallHistoryModel.init(displayName:displayCallDetail:displayDateTime:contactIds:searchCallHistoryBinaryButtonModel:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = 0xD000000000000017LL;
  a9[1] = 0x8000000000346AC0LL;
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = a5;
  a9[7] = a6;
  a9[8] = a7;
  uint64_t v10 = (uint64_t)a9 + *(int *)(type metadata accessor for SingleResultCallHistoryModel(0LL) + 36);
  return outlined init with take of SearchCallHistoryBinaryButtonModel?(a8, v10);
}

uint64_t outlined init with take of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t SingleResultCallHistoryModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    unint64_t v5 = 0xEE00644977656956LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x4E79616C70736964LL && a2 == 0xEB00000000656D61LL)
  {
    unint64_t v8 = 0xEB00000000656D61LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4E79616C70736964LL, 0xEB00000000656D61LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000011LL)
  {
    unint64_t v9 = 0x80000000003463B0LL;
    if (a2 == 0x80000000003463B0LL) {
      goto LABEL_21;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x80000000003463B0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 0x4479616C70736964LL && a2 == 0xEF656D6954657461LL)
  {
    unint64_t v11 = 0xEF656D6954657461LL;
    goto LABEL_29;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4479616C70736964LL, 0xEF656D6954657461LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3LL;
  }

  if (a1 == 0x49746361746E6F63LL && a2 == 0xEA00000000007364LL)
  {
    unint64_t v13 = 0xEA00000000007364LL;
    goto LABEL_37;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49746361746E6F63LL, 0xEA00000000007364LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4LL;
  }

  if (a1 == 0xD000000000000022LL && a2 == 0x8000000000346E80LL)
  {
    swift_bridgeObjectRelease(0x8000000000346E80LL);
    return 5LL;
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000022LL, 0x8000000000346E80LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0) {
      return 5LL;
    }
    else {
      return 6LL;
    }
  }

uint64_t SingleResultCallHistoryModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_521E4 + 4 * byte_31E780[a1]))( 0x65736E6F70736572LL,  0xEE00644977656956LL);
}

uint64_t sub_521E4()
{
  return 0x4E79616C70736964LL;
}

unint64_t sub_52204()
{
  return 0xD000000000000011LL;
}

uint64_t sub_52220()
{
  return 0x4479616C70736964LL;
}

uint64_t sub_52244()
{
  return 0x49746361746E6F63LL;
}

unint64_t sub_52260()
{
  return 0xD000000000000022LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleResultCallHistoryModel.CodingKeys()
{
  return SingleResultCallHistoryModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleResultCallHistoryModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = SingleResultCallHistoryModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SingleResultCallHistoryModel.CodingKeys@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = variable initialization expression of PhoneCallDirectInvocationNLIntent.voiceMailVerb();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleResultCallHistoryModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleResultCallHistoryModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SingleResultCallHistoryModel.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleResultCallHistoryModel.CodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_3F62D0, &unk_3F62D0, v10, v8, v9);
  uint64_t v11 = *v4;
  uint64_t v12 = v4[1];
  char v31 = 0;
  OUTLINED_FUNCTION_1_8(v11, v12, (uint64_t)&v31);
  if (!v2)
  {
    uint64_t v13 = v4[2];
    uint64_t v14 = v4[3];
    char v30 = 1;
    OUTLINED_FUNCTION_1_8(v13, v14, (uint64_t)&v30);
    uint64_t v15 = v4[4];
    uint64_t v16 = v4[5];
    char v29 = 2;
    OUTLINED_FUNCTION_1_8(v15, v16, (uint64_t)&v29);
    uint64_t v17 = v4[6];
    uint64_t v18 = v4[7];
    char v28 = 3;
    OUTLINED_FUNCTION_1_8(v17, v18, (uint64_t)&v28);
    uint64_t v27 = v4[8];
    char v26 = 4;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    uint64_t v20 = lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v27, &v26, v6, v19, v20);
    unint64_t v21 = (char *)v4 + *(int *)(type metadata accessor for SingleResultCallHistoryModel(0LL) + 36);
    char v25 = 5;
    uint64_t v22 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
    uint64_t v23 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel,  type metadata accessor for SearchCallHistoryBinaryButtonModel,  (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v21, &v25, v6, v22, v23);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

unint64_t lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys,  &unk_3F62D0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys,  &unk_3F62D0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys,  &unk_3F62D0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultCallHistoryModel.CodingKeys,  &unk_3F62D0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }

  return result;
}

uint64_t SingleResultCallHistoryModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v27[0] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  __chkstk_darwin();
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v27[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleResultCallHistoryModel.CodingKeys>);
  __chkstk_darwin();
  uint64_t v7 = type metadata accessor for SingleResultCallHistoryModel(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  v3[1] = 0x8000000000346AC0LL;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  char v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_3F62D0, &unk_3F62D0, v10, v8, v9);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(v28);
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v11 = v27[0];
    char v35 = 0;
    *uint64_t v3 = OUTLINED_FUNCTION_2_5((uint64_t)&v35);
    v3[1] = v12;
    char v34 = 1;
    void v3[2] = OUTLINED_FUNCTION_2_5((uint64_t)&v34);
    void v3[3] = v13;
    char v33 = 2;
    v3[4] = OUTLINED_FUNCTION_2_5((uint64_t)&v33);
    v3[5] = v14;
    char v32 = 3;
    v3[6] = OUTLINED_FUNCTION_2_5((uint64_t)&v32);
    v3[7] = v15;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v31 = 4;
    lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    uint64_t v16 = OUTLINED_FUNCTION_5_3();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v16, v17, v18, v19, v20);
    v3[8] = v29;
    type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
    char v30 = 5;
    lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel,  type metadata accessor for SearchCallHistoryBinaryButtonModel,  (uint64_t)&protocol conformance descriptor for SearchCallHistoryBinaryButtonModel);
    uint64_t v21 = OUTLINED_FUNCTION_5_3();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v21, v22, v23, v24, v25);
    OUTLINED_FUNCTION_0_6();
    outlined init with take of SearchCallHistoryBinaryButtonModel?((uint64_t)v6, (uint64_t)v3 + *(int *)(v7 + 36));
    outlined init with copy of SingleResultCallHistoryModel((uint64_t)v3, v11);
    __swift_destroy_boxed_opaque_existential_1(v28);
    return outlined destroy of SingleResultCallHistoryModel( (uint64_t)v3,  type metadata accessor for SingleResultCallHistoryModel);
  }

uint64_t lazy protocol witness table accessor for type [String] and conformance <A> [A]( unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t outlined init with copy of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleResultCallHistoryModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t PlayVoicemailModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t instantiation function for generic protocol witness table for SingleResultCallHistoryModel( uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel,  type metadata accessor for SingleResultCallHistoryModel,  (uint64_t)&protocol conformance descriptor for SingleResultCallHistoryModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleResultCallHistoryModel()
{
  return lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel,  type metadata accessor for SingleResultCallHistoryModel,  (uint64_t)&protocol conformance descriptor for SingleResultCallHistoryModel);
}

uint64_t base witness table accessor for Encodable in SingleResultCallHistoryModel()
{
  return lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel,  type metadata accessor for SingleResultCallHistoryModel,  (uint64_t)&protocol conformance descriptor for SingleResultCallHistoryModel);
}

uint64_t lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2(255LL);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleResultCallHistoryModel@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleResultCallHistoryModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleResultCallHistoryModel(void *a1)
{
  return SingleResultCallHistoryModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SingleResultCallHistoryModel( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16LL) & ~(unint64_t)v4));
    swift_retain();
  }

  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = *(int *)(a3 + 36);
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    a1[8] = a2[8];
    uint64_t v12 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, (uint64_t)v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL);
      v16(v10, v11, v15);
      uint64_t v17 = v12[5];
      uint64_t v18 = &v10[v17];
      uint64_t v19 = &v11[v17];
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16LL);
      v21(v18, v19, v20);
      v16(&v10[v12[6]], &v11[v12[6]], v15);
      v21(&v10[v12[7]], &v11[v12[7]], v20);
      uint64_t v22 = v12[8];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      uint64_t v25 = *((void *)v24 + 1);
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v25;
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0LL, 1LL, (uint64_t)v12);
    }
  }

  return v3;
}

uint64_t destroy for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1LL, (uint64_t)v5);
  if (!(_DWORD)result)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL);
    v8(v4, v7);
    uint64_t v9 = v4 + v5[5];
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL);
    v11(v9, v10);
    v8(v4 + v5[6], v7);
    v11(v4 + v5[7], v10);
    return swift_bridgeObjectRelease();
  }

  return result;
}

void *initializeWithCopy for SingleResultCallHistoryModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[8] = a2[8];
  uint64_t v11 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1LL, (uint64_t)v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16LL);
    v14(v9, v10, v13);
    uint64_t v15 = v11[5];
    uint64_t v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16LL);
    v19(v16, v17, v18);
    v14(&v9[v11[6]], &v10[v11[6]], v13);
    v19(&v9[v11[7]], &v10[v11[7]], v18);
    uint64_t v20 = v11[8];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, (uint64_t)v11);
  }

  return a1;
}

void *assignWithCopy for SingleResultCallHistoryModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, (uint64_t)v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, (uint64_t)v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24LL);
      v25(v7, v8, v24);
      uint64_t v26 = v9[5];
      uint64_t v27 = &v7[v26];
      char v28 = &v8[v26];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      char v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24LL);
      v30(v27, v28, v29);
      v25(&v7[v9[6]], &v8[v9[6]], v24);
      v30(&v7[v9[7]], &v8[v9[7]], v29);
      uint64_t v31 = v9[8];
      char v32 = &v7[v31];
      char v33 = &v8[v31];
      *(void *)char v32 = *(void *)v33;
      *((void *)v32 + 1) = *((void *)v33 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }

    outlined destroy of SingleResultCallHistoryModel( (uint64_t)v7,  type metadata accessor for SearchCallHistoryBinaryButtonModel);
    goto LABEL_6;
  }

  if (v11)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v7, v8, *(void *)(*(void *)(v22 - 8) + 64LL));
    return a1;
  }

  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
  v13(v7, v8, v12);
  uint64_t v14 = v9[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16LL);
  v18(v15, v16, v17);
  v13(&v7[v9[6]], &v8[v9[6]], v12);
  v18(&v7[v9[7]], &v8[v9[7]], v17);
  uint64_t v19 = v9[8];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, (uint64_t)v9);
  return a1;
}

uint64_t outlined destroy of SingleResultCallHistoryModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, (uint64_t)v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL);
    v12(v7, v8, v11);
    uint64_t v13 = v9[5];
    uint64_t v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32LL);
    v17(v14, v15, v16);
    v12(&v7[v9[6]], &v8[v9[6]], v11);
    v17(&v7[v9[7]], &v8[v9[7]], v16);
    *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0LL, 1LL, (uint64_t)v9);
  }

  return a1;
}

void *assignWithTake for SingleResultCallHistoryModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, (uint64_t)v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1LL, (uint64_t)v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40LL);
      v26(v11, v12, v25);
      uint64_t v27 = v13[5];
      char v28 = &v11[v27];
      uint64_t v29 = &v12[v27];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40LL);
      v31(v28, v29, v30);
      v26(&v11[v13[6]], &v12[v13[6]], v25);
      v31(&v11[v13[7]], &v12[v13[7]], v30);
      uint64_t v32 = v13[8];
      char v33 = &v11[v32];
      char v34 = &v12[v32];
      uint64_t v36 = *(void *)v34;
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)char v33 = v36;
      *((void *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      return a1;
    }

    outlined destroy of SingleResultCallHistoryModel( (uint64_t)v11,  type metadata accessor for SearchCallHistoryBinaryButtonModel);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64LL));
    return a1;
  }

  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32LL);
  v17(v11, v12, v16);
  uint64_t v18 = v13[5];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32LL);
  v22(v19, v20, v21);
  v17(&v11[v13[6]], &v12[v13[6]], v16);
  v22(&v11[v13[7]], &v12[v13[7]], v21);
  *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0LL, 1LL, (uint64_t)v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5359C);
}

uint64_t sub_5359C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 36), a2, v8);
  }

uint64_t storeEnumTagSinglePayload for SingleResultCallHistoryModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_53620);
}

void sub_53620(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 36), a2, a2, v7);
  }

void type metadata completion function for SingleResultCallHistoryModel(uint64_t a1)
{
  v4[0] = &unk_31E850;
  v4[1] = &unk_31E850;
  v4[2] = &unk_31E850;
  v4[3] = &unk_31E850;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  type metadata accessor for SearchCallHistoryBinaryButtonModel?(319LL);
  if (v3 <= 0x3F)
  {
    v4[5] = *(void *)(v2 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
  }

void type metadata accessor for SearchCallHistoryBinaryButtonModel?(uint64_t a1)
{
  if (!lazy cache variable for type metadata for SearchCallHistoryBinaryButtonModel?)
  {
    uint64_t v2 = type metadata accessor for SearchCallHistoryBinaryButtonModel(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store( v3,  (unint64_t *)&lazy cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    }
  }

uint64_t storeEnumTagSinglePayload for SingleResultCallHistoryModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_537B0 + 4 * byte_31E78B[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_537E4 + 4 * byte_31E786[v4]))();
}

uint64_t sub_537E4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_537EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x537F4LL);
  }
  return result;
}

uint64_t sub_53800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x53808LL);
  }
  *(_BYTE *)uint64_t result = a2 + 5;
  return result;
}

uint64_t sub_5380C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_53814(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleResultCallHistoryModel.CodingKeys()
{
  return &unk_3F62D0;
}

uint64_t OUTLINED_FUNCTION_0_6()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_1_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_2_5(uint64_t a1)
{
  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

uint64_t *SingleResultVoicemailModel.resultViewID.unsafeMutableAddressor()
{
  return &static SingleResultVoicemailModel.resultViewID;
}

uint64_t static SingleResultVoicemailModel.resultViewID.getter()
{
  uint64_t v0 = static SingleResultVoicemailModel.resultViewID;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SingleResultVoicemailModel.resultViewID.setter(uint64_t a1, char *a2)
{
  static SingleResultVoicemailModel.resultViewID = a1;
  off_42B508 = a2;
  return swift_bridgeObjectRelease();
}

void static SingleResultVoicemailModel.resultViewID.modify(uint64_t a1)
{
}

void SingleResultVoicemailModel.callDuration.getter()
{
}

void SingleResultVoicemailModel.callDuration.setter()
{
  *(void *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  OUTLINED_FUNCTION_6();
}

double SingleResultVoicemailModel.callDurationInterval.getter()
{
  return *(double *)(v0 + 80);
}

void SingleResultVoicemailModel.callDurationInterval.setter(double a1)
{
  *(double *)(v1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a1;
}

Swift::Void (__swiftcall *SingleResultVoicemailModel.callDurationInterval.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SingleResultVoicemailModel.contactIds.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 88));
}

void SingleResultVoicemailModel.contactIds.setter(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  OUTLINED_FUNCTION_2();
}

Swift::Void (__swiftcall *SingleResultVoicemailModel.contactIds.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SingleResultVoicemailModel.transcript.getter()
{
}

void SingleResultVoicemailModel.transcript.setter()
{
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v0;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SingleResultVoicemailModel.transcript.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SingleResultVoicemailModel.transcriptTitle.getter()
{
}

void SingleResultVoicemailModel.transcriptTitle.setter()
{
  *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v1 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v0;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *EmergencyCountdownOutputBuilder.displayTextCATsSimple.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

unint64_t type metadata accessor for SAIntentGroupRunSiriKitExecutor()
{
  unint64_t result = lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor;
  if (!lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAIntentGroupRunSiriKitExecutor);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  }

  return result;
}

void SingleResultVoicemailModel.callbackDirectInvocation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for SingleResultVoicemailModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for SingleResultVoicemailModel;
  if (!type metadata singleton initialization cache for SingleResultVoicemailModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SingleResultVoicemailModel);
  }
  return result;
}

void key path setter for SingleResultVoicemailModel.callbackDirectInvocation : SingleResultVoicemailModel( id *a1)
{
  id v1 = *a1;
  SingleResultVoicemailModel.callbackDirectInvocation.setter();
}

void SingleResultVoicemailModel.callbackDirectInvocation.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SingleResultVoicemailModel.callbackDirectInvocation.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_6_11();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t property wrapper backing initializer of SingleResultVoicemailModel.repeatDirectInvocation( uint64_t a1)
{
  unint64_t v2 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)(a1, v2);
}

void SingleResultVoicemailModel.repeatDirectInvocation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for SingleResultVoicemailModel.repeatDirectInvocation : SingleResultVoicemailModel( id *a1)
{
  id v1 = *a1;
  SingleResultVoicemailModel.repeatDirectInvocation.setter();
}

void SingleResultVoicemailModel.repeatDirectInvocation.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SingleResultVoicemailModel.repeatDirectInvocation.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_6_11();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void SingleResultVoicemailModel.searchCallHistoryBinaryButtonModel.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_6_11();
  outlined init with copy of SearchCallHistoryBinaryButtonModel( v1 + *(int *)(v3 + 60),  a1,  (void (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
  OUTLINED_FUNCTION_2();
}

uint64_t SingleResultVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:callDurationInterval:transcript:transcriptTitle:callbackDirectInvocation:repeatDirectInvocation:contactIds:searchCallHistoryBinaryButtonModel:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17)
{
  *(void *)a9 = 0xD000000000000015LL;
  *(void *)(a9 + 8) = 0x8000000000346AE0LL;
  *(void *)(a9 + ++*(void *)(v0 + 16) = a1;
  *(void *)(a9 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  *(void *)(a9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(a9 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a7;
  *(void *)(a9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a8;
  *(double *)(a9 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a10;
  *(_OWORD *)(a9 + 96) = a11;
  *(void *)(a9 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a12;
  *(void *)(a9 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a13;
  uint64_t v18 = OUTLINED_FUNCTION_6_11();
  unint64_t v19 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v20 = a15;
  CodableAceObject.init(wrappedValue:)(v20, v19);
  *(void *)(a9 + 88) = a16;
  CodableAceObject.init(wrappedValue:)(a14, v19);

  return outlined init with take of SearchCallHistoryBinaryButtonModel(a17, a9 + *(int *)(v18 + 60));
}

uint64_t outlined init with take of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t SingleResultVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    unint64_t v5 = 0xEE00644977656956LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x4E79616C70736964LL && a2 == 0xEB00000000656D61LL)
  {
    unint64_t v8 = 0xEB00000000656D61LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4E79616C70736964LL, 0xEB00000000656D61LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000011LL)
  {
    unint64_t v9 = 0x80000000003463B0LL;
    if (a2 == 0x80000000003463B0LL) {
      goto LABEL_21;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x80000000003463B0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 0x4479616C70736964LL && a2 == 0xEF656D6954657461LL)
  {
    unint64_t v11 = 0xEF656D6954657461LL;
    goto LABEL_29;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4479616C70736964LL, 0xEF656D6954657461LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3LL;
  }

  if (a1 == 0x617275446C6C6163LL && a2 == 0xEC0000006E6F6974LL)
  {
    unint64_t v13 = 0xEC0000006E6F6974LL;
    goto LABEL_37;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617275446C6C6163LL, 0xEC0000006E6F6974LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4LL;
  }

  if (a1 == 0xD000000000000014LL && a2 == 0x8000000000346440LL)
  {
    unint64_t v14 = 0x8000000000346440LL;
LABEL_43:
    swift_bridgeObjectRelease(v14);
    return 5LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014LL, 0x8000000000346440LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v14 = a2;
    goto LABEL_43;
  }

  if (a1 == 0x49746361746E6F63LL && a2 == 0xEA00000000007364LL)
  {
    unint64_t v16 = 0xEA00000000007364LL;
    goto LABEL_51;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49746361746E6F63LL, 0xEA00000000007364LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v16 = a2;
LABEL_51:
    swift_bridgeObjectRelease(v16);
    return 6LL;
  }

  if (a1 == 0x697263736E617274LL && a2 == 0xEA00000000007470LL)
  {
    unint64_t v18 = 0xEA00000000007470LL;
    goto LABEL_59;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697263736E617274LL, 0xEA00000000007470LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v18 = a2;
LABEL_59:
    swift_bridgeObjectRelease(v18);
    return 7LL;
  }

  if (a1 == 0x697263736E617274LL && a2 == -1196430878757850000LL)
  {
    uint64_t v20 = -1196430878757850000LL;
    goto LABEL_67;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697263736E617274LL, -1196430878757850000LL, a1, a2, 0LL) & 1) != 0)
  {
    uint64_t v20 = a2;
LABEL_67:
    swift_bridgeObjectRelease(v20);
    return 8LL;
  }

  if (a1 == 0xD000000000000018LL && a2 == 0x8000000000346EB0LL)
  {
    unint64_t v21 = 0x8000000000346EB0LL;
LABEL_73:
    swift_bridgeObjectRelease(v21);
    return 9LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018LL, 0x8000000000346EB0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v21 = a2;
    goto LABEL_73;
  }

  if (a1 == 0xD000000000000016LL && a2 == 0x8000000000346ED0LL)
  {
    unint64_t v22 = 0x8000000000346ED0LL;
LABEL_79:
    swift_bridgeObjectRelease(v22);
    return 10LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x8000000000346ED0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v22 = a2;
    goto LABEL_79;
  }

  if (a1 == 0xD000000000000022LL && a2 == 0x8000000000346E80LL)
  {
    swift_bridgeObjectRelease(0x8000000000346E80LL);
    return 11LL;
  }

  else
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000022LL, 0x8000000000346E80LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v23 & 1) != 0) {
      return 11LL;
    }
    else {
      return 12LL;
    }
  }

uint64_t SingleResultVoicemailModel.CodingKeys.init(intValue:)()
{
  return 12LL;
}

uint64_t SingleResultVoicemailModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_5447C + 4 * byte_31E980[a1]))( 0x65736E6F70736572LL,  0xEE00644977656956LL);
}

uint64_t sub_5447C()
{
  return 0x4E79616C70736964LL;
}

unint64_t sub_5449C()
{
  return 0xD000000000000011LL;
}

uint64_t sub_544B8()
{
  return 0x4479616C70736964LL;
}

uint64_t sub_544DC()
{
  return 0x617275446C6C6163LL;
}

unint64_t sub_544FC()
{
  return 0xD000000000000014LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleResultVoicemailModel.CodingKeys()
{
  return SingleResultVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleResultVoicemailModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = SingleResultVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SingleResultVoicemailModel.CodingKeys@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = SingleResultVoicemailModel.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleResultVoicemailModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleResultVoicemailModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SingleResultVoicemailModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleResultVoicemailModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_3F6508, &unk_3F6508, v12, v10, v11);
  double v13 = *v3;
  uint64_t v14 = *((void *)v3 + 1);
  LOBYTE(PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(*(void *)&v13, v14, &v17, v5);
  if (!v2)
  {
    OUTLINED_FUNCTION_0_7(*((void *)v3 + 2), *((void *)v3 + 3), 1);
    OUTLINED_FUNCTION_0_7(*((void *)v3 + 4), *((void *)v3 + 5), 2);
    OUTLINED_FUNCTION_0_7(*((void *)v3 + 6), *((void *)v3 + 7), 3);
    OUTLINED_FUNCTION_0_7(*((void *)v3 + 8), *((void *)v3 + 9), 4);
    double v15 = v3[10];
    LOBYTE(PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(&v17, v5, v15);
    uint64_t v17 = *((void *)v3 + 11);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_0_7(*((void *)v3 + 12), *((void *)v3 + 13), 7);
    OUTLINED_FUNCTION_0_7(*((void *)v3 + 14), *((void *)v3 + 15), 8);
    type metadata accessor for SingleResultVoicemailModel(0LL);
    LOBYTE(PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_11_8();
    LOBYTE(PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = 10;
    OUTLINED_FUNCTION_11_8();
    LOBYTE(PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = 11;
    type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel,  type metadata accessor for SearchCallHistoryBinaryButtonModel);
    OUTLINED_FUNCTION_11_8();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys,  &unk_3F6508);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys,  &unk_3F6508);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys,  &unk_3F6508);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SingleResultVoicemailModel.CodingKeys,  &unk_3F6508);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }

  return result;
}

uint64_t SingleResultVoicemailModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v48 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = v4 - v3;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleResultVoicemailModel.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v12 = v11 - v10;
  uint64_t v53 = (int *)type metadata accessor for SingleResultVoicemailModel(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  double v15 = (void *)(v14 - v13);
  *double v15 = 0xD000000000000015LL;
  v15[1] = 0x8000000000346AE0LL;
  uint64_t v55 = (uint64_t *)(v14 - v13);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  unsigned int v18 = __swift_project_boxed_opaque_existential_1(a1, v16);
  unint64_t v19 = lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  uint64_t v49 = v12;
  uint64_t v20 = v56;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_3F6508, &unk_3F6508, v19, v16, v17);
  uint64_t v51 = a1;
  if (!v20)
  {
    uint64_t v21 = v48;
    uint64_t v46 = v5;
    LOBYTE(v58) = 0;
    uint64_t v22 = v50;
    uint64_t v23 = KeyedDecodingContainer.decode(_:forKey:)(&v58, v50);
    uint64_t v25 = v55;
    *uint64_t v55 = v23;
    v25[1] = v26;
    v25[2] = OUTLINED_FUNCTION_1_9(1);
    void v25[3] = v27;
    void v25[4] = OUTLINED_FUNCTION_1_9(2);
    void v25[5] = v28;
    v25[6] = OUTLINED_FUNCTION_1_9(3);
    v25[7] = v29;
    v25[8] = OUTLINED_FUNCTION_1_9(4);
    v25[9] = v30;
    LOBYTE(v58) = 5;
    KeyedDecodingContainer.decode(_:forKey:)(&v58, v22);
    uint64_t v56 = 0LL;
    v25[10] = v31;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v57 = 6;
    uint64_t v33 = lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    OUTLINED_FUNCTION_19_3(v32, (uint64_t)&v57, v22, v32, v33);
    v25[11] = v58;
    uint64_t v34 = OUTLINED_FUNCTION_1_9(7);
    uint64_t v35 = v55;
    v55[12] = v34;
    v35[13] = v36;
    uint64_t v37 = OUTLINED_FUNCTION_1_9(8);
    uint64_t v56 = 0LL;
    uint64_t v38 = v55;
    v55[14] = v37;
    v38[15] = v39;
    LOBYTE(v58) = 9;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t v41 = v40;
    OUTLINED_FUNCTION_19_3(v54, (uint64_t)&v58, v22, v54, v40);
    uint64_t v56 = 0LL;
    uint64_t v42 = v54;
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v43((char *)v55 + v53[13], v9, v54);
    LOBYTE(v58) = 10;
    OUTLINED_FUNCTION_19_3(v42, (uint64_t)&v58, v50, v42, v41);
    uint64_t v56 = 0LL;
    v43((char *)v55 + v53[14], v7, v54);
    LOBYTE(v58) = 11;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel,  type metadata accessor for SearchCallHistoryBinaryButtonModel);
    OUTLINED_FUNCTION_19_3(v21, (uint64_t)&v58, v50, v21, v44);
    uint64_t v56 = 0LL;
    OUTLINED_FUNCTION_12_10();
    uint64_t v45 = (uint64_t)v55;
    outlined init with take of SearchCallHistoryBinaryButtonModel(v46, (uint64_t)v55 + v53[15]);
    outlined init with copy of SearchCallHistoryBinaryButtonModel( v45,  v47,  (void (*)(void))type metadata accessor for SingleResultVoicemailModel);
    __swift_destroy_boxed_opaque_existential_1(v51);
    return outlined destroy of SingleResultVoicemailModel(v45);
  }

  uint64_t v56 = v20;
  OUTLINED_FUNCTION_4_6();
  __swift_destroy_boxed_opaque_existential_1(v51);
  uint64_t result = swift_bridgeObjectRelease();
  if ((_DWORD)v16)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (!(_DWORD)v7)
    {
LABEL_6:
      if (!(_DWORD)v9) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }

  else if (!(_DWORD)v7)
  {
    goto LABEL_6;
  }

  uint64_t result = swift_bridgeObjectRelease();
  if (!(_DWORD)v9)
  {
LABEL_7:
    if (!(_DWORD)v5) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

void lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>( unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    atomic_store(OUTLINED_FUNCTION_110(v2), a1);
  }

  OUTLINED_FUNCTION_2();
}

void outlined init with copy of SearchCallHistoryBinaryButtonModel( uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = OUTLINED_FUNCTION_9_0();
  v4(v3);
  OUTLINED_FUNCTION_2();
}

uint64_t outlined destroy of SingleResultVoicemailModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SingleResultVoicemailModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t protocol witness for static ResultViewIDProviding.resultViewID.getter in conformance SingleResultVoicemailModel()
{
  uint64_t v0 = static SingleResultVoicemailModel.resultViewID;
  swift_bridgeObjectRetain(off_42B508);
  return v0;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleResultVoicemailModel@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleResultVoicemailModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleResultVoicemailModel(void *a1)
{
  return SingleResultVoicemailModel.encode(to:)(a1);
}

PhoneCallFlowDelegatePlugin::VoicemailUpdateAction_optional __swiftcall VoicemailUpdateAction.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of VoicemailUpdateAction.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.INCallRecordTypeOptions value = PhoneCallFlowDelegatePlugin_VoicemailUpdateAction_repeatVoicemail;
  }
  else {
    v4.INCallRecordTypeOptions value = PhoneCallFlowDelegatePlugin_VoicemailUpdateAction_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t VoicemailUpdateAction.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6F56746165706572LL;
  }
  else {
    return 0xD000000000000015LL;
  }
}

void instantiation function for generic protocol witness table for SingleResultVoicemailModel(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void base witness table accessor for Decodable in SingleResultVoicemailModel()
{
}

void base witness table accessor for Encodable in SingleResultVoicemailModel()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance VoicemailUpdateAction()
{
  specialized == infix<A>(_:_:)();
}

unint64_t lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction()
{
  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoicemailUpdateAction,  &type metadata for VoicemailUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoicemailUpdateAction,  &type metadata for VoicemailUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoicemailUpdateAction,  &type metadata for VoicemailUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for VoicemailUpdateAction,  &type metadata for VoicemailUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }

  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance VoicemailUpdateAction()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoicemailUpdateAction()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VoicemailUpdateAction(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::VoicemailUpdateAction_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VoicemailUpdateAction@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::VoicemailUpdateAction_optional *a2@<X8>)
{
  result.INCallRecordTypeOptions value = VoicemailUpdateAction.init(rawValue:)(*a1).value;
  a2->INCallRecordTypeOptions value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VoicemailUpdateAction( uint64_t *a1@<X8>)
{
  *a1 = VoicemailUpdateAction.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for Decodable.init(from:) in conformance VoicemailUpdateAction( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t updated = lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return RawRepresentable<>.init(from:)(a1, a2, a3, updated);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance VoicemailUpdateAction( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t updated = lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, updated);
}

uint64_t protocol witness for UpdateResponseCommand.init(_:) in conformance VoicemailUpdateAction( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t updated = lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  unint64_t v7 = lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return UpdateResponseCommand<>.init(_:)(a1, a2, a3, updated, v7);
}

uint64_t protocol witness for UpdateResponseCommand.serializeData() in conformance VoicemailUpdateAction( uint64_t a1, uint64_t a2)
{
  unint64_t updated = lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  unint64_t v5 = lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  return UpdateResponseCommand<>.serializeData()(a1, a2, updated, v5);
}

void sub_553C4(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

void sub_553EC(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

char *initializeBufferWithCopyOfBuffer for SingleResultVoicemailModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v33 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a2[3];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2[2];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v8;
    uint64_t v9 = a2[5];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2[4];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v9;
    uint64_t v10 = a2[7];
    *((void *)a1 + 6) = a2[6];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = v10;
    uint64_t v11 = a2[9];
    *((void *)a1 + 8) = a2[8];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 9) = v11;
    uint64_t v12 = a2[11];
    *((void *)a1 + 1outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a2[10];
    *((void *)a1 + 11) = v12;
    uint64_t v13 = a2[13];
    *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2[12];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 13) = v13;
    uint64_t v14 = a2[15];
    uint64_t v15 = a3[13];
    uint64_t v35 = (char *)a2 + v15;
    uint64_t v36 = &a1[v15];
    *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 14) = a2[14];
    *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL);
    v17(v36, v35, v16);
    v17(&a1[a3[14]], (char *)a2 + a3[14], v16);
    uint64_t v18 = a3[15];
    unint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16LL);
    v22(v19, v20, v21);
    uint64_t v23 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
    uint64_t v24 = v23[5];
    uint64_t v25 = &v19[v24];
    uint64_t v26 = &v20[v24];
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16LL);
    v28(v25, v26, v27);
    v22(&v19[v23[6]], &v20[v23[6]], v21);
    v28(&v19[v23[7]], &v20[v23[7]], v27);
    uint64_t v29 = v23[8];
    uint64_t v30 = &v19[v29];
    uint64_t v31 = &v20[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
  }

  return a1;
}

uint64_t destroy for SingleResultVoicemailModel(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[13];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v6(v4, v5);
  v6(a1 + a2[14], v5);
  uint64_t v7 = a1 + a2[15];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL);
  v9(v7, v8);
  uint64_t v10 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  uint64_t v11 = v7 + v10[5];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL);
  v13(v11, v12);
  v9(v7 + v10[6], v8);
  v13(v7 + v10[7], v12);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)a2 + 2);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v7;
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = *((void *)a2 + 4);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v8;
  uint64_t v9 = *((void *)a2 + 7);
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = v9;
  uint64_t v10 = *((void *)a2 + 9);
  *((void *)a1 + 8) = *((void *)a2 + 8);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 9) = v10;
  uint64_t v11 = *((void *)a2 + 11);
  *((void *)a1 + 1outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *((void *)a2 + 10);
  *((void *)a1 + 11) = v11;
  uint64_t v12 = *((void *)a2 + 13);
  *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)a2 + 12);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 13) = v12;
  uint64_t v13 = *((void *)a2 + 15);
  uint64_t v14 = a3[13];
  uint64_t v33 = &a2[v14];
  uint64_t v34 = &a1[v14];
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 14) = *((void *)a2 + 14);
  *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL);
  v16(v34, v33, v15);
  v16(&a1[a3[14]], &a2[a3[14]], v15);
  uint64_t v17 = a3[15];
  uint64_t v18 = &a1[v17];
  unint64_t v19 = &a2[v17];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16LL);
  v21(v18, v19, v20);
  uint64_t v22 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  uint64_t v23 = v22[5];
  uint64_t v24 = &v18[v23];
  uint64_t v25 = &v19[v23];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16LL);
  v27(v24, v25, v26);
  v21(&v18[v22[6]], &v19[v22[6]], v20);
  v27(&v18[v22[7]], &v19[v22[7]], v26);
  uint64_t v28 = v22[8];
  uint64_t v29 = &v18[v28];
  uint64_t v30 = &v19[v28];
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)a2 + 2);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = *((void *)a2 + 4);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = *((void *)a2 + 8);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 9) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *((void *)a2 + 10);
  *((void *)a1 + 11) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)a2 + 12);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 13) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 14) = *((void *)a2 + 14);
  *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = *((void *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[13];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL);
  v10(v7, v8, v9);
  v10(&a1[a3[14]], &a2[a3[14]], v9);
  uint64_t v11 = a3[15];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24LL);
  v15(v12, v13, v14);
  uint64_t v16 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v12[v17];
  unint64_t v19 = &v13[v17];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24LL);
  v21(v18, v19, v20);
  v15(&v12[v16[6]], &v13[v16[6]], v14);
  v21(&v12[v16[7]], &v13[v16[7]], v20);
  uint64_t v22 = v16[8];
  uint64_t v23 = &v12[v22];
  uint64_t v24 = &v13[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  __int128 v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  __int128 v7 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v7;
  __int128 v8 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v8;
  __int128 v9 = *((_OWORD *)a2 + 7);
  uint64_t v10 = a3[13];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = v9;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL);
  v14(v11, v12, v13);
  v14(&a1[a3[14]], &a2[a3[14]], v13);
  uint64_t v15 = a3[15];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  unint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL);
  v19(v16, v17, v18);
  uint64_t v20 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  uint64_t v21 = v20[5];
  uint64_t v22 = &v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32LL);
  v25(v22, v23, v24);
  v19(&v16[v20[6]], &v17[v20[6]], v18);
  v25(&v16[v20[7]], &v17[v20[7]], v24);
  *(_OWORD *)&v16[v20[8]] = *(_OWORD *)&v17[v20[8]];
  return a1;
}

char *assignWithTake for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)a2 + 2);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 4) = *((void *)a2 + 4);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *((void *)a2 + 7);
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *((void *)a2 + 9);
  *((void *)a1 + 8) = *((void *)a2 + 8);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 9) = v10;
  swift_bridgeObjectRelease();
  *((void *)a1 + 1outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *((void *)a2 + 10);
  *((void *)a1 + 11) = *((void *)a2 + 11);
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)a2 + 13);
  *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)a2 + 12);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 13) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)a2 + 15);
  *((void *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 14) = *((void *)a2 + 14);
  *((void *)a1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[13];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40LL);
  v17(v14, v15, v16);
  v17(&a1[a3[14]], &a2[a3[14]], v16);
  uint64_t v18 = a3[15];
  unint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40LL);
  v22(v19, v20, v21);
  uint64_t v23 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
  uint64_t v24 = v23[5];
  uint64_t v25 = &v19[v24];
  uint64_t v26 = &v20[v24];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40LL);
  v28(v25, v26, v27);
  v22(&v19[v23[6]], &v20[v23[6]], v21);
  v28(&v19[v23[7]], &v20[v23[7]], v27);
  uint64_t v29 = v23[8];
  uint64_t v30 = &v19[v29];
  uint64_t v31 = &v20[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_55EA0);
}

uint64_t sub_55EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == (_DWORD)a2)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(int *)(a3 + 52);
    }

    else
    {
      uint64_t v9 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
      uint64_t v10 = *(int *)(a3 + 60);
    }

    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }

uint64_t storeEnumTagSinglePayload for SingleResultVoicemailModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_55F48);
}

void sub_55F48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(int *)(a4 + 52);
    }

    else
    {
      uint64_t v9 = type metadata accessor for SearchCallHistoryBinaryButtonModel(0LL);
      uint64_t v10 = *(int *)(a4 + 60);
    }

    __swift_storeEnumTagSinglePayload(a1 + v10, a2, a2, v9);
  }

void type metadata completion function for SingleResultVoicemailModel(uint64_t a1)
{
  v6[0] = &unk_31EB90;
  v6[1] = &unk_31EB90;
  void v6[2] = &unk_31EB90;
  void v6[3] = &unk_31EB90;
  void v6[4] = &unk_31EB90;
  v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[7] = &unk_31EB90;
  v6[8] = &unk_31EB90;
  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v7 = *(void *)(v2 - 8) + 64LL;
    uint64_t v8 = v7;
    uint64_t v4 = type metadata accessor for SearchCallHistoryBinaryButtonModel(319LL);
    if (v5 <= 0x3F)
    {
      uint64_t v9 = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 12LL, v6, a1 + 16);
    }
  }

void type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>)
  {
    unint64_t v2 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
    unint64_t v3 = type metadata accessor for CodableAceObject(a1, v2);
    if (!v4) {
      atomic_store( v3,  (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    }
  }

uint64_t getEnumTagSinglePayload for VoicemailUpdateAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for VoicemailUpdateAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_561B8 + 4 * byte_31E991[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_561EC + 4 * byte_31E98C[v4]))();
}

uint64_t sub_561EC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_561F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x561FCLL);
  }
  return result;
}

uint64_t sub_56208(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x56210LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::VoicemailUpdateAction_optional result = a2 + 1;
  return result;
}

uint64_t sub_56214(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5621C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *destructiveInjectEnumTag for VoicemailUpdateAction(_BYTE *result, char a2)
{
  void *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VoicemailUpdateAction()
{
  return &type metadata for VoicemailUpdateAction;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailModel.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 11) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for SingleResultVoicemailModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF4) {
    return ((uint64_t (*)(void))((char *)&loc_56318 + 4 * byte_31E99B[v4]))();
  }
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_5634C + 4 * byte_31E996[v4]))();
}

uint64_t sub_5634C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_56354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x5635CLL);
  }
  return result;
}

uint64_t sub_56368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x56370LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::VoicemailUpdateAction_optional result = a2 + 11;
  return result;
}

uint64_t sub_56374(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5637C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleResultVoicemailModel.CodingKeys()
{
  return &unk_3F6508;
}

uint64_t OUTLINED_FUNCTION_0_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(_BYTE *)(v4 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, v4 - 72, v3);
}

uint64_t OUTLINED_FUNCTION_1_9@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v2 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)(v2 - 72, v1);
}

uint64_t OUTLINED_FUNCTION_3_9@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void OUTLINED_FUNCTION_4_6()
{
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  return type metadata accessor for SingleResultVoicemailModel(0LL);
}

void OUTLINED_FUNCTION_8_9()
{
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
}

void OUTLINED_FUNCTION_9_7()
{
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
}

void OUTLINED_FUNCTION_10_8()
{
  *(_DWORD *)(v0 - 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0;
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v1 - 152), *(void *)(v1 - 144));
}

uint64_t OUTLINED_FUNCTION_18_5@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 - 128) + 8LL))(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_19_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

void ContactConfirmationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  void *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_6();
}

void property wrapper backing initializer of PlayVoicemailModel.callRecords(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleVoicemailModel]);
  Loggable.init(wrappedValue:)(&v2, v1);
  OUTLINED_FUNCTION_4();
}

void PlayVoicemailModel.callRecords.getter()
{
}

uint64_t type metadata accessor for PlayVoicemailModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PlayVoicemailModel;
  if (!type metadata singleton initialization cache for PlayVoicemailModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayVoicemailModel);
  }
  return result;
}

void key path setter for PlayVoicemailModel.callRecords : PlayVoicemailModel()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  PlayVoicemailModel.callRecords.setter(v0);
}

void PlayVoicemailModel.callRecords.setter(uint64_t a1)
{
  uint64_t v2 = a1;
  OUTLINED_FUNCTION_1_10();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  Loggable.wrappedValue.setter(&v2, v1);
  OUTLINED_FUNCTION_4();
}

void PlayVoicemailModel.callRecords.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void PlayVoicemailModel.voicemailTitle.getter()
{
}

void key path setter for PlayVoicemailModel.voicemailTitle : PlayVoicemailModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  PlayVoicemailModel.voicemailTitle.setter(v1);
}

void PlayVoicemailModel.voicemailTitle.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void PlayVoicemailModel.voicemailTitle.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void PlayVoicemailModel.openPhoneText.getter()
{
}

void key path setter for PlayVoicemailModel.openPhoneText : PlayVoicemailModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  PlayVoicemailModel.openPhoneText.setter(v1);
}

void PlayVoicemailModel.openPhoneText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void PlayVoicemailModel.openPhoneText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t property wrapper backing initializer of PlayVoicemailModel.openPhoneAction(uint64_t a1)
{
  unint64_t v2 = type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)(a1, v2);
}

unint64_t type metadata accessor for SABaseCommand()
{
  unint64_t result = lazy cache variable for type metadata for SABaseCommand;
  if (!lazy cache variable for type metadata for SABaseCommand)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SABaseCommand);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  }

  return result;
}

void PlayVoicemailModel.openPhoneAction.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for PlayVoicemailModel.openPhoneAction : PlayVoicemailModel(id *a1)
{
}

void PlayVoicemailModel.openPhoneAction.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  CodableAceObject.wrappedValue.setter(a1, v2);
  OUTLINED_FUNCTION_2();
}

void PlayVoicemailModel.openPhoneAction.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_1_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v1[4] = CodableAceObject.wrappedValue.modify(v1, v2);
  OUTLINED_FUNCTION_6();
}

uint64_t PlayVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    unint64_t v5 = 0xEE00644977656956LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6F6365526C6C6163LL && a2 == 0xEB00000000736472LL)
  {
    unint64_t v8 = 0xEB00000000736472LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F6365526C6C6163LL, 0xEB00000000736472LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x69616D6563696F76LL && a2 == 0xEE00656C7469546CLL)
  {
    unint64_t v10 = 0xEE00656C7469546CLL;
    goto LABEL_24;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x69616D6563696F76LL, 0xEE00656C7469546CLL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2LL;
  }

  if (a1 == 0x6E6F68506E65706FLL && a2 == 0xED00007478655465LL)
  {
    unint64_t v12 = 0xED00007478655465LL;
    goto LABEL_32;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F68506E65706FLL, 0xED00007478655465LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3LL;
  }

  if (a1 == 0x6E6F68506E65706FLL && a2 == 0xEF6E6F6974634165LL)
  {
    swift_bridgeObjectRelease(0xEF6E6F6974634165LL);
    return 4LL;
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F68506E65706FLL, 0xEF6E6F6974634165LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

uint64_t PlayVoicemailModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_56DD8 + 4 * byte_31ECE0[a1]))( 0x65736E6F70736572LL,  0xEE00644977656956LL);
}

uint64_t sub_56DD8()
{
  return 0x6F6365526C6C6163LL;
}

uint64_t sub_56DF8()
{
  return 0x69616D6563696F76LL;
}

uint64_t sub_56E1C()
{
  return 0x6E6F68506E65706FLL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PlayVoicemailModel.CodingKeys()
{
  return PlayVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PlayVoicemailModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = PlayVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PlayVoicemailModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PlayVoicemailModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void PlayVoicemailModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PlayVoicemailModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_3F6700, &unk_3F6700, v12, v10, v11);
  uint64_t v13 = *v3;
  uint64_t v14 = v3[1];
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v15, v5);
  if (!v2)
  {
    type metadata accessor for PlayVoicemailModel(0LL);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_6_12();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_6_12();
    OUTLINED_FUNCTION_6_12();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_6_12();
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_3F6700);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_3F6700);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_3F6700);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PlayVoicemailModel.CodingKeys, &unk_3F6700);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A]( uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_12_6(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    uint64_t v6 = v3;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleVoicemailModel]);
    lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(v6);
    unint64_t result = swift_getWitnessTable(v5, v7);
    atomic_store(result, v1);
  }

  return result;
}

void PlayVoicemailModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v32 = *(void *)(v35 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v34 = v4 - v3;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v43 = *(void *)(v41 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PlayVoicemailModel.CodingKeys>);
  uint64_t v11 = *(void *)(v36 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  uint64_t v44 = (int *)type metadata accessor for PlayVoicemailModel(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v17 = (char *)(v16 - v15);
  strcpy((char *)(v16 - v15), "PlayVoicemail");
  *(_WORD *)(v16 - v15 + __swift_destroy_boxed_opaque_existential_1(v0 + 14) = -4864;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  unint64_t v20 = lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  uint64_t v37 = v14;
  uint64_t v21 = v42;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_3F6700, &unk_3F6700, v20, v18, v19);
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1(v40);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v31 = v6;
    uint64_t v42 = v11;
    uint64_t v22 = v35;
    uint64_t v23 = v36;
    char v49 = 0;
    *(void *)uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v36);
    *((void *)v17 + 1) = v24;
    char v48 = 1;
    unint64_t v25 = lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>);
    uint64_t v26 = v39;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v39, &v48, v23, v39, v25);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(&v17[v44[5]], v10, v26);
    char v47 = 2;
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_7_10(v27, (uint64_t)&v47);
    uint64_t v28 = OUTLINED_FUNCTION_13_13((uint64_t)&v17[v44[6]]);
    char v46 = 3;
    OUTLINED_FUNCTION_7_10(v28, (uint64_t)&v46);
    OUTLINED_FUNCTION_13_13((uint64_t)&v17[v44[7]]);
    char v45 = 4;
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    uint64_t v29 = v34;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v22, &v45, v23, v22, v30);
    OUTLINED_FUNCTION_0_8(v42);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v17[v44[8]], v29, v22);
    outlined init with copy of PlayVoicemailModel((uint64_t)v17, v33);
    __swift_destroy_boxed_opaque_existential_1(v40);
    outlined destroy of PlayVoicemailModel((uint64_t)v17);
  }

  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>( uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_12_6(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [SingleVoicemailModel] and conformance <A> [A]);
    lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [SingleVoicemailModel] and conformance <A> [A]);
    unint64_t result = swift_getWitnessTable(v4, v5);
    atomic_store(result, v1);
  }

  return result;
}

void _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_0(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String>);
    atomic_store(OUTLINED_FUNCTION_19_4(v2, v2), v1);
  }

  OUTLINED_FUNCTION_4();
}

void lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>( uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    atomic_store(OUTLINED_FUNCTION_19_4(v2, v2), v1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t outlined init with copy of PlayVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlayVoicemailModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PlayVoicemailModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlayVoicemailModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t PlayVoicemailModel.init(responseViewId:callRecords:voicemailTitle:openPhoneText:openPhoneAction:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  OUTLINED_FUNCTION_1_10();
  uint64_t v34 = a3;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleVoicemailModel]);
  uint64_t v16 = Loggable.init(wrappedValue:)(&v34, v15);
  uint64_t v35 = a5;
  uint64_t v24 = OUTLINED_FUNCTION_20_2(v16, v17, v18, v19, v20, v21, v22, v23, a4);
  uint64_t v35 = a7;
  OUTLINED_FUNCTION_20_2(v24, v25, v26, v27, v28, v29, v30, v31, a6);
  unint64_t v32 = type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)(a8, v32);
}

void instantiation function for generic protocol witness table for PlayVoicemailModel(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void base witness table accessor for Decodable in PlayVoicemailModel()
{
}

void base witness table accessor for Encodable in PlayVoicemailModel()
{
}

void lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel( uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v3 = v2(255LL);
    atomic_store(OUTLINED_FUNCTION_19_4(v3, v3), v1);
  }

  OUTLINED_FUNCTION_2();
}

void protocol witness for Decodable.init(from:) in conformance PlayVoicemailModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for Encodable.encode(to:) in conformance PlayVoicemailModel(void *a1)
{
}

void sub_57968()
{
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_2();
}

void sub_5798C()
{
  *uint64_t v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_579B0()
{
  *uint64_t v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_579D4()
{
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_2();
}

char *initializeBufferWithCopyOfBuffer for PlayVoicemailModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL);
    v16(v13, v14, v15);
    v16(&a1[a3[7]], (char *)a2 + a3[7], v15);
    uint64_t v17 = a3[8];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v18, v19, v20);
  }

  return a1;
}

uint64_t destroy for PlayVoicemailModel(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL);
  v8(v6, v7);
  v8(a1 + a2[7], v7);
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(v9, v10);
}

char *initializeWithCopy for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16LL);
  v15(v12, v13, v14);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
  return a1;
}

char *assignWithCopy for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24LL))(v16, v17, v18);
  return a1;
}

char *initializeWithTake for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v16, v17, v18);
  return a1;
}

char *assignWithTake for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40LL);
  v15(v12, v13, v14);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40LL))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_57FC8);
}

uint64_t sub_57FC8(uint64_t a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == (_DWORD)a2)
    {
      uint64_t v9 = v8;
      uint64_t v10 = a3[5];
    }

    else
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      if (*(_DWORD *)(*(void *)(v11 - 8) + 84LL) == (_DWORD)a2)
      {
        uint64_t v9 = v11;
        uint64_t v10 = a3[6];
      }

      else
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        uint64_t v10 = a3[8];
      }
    }

    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }

uint64_t storeEnumTagSinglePayload for PlayVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5809C);
}

void sub_5809C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
    {
      uint64_t v9 = v8;
      uint64_t v10 = a4[5];
    }

    else
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      if (*(_DWORD *)(*(void *)(v11 - 8) + 84LL) == a3)
      {
        uint64_t v9 = v11;
        uint64_t v10 = a4[6];
      }

      else
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        uint64_t v10 = a4[8];
      }
    }

    __swift_storeEnumTagSinglePayload(a1 + v10, a2, a2, v9);
  }

void type metadata completion function for PlayVoicemailModel(uint64_t a1)
{
  v8[0] = &unk_31EDA8;
  type metadata accessor for Loggable<[SingleVoicemailModel]>(319LL);
  if (v3 <= 0x3F)
  {
    v8[1] = *(void *)(v2 - 8) + 64LL;
    type metadata accessor for Loggable<String>();
    if (v5 <= 0x3F)
    {
      uint64_t v9 = *(void *)(v4 - 8) + 64LL;
      uint64_t v10 = v9;
      type metadata accessor for CodableAceObject<SABaseCommand>(319LL);
      if (v7 <= 0x3F)
      {
        uint64_t v11 = *(void *)(v6 - 8) + 64LL;
        swift_initStructMetadata(a1, 256LL, 5LL, v8, a1 + 16);
      }
    }
  }

void type metadata accessor for Loggable<[SingleVoicemailModel]>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for Loggable<[SingleVoicemailModel]>)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleVoicemailModel]);
    unint64_t v3 = type metadata accessor for Loggable(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    }
  }

void type metadata accessor for CodableAceObject<SABaseCommand>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for CodableAceObject<SABaseCommand>)
  {
    unint64_t v2 = type metadata accessor for SABaseCommand();
    unint64_t v3 = type metadata accessor for CodableAceObject(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseCommand>);
    }
  }

uint64_t storeEnumTagSinglePayload for PlayVoicemailModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_582FC + 4 * byte_31ECEA[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_58330 + 4 * byte_31ECE5[v4]))();
}

uint64_t sub_58330(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_58338(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x58340LL);
  }
  return result;
}

uint64_t sub_5834C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x58354LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_58358(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_58360(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for PlayVoicemailModel.CodingKeys()
{
  return &unk_3F6700;
}

uint64_t OUTLINED_FUNCTION_0_8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  return type metadata accessor for PlayVoicemailModel(0LL);
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t OUTLINED_FUNCTION_7_10(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(v3, a2, v4, v3, v2);
}

uint64_t OUTLINED_FUNCTION_9_8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 96) + 8LL))(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_13_13(uint64_t a1)
{
  return v1(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_19_4(uint64_t a1, uint64_t a2)
{
  return swift_getWitnessTable(v2, a2);
}

uint64_t OUTLINED_FUNCTION_20_2( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.init(wrappedValue:)(&a9, v9);
}

uint64_t SingleVoicemailModel.unseen.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t SingleVoicemailModel.unseen.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = result;
  return result;
}

void SingleVoicemailModel.openVoicemailRSKE.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for SingleVoicemailModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for SingleVoicemailModel;
  if (!type metadata singleton initialization cache for SingleVoicemailModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SingleVoicemailModel);
  }
  return result;
}

void key path setter for SingleVoicemailModel.openVoicemailRSKE : SingleVoicemailModel(id *a1)
{
  id v1 = *a1;
  SingleVoicemailModel.openVoicemailRSKE.setter();
}

void SingleVoicemailModel.openVoicemailRSKE.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SingleVoicemailModel.openVoicemailRSKE.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_3_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void SingleVoicemailModel.openContactRSKE.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for SingleVoicemailModel.openContactRSKE : SingleVoicemailModel(id *a1)
{
  id v1 = *a1;
  SingleVoicemailModel.openContactRSKE.setter();
}

void SingleVoicemailModel.openContactRSKE.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SingleVoicemailModel.openContactRSKE.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_3_10();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void SingleVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:unseen:openVoicemailRSKE:openContactRSKE:)( uint64_t a1@<X6>, uint64_t a2@<X7>, uint64_t a3@<X8>, char a4, void *a5, uint64_t a6)
{
  *(void *)a3 = v9;
  *(void *)(a3 + 8) = v10;
  *(void *)(a3 + ++*(void *)(v0 + 16) = v11;
  *(void *)(a3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v12;
  *(void *)(a3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
  *(void *)(a3 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v14;
  *(void *)(a3 + 48) = v15;
  *(void *)(a3 + 56) = v16;
  OUTLINED_FUNCTION_3_10();
  unint64_t v17 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v18 = a5;
  CodableAceObject.init(wrappedValue:)(v18, v17);
  *(void *)(a3 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(a3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(_BYTE *)(a3 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a4;
  CodableAceObject.init(wrappedValue:)(a6, v17);
}

uint64_t SingleVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    unint64_t v5 = 0xEE00644977656956LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x4E79616C70736964LL && a2 == 0xEB00000000656D61LL)
  {
    unint64_t v8 = 0xEB00000000656D61LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4E79616C70736964LL, 0xEB00000000656D61LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000011LL)
  {
    unint64_t v9 = 0x80000000003463B0LL;
    if (a2 == 0x80000000003463B0LL) {
      goto LABEL_21;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x80000000003463B0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 0x4479616C70736964LL && a2 == 0xEF656D6954657461LL)
  {
    unint64_t v11 = 0xEF656D6954657461LL;
    goto LABEL_29;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4479616C70736964LL, 0xEF656D6954657461LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3LL;
  }

  if (a1 == 0x617275446C6C6163LL && a2 == 0xEC0000006E6F6974LL)
  {
    unint64_t v13 = 0xEC0000006E6F6974LL;
    goto LABEL_37;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x617275446C6C6163LL, 0xEC0000006E6F6974LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4LL;
  }

  if (a1 == 0x6E6565736E75LL && a2 == 0xE600000000000000LL)
  {
    unint64_t v15 = 0xE600000000000000LL;
    goto LABEL_45;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6565736E75LL, 0xE600000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v15 = a2;
LABEL_45:
    swift_bridgeObjectRelease(v15);
    return 5LL;
  }

  if (a1 == 0xD000000000000011LL)
  {
    unint64_t v16 = 0x8000000000346EF0LL;
    if (a2 == 0x8000000000346EF0LL) {
      goto LABEL_50;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x8000000000346EF0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v16 = a2;
LABEL_50:
    swift_bridgeObjectRelease(v16);
    return 6LL;
  }

  if (a1 == 0x746E6F436E65706FLL && a2 == 0xEF454B5352746361LL)
  {
    swift_bridgeObjectRelease(0xEF454B5352746361LL);
    return 7LL;
  }

  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746E6F436E65706FLL, 0xEF454B5352746361LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v18 & 1) != 0) {
      return 7LL;
    }
    else {
      return 8LL;
    }
  }

uint64_t SingleVoicemailModel.CodingKeys.init(intValue:)()
{
  return 8LL;
}

uint64_t SingleVoicemailModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_58B5C + 4 * byte_31EEE0[a1]))( 0x65736E6F70736572LL,  0xEE00644977656956LL);
}

uint64_t sub_58B5C()
{
  return 0x4E79616C70736964LL;
}

unint64_t sub_58B7C()
{
  return 0xD000000000000011LL;
}

uint64_t sub_58BFC()
{
  return 0x746E6F436E65706FLL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleVoicemailModel.CodingKeys()
{
  return SingleVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleVoicemailModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = SingleVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SingleVoicemailModel.CodingKeys@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = SingleVoicemailModel.CodingKeys.init(intValue:)();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleVoicemailModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleVoicemailModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void SingleVoicemailModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleVoicemailModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_3F6898, &unk_3F6898, v12, v10, v11);
  uint64_t v13 = *(void *)v3;
  uint64_t v14 = *(void *)(v3 + 8);
  char v34 = 0;
  OUTLINED_FUNCTION_1_8(v13, v14, (uint64_t)&v34);
  if (!v2)
  {
    uint64_t v15 = *(void *)(v3 + 16);
    uint64_t v16 = *(void *)(v3 + 24);
    char v33 = 1;
    OUTLINED_FUNCTION_1_8(v15, v16, (uint64_t)&v33);
    uint64_t v17 = *(void *)(v3 + 32);
    uint64_t v18 = *(void *)(v3 + 40);
    char v32 = 2;
    OUTLINED_FUNCTION_1_8(v17, v18, (uint64_t)&v32);
    uint64_t v19 = *(void *)(v3 + 48);
    uint64_t v20 = *(void *)(v3 + 56);
    char v31 = 3;
    OUTLINED_FUNCTION_1_8(v19, v20, (uint64_t)&v31);
    uint64_t v21 = *(void *)(v3 + 64);
    uint64_t v22 = *(void *)(v3 + 72);
    char v30 = 4;
    OUTLINED_FUNCTION_1_8(v21, v22, (uint64_t)&v30);
    uint64_t v23 = *(unsigned __int8 *)(v3 + 80);
    char v29 = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v23, &v29, v5);
    uint64_t v24 = type metadata accessor for SingleVoicemailModel(0LL);
    uint64_t v25 = v3 + *(int *)(v24 + 40);
    char v28 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_7_11(v25, (uint64_t)&v28);
    uint64_t v26 = v3 + *(int *)(v24 + 44);
    char v27 = 7;
    OUTLINED_FUNCTION_7_11(v26, (uint64_t)&v27);
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_3F6898);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_3F6898);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_3F6898);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SingleVoicemailModel.CodingKeys, &unk_3F6898);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }

  return result;
}

void SingleVoicemailModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v37 = *(void *)(v41 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleVoicemailModel.CodingKeys>);
  uint64_t v7 = *(void **)(v36 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v38 = type metadata accessor for SingleVoicemailModel(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_4_7();
  *uint64_t v10 = v8;
  v10[1] = v9;
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v39 = a1;
  unsigned int v14 = __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v15 = lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  uint64_t v16 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_3F6898, &unk_3F6898, v15, v12, v13);
  if (!v16)
  {
    uint64_t v40 = v6;
    char v34 = v4;
    char v49 = 0;
    uint64_t v17 = v36;
    uint64_t v18 = (uint64_t)v11;
    *uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)(&v49, v36);
    v11[1] = v19;
    char v48 = 1;
    uint64_t v20 = OUTLINED_FUNCTION_5_4((uint64_t)&v48);
    uint64_t v21 = v39;
    v11[2] = v20;
    v11[3] = v22;
    char v47 = 2;
    v11[4] = OUTLINED_FUNCTION_5_4((uint64_t)&v47);
    uint64_t v11[5] = v23;
    char v46 = 3;
    v11[6] = OUTLINED_FUNCTION_5_4((uint64_t)&v46);
    v11[7] = v24;
    char v45 = 4;
    v11[8] = OUTLINED_FUNCTION_5_4((uint64_t)&v45);
    v11[9] = v25;
    char v44 = 5;
    *((_BYTE *)v11 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = KeyedDecodingContainer.decode(_:forKey:)(&v44, v17) & 1;
    char v43 = 6;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t v27 = v26;
    uint64_t v28 = v41;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v41, &v43, v17, v41, v26);
    uint64_t v31 = OUTLINED_FUNCTION_25_3();
    uint64_t v33 = v27;
    OUTLINED_FUNCTION_18_6(v31);
    char v42 = 7;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v28, &v42, v17, v28, v33);
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_18_6(v18 + *(int *)(v38 + 44));
    outlined init with copy of SingleVoicemailModel(v18, v35);
    __swift_destroy_boxed_opaque_existential_1(v21);
    outlined destroy of SingleVoicemailModel(v18);
    goto LABEL_11;
  }

  OUTLINED_FUNCTION_6_13();
  __swift_destroy_boxed_opaque_existential_1(v7);
  swift_bridgeObjectRelease();
  if ((_DWORD)v12)
  {
    swift_bridgeObjectRelease();
    if (!(_DWORD)v4)
    {
LABEL_6:
      if (!(_DWORD)v13) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }

  else if (!(_DWORD)v4)
  {
    goto LABEL_6;
  }

  swift_bridgeObjectRelease();
  if (!(_DWORD)v13)
  {
LABEL_7:
    if (!v14) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

uint64_t outlined init with copy of SingleVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleVoicemailModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SingleVoicemailModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SingleVoicemailModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void instantiation function for generic protocol witness table for SingleVoicemailModel(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void base witness table accessor for Decodable in SingleVoicemailModel()
{
}

void base witness table accessor for Encodable in SingleVoicemailModel()
{
}

void lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel( unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = type metadata accessor for SingleVoicemailModel(255LL);
    atomic_store(OUTLINED_FUNCTION_110(v2), a1);
  }

  OUTLINED_FUNCTION_2();
}

void protocol witness for Decodable.init(from:) in conformance SingleVoicemailModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for Encodable.encode(to:) in conformance SingleVoicemailModel(void *a1)
{
}

void sub_59424(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

void sub_5944C(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t initializeBufferWithCopyOfBuffer for SingleVoicemailModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain();
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + ++*(void *)(v0 + 16) = a2[2];
    *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2[4];
    *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[8];
    uint64_t v12 = a2[9];
    *(_BYTE *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *((_BYTE *)a2 + 80);
    uint64_t v13 = *(int *)(a3 + 40);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v11;
    *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL);
    v17(v14, v15, v16);
    v17(a1 + *(int *)(a3 + 44), (uint64_t)a2 + *(int *)(a3 + 44), v16);
  }

  return a1;
}

uint64_t destroy for SingleVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 44), v5);
}

uint64_t initializeWithCopy for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + ++*(void *)(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  *(_BYTE *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(_BYTE *)(a2 + 80);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v10;
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16LL);
  v16(v13, v14, v15);
  v16(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v15);
  return a1;
}

uint64_t assignWithCopy for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + ++*(void *)(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 64);
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(_BYTE *)(a2 + 80);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24LL);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v9);
  return a1;
}

uint64_t initializeWithTake for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v6;
  __int128 v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  __int128 v8 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(_BYTE *)(a2 + 80);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v12);
  return a1;
}

uint64_t assignWithTake for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + ++*(void *)(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 64);
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(_BYTE *)(a2 + 80);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40LL);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_599C8);
}

uint64_t sub_599C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 40), a2, v8);
  }

uint64_t storeEnumTagSinglePayload for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_59A4C);
}

void sub_59A4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 40), a2, a2, v7);
  }

void type metadata completion function for SingleVoicemailModel(uint64_t a1)
{
  v4[0] = &unk_31EFB8;
  v4[1] = &unk_31EFB8;
  v4[2] = &unk_31EFB8;
  v4[3] = &unk_31EFB8;
  v4[4] = &unk_31EFB8;
  v4[5] = &unk_31EFD0;
  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    swift_initStructMetadata(a1, 256LL, 8LL, v4, a1 + 16);
  }

uint64_t getEnumTagSinglePayload for SingleVoicemailModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for SingleVoicemailModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF8) {
    return ((uint64_t (*)(void))((char *)&loc_59C0C + 4 * byte_31EEED[v4]))();
  }
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_59C40 + 4 * byte_31EEE8[v4]))();
}

uint64_t sub_59C40(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_59C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x59C50LL);
  }
  return result;
}

uint64_t sub_59C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x59C64LL);
  }
  *(_BYTE *)unint64_t result = a2 + 7;
  return result;
}

uint64_t sub_59C68(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_59C70(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleVoicemailModel.CodingKeys()
{
  return &unk_3F6898;
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return type metadata accessor for SingleVoicemailModel(0LL);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_7_11(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)(a1, a2, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 8))(v0, *(void *)(v2 - 128));
}

  ;
}

uint64_t OUTLINED_FUNCTION_18_6(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t PhoneCallDirectInvocationNLIntent.smsGroups.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 80));
}

void PhoneCallDirectInvocationNLIntent.smsGroups.setter(uint64_t a1)
{
  *(void *)(v1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a1;
  OUTLINED_FUNCTION_2();
}

uint64_t SingleCallRecordModel.isVideoCall.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t SingleCallRecordModel.isVideoCall.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 88) = result;
  return result;
}

void SingleCallRecordModel.directInvocation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for SingleCallRecordModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for SingleCallRecordModel;
  if (!type metadata singleton initialization cache for SingleCallRecordModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SingleCallRecordModel);
  }
  return result;
}

void key path setter for SingleCallRecordModel.directInvocation : SingleCallRecordModel(id *a1)
{
  id v1 = *a1;
  SingleCallRecordModel.directInvocation.setter();
}

void SingleCallRecordModel.directInvocation.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SingleCallRecordModel.directInvocation.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_4_8();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void SingleCallRecordModel.openContactDirectInvocation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for SingleCallRecordModel.openContactDirectInvocation : SingleCallRecordModel(id *a1)
{
  id v1 = *a1;
  SingleCallRecordModel.openContactDirectInvocation.setter();
}

void SingleCallRecordModel.openContactDirectInvocation.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void SingleCallRecordModel.openContactDirectInvocation.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_4_8();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void SingleCallRecordModel.init(displayName:displayCallDetail:displayDateTime:currentCallType:contactIds:directInvocation:openContactDirectInvocation:isVideoCall:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11, uint64_t a12, char a13)
{
  *(void *)a9 = 0xD000000000000010LL;
  *(void *)(a9 + 8) = 0x8000000000346B00LL;
  *(void *)(a9 + ++*(void *)(v0 + 16) = a1;
  *(void *)(a9 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  *(void *)(a9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(a9 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  OUTLINED_FUNCTION_4_8();
  unint64_t v16 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v17 = a11;
  CodableAceObject.init(wrappedValue:)(v17, v16);
  *(void *)(a9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a8;
  *(void *)(a9 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a10;
  *(void *)(a9 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a7;
  CodableAceObject.init(wrappedValue:)(a12, v16);

  *(_BYTE *)(a9 + 88) = a13;
}

uint64_t SingleCallRecordModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    unint64_t v5 = 0xEE00644977656956LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x4E79616C70736964LL && a2 == 0xEB00000000656D61LL)
  {
    unint64_t v8 = 0xEB00000000656D61LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4E79616C70736964LL, 0xEB00000000656D61LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000011LL)
  {
    unint64_t v9 = 0x80000000003463B0LL;
    if (a2 == 0x80000000003463B0LL) {
      goto LABEL_21;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x80000000003463B0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 0x4479616C70736964LL && a2 == 0xEF656D6954657461LL)
  {
    unint64_t v11 = 0xEF656D6954657461LL;
    goto LABEL_29;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4479616C70736964LL, 0xEF656D6954657461LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3LL;
  }

  if (a1 == 0x43746E6572727563LL && a2 == 0xEF657079546C6C61LL)
  {
    unint64_t v13 = 0xEF657079546C6C61LL;
    goto LABEL_37;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x43746E6572727563LL, 0xEF657079546C6C61LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4LL;
  }

  if (a1 == 0x49746361746E6F63LL && a2 == 0xEA00000000007364LL)
  {
    unint64_t v15 = 0xEA00000000007364LL;
    goto LABEL_45;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49746361746E6F63LL, 0xEA00000000007364LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v15 = a2;
LABEL_45:
    swift_bridgeObjectRelease(v15);
    return 5LL;
  }

  if (a1 == 0x436F656469567369LL && a2 == 0xEB000000006C6C61LL)
  {
    unint64_t v17 = 0xEB000000006C6C61LL;
    goto LABEL_53;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x436F656469567369LL, 0xEB000000006C6C61LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v17 = a2;
LABEL_53:
    swift_bridgeObjectRelease(v17);
    return 6LL;
  }

  if (a1 == 0xD000000000000010LL)
  {
    unint64_t v18 = 0x8000000000346F10LL;
    if (a2 == 0x8000000000346F10LL) {
      goto LABEL_58;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x8000000000346F10LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v18 = a2;
LABEL_58:
    swift_bridgeObjectRelease(v18);
    return 7LL;
  }

  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000000346F30LL)
  {
    swift_bridgeObjectRelease(0x8000000000346F30LL);
    return 8LL;
  }

  else
  {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000000346F30LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v19 & 1) != 0) {
      return 8LL;
    }
    else {
      return 9LL;
    }
  }

uint64_t SingleCallRecordModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_5A534 + 4 * byte_31F100[a1]))( 0x65736E6F70736572LL,  0xEE00644977656956LL);
}

uint64_t sub_5A534()
{
  return 0x4E79616C70736964LL;
}

unint64_t sub_5A554()
{
  return 0xD000000000000011LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleCallRecordModel.CodingKeys()
{
  return SingleCallRecordModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleCallRecordModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = SingleCallRecordModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance SingleCallRecordModel.CodingKeys@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = variable initialization expression of PhoneCallDirectInvocationNLIntent.phoneCallNoun();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleCallRecordModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleCallRecordModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void SingleCallRecordModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleCallRecordModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_3F6A30, &unk_3F6A30, v12, v10, v11);
  uint64_t v13 = *(void *)v3;
  uint64_t v14 = *(void *)(v3 + 8);
  LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0;
  OUTLINED_FUNCTION_0_9(v13, v14);
  if (!v2)
  {
    uint64_t v15 = *(void *)(v3 + 16);
    uint64_t v16 = *(void *)(v3 + 24);
    LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 1;
    OUTLINED_FUNCTION_0_9(v15, v16);
    uint64_t v17 = *(void *)(v3 + 32);
    uint64_t v18 = *(void *)(v3 + 40);
    LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 2;
    OUTLINED_FUNCTION_0_9(v17, v18);
    uint64_t v19 = *(void *)(v3 + 48);
    uint64_t v20 = *(void *)(v3 + 56);
    LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 3;
    OUTLINED_FUNCTION_0_9(v19, v20);
    uint64_t v21 = *(void *)(v3 + 64);
    uint64_t v22 = *(void *)(v3 + 72);
    LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, &v30, v5);
    uint64_t v30 = *(void *)(v3 + 80);
    char v29 = 5;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    uint64_t v24 = lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v30, &v29, v5, v23, v24);
    uint64_t v25 = *(unsigned __int8 *)(v3 + 88);
    LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 6;
    KeyedEncodingContainer.encode(_:forKey:)(v25, &v30, v5);
    uint64_t v26 = type metadata accessor for SingleCallRecordModel(0LL);
    uint64_t v27 = v3 + *(int *)(v26 + 44);
    LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_7_11(v27, (uint64_t)&v30);
    uint64_t v28 = v3 + *(int *)(v26 + 48);
    LOBYTE(v3outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 8;
    OUTLINED_FUNCTION_7_11(v28, (uint64_t)&v30);
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SingleCallRecordModel.CodingKeys, &unk_3F6A30);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SingleCallRecordModel.CodingKeys, &unk_3F6A30);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable("Ux\r", &unk_3F6A30);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SingleCallRecordModel.CodingKeys, &unk_3F6A30);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }

  return result;
}

void SingleCallRecordModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleCallRecordModel.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v34 = type metadata accessor for SingleCallRecordModel(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  *(void *)uint64_t v10 = 0xD000000000000010LL;
  *(void *)(v10 + 8) = 0x8000000000346B00LL;
  *(void *)(v10 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0LL;
  *(void *)(v10 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  unint64_t v13 = lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_3F6A30, &unk_3F6A30, v13, v11, v12);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v14 = v7;
    LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 38) = 0;
    uint64_t v15 = v32;
    *(void *)uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v32);
    *(void *)(v10 + 8) = v16;
    *(void *)(v10 + ++*(void *)(v0 + 16) = OUTLINED_FUNCTION_2_6(1);
    *(void *)(v10 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v17;
    *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_2_6(2);
    *(void *)(v10 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v18;
    *(void *)(v10 + 48) = OUTLINED_FUNCTION_2_6(3);
    *(void *)(v10 + 56) = v19;
    uint64_t v20 = OUTLINED_FUNCTION_11_9(4);
    *(void *)(v10 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v20, v21);
    *(void *)(v10 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v22;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v37 = 5;
    uint64_t v24 = lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    OUTLINED_FUNCTION_7_12(v23, (uint64_t)&v37, v15, v23, v24);
    *(void *)(v10 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v38;
    uint64_t v25 = OUTLINED_FUNCTION_11_9(6);
    *(_BYTE *)(v10 + 88) = KeyedDecodingContainer.decode(_:forKey:)(v25, v26) & 1;
    LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 38) = 7;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t v30 = v27;
    OUTLINED_FUNCTION_7_12(v35, (uint64_t)&v38, v15, v35, v27);
    uint64_t v28 = v35;
    char v29 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
    v29(v10 + *(int *)(v34 + 44), v14, v35);
    LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 38) = 8;
    OUTLINED_FUNCTION_7_12(v28, (uint64_t)&v38, v15, v28, v30);
    OUTLINED_FUNCTION_13_14();
    v29(v10 + *(int *)(v34 + 48), v5, v35);
    outlined init with copy of SingleCallRecordModel(v10, v31);
    __swift_destroy_boxed_opaque_existential_1(v36);
    outlined destroy of SingleCallRecordModel(v10);
  }

  OUTLINED_FUNCTION_7_1();
}

uint64_t outlined init with copy of SingleCallRecordModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleCallRecordModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SingleCallRecordModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SingleCallRecordModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void instantiation function for generic protocol witness table for SingleCallRecordModel(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void base witness table accessor for Decodable in SingleCallRecordModel()
{
}

void base witness table accessor for Encodable in SingleCallRecordModel()
{
}

void lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel( unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = type metadata accessor for SingleCallRecordModel(255LL);
    atomic_store(OUTLINED_FUNCTION_110(v2), a1);
  }

  OUTLINED_FUNCTION_2();
}

void protocol witness for Decodable.init(from:) in conformance SingleCallRecordModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for Encodable.encode(to:) in conformance SingleCallRecordModel(void *a1)
{
}

void sub_5AEC8(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

void sub_5AEF0(void *a1@<X8>)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t initializeBufferWithCopyOfBuffer for SingleCallRecordModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain();
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + ++*(void *)(v0 + 16) = a2[2];
    *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2[4];
    *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[9];
    *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2[8];
    *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
    uint64_t v12 = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    uint64_t v13 = *(int *)(a3 + 44);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL);
    v17(v14, v15, v16);
    v17(a1 + *(int *)(a3 + 48), (uint64_t)a2 + *(int *)(a3 + 48), v16);
  }

  return a1;
}

uint64_t destroy for SingleCallRecordModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 48), v5);
}

uint64_t initializeWithCopy for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + ++*(void *)(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 64);
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16LL);
  v16(v13, v14, v15);
  v16(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v15);
  return a1;
}

uint64_t assignWithCopy for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + ++*(void *)(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 64);
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24LL);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v9);
  return a1;
}

uint64_t initializeWithTake for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v6;
  __int128 v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  __int128 v8 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(void *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v12);
  return a1;
}

uint64_t assignWithTake for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + ++*(void *)(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = *(void *)(a2 + 64);
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40LL);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5B4C4);
}

uint64_t sub_5B4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 44), a2, v8);
  }

uint64_t storeEnumTagSinglePayload for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5B548);
}

void sub_5B548(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 44), a2, a2, v7);
  }

void type metadata completion function for SingleCallRecordModel(uint64_t a1)
{
  v4[0] = &unk_31F1D8;
  v4[1] = &unk_31F1D8;
  v4[2] = &unk_31F1D8;
  v4[3] = &unk_31F1D8;
  v4[4] = &unk_31F1F0;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v4[6] = &unk_31F208;
  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    swift_initStructMetadata(a1, 256LL, 9LL, v4, a1 + 16);
  }

uint64_t storeEnumTagSinglePayload for SingleCallRecordModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF7) {
    return ((uint64_t (*)(void))((char *)&loc_5B698 + 4 * byte_31F10E[v4]))();
  }
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_5B6CC + 4 * byte_31F109[v4]))();
}

uint64_t sub_5B6CC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_5B6D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x5B6DCLL);
  }
  return result;
}

uint64_t sub_5B6E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x5B6F0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 8;
  return result;
}

uint64_t sub_5B6F4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5B6FC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SingleCallRecordModel.CodingKeys()
{
  return &unk_3F6A30;
}

uint64_t OUTLINED_FUNCTION_0_9(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, v3 - 72, v2);
}

uint64_t OUTLINED_FUNCTION_2_6@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v2 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)(v2 - 72, v1);
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return type metadata accessor for SingleCallRecordModel(0LL);
}

uint64_t OUTLINED_FUNCTION_7_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_11_9@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v1 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_13_14()
{
  return (*(uint64_t (**)(uint64_t, void))(v0 + 8))(v1, *(void *)(v2 - 128));
}

uint64_t specialized OneTimeHintGenerator<>.chooseHintIdentifier(history:)(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  OUTLINED_FUNCTION_8_5();
  uint64_t v4 = v14[0];
  uint64_t v5 = v14[1];
  __swift_project_boxed_opaque_existential_1(v13, v14[0]);
  char v6 = dispatch thunk of DeviceState.isHomePod.getter(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(v13);
  outlined init with copy of HangUpTipGenerator(v2, (uint64_t)v13);
  if ((v6 & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    OUTLINED_FUNCTION_8_5();
    int v7 = OUTLINED_FUNCTION_3_12(v12);
    uint64_t v8 = specialized Dictionary.subscript.getter(v7, a1);
    char v10 = v9;
    __swift_destroy_boxed_opaque_existential_1(v12);
    outlined destroy of HangUpTipGenerator((uint64_t)v13);
    if ((v10 & 1) != 0 || !v8) {
      __asm { BR              X11 }
    }
  }

  else
  {
    outlined destroy of HangUpTipGenerator((uint64_t)v13);
  }

  return 0LL;
}

void sub_5B990()
{
}

uint64_t OneTimeHintGenerator<>.chooseHintIdentifier(history:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void *)(v9 + 8);
  char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(v11, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  if ((v12 & 1) != 0)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 40))(v26, a2, v10);
    uint64_t v13 = v27;
    uint64_t v14 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v23, v13, v14);
    uint64_t v15 = v24;
    uint64_t v16 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    int v17 = OUTLINED_FUNCTION_6_14(v15, v16);
    uint64_t v18 = specialized Dictionary.subscript.getter(v17, a1);
    char v20 = v19;
    __swift_destroy_boxed_opaque_existential_1(v23);
    OUTLINED_FUNCTION_10_9();
    __swift_destroy_boxed_opaque_existential_1(v26);
    if ((v20 & 1) != 0 || !v18)
    {
      uint64_t v21 = (char *)&loc_5BB20
          + 4 * byte_31F344[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v10 + 24))(a2, v10)];
      __asm { BR              X10 }
    }
  }

  else
  {
    OUTLINED_FUNCTION_10_9();
  }

  return 0LL;
}

void sub_5BB5C()
{
}

uint64_t specialized OneTimeHintGenerator<>.makeUpdatedHintHistory(dialogIdentifier:previousHistory:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  int v7 = OUTLINED_FUNCTION_6_14(v5, v6);
  uint64_t result = OUTLINED_FUNCTION_13_15(v7);
  if ((v9 & 1) != 0) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = result;
  }
  if (__OFADD__(v10, 1LL))
  {
    __break(1u);
  }

  else
  {
    OUTLINED_FUNCTION_3_12(v13);
    uint64_t v11 = OUTLINED_FUNCTION_14_7();
    OUTLINED_FUNCTION_15_7(v11, v12, v11);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v13);
    return a3;
  }

  return result;
}

uint64_t OneTimeHintGenerator<>.makeUpdatedHintHistory(dialogIdentifier:previousHistory:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v18;
  uint64_t v5 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v14, v4, v5);
  uint64_t v6 = v15;
  uint64_t v7 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  int v8 = OUTLINED_FUNCTION_6_14(v6, v7);
  uint64_t result = OUTLINED_FUNCTION_13_15(v8);
  if ((v10 & 1) != 0) {
    uint64_t v11 = 0LL;
  }
  else {
    uint64_t v11 = result;
  }
  if (__OFADD__(v11, 1LL))
  {
    __break(1u);
  }

  else
  {
    OUTLINED_FUNCTION_3_12(v14);
    uint64_t v12 = OUTLINED_FUNCTION_14_7();
    OUTLINED_FUNCTION_15_7(v12, v13, v12);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v14);
    __swift_destroy_boxed_opaque_existential_1(v17);
    return a3;
  }

  return result;
}

uint64_t specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v3 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v4 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v3);
  }
  else {
    return 0LL;
  }
}

double specialized Dictionary.subscript.getter@<D0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = OUTLINED_FUNCTION_9_9(a1, a2), (v7 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v4 + 56) + 32 * v6, (uint64_t)a4);
  }

  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }

  return result;
}

void specialized Dictionary.subscript.getter( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = OUTLINED_FUNCTION_9_9(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v4 + 56) + 48 * v6;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t v12 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v13 = *(unsigned __int8 *)(v8 + 32);
    uint64_t v14 = *(void *)(v8 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }

  else
  {
    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
  }

  *a4 = v9;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = v11;
  a4[4] = v13;
  a4[5] = v14;
  OUTLINED_FUNCTION_58();
}

void specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if ((v3 & 1) != 0) {
      OUTLINED_FUNCTION_12_11(v2);
    }
  }

  OUTLINED_FUNCTION_2();
}

{
  uint64_t v2;
  char v3;
  if (*(void *)(a2 + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if ((v3 & 1) != 0) {
      OUTLINED_FUNCTION_12_11(v2);
    }
  }

  OUTLINED_FUNCTION_2();
}

void specialized Dictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    unint64_t v4 = OUTLINED_FUNCTION_9_9(a1, a2);
    if ((v5 & 1) != 0) {
      id v6 = *(id *)(*(void *)(v3 + 56) + 8 * v4);
    }
  }

  OUTLINED_FUNCTION_2();
}

uint64_t specialized Dictionary.subscript.getter@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = OUTLINED_FUNCTION_9_9(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v4 + 56);
    uint64_t v10 = type metadata accessor for SignalValue(0LL);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))( a4,  v9 + *(void *)(*(void *)(v10 - 8) + 72LL) * v8,  v10);
    uint64_t v11 = a4;
    uint64_t v12 = 0LL;
    uint64_t v13 = v10;
  }

  else
  {
    uint64_t v13 = type metadata accessor for SignalValue(0LL);
    uint64_t v11 = a4;
    uint64_t v12 = 1LL;
  }

  return __swift_storeEnumTagSinglePayload(v11, v12, 1LL, v13);
}

void specialized Dictionary.subscript.getter(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)();
    if ((v1 & 1) != 0) {
      swift_retain();
    }
  }

  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for SiriPhoneHintGenerator.chooseHintIdentifier(history:) in conformance HangUpTipGenerator( uint64_t *a1)
{
  return specialized OneTimeHintGenerator<>.chooseHintIdentifier(history:)(*a1);
}

uint64_t protocol witness for SiriPhoneHintGenerator.makeUpdatedHintHistory(dialogIdentifier:previousHistory:) in conformance HangUpTipGenerator@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = specialized OneTimeHintGenerator<>.makeUpdatedHintHistory(dialogIdentifier:previousHistory:)(a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)()
{
  return specialized Dictionary._Variant.setValue(_:forKey:)();
}

{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  OUTLINED_FUNCTION_2_7();
  uint64_t v0 = (_OWORD *)OUTLINED_FUNCTION_1_11();
  uint64_t v4 = specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0, v1, v2, v3);
  uint64_t v12 = OUTLINED_FUNCTION_5_5((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v14, v15);
  return OUTLINED_FUNCTION_0_10(v12);
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v1 = OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_4_9(v1);
  unint64_t v2 = *v0;
  *uint64_t v0 = v4;
  return OUTLINED_FUNCTION_0_10(v2);
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)();
}

{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  OUTLINED_FUNCTION_2_7();
  uint64_t v0 = (_OWORD *)OUTLINED_FUNCTION_1_11();
  uint64_t v4 = specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0, v1, v2, v3);
  uint64_t v12 = OUTLINED_FUNCTION_5_5(v4, v5, v6, v7, v8, v9, v10, v11, v14, v15);
  return OUTLINED_FUNCTION_0_10(v12);
}

{
  return specialized Dictionary._Variant.setValue(_:forKey:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  OUTLINED_FUNCTION_2_7();
  uint64_t v0 = OUTLINED_FUNCTION_1_11();
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v0, v1, v2, v3);
  uint64_t v12 = OUTLINED_FUNCTION_5_5(v4, v5, v6, v7, v8, v9, v10, v11, v14, v15);
  return OUTLINED_FUNCTION_0_10(v12);
}

uint64_t specialized Dictionary._Variant.setValue(_:forKey:)(uint64_t a1)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  uint64_t v14 = *v1;
  uint64_t *v1 = 0x8000000000000000LL;
  unint64_t v4 = specialized _NativeDictionary.setValue(_:forKey:isUnique:)(a1, isUniquelyReferenced_nonNull_native);
  OUTLINED_FUNCTION_5_5(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  return swift_bridgeObjectRelease();
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<Int, OneTimeHintHistory>);
  uint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
    __break(1u);
    return result;
  }

  unint64_t v14 = result;
LABEL_5:
  uint64_t v18 = *v4;
  if ((v15 & 1) == 0) {
    return specialized _NativeDictionary._insert(at:key:value:)(v14, a2, a1, v18);
  }
  *(void *)(*(void *)(v18 + 56) + 8 * v__swift_destroy_boxed_opaque_existential_1(v0 + 14) = a1;
  return result;
}

{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  Swift::Int v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<[ContactQuery], [ResolvedSiriKitContact]>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  uint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ContactQuery]);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v21);
    __break(1u);
    return result;
  }

  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if ((v15 & 1) != 0)
  {
    uint64_t v19 = *(void *)(v18 + 56);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v19 + 8 * v__swift_destroy_boxed_opaque_existential_1(v0 + 14) = a1;
  }

  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v14, a2, a1, v18);
    return swift_bridgeObjectRetain();
  }

  return result;
}

uint64_t outlined init with copy of HangUpTipGenerator(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined destroy of HangUpTipGenerator(uint64_t a1)
{
  return a1;
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)( _OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v16 = v11;
  char v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }

  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if ((v17 & 1) != 0)
  {
    uint64_t v21 = (void *)(*(void *)(v20 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_1(v21);
    return outlined init with take of Any(a1, v21);
  }

  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v16, a2, a3, (uint64_t)a1, v20);
    return (_OWORD *)swift_bridgeObjectRetain();
  }

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ContactResolverConfigHashable(0LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *v3;
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v13 & 1) == 0;
  Swift::Int v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_10;
  }

  unint64_t v17 = v12;
  char v18 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ContactResolverConfigHashable, [ContactQuery]>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v16)) {
    goto LABEL_5;
  }
  unint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  if ((v18 & 1) != (v20 & 1))
  {
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }

  unint64_t v17 = v19;
LABEL_5:
  uint64_t v21 = *v4;
  if ((v18 & 1) != 0)
  {
    uint64_t v22 = *(void *)(v21 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v22 + 8 * PhoneCallNLIntent.isOutgoingCall()( v0,  v1,  (uint64_t)PhoneCallNLIntent.isCallBack(),  (uint64_t)PhoneCallNLIntent.isRedial(),  (uint64_t)PhoneCallNLIntent.isOutgoingCallExcludeCallBackAndRedial(),  v2,  v3,  v4,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v15,  v16, v17) = a1;
  }

  else
  {
    outlined init with copy of ContactResolverConfigHashable((uint64_t)a2, (uint64_t)v10);
    specialized _NativeDictionary._insert(at:key:value:)(v17, (uint64_t)v10, a1, v21);
  }

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)( _OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v16 = v11;
  char v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, AnnotatedApp>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }

  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if ((v17 & 1) != 0)
  {
    uint64_t v21 = *(void *)(v20 + 56) + 48 * v16;
    uint64_t v22 = *(void *)v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release(v22);
    uint64_t result = swift_bridgeObjectRelease();
    __int128 v24 = a1[1];
    *(_OWORD *)uint64_t v21 = *a1;
    *(_OWORD *)(v21 + ++*(void *)(v0 + 16) = v24;
    *(_OWORD *)(v21 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1[2];
  }

  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v16, a2, a3, (uint64_t)a1, v20);
    return swift_bridgeObjectRetain();
  }

  return result;
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *v3;
  unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v14 & 1) == 0;
  Swift::Int v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_10;
  }

  unint64_t v18 = v13;
  char v19 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, CallStateOneTimeTask>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v17)) {
    goto LABEL_5;
  }
  unint64_t v20 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }

  unint64_t v18 = v20;
LABEL_5:
  uint64_t v22 = *v4;
  if ((v19 & 1) != 0)
  {
    uint64_t v23 = *(void *)(v22 + 56);
    swift_release(*(void *)(v23 + 8 * v18));
    *(void *)(v23 + 8 * v18) = a1;
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    specialized _NativeDictionary._insert(at:key:value:)(v18, (uint64_t)v11, a1, v22);
  }

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v16 = v11;
  char v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Task<[App], Never>>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if ((v17 & 1) != 0)
  {
    uint64_t v21 = *(void *)(v20 + 56);
    swift_release(*(void *)(v21 + 8 * v16));
    *(void *)(v21 + 8 * v++*(void *)(v0 + 16) = a1;
    OUTLINED_FUNCTION_58();
  }

  else
  {
    specialized _NativeDictionary._insert(at:key:value:)(v16, a2, a3, a1, v20);
    swift_bridgeObjectRetain();
  }

unint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = specialized __RawDictionaryStorage.find<A>(_:)();
  uint64_t v9 = *(void *)(v6 + 16);
  BOOL v10 = (v8 & 1) == 0;
  Swift::Int v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v12 = v7;
  char v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<TemplatingOperationType, TemplatingOperation>);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a2 & 1, v11)) {
    goto LABEL_5;
  }
  uint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)();
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TemplatingOperationType);
    __break(1u);
    return result;
  }

  unint64_t v12 = v14;
LABEL_5:
  uint64_t v16 = *v3;
  if ((v13 & 1) == 0) {
    return specialized _NativeDictionary._insert(at:key:value:)(v12, a1, v16);
  }
  uint64_t v17 = *(void *)(v16 + 56);
  unint64_t result = swift_release(*(void *)(v17 + 8 * v12));
  *(void *)(v17 + 8 * v1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_10(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  *uint64_t v0 = 0x8000000000000000LL;
  return v1;
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return swift_isUniquelyReferenced_nonNull_native(*v0);
}

uint64_t OUTLINED_FUNCTION_3_12(void *a1)
{
  return DeviceState.idiom.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_4_9(uint64_t a1)
{
  void *v2 = 0x8000000000000000LL;
  return v1(v4, v3, a1);
}

uint64_t OUTLINED_FUNCTION_6_14(uint64_t a1, uint64_t a2)
{
  return DeviceState.idiom.getter(a1, a2);
}

unint64_t OUTLINED_FUNCTION_9_9(uint64_t a1, uint64_t a2)
{
  return specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_11(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)(v1 + 56) + 8 * a1));
}

uint64_t OUTLINED_FUNCTION_13_15(int a1)
{
  return specialized Dictionary.subscript.getter(a1, v1);
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return swift_isUniquelyReferenced_nonNull_native(v0);
}

uint64_t OUTLINED_FUNCTION_15_7(uint64_t a1, uint64_t a2, char a3)
{
  return specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return v2(v0, v1);
}

uint64_t AppQuery.appId.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    if (*(void *)(a3 + 16))
    {
      a1 = *(void *)(a3 + 32);
      OUTLINED_FUNCTION_48_0();
    }

    else
    {
      a1 = 0LL;
    }
  }

  OUTLINED_FUNCTION_8_1();
  return a1;
}

uint64_t AppQuery.source.getter(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return 2LL;
  }
  else {
    return 1LL;
  }
}

uint64_t AppQuery.defaultAppId.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0LL;
  }
  uint64_t v3 = *(void *)(a3 + 32);
  OUTLINED_FUNCTION_8_1();
  return v3;
}

void AppQuery.isFirstParty.getter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_28_3();
    App.isFirstParty()();
    OUTLINED_FUNCTION_38_6();
    OUTLINED_FUNCTION_6();
  }

uint64_t AppQuery.isThirdParty.getter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_28_3();
    App.isFirstParty()();
    OUTLINED_FUNCTION_38_6();
    char v3 = v2 ^ 1;
  }

  else
  {
    char v3 = 0;
  }

  return v3 & 1;
}

unint64_t AppQuery.description.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)0xE000000000000000LL;
  _StringGuts.grow(_:)(26LL);
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD000000000000018LL;
  unint64_t v28 = 0x8000000000346F50LL;
  v26[0] = a1;
  v26[1] = a2;
  OUTLINED_FUNCTION_8_1();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  v8._uint64_t countAndFlagsBits = String.init<A>(describing:)(v26, v7);
  String.append(_:)(v8);
  OUTLINED_FUNCTION_50();
  unint64_t v10 = v27;
  unint64_t v9 = v28;
  uint64_t v11 = AppQuery.defaultAppId.getter(a1, a2, a3);
  char v13 = v12;
  if (v12)
  {
    uint64_t v14 = v11;
    unint64_t v27 = 0LL;
    unint64_t v28 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(17LL);
    swift_bridgeObjectRelease();
    unint64_t v27 = 0x6C7561666564202CLL;
    unint64_t v28 = 0xEF3D644970704174LL;
    v15._uint64_t countAndFlagsBits = v14;
    v15._object = v13;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    char v13 = (void *)v27;
    uint64_t v6 = (void *)v28;
  }

  unint64_t v27 = v10;
  unint64_t v28 = v9;
  OUTLINED_FUNCTION_6_1();
  v16._uint64_t countAndFlagsBits = (uint64_t)v13;
  v16._object = v6;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50();
  unint64_t v18 = v27;
  unint64_t v17 = v28;
  unint64_t v27 = 0x656372756F73202CLL;
  unint64_t v28 = 0xE90000000000003DLL;
  if (a2) {
    unsigned __int8 v19 = 2;
  }
  else {
    unsigned __int8 v19 = 1;
  }
  v20._uint64_t countAndFlagsBits = AppResolutionSource.description.getter(v19);
  String.append(_:)(v20);
  OUTLINED_FUNCTION_39();
  v21._uint64_t countAndFlagsBits = 41LL;
  v21._object = (void *)0xE100000000000000LL;
  String.append(_:)(v21);
  uint64_t v22 = v27;
  uint64_t v23 = (void *)v28;
  unint64_t v27 = v18;
  unint64_t v28 = v17;
  OUTLINED_FUNCTION_48_0();
  v24._uint64_t countAndFlagsBits = v22;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50();
  return v27;
}

uint64_t static AppQuery.Override.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1LL;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AppQuery.Override( uint64_t *a1, uint64_t *a2)
{
  return static AppQuery.Override.__derived_enum_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t static AppQuery.defaultFirstParty()()
{
  return 0LL;
}

uint64_t static AppQuery.userRequested(applicationId:)(uint64_t a1, uint64_t a2)
{
  return a1;
}

void AppQuery.Builder.__allocating_init(requestedAppId:overrides:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void AppQuery.Builder.init(requestedAppId:overrides:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = _swiftEmptyArrayStorage;
  void v3[2] = a1;
  void v3[3] = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_25_0((uint64_t)(v3 + 4), (uint64_t)v5, 1LL);
  v3[4] = a3;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

uint64_t AppQuery.Builder.__allocating_init(intent:)(void *a1)
{
  uint64_t v2 = v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = OUTLINED_FUNCTION_37_4();
  PhoneCallNLIntent.applicationId.getter(v4, v5, v6);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  outlined init with copy of SignalProviding((uint64_t)a1, (uint64_t)v18);
  if (!v10)
  {
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    uint64_t v11 = OUTLINED_FUNCTION_37_4();
    PhoneCallNLIntent.appName.getter(v11, v12, v13);
    uint64_t v8 = v14;
    uint64_t v10 = v15;
  }

  __swift_destroy_boxed_opaque_existential_1(v18);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v2 + 144))(v8, v10, _swiftEmptyArrayStorage);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v16;
}

void AppQuery.Builder.__allocating_init(app:)(uint64_t a1)
{
  uint64_t v3 = App.appIdentifier.getter();
  (*(void (**)(uint64_t))(v1 + 144))(v3);
  swift_release(a1);
  OUTLINED_FUNCTION_6();
}

void AppQuery.Builder.withOverrides(_:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_6_3();
  specialized Array.append<A>(contentsOf:)(v1);
  swift_endAccess(v2);
  swift_retain();
  OUTLINED_FUNCTION_26_1();
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v5 > *(void *)(v3 + 24) >> 1)
  {
    if (v4 <= v5) {
      uint64_t v8 = v4 + v2;
    }
    else {
      uint64_t v8 = v4;
    }
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( isUniquelyReferenced_nonNull_native,  v8,  1LL,  v3);
    uint64_t v3 = v9;
  }

  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  specialized UnsafeMutablePointer.initialize(from:count:)();
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return;
  }

  uint64_t v10 = *(void *)(v3 + 16);
  BOOL v11 = __OFADD__(v10, v2);
  uint64_t v12 = v10 + v2;
  if (!v11)
  {
    *(void *)(v3 + ++*(void *)(v0 + 16) = v12;
    goto LABEL_14;
  }

{
  specialized Array.append<A>(contentsOf:)( a1,  (uint64_t (*)(void))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:),  (void (*)(unint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.initialize(from:count:),  (uint64_t (*)(void))&type metadata accessor for DisplayHint);
}

{
  specialized Array.append<A>(contentsOf:)( a1,  (uint64_t (*)(void))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:),  (void (*)(unint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.initialize(from:count:),  (uint64_t (*)(void))&type metadata accessor for SemanticValue);
}

{
  specialized Array.append<A>(contentsOf:)(a1);
}

{
  specialized Array.append<A>(contentsOf:)(a1);
}

{
  specialized Array.append<A>(contentsOf:)(a1);
}

{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      unint64_t v17 = a1;
    }
    else {
      unint64_t v17 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v3 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v3 < 0) {
      unint64_t v18 = *v1;
    }
    else {
      unint64_t v18 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_36();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_30;
  }

  uint64_t v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  uint64_t *v1 = v3;
  uint64_t v4 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v3 & 0x8000000000000000LL) == 0 && (v3 & 0x4000000000000000LL) == 0)
  {
    uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v4 = 1LL;
  }

  Swift::String v20 = v2;
  uint64_t v8 = *(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    if (v8 <= v5) {
      uint64_t v8 = v5;
    }
    OUTLINED_FUNCTION_36();
    uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v4, v8, 1LL, v3);
    swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v2 = v20;
LABEL_16:
    OUTLINED_FUNCTION_1_12(v7);
    specialized Array._copyContents(initializing:)();
    if (v9 >= v2) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v3 < 0) {
      unsigned __int8 v19 = v3;
    }
    else {
      unsigned __int8 v19 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_36();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease();
  }

  if (v9 < 1) {
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_9_10();
  if (!v12)
  {
    *(void *)(v10 + ++*(void *)(v0 + 16) = v11;
LABEL_20:
    uint64_t v13 = swift_bridgeObjectRelease();
    specialized Array._endMutation()(v13, v14, v15, v16);
    return;
  }

  __break(1u);
}

{
  specialized Array.append<A>(contentsOf:)( a1,  (uint64_t (*)(void))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:),  (void (*)(unint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.initialize(from:count:),  (uint64_t (*)(void))&type metadata accessor for UsoIdentifier);
}

{
  specialized Array.append<A>(contentsOf:)( a1,  (uint64_t (*)(void))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:),  (void (*)(unint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.initialize(from:count:),  (uint64_t (*)(void))&type metadata accessor for ContactQuery);
}

{
  specialized Array.append<A>(contentsOf:)( a1,  (uint64_t (*)(void))specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:),  (void (*)(unint64_t, uint64_t, unint64_t))specialized UnsafeMutablePointer.initialize(from:count:),  (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier);
}

void specialized Array.append<A>(contentsOf:)()
{
  if (v3)
  {
    OUTLINED_FUNCTION_2_8();
    uint64_t v0 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    OUTLINED_FUNCTION_34_6();
  }

  OUTLINED_FUNCTION_33_5();
  if (v4)
  {
    OUTLINED_FUNCTION_4_10();
    uint64_t v2 = OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    OUTLINED_FUNCTION_32_2();
  }

  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }

  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_30_2();
  if (v5)
  {
    if ((v1 & 0x8000000000000000LL) == 0 && (v1 & 0x4000000000000000LL) == 0)
    {
      OUTLINED_FUNCTION_13_16();
      if (v8 ^ v9 | v7) {
        goto LABEL_13;
      }
    }
  }

  if (v1 >> 62) {
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_31_5();
  while (1)
  {
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_13();
    OUTLINED_FUNCTION_12_12();
    OUTLINED_FUNCTION_29_6();
LABEL_13:
    OUTLINED_FUNCTION_1_12(v6);
    specialized Array._copyContents(initializing:)();
    if (v10 >= v0) {
      break;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    OUTLINED_FUNCTION_5_6();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_50();
  }

  if (v10 < 1) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_9_10();
  if (!v9)
  {
    *(void *)(v11 + ++*(void *)(v0 + 16) = v12;
LABEL_17:
    uint64_t v13 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_11(v13, v14, v15, v16);
    return;
  }

  __break(1u);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  OUTLINED_FUNCTION_24_3();
  if (v3)
  {
    OUTLINED_FUNCTION_2_8();
    uint64_t v0 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    OUTLINED_FUNCTION_34_6();
  }

  OUTLINED_FUNCTION_33_5();
  if (v4)
  {
    OUTLINED_FUNCTION_4_10();
    uint64_t v2 = OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    OUTLINED_FUNCTION_32_2();
  }

  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }

  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_30_2();
  if (v5)
  {
    if ((v1 & 0x8000000000000000LL) == 0 && (v1 & 0x4000000000000000LL) == 0)
    {
      OUTLINED_FUNCTION_13_16();
      if (v8 ^ v9 | v7) {
        goto LABEL_13;
      }
    }
  }

  if (v1 >> 62) {
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_31_5();
  while (1)
  {
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_13();
    OUTLINED_FUNCTION_12_12();
    OUTLINED_FUNCTION_29_6();
LABEL_13:
    OUTLINED_FUNCTION_1_12(v6);
    OUTLINED_FUNCTION_47_2();
    if (v10 >= v0) {
      break;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    OUTLINED_FUNCTION_5_6();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_50();
  }

  if (v10 < 1) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_9_10();
  if (!v9)
  {
    *(void *)(v11 + ++*(void *)(v0 + 16) = v12;
LABEL_17:
    uint64_t v13 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_11(v13, v14, v15, v16);
    return;
  }

  __break(1u);
}

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  OUTLINED_FUNCTION_24_3();
  if (v3)
  {
    OUTLINED_FUNCTION_2_8();
    uint64_t v0 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    OUTLINED_FUNCTION_34_6();
  }

  OUTLINED_FUNCTION_33_5();
  if (v4)
  {
    OUTLINED_FUNCTION_4_10();
    uint64_t v2 = OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    OUTLINED_FUNCTION_32_2();
  }

  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }

  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_30_2();
  if (v5)
  {
    if ((v1 & 0x8000000000000000LL) == 0 && (v1 & 0x4000000000000000LL) == 0)
    {
      OUTLINED_FUNCTION_13_16();
      if (v8 ^ v9 | v7) {
        goto LABEL_13;
      }
    }
  }

  if (v1 >> 62) {
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_31_5();
  while (1)
  {
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_13();
    OUTLINED_FUNCTION_12_12();
    OUTLINED_FUNCTION_29_6();
LABEL_13:
    OUTLINED_FUNCTION_1_12(v6);
    OUTLINED_FUNCTION_47_2();
    if (v10 >= v0) {
      break;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    OUTLINED_FUNCTION_5_6();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_50();
  }

  if (v10 < 1) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_9_10();
  if (!v9)
  {
    *(void *)(v11 + ++*(void *)(v0 + 16) = v12;
LABEL_17:
    uint64_t v13 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_11(v13, v14, v15, v16);
    return;
  }

  __break(1u);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  OUTLINED_FUNCTION_21_2();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (!OUTLINED_FUNCTION_15_8() || v4 > *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_40_2();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v6, v7, v8, v9);
    uint64_t v2 = v10;
  }

  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  OUTLINED_FUNCTION_19_5();
  if (v11 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  OUTLINED_FUNCTION_27_5();
  specialized UnsafeMutablePointer.initialize(from:count:)();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_39();
    uint64_t *v1 = v2;
    OUTLINED_FUNCTION_16();
    return;
  }

  OUTLINED_FUNCTION_41_4();
  if (!v5)
  {
    *(void *)(v2 + ++*(void *)(v0 + 16) = v12;
    goto LABEL_11;
  }

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  OUTLINED_FUNCTION_24_3();
  if (v3)
  {
    OUTLINED_FUNCTION_2_8();
    uint64_t v0 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    OUTLINED_FUNCTION_34_6();
  }

  OUTLINED_FUNCTION_33_5();
  if (v4)
  {
    OUTLINED_FUNCTION_4_10();
    uint64_t v2 = OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    OUTLINED_FUNCTION_32_2();
  }

  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }

  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_30_2();
  if (v5)
  {
    if ((v1 & 0x8000000000000000LL) == 0 && (v1 & 0x4000000000000000LL) == 0)
    {
      OUTLINED_FUNCTION_13_16();
      if (v8 ^ v9 | v7) {
        goto LABEL_13;
      }
    }
  }

  if (v1 >> 62) {
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_31_5();
  while (1)
  {
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_13();
    OUTLINED_FUNCTION_12_12();
    OUTLINED_FUNCTION_29_6();
LABEL_13:
    OUTLINED_FUNCTION_1_12(v6);
    specialized Array._copyContents(initializing:)();
    if (v10 >= v0) {
      break;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    OUTLINED_FUNCTION_5_6();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_50();
  }

  if (v10 < 1) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_9_10();
  if (!v9)
  {
    *(void *)(v11 + ++*(void *)(v0 + 16) = v12;
LABEL_17:
    uint64_t v13 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_11(v13, v14, v15, v16);
    return;
  }

  __break(1u);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  OUTLINED_FUNCTION_21_2();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (!OUTLINED_FUNCTION_15_8() || v4 > *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_40_2();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v6, v7, v8, v9);
    uint64_t v2 = v10;
  }

  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  OUTLINED_FUNCTION_19_5();
  if (v11 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v12 = OUTLINED_FUNCTION_27_5();
  specialized UnsafeMutablePointer.initialize(from:count:)(v12, v13);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_39();
    uint64_t *v1 = v2;
    OUTLINED_FUNCTION_16();
    return;
  }

  OUTLINED_FUNCTION_41_4();
  if (!v5)
  {
    *(void *)(v2 + ++*(void *)(v0 + 16) = v14;
    goto LABEL_11;
  }

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  OUTLINED_FUNCTION_21_2();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (!OUTLINED_FUNCTION_15_8() || v4 > *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_40_2();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v2 = v6;
  }

  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  OUTLINED_FUNCTION_19_5();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v8 = OUTLINED_FUNCTION_27_5();
  specialized UnsafeMutablePointer.initialize(from:count:)(v8, v9);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_39();
    uint64_t *v1 = v2;
    OUTLINED_FUNCTION_16();
    return;
  }

  OUTLINED_FUNCTION_41_4();
  if (!v5)
  {
    *(void *)(v2 + ++*(void *)(v0 + 16) = v10;
    goto LABEL_11;
  }

{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  OUTLINED_FUNCTION_24_3();
  if (v3)
  {
    OUTLINED_FUNCTION_2_8();
    uint64_t v0 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    OUTLINED_FUNCTION_34_6();
  }

  OUTLINED_FUNCTION_33_5();
  if (v4)
  {
    OUTLINED_FUNCTION_4_10();
    uint64_t v2 = OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    OUTLINED_FUNCTION_32_2();
  }

  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }

  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_30_2();
  if (v5)
  {
    if ((v1 & 0x8000000000000000LL) == 0 && (v1 & 0x4000000000000000LL) == 0)
    {
      OUTLINED_FUNCTION_13_16();
      if (v8 ^ v9 | v7) {
        goto LABEL_13;
      }
    }
  }

  if (v1 >> 62) {
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_31_5();
  while (1)
  {
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_3_13();
    OUTLINED_FUNCTION_12_12();
    OUTLINED_FUNCTION_29_6();
LABEL_13:
    OUTLINED_FUNCTION_1_12(v6);
    OUTLINED_FUNCTION_47_2();
    if (v10 >= v0) {
      break;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    OUTLINED_FUNCTION_5_6();
    OUTLINED_FUNCTION_17_12();
    OUTLINED_FUNCTION_50();
  }

  if (v10 < 1) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_9_10();
  if (!v9)
  {
    *(void *)(v11 + ++*(void *)(v0 + 16) = v12;
LABEL_17:
    uint64_t v13 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_11(v13, v14, v15, v16);
    return;
  }

  __break(1u);
}

void specialized Array.append<A>(contentsOf:)( uint64_t a1, uint64_t (*a2)(void), void (*a3)(unint64_t, uint64_t, unint64_t), uint64_t (*a4)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (!OUTLINED_FUNCTION_15_8() || v8 + v6 > *(void *)(v7 + 24) >> 1)
  {
    OUTLINED_FUNCTION_40_2();
    uint64_t v7 = a2();
  }

  if (!*(void *)(v4 + 16))
  {
    if (!v6) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v13 = (*(void *)(v7 + 24) >> 1) - v12;
  uint64_t v14 = a4(0LL);
  if (v13 < v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  a3(v4 + v16, v6, v7 + v16 + *(void *)(v15 + 72) * v12);
  if (!v6)
  {
LABEL_11:
    OUTLINED_FUNCTION_39();
    *int v5 = v7;
    return;
  }

  OUTLINED_FUNCTION_41_4();
  if (!v18)
  {
    *(void *)(v7 + ++*(void *)(v0 + 16) = v17;
    goto LABEL_11;
  }

PhoneCallFlowDelegatePlugin::AppQuery __swiftcall AppQuery.Builder.build()()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  OUTLINED_FUNCTION_25_0((uint64_t)(v0 + 4), (uint64_t)v7, 0LL);
  uint64_t v3 = (void *)v0[4];
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_6_3();
  uint64_t v4 = v1;
  int v5 = v2;
  uint64_t v6 = v3;
  result.overrides._rawValue = v6;
  result.requestedAppId.value._object = v5;
  result.requestedAppId.value._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t AppQuery.Builder.deinit()
{
  return v0;
}

uint64_t AppQuery.Builder.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t static AppQuery.__derived_struct_equals(_:_:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    if (a5)
    {
      BOOL v8 = a1 == a4 && a2 == a5;
      if (v8 || (OUTLINED_FUNCTION_49_2(a1, a2, a4, a5) & 1) != 0) {
        return specialized static Array<A>.== infix(_:_:)(a3, a6);
      }
    }
  }

  else if (!a5)
  {
    return specialized static Array<A>.== infix(_:_:)(a3, a6);
  }

  return 0LL;
}

uint64_t specialized static Array<A>.== infix(_:_:)(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0LL;
  }
  if (!v2 || a1 == a2) {
    return 1LL;
  }
  uint64_t result = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  if (result != v7 || v6 != v8)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(result, v6, v7, v8, 0LL);
    uint64_t result = 0LL;
    if ((v10 & 1) == 0) {
      return result;
    }
  }

  if (v2 == 1) {
    return 1LL;
  }
  uint64_t v11 = a2 + 7;
  uint64_t v12 = a1 + 7;
  unint64_t v13 = 1LL;
  while (v13 < v2)
  {
    uint64_t result = *(v12 - 1);
    uint64_t v14 = *v12;
    uint64_t v15 = *(v11 - 1);
    uint64_t v16 = *v11;
    if (result != v15 || v14 != v16)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v14, v15, v16, 0LL);
      if ((result & 1) == 0) {
        return 0LL;
      }
    }

    ++v13;
    v11 += 2;
    v12 += 2;
    if (v2 == v13) {
      return 1LL;
    }
  }

  __break(1u);
  return result;
}

void specialized static Array<A>.== infix(_:_:)(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && ((uint64_t v5 = a1[4], v6 = a1[5], v7 = a2[4], v8 = a2[5], v5 == v7) ? (v9 = v6 == v8) : (v9 = 0),
        (v9 || (OUTLINED_FUNCTION_49_2(v5, v6, v7, v8) & 1) != 0) && v2 != 1))
  {
    char v10 = a2 + 7;
    uint64_t v11 = a1 + 7;
    unint64_t v12 = 1LL;
    while (v12 < v2)
    {
      uint64_t v13 = *(v11 - 1);
      uint64_t v14 = *v11;
      uint64_t v15 = *(v10 - 1);
      uint64_t v16 = *v10;
      BOOL v17 = v13 == v15 && v14 == v16;
      if (v17 || (OUTLINED_FUNCTION_49_2(v13, v14, v15, v16) & 1) != 0)
      {
        ++v12;
        v10 += 2;
        v11 += 2;
        if (v2 != v12) {
          continue;
        }
      }

      goto LABEL_18;
    }

    __break(1u);
  }

  else
  {
LABEL_18:
    OUTLINED_FUNCTION_6();
  }

uint64_t specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactQuery(0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  BOOL v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v16 = 1;
    }

    else
    {
      unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v21 = *(void *)(v7 + 72);
      uint64_t v22 = v7;
      unint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v13 = v10 - 1;
      do
      {
        uint64_t v14 = a1;
        v12(v9, a1 + v11, v4);
        uint64_t v15 = a2;
        v12(v6, a2 + v11, v4);
        lazy protocol witness table accessor for type ContactQuery and conformance ContactQuery();
        char v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v4);
        BOOL v17 = *(void (**)(char *, uint64_t))(v22 + 8);
        v17(v6, v4);
        v17(v9, v4);
        BOOL v19 = v13-- != 0;
        if ((v16 & 1) == 0) {
          break;
        }
        v11 += v21;
        a2 = v15;
        a1 = v14;
      }

      while (v19);
    }
  }

  else
  {
    char v16 = 0;
  }

  return v16 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AppQuery(uint64_t a1, uint64_t a2)
{
  return static AppQuery.__derived_struct_equals(_:_:)( *(void *)a1,  *(void *)(a1 + 8),  *(void **)(a1 + 16),  *(void *)a2,  *(void *)(a2 + 8),  *(void **)(a2 + 16));
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppQuery()
{
  return AppQuery.description.getter(*v0, v0[1], v0[2]);
}

uint64_t destroy for AppQuery(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 16));
}

void *initializeBufferWithCopyOfBuffer for AppQuery(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_3();
  return a1;
}

void *assignWithCopy for AppQuery(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for AppQuery(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease(a1[1]);
  uint64_t v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for AppQuery()
{
  return &type metadata for AppQuery;
}

void *initializeBufferWithCopyOfBuffer for AppQuery.Override(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for AppQuery.Override(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 8));
}

void *assignWithCopy for AppQuery.Override(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for AppQuery.Override(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppQuery.Override(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(PhoneCallNLIntent.applicationId.getter(v0, v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppQuery.Override(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + ++*(void *)(v0 + 16) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + ++*(void *)(v0 + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for AppQuery.Override()
{
  return &type metadata for AppQuery.Override;
}

uint64_t type metadata accessor for AppQuery.Builder()
{
  return objc_opt_self(&OBJC_CLASS____TtCV27PhoneCallFlowDelegatePlugin8AppQuery7Builder);
}

void specialized Array._copyContents(initializing:)()
{
  if (v3)
  {
    if (v0 < 0) {
      uint64_t v24 = v0;
    }
    else {
      uint64_t v24 = v0 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_8_1();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v24);
    OUTLINED_FUNCTION_39();
    if (!v5) {
      goto LABEL_17;
    }
  }

  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8LL));
    if (!v5)
    {
LABEL_17:
      OUTLINED_FUNCTION_18_7();
      return;
    }
  }

  if (v1)
  {
    if (v3)
    {
      OUTLINED_FUNCTION_8_1();
      uint64_t v6 = OUTLINED_FUNCTION_17_12();
      OUTLINED_FUNCTION_39();
      if (v6 <= v4)
      {
        if (v5 >= 1)
        {
          OUTLINED_FUNCTION_44_4();
          OUTLINED_FUNCTION_8_1();
          do
          {
            uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v2);
            OUTLINED_FUNCTION_20_3(v7, v8, v9, v10, v11, v12, v13, v14, v25);
            uint64_t v15 = swift_retain();
            OUTLINED_FUNCTION_46_3(v15, v16, v17, v18, v19, v20, v21, v22, v26);
            OUTLINED_FUNCTION_50_5();
          }

          while (!v23);
          OUTLINED_FUNCTION_39();
          goto LABEL_17;
        }

        goto LABEL_20;
      }
    }

    else
    {
      if (*(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8LL)) <= v4)
      {
        OUTLINED_FUNCTION_25_4(v0 & 0xFFFFFFFFFFFFFF8LL);
        goto LABEL_17;
      }

      __break(1u);
    }

    __break(1u);
LABEL_20:
    __break(1u);
  }

  __break(1u);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  OUTLINED_FUNCTION_14_8();
  if (v3)
  {
    if (v0 < 0) {
      uint64_t v25 = v0;
    }
    else {
      uint64_t v25 = v0 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_8_1();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v25);
    OUTLINED_FUNCTION_39();
    if (!v5) {
      goto LABEL_17;
    }
  }

  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8LL));
    if (!v5)
    {
LABEL_17:
      OUTLINED_FUNCTION_18_7();
      return;
    }
  }

  if (v1)
  {
    if (v3)
    {
      OUTLINED_FUNCTION_8_1();
      uint64_t v6 = OUTLINED_FUNCTION_17_12();
      OUTLINED_FUNCTION_39();
      if (v6 <= v4)
      {
        if (v5 >= 1)
        {
          OUTLINED_FUNCTION_44_4();
          OUTLINED_FUNCTION_8_1();
          do
          {
            uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v2);
            OUTLINED_FUNCTION_20_3(v7, v8, v9, v10, v11, v12, v13, v14, v26);
            uint64_t v16 = *v15;
            OUTLINED_FUNCTION_46_3((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v27);
            OUTLINED_FUNCTION_50_5();
          }

          while (!v24);
          OUTLINED_FUNCTION_39();
          goto LABEL_17;
        }

        goto LABEL_20;
      }
    }

    else
    {
      if (*(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFFF8LL)) <= v4)
      {
        OUTLINED_FUNCTION_25_4(v0 & 0xFFFFFFFFFFFFFF8LL);
        goto LABEL_17;
      }

      __break(1u);
    }

    __break(1u);
LABEL_20:
    __break(1u);
  }

  __break(1u);
}

{
  specialized Array._copyContents(initializing:)();
}

{
  specialized Array._copyContents(initializing:)();
}

{
  specialized Array._copyContents(initializing:)();
}

{
  specialized Array._copyContents(initializing:)();
}

unint64_t lazy protocol witness table accessor for type ContactQuery and conformance ContactQuery()
{
  unint64_t result = lazy protocol witness table cache variable for type ContactQuery and conformance ContactQuery;
  if (!lazy protocol witness table cache variable for type ContactQuery and conformance ContactQuery)
  {
    uint64_t v1 = type metadata accessor for ContactQuery(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ContactQuery, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ContactQuery and conformance ContactQuery);
  }

  return result;
}

uint64_t lazy protocol witness table accessor for type [SiriKitDisambiguationItem] and conformance [A]( unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_0_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_1_12@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8LL * *(void *)(a1 + 16) + 32;
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v1, v2, 1LL, v0);
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_11_10()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject(*v0);
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  return swift_bridgeObjectRelease(*v0);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_15_8()
{
  return swift_isUniquelyReferenced_nonNull_native(v0);
}

uint64_t OUTLINED_FUNCTION_17_12()
{
  return _CocoaArrayWrapper.endIndex.getter(v0);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_20_3( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return v10(&a9, v12, v9, a1, v11);
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  return _CocoaArrayWrapper.endIndex.getter(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return App.__allocating_init(appIdentifier:)(v1, v0);
}

void OUTLINED_FUNCTION_29_6()
{
  *uint64_t v0 = v1;
}

void OUTLINED_FUNCTION_30_2()
{
  *uint64_t v0 = v1;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return type metadata accessor for App(0LL);
}

uint64_t OUTLINED_FUNCTION_37_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_6()
{
  return swift_release(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return lazy protocol witness table accessor for type [SiriKitDisambiguationItem] and conformance [A](v1, v0);
}

uint64_t OUTLINED_FUNCTION_46_3( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return v9(&a9, 0LL);
}

void OUTLINED_FUNCTION_47_2()
{
}

uint64_t OUTLINED_FUNCTION_49_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
}

void OUTLINED_FUNCTION_50_5()
{
  *(void *)(v0 + 8 * outlined destroy of CommonDirectAction(v0, v1) = v2;
}

id SPHTUBackedCallCapabilities.supportsTelephonyCalls.getter()
{
  return [(id)objc_opt_self(TUCallCapabilities) supportsTelephonyCalls];
}

id SPHTUBackedCallCapabilities.supportsFaceTimeVideoCalls.getter()
{
  return [(id)objc_opt_self(TUCallCapabilities) supportsFaceTimeVideoCalls];
}

id SPHTUBackedCallCapabilities.isAddPersonEnabled.getter()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___TUConversationManager);
  id result = [v0 supportsConversations];
  if ((_DWORD)result) {
    return [v0 isAddPersonEnabled];
  }
  return result;
}

id SPHTUBackedCallCapabilities.isGreenTea.getter()
{
  id result = [(id)objc_opt_self(FTDeviceSupport) sharedInstance];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result isGreenTea];

    return v2;
  }

  else
  {
    __break(1u);
  }

  return result;
}

ValueMetadata *type metadata accessor for SPHTUBackedCallCapabilities()
{
  return &type metadata for SPHTUBackedCallCapabilities;
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATs::Properties_optional __swiftcall UnsupportedFlowCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of UnsupportedFlowCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7) {
    return (PhoneCallFlowDelegatePlugin::UnsupportedFlowCATs::Properties_optional)7;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::UnsupportedFlowCATs::Properties_optional)v3;
  }
}

uint64_t UnsupportedFlowCATs.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_5EA60 + 4 * byte_31F490[a1]))( 0xD000000000000021LL,  0x8000000000341990LL);
}

uint64_t sub_5EA60(uint64_t a1)
{
  return a1 - 2;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance UnsupportedFlowCATs.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance UnsupportedFlowCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UnsupportedFlowCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance UnsupportedFlowCATs.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UnsupportedFlowCATs::Properties_optional *a2@<X8>)
{
  result.INCallRecordTypeOptions value = UnsupportedFlowCATs.Properties.init(rawValue:)(*a1).value;
  a2->INCallRecordTypeOptions value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance UnsupportedFlowCATs.Properties@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = UnsupportedFlowCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t UnsupportedFlowCATs.deleteCallHistory(completion:)()
{
  return OUTLINED_FUNCTION_13(33LL);
}

uint64_t UnsupportedFlowCATs.deleteCallHistory()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  Swift::String v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  Swift::String v2 = OUTLINED_FUNCTION_59_1(33LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(33LL, 0x8000000000341990LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t UnsupportedFlowCATs.deleteVoicemail(completion:)()
{
  return OUTLINED_FUNCTION_13(31LL);
}

uint64_t UnsupportedFlowCATs.deleteVoicemail()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  Swift::String v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  Swift::String v2 = OUTLINED_FUNCTION_59_1(31LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(31LL, 0x80000000003419C0LL, (uint64_t)_swiftEmptyArrayStorage);
}

void UnsupportedFlowCATs.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:completion:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  char v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = OUTLINED_FUNCTION_8_2(v9, 224LL);
  *(_OWORD *)(v10 + ++*(void *)(v0 + 16) = xmmword_31F580;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v11 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v11 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v12;
  *(_BYTE *)(v11 + 48) = v5;
  uint64_t v13 = v11 + 96;
  *(void *)(v11 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v11 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_31_6(v11, (uint64_t)"nonDefaultAppName");
  outlined init with copy of SpeakableString?(v3, v8, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v8, 1LL, v14) == 1)
  {
    outlined destroy of SpeakableString?(v8, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v13 = 0u;
    *(_OWORD *)(v13 + ++*(void *)(v0 + 16) = 0u;
  }

  else
  {
    *(void *)(v10 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v14;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)v13);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))( boxed_opaque_existential_1,  v8,  v14);
  }

  OUTLINED_FUNCTION_30_3();
  *(void *)(v10 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 28) = v16;
  *(void *)(v10 + 136) = v17;
  *(_BYTE *)(v10 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v18 & 1;
  *(void *)(v10 + 168) = &type metadata for Bool;
  *(void *)(v10 + 176) = 0x656369766564LL;
  *(void *)(v10 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0xE600000000000000LL;
  if (v1)
  {
    uint64_t v19 = OUTLINED_FUNCTION_50_6();
    uint64_t v20 = v1;
  }

  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_54_0();
    *(void *)(v10 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0LL;
    *(void *)(v10 + 208) = 0LL;
  }

  *(void *)(v10 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v20;
  *(void *)(v10 + 2++*(void *)(v0 + 16) = v19;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000021LL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t UnsupportedFlowCATs.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v6 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v5;
  *(_BYTE *)(v6 + 81) = a4;
  *(_BYTE *)(v6 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = a2;
  *(void *)(v6 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v6 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v6 + 48) = OUTLINED_FUNCTION_12_0(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedFlowCATs.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(_BYTE *)(v0 + 80);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 224LL);
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + ++*(void *)(v0 + 16) = xmmword_31F580;
  uint64_t v5 = OUTLINED_FUNCTION_32_3(v4, (uint64_t)"supportsAppLaunch");
  *(_BYTE *)(v5 + 48) = v2;
  *(void *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v5 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0xD000000000000011LL;
  uint64_t v6 = OUTLINED_FUNCTION_31_6(v5, (uint64_t)"nonDefaultAppName");
  OUTLINED_FUNCTION_27_6(v6, v7, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t v9 = OUTLINED_FUNCTION_36_2(v8);
  if ((_DWORD)v9 == 1)
  {
    OUTLINED_FUNCTION_41_1(v9, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v4 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v1;
    uint64_t v10 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = OUTLINED_FUNCTION_7_13(*(_BYTE *)(v0 + 81));
  if (v11)
  {
    uint64_t v12 = type metadata accessor for SirikitDeviceState(v12);
  }

  else
  {
    *(void *)(v4 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0LL;
    *(void *)(v4 + 208) = 0LL;
  }

  *(void *)(v4 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
  *(void *)(v4 + 2++*(void *)(v0 + 16) = v12;
  OUTLINED_FUNCTION_2_3();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v13;
  *uint64_t v13 = v0;
  v13[1] = UnsupportedFlowCATs.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v2 + 8));
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(_BYTE *)(v0 + 72);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 224LL);
  *(void *)(v0 + 48) = v4;
  *(_OWORD *)(v4 + ++*(void *)(v0 + 16) = xmmword_31F580;
  uint64_t v5 = OUTLINED_FUNCTION_32_3(v4, (uint64_t)"supportsAppLaunch");
  *(_BYTE *)(v5 + 48) = v2;
  *(void *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v5 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0xD000000000000011LL;
  uint64_t v6 = OUTLINED_FUNCTION_31_6(v5, (uint64_t)"nonDefaultAppName");
  OUTLINED_FUNCTION_27_6(v6, v7, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t v9 = OUTLINED_FUNCTION_45_0(v8);
  if (v10)
  {
    OUTLINED_FUNCTION_41_1(v9, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v4 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v1;
    uint64_t v11 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v11);
  }

  uint64_t v12 = *(void *)(v0 + 24);
  uint64_t v13 = OUTLINED_FUNCTION_7_13(*(_BYTE *)(v0 + 73));
  if (v12)
  {
    uint64_t v13 = type metadata accessor for SirikitDeviceState(v13);
  }

  else
  {
    *(void *)(v4 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0LL;
    *(void *)(v4 + 208) = 0LL;
  }

  *(void *)(v4 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(void *)(v4 + 2++*(void *)(v0 + 16) = v13;
  OUTLINED_FUNCTION_2_3();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 56) = v14;
  *uint64_t v14 = v0;
  v14[1] = UnsupportedFlowCATs.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:);
  uint64_t v15 = OUTLINED_FUNCTION_40(0xD000000000000021LL);
  return OUTLINED_FUNCTION_25_5(v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v4);
  *(void *)(v2 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v6, v7, v8);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v3 + 8));
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t UnsupportedFlowCATs.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)( char a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_BYTE *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a3;
  *(void *)(v5 + ++*(void *)(v0 + 16) = a2;
  *(_BYTE *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v5 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void UnsupportedFlowCATs.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  char v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = OUTLINED_FUNCTION_8_2(v7, 224LL);
  *(_OWORD *)(v8 + ++*(void *)(v0 + 16) = xmmword_31F580;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v9 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v10;
  *(_BYTE *)(v9 + 48) = v6;
  uint64_t v11 = v9 + 96;
  *(void *)(v9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v9 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_31_6(v9, (uint64_t)"nonDefaultAppName");
  OUTLINED_FUNCTION_47_3();
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_60_3(v12);
  if (v13)
  {
    outlined destroy of SpeakableString?(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v11 + ++*(void *)(v0 + 16) = 0u;
  }

  else
  {
    *(void *)(v8 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)v11);
    OUTLINED_FUNCTION_38_0((uint64_t)boxed_opaque_existential_1);
  }

  OUTLINED_FUNCTION_30_3();
  *(void *)(v8 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 28) = v15;
  *(void *)(v8 + 136) = v16;
  *(_BYTE *)(v8 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v17 & 1;
  *(void *)(v8 + 168) = &type metadata for Bool;
  *(void *)(v8 + 176) = 0x656369766564LL;
  *(void *)(v8 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0xE600000000000000LL;
  if (v2)
  {
    uint64_t v18 = OUTLINED_FUNCTION_50_6();
    uint64_t v19 = v2;
  }

  else
  {
    uint64_t v18 = OUTLINED_FUNCTION_54_0();
    *(void *)(v8 + 20outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0LL;
    *(void *)(v8 + 208) = 0LL;
  }

  *(void *)(v8 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v19;
  *(void *)(v8 + 2++*(void *)(v0 + 16) = v18;
  swift_retain();
  OUTLINED_FUNCTION_55(0xD000000000000021LL, 0x80000000003419E0LL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t UnsupportedFlowCATs.startCallEmergency(completion:)()
{
  return OUTLINED_FUNCTION_13(34LL);
}

uint64_t UnsupportedFlowCATs.startCallEmergency()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(34LL, 0x8000000000341A10LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t UnsupportedFlowCATs.startCallEmergencyInRetailStore(completion:)()
{
  return OUTLINED_FUNCTION_13(47LL);
}

uint64_t UnsupportedFlowCATs.startCallEmergencyInRetailStore()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_22_2();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(47LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(47LL, 0x8000000000341A40LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t UnsupportedFlowCATs.startCallEmergencyInRetailStore()(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_22_2();
  if (!v1) {
    uint64_t v4 = a1;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

void UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:completion:)()
{
  char v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 128LL);
  *(_OWORD *)(v6 + ++*(void *)(v0 + 16) = xmmword_31D880;
  uint64_t v7 = (void *)(v6 + 48);
  OUTLINED_FUNCTION_56_0();
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v8 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v9;
  OUTLINED_FUNCTION_47_3();
  uint64_t v10 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_60_3(v10);
  if (v11)
  {
    outlined destroy of SpeakableString?(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    OUTLINED_FUNCTION_38_0((uint64_t)boxed_opaque_existential_1);
  }

  OUTLINED_FUNCTION_37_0();
  *(void *)(v6 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v13;
  *(void *)(v6 + 88) = v14;
  *(void *)(v6 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = &type metadata for Bool;
  *(_BYTE *)(v6 + 96) = v2 & 1;
  OUTLINED_FUNCTION_52_3(0xD00000000000002FLL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + ++*(void *)(v0 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  v0[6] = v3;
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_31D880;
  uint64_t v4 = OUTLINED_FUNCTION_32_3(v3, (uint64_t)"thirdPartyAppName");
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_45_0(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
    uint64_t v9 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  OUTLINED_FUNCTION_28_4();
  *(void *)(v3 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = &type metadata for Bool;
  *(_BYTE *)(v3 + 96) = v10;
  char v11 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[7] = v11;
  *char v11 = v0;
  v11[1] = UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v0 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v2 + 8));
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  v0[5] = v3;
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_31D880;
  uint64_t v4 = OUTLINED_FUNCTION_32_3(v3, (uint64_t)"thirdPartyAppName");
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_36_2(v6);
  if ((_DWORD)v7 == 1)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
    char v8 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  OUTLINED_FUNCTION_28_4();
  *(void *)(v3 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = &type metadata for Bool;
  *(_BYTE *)(v3 + 96) = v9;
  char v10 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[6] = v10;
  *char v10 = v0;
  v10[1] = UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:);
  char v11 = OUTLINED_FUNCTION_40(0xD00000000000002FLL);
  return OUTLINED_FUNCTION_25_5(v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v4);
  *(void *)(v2 + 56) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v6, v7, v8);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v3 + 8));
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a2;
  *(void *)(v3 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v3 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:)()
{
  char v1 = v0;
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v8 = OUTLINED_FUNCTION_8_2(v7, 128LL);
  *(_OWORD *)(v8 + ++*(void *)(v0 + 16) = xmmword_31D880;
  uint64_t v9 = (void *)(v8 + 48);
  OUTLINED_FUNCTION_56_0();
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v10 + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v11;
  outlined init with copy of SpeakableString?(v3, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1LL, v12);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_1(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0u;
  }

  else
  {
    *(void *)(v8 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))( boxed_opaque_existential_1,  v6,  v12);
  }

  OUTLINED_FUNCTION_37_0();
  *(void *)(v8 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = v15;
  *(void *)(v8 + 88) = v16;
  *(void *)(v8 + 12outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = &type metadata for Bool;
  *(_BYTE *)(v8 + 96) = v1 & 1;
  OUTLINED_FUNCTION_55(0xD00000000000002FLL, 0x8000000000341A70LL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t UnsupportedFlowCATs.unsupportedOnDeviceType(device:completion:)(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 80LL);
  OUTLINED_FUNCTION_42_1(v3, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_50_6();
    unint64_t v5 = a1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_54_0();
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v5;
  v3[4].n128_u64[1] = v4;
  swift_retain();
  OUTLINED_FUNCTION_52_3(0xD000000000000027LL);
  return swift_bridgeObjectRelease();
}

uint64_t UnsupportedFlowCATs.unsupportedOnDeviceType(device:)(uint64_t a1, uint64_t a2)
{
  void v3[3] = a2;
  v3[4] = v2;
  void v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)UnsupportedFlowCATs.unsupportedOnDeviceType(device:));
}

uint64_t UnsupportedFlowCATs.unsupportedOnDeviceType(device:)()
{
  unint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 80LL);
  v0[5] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_35_0(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v1;
  v3[4].n128_u64[1] = v4;
  OUTLINED_FUNCTION_2_3();
  unint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[6] = v5;
  *unint64_t v5 = v0;
  v5[1] = UnsupportedFlowCATs.unsupportedOnDeviceType(device:);
  return v7(v0[2], 0xD000000000000027LL, 0x8000000000341AA0LL, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v0 + 56) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v2 + 8));
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v7)(unint64_t, unint64_t, __n128 *);
  unint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 80LL);
  v0[4] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_35_0(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v1;
  v3[4].n128_u64[1] = v4;
  OUTLINED_FUNCTION_2_3();
  unint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[5] = v5;
  *unint64_t v5 = v0;
  v5[1] = UnsupportedFlowCATs.unsupportedOnDeviceType(device:);
  return v7(0xD000000000000027LL, 0x8000000000341AA0LL, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v4);
  *(void *)(v2 + 48) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v6, v7, v8);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v3 + 8));
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t UnsupportedFlowCATs.unsupportedOnDeviceType(device:)(uint64_t a1)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 4) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)UnsupportedFlowCATs.unsupportedOnDeviceType(device:));
}

uint64_t UnsupportedFlowCATs.unsupportedOnDeviceType(device:)(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 80LL);
  OUTLINED_FUNCTION_42_1(v3, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_50_6();
    unint64_t v5 = a1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_54_0();
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v5;
  v3[4].n128_u64[1] = v4;
  swift_retain();
  OUTLINED_FUNCTION_55(0xD000000000000027LL, 0x8000000000341AA0LL);
  return swift_bridgeObjectRelease();
}

uint64_t outlined init with copy of SpeakableString?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATs.Properties and conformance UnsupportedFlowCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATs.Properties and conformance UnsupportedFlowCATs.Properties;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATs.Properties and conformance UnsupportedFlowCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATs.Properties,  &type metadata for UnsupportedFlowCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATs.Properties and conformance UnsupportedFlowCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for UnsupportedFlowCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for UnsupportedFlowCATs;
  if (!type metadata singleton initialization cache for UnsupportedFlowCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UnsupportedFlowCATs);
  }
  return result;
}

uint64_t type metadata completion function for UnsupportedFlowCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for UnsupportedFlowCATs);
}

uint64_t ObjC metadata update function for UnsupportedFlowCATs()
{
  return type metadata accessor for UnsupportedFlowCATs(0LL);
}

uint64_t getEnumTagSinglePayload for UnsupportedFlowCATs.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for UnsupportedFlowCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_49_14(v3, v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_6023C + 4 * byte_31F49C[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_60270 + 4 * byte_31F497[v4]))();
}

uint64_t sub_60270(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_60278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x60280LL);
  }
  return result;
}

uint64_t sub_6028C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x60294LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_60298(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_602A0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedFlowCATs.Properties()
{
  return &type metadata for UnsupportedFlowCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_6_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_7_13@<X0>(char a1@<W8>)
{
  *(void *)(v2 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 28) = 0x6D6563696F567369LL;
  *(void *)(v2 + 136) = 0xEB000000006C6961LL;
  *(_BYTE *)(v2 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 4) = a1;
  *(void *)(v2 + 168) = v1;
  *(void *)(v2 + 176) = 0x656369766564LL;
  *(void *)(v2 + 18__swift_destroy_boxed_opaque_existential_1(v0 + 4) = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_9_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_11_11(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 32LL))(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_24_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

void OUTLINED_FUNCTION_28_4()
{
  *(void *)(v0 + 8outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = 0x6954656361467369LL;
  *(void *)(v0 + 88) = 0xEA0000000000656DLL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_31_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 88) = (a2 - 32) | 0x8000000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(result + 4outlined consume of ContactDisambiguationPromptResponse?(v0, 0) = (a2 - 32) | 0x8000000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_36_2(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_45_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_47_3()
{
  return outlined init with copy of SpeakableString?(v1, v0, v2);
}

  ;
}

void OUTLINED_FUNCTION_49_3()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return type metadata accessor for SirikitDeviceState(0LL);
}

uint64_t OUTLINED_FUNCTION_52_3(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1);
}

uint64_t OUTLINED_FUNCTION_53_2(uint64_t result)
{
  *(void *)(v1 + ++*(void *)(v0 + 16) = result;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_60_3(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

  ;
}

uint64_t PhoneContactHeader.description.getter()
{
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v1._object = (void *)0x8000000000347060LL;
  String.append(_:)(v1);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_50();
  v2._uint64_t countAndFlagsBits = 0x6361746E6F63202CLL;
  v2._object = (void *)0xEC0000003D644974LL;
  String.append(_:)(v2);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_50();
  v3._uint64_t countAndFlagsBits = 0x616C70736964202CLL;
  v3._object = (void *)0xEE003D656D614E79LL;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_50();
  v4._uint64_t countAndFlagsBits = 0x656C646E6168202CLL;
  v4._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v4);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_50();
  v5._object = (void *)0x8000000000347080LL;
  v5._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v5);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0) {
    uint64_t v6 = 1702195828LL;
  }
  else {
    uint64_t v6 = 0x65736C6166LL;
  }
  if ((*(_BYTE *)(v0 + 64) & 1) != 0) {
    unint64_t v7 = 0xE400000000000000LL;
  }
  else {
    unint64_t v7 = 0xE500000000000000LL;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 41LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  return 0LL;
}

uint64_t PhoneContactHeader.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6C646E7542707061LL && a2 == 0xEB00000000644965LL)
  {
    unint64_t v5 = 0xEB00000000644965LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C646E7542707061LL, 0xEB00000000644965LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x49746361746E6F63LL && a2 == 0xE900000000000064LL)
  {
    unint64_t v8 = 0xE900000000000064LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49746361746E6F63LL, 0xE900000000000064LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x4E79616C70736964LL && a2 == 0xEB00000000656D61LL)
  {
    unint64_t v10 = 0xEB00000000656D61LL;
    goto LABEL_24;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4E79616C70736964LL, 0xEB00000000656D61LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2LL;
  }

  if (a1 == 0x656C646E6168LL && a2 == 0xE600000000000000LL)
  {
    unint64_t v12 = 0xE600000000000000LL;
    goto LABEL_32;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C646E6168LL, 0xE600000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3LL;
  }

  if (a1 == 0x5074737269467369LL && a2 == 0xEF70704179747261LL)
  {
    swift_bridgeObjectRelease(0xEF70704179747261LL);
    return 4LL;
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x5074737269467369LL, 0xEF70704179747261LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }