Swift::Bool __swiftcall INStartCallIntent.isGroupFaceTimeCall()()
{
  unint64_t v0;
  Swift::Bool result;
  v0 = INStartCallIntent.isGroupCall()();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_144_3( v0,  (SEL *)&selRef_callGroups,  (unint64_t *)&lazy cache variable for type metadata for INCallGroup,  &OBJC_CLASS___INCallGroup_ptr);
    if (v0)
    {
      if (v0 >> 62) {
        OUTLINED_FUNCTION_4_51(v0 & 0xFFFFFFFFFFFFFF8LL);
      }
      v0 = OUTLINED_FUNCTION_39();
    }
  }

  OUTLINED_FUNCTION_46_7(v0, "preferredCallProvider");
  OUTLINED_FUNCTION_6();
  return result;
}

void @nonobjc INStartCallIntent.callGroups.setter(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INCallGroup,  &OBJC_CLASS___INCallGroup_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }

  else
  {
    Class isa = 0LL;
  }

  [v1 setCallGroups:isa];
}

void (*protocol witness for CallingIntent.callGroups.modify in conformance INStartCallIntent( void *a1))(void *a1)
{
  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = INStartCallIntent.callGroups.modify(v2);
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

void (*INStartCallIntent.callGroups.modify( void *a1))(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  a1[1] = v1;
  outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter( v1,  (SEL *)&selRef_callGroups,  (unint64_t *)&lazy cache variable for type metadata for INCallGroup,  &OBJC_CLASS___INCallGroup_ptr);
  *a1 = v3;
  return INStartCallIntent.callGroups.modify;
}

void INStartCallIntent.callGroups.modify( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)a1;
  if ((a2 & 1) != 0)
  {
    if (v9)
    {
      OUTLINED_FUNCTION_49( a1,  (unint64_t *)&lazy cache variable for type metadata for INCallGroup,  &OBJC_CLASS___INCallGroup_ptr);
      OUTLINED_FUNCTION_6_3();
      v17.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_62();
    }

    else
    {
      v17.super.Class isa = 0LL;
    }

    OUTLINED_FUNCTION_81_9(*(id *)(a1 + 8), "setCallGroups:", a3, a4, a5, a6, a7, a8, v16, (uint64_t)v17.super.isa);
    OUTLINED_FUNCTION_62();
  }

  else if (v9)
  {
    OUTLINED_FUNCTION_49( a1,  (unint64_t *)&lazy cache variable for type metadata for INCallGroup,  &OBJC_CLASS___INCallGroup_ptr);
    Class isa = OUTLINED_FUNCTION_126_4().super.isa;
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_81_9(*(id *)(a1 + 8), "setCallGroups:", v10, v11, v12, v13, v14, v15, v16, (uint64_t)isa);
  }

  else
  {
    OUTLINED_FUNCTION_81_9(*(id *)(a1 + 8), "setCallGroups:", a3, a4, a5, a6, a7, a8, v16, 0LL);
  }

  OUTLINED_FUNCTION_3_64(v19);
}

void @nonobjc INStartCallIntent.faceTimeLink.getter()
{
}

id @nonobjc INStartCallIntent.callRequestMetadata.getter()
{
  return [v0 callRequestMetadata];
}

void @nonobjc INStartCallIntent.callRequestMetadata.setter(void *a1)
{
}

void (*protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartCallIntent( void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = [v1 callRequestMetadata];
  return protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartCallIntent;
}

void protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartCallIntent(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[1], "setCallRequestMetadata:");
}

uint64_t (*protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartAudioCallIntent( void *a1))()
{
  a1[1] = v1;
  *a1 = [v1 callRequestMetadata];
  return protocol witness for CallingIntent.callRequestMetadata.modify in conformance INStartAudioCallIntent;
}

void @nonobjc INStartAudioCallIntent.contacts.getter()
{
}

uint64_t INStartAudioCallIntent.overwriteContacts(newContacts:)(uint64_t a1)
{
  v6[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  v6[0] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  inited = (__n128 *)swift_initStackObject(v2, &v5);
  OUTLINED_FUNCTION_65_3(inited, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_8_1();
  NSObject.update(with:at:)((uint64_t)v6, (uint64_t)inited);
  OUTLINED_FUNCTION_124_4();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  return __swift_destroy_boxed_opaque_existential_1(v6);
}

void @nonobjc INStartVideoCallIntent.contacts.getter()
{
}

void INAddCallParticipantIntent.contacts.getter()
{
}

Swift::Void __swiftcall INAddCallParticipantIntent.overwriteContacts(newContacts:)(Swift::OpaquePointer newContacts)
{
  Class isa = OUTLINED_FUNCTION_127_5().super.isa;
  OUTLINED_FUNCTION_46_7((uint64_t)isa, "setParticipants:");
  OUTLINED_FUNCTION_57_13(isa);
}

Swift::String __swiftcall INAddCallParticipantIntent.getContactsKeyPath()()
{
  uint64_t v0 = 0x7069636974726170LL;
  id v1 = (void *)0xEC00000073746E61LL;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

id INSearchCallHistoryIntent.contacts.getter()
{
  id result = [v0 recipient];
  if (result)
  {
    id v2 = result;
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 40LL);
    *(_OWORD *)(v4 + 16) = xmmword_31FE60;
    *(void *)(v4 + 32) = v2;
    uint64_t v8 = v4;
    specialized Array._endMutation()(v4, v5, v6, v7);
    return (id)v8;
  }

  return result;
}

Swift::Void __swiftcall INSearchCallHistoryIntent.overwriteContacts(newContacts:)(Swift::OpaquePointer newContacts)
{
  if ((unint64_t)newContacts._rawValue >> 62)
  {
    OUTLINED_FUNCTION_8_1();
    uint64_t v4 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_39();
    if (!v4) {
      return;
    }
  }

  else if (!*(void *)((char *)&dword_10 + ((unint64_t)newContacts._rawValue & 0xFFFFFFFFFFFFF8LL)))
  {
    return;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)( 0LL,  ((unint64_t)newContacts._rawValue & 0xC000000000000001LL) == 0,  newContacts._rawValue);
  else {
    id v3 = *((id *)newContacts._rawValue + 4);
  }
  uint64_t v5 = v3;
  objc_msgSend(v1, "setRecipient:");
  OUTLINED_FUNCTION_3_64(v5);
}

Swift::String __swiftcall INSearchCallHistoryIntent.getContactsKeyPath()()
{
  uint64_t v0 = 0x6E65697069636572LL;
  id v1 = (void *)0xE900000000000074LL;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional __swiftcall FollowUpOfferType.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of FollowUpOfferType.init(rawValue:),  v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance FollowUpOfferType(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance FollowUpOfferType()
{
}

void protocol witness for Hashable.hash(into:) in conformance FollowUpOfferType(uint64_t a1)
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance FollowUpOfferType(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance FollowUpOfferType@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::FollowUpOfferType_optional *a2@<X8>)
{
  result.value = FollowUpOfferType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance FollowUpOfferType@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = FollowUpOfferType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void INAnswerCallIntentResponse.init(statusCode:callRecords:)(uint64_t a1, uint64_t a2)
{
}

{
  id v4;
  id v5;
  uint64_t v4 = objc_allocWithZone((Class)OUTLINED_FUNCTION_142_3());
  uint64_t v5 = OUTLINED_FUNCTION_121_4(v4, "initWithCode:userActivity:");
  [v5 setStatusCode:a1];
  outlined bridged method (mbnn) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.setter(a2, v5);

  OUTLINED_FUNCTION_6();
}

Swift::Bool __swiftcall INAnswerCallIntentResponse.isSuccessCodeWithRingingCallRecord()()
{
  if (OUTLINED_FUNCTION_46_7(v0, "code") != &dword_4) {
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_144_3( 4LL,  (SEL *)&selRef_callRecords,  (unint64_t *)&lazy cache variable for type metadata for INCallRecord,  &OBJC_CLASS___INCallRecord_ptr);
  if (!v1) {
    goto LABEL_10;
  }
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    if (OUTLINED_FUNCTION_4_51(v1 & 0xFFFFFFFFFFFFFF8LL)) {
      goto LABEL_5;
    }
LABEL_9:
    OUTLINED_FUNCTION_39();
    goto LABEL_10;
  }

void INIdentifyIncomingCallerIntentResponse.init(statusCode:callRecords:)(uint64_t a1, uint64_t a2)
{
}

INPerson __swiftcall INPerson.init(contactIdentifier:)(Swift::String contactIdentifier)
{
  object = contactIdentifier._object;
  uint64_t countAndFlagsBits = contactIdentifier._countAndFlagsBits;
  id v3 = objc_allocWithZone((Class)OUTLINED_FUNCTION_142_3());
  id v4 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
  id v5 = @nonobjc INPersonHandle.init(value:type:)(0LL, 0LL, 0LL);
  outlined bridged method (mnnnnbnnn) of @objc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)( (uint64_t)v5,  0LL,  0LL,  0LL,  countAndFlagsBits,  (uint64_t)object,  0LL,  v3);
  OUTLINED_FUNCTION_51_9();
  OUTLINED_FUNCTION_6();
  return result;
}

void *INPerson.base64Prefix.unsafeMutableAddressor()
{
  return &static INPerson.base64Prefix;
}

unint64_t static INPerson.base64Prefix.getter()
{
  return 0xD000000000000010LL;
}

void static INPerson.from(base64ContactId:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    v25[2] = a1;
    v25[3] = a2;
    OUTLINED_FUNCTION_179();
    v25[0] = v2;
    v25[1] = v3;
    v24[0] = 0LL;
    v24[1] = 0xE000000000000000LL;
    unint64_t v23 = lazy protocol witness table accessor for type String and conformance String();
    uint64_t v8 = OUTLINED_FUNCTION_32_7((uint64_t)v25, (uint64_t)v24, v4, v5, v6, v7, (uint64_t)&type metadata for String);
    OUTLINED_FUNCTION_49(v8, &lazy cache variable for type metadata for NSData, &OBJC_CLASS___NSData_ptr);
    v9._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_9_0();
    unint64_t v10 = (unint64_t)NSData.__allocating_init(base64Encoded:options:)(v9, 0LL);
    if (v10)
    {
      static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
      OUTLINED_FUNCTION_131_2();
    }

    id v11 = objc_allocWithZone(&OBJC_CLASS____INPBContactValue);
    uint64_t v12 = OUTLINED_FUNCTION_9_0();
    id v14 = @nonobjc _SFPBCard.init(data:)(v12, v13);
    id v22 = (id)INIntentSlotValueTransformFromContactValue( v14,  v15,  v16,  v17,  v18,  v19,  v20,  v21,  &type metadata for String,  v23);
    OUTLINED_FUNCTION_51_9();
  }

  OUTLINED_FUNCTION_25_32();
}

NSData_optional __swiftcall NSData.__allocating_init(base64Encoded:options:)( Swift::String base64Encoded, NSDataBase64DecodingOptions options)
{
  object = base64Encoded._object;
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  uint64_t v6 = (objc_class *)[v4 initWithBase64EncodedString:v5 options:options];

  uint64_t v8 = v6;
  result.value.super.Class isa = v8;
  result.is_nil = v7;
  return result;
}

Swift::String __swiftcall INPerson.toStartRequestUtterance()()
{
  uint64_t v0 = type metadata accessor for MachineUtteranceBuilder(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = MachineUtteranceBuilder.init()();
  Swift::String v2 = INPerson.asBase64()();
  uint64_t v3 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)( 0xD000000000000012LL,  0x8000000000342B70LL,  v2._countAndFlagsBits,  v2._object);
  swift_release(v1);
  uint64_t v4 = OUTLINED_FUNCTION_39();
  dispatch thunk of MachineUtteranceBuilder.build()(v4);
  swift_release(v3);
  OUTLINED_FUNCTION_6();
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

void INPerson.isEmergency.getter()
{
  id v1 = [v0 personHandle];
  if (v1)
  {
    [v1 emergencyType];
    OUTLINED_FUNCTION_79();
  }

  OUTLINED_FUNCTION_2();
}

INPerson __swiftcall INPerson.with(scoredAlternatives:)(Swift::OpaquePointer scoredAlternatives)
{
  return (INPerson)OUTLINED_FUNCTION_73_13(v3);
}

void INPerson.isUnnamedPhoneNumber.getter(uint64_t a1)
{
  id v2 = OUTLINED_FUNCTION_46_7(a1, "personHandle");
  if (v2 && ([v2 type], OUTLINED_FUNCTION_88_9(), v1 == 2)) {
    OUTLINED_FUNCTION_58_12();
  }
  else {
    OUTLINED_FUNCTION_6();
  }
}

void INPerson.isUnnamedHandle.getter()
{
  uint64_t v5 = type metadata accessor for CharacterSet(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_79_8();
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_15();
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v52 - v7);
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin();
  OUTLINED_FUNCTION_92_7();
  id v10 = OUTLINED_FUNCTION_46_7(v9, "personHandle");
  if (!v10) {
    goto LABEL_6;
  }
  id v11 = v10;
  v56 = v8;
  outlined bridged method (pb) of @objc INPersonHandle.value.getter(v10, (SEL *)&selRef_value);
  if (!v13)
  {

    goto LABEL_6;
  }

  uint64_t v14 = v12;
  unint64_t v15 = v13;
  INPerson.hasNameComponents.getter();
  if ((v16 & 1) != 0)
  {

    OUTLINED_FUNCTION_13_1();
    goto LABEL_6;
  }

  uint64_t v60 = v5;
  uint64_t v54 = v4;
  outlined bridged method (pb) of @objc INPersonHandle.value.getter(v0, (SEL *)&selRef__displayName);
  if (!v18)
  {
LABEL_47:
    OUTLINED_FUNCTION_13_1();

    goto LABEL_6;
  }

  uint64_t v19 = v17;
  unint64_t v20 = v18;
  uint64_t v58 = HIBYTE(v18) & 0xF;
  uint64_t v59 = v14;
  uint64_t v57 = v17 & 0xFFFFFFFFFFFFLL;
  if ((v18 & 0x2000000000000000LL) != 0) {
    uint64_t v21 = HIBYTE(v18) & 0xF;
  }
  else {
    uint64_t v21 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21)
  {
    OUTLINED_FUNCTION_87_0();
    goto LABEL_47;
  }

  if ([v11 type] == (char *)&dword_0 + 2)
  {
    id v53 = v11;
    uint64_t v22 = CharacterSet.init(charactersIn:)(757671979LL, 0xE400000000000000LL);
    static CharacterSet.decimalDigits.getter(v22);
    CharacterSet.union(_:)(v1);
    unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    OUTLINED_FUNCTION_37_23(v1);
    uint64_t v24 = OUTLINED_FUNCTION_37_23(v2);
    static CharacterSet.controlCharacters.getter(v24);
    uint64_t v25 = (uint64_t)v56;
    CharacterSet.union(_:)(v2);
    OUTLINED_FUNCTION_37_23(v2);
    uint64_t v26 = OUTLINED_FUNCTION_37_23(v25);
    static CharacterSet.whitespacesAndNewlines.getter(v26);
    uint64_t v27 = v54;
    CharacterSet.union(_:)(v25);
    OUTLINED_FUNCTION_37_23(v25);
    OUTLINED_FUNCTION_37_23(v3);
    v56 = &v52;
    __chkstk_darwin();
    *(&v52 - 2) = v27;
    swift_bridgeObjectRetain();
    char v28 = specialized Sequence.allSatisfy(_:)( (uint64_t (*)(void *))partial apply for closure #1 in INPerson.isUnnamedHandle.getter,  (uint64_t)(&v52 - 4),  v19,  v20);
    OUTLINED_FUNCTION_87_0();
    if ((v28 & 1) != 0)
    {
      uint64_t v29 = 0LL;
      uint64_t v63 = 0LL;
      unint64_t v64 = 0xE000000000000000LL;
      v55 = (uint64_t *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
      v56 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFLL);
      do
      {
        if ((v20 & 0x1000000000000000LL) != 0)
        {
          uint64_t v32 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v29 << 16, v19, v20);
        }

        else
        {
          if ((v20 & 0x2000000000000000LL) != 0)
          {
            uint64_t v61 = v19;
            v62 = v56;
            v30 = &v61;
            uint64_t v31 = v58;
          }

          else
          {
            v30 = v55;
            uint64_t v31 = v57;
            if ((v19 & 0x1000000000000000LL) == 0) {
              v30 = (uint64_t *)_StringObject.sharedUTF8.getter(v19, v20);
            }
          }

          uint64_t v32 = _decodeScalar(_:startingAt:)(v30, v31, v29);
        }

        uint64_t v34 = v33;
        static CharacterSet.decimalDigits.getter(v32);
        char v35 = OUTLINED_FUNCTION_136_3();
        v23(v3, v60);
        if ((v35 & 1) != 0) {
          OUTLINED_FUNCTION_135_4();
        }
        v29 += v34;
      }

      while (v29 < v21);
      OUTLINED_FUNCTION_87_0();
      uint64_t v36 = v63;
      v55 = (uint64_t *)v64;
      uint64_t v63 = 0LL;
      unint64_t v64 = 0xE000000000000000LL;
      uint64_t v37 = v59;
      uint64_t v57 = v59 & 0xFFFFFFFFFFFFLL;
      uint64_t v58 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000LL) != 0) {
        uint64_t v38 = HIBYTE(v15) & 0xF;
      }
      else {
        uint64_t v38 = v59 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v52 = v36;
      if (v38)
      {
        uint64_t v39 = 0LL;
        v56 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFLL);
        uint64_t v40 = v60;
        do
        {
          if ((v15 & 0x1000000000000000LL) != 0)
          {
            uint64_t v43 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v39 << 16, v37, v15);
          }

          else
          {
            if ((v15 & 0x2000000000000000LL) != 0)
            {
              uint64_t v61 = v37;
              v62 = v56;
              v41 = &v61;
              uint64_t v42 = v58;
            }

            else
            {
              v41 = (uint64_t *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 32);
              uint64_t v42 = v57;
              if ((v37 & 0x1000000000000000LL) == 0) {
                v41 = (uint64_t *)_StringObject.sharedUTF8.getter(v37, v15);
              }
            }

            uint64_t v43 = _decodeScalar(_:startingAt:)(v41, v42, v39);
          }

          uint64_t v45 = v44;
          static CharacterSet.decimalDigits.getter(v43);
          char v46 = OUTLINED_FUNCTION_136_3();
          v23(v3, v40);
          if ((v46 & 1) != 0) {
            OUTLINED_FUNCTION_135_4();
          }
          v39 += v45;
          uint64_t v37 = v59;
        }

        while (v39 < v38);
        OUTLINED_FUNCTION_13_1();
        uint64_t v47 = v63;
        uint64_t v48 = v64;
      }

      else
      {
        OUTLINED_FUNCTION_13_1();
        uint64_t v47 = 0LL;
        uint64_t v48 = 0xE000000000000000LL;
        uint64_t v40 = v60;
      }

      uint64_t v49 = v54;
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_50();
      v23(v49, v40);
    }

    else
    {
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_13_1();

      OUTLINED_FUNCTION_37_23(v27);
    }
  }

  else
  {
    if (v19 != v59 || v20 != v15) {
      OUTLINED_FUNCTION_49_2(v19, v20, v59, v15);
    }

    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_87_0();
  }

void INPerson.isUnnamedUnknownHandle.getter(uint64_t a1)
{
  id v2 = OUTLINED_FUNCTION_46_7(a1, "personHandle");
  if (v2 && ([v2 type], OUTLINED_FUNCTION_88_9(), !v1)) {
    OUTLINED_FUNCTION_58_12();
  }
  else {
    OUTLINED_FUNCTION_6();
  }
}

void INPerson.toCNContact.getter()
{
  id v4 = [objc_allocWithZone(CNMutableContact) init];
  id v5 = OUTLINED_FUNCTION_68_12((uint64_t)v4, "nameComponents");
  if (v5)
  {
    uint64_t v6 = v5;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_30_12();
    uint64_t v7 = v3;
    uint64_t v8 = 0LL;
  }

  else
  {
    type metadata accessor for PersonNameComponents(0LL);
    uint64_t v7 = v3;
    uint64_t v8 = 1LL;
  }

  OUTLINED_FUNCTION_34_13(v7, v8);
  outlined init with take of PersonNameComponents?( v3,  v0,  &demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_30_12();
  if (OUTLINED_FUNCTION_27_32(v0))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  &demangling cache variable for type metadata for PersonNameComponents?);
  }

  else
  {
    PersonNameComponents.givenName.getter();
    uint64_t v10 = v9;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  &demangling cache variable for type metadata for PersonNameComponents?);
    if (v10) {
      goto LABEL_8;
    }
  }

  OUTLINED_FUNCTION_133_4();
LABEL_8:
  NSString v11 = String._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_17_6(v4, "setGivenName:");

  id v13 = OUTLINED_FUNCTION_68_12(v12, "nameComponents");
  if (v13)
  {
    uint64_t v14 = v13;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = 0LL;
  }

  else
  {
    uint64_t v15 = 1LL;
  }

  OUTLINED_FUNCTION_34_13(v2, v15);
  outlined init with take of PersonNameComponents?( v2,  v1,  &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v16 = OUTLINED_FUNCTION_27_32(v1);
  if ((_DWORD)v16)
  {
    OUTLINED_FUNCTION_52_12(v16, &demangling cache variable for type metadata for PersonNameComponents?);
LABEL_14:
    OUTLINED_FUNCTION_133_4();
    goto LABEL_15;
  }

  uint64_t v17 = PersonNameComponents.familyName.getter();
  uint64_t v19 = v18;
  OUTLINED_FUNCTION_52_12(v17, &demangling cache variable for type metadata for PersonNameComponents?);
  if (!v19) {
    goto LABEL_14;
  }
LABEL_15:
  NSString v20 = String._bridgeToObjectiveC()();
  uint64_t v21 = OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_138_3(v21, "setFamilyName:");

  OUTLINED_FUNCTION_7_5();
}

void INPerson.toIntentPerson.getter()
{
  uint64_t v63 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisplayRepresentation.Image?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v62 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentPerson.Handle?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v60 = v7;
  uint64_t v61 = type metadata accessor for IntentPerson.Name(0LL);
  uint64_t v59 = *(void *)(v61 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v58 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  v55 = (uint64_t **)((char *)&v52 - v9);
  uint64_t v10 = type metadata accessor for IntentPerson.Identifier(0LL);
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v54 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  id v13 = (uint64_t *)((char *)&v52 - v12);
  type metadata accessor for IntentPerson.Handle.Label(0LL);
  OUTLINED_FUNCTION_116_5();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v14 = type metadata accessor for IntentPerson.Handle(0LL);
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v67 = v15;
  uint64_t v16 = type metadata accessor for IntentPerson.Handle.Value(0LL);
  uint64_t v65 = *(void *)(v16 - 8);
  uint64_t v66 = v16;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  uint64_t v17 = __chkstk_darwin();
  id v53 = (uint64_t **)((char *)&v52 - v18);
  id v64 = v0;
  id v19 = OUTLINED_FUNCTION_46_7(v17, "personHandle");
  if (v19 && (outlined bridged method (ob) of @objc INPersonHandle.value.getter(v19, (SEL *)&selRef_value), v21))
  {
    uint64_t v22 = v20;
    unint64_t v23 = v21;
  }

  else
  {
    OUTLINED_FUNCTION_133_4();
    uint64_t v22 = 0LL;
    unint64_t v23 = 0xE000000000000000LL;
  }

  id v24 = [v64 personHandle];
  if (v24 && ([v24 type], OUTLINED_FUNCTION_88_9(), v1 == 1)) {
    uint64_t v25 = (unsigned int *)&enum case for IntentPerson.Handle.Value.emailAddress(_:);
  }
  else {
    uint64_t v25 = (unsigned int *)&enum case for IntentPerson.Handle.Value.phoneNumber(_:);
  }
  uint64_t v26 = v53;
  *id v53 = v22;
  v26[1] = v23;
  uint64_t v27 = v65;
  uint64_t v28 = v66;
  (*(void (**)(void *, void, uint64_t))(v65 + 104))(v26, *v25, v66);
  (*(void (**)(uint64_t, void *, uint64_t))(v27 + 16))(v3, v26, v28);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))( v2,  enum case for IntentPerson.Handle.Label.other(_:),  v1);
  uint64_t v29 = v67;
  uint64_t v30 = OUTLINED_FUNCTION_90_2();
  IntentPerson.Handle.init(_:label:)(v30);
  id v31 = v64;
  *id v13 = INPerson.identifier.getter();
  v13[1] = v32;
  uint64_t v33 = v13;
  uint64_t v34 = *(uint64_t (**)(uint64_t *, void, uint64_t))(v68 + 104);
  uint64_t v35 = v68;
  uint64_t v36 = v13;
  uint64_t v52 = v13;
  uint64_t v37 = v69;
  uint64_t v38 = v34(v36, enum case for IntentPerson.Identifier.contact(_:), v69);
  id v39 = OUTLINED_FUNCTION_17_5(v38, "displayName");
  OUTLINED_FUNCTION_72_12((uint64_t)v39);
  OUTLINED_FUNCTION_64_10();
  uint64_t v40 = v55;
  void *v55 = v31;
  v40[1] = v1;
  uint64_t v41 = v59;
  uint64_t v42 = v61;
  (*(void (**)(void *, void, uint64_t))(v59 + 104))( v40,  enum case for IntentPerson.Name.displayName(_:),  v61);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v35 + 16);
  uint64_t v44 = v54;
  v43(v54, v33, v37);
  uint64_t v45 = v58;
  (*(void (**)(uint64_t, void *, uint64_t))(v41 + 16))(v58, v40, v42);
  uint64_t v46 = v56;
  uint64_t v47 = v60;
  uint64_t v48 = v29;
  uint64_t v49 = v57;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v60, v48, v57);
  __swift_storeEnumTagSinglePayload(v47, 0LL, 1LL, v49);
  uint64_t v50 = type metadata accessor for DisplayRepresentation.Image(0LL);
  uint64_t v51 = v62;
  __swift_storeEnumTagSinglePayload(v62, 1LL, 1LL, v50);
  IntentPerson.init(identifier:name:handle:aliases:isMe:image:)(v44, v45, v47, _swiftEmptyArrayStorage, 0LL, v51);
  (*(void (**)(void *, uint64_t))(v41 + 8))(v40, v42);
  (*(void (**)(uint64_t *, uint64_t))(v68 + 8))(v52, v69);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v67, v49);
  (*(void (**)(void *, uint64_t))(v65 + 8))(v26, v66);
  OUTLINED_FUNCTION_7_5();
}

void INPerson.siriRemembersContactName.getter()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v3 = (char *)v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = OUTLINED_FUNCTION_30_12();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v8 = v6 - v7;
  __chkstk_darwin();
  OUTLINED_FUNCTION_93_5();
  id v10 = OUTLINED_FUNCTION_17_5(v9, "nameComponents");
  if (!v10)
  {
    uint64_t v13 = OUTLINED_FUNCTION_11_21((uint64_t)v3, 1LL);
    goto LABEL_6;
  }

  uint64_t v11 = v10;
  static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v10);

  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  v12(v3, v8, v4);
  OUTLINED_FUNCTION_11_21((uint64_t)v3, 0LL);
  uint64_t v13 = OUTLINED_FUNCTION_90_8();
  if ((_DWORD)v13 == 1)
  {
LABEL_6:
    OUTLINED_FUNCTION_52_12(v13, &demangling cache variable for type metadata for PersonNameComponents?);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
    uint64_t v16 = OUTLINED_FUNCTION_8_2(v29, 48LL);
    *(_OWORD *)(v16 + 16) = xmmword_31D870;
    id v30 = OUTLINED_FUNCTION_17_5(v16, "displayName");
    uint64_t v31 = OUTLINED_FUNCTION_112_3((uint64_t)v30);
    uint64_t v33 = v32;

    *(void *)(v16 + 32) = v31;
    *(void *)(v16 + 40) = v33;
    uint64_t v27 = 1LL;
    goto LABEL_7;
  }

  uint64_t v14 = OUTLINED_FUNCTION_146_1();
  ((void (*)(uint64_t))v12)(v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String?>);
  uint64_t v16 = OUTLINED_FUNCTION_8_2(v15, 128LL);
  *(_OWORD *)(v16 + 16) = xmmword_328A80;
  uint64_t v17 = PersonNameComponents.namePrefix.getter();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v18;
  uint64_t v19 = PersonNameComponents.givenName.getter(v17);
  *(void *)(v16 + 48) = v19;
  *(void *)(v16 + 56) = v20;
  uint64_t v21 = PersonNameComponents.middleName.getter(v19);
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 72) = v22;
  *(void *)(v16 + 80) = PersonNameComponents.familyName.getter(v21);
  *(void *)(v16 + 88) = v23;
  uint64_t v24 = PersonNameComponents.nameSuffix.getter();
  *(void *)(v16 + 96) = v24;
  *(void *)(v16 + 104) = v25;
  *(void *)(v16 + 112) = PersonNameComponents.nickname.getter(v24);
  *(void *)(v16 + 120) = v26;
  OUTLINED_FUNCTION_122_5((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  uint64_t v27 = *(void *)(v16 + 16);
  if (!v27)
  {
    uint64_t v28 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

INPerson __swiftcall INPerson.init(phoneContact:)(CNContact phoneContact)
{
  uint64_t v6 = v5;
  uint64_t v7 = OUTLINED_FUNCTION_30_12();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_30_0();
  __chkstk_darwin();
  id v10 = (char *)&v48 - v9;
  __chkstk_darwin();
  OUTLINED_FUNCTION_134_3();
  __chkstk_darwin();
  OUTLINED_FUNCTION_128_4();
  id v11 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContact:v6];
  id v12 = [v11 nameComponents];
  if (v12)
  {
    uint64_t v13 = v12;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)(v12);

    uint64_t v14 = 0LL;
  }

  else
  {
    uint64_t v14 = 1LL;
  }

  OUTLINED_FUNCTION_11_21(v4, v14);
  outlined init with take of PersonNameComponents?( v4,  v1,  &demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v15 = OUTLINED_FUNCTION_90_8();
  if (!(_DWORD)v15)
  {
    static PersonNameComponents.phoneticComponents(for:)(v6);
    OUTLINED_FUNCTION_11_21((uint64_t)v10, 0LL);
    uint64_t v15 = PersonNameComponents.phoneticRepresentation.setter(v10);
  }

  OUTLINED_FUNCTION_125_6(v15, v16, &demangling cache variable for type metadata for PersonNameComponents?);
  if (__swift_getEnumTagSinglePayload(v3, 1LL, v7) == 1)
  {
    Class isa = 0LL;
  }

  else
  {
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_122_5(v3, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }

  OUTLINED_FUNCTION_17_6(v11, "setNameComponents:");

  id v19 = OUTLINED_FUNCTION_68_12(v18, "personHandle");
  if (!v19)
  {
    uint64_t v21 = (char *)OUTLINED_FUNCTION_17_5(v20, "contactType");
    if (v21 == (_BYTE *)&dword_0 + 1) {
      goto LABEL_14;
    }
    id v22 = OUTLINED_FUNCTION_68_12((uint64_t)v21, "displayName");
    uint64_t v23 = OUTLINED_FUNCTION_112_3((uint64_t)v22);
    unint64_t v25 = v24;

    uint64_t v20 = OUTLINED_FUNCTION_70_2();
    uint64_t v26 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000LL) == 0) {
      uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
    }
    if (!v26)
    {
LABEL_14:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v49 = v8;
      uint64_t v27 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_9();
      os_log_type_t v28 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_5(v28))
      {
        uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        *uint64_t v29 = 0;
        OUTLINED_FUNCTION_3_61( &dword_0,  v30,  v31,  "#INPerson Using CNContactFormatter to follow user's display name preferences");
        OUTLINED_FUNCTION_0_2((uint64_t)v29);
      }

      uint64_t v32 = (void *)objc_opt_self(&OBJC_CLASS___CNContactFormatter);
      id v33 = OUTLINED_FUNCTION_121_4(v32, "stringFromContact:style:");
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        uint64_t v37 = v36;
      }

      else
      {
        uint64_t v35 = 0LL;
        uint64_t v37 = 0LL;
      }

      id v38 = [v32 stringFromContact:v6 style:1];
      if (v38)
      {
        unint64_t v39 = v38;
        uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        uint64_t v42 = v41;
      }

      else
      {
        uint64_t v40 = 0LL;
        uint64_t v42 = 0LL;
      }

      PersonNameComponents.init(name:phoneticName:)(v35, v37, v40, v42);
      Class v43 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_122_5(v2, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
      OUTLINED_FUNCTION_17_6(v11, "setNameComponents:");
    }
  }

  OUTLINED_FUNCTION_140_4(v20, (SEL *)&selRef_phonemeData);
  if (v44)
  {
    NSString v45 = String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    NSString v45 = 0LL;
  }

  OUTLINED_FUNCTION_17_6(v11, "setPhonemeData:");

  OUTLINED_FUNCTION_52_12(v46, &demangling cache variable for type metadata for PersonNameComponents?);
  OUTLINED_FUNCTION_7_5();
  return result;
}

INPerson __swiftcall INPerson.mutableCopyOrCrash()()
{
  uint64_t v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = [v1 mutableCopy];
  _bridgeAnyObjectToAny(_:)(v21, v6);
  uint64_t v7 = swift_unknownObjectRelease(v6);
  OUTLINED_FUNCTION_49( v7,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  id v11 = (void *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_87(v12))
  {
    uint64_t v13 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v14 = OUTLINED_FUNCTION_7_0(32LL);
    v21[0] = v14;
    OUTLINED_FUNCTION_97_7(4.8149e-34);
    uint64_t v20 = OUTLINED_FUNCTION_47_0(51LL, v15, v21);
    OUTLINED_FUNCTION_32_18((uint64_t)&v20, (uint64_t)v21);
    OUTLINED_FUNCTION_9_4(&dword_0, v16, v17, "%s");
    OUTLINED_FUNCTION_8_24();
    OUTLINED_FUNCTION_0_2(v14);
    OUTLINED_FUNCTION_0_2(v13);
  }

  OUTLINED_FUNCTION_33_21(51LL);
  OUTLINED_FUNCTION_116();
  result.super.Class isa = (Class)OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  51LL,  v18,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
  return result;
}

void *INPerson.withTranslatedHandleLabel(locale:)()
{
  uint64_t v1 = v0;
  INPerson.hasHandleLabel.getter();
  if ((v2 & 1) == 0) {
    goto LABEL_14;
  }
  id v3 = OUTLINED_FUNCTION_17_5(v2, "personHandle");
  if (!v3) {
    goto LABEL_14;
  }
  uint64_t v4 = v3;
  id v5 = [v3 label];
  if (!v5)
  {

LABEL_14:
    id v37 = v0;
    return v1;
  }

  id v6 = v5;
  id v7 = (id)INIntentSlotValueTransformToContactHandle(v4);
  v49[0] = Locale.identifier.getter(v7);
  v49[1] = v8;
  uint64_t v47 = 45LL;
  unint64_t v48 = 0xE100000000000000LL;
  v46[0] = 95LL;
  v46[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v13 = OUTLINED_FUNCTION_32_7((uint64_t)&v47, (uint64_t)v46, v9, v10, v11, v12, (uint64_t)&type metadata for String);
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_13_1();
  uint64_t v16 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v6, v13, v15);
  uint64_t v18 = v17;
  OUTLINED_FUNCTION_70_2();
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)(v6) && v18 == v19)
  {
    OUTLINED_FUNCTION_1_43();
  }

  else
  {
    uint64_t v21 = v19;
    uint64_t v22 = OUTLINED_FUNCTION_90_2();
    char v25 = OUTLINED_FUNCTION_49_2(v22, v23, v24, v21);
    OUTLINED_FUNCTION_62();
    if ((v25 & 1) != 0) {
      goto LABEL_20;
    }
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v26 = OUTLINED_FUNCTION_15_1();
    uint64_t v27 = (os_log_s *)__swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    id v28 = v6;
    swift_bridgeObjectRetain_n(v18, 2LL);
    id v29 = v28;
    Logger.logObject.getter(v29);
    os_log_type_t v30 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v27, v30))
    {
      os_log_type_t type = v30;
      uint64_t v31 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v45 = OUTLINED_FUNCTION_7_0(64LL);
      v49[0] = v45;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v31 + 4);

      OUTLINED_FUNCTION_62();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v34 = OUTLINED_FUNCTION_90_2();
      uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v31 + 14);
      swift_bridgeObjectRelease_n(v18, 3LL);
      _os_log_impl( &dword_0,  v27,  type,  "#INPerson Replacing handle label with translated label! %s => %s",  (uint8_t *)v31,  0x16u);
      swift_arrayDestroy(v45, 2LL);
      OUTLINED_FUNCTION_0_2(v45);
      OUTLINED_FUNCTION_0_2(v31);
    }

    else
    {

      OUTLINED_FUNCTION_1_43();
    }

    if (!v7)
    {
LABEL_20:
      OUTLINED_FUNCTION_13_1();
    }

    else
    {
      uint64_t v39 = OUTLINED_FUNCTION_90_2();
      outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter(v39, v40, v7, v41);
    }
  }

  id v42 = (id)INIntentSlotValueTransformFromContactHandle(v7);
  OUTLINED_FUNCTION_17_6(v1, "setPersonHandle:");
  id v43 = v1;

  return v1;
}

void INPersonRelationship.nlString.getter(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_1_57();
  if (v2 == v4 && v1 == v5) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v4, v5);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipMother);
  uint64_t v7 = OUTLINED_FUNCTION_1_57();
  if (v2 == v7 && v1 == v8) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v7, v8);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipParent);
  uint64_t v10 = OUTLINED_FUNCTION_1_57();
  if (v2 == v10 && v1 == v11) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v10, v11);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipBrother);
  uint64_t v13 = OUTLINED_FUNCTION_1_57();
  if (v2 == v13 && v1 == v14) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v13, v14);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipSister);
  uint64_t v16 = OUTLINED_FUNCTION_1_57();
  if (v2 == v16 && v1 == v17) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v16, v17);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipChild);
  uint64_t v19 = OUTLINED_FUNCTION_1_57();
  if (v2 == v19 && v1 == v20) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v19, v20);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipFriend);
  uint64_t v22 = OUTLINED_FUNCTION_1_57();
  if (v2 == v22 && v1 == v23) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v22, v23);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipSpouse);
  uint64_t v25 = OUTLINED_FUNCTION_1_57();
  if (v2 == v25 && v1 == v26) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v25, v26);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipPartner);
  uint64_t v28 = OUTLINED_FUNCTION_1_57();
  if (v2 == v28 && v1 == v29) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v28, v29);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipAssistant);
  uint64_t v31 = OUTLINED_FUNCTION_1_57();
  if (v2 == v31 && v1 == v32) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v31, v32);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipManager);
  uint64_t v34 = OUTLINED_FUNCTION_1_57();
  if (v2 == v34 && v1 == v35) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v34, v35);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipSon);
  uint64_t v37 = OUTLINED_FUNCTION_1_57();
  if (v2 == v37 && v1 == v38) {
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_60(v37, v38);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) != 0) {
    goto LABEL_68;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(INPersonRelationshipDaughter);
  uint64_t v40 = OUTLINED_FUNCTION_1_57();
  if (v2 == v40 && v1 == v41)
  {
LABEL_67:
    swift_bridgeObjectRelease_n(v1, 2LL);
    goto LABEL_68;
  }

  OUTLINED_FUNCTION_0_60(v40, v41);
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_34_0();
  if ((v2 & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    return;
  }

LABEL_68:
  uint64_t BackingType = INPersonRelationshipGetBackingType(a1);
  switch((int)BackingType)
  {
    case 0:
      uint64_t v44 = @"Father";
      goto LABEL_83;
    case 1:
      uint64_t v44 = @"Mother";
      goto LABEL_83;
    case 2:
      uint64_t v44 = @"Parent";
      goto LABEL_83;
    case 3:
      uint64_t v44 = @"Brother";
      goto LABEL_83;
    case 4:
      uint64_t v44 = @"Sister";
      goto LABEL_83;
    case 5:
      uint64_t v44 = @"Child";
      goto LABEL_83;
    case 6:
      uint64_t v44 = @"Friend";
      goto LABEL_83;
    case 7:
      uint64_t v44 = @"Spouse";
      goto LABEL_83;
    case 8:
      uint64_t v44 = @"Partner";
      goto LABEL_83;
    case 9:
      uint64_t v44 = @"Assistant";
      goto LABEL_83;
    case 10:
      uint64_t v44 = @"Manager";
      goto LABEL_83;
    case 11:
      uint64_t v44 = @"Son";
      goto LABEL_83;
    case 12:
      uint64_t v44 = @"Daughter";
LABEL_83:
      uint64_t v45 = v44;
      break;
    default:
      objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"(unknown: %i)", BackingType));
      break;
  }

  id v46 = OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_72_12((uint64_t)v46);
  OUTLINED_FUNCTION_64_10();
  OUTLINED_FUNCTION_146_1();
  String.lowercased()();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_24_0();
}

void *closure #1 in INPersonRelationship.toSpeakableString(startCallCats:)()
{
  INPerson result = (void *)TemplatingResult.print.getter();
  if (result[2])
  {
    uint64_t v1 = result;
    uint64_t v2 = result[4];
    uint64_t v3 = result[5];
    swift_bridgeObjectRetain(v3);
    uint64_t v4 = swift_bridgeObjectRelease(v1);
    INPerson result = (void *)TemplatingResult.speak.getter(v4);
    if (result[2])
    {
      uint64_t v5 = result;
      uint64_t v6 = result[4];
      uint64_t v7 = result[5];
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease(v5);
      return (void *)SpeakableString.init(print:speak:)(v2, v3, v6, v7);
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

void INCallRecord.callProviderApp.getter()
{
}

id INCallRecord.refinedCallDurationAsDouble.getter()
{
  id result = [v0 callDuration];
  uint64_t v2 = result;
  if (result)
  {
    double v3 = Double.init(truncating:)(result);

    return *(id *)&v3;
  }

  return result;
}

void INCallRecord.refinedIsCallerIDBlockedAsBool.getter()
{
}

void *INCallRecord.refinedNumberOfCallsAsInt.getter()
{
  id v1 = [v0 numberOfCalls];
  if (!v1) {
    return 0LL;
  }
  OUTLINED_FUNCTION_17_5((uint64_t)v1, "integerValue");
  OUTLINED_FUNCTION_79();
  return v0;
}

void INCallRecord.refinedUnseenAsBool.getter()
{
}

void INCallRecord.refinedIsCallerIDBlockedAsBool.getter(const char **a1)
{
  id v1 = OUTLINED_FUNCTION_46_7((uint64_t)a1, *a1);
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 BOOLValue];
  }

  OUTLINED_FUNCTION_2();
}

void INCallRecordType.INPBStringRepresentation.getter(uint64_t a1)
{
  if (a1)
  {
    uint64_t BackingType = INCallRecordTypeGetBackingType();
    switch((int)BackingType)
    {
      case 2:
        uint64_t v2 = @"OUTGOING";
        goto LABEL_13;
      case 3:
        uint64_t v2 = @"MISSED";
        goto LABEL_13;
      case 4:
        uint64_t v2 = @"RECEIVED";
        goto LABEL_13;
      case 5:
        uint64_t v2 = @"LATEST";
        goto LABEL_13;
      case 7:
        uint64_t v2 = @"VOICEMAIL";
        goto LABEL_13;
      case 8:
        uint64_t v2 = @"RINGING";
        goto LABEL_13;
      case 9:
        uint64_t v2 = @"IN_PROGRESS";
        goto LABEL_13;
      case 10:
        uint64_t v2 = @"ON_HOLD";
LABEL_13:
        double v3 = v2;
        break;
      default:
        objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        break;
    }

    id v4 = OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_126_3((uint64_t)v4);
    OUTLINED_FUNCTION_16_34();
  }

  else
  {
    OUTLINED_FUNCTION_1_23();
  }

  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_24_0();
}

void INCallRecordTypeOptions.INPBStringRepresentation.getter(uint64_t a1)
{
}

uint64_t closure #1 in INCallRecordTypeOptions.INPBStringRepresentation.getter(uint64_t a1, uint64_t a2)
{
  switch((int)a1)
  {
    case 2:
      double v3 = @"OUTGOING";
      goto LABEL_11;
    case 3:
      double v3 = @"MISSED";
      goto LABEL_11;
    case 4:
      double v3 = @"RECEIVED";
      goto LABEL_11;
    case 5:
      double v3 = @"LATEST";
      goto LABEL_11;
    case 7:
      double v3 = @"VOICEMAIL";
      goto LABEL_11;
    case 8:
      double v3 = @"RINGING";
      goto LABEL_11;
    case 9:
      double v3 = @"IN_PROGRESS";
      goto LABEL_11;
    case 10:
      double v3 = @"ON_HOLD";
LABEL_11:
      id v4 = v3;
      break;
    default:
      double v3 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  a1));
      break;
  }

  uint64_t v5 = v3;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  uint64_t v8 = v7;

  swift_beginAccess(a2 + 16, v13, 33LL, 0LL);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v9 = *(void *)(*(void *)(a2 + 16) + 16LL);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  uint64_t v10 = *(void *)(a2 + 16);
  *(void *)(v10 + 16) = v9 + 1;
  uint64_t v11 = v10 + 16 * v9;
  *(void *)(v11 + 32) = v6;
  *(void *)(v11 + 40) = v8;
  return swift_endAccess(v13);
}

void INCallCapabilityOptions.INPBStringRepresentation.getter(uint64_t a1)
{
}

void INCallRecordTypeOptions.INPBStringRepresentation.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *))
{
  uint64_t v10 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4021F0, 24LL);
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  v13[4] = a2;
  uint64_t v14 = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256LL;
  v13[2] = a3;
  v13[3] = a4;
  uint64_t v11 = _Block_copy(v13);
  uint64_t v12 = v14;
  swift_retain();
  swift_release(v12);
  a5(a1, v11);
  _Block_release(v11);
  swift_beginAccess(v10 + 16, v13, 0LL, 0LL);
  OUTLINED_FUNCTION_8_1();
  swift_release(v10);
  OUTLINED_FUNCTION_25_32();
}

uint64_t closure #1 in INCallCapabilityOptions.INPBStringRepresentation.getter(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a1 == 2)
  {
    double v3 = @"VIDEO_CALL";
  }

  else
  {
    if ((_DWORD)a1 != 1)
    {
      double v3 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  a1));
      goto LABEL_7;
    }

    double v3 = @"AUDIO_CALL";
  }

  id v4 = v3;
LABEL_7:
  uint64_t v5 = v3;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  uint64_t v8 = v7;

  swift_beginAccess(a2 + 16, v13, 33LL, 0LL);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v9 = *(void *)(*(void *)(a2 + 16) + 16LL);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
  uint64_t v10 = *(void *)(a2 + 16);
  *(void *)(v10 + 16) = v9 + 1;
  uint64_t v11 = v10 + 16 * v9;
  *(void *)(v11 + 32) = v6;
  *(void *)(v11 + 40) = v8;
  return swift_endAccess(v13);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned _INPBCallRecordType) -> ()(uint64_t a1, uint64_t a2)
{
  id v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

id @nonobjc INPlayVoicemailIntent.init(callRecordIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v4 = 0LL;
  }

  id v5 = [v2 initWithCallRecordIdentifier:v4];

  return v5;
}

uint64_t specialized _ContiguousArrayStorage.__deallocating_deinit(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_arrayDestroy(v1 + 32, v2);
  uint64_t v3 = OUTLINED_FUNCTION_34_3();
  return swift_deallocClassInstance(v3, v4, v5);
}

void *specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001LL) == 0)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      goto LABEL_5;
    }
    return _swiftEmptyArrayStorage;
  }

  if (a1 >= 0) {
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t v2 = __CocoaSet.count.getter(a1);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_5:
  if (v2 <= 0)
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v4 = (void *)OUTLINED_FUNCTION_8_2(v3, 8 * v2 + 32);
    _swift_stdlib_malloc_size(v4);
    OUTLINED_FUNCTION_32_25();
    v4[2] = v2;
    v4[3] = v5;
  }

  OUTLINED_FUNCTION_6_3();
  uint64_t v6 = specialized Sequence._copySequenceContents(initializing:)(&v8, v4 + 4, v2, v1);
  id result = (void *)outlined consume of [String : Any].Iterator._Variant(v8);
  __break(1u);
  return result;
}

void specialized _copyCollectionToContiguousArray<A>(_:)( unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  while (v4)
  {
    if (v4 <= 0)
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }

    else
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v6 = (void *)OUTLINED_FUNCTION_8_2(v5, 8 * v4 + 32);
      _swift_stdlib_malloc_size(v6);
      OUTLINED_FUNCTION_32_25();
      v6[2] = v4;
      v6[3] = v7;
    }

    OUTLINED_FUNCTION_6_3();
    a2(v6 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_8:
    OUTLINED_FUNCTION_6_3();
    uint64_t v4 = OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_62();
  }

  OUTLINED_FUNCTION_16();
}

id specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a4;
  uint64_t v8 = (char *)a2 - a1;
  uint64_t v9 = ((char *)a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 < v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, ((char *)a2 - a1) / 8, a4);
    uint64_t v12 = &v4[v9];
    if ((unint64_t)a2 < a3 && v8 >= 8)
    {
      uint64_t v16 = a2;
      uint64_t v17 = (void **)a1;
      unint64_t v48 = a3;
      id v50 = &v4[v9];
      while (1)
      {
        uint64_t v18 = v16;
        uint64_t v19 = *v4;
        id v20 = *v16;
        id v21 = v19;
        id result = [v20 rank];
        if (!result)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }

        uint64_t v23 = result;
        id v24 = [result integerValue];

        id result = [v21 rank];
        if (!result) {
          goto LABEL_47;
        }
        uint64_t v25 = result;
        id v26 = [result integerValue];

        uint64_t v27 = v4;
        BOOL v29 = v17 == v4++;
        unint64_t v28 = v48;
        uint64_t v16 = v18;
        if (!v29) {
          goto LABEL_20;
        }
LABEL_21:
        ++v17;
        uint64_t v12 = v50;
        if (v4 >= v50 || (unint64_t)v16 >= v28)
        {
          uint64_t v14 = v17;
          goto LABEL_45;
        }
      }

      uint64_t v27 = v18;
      uint64_t v16 = v18 + 1;
      unint64_t v28 = v48;
      if (v17 == v18) {
        goto LABEL_21;
      }
LABEL_20:
      *uint64_t v17 = *v27;
      goto LABEL_21;
    }

    uint64_t v14 = (void **)a1;
LABEL_45:
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v4, v12 - v4, v14);
    return &dword_0 + 1;
  }

  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
  uint64_t v12 = &v4[v11];
  if (a1 >= (char *)a2 || v10 < 8)
  {
    uint64_t v14 = a2;
    goto LABEL_45;
  }

  uint64_t v31 = (void **)(a3 - 8);
  p_base_props = &CameraControlFlow.base_props;
  uint64_t v14 = a2;
  uint64_t v45 = a1;
  id v46 = v4;
  while (1)
  {
    unint64_t v51 = (unint64_t)v12;
    unint64_t v33 = v12 - 1;
    uint64_t v49 = v14;
    uint64_t v35 = *(v14 - 1);
    uint64_t v34 = v14 - 1;
    id v36 = *(v12 - 1);
    id v37 = v35;
    id result = [v36 rank];
    if (!result) {
      goto LABEL_48;
    }
    uint64_t v38 = result;
    id v39 = objc_msgSend(result, (SEL)p_base_props[389]);

    id result = [v37 rank];
    if (!result) {
      break;
    }
    uint64_t v40 = result;
    uint64_t v47 = v31 + 1;
    id v41 = objc_msgSend(result, (SEL)p_base_props[389]);

    if ((uint64_t)v39 >= (uint64_t)v41)
    {
      BOOL v43 = v47 != (void **)v51 || (unint64_t)v31 >= v51;
      uint64_t v34 = v33;
      uint64_t v12 = v33;
      if (!v43) {
        goto LABEL_41;
      }
    }

    else
    {
      BOOL v42 = v47 != v49 || v31 >= v49;
      uint64_t v49 = v34;
      uint64_t v12 = (void **)v51;
      if (!v42) {
        goto LABEL_41;
      }
    }

    *uint64_t v31 = *v34;
LABEL_41:
    --v31;
    uint64_t v14 = v49;
    uint64_t v4 = v46;
    BOOL v44 = v49 > (void **)v45 && v12 > v46;
    p_base_props = (__objc2_prop_list **)(&CameraControlFlow + 64);
    if (!v44) {
      goto LABEL_45;
    }
  }

LABEL_49:
  __break(1u);
  return result;
}

  __break(1u);
}

  *(void *)v88 = 0LL;
  *(void *)(v88 + 8) = 0LL;
  *(void *)(v88 + 16) = 0LL;
  *(_OWORD *)(v88 + 24) = xmmword_31F950;
}

void outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(void *a1)
{
}

void outlined bridged method (ob) of @objc INPersonHandle.value.getter(void *a1)
{
}

id outlined bridged method (mnnnnbnnn) of @objc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  id v16 = [a8 initWithPersonHandle:a1 nameComponents:a2 displayName:a3 image:a4 contactIdentifier:v15 customIdentifier:a7];

  return v16;
}

void outlined bridged method (pb) of @objc INPersonHandle.value.getter(void *a1)
{
}

void outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.systemExtensionBundleId.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setSystemExtensionBundleId:v4];
}

void outlined bridged method (mbgnn) of @objc _INPBIntentMetadata.launchId.setter( uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setLaunchId:v4];
}

uint64_t outlined bridged method (pb) of @objc INIntent.airPlayRouteIds.getter(void *a1)
{
  id v1 = [a1 airPlayRouteIds];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  return v3;
}

void outlined bridged method (mbnn) of @objc INIntent.airPlayRouteIds.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 _setAirPlayRouteIds:isa];
}

void outlined bridged method (pb) of @objc INAnswerCallIntentResponse.callRecords.getter(void *a1)
{
}

uint64_t outlined bridged method (ob) of @objc INIntentDescription.slotDescriptions()(void *a1)
{
  id v2 = [a1 slotDescriptions];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INIntentSlotDescription,  &OBJC_CLASS___INIntentSlotDescription_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

void outlined bridged method (pb) of @objc INStartCallIntent.callGroups.getter(void *a1)
{
}

void outlined bridged method (pb) of @objc INCallRecord.providerBundleId.getter(void *a1)
{
}

void outlined bridged method (ob) of @objc INPersonHandle.value.getter(void *a1, SEL *a2)
{
  id v3 = OUTLINED_FUNCTION_103_5(a1, a2);
  OUTLINED_FUNCTION_51_9();
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    OUTLINED_FUNCTION_64_10();
  }

  OUTLINED_FUNCTION_146_1();
  OUTLINED_FUNCTION_6();
}

void outlined bridged method (pb) of @objc INPersonHandle.value.getter(void *a1, SEL *a2)
{
  id v2 = OUTLINED_FUNCTION_103_5(a1, a2);
  if (v2)
  {
    OUTLINED_FUNCTION_126_3((uint64_t)v2);
    OUTLINED_FUNCTION_131_2();
  }

  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
}

void outlined bridged method (mbnn) of @objc INIdentifyIncomingCallerIntentResponse.callRecords.setter( uint64_t a1, void *a2)
{
  Class isa = OUTLINED_FUNCTION_126_4().super.isa;
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_81_9(a2, "setCallRecords:", v3, v4, v5, v6, v7, v8, v9, (uint64_t)isa);
  OUTLINED_FUNCTION_57_13(v11);
}

void outlined bridged method (mbgnn) of @objc INPerson.scoredAlternatives.setter(uint64_t a1, uint64_t a2)
{
}

void outlined bridged method (mbgnn) of @objc INStartCallIntent.callGroups.setter( uint64_t a1, uint64_t a2, unint64_t *a3, void *a4, const char **a5)
{
  Class isa = OUTLINED_FUNCTION_67_13().super.isa;
  OUTLINED_FUNCTION_46_7((uint64_t)isa, *a5);
  OUTLINED_FUNCTION_3_64(isa);
}

void outlined bridged method (mbnn) of @objc INIntent._uiExtensionBundleId.setter( uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v13 = String._bridgeToObjectiveC()();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_81_9(a3, *a4, v6, v7, v8, v9, v10, v11, v12, (uint64_t)v13);
  OUTLINED_FUNCTION_3_64(v14);
}

void _ss6ResultOy11SiriKitFlow010TemplatingA0Vs5Error_pGWOcTm_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t partial apply for closure #1 in INPerson.isUnnamedHandle.getter(unsigned int *a1)
{
  return CharacterSet.contains(_:)(*a1) & 1;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)( uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1LL << -(char)v7);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0LL;
    uint64_t v10 = 0LL;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }

  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v11 = a2;
  int64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }

    v11 += 2;
    id result = swift_bridgeObjectRetain(v21);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }

  v12 += 2LL;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }

  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0LL;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0LL;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }

    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }

{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1LL << -(char)v7);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0LL;
    uint64_t v10 = 0LL;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }

  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v11 = a2;
  int64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }

    v11 += 2;
    id result = swift_bridgeObjectRetain(v21);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }

  v12 += 2LL;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }

  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0LL;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0LL;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }

    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }

uint64_t *specialized Sequence._copySequenceContents(initializing:)( uint64_t *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001LL) != 0)
  {
    if (a4 < 0) {
      uint64_t v8 = a4;
    }
    else {
      uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v9 = __CocoaSet.makeIterator()(v8);
    uint64_t v10 = type metadata accessor for App(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    id result = Set.Iterator.init(_cocoa:)(v35, v9, v10, v11);
    uint64_t v4 = v35[0];
    uint64_t v12 = v35[1];
    uint64_t v13 = v35[2];
    int64_t v14 = v35[3];
    unint64_t v15 = v35[4];
  }

  else
  {
    int64_t v14 = 0LL;
    uint64_t v16 = -1LL << *(_BYTE *)(a4 + 32);
    uint64_t v12 = a4 + 56;
    uint64_t v13 = ~v16;
    uint64_t v17 = -v16;
    if (v17 < 64) {
      uint64_t v18 = ~(-1LL << v17);
    }
    else {
      uint64_t v18 = -1LL;
    }
    unint64_t v15 = v18 & *(void *)(a4 + 56);
  }

  uint64_t v31 = v7;
  if (!a2)
  {
    uint64_t v19 = 0LL;
LABEL_50:
    *uint64_t v31 = v4;
    v31[1] = v12;
    v31[2] = v13;
    v31[3] = v14;
    v31[4] = v15;
    return (uint64_t *)v19;
  }

  if (!a3)
  {
    uint64_t v19 = 0LL;
    goto LABEL_50;
  }

  if (a3 < 0) {
    goto LABEL_52;
  }
  uint64_t v19 = 0LL;
  int64_t v32 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v30 = v13;
  while (1)
  {
    if (v4 < 0)
    {
      uint64_t v22 = v12;
      uint64_t v23 = __CocoaSet.Iterator.next()(result);
      if (!v23) {
        goto LABEL_49;
      }
      uint64_t v24 = v23;
      uint64_t v33 = v23;
      type metadata accessor for App(0LL);
      swift_unknownObjectRetain(v24);
      swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8);
      uint64_t v25 = v34;
      id result = (uint64_t *)swift_unknownObjectRelease(v24);
      uint64_t v12 = v22;
      if (!v25) {
        goto LABEL_49;
      }
      goto LABEL_31;
    }

    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_30;
    }

    int64_t v26 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v26 >= v32)
    {
      unint64_t v15 = 0LL;
      goto LABEL_49;
    }

    unint64_t v27 = *(void *)(v12 + 8 * v26);
    if (v27) {
      goto LABEL_29;
    }
    int64_t v28 = v14 + 2;
    if (v14 + 2 >= v32)
    {
      unint64_t v15 = 0LL;
      ++v14;
      goto LABEL_49;
    }

    unint64_t v27 = *(void *)(v12 + 8 * v28);
    if (!v27)
    {
      if (v14 + 3 >= v32) {
        goto LABEL_46;
      }
      unint64_t v27 = *(void *)(v12 + 8 * (v14 + 3));
      if (v27)
      {
        int64_t v26 = v14 + 3;
        goto LABEL_29;
      }

      int64_t v28 = v14 + 4;
      if (v14 + 4 >= v32)
      {
        unint64_t v15 = 0LL;
        v14 += 3LL;
        goto LABEL_49;
      }

      unint64_t v27 = *(void *)(v12 + 8 * v28);
      if (!v27)
      {
        int64_t v26 = v14 + 5;
        if (v14 + 5 >= v32)
        {
LABEL_46:
          unint64_t v15 = 0LL;
          int64_t v14 = v28;
          goto LABEL_49;
        }

        unint64_t v27 = *(void *)(v12 + 8 * v26);
        if (!v27)
        {
          int64_t v29 = v14 + 6;
          while (v29 < v32)
          {
            unint64_t v27 = *(void *)(v12 + 8 * v29++);
            if (v27)
            {
              int64_t v26 = v29 - 1;
              goto LABEL_29;
            }
          }

          unint64_t v15 = 0LL;
          int64_t v14 = v32 - 1;
          goto LABEL_49;
        }

        goto LABEL_29;
      }
    }

    int64_t v26 = v28;
LABEL_29:
    unint64_t v15 = (v27 - 1) & v27;
    unint64_t v21 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v14 = v26;
LABEL_30:
    uint64_t v25 = *(void *)(*(void *)(v4 + 48) + 8 * v21);
    id result = (uint64_t *)swift_retain();
    if (!v25) {
      goto LABEL_49;
    }
LABEL_31:
    ++v19;
    *a2++ = v25;
    if (v19 == a3)
    {
      uint64_t v19 = a3;
LABEL_49:
      uint64_t v13 = v30;
      goto LABEL_50;
    }
  }

  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_148B98()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t partial apply for closure #1 in INCallRecordTypeOptions.INPBStringRepresentation.getter(uint64_t a1)
{
  return closure #1 in INCallRecordTypeOptions.INPBStringRepresentation.getter(a1, v1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_1(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t partial apply for closure #1 in INCallCapabilityOptions.INPBStringRepresentation.getter(uint64_t a1)
{
  return closure #1 in INCallCapabilityOptions.INPBStringRepresentation.getter(a1, v1);
}

uint64_t storeEnumTagSinglePayload for FollowUpOfferType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_148C70 + 4 * byte_328A9F[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_148CA4 + 4 * byte_328A9A[v4]))();
}

uint64_t sub_148CA4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_148CAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x148CB4LL);
  }
  return result;
}

uint64_t sub_148CC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x148CC8LL);
  }
  *(_BYTE *)id result = a2 + 4;
  return result;
}

uint64_t sub_148CCC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_148CD4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for FollowUpOfferType()
{
}

void outlined init with take of PersonNameComponents?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t OUTLINED_FUNCTION_0_60(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2, 0LL);
}

uint64_t OUTLINED_FUNCTION_1_57()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

void OUTLINED_FUNCTION_3_64(id a1)
{
}

uint64_t OUTLINED_FUNCTION_4_58()
{
  return swift_bridgeObjectRelease(v0);
}

void OUTLINED_FUNCTION_16_34()
{
}

void OUTLINED_FUNCTION_18_38(uint64_t a1)
{
}

  ;
}

void OUTLINED_FUNCTION_33_30(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((a1 - 32) / 16);
}

uint64_t OUTLINED_FUNCTION_37_23(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_47_13()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

void OUTLINED_FUNCTION_52_12(uint64_t a1, uint64_t *a2)
{
}

  ;
}

void OUTLINED_FUNCTION_58_12()
{
}

  ;
}

NSArray OUTLINED_FUNCTION_67_13()
{
  return Array._bridgeToObjectiveC()();
}

id OUTLINED_FUNCTION_68_12(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

id OUTLINED_FUNCTION_73_13(id a1)
{
  return a1;
}

  ;
}

id OUTLINED_FUNCTION_78_11(uint64_t a1, const char *a2)
{
  return [*(id *)(v2 - 104) a2];
}

id OUTLINED_FUNCTION_81_9( id a1, SEL a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(a1, a2, a10);
}

void OUTLINED_FUNCTION_88_9()
{
}

uint64_t OUTLINED_FUNCTION_90_8()
{
  return __swift_getEnumTagSinglePayload(v0, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_91_8()
{
  return outlined consume of [String : Any].Iterator._Variant(v0);
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_97_7(float a1)
{
  float *v1 = a1;
}

id OUTLINED_FUNCTION_103_5(void *a1, SEL *a2)
{
  return [a1 *a2];
}

uint64_t OUTLINED_FUNCTION_112_3(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_117_4(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

void OUTLINED_FUNCTION_118_2(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_120_4(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1LL, v2);
}

id OUTLINED_FUNCTION_121_4(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2, 0);
}

uint64_t OUTLINED_FUNCTION_122_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_124_4()
{
  return swift_setDeallocating(v0);
}

void OUTLINED_FUNCTION_125_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

NSArray OUTLINED_FUNCTION_126_4()
{
  return Array._bridgeToObjectiveC()();
}

NSArray OUTLINED_FUNCTION_127_5()
{
  return Array._bridgeToObjectiveC()();
}

  ;
}

void OUTLINED_FUNCTION_131_2()
{
}

uint64_t OUTLINED_FUNCTION_133_4()
{
  return swift_bridgeObjectRelease(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_135_4()
{
  return String.UnicodeScalarView.append(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_136_3()
{
  return CharacterSet.contains(_:)(v0);
}

id OUTLINED_FUNCTION_138_3(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

void OUTLINED_FUNCTION_140_4(uint64_t a1, SEL *a2)
{
}

void OUTLINED_FUNCTION_144_3(uint64_t a1, SEL *a2, unint64_t *a3, void *a4)
{
}

NSString OUTLINED_FUNCTION_145_3()
{
  return String._bridgeToObjectiveC()();
}

ValueMetadata *type metadata accessor for SpringBoardServicesManager()
{
  return &type metadata for SpringBoardServicesManager;
}

void *one-time initialization function for kCNContactKeysToFetch()
{
  id result = (void *)closure #1 in variable initialization expression of kCNContactKeysToFetch();
  kCNContactKeysToFetch._rawValue = result;
  return result;
}

uint64_t closure #1 in variable initialization expression of kCNContactKeysToFetch()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v1 = swift_allocObject(v0, 64LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_328D90;
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___CNContactFormatter);
  *(void *)(v1 + 32) = [v2 descriptorForRequiredKeysForStyle:0];
  id v3 = [v2 descriptorForRequiredKeysForStyle:1];
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = CNContactIdentifierKey;
  uint64_t v4 = (void *)CNContactPhonemeDataKey;
  *(void *)(v1 + 56) = CNContactPhonemeDataKey;
  uint64_t v26 = v1;
  specialized Array._endMutation()(v3, v5, v6, v7);
  uint64_t v8 = (void *)CNContactPronunciationGivenNameKey;
  uint64_t v9 = CNContactIdentifierKey;
  id v10 = v4;
  id v11 = v8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
  unint64_t v13 = *(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v12 = *(void *)((char *)&dword_18 + (v26 & 0xFFFFFFFFFFFFFF8LL));
  if (v13 >= v12 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1LL);
  }
  uint64_t v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
  specialized Array._endMutation()(v14, v15, v16, v17);
  id v18 = CNContactPronunciationFamilyNameKey;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  unint64_t v20 = *(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v19 = *(void *)((char *)&dword_18 + (v26 & 0xFFFFFFFFFFFFFF8LL));
  if (v20 >= v19 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1LL);
  }
  uint64_t v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
  specialized Array._endMutation()(v21, v22, v23, v24);
  return v26;
}

Swift::OpaquePointer *kCNContactKeysToFetch.unsafeMutableAddressor()
{
  if (one-time initialization token for kCNContactKeysToFetch != -1) {
    swift_once( &one-time initialization token for kCNContactKeysToFetch,  one-time initialization function for kCNContactKeysToFetch);
  }
  return &kCNContactKeysToFetch;
}

INPerson_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CNContactStore.person(withIdentifier:)( Swift::String withIdentifier)
{
  if (v4)
  {
    unint64_t v5 = v3;
    uint64_t v6 = v2;
    static Signpost.begin(_:)();
    uint64_t v8 = v7;
    NSString v9 = String._bridgeToObjectiveC()();
    if (one-time initialization token for kCNContactKeysToFetch != -1) {
      swift_once( &one-time initialization token for kCNContactKeysToFetch,  one-time initialization function for kCNContactKeysToFetch);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v36 = 0LL;
    id v11 = [v1 unifiedContactWithIdentifier:v9 keysToFetch:isa error:&v36];

    id v12 = v36;
    if (v11)
    {
      type metadata accessor for INPerson();
      id v13 = v12;
      INPerson.init(phoneContact:)((CNContact)v11);
    }

    else
    {
      id v14 = v36;
      uint64_t v15 = _convertNSErrorToError(_:)(v12);

      swift_willThrow(v16, v17, v18, v19, v20, v21, v22, v23);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v24 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
      uint64_t v25 = swift_bridgeObjectRetain_n(v5, 2LL);
      uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        int64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v35 = v15;
        int64_t v29 = (void *)OUTLINED_FUNCTION_7_0(32LL);
        id v36 = v29;
        *(_DWORD *)int64_t v28 = 136315138;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, (uint64_t *)&v36);
        OUTLINED_FUNCTION_4_59();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v30, v31, v28 + 4);
        swift_bridgeObjectRelease_n(v5, 3LL);
        _os_log_impl(&dword_0, v26, v27, "Couldn't fetch contact for identifier: %s", v28, 0xCu);
        swift_arrayDestroy(v29, 1LL);
        OUTLINED_FUNCTION_0_2((uint64_t)v29);
        OUTLINED_FUNCTION_0_2((uint64_t)v28);
        uint64_t v32 = v35;
      }

      else
      {
        swift_bridgeObjectRelease_n(v5, 2LL);
        uint64_t v32 = v15;
      }

      swift_errorRelease(v32);
    }

    Signpost.OpenSignpost.end()();
    swift_release(v8);
  }

  OUTLINED_FUNCTION_1_6();
  result.value.super.Class isa = v33;
  result.is_nil = v34;
  return result;
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CNContactStore.persons(withHandle:)( Swift::String withHandle)
{
  if (v4)
  {
    unint64_t v5 = v3;
    uint64_t v6 = v2;
    static Signpost.begin(_:)();
    uint64_t v8 = v7;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v10 = swift_allocObject(v9, 48LL, 7LL);
    *(_OWORD *)(v10 + 16) = xmmword_31D870;
    *(void *)(v10 + 32) = v6;
    *(void *)(v10 + 40) = v5;
    OUTLINED_FUNCTION_36();
    v11.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if (one-time initialization token for kCNContactKeysToFetch != -1) {
      swift_once( &one-time initialization token for kCNContactKeysToFetch,  one-time initialization function for kCNContactKeysToFetch);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v49 = 0LL;
    id v13 = objc_msgSend(v1, "tu_contactsForContactHandles:keyDescriptors:error:", v11.super.isa, isa, &v49);

    id v14 = v49;
    if (!v13)
    {
      int64_t v28 = v49;
      uint64_t v29 = _convertNSErrorToError(_:)(v14);

      swift_willThrow(v30, v31, v32, v33, v34, v35, v36, v37);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v38 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
      uint64_t v39 = swift_bridgeObjectRetain_n(v5, 2LL);
      uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        BOOL v42 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        BOOL v43 = (void *)OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v49 = v43;
        *(_DWORD *)BOOL v42 = 136315138;
        OUTLINED_FUNCTION_36();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, (uint64_t *)&v49);
        OUTLINED_FUNCTION_4_59();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v44, v45, v42 + 4);
        swift_bridgeObjectRelease_n(v5, 3LL);
        _os_log_impl(&dword_0, v40, v41, "Couldn't fetch contact for handle: %s", v42, 0xCu);
        swift_arrayDestroy(v43, 1LL);
        OUTLINED_FUNCTION_0_2((uint64_t)v43);
        OUTLINED_FUNCTION_0_2((uint64_t)v42);
      }

      else
      {
        swift_bridgeObjectRelease_n(v5, 2LL);
      }

      swift_errorRelease(v29);

      goto LABEL_27;
    }

    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CNContact]);
    uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v13,  &type metadata for String,  v15,  &protocol witness table for String);
    id v17 = v14;

    specialized Collection.first.getter(v16);
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if (!v19)
    {
LABEL_27:
      Signpost.OpenSignpost.end()();
      swift_release(v8);
      goto LABEL_28;
    }

    swift_bridgeObjectRelease();
    if ((unint64_t)v21 >> 62)
    {
      if (v21 >= 0) {
        uint64_t v46 = v21 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v46 = v21;
      }
      OUTLINED_FUNCTION_36();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v46);
      OUTLINED_FUNCTION_70_2();
      if (v22) {
        goto LABEL_8;
      }
    }

    else
    {
      uint64_t v22 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8LL));
      if (v22)
      {
LABEL_8:
        uint64_t v49 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v22);
        if (v22 < 0) {
          __break(1u);
        }
        type metadata accessor for INPerson();
        uint64_t v23 = 0LL;
        do
        {
          if ((v21 & 0xC000000000000001LL) != 0) {
            id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v21);
          }
          else {
            id v24 = *(id *)(v21 + 8 * v23 + 32);
          }
          ++v23;
          Class v25 = INPerson.init(phoneContact:)((CNContact)v24).super.isa;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          uint64_t v26 = v49[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
          uint64_t v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v25);
          specialized ContiguousArray._endMutation()(v27);
        }

        while (v22 != v23);
      }
    }

    OUTLINED_FUNCTION_70_2();
    goto LABEL_27;
  }

unint64_t protocol witness for ContactStoring.person(withIdentifier:) in conformance CNContactStore( uint64_t a1, uint64_t a2)
{
  return (unint64_t)CNContactStore.person(withIdentifier:)(*(Swift::String *)&a1);
}

unint64_t protocol witness for ContactStoring.persons(withHandle:) in conformance CNContactStore( uint64_t a1, uint64_t a2)
{
  return (unint64_t)CNContactStore.persons(withHandle:)(*(Swift::String *)&a1);
}

  ;
}

  ;
}

id static PhoneCasinoFactory.makeConfirmationCardSection(person:image:sharedGlobals:)( void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Image(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (id *)((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = type metadata accessor for Locale(0LL);
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  __chkstk_darwin();
  uint64_t v60 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v13 = (char *)&v59 - v12;
  uint64_t v14 = a3[3];
  uint64_t v15 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v14);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8))(v66, v14, v15);
  uint64_t v16 = v67;
  uint64_t v17 = v68;
  __swift_project_boxed_opaque_existential_1(v66, v67);
  uint64_t v63 = v13;
  dispatch thunk of DeviceState.siriLocale.getter(v16, v17);
  uint64_t v18 = __swift_destroy_boxed_opaque_existential_1(v66);
  id v19 = OUTLINED_FUNCTION_1_58(v18, "personHandle");
  uint64_t v20 = v19;
  if (v19)
  {
    id v21 = [v19 label];

    if (v21)
    {
      v66[0] = Locale.identifier.getter(v22);
      v66[1] = v23;
      v65[0] = 45LL;
      v65[1] = 0xE100000000000000LL;
      v64[0] = 95LL;
      v64[1] = 0xE100000000000000LL;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v24 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v65,  v64,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
      uint64_t v25 = v7;
      uint64_t v26 = v6;
      uint64_t v27 = a3;
      uint64_t v28 = a2;
      uint64_t v29 = a1;
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v32 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v21, v24, v31);
      uint64_t v20 = v33;
      a1 = v29;
      a2 = v28;
      a3 = v27;
      uint64_t v6 = v26;
      uint64_t v7 = v25;
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v32 = 0LL;
      uint64_t v20 = 0LL;
    }
  }

  else
  {
    uint64_t v32 = 0LL;
  }

  (*(void (**)(id *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v34 = (*(uint64_t (**)(id *, uint64_t))(v7 + 88))(v9, v6);
  if ((_DWORD)v34 == enum case for Image.fromApp(_:))
  {
    OUTLINED_FUNCTION_0_61();

    id v36 = OUTLINED_FUNCTION_1_58(v35, "displayName");
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    uint64_t v39 = v38;

    id v41 = OUTLINED_FUNCTION_1_58(v40, "image");
    OUTLINED_FUNCTION_5_56();
    id v42 = (id)static CasinoFactory.makeRowCardSection(possibleTitle:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:shouldUseDefaultImageSize:)( v37,  v39,  v32,  v20);
    swift_bridgeObjectRelease();

LABEL_12:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
    return v42;
  }

  if ((_DWORD)v34 != enum case for Image.contact(_:))
  {
    if ((_DWORD)v34 != enum case for Image.monogram(_:))
    {
      id v54 = OUTLINED_FUNCTION_1_58(v34, "displayName");
      id v42 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v54);

      OUTLINED_FUNCTION_5_56();
      OUTLINED_FUNCTION_2_50();
      static CasinoFactory.makeRowCardSection(possibleTitle:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:shouldUseDefaultImageSize:)( v55,  v56,  v57,  v58);
      OUTLINED_FUNCTION_3_66();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
      (*(void (**)(id *, uint64_t))(v7 + 8))(v9, v6);
      return v42;
    }

    uint64_t v48 = OUTLINED_FUNCTION_0_61();
    id v42 = OUTLINED_FUNCTION_1_58(v48, "displayName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v42);

    OUTLINED_FUNCTION_2_50();
    static CasinoFactory.makeRowCardSection(possibleTitle:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:shouldUseDefaultImageSize:)( v49,  v50,  v51,  v52);
    OUTLINED_FUNCTION_3_66();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }

  OUTLINED_FUNCTION_0_61();
  id v43 = *v9;
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for SFDetailedRowCardSection,  &OBJC_CLASS___SFDetailedRowCardSection_ptr);
  uint64_t v45 = (uint64_t)v60;
  uint64_t v44 = v61;
  uint64_t v47 = v62;
  uint64_t v46 = v63;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v63, v62);
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)v66);
  id v42 = SFDetailedRowCardSection.init(person:mappedLabel:contactIdentifiers:locale:sharedGlobals:titleMaxLines:)( a1,  v32,  (uint64_t)v20,  (uint64_t)v43,  v45,  v66,  4LL);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v47);
  return v42;
}

void static PhoneCasinoFactory.makeSash<A>(intent:app:deviceState:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  uint64_t v8 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)(a2, v7, a3);
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for SAUISash,  &OBJC_CLASS___SAUISash_ptr);
  SAUISash.init(app:)(v8);
  OUTLINED_FUNCTION_6();
}

void static SACardSnippet.makeFromCardSectionsWithConfirmationOptions(cardSections:intent:sash:confirmationOptions:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)static SACardSnippet.makeFromCardSectionsWithIntentData(cardSections:intent:intentResponse:shouldGenerateAceId:)( a1,  a2,  0LL,  1LL);
  [v6 setSash:a3];
  [v6 setConfirmationOptions:a4];
  OUTLINED_FUNCTION_6();
}

void *PhoneCasinoFactory.titleMaxLines.unsafeMutableAddressor()
{
  return &static PhoneCasinoFactory.titleMaxLines;
}

id SFDetailedRowCardSection.init(person:mappedLabel:contactIdentifiers:locale:sharedGlobals:titleMaxLines:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v12 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SFRichText,  &OBJC_CLASS___SFRichText_ptr);
  id v13 = v12;
  id v14 = [a1 displayName];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  uint64_t v17 = v16;

  id v18 = @nonobjc SFRichText.__allocating_init(string:)(v15, v17);
  [v13 setTitle:v18];

  id v19 = (void *)SFRichText.init(mappedLabel:titleMaxLines:)(a2, a3, a7);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v21 = swift_allocObject(v20, 40LL, 7LL);
  *(_OWORD *)(v21 + 16) = xmmword_31FE60;
  *(void *)(v21 + 32) = v19;
  uint64_t v32 = v21;
  specialized Array._endMutation()(v21, v22, v23, v24);
  id v25 = v19;
  outlined bridged method (mbnn) of @objc SFDetailedRowCardSection.descriptions.setter(v32, v13);
  SFDetailedRowCardSection.setHintTextIfNeeded(sharedGlobals:person:)(a6);
  id v26 = [objc_allocWithZone(SFContactImage) init];
  outlined bridged method (mbnn) of @objc SFContactImage.contactIdentifiers.setter(a4, v26);
  id v27 = v26;
  [v13 setThumbnail:v27];

  __swift_destroy_boxed_opaque_existential_1(a6);
  uint64_t v28 = type metadata accessor for Locale(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8LL))(a5, v28);
  return v13;
}

uint64_t SFRichText.init(mappedLabel:titleMaxLines:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v6 = v5;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v7 = 0LL;
  }

  [v5 setText:v7];

  if (a3 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL);
    __break(1u);
  }

  else
  {
    [v5 setMaxLines:a3];

    return (uint64_t)v5;
  }

  return result;
}

void SFDetailedRowCardSection.setHintTextIfNeeded(sharedGlobals:person:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  NSString v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (INPerson.isProvidedByPlus.getter())
  {
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v8);
    uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 176))(v8, v9);
    type metadata accessor for PhoneCallFlowDelegatePlugin();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v12 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
    uint64_t v13 = static Locale.current.getter();
    uint64_t v14 = Locale.identifier.getter(v13);
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v26[2] = v14;
    v26[3] = v16;
    v26[0] = 45LL;
    v26[1] = 0xE100000000000000LL;
    v25[0] = 95LL;
    v25[1] = 0xE100000000000000LL;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v17 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v26,  v25,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    outlined bridged method (mbbnbnb) of @objc AFLocalization.localizedString(forKey:table:bundle:languageCode:)( 0xD000000000000011LL,  0x8000000000349350LL,  1396918608LL,  0xE400000000000000LL,  (uint64_t)v12,  v17,  v19,  v10);
    uint64_t v21 = v20;
    uint64_t v23 = v22;

    if (v23)
    {
      type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SFRichText,  &OBJC_CLASS___SFRichText_ptr);
      id v24 = @nonobjc SFRichText.__allocating_init(string:)(v21, v23);
      [v2 setFootnote:v24];
    }
  }

ValueMetadata *type metadata accessor for PhoneCasinoFactory()
{
  return &type metadata for PhoneCasinoFactory;
}

void outlined bridged method (mbnn) of @objc SFDetailedRowCardSection.descriptions.setter( uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setDescriptions:isa];
}

void outlined bridged method (mbnn) of @objc SFContactImage.contactIdentifiers.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 setContactIdentifiers:isa];
}

uint64_t OUTLINED_FUNCTION_0_61()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

id OUTLINED_FUNCTION_1_58(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

  ;
}

uint64_t OUTLINED_FUNCTION_3_66()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t StartVideoCallFlow.__allocating_init(app:sharedGlobals:)(uint64_t a1, void *a2)
{
  return StartVideoCallFlow.init(app:sharedGlobals:)(a1, a2);
}

uint64_t StartVideoCallFlow.init(app:sharedGlobals:)(uint64_t a1, void *a2)
{
  uint64_t v5 = (void *)(v2 + direct field offset for StartVideoCallFlow.flowName);
  *uint64_t v5 = 0xD000000000000012LL;
  v5[1] = 0x8000000000328E00LL;
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v8);
  uint64_t v6 = specialized CallingFlowAbstraction.init(app:flowName:sharedGlobals:)( a1,  0xD000000000000012LL,  0x8000000000328E00LL,  v8);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v6;
}

uint64_t StartVideoCallFlow.makeRCHFlow(input:intent:app:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v39 = v7 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  (*(void (**)(void *__return_ptr))(*(void *)v3 + 152LL))(v45);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v15 = (void *)static BiomeEventSender.instance;
  uint64_t v16 = type metadata accessor for StartVideoCallRCHFlowDelegate(0LL);
  uint64_t v17 = OUTLINED_FUNCTION_15_2(v16);
  id v18 = v15;
  swift_retain();
  uint64_t v33 = specialized StartVideoCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( v45,  a3,  (uint64_t)v18,  v17);
  OUTLINED_FUNCTION_2_51();
  type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  OUTLINED_FUNCTION_55_0();
  uint64_t v19 = OUTLINED_FUNCTION_96();
  type metadata accessor for StartCallCATsSimple(0LL);
  OUTLINED_FUNCTION_55_0();
  uint64_t v20 = OUTLINED_FUNCTION_96();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  swift_allocObject(v21, 80LL, 7LL);
  uint64_t v22 = specialized CallingIntentRCHFlowStrategy.init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)( v45,  a3,  v19,  v20);
  swift_retain();
  specialized static PhoneCallFlowFactory.getGenericStartCallProducers<A>(delegate:app:)();
  OUTLINED_FUNCTION_2_51();
  uint64_t v23 = v46;
  uint64_t v24 = v47;
  __swift_project_boxed_opaque_existential_1(v45, v46);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 104))(v42, v23, v24);
  uint64_t v25 = v43;
  uint64_t v26 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v41 = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v11, v14 + *(int *)(v34 + 36), v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v39, v14, v38);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v27);
  uint64_t v28 = RCHChildFlowFactory.init(producers:withFallbacks:)(v11, v39);
  uint64_t v29 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v26 + 8);
  unint64_t v30 = lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>();
  uint64_t v31 = v29(&v41, v28, a3, a2, v21, v30, v25, v26);
  swift_release(v33);
  swift_release(v28);
  outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>(v14);
  swift_release(v22);
  __swift_destroy_boxed_opaque_existential_1(v42);
  __swift_destroy_boxed_opaque_existential_1(v45);
  return v31;
}

void StartVideoCallFlow.init(app:flowName:sharedGlobals:)()
{
}

void StartVideoCallFlow.init(state:app:flowName:sharedGlobals:)()
{
}

uint64_t StartVideoCallFlow.__ivar_destroyer()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + direct field offset for StartVideoCallFlow.flowName + 8));
}

uint64_t StartVideoCallFlow.deinit()
{
  uint64_t v0 = specialized CallingFlowAbstraction.deinit();
  OUTLINED_FUNCTION_8_38(v0, direct field offset for StartVideoCallFlow.flowName);
  return v0;
}

uint64_t StartVideoCallFlow.__deallocating_deinit()
{
  uint64_t v0 = specialized CallingFlowAbstraction.deinit();
  OUTLINED_FUNCTION_8_38(v0, direct field offset for StartVideoCallFlow.flowName);
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

unint64_t lazy protocol witness table accessor for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>;
  if (!lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CallingIntentRCHFlowStrategy<A, B>, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartVideoCallIntent, INStartVideoCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>);
  }

  return result;
}

uint64_t outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>( uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartVideoCallIntent, INStartVideoCallIntentResponse>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StartVideoCallFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartVideoCallFlow;
  if (!type metadata singleton initialization cache for StartVideoCallFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartVideoCallFlow);
  }
  return result;
}

uint64_t type metadata completion function for StartVideoCallFlow(uint64_t a1)
{
  uint64_t v2 = &unk_328E40;
  return swift_initClassMetadata2(a1, 256LL, 1LL, &v2, a1 + 344);
}

uint64_t OUTLINED_FUNCTION_2_51()
{
  return v0();
}

void StartAudioCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:biomeEventSender:)( uint64_t a1, uint64_t a2, void *a3)
{
}

void StartAudioCallRCHFlowDelegate.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

void StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t StartAudioCallRCHFlowDelegate.makeAceViewProvider()()
{
  uint64_t v1 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  outlined init with copy of SharedGlobalsProviding( v0 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v4);
  uint64_t v2 = type metadata accessor for StartAudioCallAceViewProvider(0LL);
  OUTLINED_FUNCTION_15_2(v2);
  return StartAudioCallAceViewProvider.init(templatingService:sharedGlobals:)(v1, v4);
}

uint64_t StartAudioCallRCHFlowDelegate.makeNLContextProvider()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INStartAudioCallIntent, INStartAudioCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v0);
  return specialized PhoneCallNLContextProvider.init(deviceState:assistantProperties:)(v3, &v2);
}

void StartAudioCallRCHFlowDelegate.makeDialogTemplating()()
{
  uint64_t v1 = OUTLINED_FUNCTION_42_10();
  type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  OUTLINED_FUNCTION_65();
  uint64_t v2 = OUTLINED_FUNCTION_42_10();
  type metadata accessor for PhoneCallCommonCATs(0LL);
  OUTLINED_FUNCTION_65();
  uint64_t v3 = OUTLINED_FUNCTION_42_10();
  uint64_t v4 = type metadata accessor for AppInfoBuilder();
  uint64_t v5 = swift_allocObject(v4, 16LL, 7LL);
  uint64_t v6 = type metadata accessor for StartAudioCallCatTemplatingService(0LL);
  uint64_t v7 = (void *)OUTLINED_FUNCTION_15_2(v6);
  specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( v8,  v1,  v2,  v3,  v5,  v7);
}

uint64_t StartAudioCallRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:)()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v4, v6, "#StartAudioCallRCHFlowDelegate makeIntentFromParse", v7, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  outlined init with copy of SharedGlobalsProviding( v1 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals,  (uint64_t)v16);
  uint64_t v8 = *(void *)(v1 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentFromParseFlowStrategyHelper<INStartAudioCallIntent>);
  uint64_t inited = swift_initStackObject(v9, v15);
  outlined init with take of AppSelectionSignalComponent(v16, inited + 24);
  *(void *)(inited + 16) = v8;
  swift_retain();
  specialized IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)();
  uint64_t v12 = v11;
  uint64_t v13 = swift_setDeallocating(inited);
  specialized IntentFromParseFlowStrategyHelper.__deallocating_deinit(v13);
  return v12;
}

void StartAudioCallRCHFlowDelegate.makeConfirmationStateFromParse(parse:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v61 = (uint64_t)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v65 = (uint64_t)&v57 - v4;
  __chkstk_darwin();
  id v64 = (uint64_t *)((char *)&v57 - v5);
  uint64_t v6 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v58 = v12 - v11;
  type metadata accessor for PhoneCallNLv3Intent(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for NLIntent(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  id v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v21 = type metadata accessor for Parse(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  uint64_t v66 = a1;
  v26(v25, a1, v21);
  int v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 88))(v25, v21);
  if (v27 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v27 == enum case for Parse.directInvocation(_:))
    {
      OUTLINED_FUNCTION_11_49(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
      uint64_t v32 = v62;
      uint64_t v31 = v63;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v9, v25, v63);
      uint64_t v33 = v64;
      static CommonDirectAction.from(_:)(v9, v64);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v9, v31);
      uint64_t v34 = v65;
      outlined init with take of CommonDirectAction?((uint64_t)v33, v65);
      uint64_t v35 = type metadata accessor for CommonDirectAction(0LL);
      if (__swift_getEnumTagSinglePayload(v34, 1LL, v35) != 1)
      {
        uint64_t v36 = v61;
        outlined init with copy of CommonDirectAction?(v34, v61);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v35);
        if (EnumCaseMultiPayload == 7 || EnumCaseMultiPayload == 6)
        {
          OUTLINED_FUNCTION_19_29();
          uint64_t v46 = OUTLINED_FUNCTION_14_37();
          v47(v46);
          outlined destroy of CommonDirectAction?(v34);
LABEL_24:
          OUTLINED_FUNCTION_7_5();
          return;
        }

        _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_0(v36, type metadata accessor for CommonDirectAction);
      }

      outlined destroy of CommonDirectAction?(v34);
    }

    else
    {
      OUTLINED_FUNCTION_11_49(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    }

uint64_t StartAudioCallRCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:)( int a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v14 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()();
  specialized CallingIntentRCHFlowDelegate.buildDisambiguationList(app:intent:parameterName:intentResolutionResult:templatingService:_:)( a1,  a2,  a3,  a4,  a5,  v14,  a6,  a7);
  return swift_release(v14);
}

uint64_t StartAudioCallRCHFlowDelegate.makeErrorDialogBehavior(app:intent:intentResponse:)@<X0>( uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ErrorDialogBehavior.openAppButton(_:);
  uint64_t v3 = type metadata accessor for ErrorDialogBehavior(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104LL))(a1, v2, v3);
}

void StartAudioCallRCHFlowDelegate.makeLaunchAppCommandViewBehavior(app:intent:intentResolutionResult:intentResponse:executionStep:)( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v11 = type metadata accessor for RCHExecutionStep(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))( v14 - v13,  enum case for RCHExecutionStep.handle(_:),  v11);
  LOBYTE(a4) = static RCHExecutionStep.== infix(_:_:)(a4, v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  if ((a4 & 1) != 0 && a3 && [a3 code] == (char *)&dword_0 + 2)
  {
    uint64_t v16 = *(void *)(v5 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender + 24);
    uint64_t v17 = *(void *)(v5 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender + 32);
    __swift_project_boxed_opaque_existential_1( (void *)(v5 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender),  v16);
    uint64_t v18 = *(void *)(v5 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 24);
    uint64_t v19 = *(void *)(v5 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals + 32);
    __swift_project_boxed_opaque_existential_1( (void *)(v5 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals),  v18);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 112))(v18, v19);
    BiomeEventSending.logEventForVoiceTriggerOnHeadset(currentRequest:)(v20, v16, v17);
    swift_release(v20);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    *(void *)a5 = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(a1, a2, a3);
    *(_WORD *)(a5 + 8) = 256;
    uint64_t v21 = (unsigned int *)&enum case for LaunchAppBehavior.withAutomaticPunchOut(_:);
  }

  else
  {
    uint64_t v21 = (unsigned int *)&enum case for LaunchAppBehavior.withDialogAndButton(_:);
  }

  uint64_t v22 = *v21;
  uint64_t v23 = type metadata accessor for LaunchAppBehavior(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104LL))(a5, v22, v23);
  OUTLINED_FUNCTION_7_5();
}

void StartAudioCallRCHFlowDelegate.init()(uint64_t a1, uint64_t a2)
{
}

uint64_t StartAudioCallRCHFlowDelegate.__ivar_destroyer()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender));
  return swift_release(*(void *)(v0 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved));
}

void StartAudioCallRCHFlowDelegate.deinit()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender));
  swift_release(*(void *)(v0 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved));
  OUTLINED_FUNCTION_2();
}

uint64_t StartAudioCallRCHFlowDelegate.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

void protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance StartAudioCallRCHFlowDelegate( uint64_t a1@<X8>)
{
}

uint64_t specialized StartAudioCallRCHFlowDelegate.init(sharedGlobals:appResolved:biomeEventSender:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32LL))(boxed_opaque_existential_1, a3, a5);
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a1,  a4 + direct field offset for StartAudioCallRCHFlowDelegate.sharedGlobals);
  *(void *)(a4 + direct field offset for StartAudioCallRCHFlowDelegate.appResolved) = a2;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v15,  a4 + direct field offset for StartAudioCallRCHFlowDelegate.biomeEventSender);
  uint64_t v13 = BaseRCHFlowDelegate.init()(v12);
  __swift_destroy_boxed_opaque_existential_1(v15);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

void specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v14 = v13 - v12;
  *(void *)((char *)a6 + direct field offset for StartAudioCallCatTemplatingService.catFamily) = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v17);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v15 = swift_retain();
  static CATOption.defaultMode.getter(v15);
  uint64_t v16 = CATWrapper.__allocating_init(options:globals:)(v14, 0LL);
  swift_retain();
  specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000014LL,  0x8000000000342290LL,  v17,  a3,  a4,  a5,  0LL,  0LL,  0LL,  0LL,  v16,  a6);
  swift_release(a5);
  swift_release(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_58();
}

uint64_t outlined init with take of CommonDirectAction?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of CommonDirectAction?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_0( uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  OUTLINED_FUNCTION_2();
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentResponseType : DismissSiriDeclaringIntentResponse in StartAudioCallRCHFlowDelegate()
{
  return &protocol witness table for INStartAudioCallIntentResponse;
}

_UNKNOWN **associated type witness table accessor for RCHFlowDelegate.IntentType : CallingIntent in StartAudioCallRCHFlowDelegate()
{
  return &protocol witness table for INStartAudioCallIntent;
}

void instantiation function for generic protocol witness table for StartAudioCallRCHFlowDelegate(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

{
  uint64_t v2;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartAudioCallRCHFlowDelegate and conformance BaseRCHFlowDelegate<A, B>,  type metadata accessor for StartAudioCallRCHFlowDelegate,  (uint64_t)&protocol conformance descriptor for BaseRCHFlowDelegate<A, B>);
  *(void *)(a1 + 16) = v2;
}

uint64_t type metadata accessor for StartAudioCallRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartAudioCallRCHFlowDelegate;
  if (!type metadata singleton initialization cache for StartAudioCallRCHFlowDelegate) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartAudioCallRCHFlowDelegate);
  }
  return result;
}

uint64_t type metadata completion function for StartAudioCallRCHFlowDelegate(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = "(";
  v2[2] = &unk_328EE8;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + class metadata base offset for StartAudioCallRCHFlowDelegate);
}

uint64_t ObjC metadata update function for StartAudioCallRCHFlowDelegate()
{
  return type metadata accessor for StartAudioCallRCHFlowDelegate(0LL);
}

uint64_t sub_14C7B8()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_0_62()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_11_49@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_37()
{
  return *(void *)(v0 - 136);
}

void *OUTLINED_FUNCTION_15_42()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

void OUTLINED_FUNCTION_17_41(uint64_t a1, uint64_t (*a2)(void))
{
}

uint64_t OUTLINED_FUNCTION_19_29()
{
  return type metadata accessor for SiriKitConfirmationState(0LL);
}

uint64_t CarPlayDirectInvocationFlowStrategy.toAnyIntentFlowStrategy()(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  type metadata accessor for AnyIntentCarPlayDirectActionFlowStrategy(0LL, AssociatedTypeWitness, v9, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  return AnyIntentCarPlayDirectActionFlowStrategy.__allocating_init<A>(_:)((uint64_t)v7, a1, a2);
}

uint64_t type metadata accessor for AnyIntentCarPlayDirectActionFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for AnyIntentCarPlayDirectActionFlowStrategy);
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.init(rchFlowProvider:app:input:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for OnDeviceCarPlayWithInputFlowStrategy(0LL, a4, a5, v11);
  *(void *)(a6 + *(int *)(v12 + 36)) = a2;
  uint64_t v13 = a6 + *(int *)(v12 + 40);
  uint64_t v14 = type metadata accessor for Input(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v13, a3, v14);
}

uint64_t DefaultCarPlayDirectActionFlowStrategy.init(rchFlowProvider:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32LL))(a3, a1);
}

void CarPlayDirectInvocationFlowStrategy.makeRCHFlow(app:skIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t v10 = OUTLINED_FUNCTION_2_52(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(a1, a2, AssociatedTypeWitness, v10);
  OUTLINED_FUNCTION_3_67(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  OUTLINED_FUNCTION_7_5();
}

uint64_t CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OUTLINED_FUNCTION_42_4();
  return __swift_storeEnumTagSinglePayload(a1, 1LL, 1LL, v2);
}

uint64_t CarPlayDirectInvocationFlowStrategy.makeNLContextWithNLInput(verb:appId:)( unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  int v6 = a1;
  uint64_t v7 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  uint64_t v8 = MachineUtteranceBuilder.init()();
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  if (v6 != 14)
  {
    uint64_t v9 = PhoneCallVerbSemantics.rawValue.getter(a1);
    uint64_t v10 = v11;
  }

  uint64_t v12 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x6C6143656E6F6870LL,  0xED0000627265566CLL,  v9,  v10);
  swift_release(v8);
  swift_bridgeObjectRelease();
  type metadata accessor for AppOntologyNode(0LL);
  uint64_t v13 = static AppOntologyNode.applicationIdNode.getter();
  uint64_t v14 = TerminalOntologyNode.name.getter();
  uint64_t v16 = v15;
  swift_release(v13);
  uint64_t v17 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)(v14, v16, a2, a3);
  swift_release(v12);
  uint64_t v18 = swift_bridgeObjectRelease();
  uint64_t v19 = NLContextUpdate.init()(v18);
  uint64_t v20 = dispatch thunk of MachineUtteranceBuilder.build()(v19);
  NLContextUpdate.nlInput.setter(v20, v21);
  return swift_release(v17);
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.__allocating_init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(v3, 88LL, 7LL);
  AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(a1, a2, a3);
  return v7;
}

uint64_t type metadata accessor for OnDeviceCarPlayWithInputFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for OnDeviceCarPlayWithInputFlowStrategy);
}

void AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  uint64_t v10 = OUTLINED_FUNCTION_2_52(a3);
  CarPlayRCHFlowProviding.toAnyRCHFlowProvider()(AssociatedTypeWitness, v10);
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_3_67(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  v4[2] = v12;
  v4[6] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4 + 3);
  uint64_t v14 = *(void *)(a2 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v14 + 16))(boxed_opaque_existential_1, a1, a2);
  uint64_t v15 = OUTLINED_FUNCTION_5_58();
  v4[7] = implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(v15, v16, v17, v18);
  v4[8] = v19;
  uint64_t v20 = OUTLINED_FUNCTION_5_58();
  uint64_t v24 = implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)(v20, v21, v22, v23);
  uint64_t v26 = v25;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a2);
  v4[9] = v24;
  v4[10] = v26;
  OUTLINED_FUNCTION_7_5();
}

uint64_t (*implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v10 + 40) & ~v10;
  uint64_t v12 = (char *)swift_allocObject(&unk_4029C8, v11 + v8, v10 | 7);
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v9, a3);
  return partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
}

uint64_t (*implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v10 + 40) & ~v10;
  uint64_t v12 = (char *)swift_allocObject(&unk_4029A0, v11 + v8, v10 | 7);
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v9, a3);
  return partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:);
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.makeRCHFlow(app:skIntent:)()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)()
{
  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.unbox<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v5 = swift_dynamicCast(a2, v7, (char *)&type metadata for Any + 8);
  return __swift_storeEnumTagSinglePayload(a2, v5 ^ 1u, 1LL, a1);
}

void *AnyIntentCarPlayDirectActionFlowStrategy.deinit()
{
  return v0;
}

uint64_t AnyIntentCarPlayDirectActionFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 88LL, 7LL);
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.rchFlowProvider.getter in conformance AnyIntentCarPlayDirectActionFlowStrategy<A>@<X0>( void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16LL);
  *a1 = v2;
  return swift_retain(v2);
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:) in conformance AnyIntentCarPlayDirectActionFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136LL))();
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.app.getter(uint64_t a1)
{
  return swift_retain(*(void *)(v1 + *(int *)(a1 + 36)));
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.input.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for Input(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.makeRCHFlow(app:skIntent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, void))(*(void *)(a3 + 24) + 16LL))( v3 + *(int *)(a3 + 40),  *(void *)(a3 + 16),  *(void *)(a3 + 24));
}

uint64_t OnDeviceCarPlayWithInputFlowStrategy.makeNLContextUpdate(app:)@<X0>( uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = OUTLINED_FUNCTION_42_4();
  return OUTLINED_FUNCTION_32_6(a2, 0LL, 1LL, v4);
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:) in conformance OnDeviceCarPlayWithInputFlowStrategy<A>@<X0>( uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return OnDeviceCarPlayWithInputFlowStrategy.makeNLContextUpdate(app:)(a1, a2);
}

uint64_t DefaultCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)@<X0>( uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (App.isFirstParty()())
  {
    swift_getWitnessTable(&protocol conformance descriptor for DefaultCarPlayDirectActionFlowStrategy<A>, a1);
    CarPlayDirectInvocationFlowStrategy.makeNLContextWithNLInput(verb:appId:)(0, 0LL, 0LL);
  }

  else
  {
    App.appIdentifier.getter();
    swift_getWitnessTable(&protocol conformance descriptor for DefaultCarPlayDirectActionFlowStrategy<A>, a1);
    OUTLINED_FUNCTION_4_60(0);
    swift_bridgeObjectRelease();
  }

  uint64_t v4 = OUTLINED_FUNCTION_42_4();
  return OUTLINED_FUNCTION_32_6(a2, 0LL, 1LL, v4);
}

uint64_t associated type witness table accessor for CarPlayDirectInvocationFlowStrategy.RCHFlowProviderType : CarPlayRCHFlowProviding in AnyIntentCarPlayDirectActionFlowStrategy<A>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for AnyIntentCarPlayRCHFlowProvider<A>, a1);
}

uint64_t associated type witness table accessor for CarPlayDirectInvocationFlowStrategy.RCHFlowProviderType : CarPlayRCHFlowProviding in OnDeviceCarPlayWithInputFlowStrategy<A>( uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t protocol witness for CarPlayDirectInvocationFlowStrategy.makeNLContextUpdate(app:) in conformance DefaultCarPlayDirectActionFlowStrategy<A>@<X0>( uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return DefaultCarPlayDirectActionFlowStrategy.makeNLContextUpdate(app:)(a1, a2);
}

uint64_t type metadata completion function for AnyIntentCarPlayDirectActionFlowStrategy(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = " ";
  v2[2] = (char *)&value witness table for () + 64;
  void v2[3] = (char *)&value witness table for () + 64;
  return swift_initClassMetadata2(a1, 0LL, 4LL, v2, a1 + 88);
}

uint64_t type metadata instantiation function for OnDeviceCarPlayWithInputFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32LL);
}

uint64_t type metadata completion function for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t result = type metadata accessor for Input(319LL);
    if (v4 <= 0x3F)
    {
      v5[2] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 0LL, 3LL, v5, a1 + 32);
      return 0LL;
    }
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OnDeviceCarPlayWithInputFlowStrategy( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for Input(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  unsigned int v12 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (((*(_DWORD *)(v6 + 80) | v10) & 0x100000) != 0
    || (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8LL) + v10 + 8) & ~(unint64_t)v10)
      + *(void *)(v9 + 64) <= 0x18
      ? (BOOL v13 = v12 > 7)
      : (BOOL v13 = 1),
        v13))
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + (((v12 | 7) + 16LL) & ~(unint64_t)(v12 | 7)));
    swift_retain(v21);
  }

  else
  {
    uint64_t v14 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v15 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL);
    uint64_t v16 = (uint64_t *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL);
    uint64_t v17 = *v16;
    *uint64_t v15 = *v16;
    uint64_t v18 = ((unint64_t)v15 + v11 + 8) & ~v11;
    uint64_t v19 = ((unint64_t)v16 + v11 + 8) & ~v11;
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_retain(v17);
    v20(v18, v19, v14);
  }

  return a1;
}

uint64_t destroy for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8LL);
  (*(void (**)(void))(v3 + 8))();
  unint64_t v4 = (void *)((a1 + *(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8LL);
  swift_release(*v4);
  uint64_t v5 = type metadata accessor for Input(0LL);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))( ((unint64_t)v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL),  v5);
}

uint64_t initializeWithCopy for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 16))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v9 = *v8;
  *uint64_t v7 = *v8;
  uint64_t v10 = type metadata accessor for Input(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  swift_retain(v9);
  v15(v13, v14, v10);
  return a1;
}

uint64_t assignWithCopy for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 24))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v9 = *v8;
  uint64_t v10 = *v7;
  *uint64_t v7 = *v8;
  swift_retain(v9);
  swift_release(v10);
  uint64_t v11 = type metadata accessor for Input(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 24))( ((unint64_t)v7 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80),  ((unint64_t)v8 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80),  v11);
  return a1;
}

uint64_t initializeWithTake for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 32))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v7 = *v8;
  uint64_t v9 = type metadata accessor for Input(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))( ((unint64_t)v7 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80),  ((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80),  v9);
  return a1;
}

uint64_t assignWithTake for OnDeviceCarPlayWithInputFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 40))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v9 = *v7;
  *uint64_t v7 = *v8;
  swift_release(v9);
  uint64_t v10 = type metadata accessor for Input(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 40))( ((unint64_t)v7 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80),  ((unint64_t)v8 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80),  v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeviceCarPlayWithInputFlowStrategy( uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = type metadata accessor for Input(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  else {
    unsigned int v11 = v7;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  if (!a2) {
    return 0LL;
  }
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  if (a2 <= v12) {
    goto LABEL_27;
  }
  unint64_t v15 = ((v14 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8) & ~v14) + *(void *)(v9 + 64);
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)(a1 + v15);
      if (!v17) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }

    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15)) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }

    if (v19 < 2)
    {
LABEL_27:
      if ((_DWORD)v7 == v12) {
        return __swift_getEnumTagSinglePayload(a1, v7, v5);
      }
      uint64_t v22 = (unint64_t *)((a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8LL);
      if ((v11 & 0x80000000) != 0) {
        return __swift_getEnumTagSinglePayload(((unint64_t)v22 + v14 + 8) & ~v14, v10, v8);
      }
      unint64_t v23 = *v22;
      if (v23 >= 0xFFFFFFFF) {
        LODWORD(v2__swift_destroy_boxed_opaque_existential_1(v0 + 3) = -1;
      }
      return (v23 + 1);
    }
  }

  int v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15)) {
    goto LABEL_27;
  }
LABEL_18:
  int v20 = (v17 - 1) << v16;
  if ((_DWORD)v15)
  {
    else {
      int v21 = 4;
    }
    __asm { BR              X12 }
  }

  return v12 + v20 + 1;
}

void storeEnumTagSinglePayload for OnDeviceCarPlayWithInputFlowStrategy( _BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8LL);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(type metadata accessor for Input(0LL) - 8);
  if (v8 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v10 = v8;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v10;
  }
  char v13 = 8 * v12;
  if (a3 <= v11)
  {
    unsigned int v14 = 0;
  }

  else if (v12 <= 3)
  {
    unsigned int v16 = ((a3 - v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      unsigned int v14 = &dword_4;
    }

    else if (v16 >= 0x100)
    {
      unsigned int v14 = 2;
    }

    else
    {
      unsigned int v14 = v16 > 1;
    }
  }

  else
  {
    unsigned int v14 = &dword_0 + 1;
  }

  if (v11 < a2)
  {
    int v15 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        int v17 = v15 & ~(-1 << v13);
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }

        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }

        else
        {
          *a1 = v17;
        }
      }
    }

    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v15;
    }

    __asm { BR              X10 }
  }

  __asm { BR              X15 }

uint64_t type metadata completion function for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 0LL, 1LL, &v4, a1 + 32);
    return 0LL;
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DefaultCarPlayDirectActionFlowStrategy( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(void *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }

  else
  {
    uint64_t v8 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }

  return v3;
}

uint64_t destroy for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8LL) + 8LL))();
}

uint64_t initializeWithCopy for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t assignWithCopy for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t initializeWithTake for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t assignWithTake for DefaultCarPlayDirectActionFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultCarPlayDirectActionFlowStrategy( uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!a2) {
    return 0LL;
  }
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  int v7 = a2 - v6;
  uint64_t v8 = *(void *)(v5 + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)(a1 + v8);
      if (!v10) {
        goto LABEL_18;
      }
      goto LABEL_11;
    }

    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8)) {
        goto LABEL_18;
      }
      goto LABEL_11;
    }

    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6) {
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      }
      return 0LL;
    }
  }

  int v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8)) {
    goto LABEL_18;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (!(_DWORD)v8) {
    return (v6 + v12 + 1);
  }
  return ((uint64_t (*)(void))((char *)&loc_14DD2C + 4 * byte_328F0E[(v8 - 1)]))();
}

void storeEnumTagSinglePayload for DefaultCarPlayDirectActionFlowStrategy( _WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8LL);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        unsigned int v12 = &dword_4;
      }

      else if (v14 >= 0x100)
      {
        unsigned int v12 = 2;
      }

      else
      {
        unsigned int v12 = v14 > 1;
      }
    }

    else
    {
      unsigned int v12 = &dword_0 + 1;
    }
  }

  else
  {
    unsigned int v12 = 0;
  }

  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        int v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }

        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }

        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }

    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }

    __asm { BR              X10 }
  }

  __asm { BR              X10 }

uint64_t type metadata accessor for DefaultCarPlayDirectActionFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for DefaultCarPlayDirectActionFlowStrategy);
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 48LL))();
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in AnyIntentCarPlayDirectActionFlowStrategy.init<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 40LL))();
}

uint64_t OUTLINED_FUNCTION_2_52(uint64_t a1)
{
  return swift_getAssociatedConformanceWitness(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_67@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_4_60(unsigned __int8 a1)
{
  return CarPlayDirectInvocationFlowStrategy.makeNLContextWithNLInput(verb:appId:)(a1, v1, v2);
}

void UnsupportedFaceTimeOutputProvider.labelTemplates.getter(uint64_t a1@<X8>)
{
}

void key path setter for IncomingCallFollowUpFlow.state : <A, B>IncomingCallFollowUpFlow<A, B>( unint64_t *a1, void *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = (void *)a1[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)*a2;
  swift_beginAccess(*a2 + 96LL, v9, 1LL, 0LL);
  unint64_t v6 = v5[12];
  unsigned int v7 = (void *)v5[13];
  size_t v8 = (void *)v5[14];
  v5[12] = v2;
  v5[13] = v3;
  v5[14] = v4;
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(v2, v3, v4);
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v6, v7, v8);
}

unint64_t IncomingCallFollowUpFlow.state.getter()
{
  unint64_t v1 = *(void *)(v0 + 96);
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(v1, *(void **)(v0 + 104), *(void **)(v0 + 112));
  return v1;
}

unint64_t outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>( unint64_t result, void *a2, void *a3)
{
  if (result >> 62 == 1) {
    return swift_retain(result & 0x3FFFFFFFFFFFFFFFLL);
  }
  if (!(result >> 62))
  {
    swift_retain(result);
    id v4 = a2;
    return (unint64_t)a3;
  }

  return result;
}

uint64_t IncomingCallFollowUpFlow.__allocating_init(app:intent:intentResponse:strategy:sharedGlobals:)()
{
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _BYTE *, _BYTE *))(v1 + 152))(v5, v4, v3, v10, v9);
  __swift_destroy_boxed_opaque_existential_1(v0);
  __swift_destroy_boxed_opaque_existential_1(v2);
  return v7;
}

uint64_t IncomingCallFollowUpFlow.__allocating_init(state:strategy:sharedGlobals:)()
{
  uint64_t v5 = OUTLINED_FUNCTION_31_25();
  uint64_t v8 = swift_allocObject(v5, v6, v7);
  IncomingCallFollowUpFlow.init(state:strategy:sharedGlobals:)(v4, v3, v2, v1, v0);
  return v8;
}

void IncomingCallFollowUpFlow.init(state:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5)
{
  v5[12] = a1;
  v5[13] = a2;
  v5[14] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(v5 + 2));
  outlined init with take of AppSelectionSignalComponent(a5, (uint64_t)(v5 + 7));
  OUTLINED_FUNCTION_2();
}

uint64_t IncomingCallFollowUpFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for IncomingCallFollowUpFlow( 0LL,  *(void *)(*(void *)v2 + 80LL),  *(void *)(*(void *)v2 + 88LL),  *(void *)(*(void *)v2 + 96LL));
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IncomingCallFollowUpFlow<A, B>, v5);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v5, WitnessTable);
}

uint64_t type metadata accessor for IncomingCallFollowUpFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for IncomingCallFollowUpFlow);
}

uint64_t IncomingCallFollowUpFlow.execute()(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *v1;
  return swift_task_switch(IncomingCallFollowUpFlow.execute(), 0LL, 0LL);
}

uint64_t IncomingCallFollowUpFlow.execute()()
{
  unint64_t v2 = OUTLINED_FUNCTION_13_23();
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  if (!(v2 >> 62))
  {
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v12 + 88);
    uint64_t v13 = *(void *)(v12 + 96);
    int v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
    OUTLINED_FUNCTION_95_1();
    id v43 = v5;
    id v42 = v7;
    unsigned __int8 v16 = v15(v14, v13);
    uint64_t v17 = FollowUpOfferType.rawValue.getter(v16);
    if (v17 == 0xD000000000000011LL && v18 == 0x8000000000343650LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, 0xD000000000000011LL, 0x8000000000343650LL, 0LL);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_14;
      }
    }

    OUTLINED_FUNCTION_17_25((void *)(*(void *)(v0 + 64) + 56LL));
    OUTLINED_FUNCTION_12_29();
    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 48);
    uint64_t v22 = (void *)OUTLINED_FUNCTION_37_24();
    __swift_project_boxed_opaque_existential_1(v22, v23);
    uint64_t v24 = DeviceState.isAuthenticatedForPhone.getter(v20, v21);
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
    if ((v24 & 1) == 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v37 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v37, (uint64_t)static Logger.siriPhone);
      os_log_type_t v38 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_35_3(v38))
      {
        uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v39 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v24,  (os_log_type_t)v13,  "#IncomingCallFollowUpFlow: Execute. Device is not authenticated for phone. Not offering follow callBack follow up.",  v39);
        OUTLINED_FUNCTION_0_2((uint64_t)v39);
      }

      static ExecuteResponse.complete()(v40);
      goto LABEL_24;
    }

void outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(unint64_t a1, void *a2, void *a3)
{
  if (a1 >> 62 == 1)
  {
    swift_release(a1 & 0x3FFFFFFFFFFFFFFFLL);
  }

  else if (!(a1 >> 62))
  {
    swift_release(a1);
  }

void IncomingCallFollowUpFlow.onOfferFlowComplete(app:intent:intentResponse:exitValue:)( uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  int v11 = (*(unsigned __int8 (**)(void))(*(void *)(*(void *)v5 + 96LL) + 24LL))(*(void *)(*(void *)v5 + 88LL));
  if (v11 == 1 || v11 == 3)
  {
    IncomingCallFollowUpFlow.processCallPromptResponse(app:intent:intentResponse:promptResult:)(a1, v10, (uint64_t)a3);
  }

  else if (v11 == 2)
  {
    IncomingCallFollowUpFlow.processAnswerCallPromptResponse(app:intent:intentResponse:promptResult:)(a1, a2, a3, a4);
  }

  else
  {
    OUTLINED_FUNCTION_3_3(v5 + 96, (uint64_t)v13);
    OUTLINED_FUNCTION_3_68();
  }

void IncomingCallFollowUpFlow.processCallPromptResponse(app:intent:intentResponse:promptResult:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v67 = a1;
  uint64_t v71 = *v3;
  uint64_t v72 = a3;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<IncomingCallIntentResponse, Input>);
  uint64_t v5 = *(void *)(v70 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Input?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v69 = v9 - v10;
  __chkstk_darwin();
  uint64_t v68 = (char *)&v65 - v11;
  uint64_t v12 = type metadata accessor for Parse(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  uint64_t v74 = v13;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  v75 = v14;
  uint64_t v15 = OUTLINED_FUNCTION_3_4();
  uint64_t v77 = *(void *)(v15 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin();
  uint64_t v66 = (os_log_s *)((char *)&v65 - v19);
  __chkstk_darwin();
  v76 = (os_log_s *)((char *)&v65 - v20);
  uint64_t v21 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<IncomingCallActionConfirmation>)
                  - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v24 = v22 - v23;
  __chkstk_darwin();
  uint64_t v26 = (char *)&v65 - v25;
  uint64_t v27 = *(void (**)(uint64_t))(v21 + 16);
  uint64_t v28 = OUTLINED_FUNCTION_37_24();
  uint64_t v30 = v29;
  v27(v28);
  uint64_t v78 = v21;
  uint64_t v31 = OUTLINED_FUNCTION_37_24();
  if (v32(v31) != enum case for PromptResult.answered<A>(_:)) {
    goto LABEL_4;
  }
  ((void (*)(uint64_t, char *, uint64_t))v27)(v24, v26, v30);
  (*(void (**)(uint64_t, uint64_t))(v78 + 96))(v24, v30);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (newInput: Input));
  if (__swift_getEnumTagSinglePayload(v24, 1LL, v33) == 1)
  {
    outlined destroy of MainFlow(v24, type metadata accessor for IncomingCallActionConfirmation);
LABEL_4:
    OUTLINED_FUNCTION_3_3((uint64_t)(v4 + 12), (uint64_t)&v79);
    OUTLINED_FUNCTION_3_68();
    goto LABEL_19;
  }

  uint64_t v65 = v30;
  uint64_t v34 = v76;
  id v35 = *(uint64_t (**)(os_log_s *, uint64_t, uint64_t))(v77 + 32);
  uint64_t v36 = v15;
  uint64_t v37 = v35(v76, v24, v15);
  os_log_type_t v38 = v75;
  Input.parse.getter(v37);
  uint64_t v39 = v73;
  int v40 = (*(uint64_t (**)(void *, uint64_t))(v74 + 88))(v38, v73);
  if (v40 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallIntentResponse);
    Transformer.init(transform:)(closure #1 in static Transformer<>.transformer(app:), 0LL, v41);
    uint64_t v42 = v70;
    id v43 = (void (*)(uint64_t *))Transformer.transform.getter(v70);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v42);
    uint64_t v44 = *(void *)(v71 + 96);
    uint64_t v79 = v72;
    uint64_t v80 = v44;
    uint64_t v45 = v69;
    v43(&v79);
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_34_13(v45, 0LL);
    OUTLINED_FUNCTION_32_26(v18, v45);
    uint64_t v51 = IncomingCallFollowUpFlow.getFollowUpActionWithStartCallFlow(app:input:)(v67, v18);
    OUTLINED_FUNCTION_29_24(v18);
    OUTLINED_FUNCTION_29_24((uint64_t)v76);
    OUTLINED_FUNCTION_3_3((uint64_t)(v4 + 12), (uint64_t)&v79);
    unint64_t v52 = v4[12];
    id v53 = (void *)v4[13];
    os_log_type_t v54 = (void *)v4[14];
    v4[13] = 0LL;
    v4[14] = 0LL;
    v4[12] = v51;
    outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v52, v53, v54);
    (*(void (**)(void *, uint64_t))(v74 + 8))(v75, v73);
    goto LABEL_19;
  }

  if (v40 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v46 = v75;
    (*(void (**)(void *, uint64_t))(v74 + 96))(v75, v39);
    swift_unknownObjectRelease(*v46);
LABEL_11:
    uint64_t v47 = (uint64_t)v68;
    if (one-time initialization token for transformer != -1) {
      swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
    }
    uint64_t v48 = v70;
    __swift_project_value_buffer(v70, (uint64_t)&static Transformer<>.transformer);
    uint64_t v49 = (void (*)(uint64_t *))Transformer.transform.getter(v48);
    uint64_t v50 = *(void *)(v71 + 96);
    uint64_t v79 = v72;
    uint64_t v80 = v50;
    v49(&v79);
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_34_13(v47, 0LL);
    uint64_t v55 = (uint64_t)v66;
    v35(v66, v47, v36);
    uint64_t v56 = IncomingCallFollowUpFlow.getFollowUpActionWithStartCallFlow(app:input:)(v67, v55);
    OUTLINED_FUNCTION_29_24(v55);
    OUTLINED_FUNCTION_29_24((uint64_t)v76);
    OUTLINED_FUNCTION_3_3((uint64_t)(v4 + 12), (uint64_t)&v79);
    unint64_t v57 = v4[12];
    uint64_t v58 = (void *)v4[13];
    uint64_t v59 = (void *)v4[14];
    v4[14] = 0LL;
    v4[12] = v56;
    v4[13] = 0LL;
    outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v57, v58, v59);
    goto LABEL_19;
  }

  if (v40 == enum case for Parse.uso(_:))
  {
    (*(void (**)(void *, uint64_t))(v74 + 8))(v75, v39);
    goto LABEL_11;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v60 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v60, (uint64_t)static Logger.siriPhone);
  os_log_type_t v61 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v61))
  {
    uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v62 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v34,  (os_log_type_t)v8,  "#IncomingCallFollowUpFlow: Rely on FlowPlugin to provide next RCHFlow. IncomingCallFlow is now complete.",  v62);
    OUTLINED_FUNCTION_0_2((uint64_t)v62);
  }

  OUTLINED_FUNCTION_8_48();
  OUTLINED_FUNCTION_3_3((uint64_t)(v4 + 12), (uint64_t)&v79);
  OUTLINED_FUNCTION_3_68();
  (*(void (**)(void *, uint64_t))(v74 + 8))(v75, v39);
LABEL_19:
  uint64_t v63 = OUTLINED_FUNCTION_37_24();
  v64(v63);
  OUTLINED_FUNCTION_7_5();
}

uint64_t IncomingCallFollowUpFlow.getFollowUpActionWithStartCallFlow(app:input:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OUTLINED_FUNCTION_3_4();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  outlined init with copy of SharedGlobalsProviding(v2 + 56, (uint64_t)v28);
  uint64_t v10 = swift_retain();
  default argument 2 of PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)(&v26, v10);
  uint64_t v11 = type metadata accessor for StartCallFlow(0LL);
  OUTLINED_FUNCTION_15_2(v11);
  uint64_t v12 = StartCallFlow.init(app:sharedGlobals:appFinder:)(a1, v28, &v26);
  (*(void (**)(uint64_t))(*(void *)v12 + 192LL))(a2);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v13 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v17 = static os_log_type_t.debug.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    uint64_t v25 = v6;
    uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    v28[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v5, v20);
    uint64_t v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v18 + 4);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    _os_log_impl( &dword_0,  v15,  v17,  "#IncomingCallFollowUpFlow: Initialized StartCallFlow for input %s, setting to followup action.",  v18,  0xCu);
    swift_arrayDestroy(v19, 1LL);
    OUTLINED_FUNCTION_0_2(v19);
    OUTLINED_FUNCTION_0_2((uint64_t)v18);
  }

  else
  {
    OUTLINED_FUNCTION_41_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }

  v28[0] = v12;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type StartCallFlow and conformance PhoneFlow<A, B>,  type metadata accessor for StartCallFlow);
  uint64_t v23 = Flow.eraseToAnyFlow()(v11);
  swift_release(v12);
  return v23 | 0x4000000000000000LL;
}

void IncomingCallFollowUpFlow.processAnswerCallPromptResponse(app:intent:intentResponse:promptResult:)( uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  void (*v33)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_s *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  id v67;
  uint64_t v68;
  uint64_t v69;
  os_log_s *v70;
  void *v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  void *v80;
  os_log_s *v81;
  void (**v82)(id, uint64_t, uint64_t);
  id v83;
  os_log_type_t v84;
  BOOL v85;
  uint8_t *v86;
  uint64_t v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (**v98)(id, uint64_t, uint64_t);
  id v99;
  id v100;
  uint64_t v101;
  id v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  void v106[5];
  uint64_t v107[2];
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  char v111[8];
  uint64_t v112;
  uint64_t v113;
  __int16 v114;
  void *v115;
  void *v116;
  ValueMetadata *v117;
  _UNKNOWN **v118;
  ValueMetadata *v119;
  _UNKNOWN **v120;
  uint64_t v5 = v4;
  v99 = a3;
  v100 = a2;
  v101 = a1;
  uint64_t v7 = type metadata accessor for Parse(0LL);
  v96 = *(void *)(v7 - 8);
  v97 = v7;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = OUTLINED_FUNCTION_3_4();
  v98 = *(void (***)(id, uint64_t, uint64_t))(v14 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  v102 = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<IncomingCallActionConfirmation>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v90 - v20;
  uint64_t v22 = a4;
  uint64_t v24 = v23;
  OUTLINED_FUNCTION_32_26((uint64_t)&v90 - v20, v22);
  if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v21, v16) == enum case for PromptResult.answered<A>(_:))
  {
    v94 = v21;
    OUTLINED_FUNCTION_32_26(v19, (uint64_t)v21);
    (*(void (**)(uint64_t, uint64_t))(v24 + 96))(v19, v16);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (newInput: Input));
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v19, 1LL, v25);
    v95 = v24;
    v93 = v16;
    if (EnumTagSinglePayload != 1)
    {
      v98[4](v102, v19, v14);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      v92 = v14;
      unint64_t v52 = OUTLINED_FUNCTION_15_1();
      id v53 = (os_log_s *)__swift_project_value_buffer(v52, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v53);
      os_log_type_t v54 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_5(v54))
      {
        uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v55 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v53,  (os_log_type_t)v19,  "#IncomingCallFollowUpFlow: Offer type is .answerCall and user confirmed. Transitioning to .executeFollowUpActi on with AnswerCallFlow",  v55);
        OUTLINED_FUNCTION_0_2((uint64_t)v55);
      }

      unint64_t v57 = v5[10];
      uint64_t v56 = v5[11];
      __swift_project_boxed_opaque_existential_1(v5 + 7, v57);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v56 + 8))(&v103, v57, v56);
      uint64_t v58 = v5[5];
      uint64_t v59 = v5[6];
      __swift_project_boxed_opaque_existential_1(v5 + 2, v58);
      uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v58, v59);
      LOBYTE(v59) = v61;
      uint64_t v62 = type metadata accessor for AnswerCallCATsSimple(0LL);
      static CATOption.defaultMode.getter(v62);
      uint64_t v63 = CATWrapperSimple.__allocating_init(options:globals:)(v13, 0LL);
      v117 = &type metadata for AudioSessionManager;
      v118 = &protocol witness table for AudioSessionManager;
      v119 = &type metadata for EntitlementChecker;
      v120 = &protocol witness table for EntitlementChecker;
      *((void *)&v108 + 1) = v62;
      *(void *)&v109 = &protocol witness table for AnswerCallCATsSimple;
      v107[0] = v63;
      *((void *)&v109 + 1) = v60;
      LOBYTE(v110) = v59;
      outlined init with take of AppSelectionSignalComponent(&v103, (uint64_t)v111);
      id v64 = v5[10];
      uint64_t v65 = v5[11];
      v91 = v5 + 7;
      __swift_project_boxed_opaque_existential_1(v5 + 7, v64);
      uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v65 + 72);
      v99 = v99;
      uint64_t v67 = v100;
      uint64_t v68 = v101;
      OUTLINED_FUNCTION_95_1();
      uint64_t v69 = v66(v64, v65);
      Input.parse.getter(v69);
      (*(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)v69 + 192LL))(&v103, v10);
      swift_release(v69);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v10, v97);
      if (v104)
      {
        uint64_t v70 = v53;
        outlined init with take of AppSelectionSignalComponent(&v103, (uint64_t)v106);
        uint64_t v71 = v91;
        OUTLINED_FUNCTION_17_25(v91);
        OUTLINED_FUNCTION_12_29();
        uint64_t v72 = v99;
        uint64_t v73 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( v106,  v68,  v67,  v99);
        outlined destroy of SKTransformer((uint64_t)&v103);
        if (v73)
        {
          specialized static PhoneCallFlowFactory.makeIncomingCallRCHFlow<A, B>(strategy:intent:app:sharedGlobals:)();
          outlined init with copy of SharedGlobalsProviding((uint64_t)v71, (uint64_t)&v105);
          outlined init with copy of AnswerCallOutputStrategy((uint64_t)v107, (uint64_t)&v103);
          OUTLINED_FUNCTION_95_1();
          specialized IncomingCallFlow.__allocating_init(rchFlow:app:strategy:sharedGlobals:)();
          v75 = v74;
          *(void *)&v103 = v74;
          v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
          lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance PhoneFlow<A, B>,  &demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
          uint64_t v77 = Flow.eraseToAnyFlow()(v76);

          OUTLINED_FUNCTION_76();
          __swift_destroy_boxed_opaque_existential_1(v106);
          outlined destroy of AnswerCallOutputStrategy((uint64_t)v107);
          OUTLINED_FUNCTION_20_31();
          swift_release(v75);
          uint64_t v47 = v77 | 0x4000000000000000LL;
          uint64_t v48 = (uint64_t)(v5 + 12);
          uint64_t v49 = (uint64_t *)&v103;
          goto LABEL_17;
        }

        v87 = __swift_destroy_boxed_opaque_existential_1(v106);
        id v53 = v70;
      }

      else
      {
        outlined destroy of UUID?((uint64_t)&v103, &demangling cache variable for type metadata for PhoneCallNLIntent?);
        uint64_t v72 = v99;
      }

      Logger.logObject.getter(v87);
      v88 = OUTLINED_FUNCTION_24();
      if (OUTLINED_FUNCTION_63(v88))
      {
        v89 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)v89 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v53,  (os_log_type_t)v53,  "#IncomingCallFollowUpFlow: Unable to construct PhoneCallNLIntent from follow-up SiriKitFlow.Input.",  v89);
        OUTLINED_FUNCTION_0_2((uint64_t)v89);
      }

      OUTLINED_FUNCTION_76();
      outlined destroy of AnswerCallOutputStrategy((uint64_t)v107);
      OUTLINED_FUNCTION_20_31();
      OUTLINED_FUNCTION_3_3((uint64_t)(v5 + 12), (uint64_t)&v103);
      uint64_t v78 = v5[12];
      uint64_t v79 = (void *)v5[13];
      uint64_t v80 = (void *)v5[14];
      v5[14] = 0LL;
      v5[12] = 0x8000000000000000LL;
      goto LABEL_26;
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = OUTLINED_FUNCTION_15_1();
    v97 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v28 = (os_log_s *)v97;
    Logger.logObject.getter(v97);
    os_log_type_t v29 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_63(v29))
    {
      uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v30 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v28,  (os_log_type_t)v16,  "#IncomingCallFollowUpFlow: Offer type is .answerCall and user rejected. Transitioning to .executeFollowUpAction with RCHFlow<HangUpCall>",  v30);
      OUTLINED_FUNCTION_0_2((uint64_t)v30);
    }

    uint64_t v32 = v5[10];
    uint64_t v31 = v5[11];
    __swift_project_boxed_opaque_existential_1(v5 + 7, v32);
    uint64_t v33 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v31 + 80);
    uint64_t v34 = (uint64_t)v99;
    v102 = v99;
    id v35 = (uint64_t)v100;
    v98 = (void (**)(id, uint64_t, uint64_t))v100;
    uint64_t v36 = v101;
    OUTLINED_FUNCTION_95_1();
    v33(&v103, v32, v31);
    v110 = 0LL;
    v109 = 0u;
    v108 = 0u;
    v107[0] = (uint64_t)_swiftEmptyArrayStorage;
    v107[1] = (uint64_t)_swiftEmptyArrayStorage;
    v111[0] = 2;
    v112 = 0LL;
    v113 = 0xB23030905050204LL;
    v114 = 518;
    v115 = _swiftEmptyArrayStorage;
    v116 = _swiftEmptyArrayStorage;
    uint64_t v37 = (void *)specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( v107,  v36,  v35,  v34,  (uint64_t)&v103);
    outlined destroy of SKTransformer((uint64_t)&v103);
    os_log_type_t v38 = outlined destroy of PhoneCallNLv4Intent(v107);
    if (v37)
    {
      outlined init with copy of SharedGlobalsProviding((uint64_t)(v5 + 7), (uint64_t)v107);
      uint64_t v39 = type metadata accessor for HangUpCallRCHFlowDelegate(0LL);
      int v40 = OUTLINED_FUNCTION_15_2(v39);
      outlined init with copy of SharedGlobalsProviding( (uint64_t)v107,  v40 + direct field offset for HangUpCallRCHFlowDelegate.sharedGlobals);
      uint64_t v42 = BaseRCHFlowDelegate.init()(v41);
      __swift_destroy_boxed_opaque_existential_1(v107);
      static PhoneCallFlowFactory.makeHangUpCallRCHFlow(delegate:intent:app:sharedGlobals:)();
      uint64_t v44 = v43;
      v107[0] = v43;
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>> and conformance AnyValueFlow<A>,  &demangling cache variable for type metadata for AnyValueFlow<RCHFlowResult<INHangUpCallIntent, INHangUpCallIntentResponse>>);
      uint64_t v46 = Flow.eraseToAnyFlow()(v45);
      swift_release(v44);

      OUTLINED_FUNCTION_76();
      swift_release(v42);
      uint64_t v47 = v46 | 0x4000000000000000LL;
      uint64_t v48 = (uint64_t)(v5 + 12);
      uint64_t v49 = v107;
LABEL_17:
      OUTLINED_FUNCTION_3_3(v48, (uint64_t)v49);
      uint64_t v78 = v5[12];
      uint64_t v79 = (void *)v5[13];
      uint64_t v80 = (void *)v5[14];
      v5[14] = 0LL;
      v5[12] = v47;
LABEL_26:
      v5[13] = 0LL;
      outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v78, v79, v80);
      uint64_t v50 = v94;
      uint64_t v24 = v95;
      uint64_t v51 = v93;
      goto LABEL_27;
    }

    v81 = (os_log_s *)v97;
    v82 = v98;
    v83 = v102;
    Logger.logObject.getter(v38);
    v84 = OUTLINED_FUNCTION_24();
    v85 = OUTLINED_FUNCTION_35_3(v84);
    uint64_t v51 = v93;
    if (v85)
    {
      v86 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)v86 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v81,  (os_log_type_t)v34,  "#IncomingCallFollowUpFlow: Unable to construct PhoneCallNLIntent from follow-up SiriKitFlow.Input.",  v86);
      OUTLINED_FUNCTION_0_2((uint64_t)v86);
    }

    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_3_3((uint64_t)(v5 + 12), (uint64_t)v107);
    OUTLINED_FUNCTION_14_38();
    uint64_t v50 = v94;
    uint64_t v24 = v95;
  }

  else
  {
    OUTLINED_FUNCTION_3_3((uint64_t)(v5 + 12), (uint64_t)v107);
    OUTLINED_FUNCTION_14_38();
    uint64_t v50 = v21;
    uint64_t v51 = v16;
  }

uint64_t IncomingCallFollowUpFlow.deinit()
{
  return v0;
}

uint64_t IncomingCallFollowUpFlow.__deallocating_deinit()
{
  uint64_t v0 = OUTLINED_FUNCTION_31_25();
  return swift_deallocClassInstance(v0, v1, v2);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance IncomingCallFollowUpFlow<A, B>( uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for IncomingCallFollowUpFlow(0LL, a1[10], a1[11], a1[12]);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_14FA3C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t partial apply for closure #1 in IncomingCallFollowUpFlow.execute()(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(**(void **)(v1 + 16) + 184LL))( *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  a1);
}

uint64_t sub_14FAAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_13_23();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_14FADC()
{
  return 24LL;
}

__n128 sub_14FAE8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t type metadata completion function for IncomingCallFollowUpFlow(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = "(";
  v2[2] = &unk_329178;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + 104);
}

void destroy for IncomingCallFollowUpFlow.State(uint64_t a1)
{
}

unint64_t *initializeBufferWithCopyOfBuffer for IncomingCallFollowUpFlow.State( unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a2[2];
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(*a2, v4, v5);
  *a1 = v3;
  a1[1] = (unint64_t)v4;
  a1[2] = (unint64_t)v5;
  return a1;
}

unint64_t *assignWithCopy for IncomingCallFollowUpFlow.State( unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = (void *)a2[1];
  uint64_t v5 = (void *)a2[2];
  outlined copy of IncomingCallFollowUpFlow<A, B>.State<A, B>(*a2, v4, v5);
  unint64_t v6 = *a1;
  uint64_t v7 = (void *)a1[1];
  uint64_t v8 = (void *)a1[2];
  *a1 = v3;
  a1[1] = (unint64_t)v4;
  a1[2] = (unint64_t)v5;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v6, v7, v8);
  return a1;
}

unint64_t *assignWithTake for IncomingCallFollowUpFlow.State(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  unint64_t v6 = (void *)a1[1];
  uint64_t v5 = (void *)a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for IncomingCallFollowUpFlow.State(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }

    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }

  else
  {
    unsigned int v2 = -1;
  }

  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for IncomingCallFollowUpFlow.State( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)(result + 8) = 0LL;
      *(void *)(result + 16) = 0LL;
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007LL;
    }
  }

  return result;
}

uint64_t getEnumTag for IncomingCallFollowUpFlow.State(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  else {
    return (*a1 >> 3) + 2;
  }
}

void *destructiveProjectEnumData for IncomingCallFollowUpFlow.State(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *destructiveInjectEnumTag for IncomingCallFollowUpFlow.State( unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    unint64_t v2 = *result & 0xFFFFFFFFFFFFFF8LL | (a2 << 62);
  }

  else
  {
    unint64_t v2 = (8LL * (a2 - 2)) | 0x8000000000000000LL;
    result[1] = 0LL;
    result[2] = 0LL;
  }

  *__n128 result = v2;
  return result;
}

uint64_t type metadata accessor for IncomingCallFollowUpFlow.State( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for IncomingCallFollowUpFlow.State);
}

uint64_t specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a5;
  uint64_t v40 = a4;
  uint64_t v39 = a3;
  uint64_t v38 = a2;
  uint64_t v44 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v50[3] = &type metadata for PhoneCallNLv4Intent;
  v50[4] = &protocol witness table for PhoneCallNLv4Intent;
  v50[0] = swift_allocObject(&unk_402B90, 120LL, 7LL);
  outlined init with copy of PhoneCallNLv4Intent(a1, v50[0] + 16LL);
  static Signpost.begin(_:)();
  uint64_t v8 = v7;
  unint64_t v37 = type metadata accessor for INHangUpCallIntent();
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v10 = [v9 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  static Signpost.begin(_:string1:)();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  int v46 = v17;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v36 = __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
  BOOL v22 = os_log_type_enabled(v19, v21);
  uint64_t v42 = v14;
  uint64_t v43 = v16;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc(22LL, -1LL);
    uint64_t v24 = swift_slowAlloc(64LL, -1LL);
    v47[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v35 = v8;
    uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034LL, 0x8000000000348ED0LL, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v23 + 4);
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v48 = v37;
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INHangUpCallIntent.Type);
    uint64_t v26 = String.init<A>(describing:)(&v48, v25);
    uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, v47);
    uint64_t v8 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v23 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v19, v21, "#SKTransformer %s to %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2LL);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  uint64_t v28 = (uint64_t)v45;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v50, (uint64_t)&v48);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast(v28, &v48, v29))
  {
    specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
    uint64_t v31 = v30;
    outlined destroy of MainFlow(v28, type metadata accessor for PhoneCallNLv3Intent);
  }

  else if ((swift_dynamicCast(v47, &v48, v29) & 1) != 0)
  {
    specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
    uint64_t v31 = v32;
    outlined destroy of PhoneCallNLv4Intent(v47);
  }

  else
  {
    uint64_t v31 = 0LL;
  }

  __swift_destroy_boxed_opaque_existential_1(&v48);
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release(v8);
  swift_release(v12);
  __swift_destroy_boxed_opaque_existential_1(v50);
  return v31;
}

uint64_t sub_150448()
{
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = OUTLINED_FUNCTION_31_25();
  return swift_deallocObject(v1, v2, v3);
}

void OUTLINED_FUNCTION_3_68()
{
  unint64_t v1 = v0[12];
  uint64_t v2 = (void *)v0[13];
  uint64_t v3 = (void *)v0[14];
  v0[13] = 0LL;
  v0[14] = 0LL;
  v0[12] = 0x8000000000000000LL;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_8_48()
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(v1 - 128) + 8LL))(*(void *)(v1 - 136), v0);
}

void OUTLINED_FUNCTION_14_38()
{
  unint64_t v1 = v0[12];
  uint64_t v2 = (void *)v0[13];
  uint64_t v3 = (void *)v0[14];
  v0[13] = 0LL;
  v0[14] = 0LL;
  v0[12] = 0x8000000000000000LL;
  outlined consume of IncomingCallFollowUpFlow<A, B>.State<A, B>(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_20_31()
{
  return (*(uint64_t (**)(void, void))(v0[8] + 8LL))(v0[12], v0[2]);
}

uint64_t OUTLINED_FUNCTION_29_24(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_31_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_26(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_37_24()
{
  return v0;
}

void *CallingIntentRCHFlowStrategy.__allocating_init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)( __int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = (void *)swift_allocObject(v4, 80LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(a1, (uint64_t)(v9 + 2));
  v9[7] = a2;
  v9[8] = a3;
  v9[9] = a4;
  return v9;
}

uint64_t CallingIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v3[12] = *v2;
  uint64_t v4 = type metadata accessor for PhoneError(0LL);
  v3[13] = v4;
  v3[14] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 72);
  uint64_t v7 = *(void *)(v4 + 88);
  uint64_t v6 = *(void *)(v4 + 96);
  uint64_t v8 = *(void *)(v4 + 80);
  uint64_t v9 = *(void *)(v6 + 80);
  type metadata accessor for IntentFromParseFlowStrategyHelper(0LL, v9, *(void *)(v6 + 96), a4);
  outlined init with copy of SignalProviding(v7 + 16, v4 + 16);
  uint64_t v10 = IntentFromParseFlowStrategyHelper.__allocating_init(sharedGlobals:appResolved:)( (__int128 *)(v4 + 16),  *(void *)(v7 + 56));
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 120LL);
  swift_retain();
  uint64_t v12 = v11(v5, v8);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    id v16 = v13;
    int v17 = (os_log_s *)v15;
    Logger.logObject.getter(v16);
    os_log_type_t v18 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v43 = v10;
      uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v42 = swift_slowAlloc(32LL, -1LL);
      uint64_t v44 = v42;
      *(_DWORD *)uint64_t v19 = 136315138;
      *(void *)(v4 + 56) = v16;
      id v20 = v16;
      uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v9);
      uint64_t v22 = String.init<A>(describing:)(v4 + 56, v9, WitnessTable);
      *(void *)(v4 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 + 64, v4 + 72, v19 + 4);
      swift_bridgeObjectRelease();

      _os_log_impl( &dword_0,  v17,  v18,  "#CallingIntentRCHFlowStrategy Generated a siriKitIntent from Parse: %s",  v19,  0xCu);
      swift_arrayDestroy(v42, 1LL);
      OUTLINED_FUNCTION_0_2(v42);
      OUTLINED_FUNCTION_0_2((uint64_t)v19);
      uint64_t v24 = v43;
    }

    else
    {

      uint64_t v24 = v10;
    }

    swift_release(v24);

    swift_task_dealloc(*(void *)(v4 + 112));
    return (*(uint64_t (**)(id))(v4 + 8))(v16);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v25 = OUTLINED_FUNCTION_15_1();
    uint64_t v26 = (os_log_s *)OUTLINED_FUNCTION_12_1(v25, (uint64_t)static Logger.siriPhone);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_7(v27))
    {
      uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v28 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v26,  (os_log_type_t)(v4 + 72),  "#CallingIntentRCHFlowStrategy Could not generate a skIntent from Parse.",  v28);
      OUTLINED_FUNCTION_0_2((uint64_t)v28);
    }

    uint64_t v30 = *(void *)(v4 + 104);
    uint64_t v29 = *(void *)(v4 + 112);

    swift_storeEnumTagMultiPayload(v29, v30, 13LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    swift_allocError(v30, v31, 0LL, 0LL);
    PhoneError.logged()(v32);
    outlined destroy of CommonDirectAction(v29, type metadata accessor for PhoneError);
    swift_willThrow(v33, v34, v35, v36, v37, v38, v39, v40);
    swift_release(v10);
    OUTLINED_FUNCTION_7_8();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }

void CallingIntentRCHFlowStrategy.makeParameterMetadata(intent:)()
{
}

uint64_t CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a1;
  v5[18] = a3;
  uint64_t v6 = *(void *)(type metadata accessor for ButtonConfigurationModel(0LL) - 8);
  v5[21] = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[22] = swift_task_alloc(v7);
  v5[23] = swift_task_alloc(v7);
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v5[24] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v5[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[26] = v10;
  v5[27] = OUTLINED_FUNCTION_23(v10);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void **)(v1 + 160);
  uint64_t v4 = *(void **)(v1 + 144);
  static DialogPhase.error.getter(a1);
  OutputGenerationManifest.init(dialogPhase:_:)( v2,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  uint64_t v5 = type metadata accessor for SirikitDeviceState(0LL);
  uint64_t v6 = v3 + 2;
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  OUTLINED_FUNCTION_66(v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v39, v7, v8);
  uint64_t v9 = (void *)v5;
  uint64_t v10 = SirikitDeviceState.__allocating_init(from:)(v39);
  *(void *)(v1 + 224) = v10;
  uint64_t v11 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
  uint64_t v12 = swift_dynamicCastObjCClass(v4, v11);
  if (v12)
  {
    uint64_t v4 = (void *)v12;
    uint64_t v9 = *(void **)(v1 + 152);
    uint64_t v13 = objc_opt_self(&OBJC_CLASS___INStartCallIntentResponse);
    uint64_t v14 = swift_dynamicCastObjCClass(v9, v13);
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      id v16 = *(void **)(v1 + 152);
      id v17 = *(id *)(v1 + 144);
      id v18 = v16;
      if ([v15 code] == &dword_8)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v19 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_12_1(v19, (uint64_t)static Logger.siriPhone);
        os_log_type_t v20 = OUTLINED_FUNCTION_6_0();
        if (os_log_type_enabled((os_log_t)v16, v20))
        {
          os_log_type_t v21 = (uint8_t *)OUTLINED_FUNCTION_1_0();
          *(_WORD *)os_log_type_t v21 = 0;
          OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v16,  v20,  "#CallingIntentRCHFlowStrategy airplane mode is enabled for emergency countdown request",  v21);
          OUTLINED_FUNCTION_0_2((uint64_t)v21);
        }

        unint64_t v23 = *(void **)(v1 + 152);
        uint64_t v22 = *(void *)(v1 + 160);

        uint64_t v24 = *(void **)(v22 + 72);
        id v25 = v23;
        swift_retain();
        static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v4, v15);
        char v27 = v26;

        uint64_t v28 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple
                                                         + *v24
                                                         + 288));
        *(void *)(v1 + 232) = v28;
        *uint64_t v28 = v1;
        v28[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
        return v37(v10, v27 & 1);
      }

      uint64_t v9 = *(void **)(v1 + 144);
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v30 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
  os_log_type_t v31 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v31))
  {
    uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v32 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v9,  (os_log_type_t)v4,  "#CallingIntentRCHFlowStrategy makeFailureConfirmingIntentResponse returning default dialog",  v32);
    OUTLINED_FUNCTION_0_2((uint64_t)v32);
  }

  uint64_t v33 = *(void *)(v1 + 160);

  uint64_t v34 = *(int **)(class metadata base offset for StartCallCATsSimple + **(void **)(v33 + 72) + 272);
  uint64_t v35 = v34[1];
  uint64_t v38 = (uint64_t (*)(uint64_t))((char *)v34 + *v34);
  swift_retain();
  uint64_t v36 = (void *)swift_task_alloc(v35);
  *(void *)(v1 + 296) = v36;
  *uint64_t v36 = v1;
  v36[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  return v38(v10);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 232);
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc(v4);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 256);
  *(void *)(*v2 + 264) = v1;
  swift_task_dealloc(v5);
  if (!v1) {
    *(void *)(v4 + 272) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v6, v7, v8);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 296);
  uint64_t v6 = *(void *)(*v2 + 224);
  *(void *)(*v2 + 304) = v1;
  swift_task_dealloc(v5);
  swift_release(v6);
  if (!v1) {
    *(void *)(v4 + 312) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + **(void **)(*(void *)(v0 + 160) + 64LL)
                                                  + 328));
  *(void *)(v0 + 256) = v1;
  void *v1 = v0;
  v1[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  return OUTLINED_FUNCTION_3_0(v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = (void *)(*(void *)v0 + 96LL);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 288LL));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void **)(v0 + 152);

  OUTLINED_FUNCTION_22();
  outlined destroy of CommonDirectAction(v3, type metadata accessor for ButtonConfigurationModel);
  OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  OUTLINED_FUNCTION_22_32();
  swift_task_dealloc(v0 + 56);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v17;
  uint64_t v1 = (void *)v0[39];
  uint64_t v2 = (void *)v0[20];
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 136))(v3, v4);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v8 = OUTLINED_FUNCTION_5_32(v7);
  *(_OWORD *)(v8 + 16) = xmmword_31FE60;
  *(void *)(v8 + 32) = v1;
  id v17 = v8;
  specialized Array._endMutation()(v8, v9, v10, v11);
  v0[40] = v17;
  uint64_t v12 = *(void *)(v6 + 8);
  uint64_t v13 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  uint64_t v14 = v1;
  uint64_t v15 = (void *)swift_task_alloc(v13);
  v0[41] = v15;
  *uint64_t v15 = v0;
  v15[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v0[17],  v17,  v0[27],  v5,  v12);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 328LL));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 208);

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_29_25(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_22_32();
  swift_task_dealloc(v0 + 16);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = *(void **)(v0 + 152);

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_8_49();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void **)(v0 + 152);

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_8_49();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 224));
  OUTLINED_FUNCTION_8_49();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  id v53 = (void *)v22[30];
  uint64_t v24 = v22[22];
  unint64_t v23 = (void *)v22[23];
  id v25 = (void *)v22[20];
  uint64_t v26 = v22[21];
  uint64_t v27 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v29 = v28;
  OUTLINED_FUNCTION_38_1();
  ButtonConfigurationModel.init(label:url:)(v27, v29, 0x3A7366657270LL, 0xE600000000000000LL, v23);
  outlined init with copy of ButtonConfigurationModel((uint64_t)v23, v24);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v31 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v32 = (v31 + 32) & ~v31;
  uint64_t v33 = swift_allocObject(v30, v32 + *(void *)(v26 + 72), v31 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_31D870;
  outlined init with take of ButtonConfigurationModel(v24, v33 + v32);
  _StringGuts.grow(_:)(22LL);
  swift_bridgeObjectRelease();
  OutputGenerationManifest.responseViewId.setter(0xD000000000000020LL, 0x800000000034A3B0LL);
  uint64_t v34 = v25[5];
  uint64_t v35 = v25[6];
  __swift_project_boxed_opaque_existential_1(v25 + 2, v34);
  (*(void (**)(uint64_t, uint64_t))(v35 + 136))(v34, v35);
  uint64_t v37 = v22[10];
  uint64_t v36 = v22[11];
  OUTLINED_FUNCTION_66(v22 + 7);
  uint64_t v38 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v22[15] = v38;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  v22[16] = v39;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22 + 12);
  void *boxed_opaque_existential_1 = v33;
  *((_BYTE *)boxed_opaque_existential_1 + 8) = 1;
  swift_storeEnumTagMultiPayload(boxed_opaque_existential_1, v38, 6LL);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v42 = OUTLINED_FUNCTION_5_32(v41);
  *(_OWORD *)(v42 + 16) = xmmword_31FE60;
  *(void *)(v42 + 32) = v53;
  uint64_t v54 = v42;
  specialized Array._endMutation()(v42, v43, v44, v45);
  v22[35] = v54;
  uint64_t v46 = *(void *)(v36 + 8);
  uint64_t v47 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
  id v48 = v53;
  uint64_t v49 = (void *)swift_task_alloc(v47);
  v22[36] = v49;
  *uint64_t v49 = v22;
  v49[1] = CallingIntentRCHFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v22[17],  v22 + 12,  v54,  v22[27],  v37,  v46,  v50,  v51,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

void *CallingIntentRCHFlowStrategy.deinit()
{
  return v0;
}

uint64_t CallingIntentRCHFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance CallingIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 152LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v9(a1, a2);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeErrorResponse(error:) in conformance CallingIntentRCHFlowStrategy<A1, B1>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to RCHFlowStrategyAsync.makeErrorResponse(error:)[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v12 = type metadata accessor for CallingIntentRCHFlowStrategy(0LL, a4[10], a4[11], a4[12]);
  *uint64_t v11 = v5;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v12, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v12 = type metadata accessor for CallingIntentRCHFlowStrategy(0LL, a4[10], a4[11], a4[12]);
  *uint64_t v11 = v5;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v12, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v12 = type metadata accessor for CallingIntentRCHFlowStrategy(0LL, a4[10], a4[11], a4[12]);
  *uint64_t v11 = v5;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v12, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance CallingIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)[1]);
  *(void *)(v6 + 16) = v13;
  uint64_t v14 = type metadata accessor for CallingIntentRCHFlowStrategy(0LL, a5[10], a5[11], a5[12]);
  *uint64_t v13 = v6;
  v13[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v14, a6);
}

uint64_t protocol witness for RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:) in conformance CallingIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(**(void **)v4 + 168LL);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v13(a1, a2, a3, a4);
}

uint64_t base witness table accessor for ResolveConfirmFlowStrategyAsync in CallingIntentRCHFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CallingIntentRCHFlowStrategy<A, B>, a1);
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in CallingIntentRCHFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CallingIntentRCHFlowStrategy<A, B>, a1);
}

uint64_t base witness table accessor for RouteConfirmIntentResponseFlowStrategyAsync in CallingIntentRCHFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CallingIntentRCHFlowStrategy<A, B>, a1);
}

uint64_t type metadata completion function for CallingIntentRCHFlowStrategy(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = &unk_329308;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 4LL, v2, a1 + 104);
}

uint64_t OUTLINED_FUNCTION_8_49()
{
  return (*(uint64_t (**)(void, void))(v0[26] + 8LL))(v0[27], v0[25]);
}

uint64_t OUTLINED_FUNCTION_22_32()
{
  return swift_task_dealloc(*(void *)(v0 + 216));
}

uint64_t OUTLINED_FUNCTION_28_28()
{
  return static ActionForInput.ignore()();
}

uint64_t OUTLINED_FUNCTION_29_25@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void PhoneCallFlowState.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for RCHFlowResult(0LL, *(void *)(a1 + 16), *(void *)(a1 + 24));
  __chkstk_darwin();
  type metadata accessor for Input(0LL);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v5, v2, a1);
  uint64_t v7 = (char *)sub_151AA0 + 4 * byte_329320[swift_getEnumCaseMultiPayload(v5, a1)];
  __asm { BR              X10 }

uint64_t sub_151AA0()
{
  *(void *)(v3 - 120) = 0xD000000000000012LL;
  *(void *)(v3 - 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x800000000034B530LL;
  uint64_t v4 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
  v5._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_4_61(v4);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_24();
  uint64_t v6 = *(void *)(v3 - 120);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  return v6;
}

uint64_t type metadata completion function for PhoneCallFlowState(uint64_t a1)
{
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(result - 8) + 64LL;
    swift_getTupleTypeLayout3(v5);
    v6[1] = v5;
    v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t result = type metadata accessor for RCHFlowResult(319LL, *(void *)(a1 + 16), *(void *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v6[3] = *(void *)(result - 8) + 64LL;
      void v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initEnumMetadataMultiPayload(a1, 0LL, 5LL, v6);
      return 0LL;
    }
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneCallFlowState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain();
  }

  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v8 = type metadata accessor for Input(0LL);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 0LL;
        goto LABEL_10;
      case 1u:
        uint64_t v13 = type metadata accessor for Input(0LL);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
        *(uint64_t *)((char *)a1 + *(int *)(v14 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 48));
        uint64_t v15 = *(int *)(v14 + 64);
        id v16 = (char *)a1 + v15;
        id v17 = (char *)a2 + v15;
        __int128 v18 = *(_OWORD *)(v17 + 24);
        *(_OWORD *)((char *)a1 + v15 + 24) = v18;
        uint64_t v19 = v18;
        os_log_type_t v20 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
        swift_retain();
        v20(v16, v17, v19);
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 1LL;
        goto LABEL_10;
      case 2u:
        *a1 = *a2;
        swift_retain();
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 2LL;
        goto LABEL_10;
      case 3u:
        uint64_t v21 = type metadata accessor for RCHFlowResult(0LL, *(void *)(a3 + 16), *(void *)(a3 + 24));
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16LL))(a1, a2, v21);
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 3LL;
        goto LABEL_10;
      case 4u:
        *a1 = *a2;
        swift_retain();
        uint64_t v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 4LL;
LABEL_10:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }

  return a1;
}

uint64_t destroy for PhoneCallFlowState(void *a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      uint64_t v5 = type metadata accessor for Input(0LL);
      goto LABEL_6;
    case 1:
      uint64_t v6 = type metadata accessor for Input(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      swift_release(*(void *)((char *)a1 + *(int *)(v7 + 48)));
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((void *)((char *)a1 + *(int *)(v7 + 64)));
      break;
    case 2:
    case 4:
      uint64_t result = swift_release(*a1);
      break;
    case 3:
      uint64_t v5 = type metadata accessor for RCHFlowResult(0LL, *(void *)(a2 + 16), *(void *)(a2 + 24));
LABEL_6:
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
      break;
    default:
      return result;
  }

  return result;
}

void *initializeWithCopy for PhoneCallFlowState(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Input(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 0LL;
      goto LABEL_8;
    case 1u:
      uint64_t v10 = type metadata accessor for Input(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16LL))(a1, a2, v10);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
      uint64_t v12 = *(int *)(v11 + 64);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      __int128 v15 = *(_OWORD *)(v14 + 24);
      *(_OWORD *)((char *)a1 + v12 + 24) = v15;
      uint64_t v16 = v15;
      id v17 = **(void (***)(char *, char *, uint64_t))(v15 - 8);
      swift_retain();
      v17(v13, v14, v16);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 1LL;
      goto LABEL_8;
    case 2u:
      *a1 = *a2;
      swift_retain();
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 2LL;
      goto LABEL_8;
    case 3u:
      uint64_t v18 = type metadata accessor for RCHFlowResult(0LL, *(void *)(a3 + 16), *(void *)(a3 + 24));
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(a1, a2, v18);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 3LL;
      goto LABEL_8;
    case 4u:
      *a1 = *a2;
      swift_retain();
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 4LL;
LABEL_8:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

void *assignWithCopy for PhoneCallFlowState(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v7 = type metadata accessor for Input(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 0LL;
        goto LABEL_9;
      case 1u:
        uint64_t v11 = type metadata accessor for Input(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(a1, a2, v11);
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
        *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
        uint64_t v13 = *(int *)(v12 + 64);
        uint64_t v14 = (char *)a1 + v13;
        __int128 v15 = (char *)a2 + v13;
        uint64_t v16 = *((void *)v15 + 3);
        *((void *)v14 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v16;
        *((void *)v14 + 4) = *((void *)v15 + 4);
        id v17 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
        swift_retain();
        v17(v14, v15, v16);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 1LL;
        goto LABEL_9;
      case 2u:
        *a1 = *a2;
        swift_retain();
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 2LL;
        goto LABEL_9;
      case 3u:
        uint64_t v18 = type metadata accessor for RCHFlowResult(0LL, *(void *)(a3 + 16), *(void *)(a3 + 24));
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(a1, a2, v18);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 3LL;
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        swift_retain();
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 4LL;
LABEL_9:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }

  return a1;
}

char *initializeWithTake for PhoneCallFlowState(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v11 = type metadata accessor for RCHFlowResult(0LL, *(void *)(a3 + 16), *(void *)(a3 + 24));
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(a1, a2, v11);
    uint64_t v8 = a1;
    uint64_t v9 = a3;
    uint64_t v10 = 3LL;
  }

  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = type metadata accessor for Input(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(a1, a2, v12);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
    *(void *)&a1[*(int *)(v13 + 48)] = *(void *)&a2[*(int *)(v13 + 48)];
    uint64_t v14 = *(int *)(v13 + 64);
    __int128 v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    *((void *)v15 + 4) = *((void *)v16 + 4);
    __int128 v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)__int128 v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    uint64_t v8 = a1;
    uint64_t v9 = a3;
    uint64_t v10 = 1LL;
  }

  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      return a1;
    }

    uint64_t v7 = type metadata accessor for Input(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
    uint64_t v8 = a1;
    uint64_t v9 = a3;
    uint64_t v10 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

char *assignWithTake for PhoneCallFlowState(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v12 = type metadata accessor for RCHFlowResult(0LL, *(void *)(a3 + 16), *(void *)(a3 + 24));
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(a1, a2, v12);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 3LL;
    }

    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for Input(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL))(a1, a2, v13);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Input, App, DeviceState));
      *(void *)&a1[*(int *)(v14 + 48)] = *(void *)&a2[*(int *)(v14 + 48)];
      uint64_t v15 = *(int *)(v14 + 64);
      uint64_t v16 = &a1[v15];
      __int128 v17 = &a2[v15];
      *((void *)v16 + 4) = *((void *)v17 + 4);
      __int128 v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 1LL;
    }

    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }

      uint64_t v8 = type metadata accessor for Input(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32LL))(a1, a2, v8);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }

  return a1;
}

uint64_t type metadata accessor for PhoneCallFlowState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PhoneCallFlowState);
}

uint64_t OUTLINED_FUNCTION_2_53()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_4_61(uint64_t a1)
{
  return dispatch thunk of CustomStringConvertible.description.getter(v1, a1);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional __swiftcall AddCallParticipantCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATsSimple.Properties.init(rawValue:),  v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t AddCallParticipantCATsSimple.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_15278C + 4 * byte_3293B0[a1]))( 0xD000000000000025LL,  0x8000000000343670LL);
}

void sub_15278C()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.Properties()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = AddCallParticipantCATsSimple.Properties.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:));
}

uint64_t AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_3_8();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:));
  uint64_t v8 = OUTLINED_FUNCTION_40_16(0xD000000000000025LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_3_5();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_20_32();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

void AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
}

uint64_t AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_3_8();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( v8,  v9,  v1,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds,  v10,  v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_3_5();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_20_32();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds,  &type metadata for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds,  &type metadata for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ConfirmParticipantDialogIds and conformance AddCallParticipantCATsSimple.ConfirmParticipantDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.errorAddRestricted(currentCall:unsupportedReason:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AddCallParticipantCATsSimple.errorAddRestricted(currentCall:unsupportedReason:)()
{
  uint64_t v4 = v1[2];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_8_2(v5, 128LL);
  v1[6] = v6;
  uint64_t v7 = OUTLINED_FUNCTION_1_55(v6, (__n128)xmmword_31D880);
  if (v4)
  {
    uint64_t v7 = type metadata accessor for PhoneCallRecord(v7);
  }

  else
  {
    v6[3].n128_u64[1] = 0LL;
    v6[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_33_31(v7);
  v6[5].n128_u64[1] = 0x8000000000347AD0LL;
  OUTLINED_FUNCTION_70_11(&demangling cache variable for type metadata for SpeakableString?, v8);
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_47_14(v9);
  if (v10)
  {
    OUTLINED_FUNCTION_95();
    outlined destroy of SpeakableString?(v2, &demangling cache variable for type metadata for SpeakableString?);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_75_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v11);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v12 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v1[7] = v12;
  *uint64_t v12 = v1;
  v12[1] = AddCallParticipantCATsSimple.errorAddRestricted(currentCall:unsupportedReason:);
  uint64_t v13 = OUTLINED_FUNCTION_21_19(v3 + 20);
  return OUTLINED_FUNCTION_18_39(v13, v14, (uint64_t)v6, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_10_6();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v2 + 8));
  }

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional __swiftcall AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.init(rawValue:),  v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x636972656E6547LL;
  }
  if (a1 == 1) {
    return 0x646C6F486E4FLL;
  }
  return 0x676E69676E6952LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorAddRestrictedDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantCATsSimple.errorAddRestrictedAsLabels(currentCall:unsupportedReason:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AddCallParticipantCATsSimple.errorAddRestrictedAsLabels(currentCall:unsupportedReason:)()
{
  uint64_t v3 = v1[2];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 128LL);
  v1[6] = v5;
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    v5[3].n128_u64[1] = 0LL;
    v5[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_33_31(v6);
  v5[5].n128_u64[1] = 0x8000000000347AD0LL;
  OUTLINED_FUNCTION_70_11(&demangling cache variable for type metadata for SpeakableString?, v7);
  uint64_t v8 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_47_14(v8);
  if (v9)
  {
    OUTLINED_FUNCTION_95();
    outlined destroy of SpeakableString?(v2, &demangling cache variable for type metadata for SpeakableString?);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    char v10 = OUTLINED_FUNCTION_75_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v11 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  v1[7] = v11;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds();
  *uint64_t v11 = v1;
  v11[1] = AddCallParticipantCATsSimple.errorAddRestrictedAsLabels(currentCall:unsupportedReason:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_19_30( v12,  v13,  (uint64_t)v5,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds,  v14,  v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_10_6();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v2 + 8));
  }

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds and conformance AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReached(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorMaxParticipantsReached(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReached(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(46LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

void AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReachedAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorMaxParticipantsReachedAsLabels(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorMaxParticipantsReachedAsLabels(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(46LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds and conformance AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.errorNoTargetCall()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000024LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

void AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AddCallParticipantCATsSimple.errorNoTargetCallAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds();
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000024LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds and conformance AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)( uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a2;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:)()
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 176LL);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_25_11(v6);
  OUTLINED_FUNCTION_29_26(v7, (__n128)xmmword_320080);
  if (v4)
  {
    type metadata accessor for PhonePerson(0LL);
    uint64_t v8 = v4;
  }

  else
  {
    OUTLINED_FUNCTION_32_23();
  }

  OUTLINED_FUNCTION_54_12(v8);
  OUTLINED_FUNCTION_68_13(v9, (uint64_t)"shouldIncludeHandleLabel");
  uint64_t v10 = OUTLINED_FUNCTION_21_31((uint64_t)&type metadata for Bool);
  if (v0)
  {
    uint64_t v10 = type metadata accessor for PhoneCallRecord(v10);
  }

  else
  {
    v2[19] = 0LL;
    v2[20] = 0LL;
  }

  v2[18] = v0;
  v2[21] = v10;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActive(participant:shouldIncludeHandleLabel:currentCall:);
  uint64_t v12 = OUTLINED_FUNCTION_40(v3 + 24);
  return OUTLINED_FUNCTION_18_39(v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_50_0();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

void AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:)( uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a2;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 176LL);
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_25_11(v15);
  OUTLINED_FUNCTION_29_26(v16, (__n128)xmmword_320080);
  if (v13)
  {
    type metadata accessor for PhonePerson(0LL);
    uint64_t v17 = v13;
  }

  else
  {
    OUTLINED_FUNCTION_32_23();
  }

  OUTLINED_FUNCTION_54_12(v17);
  OUTLINED_FUNCTION_68_13(v18, (uint64_t)"shouldIncludeHandleLabel");
  uint64_t v19 = OUTLINED_FUNCTION_21_31((uint64_t)&type metadata for Bool);
  if (v10)
  {
    uint64_t v19 = type metadata accessor for PhoneCallRecord(v19);
  }

  else
  {
    v12[19] = 0LL;
    v12[20] = 0LL;
  }

  v12[18] = v10;
  v12[21] = v19;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  os_log_type_t v20 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v11 + 48) = v20;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds();
  *os_log_type_t v20 = v11;
  v20[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_19_30( v21,  v22,  (uint64_t)v12,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds,  v23,  a10);
}

uint64_t AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:)()
{
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_50_0();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds and conformance AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegion(location:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorRestrictedDeviceByRegion(location:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegion(location:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x6E6F697461636F6CLL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(48LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorRestrictedDeviceByRegionDialogIds_optional __swiftcall AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x32676F6C616964LL;
  }
  else {
    return 0x31676F6C616964LL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorRestrictedDeviceByRegionDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::ErrorRestrictedDeviceByRegionDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = AnnounceGroupFaceTimeInviteCATsSimple.OfferFollowUpIntentDialogIds.rawValue.getter(v1);
  v0[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegionAsLabels(location:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorRestrictedDeviceByRegionAsLabels(location:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedDeviceByRegionAsLabels(location:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x6E6F697461636F6CLL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogLocationAddress(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(48LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipant(participant:shouldIncludeHandleLabel:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D880;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x7069636974726170LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 56);
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 88) = 0x800000000034BAC0LL;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v7;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(void *)(v1 + 80) = 0xD000000000000018LL;
  OUTLINED_FUNCTION_3_8();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v8;
  OUTLINED_FUNCTION_30(v8, (uint64_t)AddCallParticipantCATsSimple.confirmParticipant(contactToConfirm:));
  uint64_t v9 = OUTLINED_FUNCTION_40_16(0xD000000000000030LL);
  return OUTLINED_FUNCTION_12_28(v9, v10, v11, v12);
}

void AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipantAsLabels(participant:shouldIncludeHandleLabel:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorRestrictedForParticipantAsLabels(participant:shouldIncludeHandleLabel:));
}

uint64_t AddCallParticipantCATsSimple.errorRestrictedForParticipantAsLabels(participant:shouldIncludeHandleLabel:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D880;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x7069636974726170LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 56);
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 88) = 0x800000000034BAC0LL;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v7;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(void *)(v1 + 80) = 0xD000000000000018LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v8 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v8);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( v9,  v10,  v1,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds,  v11,  v13);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds and conformance AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.errorSelfAdd(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorSelfAdd(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorSelfAdd(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  char v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(31LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

void AddCallParticipantCATsSimple.ErrorSelfAddDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.ErrorSelfAddDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AddCallParticipantCATsSimple.errorSelfAddAsLabels(currentCall:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.errorSelfAddAsLabels(currentCall:));
}

uint64_t AddCallParticipantCATsSimple.errorSelfAddAsLabels(currentCall:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_1_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)AddCallParticipantCATsSimple.confirmParticipantAsLabels(contactToConfirm:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(31LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorSelfAddDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorSelfAddDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.ErrorSelfAddDialogIds,  &type metadata for AddCallParticipantCATsSimple.ErrorSelfAddDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.ErrorSelfAddDialogIds and conformance AddCallParticipantCATsSimple.ErrorSelfAddDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponse(callInvite:device:isFaceTimeFirstDevice:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 176LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_32_27(v6, (__n128)xmmword_320080);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for PhoneCallInvite(0LL);
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  char v10 = *(_BYTE *)(v1 + 64);
  *(void *)(v2 + 96) = v0;
  *(void *)(v2 + 136) = 0x800000000034BAE0LL;
  *(void *)(v2 + 168) = &type metadata for Bool;
  *(_BYTE *)(v2 + 144) = v10;
  *(void *)(v2 + 120) = v9;
  *(void *)(v2 + 128) = 0xD000000000000015LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD000000000000028LL);
  return OUTLINED_FUNCTION_18_39(v12, v13, v14, v15);
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 1735289202LL;
  }
  else {
    return 6579297LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = AddCallParticipantCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponseAsLabels(callInvite:device:isFaceTimeFirstDevice:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.intentHandledResponseAsLabels(callInvite:device:isFaceTimeFirstDevice:));
}

uint64_t AddCallParticipantCATsSimple.intentHandledResponseAsLabels(callInvite:device:isFaceTimeFirstDevice:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 176LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_32_27(v6, (__n128)xmmword_320080);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for PhoneCallInvite(0LL);
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  char v10 = *(_BYTE *)(v1 + 64);
  *(void *)(v2 + 96) = v0;
  *(void *)(v2 + 136) = 0x800000000034BAE0LL;
  *(void *)(v2 + 168) = &type metadata for Bool;
  *(_BYTE *)(v2 + 144) = v10;
  *(void *)(v2 + 120) = v9;
  *(void *)(v2 + 128) = 0xD000000000000015LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 48) = v11;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds();
  *uint64_t v11 = v1;
  v11[1] = AddCallParticipantCATsSimple.errorParticipantAlreadyActiveAsLabels(participant:shouldIncludeHandleLabel:currentCall:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_19_30( v12,  v13,  v2,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.IntentHandledResponseDialogIds,  v14,  v16);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.IntentHandledResponseDialogIds,  &type metadata for AddCallParticipantCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.IntentHandledResponseDialogIds,  &type metadata for AddCallParticipantCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.IntentHandledResponseDialogIds and conformance AddCallParticipantCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000015LL;
  *(void *)(v2 + 40) = 0x800000000034BB00LL;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_76_0( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  uint64_t v9 = v4;
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  uint64_t v6 = (void *)swift_task_alloc(v3);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *uint64_t v6 = v0;
  v6[1] = AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD000000000000027LL);
  return v9(v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_26_31();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    __int128 v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::PromptForParticipantDialogIds_optional __swiftcall AddCallParticipantCATsSimple.PromptForParticipantDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.PromptForParticipantDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)( Swift::String a1, Swift::OpaquePointer a2)
{
}

uint64_t AddCallParticipantCATsSimple.PromptForParticipantDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6F725074726F6873LL;
  }
  else {
    return 0x6D6F7250676E6F6CLL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::PromptForParticipantDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AddCallParticipantCATsSimple::PromptForParticipantDialogIds_optional *a2@<X8>)
{
  result.value = AddCallParticipantCATsSimple.PromptForParticipantDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = AddCallParticipantCATsSimple.PromptForParticipantDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:));
}

uint64_t AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000015LL;
  *(void *)(v2 + 40) = 0x800000000034BB00LL;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_76_0( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  uint64_t v11 = v4;
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  uint64_t v6 = (void *)swift_task_alloc(v3);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds();
  *uint64_t v6 = v0;
  v6[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( v7,  v8,  v2,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.PromptForParticipantDialogIds,  v9,  v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_26_31();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    __int128 v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.PromptForParticipantDialogIds,  &type metadata for AddCallParticipantCATsSimple.PromptForParticipantDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.PromptForParticipantDialogIds,  &type metadata for AddCallParticipantCATsSimple.PromptForParticipantDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.PromptForParticipantDialogIds and conformance AddCallParticipantCATsSimple.PromptForParticipantDialogIds);
  }

  return result;
}

uint64_t AddCallParticipantCATsSimple.unsupportedParticipantsMultipleContactsUnsupported()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_4_2(0xD000000000000045LL, v2, (uint64_t)_swiftEmptyArrayStorage, v4);
}

void AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)( Swift::String a1, Swift::OpaquePointer a2)
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AddCallParticipantCATsSimple.unsupportedParticipantsMultipleContactsUnsupportedAsLabels()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  lazy protocol witness table accessor for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds();
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000045LL,  v2,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)&type metadata for AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds,  v3,  v5);
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds,  &type metadata for AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds,  &type metadata for AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds and conformance AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AddCallParticipantCATsSimple.Properties,  &type metadata for AddCallParticipantCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AddCallParticipantCATsSimple.Properties and conformance AddCallParticipantCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AddCallParticipantCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AddCallParticipantCATsSimple;
  if (!type metadata singleton initialization cache for AddCallParticipantCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddCallParticipantCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for AddCallParticipantCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AddCallParticipantCATsSimple);
}

uint64_t ObjC metadata update function for AddCallParticipantCATsSimple()
{
  return type metadata accessor for AddCallParticipantCATsSimple(0LL);
}

uint64_t getEnumTagSinglePayload for AddCallParticipantCATsSimple.Properties( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for AddCallParticipantCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF5) {
    return ((uint64_t (*)(void))((char *)&loc_1549A0 + 4 * byte_3293C0[v4]))();
  }
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1549D4 + 4 * byte_3293BB[v4]))();
}

uint64_t sub_1549D4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1549DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1549E4LL);
  }
  return result;
}

uint64_t sub_1549F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1549F8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 10;
  return result;
}

uint64_t sub_1549FC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_154A04(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.Properties()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_154A78 + 4 * byte_3293CA[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_154AAC + 4 * byte_3293C5[v4]))();
}

uint64_t sub_154AAC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_154AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x154ABCLL);
  }
  return result;
}

uint64_t sub_154AC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x154AD0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_154AD4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_154ADC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorAddRestrictedDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorMaxParticipantsReachedDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorNoTargetCallDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorParticipantAlreadyActiveDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorRestrictedForParticipantDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.ErrorSelfAddDialogIds()
{
}

void type metadata accessor for AddCallParticipantCATsSimple.IntentHandledResponseDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_154B9C + 4 * byte_3293D4[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_154BD0 + 4 * byte_3293CF[v4]))();
}

uint64_t sub_154BD0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_154BD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x154BE0LL);
  }
  return result;
}

uint64_t sub_154BEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x154BF4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_154BF8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_154C00(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.PromptForParticipantDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AddCallParticipantCATsSimple.ConfirmParticipantDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_154C58 + 4 * byte_3293D9[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_154C78 + 4 * byte_3293DE[v4]))();
  }
}

_BYTE *sub_154C58(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_154C78(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_154C80(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_154C88(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_154C90(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_154C98(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void type metadata accessor for AddCallParticipantCATsSimple.UnsupportedParticipantsMultipleContactsUnsupportedDialogIds()
{
}

uint64_t OUTLINED_FUNCTION_6_55()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_7_59( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_14_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_19_30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_20_32()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 32));
}

uint64_t OUTLINED_FUNCTION_24_25@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(a1 + 40) = v2;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_26_31()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 32);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 40) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_28_29@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x656369766564LL;
  v2[11] = 0xE600000000000000LL;
  return 0LL;
}

__n128 *OUTLINED_FUNCTION_29_26(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x7069636974726170LL;
  result[2].n128_u64[1] = 0xEB00000000746E61LL;
  return result;
}

__n128 *OUTLINED_FUNCTION_32_27(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x69766E496C6C6163LL;
  result[2].n128_u64[1] = 0xEA00000000006574LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_31(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0xD000000000000011LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_47_14(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_52_13(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

void OUTLINED_FUNCTION_54_12(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
}

unint64_t OUTLINED_FUNCTION_55_11(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_68_13@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[9] = result;
  v2[10] = v3;
  v2[11] = (a2 - 32) | 0x8000000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_70_11@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  return outlined init with copy of SpeakableString?(a2, v2, a1);
}

void *OUTLINED_FUNCTION_75_10()
{
  *(void *)(v2 + 120) = v1;
  return __swift_allocate_boxed_opaque_existential_1(v0);
}

void ContactConfirmationModel.appId.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_6();
}

void ContactConfirmationModel.yesNoConfirmationModel.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_0_63();
  outlined init with copy of SearchCallHistoryBinaryButtonModel( v1 + *(int *)(v3 + 24),  a1,  (void (*)(void))type metadata accessor for YesNoConfirmationModel);
}

uint64_t type metadata accessor for ContactConfirmationModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for ContactConfirmationModel;
  if (!type metadata singleton initialization cache for ContactConfirmationModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContactConfirmationModel);
  }
  return result;
}

uint64_t ContactConfirmationModel.yesNoConfirmationModel.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_63() + 24);
  return outlined assign with take of YesNoConfirmationModel(a1, v3);
}

uint64_t outlined assign with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

Swift::Void (__swiftcall *ContactConfirmationModel.yesNoConfirmationModel.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ContactConfirmationModel.phoneContactHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_63() + 28);
  return outlined init with copy of PhoneContactHeader?(v3, a1);
}

uint64_t outlined init with copy of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t ContactConfirmationModel.phoneContactHeader.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_63() + 28);
  return outlined assign with take of PhoneContactHeader?(a1, v3);
}

uint64_t outlined assign with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

Swift::Void (__swiftcall *ContactConfirmationModel.phoneContactHeader.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void ContactConfirmationModel.title.getter()
{
}

void ContactConfirmationModel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(OUTLINED_FUNCTION_0_63() + 32));
  swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *ContactConfirmationModel.title.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ContactConfirmationModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    unint64_t v5 = 0xEE00644977656956LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6449707061LL && a2 == 0xE500000000000000LL)
  {
    unint64_t v8 = 0xE500000000000000LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6449707061LL, 0xE500000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000016LL)
  {
    unint64_t v9 = 0x800000000034BB60LL;
    if (a2 == 0x800000000034BB60LL) {
      goto LABEL_21;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x800000000034BB60LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 0xD000000000000012LL)
  {
    unint64_t v10 = 0x800000000034BB80LL;
    if (a2 == 0x800000000034BB80LL) {
      goto LABEL_26;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012LL, 0x800000000034BB80LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
LABEL_26:
    swift_bridgeObjectRelease(v10);
    return 3LL;
  }

  if (a1 == 0x656C746974LL && a2 == 0xE500000000000000LL)
  {
    swift_bridgeObjectRelease(0xE500000000000000LL);
    return 4LL;
  }

  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974LL, 0xE500000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

uint64_t ContactConfirmationModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_15536C + 4 * byte_329D60[a1]))( 0x65736E6F70736572LL,  0xEE00644977656956LL);
}

uint64_t sub_15536C()
{
  return 0x6449707061LL;
}

unint64_t sub_155380()
{
  return 0xD000000000000016LL;
}

unint64_t sub_1553A0()
{
  return 0xD000000000000012LL;
}

uint64_t sub_1553BC()
{
  return 0x656C746974LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ContactConfirmationModel.CodingKeys()
{
  return ContactConfirmationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ContactConfirmationModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = ContactConfirmationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ContactConfirmationModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ContactConfirmationModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ContactConfirmationModel.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ContactConfirmationModel.CodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_4035D8, &unk_4035D8, v10, v8, v9);
  uint64_t v11 = *v4;
  uint64_t v12 = v4[1];
  LOBYTE(v24[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v11, v12, v24, v6);
  if (!v2)
  {
    OUTLINED_FUNCTION_2_54(v4[2], v4[3], 1);
    uint64_t v13 = (int *)type metadata accessor for ContactConfirmationModel(0LL);
    uint64_t v14 = (char *)v4 + v13[6];
    LOBYTE(v24[0]) = 2;
    uint64_t v15 = type metadata accessor for YesNoConfirmationModel(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel,  type metadata accessor for YesNoConfirmationModel,  (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v14, v24, v6, v15, v16);
    uint64_t v17 = (char *)v4 + v13[7];
    char v18 = v17[64];
    __int128 v19 = *((_OWORD *)v17 + 1);
    v24[0] = *(_OWORD *)v17;
    v24[1] = v19;
    __int128 v20 = *((_OWORD *)v17 + 3);
    void v24[2] = *((_OWORD *)v17 + 2);
    v24[3] = v20;
    char v25 = v18;
    char v23 = 3;
    unint64_t v21 = lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v24, &v23, v6, &type metadata for PhoneContactHeader, v21);
    OUTLINED_FUNCTION_2_54(*(uint64_t *)((char *)v4 + v13[8]), *(uint64_t *)((char *)v4 + v13[8] + 8), 4);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

unint64_t lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ContactConfirmationModel.CodingKeys,  &unk_4035D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ContactConfirmationModel.CodingKeys,  &unk_4035D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ContactConfirmationModel.CodingKeys,  &unk_4035D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ContactConfirmationModel.CodingKeys,  &unk_4035D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneContactHeader,  &type metadata for PhoneContactHeader);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneContactHeader,  &type metadata for PhoneContactHeader);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }

  return result;
}

void ContactConfirmationModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel(0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ContactConfirmationModel.CodingKeys>);
  uint64_t v7 = *(void *)(v33 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for ContactConfirmationModel(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  void *v2 = 0xD000000000000013LL;
  v2[1] = 0x8000000000346BC0LL;
  v2[2] = 0LL;
  void v2[3] = 0LL;
  uint64_t v11 = (char *)v2 + *(int *)(v10 + 28);
  *((_OWORD *)v11 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *((_OWORD *)v11 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = 0u;
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[64] = 0;
  uint64_t v35 = v10;
  uint64_t v36 = a1;
  uint64_t v12 = (void *)((char *)v2 + *(int *)(v10 + 32));
  *uint64_t v12 = 0LL;
  v12[1] = 0LL;
  uint64_t v37 = v12;
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  unint64_t v15 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  uint64_t v34 = v9;
  uint64_t v16 = v38;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_4035D8, &unk_4035D8, v15, v14, v13);
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1(v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined consume of PhoneContactHeader?( *(void *)v11,  *((void *)v11 + 1),  *((void *)v11 + 2),  *((void *)v11 + 3),  *((void *)v11 + 4),  *((void *)v11 + 5),  *((void *)v11 + 6),  *((void *)v11 + 7));
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v17 = v7;
    LOBYTE(v39[0]) = 0;
    uint64_t v18 = v33;
    void *v2 = KeyedDecodingContainer.decode(_:forKey:)(v39, v33);
    v2[1] = v19;
    v2[2] = OUTLINED_FUNCTION_3_69(1);
    void v2[3] = v20;
    LOBYTE(v39[0]) = 2;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel,  type metadata accessor for YesNoConfirmationModel,  (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v4, v39, v18, v4, v21);
    outlined init with take of YesNoConfirmationModel((uint64_t)v6, (uint64_t)v2 + *(int *)(v35 + 24));
    char v41 = 3;
    unint64_t v22 = lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    char v23 = v34;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &type metadata for PhoneContactHeader,  &v41,  v18,  &type metadata for PhoneContactHeader,  v22);
    char v24 = v40;
    __int128 v25 = v39[1];
    *(_OWORD *)uint64_t v11 = v39[0];
    *((_OWORD *)v11 + 1) = v25;
    __int128 v26 = v39[3];
    *((_OWORD *)v11 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v39[2];
    *((_OWORD *)v11 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v26;
    v11[64] = v24;
    uint64_t v27 = OUTLINED_FUNCTION_3_69(4);
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v33);
    uint64_t v30 = v37;
    swift_bridgeObjectRelease();
    uint64_t *v30 = v27;
    v30[1] = v29;
    outlined init with copy of SearchCallHistoryBinaryButtonModel( (uint64_t)v2,  v32,  (void (*)(void))type metadata accessor for ContactConfirmationModel);
    __swift_destroy_boxed_opaque_existential_1(v36);
    _s27PhoneCallFlowDelegatePlugin18CommonDirectActionOWOhTm_0( (uint64_t)v2,  type metadata accessor for ContactConfirmationModel);
  }

uint64_t outlined consume of PhoneContactHeader?( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    return swift_bridgeObjectRelease(a8);
  }

  return result;
}

uint64_t outlined init with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t default argument 0 of ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)()
{
  return 0xD000000000000013LL;
}

uint64_t ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v14 = (int *)OUTLINED_FUNCTION_0_63();
  outlined init with take of YesNoConfirmationModel(a5, (uint64_t)a9 + v14[6]);
  uint64_t result = outlined init with take of PhoneContactHeader?(a6, (uint64_t)a9 + v14[7]);
  uint64_t v16 = (void *)((char *)a9 + v14[8]);
  *uint64_t v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t outlined init with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void instantiation function for generic protocol witness table for ContactConfirmationModel(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void base witness table accessor for Decodable in ContactConfirmationModel()
{
}

void base witness table accessor for Encodable in ContactConfirmationModel()
{
}

void protocol witness for Decodable.init(from:) in conformance ContactConfirmationModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ContactConfirmationModel(void *a1)
{
  return ContactConfirmationModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactConfirmationModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
    v36(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for YesNoConfirmationModel(0LL);
    uint64_t v14 = v13[5];
    unint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v37 = a3;
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16LL);
    v18(v15, v16, v17);
    v36(&v10[v13[6]], &v11[v13[6]], v12);
    v18(&v10[v13[7]], &v11[v13[7]], v17);
    uint64_t v19 = v13[8];
    uint64_t v20 = &v10[v19];
    uint64_t v21 = &v11[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = *(int *)(v37 + 28);
    char v24 = (uint64_t *)((char *)a1 + v23);
    __int128 v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    swift_bridgeObjectRetain();
    if (v26)
    {
      *char v24 = *v25;
      v24[1] = v26;
      uint64_t v27 = v25[3];
      void v24[2] = v25[2];
      v24[3] = v27;
      uint64_t v28 = v25[5];
      _OWORD v24[4] = v25[4];
      v24[5] = v28;
      uint64_t v29 = v25[7];
      v24[6] = v25[6];
      v24[7] = v29;
      *((_BYTE *)v24 + 64) = *((_BYTE *)v25 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }

    else
    {
      memcpy(v24, v25, 0x41uLL);
    }

    uint64_t v31 = *(int *)(v37 + 32);
    uint64_t v32 = (uint64_t *)((char *)a1 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    swift_bridgeObjectRetain();
  }

  return a1;
}

uint64_t destroy for ContactConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v6(v4, v5);
  uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel(0LL);
  uint64_t v8 = v4 + v7[5];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL);
  v10(v8, v9);
  v6(v4 + v7[6], v5);
  v10(v4 + v7[7], v9);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  v33(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL);
  v16(v13, v14, v15);
  v33(&v8[v11[6]], &v9[v11[6]], v10);
  v16(&v8[v11[7]], &v9[v11[7]], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = *(void *)((char *)a2 + v21 + 8);
  swift_bridgeObjectRetain();
  if (v24)
  {
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v23[3];
    v22[2] = v23[2];
    v22[3] = v25;
    uint64_t v26 = v23[5];
    v22[4] = v23[4];
    v22[5] = v26;
    uint64_t v27 = v23[7];
    v22[6] = v23[6];
    v22[7] = v27;
    *((_BYTE *)v22 + 64) = *((_BYTE *)v23 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  else
  {
    memcpy(v22, v23, 0x41uLL);
  }

  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL);
  v28(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for YesNoConfirmationModel(0LL);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24LL);
  v15(v12, v13, v14);
  v28(&v7[v10[6]], &v8[v10[6]], v9);
  v15(&v7[v10[7]], &v8[v10[7]], v14);
  uint64_t v16 = v10[8];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)((char *)a1 + v19 + 8);
  uint64_t v23 = *(void *)((char *)a2 + v19 + 8);
  if (!v22)
  {
    if (v23)
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = *((void *)v21 + 1);
      *((void *)v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v21 + 2);
      *((void *)v20 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = *((void *)v21 + 3);
      *((void *)v20 + 4) = *((void *)v21 + 4);
      *((void *)v20 + 5) = *((void *)v21 + 5);
      *((void *)v20 + 6) = *((void *)v21 + 6);
      *((void *)v20 + 7) = *((void *)v21 + 7);
      v20[64] = v21[64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }

void *outlined destroy of PhoneContactHeader(void *a1)
{
  return a1;
}

_OWORD *initializeWithTake for ContactConfirmationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL);
  v17(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for YesNoConfirmationModel(0LL);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32LL);
  v15(v12, v13, v14);
  v17(&v7[v10[6]], &v8[v10[6]], v9);
  v15(&v7[v10[7]], &v8[v10[7]], v14);
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  memcpy((char *)a1 + a3[7], (char *)a2 + a3[7], 0x41uLL);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40LL);
  v36(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for YesNoConfirmationModel(0LL);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40LL);
  v17(v14, v15, v16);
  v36(&v9[v12[6]], &v10[v12[6]], v11);
  v17(&v9[v12[7]], &v10[v12[7]], v16);
  uint64_t v18 = v12[8];
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  if (!v26)
  {
    outlined destroy of PhoneContactHeader(v24);
LABEL_5:
    memcpy(v24, v25, 0x41uLL);
    goto LABEL_6;
  }

  *(void *)uint64_t v24 = *v25;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = v25[3];
  *((void *)v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v25[2];
  *((void *)v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = v25[5];
  *((void *)v24 + 4) = v25[4];
  *((void *)v24 + 5) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = v25[7];
  *((void *)v24 + 6) = v25[6];
  *((void *)v24 + 7) = v29;
  swift_bridgeObjectRelease();
  v24[64] = *((_BYTE *)v25 + 64);
LABEL_6:
  uint64_t v30 = a3[8];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_156720);
}

uint64_t sub_156720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for YesNoConfirmationModel(0LL);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }

uint64_t storeEnumTagSinglePayload for ContactConfirmationModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1567A0);
}

void sub_1567A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v7 = type metadata accessor for YesNoConfirmationModel(0LL);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 24), a2, a2, v7);
  }

uint64_t type metadata completion function for ContactConfirmationModel(uint64_t a1)
{
  v4[0] = &unk_329E30;
  v4[1] = &unk_329E48;
  uint64_t result = type metadata accessor for YesNoConfirmationModel(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = &unk_329E60;
    v4[4] = &unk_329E48;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for ContactConfirmationModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_1568D8 + 4 * byte_329D6A[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_15690C + 4 * byte_329D65[v4]))();
}

uint64_t sub_15690C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_156914(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x15691CLL);
  }
  return result;
}

uint64_t sub_156928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x156930LL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_156934(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_15693C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for ContactConfirmationModel.CodingKeys()
{
  return &unk_4035D8;
}

uint64_t OUTLINED_FUNCTION_0_63()
{
  return type metadata accessor for ContactConfirmationModel(0LL);
}

uint64_t OUTLINED_FUNCTION_2_54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(_BYTE *)(v4 - 144) = a3;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)(a1, a2, v4 - 144, v3);
}

uint64_t OUTLINED_FUNCTION_3_69@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v2 - 160) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v2 - 160, v1);
}

PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional __swiftcall StartCallCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  unint64_t v2 = _findStringSwitchCaseWithCache(cases:string:cache:)( &outlined read-only object #0 of StartCallCATs.Properties.init(rawValue:),  rawValue._countAndFlagsBits,  rawValue._object,  &outlined variable #1 of StartCallCATs.Properties.init(rawValue:));
  swift_bridgeObjectRelease(object);
  if (v2 >= 0x44) {
    return (PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional)68;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional)v2;
  }
}

uint64_t StartCallCATs.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_156AD8 + 4 * word_329F90[a1]))( 0xD000000000000014LL,  0x80000000003438F0LL);
}

void sub_156AD8()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATs.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATs.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATs.Properties(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATs::Properties_optional *a2@<X8>)
{
  result.value = StartCallCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATs.Properties@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = StartCallCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void StartCallCATs.confirmApp(appName:isPhoneApp:completion:)()
{
  char v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  *(_OWORD *)(v4 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_135_1(v4);
  OUTLINED_FUNCTION_47_3();
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_35(v0, 1LL, v5);
  if (v7)
  {
    OUTLINED_FUNCTION_182_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_214_0();
    OUTLINED_FUNCTION_38_0((uint64_t)v8);
  }

  OUTLINED_FUNCTION_211();
  *(void *)(v4 + 80) = v9;
  *(void *)(v4 + 88) = v10;
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(_BYTE *)(v4 + 96) = v2 & 1;
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000014LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.confirmApp(appName:isPhoneApp:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.confirmApp(appName:isPhoneApp:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 128LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_77_1(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_45_0(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  OUTLINED_FUNCTION_59_7();
  *(void *)(v0 + 120) = &type metadata for Bool;
  *(_BYTE *)(v0 + 96) = v10;
  uint64_t v11 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v12 = (void *)OUTLINED_FUNCTION_71_5(v11);
  OUTLINED_FUNCTION_45_8(v12);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v13, v14, v15, v16, v17);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_65_4();
    OUTLINED_FUNCTION_23_3();
    uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_23_3();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_174_2();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_25_11(v3);
  uint64_t v5 = OUTLINED_FUNCTION_7_9(v4, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  char v8 = OUTLINED_FUNCTION_3_22(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v10 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  OUTLINED_FUNCTION_59_7();
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v11;
  uint64_t v12 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v12;
  OUTLINED_FUNCTION_30(v12, (uint64_t)StartCallCATs.confirmApp(appName:isPhoneApp:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v13 = OUTLINED_FUNCTION_46_8(20LL);
  return OUTLINED_FUNCTION_12_28(v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t (*v0)(void);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_175_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

uint64_t StartCallCATs.confirmApp(appName:isPhoneApp:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.confirmApp(appName:isPhoneApp:)()
{
  char v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  *(_OWORD *)(v4 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_135_1(v4);
  OUTLINED_FUNCTION_240();
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_35(v0, 1LL, v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_269_0();
    OUTLINED_FUNCTION_219_0((uint64_t)v8);
  }

  OUTLINED_FUNCTION_211();
  *(void *)(v4 + 80) = v9;
  *(void *)(v4 + 88) = v10;
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(_BYTE *)(v4 + 96) = v2 & 1;
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(20LL, v11);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_58();
}

void StartCallCATs.confirmCallCapability(callCapability:completion:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  OUTLINED_FUNCTION_29_2();
  char v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = OUTLINED_FUNCTION_8_2(v9, 80LL);
  *(_OWORD *)(v10 + 16) = xmmword_31D870;
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(void *)(v10 + 40) = v4;
  outlined init with copy of SpeakableString?(v8, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  uint64_t v12 = OUTLINED_FUNCTION_35(v0, 1LL, v11);
  if (v13)
  {
    OUTLINED_FUNCTION_241(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    *(void *)(v10 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
    uint64_t v14 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_265( (uint64_t)v14,  v0,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL));
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v2);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.confirmCallCapability(callCapability:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.confirmCallCapability(callCapability:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_141(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_65_4();
    OUTLINED_FUNCTION_23_3();
    uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_141(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(31LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

uint64_t StartCallCATs.confirmCallCapability(callCapability:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.confirmCallCapability(callCapability:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  OUTLINED_FUNCTION_29_2();
  uint64_t v16 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_8_2(v10, 80LL);
  *(_OWORD *)(v11 + 16) = xmmword_31D870;
  *(void *)(v11 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v11 + 40) = v5;
  outlined init with copy of SpeakableString?(v9, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  uint64_t v13 = OUTLINED_FUNCTION_35(v0, 1LL, v12);
  if (v14)
  {
    OUTLINED_FUNCTION_182_1(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_214_0();
    OUTLINED_FUNCTION_38_0((uint64_t)v15);
  }

  OUTLINED_FUNCTION_260(v3, v16);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

void StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:completion:)()
{
  char v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unsigned __int8 v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_8_2(v11, 320LL);
  uint64_t v13 = OUTLINED_FUNCTION_92_8((__n128 *)v12, (__n128)xmmword_328A80);
  v13[3].n128_u8[0] = v10;
  v13[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v13[5].n128_u64[0] = 0xD000000000000010LL;
  v13[5].n128_u64[1] = 0x80000000003490A0LL;
  if (v8)
  {
    uint64_t v14 = OUTLINED_FUNCTION_140_0();
    uint64_t v15 = v8;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_94_7();
  }

  *(void *)(v12 + 96) = v15;
  *(void *)(v12 + 120) = v14;
  *(void *)(v12 + 128) = 0xD000000000000018LL;
  OUTLINED_FUNCTION_171_2((uint64_t)"redactedContactToConfirm");
  if (v6)
  {
    uint64_t v16 = OUTLINED_FUNCTION_140_0();
    uint64_t v17 = v6;
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_139_3();
  }

  *(void *)(v12 + 144) = v17;
  *(void *)(v12 + 168) = v16;
  *(void *)(v12 + 176) = 0xD000000000000016LL;
  OUTLINED_FUNCTION_201_1((uint64_t)"isTopMatchConfirmation");
  *(_BYTE *)(v12 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4 & 1;
  *(void *)(v12 + 216) = &type metadata for Bool;
  *(void *)(v12 + 224) = 0xD000000000000018LL;
  *(void *)(v12 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x80000000003490C0LL;
  *(_BYTE *)(v12 + 240) = v2 & 1;
  OUTLINED_FUNCTION_259_0();
  *(void *)(v12 + 264) = &type metadata for Bool;
  *(void *)(v12 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v18;
  OUTLINED_FUNCTION_238_0();
  OUTLINED_FUNCTION_215_0(v19, v20, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v21 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v21);
  if (v22)
  {
    OUTLINED_FUNCTION_95();
    uint64_t v23 = OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_241(v23, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v12 + 288) = 0u;
    *(_OWORD *)(v12 + 304) = 0u;
  }

  else
  {
    *(void *)(v12 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v21;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v12 + 288));
    OUTLINED_FUNCTION_212_0((uint64_t)boxed_opaque_existential_1);
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_29_3();
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000019LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = v7;
  *(_BYTE *)(v8 + 90) = a6;
  *(_BYTE *)(v8 + 89) = a5;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(_BYTE *)(v8 + 88) = a2;
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v8 + 56) = OUTLINED_FUNCTION_12_0(v9);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  unint64_t v2 = *(void *)(v0 + 24);
  unsigned __int8 v3 = *(_BYTE *)(v0 + 88);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 320LL);
  *(void *)(v0 + 64) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_92_8(v5, (__n128)xmmword_328A80);
  v6[3].n128_u8[0] = v3;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[5].n128_u64[0] = 0xD000000000000010LL;
  uint64_t v7 = OUTLINED_FUNCTION_275_0((uint64_t)v6, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v7 = type metadata accessor for DialogPerson(v7);
  }

  else
  {
    v5[6].n128_u64[1] = 0LL;
    v5[7].n128_u64[0] = 0LL;
  }

  unint64_t v8 = *(void *)(v0 + 32);
  v5[6].n128_u64[0] = v2;
  v5[7].n128_u64[1] = v7;
  v5[8].n128_u64[0] = 0xD000000000000018LL;
  uint64_t v9 = OUTLINED_FUNCTION_274((uint64_t)"redactedContactToConfirm");
  if (v8)
  {
    uint64_t v9 = type metadata accessor for DialogPerson(v9);
  }

  else
  {
    v5[9].n128_u64[1] = 0LL;
    v5[10].n128_u64[0] = 0LL;
  }

  v5[9].n128_u64[0] = v8;
  v5[10].n128_u64[1] = v9;
  v5[11].n128_u64[0] = 0xD000000000000016LL;
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_116_6();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  int v12 = OUTLINED_FUNCTION_117_5(v11);
  uint64_t v13 = *(void *)(v0 + 56);
  if (v12 == 1)
  {
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
    outlined destroy of SpeakableString?(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v5[19].n128_u64[1] = v1;
    uint64_t v14 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v14);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  uint64_t v15 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  *uint64_t v15 = v0;
  v15[1] = StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_192_1(v16, v17, v18, (uint64_t)v5, v20);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 80) = v1;
  swift_task_dealloc(v3);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v5);
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  __n128 *v5;
  __n128 *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v19)(void);
  unint64_t v2 = *(void *)(v0 + 16);
  unsigned __int8 v3 = *(_BYTE *)(v0 + 80);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 320LL);
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = OUTLINED_FUNCTION_92_8(v5, (__n128)xmmword_328A80);
  v6[3].n128_u8[0] = v3;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[5].n128_u64[0] = 0xD000000000000010LL;
  uint64_t v7 = OUTLINED_FUNCTION_275_0((uint64_t)v6, (uint64_t)"contactToConfirm");
  if (v2)
  {
    uint64_t v7 = type metadata accessor for DialogPerson(v7);
  }

  else
  {
    v5[6].n128_u64[1] = 0LL;
    v5[7].n128_u64[0] = 0LL;
  }

  unint64_t v8 = *(void *)(v0 + 24);
  v5[6].n128_u64[0] = v2;
  v5[7].n128_u64[1] = v7;
  v5[8].n128_u64[0] = 0xD000000000000018LL;
  uint64_t v9 = OUTLINED_FUNCTION_274((uint64_t)"redactedContactToConfirm");
  if (v8)
  {
    uint64_t v9 = type metadata accessor for DialogPerson(v9);
  }

  else
  {
    v5[9].n128_u64[1] = 0LL;
    v5[10].n128_u64[0] = 0LL;
  }

  v5[9].n128_u64[0] = v8;
  v5[10].n128_u64[1] = v9;
  v5[11].n128_u64[0] = 0xD000000000000016LL;
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_116_6();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  int v12 = OUTLINED_FUNCTION_117_5(v11);
  uint64_t v13 = *(void *)(v0 + 48);
  if (v12 == 1)
  {
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
    outlined destroy of SpeakableString?(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v5[19].n128_u64[1] = v1;
    uint64_t v14 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v14);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  uint64_t v15 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 64) = v15;
  *uint64_t v15 = v0;
  v15[1] = StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  uint64_t v16 = OUTLINED_FUNCTION_21_19(0xD000000000000019LL);
  return OUTLINED_FUNCTION_191_0(v16, v17, (uint64_t)v5, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(void);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v4, v5, v6);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    unint64_t v8 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v8, v9);
  }

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_249_0();
  OUTLINED_FUNCTION_23_3();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

uint64_t StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)( char a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  *(void *)(v7 + 40) = v6;
  *(_BYTE *)(v7 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(_BYTE *)(v7 + 81) = a4;
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  *(_BYTE *)(v7 + 80) = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v7 + 48) = OUTLINED_FUNCTION_12_0(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  char v2 = v1;
  char v4 = v3;
  unint64_t v6 = v5;
  unint64_t v8 = v7;
  unsigned __int8 v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  int v12 = (__n128 *)OUTLINED_FUNCTION_8_2(v11, 320LL);
  uint64_t v13 = OUTLINED_FUNCTION_92_8(v12, (__n128)xmmword_328A80);
  v13[3].n128_u8[0] = v10;
  v13[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v13[5].n128_u64[0] = 0xD000000000000010LL;
  v13[5].n128_u64[1] = 0x80000000003490A0LL;
  if (v8)
  {
    uint64_t v14 = OUTLINED_FUNCTION_140_0();
    unint64_t v15 = v8;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_94_7();
  }

  v12[6].n128_u64[0] = v15;
  v12[7].n128_u64[1] = v14;
  v12[8].n128_u64[0] = 0xD000000000000018LL;
  OUTLINED_FUNCTION_171_2((uint64_t)"redactedContactToConfirm");
  if (v6)
  {
    uint64_t v16 = OUTLINED_FUNCTION_140_0();
    unint64_t v17 = v6;
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_139_3();
  }

  v12[9].n128_u64[0] = v17;
  v12[10].n128_u64[1] = v16;
  v12[11].n128_u64[0] = 0xD000000000000016LL;
  OUTLINED_FUNCTION_201_1((uint64_t)"isTopMatchConfirmation");
  v12[12].n128_u8[0] = v4 & 1;
  v12[13].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v12[14].n128_u64[0] = 0xD000000000000018LL;
  v12[14].n128_u64[1] = 0x80000000003490C0LL;
  v12[15].n128_u8[0] = v2 & 1;
  OUTLINED_FUNCTION_259_0();
  v12[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v12[17].n128_u64[0] = v18;
  OUTLINED_FUNCTION_238_0();
  OUTLINED_FUNCTION_213_0(v19, v20, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v21 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v21);
  if (v22)
  {
    OUTLINED_FUNCTION_29_3();
    uint64_t v23 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_182_1(v23, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    v12[19].n128_u64[1] = v21;
    uint64_t v24 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_155_2((uint64_t)v24);
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_260(0xD000000000000019LL, 0x80000000003422F0LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

void StartCallCATs.confirmDestinationType(destinationType:completion:)()
{
}

uint64_t StartCallCATs.confirmDestinationType(destinationType:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.confirmDestinationType(destinationType:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  char v3 = OUTLINED_FUNCTION_142_4(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    unint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unsigned __int8 v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  char v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_142_4(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unsigned __int8 v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(32LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

uint64_t StartCallCATs.confirmDestinationType(destinationType:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.confirmDestinationType(destinationType:)()
{
}

void StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:completion:)()
{
}

uint64_t StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_24_6(v2, (__n128)xmmword_31D870);
  uint64_t v4 = OUTLINED_FUNCTION_32_3((uint64_t)v3, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_45_0(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_45_8(v11);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_24_6(v3, (__n128)xmmword_31D870);
  uint64_t v5 = OUTLINED_FUNCTION_32_3((uint64_t)v4, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_27_6(v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  char v8 = OUTLINED_FUNCTION_3_22(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  uint64_t v11 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD000000000000026LL);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

uint64_t StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.confirmPreferredCallProvider(preferredCallProvider:)()
{
}

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:completion:)(char a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 80LL);
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  uint64_t v4 = OUTLINED_FUNCTION_14_17(v3, 0xD000000000000016LL);
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v4 + 48) = a1;
  OUTLINED_FUNCTION_52_3(v5 + 4);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:));
}

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v2 + 40) = 0x8000000000344AB0LL;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_239_0( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(_OWORD *)(v2 + 16) = v4;
  uint64_t v5 = (void *)swift_task_alloc(v3);
  *(void *)(v0 + 40) = v5;
  *uint64_t v5 = v0;
  v5[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  OUTLINED_FUNCTION_252_0();
  return OUTLINED_FUNCTION_6_15(v6, v7, v8, v9, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v0 + 48) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v2 + 8));
  }

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_209();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v2 + 40) = 0x8000000000344AB0LL;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_239_0( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = v4;
  uint64_t v5 = (void *)swift_task_alloc(v3);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *uint64_t v5 = v0;
  v5[1] = StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:);
  uint64_t v6 = OUTLINED_FUNCTION_225(0xD00000000000001ALL);
  return OUTLINED_FUNCTION_60_7(v6, v7, v8, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(void);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v1 + 40) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v4, v5, v6);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v8, v9);
  }

uint64_t StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateApps(isOnlyPhoneAndFaceTime:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 80LL);
  *(_OWORD *)(v3 + 16) = xmmword_31D870;
  __int128 v4 = OUTLINED_FUNCTION_14_17(v3, 0xD000000000000016LL);
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v4 + 48) = a1;
  OUTLINED_FUNCTION_55(v5 + 4, 0x8000000000343990LL);
  return OUTLINED_FUNCTION_41_20(v3);
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:completion:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_8_2(v0, 80LL);
  OUTLINED_FUNCTION_101_5(v1, (__n128)xmmword_31D870);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_236_0(v2);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000023LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v1);
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(void *)(v0 + 40) = v2;
  OUTLINED_FUNCTION_101_5(v2, (__n128)xmmword_31D870);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_255_0(v3);
  OUTLINED_FUNCTION_19_0();
  uint64_t v4 = OUTLINED_FUNCTION_46();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_113_5(v4);
  OUTLINED_FUNCTION_45_8(v5);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_6_15(v6, 0xD000000000000023LL, v7, (uint64_t)v2, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_18_3();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_112_4();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_178_0();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_175_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v7)(void);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  OUTLINED_FUNCTION_101_5(v2, (__n128)xmmword_31D870);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_255_0(v3);
  OUTLINED_FUNCTION_19_0();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v4;
  OUTLINED_FUNCTION_30(v4, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_60_7(0xD000000000000023LL, v5, (uint64_t)v2, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_3_5();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_20_32();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = (__n128 *)OUTLINED_FUNCTION_8_2(v0, 80LL);
  OUTLINED_FUNCTION_101_5(v1, (__n128)xmmword_31D870);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_223(v2);
  OUTLINED_FUNCTION_66_11(35LL, 0x80000000003439B0LL);
  return OUTLINED_FUNCTION_41_20((uint64_t)v1);
}

uint64_t StartCallCATs.disambiguateAppsVoiceMode(appNames:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
}

uint64_t StartCallCATs.disambiguateCallCapability(completion:)()
{
  return OUTLINED_FUNCTION_13(36LL);
}

uint64_t StartCallCATs.disambiguateCallCapability()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  __n128 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(36LL, 0x80000000003439E0LL, (uint64_t)_swiftEmptyArrayStorage);
}

void StartCallCATs.disambiguateContacts(requestedRelationship:completion:)()
{
}

uint64_t StartCallCATs.disambiguateContacts(requestedRelationship:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.disambiguateContacts(requestedRelationship:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_24_6(v2, (__n128)xmmword_31D870);
  uint64_t v4 = OUTLINED_FUNCTION_32_3((uint64_t)v3, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_45_0(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_45_8(v11);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v12, v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_24_6(v3, (__n128)xmmword_31D870);
  uint64_t v5 = OUTLINED_FUNCTION_32_3((uint64_t)v4, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_27_6(v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  char v8 = OUTLINED_FUNCTION_3_22(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  uint64_t v11 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD00000000000001ELL);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

uint64_t StartCallCATs.disambiguateContacts(requestedRelationship:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.disambiguateContacts(requestedRelationship:)()
{
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:completion:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 128LL);
  OUTLINED_FUNCTION_42_1(v4, (__n128)xmmword_31D880);
  if (v1) {
    OUTLINED_FUNCTION_50_6();
  }
  else {
    OUTLINED_FUNCTION_52_1();
  }
  OUTLINED_FUNCTION_231_0();
  v4[3].n128_u64[0] = v5;
  v4[4].n128_u64[1] = v6;
  v4[5].n128_u64[0] = v2;
  v4[5].n128_u64[1] = 0x800000000034BBA0LL;
  if (v0)
  {
    uint64_t v7 = OUTLINED_FUNCTION_140_0();
    unint64_t v8 = v0;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_94_7();
  }

  v4[6].n128_u64[0] = v8;
  v4[7].n128_u64[1] = v7;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(v2 + 22);
  return OUTLINED_FUNCTION_51_12((uint64_t)v4);
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)()
{
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  unint64_t v6 = (__n128 *)OUTLINED_FUNCTION_77_1(v5);
  OUTLINED_FUNCTION_42_1(v6, (__n128)xmmword_31D880);
  if (v3) {
    OUTLINED_FUNCTION_50_6();
  }
  else {
    OUTLINED_FUNCTION_32_23();
  }
  OUTLINED_FUNCTION_231_0();
  uint64_t v7 = *(void *)(v0 + 32);
  v1[6] = v8;
  v1[9] = v9;
  v1[10] = v2;
  uint64_t v10 = OUTLINED_FUNCTION_129_5(0x800000000034BBA0LL);
  if (v7)
  {
    uint64_t v10 = type metadata accessor for DialogPerson(v10);
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v10);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = OUTLINED_FUNCTION_65_10();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_71_5(v11);
  OUTLINED_FUNCTION_254_0(v12);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v13, v14, v15, v16, v17);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_179_1();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v3 = v0[2];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  unint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_42_1(v6, (__n128)xmmword_31D880);
  if (v3) {
    OUTLINED_FUNCTION_50_6();
  }
  else {
    OUTLINED_FUNCTION_32_23();
  }
  OUTLINED_FUNCTION_231_0();
  uint64_t v7 = v0[3];
  v1[6] = v8;
  v1[9] = v9;
  v1[10] = v2;
  uint64_t v10 = OUTLINED_FUNCTION_129_5(0x800000000034BBA0LL);
  if (v7)
  {
    uint64_t v10 = type metadata accessor for DialogPerson(v10);
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v10);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v11;
  *uint64_t v11 = v0;
  v11[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  uint64_t v12 = OUTLINED_FUNCTION_40(v2 + 22);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_50_0();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  OUTLINED_FUNCTION_145_4();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_42_1(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_50_6();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_55_12();
  }

  v3[3].n128_u64[0] = v5;
  v3[4].n128_u64[1] = v4;
  v3[5].n128_u64[0] = 0xD000000000000018LL;
  v3[5].n128_u64[1] = 0x800000000034BBA0LL;
  if (v0)
  {
    unint64_t v6 = OUTLINED_FUNCTION_140_0();
    uint64_t v7 = v0;
  }

  else
  {
    unint64_t v6 = OUTLINED_FUNCTION_123_3();
  }

  v3[6].n128_u64[0] = v7;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_55(0xD00000000000002ELL, 0x8000000000343A30LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:completion:)()
{
  uint64_t v1 = v0;
  unsigned __int8 v3 = v2;
  unsigned __int8 v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 176LL);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_14_17(v7, 0xD000000000000012LL);
  v8[3].n128_u8[0] = v5;
  v8[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[5].n128_u64[0] = 0xD000000000000021LL;
  uint64_t v10 = OUTLINED_FUNCTION_267_0(v8, v9);
  v10[6].n128_u8[0] = v3;
  v10[7].n128_u64[1] = v11;
  v10[8].n128_u64[0] = 0xD000000000000010LL;
  v10[8].n128_u64[1] = 0x8000000000349270LL;
  if (v1)
  {
    uint64_t v12 = OUTLINED_FUNCTION_140_0();
    uint64_t v13 = v1;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_139_3();
  }

  *(void *)(v7 + 144) = v13;
  *(void *)(v7 + 168) = v12;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000025LL);
  return OUTLINED_FUNCTION_51_12(v7);
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)( uint64_t a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_BYTE *)(v5 + 65) = a3;
  *(_BYTE *)(v5 + 64) = a2;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  unsigned __int8 v3 = *(_BYTE *)(v0 + 64);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 176LL);
  uint64_t v6 = OUTLINED_FUNCTION_125(v5);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_14_17(v6, 0xD000000000000012LL);
  v7[3].n128_u8[0] = v3;
  v7[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[5].n128_u64[0] = 0xD000000000000021LL;
  __n128 v9 = OUTLINED_FUNCTION_217(v7, (unint64_t)&type metadata for Bool, v8);
  uint64_t v10 = OUTLINED_FUNCTION_272_0((uint64_t)v9, (uint64_t)"requestedContact");
  if (v2)
  {
    uint64_t v10 = type metadata accessor for DialogPerson(v10);
  }

  else
  {
    v1[19] = 0LL;
    v1[20] = 0LL;
  }

  v1[18] = v2;
  v1[21] = v10;
  OUTLINED_FUNCTION_35_23();
  uint64_t v11 = OUTLINED_FUNCTION_46();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_113_5(v11);
  OUTLINED_FUNCTION_45_8(v12);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v13, v14, v15, v16, v17);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  __n128 v8;
  __n128 *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = *(void *)(v0 + 16);
  unsigned __int8 v3 = *(_BYTE *)(v0 + 56);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 176LL);
  uint64_t v6 = OUTLINED_FUNCTION_27(v5);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_14_17(v6, 0xD000000000000012LL);
  v7[3].n128_u8[0] = v3;
  v7[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[5].n128_u64[0] = 0xD000000000000021LL;
  __n128 v9 = OUTLINED_FUNCTION_217(v7, (unint64_t)&type metadata for Bool, v8);
  uint64_t v10 = OUTLINED_FUNCTION_272_0((uint64_t)v9, (uint64_t)"requestedContact");
  if (v2)
  {
    uint64_t v10 = type metadata accessor for DialogPerson(v10);
  }

  else
  {
    v1[19] = 0LL;
    v1[20] = 0LL;
  }

  v1[18] = v2;
  v1[21] = v10;
  OUTLINED_FUNCTION_35_23();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  uint64_t v12 = OUTLINED_FUNCTION_40_16(0xD000000000000025LL);
  return OUTLINED_FUNCTION_12_28(v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  void *v7;
  __n128 *v8;
  __n128 v9;
  __n128 *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  OUTLINED_FUNCTION_163();
  uint64_t v1 = v0;
  unsigned __int8 v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (void *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  __n128 v8 = (__n128 *)OUTLINED_FUNCTION_14_17((uint64_t)v7, 0xD000000000000012LL);
  v8[3].n128_u8[0] = v5;
  v8[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v8[5].n128_u64[0] = 0xD000000000000021LL;
  uint64_t v10 = OUTLINED_FUNCTION_267_0(v8, v9);
  v10[6].n128_u8[0] = v3;
  v10[7].n128_u64[1] = v11;
  v10[8].n128_u64[0] = 0xD000000000000010LL;
  v10[8].n128_u64[1] = 0x8000000000349270LL;
  if (v1)
  {
    uint64_t v12 = OUTLINED_FUNCTION_140_0();
    uint64_t v13 = v1;
  }

  else
  {
    uint64_t v13 = 0LL;
    uint64_t v12 = 0LL;
    v7[19] = 0LL;
    v7[20] = 0LL;
  }

  v7[18] = v13;
  v7[21] = v12;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_55(0xD000000000000025LL, 0x8000000000343A60LL);
  return OUTLINED_FUNCTION_51_12((uint64_t)v7);
}

uint64_t StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)( char a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = v3;
  *(_BYTE *)(v4 + 57) = a2;
  *(_BYTE *)(v4 + 56) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:completion:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  *(_OWORD *)(v1 + 16) = xmmword_31D870;
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v1 + 40) = 0x800000000034BBC0LL;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_236_0(v2);
  OUTLINED_FUNCTION_52_3(0xD00000000000002CLL);
  return OUTLINED_FUNCTION_1_41(v1);
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_8_2(v11, 80LL);
  *(void *)(v10 + 40) = v12;
  uint64_t v13 = OUTLINED_FUNCTION_247_0(v12, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_200_1((uint64_t)v13, (uint64_t)"localEmergencyServices");
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_255_0(v14);
  OUTLINED_FUNCTION_189_1();
  uint64_t v15 = OUTLINED_FUNCTION_46();
  uint64_t v16 = (void *)OUTLINED_FUNCTION_113_5(v15);
  OUTLINED_FUNCTION_45_8(v16);
  OUTLINED_FUNCTION_252_0();
  return OUTLINED_FUNCTION_8_47(v17, v18, v19, v20, a10);
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  OUTLINED_FUNCTION_49_1();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_8_2(v12, 80LL);
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
  uint64_t v14 = OUTLINED_FUNCTION_247_0(v13, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_200_1((uint64_t)v14, (uint64_t)"localEmergencyServices");
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_255_0(v15);
  OUTLINED_FUNCTION_189_1();
  uint64_t v16 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v10 + 40) = v16;
  OUTLINED_FUNCTION_30(v16, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  uint64_t v17 = OUTLINED_FUNCTION_225(v11 + 22);
  return OUTLINED_FUNCTION_12_28(v17, v18, v19, a10);
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)()
{
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_112_4();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_3_5();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_20_32();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = OUTLINED_FUNCTION_247_0(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_200_1((uint64_t)v3, (uint64_t)"localEmergencyServices");
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_223(v4);
  OUTLINED_FUNCTION_55(v0 + 22, 0x8000000000343A90LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
}

uint64_t StartCallCATs.disambiguateContactsPartialList(completion:)()
{
  return OUTLINED_FUNCTION_13(41LL);
}

uint64_t StartCallCATs.disambiguateContactsPartialList()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(41LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(41LL, 0x8000000000343AC0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000015LL;
  *(void *)(v2 + 40) = 0x800000000034BBE0LL;
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_125_1();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_52_3(0xD000000000000027LL);
  return OUTLINED_FUNCTION_1_41(v2);
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:));
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_125(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_35_23();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  __n128 v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_35_23();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  __n128 v8 = OUTLINED_FUNCTION_40_16(0xD000000000000027LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_200_1(v2, (uint64_t)"personsToDisambiguate");
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_125_1();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_55(0xD000000000000027LL, 0x8000000000343AF0LL);
  return OUTLINED_FUNCTION_1_41(v2);
}

uint64_t StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.disambiguateContactsVoxNoList(personsToDisambiguate:));
}

uint64_t StartCallCATs.disambiguateDestinationType(completion:)()
{
  return OUTLINED_FUNCTION_13(37LL);
}

uint64_t StartCallCATs.disambiguateDestinationType()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(37LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(37LL, 0x8000000000343B20LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.disambiguatePreferredCallProvider(completion:)()
{
  return OUTLINED_FUNCTION_13(43LL);
}

uint64_t StartCallCATs.disambiguatePreferredCallProvider()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(43LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(43LL, 0x8000000000343B50LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.emergencyCountdown(completion:)()
{
  return OUTLINED_FUNCTION_13(28LL);
}

uint64_t StartCallCATs.emergencyCountdown()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(28LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(28LL, 0x8000000000343B80LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.errorWithCode(device:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000017LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.errorWithCode(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCode(device:));
}

uint64_t StartCallCATs.errorWithCode(device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  __n128 v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  __n128 v8 = OUTLINED_FUNCTION_102(23LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(23LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.errorWithCode(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCode(device:));
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:completion:)()
{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:completion:)();
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  unint64_t v13;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 128LL);
  OUTLINED_FUNCTION_42_1(v11, (__n128)xmmword_31D880);
  if (v9)
  {
    uint64_t v12 = OUTLINED_FUNCTION_50_6();
    uint64_t v13 = v9;
  }

  else
  {
    uint64_t v13 = 0LL;
    uint64_t v12 = 0LL;
    v11[3].n128_u64[1] = 0LL;
    v11[4].n128_u64[0] = 0LL;
  }

  v11[3].n128_u64[0] = v13;
  v11[4].n128_u64[1] = v12;
  v11[5].n128_u64[0] = v5;
  v11[5].n128_u64[1] = v3;
  v11[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_95();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v1);
  return OUTLINED_FUNCTION_3_6((uint64_t)v11);
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:));
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_154_3(v6);
  OUTLINED_FUNCTION_268_0(v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v8 = OUTLINED_FUNCTION_46();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_113_5(v8);
  OUTLINED_FUNCTION_45_8(v9);
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v10, v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  char v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_154_3(v6);
  OUTLINED_FUNCTION_268_0(v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v8;
  OUTLINED_FUNCTION_30(v8, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  uint64_t v9 = OUTLINED_FUNCTION_102(42LL);
  return OUTLINED_FUNCTION_12_28(v9, v10, v11, v12);
}

{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  unint64_t v15;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_8_2(v12, 128LL);
  OUTLINED_FUNCTION_42_1(v13, (__n128)xmmword_31D880);
  if (v11)
  {
    uint64_t v14 = OUTLINED_FUNCTION_50_6();
    uint64_t v15 = v11;
  }

  else
  {
    uint64_t v15 = 0LL;
    uint64_t v14 = 0LL;
    v13[3].n128_u64[1] = 0LL;
    v13[4].n128_u64[0] = 0LL;
  }

  v13[3].n128_u64[0] = v15;
  v13[4].n128_u64[1] = v14;
  v13[5].n128_u64[0] = v7;
  v13[5].n128_u64[1] = v5;
  v13[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v13[6].n128_u8[0] = v9 & 1;
  OUTLINED_FUNCTION_95_1();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(v3, v1, v13);
  return OUTLINED_FUNCTION_3_6((uint64_t)v13);
}

uint64_t StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:));
}

void StartCallCATs.errorWithCodeAppConfigurationRequired(appName:completion:)()
{
}

uint64_t StartCallCATs.errorWithCodeAppConfigurationRequired(appName:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.errorWithCodeAppConfigurationRequired(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  uint64_t v11 = OUTLINED_FUNCTION_46_8(47LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

uint64_t StartCallCATs.errorWithCodeAppConfigurationRequired(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.errorWithCodeAppConfigurationRequired(appName:)()
{
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_52_3(0xD000000000000025LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeCallInProgress(device:));
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(37LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(37LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.errorWithCodeCallInProgress(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeCallInProgress(device:));
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000022LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeCallRinging(device:));
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(34LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(34LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.errorWithCodeCallRinging(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeCallRinging(device:));
}

uint64_t StartCallCATs.errorWithCodeCallingServiceNotAvailable(completion:)()
{
  return OUTLINED_FUNCTION_13(49LL);
}

uint64_t StartCallCATs.errorWithCodeCallingServiceNotAvailable()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(49LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(49LL, 0x80000000003423D0LL, (uint64_t)_swiftEmptyArrayStorage);
}

void StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:completion:)()
{
}

uint64_t StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  uint64_t v11 = OUTLINED_FUNCTION_46_8(47LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

uint64_t StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.errorWithCodeContactNotSupportedByApp(appName:)()
{
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:completion:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    OUTLINED_FUNCTION_142_0();
    unint64_t v4 = v1;
  }

  else
  {
    OUTLINED_FUNCTION_52_1();
  }

  v3[3].n128_u64[0] = v4;
  OUTLINED_FUNCTION_261();
  v3[4].n128_u64[1] = v5;
  v3[5].n128_u64[0] = v6;
  v3[5].n128_u64[1] = 0xE800000000000000LL;
  if (v0)
  {
    uint64_t v7 = OUTLINED_FUNCTION_125_1();
    unint64_t v8 = v0;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_94_7();
  }

  v3[6].n128_u64[0] = v8;
  v3[7].n128_u64[1] = v7;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000031LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:));
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 32);
  v1[6] = v7;
  v1[9] = v6;
  v1[10] = 0x73746361746E6F63LL;
  uint64_t v9 = OUTLINED_FUNCTION_129_5(0xE800000000000000LL);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_109(v11);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v12, v13, v14, v15, v16);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[3];
  v1[6] = v7;
  v1[9] = v6;
  v1[10] = 0x73746361746E6F63LL;
  uint64_t v9 = OUTLINED_FUNCTION_129_5(0xE800000000000000LL);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(49LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __n128 *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  OUTLINED_FUNCTION_145_4();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    OUTLINED_FUNCTION_142_0();
    uint64_t v4 = v1;
  }

  else
  {
    OUTLINED_FUNCTION_55_12();
  }

  v3[3].n128_u64[0] = v4;
  OUTLINED_FUNCTION_261();
  v3[4].n128_u64[1] = v5;
  v3[5].n128_u64[0] = v6;
  v3[5].n128_u64[1] = 0xE800000000000000LL;
  if (v0)
  {
    uint64_t v7 = OUTLINED_FUNCTION_125_1();
    uint64_t v8 = v0;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_123_3();
  }

  v3[6].n128_u64[0] = v8;
  v3[7].n128_u64[1] = v7;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(49LL, v9);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:));
}

void StartCallCATs.errorWithCodeNoValidNumber(appName:completion:)()
{
}

uint64_t StartCallCATs.errorWithCodeNoValidNumber(appName:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.errorWithCodeNoValidNumber(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(36LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

uint64_t StartCallCATs.errorWithCodeNoValidNumber(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.errorWithCodeNoValidNumber(appName:)()
{
}

uint64_t StartCallCATs.errorWithCodeScreenTimeRestrictionEnabled(completion:)()
{
  return OUTLINED_FUNCTION_13(51LL);
}

uint64_t StartCallCATs.errorWithCodeScreenTimeRestrictionEnabled()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(51LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(51LL, 0x8000000000342480LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.errorWithCodeUnableToHandOff(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t StartCallCATs.errorWithCodeUnableToHandOff()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x8000000000343BF0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.finalLowConfidenceResponse(completion:)()
{
  return OUTLINED_FUNCTION_13(36LL);
}

uint64_t StartCallCATs.finalLowConfidenceResponse()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(36LL, 0x80000000003424C0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.genericError(device:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000016LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.genericError(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.genericError(device:));
}

uint64_t StartCallCATs.genericError(device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  uint64_t v8 = OUTLINED_FUNCTION_102(22LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(22LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.genericError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.genericError(device:));
}

void StartCallCATs.hangUpTip(device:hintIdentifier:completion:)()
{
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 128LL);
  OUTLINED_FUNCTION_42_1(v4, (__n128)xmmword_31D880);
  if (v2)
  {
    OUTLINED_FUNCTION_50_6();
    unint64_t v5 = v2;
  }

  else
  {
    OUTLINED_FUNCTION_52_1();
  }

  v4[3].n128_u64[0] = v5;
  OUTLINED_FUNCTION_258_0();
  v4[4].n128_u64[1] = v6;
  v4[5].n128_u64[0] = v7;
  OUTLINED_FUNCTION_257_1();
  v4[5].n128_u64[1] = v8;
  OUTLINED_FUNCTION_213_0(v9, v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v11);
  if (v12)
  {
    uint64_t v13 = OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_182_1(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    v4[7].n128_u64[1] = v11;
    uint64_t v14 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_155_2((uint64_t)v14);
    OUTLINED_FUNCTION_29_3();
  }

  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000013LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_58();
}

uint64_t StartCallCATs.hangUpTip(device:hintIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v4[6] = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.hangUpTip(device:hintIdentifier:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_8_2(v13, 128LL);
  *(void *)(v11 + 56) = v14;
  uint64_t v15 = OUTLINED_FUNCTION_35_0(v14, (__n128)xmmword_31D880);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for SirikitDeviceState(v15);
  }

  else
  {
    v14[3].n128_u64[1] = 0LL;
    v14[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_132_5(v15);
  OUTLINED_FUNCTION_29_16(v17, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_207_2(v18);
  if (v19)
  {
    uint64_t v20 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v20, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v14[7].n128_u64[1] = v10;
    uint64_t v21 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v21);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v22 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v23 = (void *)OUTLINED_FUNCTION_230_0(v22);
  OUTLINED_FUNCTION_109(v23);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_24_4(v24, 0xD000000000000013LL, v25, (uint64_t)v14, a10);
}

{
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  OUTLINED_FUNCTION_44();
  uint64_t v12 = v11[2];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_8_2(v13, 128LL);
  v11[6] = v14;
  uint64_t v15 = OUTLINED_FUNCTION_35_0(v14, (__n128)xmmword_31D880);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for SirikitDeviceState(v15);
  }

  else
  {
    v14[3].n128_u64[1] = 0LL;
    v14[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_132_5(v15);
  OUTLINED_FUNCTION_29_16(v17, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_47_14(v18);
  if (v19)
  {
    uint64_t v20 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v20, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v14[7].n128_u64[1] = v10;
    uint64_t v21 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v21);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v22 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v11[7] = v22;
  OUTLINED_FUNCTION_53_7(v22, (uint64_t)StartCallCATs.hangUpTip(device:hintIdentifier:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_25_5(0xD000000000000013LL, v23, (uint64_t)v14, a10);
}

uint64_t StartCallCATs.hangUpTip(device:hintIdentifier:)()
{
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_235_0();
    OUTLINED_FUNCTION_23_3();
    unint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_233();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

uint64_t StartCallCATs.hangUpTip(device:hintIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.hangUpTip(device:hintIdentifier:)()
{
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_131_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 128LL);
  OUTLINED_FUNCTION_42_1(v5, (__n128)xmmword_31D880);
  if (v0)
  {
    OUTLINED_FUNCTION_50_6();
    unint64_t v6 = v0;
  }

  else
  {
    OUTLINED_FUNCTION_55_12();
  }

  v5[3].n128_u64[0] = v6;
  OUTLINED_FUNCTION_258_0();
  v5[4].n128_u64[1] = v7;
  v5[5].n128_u64[0] = v8;
  OUTLINED_FUNCTION_257_1();
  v5[5].n128_u64[1] = v9;
  OUTLINED_FUNCTION_29_16(v3, v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v1, 1LL, v11);
  if (v12)
  {
    uint64_t v13 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    v5[7].n128_u64[1] = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((__n128 *)v5[6].n128_u64);
    OUTLINED_FUNCTION_149((uint64_t)boxed_opaque_existential_1);
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(19LL, v15);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_58();
}

uint64_t StartCallCATs.intentConfirmation(intent:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_136_0(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_142_0();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD00000000000001CLL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.intentConfirmation(intent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentConfirmation(intent:));
}

uint64_t StartCallCATs.intentConfirmation(intent:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_125(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_43_11(v5, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_43_11(v5, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(28LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_136_0(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_142_0();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(28LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.intentConfirmation(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentConfirmation(intent:));
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:completion:)()
{
  char v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  OUTLINED_FUNCTION_136_0(v7, (__n128)xmmword_320080);
  if (v5)
  {
    uint64_t v8 = OUTLINED_FUNCTION_142_0();
    uint64_t v9 = v5;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_99_6(v8, v9);
  if (v3)
  {
    uint64_t v10 = OUTLINED_FUNCTION_50_6();
    unint64_t v11 = v3;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_94_7();
  }

  v7[6].n128_u64[0] = v11;
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = 0xD000000000000016LL;
  OUTLINED_FUNCTION_171_2((uint64_t)"shouldPlayTTSCountdown");
  v7[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[9].n128_u8[0] = v1 & 1;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000025LL);
  return OUTLINED_FUNCTION_51_12((uint64_t)v7);
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(_BYTE *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 176LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_320080);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  char v10 = *(_BYTE *)(v0 + 72);
  *(void *)(v1 + 96) = v8;
  *(void *)(v1 + 136) = 0x800000000034BC00LL;
  *(void *)(v1 + 168) = &type metadata for Bool;
  *(_BYTE *)(v1 + 144) = v10;
  *(void *)(v1 + 120) = v9;
  *(void *)(v1 + 128) = 0xD000000000000016LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = OUTLINED_FUNCTION_65_10();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_71_5(v11);
  OUTLINED_FUNCTION_109(v12);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v13, v14, v15, v16, v17);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_179_1();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_229_0();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_174_2();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 176LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_320080);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  char v10 = *(_BYTE *)(v0 + 64);
  *(void *)(v1 + 96) = v8;
  *(void *)(v1 + 136) = 0x800000000034BC00LL;
  *(void *)(v1 + 168) = &type metadata for Bool;
  *(_BYTE *)(v1 + 144) = v10;
  *(void *)(v1 + 120) = v9;
  *(void *)(v1 + 128) = 0xD000000000000016LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v0 + 48) = v11;
  OUTLINED_FUNCTION_53_7(v11, (uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD000000000000025LL);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_50_0();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  unint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  OUTLINED_FUNCTION_163();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_145_4();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 176LL);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_320080);
  if (v1)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v1;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_55_12();
  }

  OUTLINED_FUNCTION_104_5(v6, v7);
  if (v0)
  {
    uint64_t v8 = OUTLINED_FUNCTION_50_6();
    uint64_t v9 = v0;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_123_3();
  }

  v5[6].n128_u64[0] = v9;
  v5[7].n128_u64[1] = v8;
  v5[8].n128_u64[0] = 0xD000000000000016LL;
  OUTLINED_FUNCTION_56_0();
  v5[8].n128_u64[1] = v10;
  v5[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v5[9].n128_u8[0] = v3 & 1;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_55(0xD000000000000025LL, 0x8000000000343C40LL);
  return OUTLINED_FUNCTION_51_12((uint64_t)v5);
}

uint64_t StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
}

uint64_t StartCallCATs.intentConfirmationEmergencyVoiceOnly(completion:)()
{
  return OUTLINED_FUNCTION_13(46LL);
}

uint64_t StartCallCATs.intentConfirmationEmergencyVoiceOnly()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(46LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(46LL, 0x8000000000343C70LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:completion:)()
{
  unint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  OUTLINED_FUNCTION_136_0(v7, (__n128)xmmword_320080);
  if (v5)
  {
    uint64_t v8 = OUTLINED_FUNCTION_142_0();
    uint64_t v9 = v5;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_137_3(v8, v9);
  if (v3)
  {
    uint64_t v10 = OUTLINED_FUNCTION_125_1();
    unint64_t v11 = v3;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_94_7();
  }

  v7[6].n128_u64[0] = v11;
  v7[7].n128_u64[1] = v10;
  v7[8].n128_u64[0] = 0xD000000000000012LL;
  OUTLINED_FUNCTION_171_2((uint64_t)"restrictedContacts");
  if (v1)
  {
    uint64_t v12 = OUTLINED_FUNCTION_125_1();
    unint64_t v13 = v1;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_139_3();
  }

  v7[9].n128_u64[0] = v13;
  v7[10].n128_u64[1] = v12;
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000032LL);
  return OUTLINED_FUNCTION_51_12((uint64_t)v7);
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  void v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:));
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  v0[7] = v3;
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_320080);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  unint64_t v6 = v0[4];
  OUTLINED_FUNCTION_148_3(v4, v5);
  if (v6)
  {
    uint64_t v7 = OUTLINED_FUNCTION_125_1();
    unint64_t v8 = v6;
  }

  else
  {
    unint64_t v8 = 0LL;
    uint64_t v7 = 0LL;
    v3[6].n128_u64[1] = 0LL;
    v3[7].n128_u64[0] = 0LL;
  }

  unint64_t v9 = v0[5];
  v3[6].n128_u64[0] = v8;
  v3[7].n128_u64[1] = v7;
  v3[8].n128_u64[0] = 0xD000000000000012LL;
  uint64_t v10 = OUTLINED_FUNCTION_273((uint64_t)"restrictedContacts");
  if (v9)
  {
    uint64_t v10 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v3[9].n128_u64[1] = 0LL;
    v3[10].n128_u64[0] = 0LL;
  }

  v3[9].n128_u64[0] = v9;
  v3[10].n128_u64[1] = v10;
  uint64_t v11 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:) + 1);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_95_1();
  uint64_t v12 = swift_task_alloc(v11);
  unint64_t v13 = (void *)OUTLINED_FUNCTION_230_0(v12);
  *unint64_t v13 = v0;
  v13[1] = StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_224_0();
  return OUTLINED_FUNCTION_48_11(v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_71_9();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t (*v0)(void);
  swift_bridgeObjectRelease();
  unint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  OUTLINED_FUNCTION_47_4();
  uint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  v0[6] = v3;
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_320080);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  unint64_t v6 = v0[3];
  OUTLINED_FUNCTION_148_3(v4, v5);
  if (v6)
  {
    uint64_t v7 = OUTLINED_FUNCTION_125_1();
    unint64_t v8 = v6;
  }

  else
  {
    unint64_t v8 = 0LL;
    uint64_t v7 = 0LL;
    v3[6].n128_u64[1] = 0LL;
    v3[7].n128_u64[0] = 0LL;
  }

  unint64_t v9 = v0[4];
  v3[6].n128_u64[0] = v8;
  v3[7].n128_u64[1] = v7;
  v3[8].n128_u64[0] = 0xD000000000000012LL;
  uint64_t v10 = OUTLINED_FUNCTION_273((uint64_t)"restrictedContacts");
  if (v9)
  {
    uint64_t v10 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v3[9].n128_u64[1] = 0LL;
    v3[10].n128_u64[0] = 0LL;
  }

  v3[9].n128_u64[0] = v9;
  v3[10].n128_u64[1] = v10;
  uint64_t v11 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:) + 1);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_95_1();
  uint64_t v12 = (void *)swift_task_alloc(v11);
  v0[7] = v12;
  *uint64_t v12 = v0;
  v12[1] = StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  unint64_t v13 = OUTLINED_FUNCTION_205_2(0xD000000000000032LL);
  return OUTLINED_FUNCTION_18_39(v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  OUTLINED_FUNCTION_163();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_131_3();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v6 = (__n128 *)OUTLINED_FUNCTION_8_2(v5, 176LL);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_320080);
  if (v0)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    unint64_t v8 = v0;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_137_3(v7, v8);
  if (v4)
  {
    unint64_t v9 = OUTLINED_FUNCTION_125_1();
    uint64_t v10 = v4;
  }

  else
  {
    unint64_t v9 = OUTLINED_FUNCTION_94_7();
  }

  v6[6].n128_u64[0] = v10;
  v6[7].n128_u64[1] = v9;
  v6[8].n128_u64[0] = 0xD000000000000012LL;
  OUTLINED_FUNCTION_171_2((uint64_t)"restrictedContacts");
  if (v2)
  {
    uint64_t v11 = OUTLINED_FUNCTION_125_1();
    uint64_t v12 = v2;
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_139_3();
  }

  v6[9].n128_u64[0] = v12;
  v6[10].n128_u64[1] = v11;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_260(v13, v14);
  return OUTLINED_FUNCTION_51_12((uint64_t)v6);
}

uint64_t StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:));
}

void StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:completion:)()
{
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_8_2(v9, 368LL);
  OUTLINED_FUNCTION_136_0(v10, (__n128)xmmword_32A100);
  if (v8)
  {
    uint64_t v11 = OUTLINED_FUNCTION_142_0();
    unint64_t v12 = v8;
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_32_23();
  }

  v10[3].n128_u64[0] = v12;
  v10[4].n128_u64[1] = v11;
  v10[5].n128_u64[0] = 0xD000000000000010LL;
  OUTLINED_FUNCTION_202_1((uint64_t)"redactedContacts");
  if (v6)
  {
    uint64_t v13 = OUTLINED_FUNCTION_125_1();
    uint64_t v14 = v6;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    v10[6].n128_u64[1] = 0LL;
    v10[7].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_203_1(v13, v14);
  if (v4)
  {
    uint64_t v15 = OUTLINED_FUNCTION_50_6();
    unint64_t v16 = v4;
  }

  else
  {
    unint64_t v16 = 0LL;
    uint64_t v15 = 0LL;
    v10[9].n128_u64[1] = 0LL;
    v10[10].n128_u64[0] = 0LL;
  }

  v10[9].n128_u64[0] = v16;
  OUTLINED_FUNCTION_194_1(v15);
  OUTLINED_FUNCTION_278(v2, v17, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v18);
  if (v19)
  {
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_44_1();
    uint64_t v20 = OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_248_0(v20, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    v10[13].n128_u64[1] = v18;
    uint64_t v21 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_220_0((uint64_t)v21);
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
  }

  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_128_5((uint64_t)&type metadata for Bool);
  v10[19].n128_u64[1] = v22;
  v10[20].n128_u64[0] = 0xD00000000000001ELL;
  OUTLINED_FUNCTION_226_0(v22);
  v10[21].n128_u8[0] = v23;
  OUTLINED_FUNCTION_38_2();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v24);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  *(_BYTE *)(v9 + 98) = a8;
  *(_BYTE *)(v9 + 97) = a7;
  *(_BYTE *)(v9 + 96) = a6;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = v8;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_12_0(v10);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 368LL);
  v0[9] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_32A100;
  uint64_t v5 = OUTLINED_FUNCTION_43_11(v4, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(v5);
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  uint64_t v6 = v0[4];
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(void *)(v4 + 80) = 0xD000000000000010LL;
  uint64_t v7 = OUTLINED_FUNCTION_276((uint64_t)"redactedContacts");
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v4 + 104) = 0LL;
    *(void *)(v4 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  uint64_t v8 = v0[5];
  uint64_t v9 = OUTLINED_FUNCTION_183_1(v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v4 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v4 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_165_1(v9);
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_117_5(v11) == 1)
  {
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    uint64_t v12 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v4 + 216) = v1;
    uint64_t v13 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_149((uint64_t)v13);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_164_3();
  OUTLINED_FUNCTION_120_5();
  OUTLINED_FUNCTION_227(v14);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[10] = v15;
  *uint64_t v15 = v0;
  v15[1] = StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_192_1(v16, v17, v18, v4, v20);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 88) = v1;
  swift_task_dealloc(v3);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v5);
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v19)(void);
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 368LL);
  v0[8] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_32A100;
  uint64_t v5 = OUTLINED_FUNCTION_43_11(v4, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(v5);
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  uint64_t v6 = v0[3];
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(void *)(v4 + 80) = 0xD000000000000010LL;
  uint64_t v7 = OUTLINED_FUNCTION_276((uint64_t)"redactedContacts");
  if (v6)
  {
    uint64_t v7 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v4 + 104) = 0LL;
    *(void *)(v4 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  uint64_t v8 = v0[4];
  uint64_t v9 = OUTLINED_FUNCTION_183_1(v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v4 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v4 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_165_1(v9);
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_117_5(v11) == 1)
  {
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    uint64_t v12 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v4 + 216) = v1;
    uint64_t v13 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_149((uint64_t)v13);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_164_3();
  OUTLINED_FUNCTION_120_5();
  OUTLINED_FUNCTION_227(v14);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[9] = v15;
  *uint64_t v15 = v0;
  v15[1] = StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  uint64_t v16 = OUTLINED_FUNCTION_21_19(0xD00000000000001FLL);
  return OUTLINED_FUNCTION_191_0(v16, v17, v4, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(void);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v4, v5, v6);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v8 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v8, v9);
  }

uint64_t StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = v7;
  *(_BYTE *)(v8 + 90) = a7;
  *(_BYTE *)(v8 + 89) = a6;
  *(_BYTE *)(v8 + 88) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v8 + 56) = OUTLINED_FUNCTION_12_0(v9);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = OUTLINED_FUNCTION_8_2(v9, 368LL);
  OUTLINED_FUNCTION_136_0((__n128 *)v10, (__n128)xmmword_32A100);
  if (v8)
  {
    uint64_t v11 = OUTLINED_FUNCTION_142_0();
    uint64_t v12 = v8;
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_32_23();
  }

  *(void *)(v10 + 48) = v12;
  *(void *)(v10 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
  *(void *)(v10 + 80) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_202_1((uint64_t)"redactedContacts");
  if (v6)
  {
    uint64_t v13 = OUTLINED_FUNCTION_125_1();
    uint64_t v14 = v6;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v10 + 104) = 0LL;
    *(void *)(v10 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_203_1(v13, v14);
  if (v4)
  {
    uint64_t v15 = OUTLINED_FUNCTION_50_6();
    uint64_t v16 = v4;
  }

  else
  {
    uint64_t v16 = 0LL;
    uint64_t v15 = 0LL;
    *(void *)(v10 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v10 + 160) = 0LL;
  }

  *(void *)(v10 + 144) = v16;
  OUTLINED_FUNCTION_194_1(v15);
  OUTLINED_FUNCTION_278(v2, v17, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v18);
  if (v19)
  {
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_44_1();
    uint64_t v20 = OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_248_0(v20, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v10 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(v10 + 208) = 0u;
  }

  else
  {
    *(void *)(v10 + 216) = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v10 + 192));
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))( boxed_opaque_existential_1,  v0,  v18);
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
  }

  OUTLINED_FUNCTION_163_2();
  OUTLINED_FUNCTION_128_5((uint64_t)&type metadata for Bool);
  *(void *)(v10 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v22;
  *(void *)(v10 + 320) = 0xD00000000000001ELL;
  OUTLINED_FUNCTION_226_0(v22);
  *(_BYTE *)(v10 + 336) = v23;
  OUTLINED_FUNCTION_38_2();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(v24, v25, v10);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:completion:)()
{
  unint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 272LL);
  OUTLINED_FUNCTION_136_0(v11, (__n128)xmmword_323F80);
  if (v9)
  {
    uint64_t v12 = OUTLINED_FUNCTION_142_0();
    unint64_t v13 = v9;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_52_1();
  }

  v11[3].n128_u64[0] = v13;
  v11[4].n128_u64[1] = v12;
  v11[5].n128_u64[0] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_56_0();
  v11[5].n128_u64[1] = v14;
  v11[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_262_0();
  v11[7].n128_u64[1] = v16;
  v11[8].n128_u64[0] = v15;
  v11[8].n128_u64[1] = 0xEC0000006C6C6143LL;
  v11[9].n128_u8[0] = v5 & 1;
  v11[10].n128_u64[1] = v16;
  v11[11].n128_u64[0] = 0xD000000000000012LL;
  OUTLINED_FUNCTION_201_1((uint64_t)"isRepromptAutoCall");
  v11[12].n128_u8[0] = v3 & 1;
  v11[13].n128_u64[1] = v17;
  v11[14].n128_u64[0] = 0x656369766564LL;
  v11[14].n128_u64[1] = 0xE600000000000000LL;
  if (v1)
  {
    uint64_t v18 = OUTLINED_FUNCTION_50_6();
    unint64_t v19 = v1;
  }

  else
  {
    unint64_t v19 = 0LL;
    uint64_t v18 = 0LL;
    v11[15].n128_u64[1] = 0LL;
    v11[16].n128_u64[0] = 0LL;
  }

  v11[15].n128_u64[0] = v19;
  v11[16].n128_u64[1] = v18;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000028LL);
  return OUTLINED_FUNCTION_3_6((uint64_t)v11);
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)( uint64_t a1, uint64_t a2, char a3, char a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  *(void *)(v7 + 40) = v6;
  *(_BYTE *)(v7 + 74) = a5;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a4;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 272LL);
  char v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_323F80);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 32);
  v1[6] = v7;
  v1[9] = v6;
  v1[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_202_1((uint64_t)"noCountdownPresented");
  OUTLINED_FUNCTION_130_0((uint64_t)&type metadata for Bool);
  uint64_t v10 = OUTLINED_FUNCTION_146_2(v9);
  if (v8)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState(v10);
  }

  else
  {
    v1[31] = 0LL;
    v1[32] = 0LL;
  }

  v1[30] = v8;
  v1[33] = v10;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = OUTLINED_FUNCTION_65_10();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_71_5(v11);
  OUTLINED_FUNCTION_254_0(v12);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v13, v14, v15, v16, v17);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 272LL);
  char v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_323F80);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[3];
  v1[6] = v7;
  v1[9] = v6;
  v1[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_202_1((uint64_t)"noCountdownPresented");
  OUTLINED_FUNCTION_130_0((uint64_t)&type metadata for Bool);
  uint64_t v10 = OUTLINED_FUNCTION_146_2(v9);
  if (v8)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState(v10);
  }

  else
  {
    v1[31] = 0LL;
    v1[32] = 0LL;
  }

  v1[30] = v8;
  v1[33] = v10;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v11;
  *uint64_t v11 = v0;
  v11[1] = StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:);
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD000000000000028LL);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

{
  unint64_t v0;
  unint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  OUTLINED_FUNCTION_29_2();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 272LL);
  OUTLINED_FUNCTION_136_0(v11, (__n128)xmmword_323F80);
  if (v9)
  {
    uint64_t v12 = OUTLINED_FUNCTION_142_0();
    uint64_t v13 = v9;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_55_12();
  }

  v11[3].n128_u64[0] = v13;
  v11[4].n128_u64[1] = v12;
  v11[5].n128_u64[0] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_56_0();
  v11[5].n128_u64[1] = v14;
  v11[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_262_0();
  v11[7].n128_u64[1] = v16;
  v11[8].n128_u64[0] = v15;
  v11[8].n128_u64[1] = 0xEC0000006C6C6143LL;
  v11[9].n128_u8[0] = v5 & 1;
  v11[10].n128_u64[1] = v16;
  v11[11].n128_u64[0] = 0xD000000000000012LL;
  v11[11].n128_u64[1] = 0x800000000034BC40LL;
  v11[12].n128_u8[0] = v3 & 1;
  v11[13].n128_u64[1] = v16;
  v11[14].n128_u64[0] = 0x656369766564LL;
  v11[14].n128_u64[1] = 0xE600000000000000LL;
  if (v1)
  {
    unint64_t v17 = OUTLINED_FUNCTION_50_6();
    uint64_t v18 = v1;
  }

  else
  {
    uint64_t v18 = 0LL;
    unint64_t v17 = 0LL;
    v11[15].n128_u64[1] = 0LL;
    v11[16].n128_u64[0] = 0LL;
  }

  v11[15].n128_u64[0] = v18;
  v11[16].n128_u64[1] = v17;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_55(0xD000000000000028LL, 0x8000000000343CA0LL);
  return OUTLINED_FUNCTION_3_6((uint64_t)v11);
}

uint64_t StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)( uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(_BYTE *)(v6 + 66) = a4;
  *(_BYTE *)(v6 + 65) = a3;
  *(_BYTE *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATs.intentHandledResponseWithFaceTimeLink(completion:)()
{
  return OUTLINED_FUNCTION_13(47LL);
}

uint64_t StartCallCATs.intentHandledResponseWithFaceTimeLink()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(47LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(47LL, 0x8000000000342590LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.internalConversionError(device:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000021LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.internalConversionError(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.internalConversionError(device:));
}

uint64_t StartCallCATs.internalConversionError(device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(33LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(33LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.internalConversionError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.internalConversionError(device:));
}

uint64_t StartCallCATs.joinFaceTimeMessage(completion:)()
{
  return OUTLINED_FUNCTION_13(29LL);
}

uint64_t StartCallCATs.joinFaceTimeMessage()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(29LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(29LL, 0x8000000000343CD0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.promptForCallCapability(completion:)()
{
  return OUTLINED_FUNCTION_13(33LL);
}

uint64_t StartCallCATs.promptForCallCapability()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(33LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(33LL, 0x8000000000343CF0LL, (uint64_t)_swiftEmptyArrayStorage);
}

void StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:completion:)()
{
  char v2 = v1;
  char v4 = v3;
  char v6 = v5;
  unint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_8_2(v13, 272LL);
  OUTLINED_FUNCTION_7_9(v14, (__n128)xmmword_323F80);
  outlined init with copy of SpeakableString?( v12,  v0,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v15 = OUTLINED_FUNCTION_26_0();
  uint64_t v16 = OUTLINED_FUNCTION_35(v0, 1LL, v15);
  if (v17)
  {
    OUTLINED_FUNCTION_248_0(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v14[4].n128_u64[1] = v15;
    uint64_t v18 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_220_0((uint64_t)v18);
  }

  OUTLINED_FUNCTION_37_0();
  v14[5].n128_u64[0] = v19;
  v14[5].n128_u64[1] = v20;
  v14[6].n128_u8[0] = v10 & 1;
  OUTLINED_FUNCTION_280();
  v14[7].n128_u64[1] = v21;
  v14[8].n128_u64[0] = v22;
  OUTLINED_FUNCTION_279();
  v14[8].n128_u64[1] = v24;
  if ((v6 & 1) != 0)
  {
    uint64_t v25 = 0LL;
    unint64_t v8 = 0LL;
    v14[9].n128_u64[1] = 0LL;
    v14[10].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v25 = &type metadata for Double;
  }

  v14[9].n128_u64[0] = v8;
  v14[10].n128_u64[1] = (unint64_t)v25;
  strcpy((char *)&v14[11], "startingOver");
  v14[11].n128_u8[13] = 0;
  v14[11].n128_u16[7] = -5120;
  v14[12].n128_u8[0] = v4 & 1;
  v14[13].n128_u64[1] = v23;
  v14[14].n128_u64[0] = 0xD000000000000015LL;
  v14[14].n128_u64[1] = 0x80000000003491E0LL;
  v14[16].n128_u64[1] = v23;
  v14[15].n128_u8[0] = v2 & 1;
  OUTLINED_FUNCTION_38_2();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v26);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6, char a7)
{
  *(_BYTE *)(v8 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a7;
  *(_BYTE *)(v8 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  *(_BYTE *)(v8 + 81) = a5;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v8 + 40) = v7;
  *(_BYTE *)(v8 + 80) = a3;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v8 + 48) = OUTLINED_FUNCTION_12_0(v9);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_8_2(v11, 272LL);
  *(void *)(v10 + 56) = v12;
  uint64_t v13 = OUTLINED_FUNCTION_7_9(v12, (__n128)xmmword_323F80);
  OUTLINED_FUNCTION_27_6((uint64_t)v13, v14, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v15 = OUTLINED_FUNCTION_26_0();
  uint64_t v16 = OUTLINED_FUNCTION_234_0(v15);
  if (v17)
  {
    OUTLINED_FUNCTION_41_1(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v18 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v18);
  }

  OUTLINED_FUNCTION_193_1();
  OUTLINED_FUNCTION_143_2((uint64_t)&type metadata for Bool);
  if ((v20 & 1) != 0)
  {
    v12[9].n128_u64[1] = 0LL;
    v12[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_121_5(v19);
  OUTLINED_FUNCTION_228(v21);
  uint64_t v22 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v23 = (void *)OUTLINED_FUNCTION_230_0(v22);
  uint64_t v24 = OUTLINED_FUNCTION_109(v23);
  return OUTLINED_FUNCTION_8_47(v24, v9 + 6, 0x80000000003425F0LL, (uint64_t)v12, a9);
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  OUTLINED_FUNCTION_50_11();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_8_2(v12, 272LL);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_77_1(v13);
  uint64_t v15 = OUTLINED_FUNCTION_7_9(v14, (__n128)xmmword_323F80);
  OUTLINED_FUNCTION_27_6((uint64_t)v15, v16, &demangling cache variable for type metadata for SpeakableString?);
  char v17 = OUTLINED_FUNCTION_26_0();
  uint64_t v18 = OUTLINED_FUNCTION_45_0(v17);
  if (v19)
  {
    OUTLINED_FUNCTION_41_1(v18, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v20 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v20);
  }

  OUTLINED_FUNCTION_193_1();
  OUTLINED_FUNCTION_143_2((uint64_t)&type metadata for Bool);
  if ((v22 & 1) != 0)
  {
    *(void *)(v11 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v11 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_121_5(v21);
  OUTLINED_FUNCTION_228(v23);
  uint64_t v24 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v10 + 56) = v24;
  OUTLINED_FUNCTION_53_7( v24,  (uint64_t)StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:));
  return OUTLINED_FUNCTION_12_28(v9 + 6, 0x80000000003425F0LL, v11, a9);
}

uint64_t StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)()
{
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_235_0();
    OUTLINED_FUNCTION_23_3();
    char v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_233();
    OUTLINED_FUNCTION_23_3();
    char v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

uint64_t StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)( uint64_t a1, char a2, uint64_t a3, char a4, char a5, char a6)
{
  *(void *)(v7 + 24) = a3;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(_BYTE *)(v7 + 75) = a6;
  *(_BYTE *)(v7 + 74) = a5;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a4;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v7 + 16) = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v7 + 40) = OUTLINED_FUNCTION_12_0(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)()
{
  uint64_t v30 = v0;
  char v2 = v1;
  char v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = OUTLINED_FUNCTION_8_2(v15, 272LL);
  *(_OWORD *)(v16 + 16) = xmmword_323F80;
  char v17 = (void *)(v16 + 48);
  OUTLINED_FUNCTION_135_1(v16);
  outlined init with copy of SpeakableString?( v12,  (uint64_t)v14,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35((uint64_t)v14, 1LL, v18);
  if (v19)
  {
    outlined destroy of SpeakableString?( (uint64_t)v14,  &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)char v17 = 0u;
    *(_OWORD *)(v16 + 64) = 0u;
  }

  else
  {
    *(void *)(v16 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))( boxed_opaque_existential_1,  v14,  v18);
  }

  OUTLINED_FUNCTION_37_0();
  *(void *)(v16 + 80) = v21;
  *(void *)(v16 + 88) = v22;
  *(_BYTE *)(v16 + 96) = v10 & 1;
  OUTLINED_FUNCTION_280();
  *(void *)(v16 + 120) = v23;
  *(void *)(v16 + 128) = v24;
  OUTLINED_FUNCTION_279();
  *(void *)(v16 + 136) = v26;
  if ((v6 & 1) != 0)
  {
    uint64_t v27 = 0LL;
    uint64_t v8 = 0LL;
    *(void *)(v16 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v16 + 160) = 0LL;
  }

  else
  {
    uint64_t v27 = &type metadata for Double;
  }

  *(void *)(v16 + 144) = v8;
  *(void *)(v16 + 168) = v27;
  strcpy((char *)(v16 + 176), "startingOver");
  *(_BYTE *)(v16 + 189) = 0;
  *(_WORD *)(v16 + 190) = -5120;
  *(_BYTE *)(v16 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4 & 1;
  *(void *)(v16 + 216) = v25;
  *(void *)(v16 + 224) = 0xD000000000000015LL;
  *(void *)(v16 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x80000000003491E0LL;
  *(void *)(v16 + 264) = v25;
  *(_BYTE *)(v16 + 240) = v2 & 1;
  OUTLINED_FUNCTION_38_2();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(v28, v29, v16);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_7_5();
}

void StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:completion:)()
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  *(_OWORD *)(v4 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000018LL;
  *(void *)(v5 + 40) = v6;
  OUTLINED_FUNCTION_47_3();
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  uint64_t v8 = OUTLINED_FUNCTION_35(v0, 1LL, v7);
  if (v9)
  {
    OUTLINED_FUNCTION_182_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    char v10 = OUTLINED_FUNCTION_214_0();
    OUTLINED_FUNCTION_38_0((uint64_t)v10);
  }

  OUTLINED_FUNCTION_181_2();
  *(void *)(v4 + 80) = v11;
  *(void *)(v4 + 88) = v12;
  if (v2)
  {
    uint64_t v13 = OUTLINED_FUNCTION_244_0();
    uint64_t v14 = v2;
  }

  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_94_7();
  }

  *(void *)(v4 + 96) = v14;
  *(void *)(v4 + 120) = v13;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000025LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v4[6] = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 128LL);
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_24_6(v2, (__n128)xmmword_31D880);
  uint64_t v4 = OUTLINED_FUNCTION_32_3((uint64_t)v3, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_234_0(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unint64_t v10 = *(void *)(v0 + 32);
  uint64_t v11 = OUTLINED_FUNCTION_152_3();
  if (v10)
  {
    uint64_t v11 = type metadata accessor for DialogPersonHandle(v11);
  }

  else
  {
    v2[6].n128_u64[1] = 0LL;
    v2[7].n128_u64[0] = 0LL;
  }

  v2[6].n128_u64[0] = v10;
  v2[7].n128_u64[1] = v11;
  OUTLINED_FUNCTION_2_3();
  uint64_t v12 = OUTLINED_FUNCTION_46();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_230_0(v12);
  OUTLINED_FUNCTION_109(v13);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_231_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  uint64_t v6 = OUTLINED_FUNCTION_24_6(v5, (__n128)xmmword_31D880);
  uint64_t v7 = OUTLINED_FUNCTION_32_3((uint64_t)v6, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_27_6(v7, v8, &demangling cache variable for type metadata for SpeakableString?);
  char v9 = OUTLINED_FUNCTION_26_0();
  unint64_t v10 = OUTLINED_FUNCTION_45_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_41_1(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v12);
  }

  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v14 = OUTLINED_FUNCTION_152_3();
  if (v13)
  {
    uint64_t v14 = type metadata accessor for DialogPersonHandle(v14);
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  v1[12] = v13;
  v1[15] = v14;
  OUTLINED_FUNCTION_2_3();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 56) = v15;
  OUTLINED_FUNCTION_53_7( v15,  (uint64_t)StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:));
  uint64_t v16 = OUTLINED_FUNCTION_40(v2 + 13);
  return OUTLINED_FUNCTION_25_5(v16, v17, v18, v19);
}

uint64_t StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)()
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  *(_OWORD *)(v4 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000018LL;
  *(void *)(v5 + 40) = v6;
  OUTLINED_FUNCTION_240();
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  uint64_t v8 = OUTLINED_FUNCTION_35(v0, 1LL, v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    unint64_t v10 = OUTLINED_FUNCTION_269_0();
    OUTLINED_FUNCTION_219_0((uint64_t)v10);
  }

  OUTLINED_FUNCTION_181_2();
  *(void *)(v4 + 80) = v11;
  *(void *)(v4 + 88) = v12;
  if (v2)
  {
    uint64_t v13 = OUTLINED_FUNCTION_244_0();
    uint64_t v14 = v2;
  }

  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_123_3();
  }

  *(void *)(v4 + 96) = v14;
  *(void *)(v4 + 120) = v13;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_55(0xD000000000000025LL, 0x8000000000343D20LL);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.promptForDestinationType(completion:)()
{
  return OUTLINED_FUNCTION_13(34LL);
}

uint64_t StartCallCATs.promptForDestinationType()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(34LL, 0x8000000000343D50LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.promptForPreferredCallProvider(completion:)()
{
  return OUTLINED_FUNCTION_13(40LL);
}

uint64_t StartCallCATs.promptForPreferredCallProvider()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(40LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(40LL, 0x8000000000343D80LL, (uint64_t)_swiftEmptyArrayStorage);
}

void StartCallCATs.relationship(relationship:completion:)()
{
}

uint64_t StartCallCATs.relationship(relationship:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.relationship(relationship:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_153(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_153(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  uint64_t v11 = OUTLINED_FUNCTION_46_8(22LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

uint64_t StartCallCATs.relationship(relationship:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.relationship(relationship:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapability(completion:)()
{
  return OUTLINED_FUNCTION_13(35LL);
}

uint64_t StartCallCATs.unsupportedCallCapability()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(35LL, 0x8000000000342670LL, (uint64_t)_swiftEmptyArrayStorage);
}

void StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:completion:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmApp(appName:isPhoneApp:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(54LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

uint64_t StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.unsupportedCallCapabilityCameraNotAccessible(appName:)()
{
}

void StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:completion:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_77_1(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_45_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v10 = (void *)OUTLINED_FUNCTION_71_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_72_7();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  char v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(58LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

uint64_t StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)()
{
}

uint64_t StartCallCATs.unsupportedCallCapabilityVideoCallUnsupported(completion:)()
{
  return OUTLINED_FUNCTION_13(55LL);
}

uint64_t StartCallCATs.unsupportedCallCapabilityVideoCallUnsupported()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(55LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(55LL, 0x8000000000342720LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedContactsForeignEmergencyDisambiguation(completion:)()
{
  return OUTLINED_FUNCTION_13(59LL);
}

uint64_t StartCallCATs.unsupportedContactsForeignEmergencyDisambiguation()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(59LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(59LL, 0x8000000000342760LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_65_3(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_125_1();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_52_3(0xD00000000000002ALL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedContactsInvalidHandle(contacts:));
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_125(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x73746361746E6F63LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x73746361746E6F63LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  uint64_t v8 = OUTLINED_FUNCTION_102(42LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_65_3(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_125_1();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_66_11(42LL, 0x80000000003427A0LL);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.unsupportedContactsInvalidHandle(contacts:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedContactsInvalidHandle(contacts:));
}

uint64_t StartCallCATs.unsupportedContactsMultipleContactsUnsupported(completion:)()
{
  return OUTLINED_FUNCTION_13(56LL);
}

uint64_t StartCallCATs.unsupportedContactsMultipleContactsUnsupported()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(56LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(56LL, 0x80000000003427D0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedContactsNoCallHistoryForRedial(completion:)()
{
  return OUTLINED_FUNCTION_13(51LL);
}

uint64_t StartCallCATs.unsupportedContactsNoCallHistoryForRedial()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(51LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(51LL, 0x8000000000342810LL, (uint64_t)_swiftEmptyArrayStorage);
}

void StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:completion:)()
{
  char v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 176LL);
  OUTLINED_FUNCTION_196_1((__n128 *)v6, (__n128)xmmword_320080);
  if (v4)
  {
    OUTLINED_FUNCTION_140_0();
    uint64_t v7 = v4;
  }

  else
  {
    OUTLINED_FUNCTION_52_1();
  }

  *(void *)(v6 + 48) = v7;
  OUTLINED_FUNCTION_266_0();
  *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  *(void *)(v6 + 80) = v9;
  *(void *)(v6 + 88) = 0xE700000000000000LL;
  OUTLINED_FUNCTION_215_0(v8, v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v11);
  if (v12)
  {
    uint64_t v13 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_241(v13, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v6 + 96) = 0u;
    *(_OWORD *)(v6 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  }

  else
  {
    *(void *)(v6 + 120) = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v6 + 96));
    OUTLINED_FUNCTION_212_0((uint64_t)boxed_opaque_existential_1);
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_180_1();
  *(void *)(v6 + 128) = v15;
  *(void *)(v6 + 136) = v16;
  *(void *)(v6 + 168) = &type metadata for Bool;
  *(_BYTE *)(v6 + 144) = v2 & 1;
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD00000000000002BLL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(_BYTE *)(v5 + 80) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v5 + 48) = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 176LL);
  *(void *)(v11 + 56) = v14;
  *(_OWORD *)(v14 + 16) = xmmword_320080;
  uint64_t v15 = OUTLINED_FUNCTION_24_25(v14, 0x746361746E6F63LL);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for DialogPerson(v15);
  }

  else
  {
    *(void *)(v14 + 56) = 0LL;
    *(void *)(v14 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_161_3(v15);
  OUTLINED_FUNCTION_29_16(v17, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_207_2(v18);
  if (v19)
  {
    uint64_t v20 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v20, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v14 + 120) = v10;
    uint64_t v21 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v21);
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_159_0();
  *(void *)(v14 + 168) = &type metadata for Bool;
  *(_BYTE *)(v14 + 144) = v22;
  uint64_t v23 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v24 = (void *)OUTLINED_FUNCTION_230_0(v23);
  OUTLINED_FUNCTION_109(v24);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_24_4(v25, 0xD00000000000002BLL, v26, v14, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  char v22;
  void *v23;
  uint64_t v24;
  OUTLINED_FUNCTION_44();
  uint64_t v12 = v11[2];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 176LL);
  v11[6] = v14;
  *(_OWORD *)(v14 + 16) = xmmword_320080;
  uint64_t v15 = OUTLINED_FUNCTION_24_25(v14, 0x746361746E6F63LL);
  if (v12)
  {
    uint64_t v15 = type metadata accessor for DialogPerson(v15);
  }

  else
  {
    *(void *)(v14 + 56) = 0LL;
    *(void *)(v14 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_161_3(v15);
  OUTLINED_FUNCTION_29_16(v17, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_47_14(v18);
  if (v19)
  {
    uint64_t v20 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v20, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v14 + 120) = v10;
    uint64_t v21 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v21);
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_159_0();
  *(void *)(v14 + 168) = &type metadata for Bool;
  *(_BYTE *)(v14 + 144) = v22;
  uint64_t v23 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v11[7] = v23;
  OUTLINED_FUNCTION_53_7( v23,  (uint64_t)StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_25_5(0xD00000000000002BLL, v24, v14, a10);
}

uint64_t StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)()
{
  char v2 = v1;
  unint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_8_2(v5, 176LL);
  OUTLINED_FUNCTION_196_1(v6, (__n128)xmmword_320080);
  if (v4)
  {
    OUTLINED_FUNCTION_140_0();
    unint64_t v7 = v4;
  }

  else
  {
    OUTLINED_FUNCTION_55_12();
  }

  v6[3].n128_u64[0] = v7;
  OUTLINED_FUNCTION_266_0();
  v6[4].n128_u64[1] = v8;
  v6[5].n128_u64[0] = v9;
  v6[5].n128_u64[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_213_0(v8, v10, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v0, 1LL, v11);
  if (v12)
  {
    uint64_t v13 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_182_1(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    v6[7].n128_u64[1] = v11;
    uint64_t v14 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_155_2((uint64_t)v14);
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_180_1();
  v6[8].n128_u64[0] = v15;
  v6[8].n128_u64[1] = v16;
  v6[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[9].n128_u8[0] = v2 & 1;
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(43LL, v17);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_58();
}

uint64_t StartCallCATs.unsupportedContactsNoContactFoundUserUnknown(completion:)()
{
  return OUTLINED_FUNCTION_13(54LL);
}

uint64_t StartCallCATs.unsupportedContactsNoContactFoundUserUnknown()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  char v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  char v2 = OUTLINED_FUNCTION_59_1(54LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(54LL, 0x8000000000342880LL, (uint64_t)_swiftEmptyArrayStorage);
}

void StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:completion:)()
{
  v32[2] = v0;
  v32[3] = v1;
  uint64_t v3 = v2;
  v32[1] = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  char v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)v32 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = OUTLINED_FUNCTION_8_2(v15, 272LL);
  OUTLINED_FUNCTION_136_0((__n128 *)v16, (__n128)xmmword_323F80);
  if (v10)
  {
    uint64_t v17 = OUTLINED_FUNCTION_142_0();
    uint64_t v18 = v10;
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_52_1();
  }

  *(void *)(v16 + 48) = v18;
  *(void *)(v16 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
  *(void *)(v16 + 80) = 0xD000000000000015LL;
  *(void *)(v16 + 88) = 0x8000000000341AF0LL;
  outlined init with copy of SpeakableString?( v8,  (uint64_t)v14,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35((uint64_t)v14, 1LL, v19);
  if (v20)
  {
    OUTLINED_FUNCTION_23_1();
    outlined destroy of SpeakableString?( (uint64_t)v14,  &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v16 + 96) = 0u;
    *(_OWORD *)(v16 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  }

  else
  {
    *(void *)(v16 + 120) = v19;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v16 + 96));
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( boxed_opaque_existential_1,  v14,  v19);
    OUTLINED_FUNCTION_23_1();
  }

  OUTLINED_FUNCTION_56_0();
  *(void *)(v16 + 128) = 0xD000000000000011LL;
  *(void *)(v16 + 136) = v22;
  if (v6)
  {
    uint64_t v23 = OUTLINED_FUNCTION_140_0();
    uint64_t v24 = v6;
  }

  else
  {
    uint64_t v23 = OUTLINED_FUNCTION_139_3();
  }

  *(void *)(v16 + 144) = v24;
  *(void *)(v16 + 168) = v23;
  *(void *)(v16 + 176) = 0xD00000000000001CLL;
  OUTLINED_FUNCTION_201_1((uint64_t)"unsupportedPersonHandleLabel");
  OUTLINED_FUNCTION_215_0(v25, v26, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_35((uint64_t)v12, 1LL, v19);
  if (v20)
  {
    uint64_t v27 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_241(v27, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v16 + 216) = v19;
    uint64_t v28 = OUTLINED_FUNCTION_51();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))(v28, v12, v19);
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_56_0();
  *(void *)(v16 + 224) = 0xD000000000000011LL;
  *(void *)(v16 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
  if (v3)
  {
    uint64_t v30 = OUTLINED_FUNCTION_244_0();
    uint64_t v31 = v3;
  }

  else
  {
    uint64_t v31 = 0LL;
    uint64_t v30 = 0LL;
    *(void *)(v16 + 248) = 0LL;
    *(void *)(v16 + 256) = 0LL;
  }

  *(void *)(v16 + 240) = v31;
  *(void *)(v16 + 264) = v30;
  OUTLINED_FUNCTION_29_3();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD00000000000002DLL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v7[9] = OUTLINED_FUNCTION_18_0(v8);
  v7[10] = swift_task_alloc(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  uint64_t v2 = v1[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 272LL);
  v1[11] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_323F80;
  uint64_t v5 = OUTLINED_FUNCTION_43_11(v4, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(v5);
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_256_1(v5);
  *(void *)(v4 + 88) = 0x8000000000341AF0LL;
  OUTLINED_FUNCTION_29_16(v7, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_63_5(v8) == 1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v9, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 120) = v0;
    uint64_t v10 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v10);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v11 = v1[5];
  uint64_t v12 = OUTLINED_FUNCTION_270((uint64_t)"unsupportedPerson");
  if (v11)
  {
    uint64_t v12 = type metadata accessor for DialogPerson(v12);
  }

  else
  {
    *(void *)(v4 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v4 + 160) = 0LL;
  }

  uint64_t v13 = v1[9];
  OUTLINED_FUNCTION_281(v12);
  *(void *)(v4 + 184) = 0x80000000003492D0LL;
  OUTLINED_FUNCTION_29_16(v15, v14, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v13, 1LL, v0) == 1)
  {
    uint64_t v16 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 216) = v0;
    uint64_t v17 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v17);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v18 = v1[7];
  uint64_t v19 = OUTLINED_FUNCTION_277_0((uint64_t)"unsupportedHandle");
  if (v18)
  {
    uint64_t v19 = type metadata accessor for DialogPersonHandle(v19);
  }

  else
  {
    *(void *)(v4 + 248) = 0LL;
    *(void *)(v4 + 256) = 0LL;
  }

  *(void *)(v4 + 240) = v18;
  *(void *)(v4 + 264) = v19;
  OUTLINED_FUNCTION_35_23();
  char v20 = (void *)OUTLINED_FUNCTION_46();
  v1[12] = v20;
  *char v20 = v1;
  v20[1] = StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  OUTLINED_FUNCTION_224_0();
  return OUTLINED_FUNCTION_48_11(v21, v22, v23, v24, v25);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 104) = v1;
  swift_task_dealloc(v3);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    uint64_t v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v5);
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  OUTLINED_FUNCTION_47_4();
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 272LL);
  v1[10] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_323F80;
  uint64_t v5 = OUTLINED_FUNCTION_43_11(v4, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneStartCallIntent(v5);
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_256_1(v5);
  *(void *)(v4 + 88) = 0x8000000000341AF0LL;
  OUTLINED_FUNCTION_29_16(v7, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_63_5(v8) == 1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v9, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 120) = v0;
    uint64_t v10 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v10);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v11 = v1[4];
  uint64_t v12 = OUTLINED_FUNCTION_270((uint64_t)"unsupportedPerson");
  if (v11)
  {
    uint64_t v12 = type metadata accessor for DialogPerson(v12);
  }

  else
  {
    *(void *)(v4 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v4 + 160) = 0LL;
  }

  uint64_t v13 = v1[8];
  OUTLINED_FUNCTION_281(v12);
  *(void *)(v4 + 184) = 0x80000000003492D0LL;
  OUTLINED_FUNCTION_29_16(v15, v14, &demangling cache variable for type metadata for SpeakableString?);
  if (__swift_getEnumTagSinglePayload(v13, 1LL, v0) == 1)
  {
    uint64_t v16 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 216) = v0;
    uint64_t v17 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v17);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v18 = v1[6];
  uint64_t v19 = OUTLINED_FUNCTION_277_0((uint64_t)"unsupportedHandle");
  if (v18)
  {
    uint64_t v19 = type metadata accessor for DialogPersonHandle(v19);
  }

  else
  {
    *(void *)(v4 + 248) = 0LL;
    *(void *)(v4 + 256) = 0LL;
  }

  *(void *)(v4 + 240) = v18;
  *(void *)(v4 + 264) = v19;
  OUTLINED_FUNCTION_35_23();
  char v20 = (void *)OUTLINED_FUNCTION_46();
  v1[11] = v20;
  *char v20 = v1;
  v20[1] = StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  uint64_t v21 = OUTLINED_FUNCTION_205_2(0xD00000000000002DLL);
  return OUTLINED_FUNCTION_18_39(v21, v22, v23, v24);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v4, v5, v6);
  }

  else
  {
    uint64_t v8 = *(void *)(v1 + 64);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    swift_task_dealloc(v8);
    uint64_t v9 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v9, v10);
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  void v6[4] = a3;
  void v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v6[8] = OUTLINED_FUNCTION_18_0(v7);
  v6[9] = swift_task_alloc(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void StartCallCATs.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  unint64_t v1 = v0;
  v33[0] = v2;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)v33 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_8_2(v15, 272LL);
  OUTLINED_FUNCTION_136_0(v16, (__n128)xmmword_323F80);
  v33[1] = v10;
  if (v8)
  {
    uint64_t v17 = OUTLINED_FUNCTION_142_0();
    unint64_t v19 = v8;
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_55_12();
  }

  v16[3].n128_u64[0] = v19;
  v16[4].n128_u64[1] = v17;
  v16[5].n128_u64[0] = 0xD000000000000015LL;
  v16[5].n128_u64[1] = 0x8000000000341AF0LL;
  OUTLINED_FUNCTION_278(v6, v18, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v20 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35((uint64_t)v14, 1LL, v20);
  if (v21)
  {
    uint64_t v22 = OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_248_0(v22, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v16[7].n128_u64[1] = v20;
    uint64_t v23 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_265( (uint64_t)v23,  (uint64_t)v14,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL));
    OUTLINED_FUNCTION_44_1();
  }

  uint64_t v24 = v33[0];
  OUTLINED_FUNCTION_56_0();
  v16[8].n128_u64[0] = 0xD000000000000011LL;
  v16[8].n128_u64[1] = v25;
  if (v4)
  {
    uint64_t v26 = OUTLINED_FUNCTION_140_0();
    unint64_t v27 = v4;
  }

  else
  {
    unint64_t v27 = 0LL;
    uint64_t v26 = 0LL;
    v16[9].n128_u64[1] = 0LL;
    v16[10].n128_u64[0] = 0LL;
  }

  v16[9].n128_u64[0] = v27;
  v16[10].n128_u64[1] = v26;
  v16[11].n128_u64[0] = 0xD00000000000001CLL;
  v16[11].n128_u64[1] = 0x80000000003492D0LL;
  outlined init with copy of SpeakableString?( v24,  (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_35((uint64_t)v12, 1LL, v20);
  if (v21)
  {
    uint64_t v28 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_182_1(v28, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v16[13].n128_u64[1] = v20;
    uint64_t v29 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_265( (uint64_t)v29,  (uint64_t)v12,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL));
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_56_0();
  v16[14].n128_u64[0] = 0xD000000000000011LL;
  v16[14].n128_u64[1] = v30;
  if (v1)
  {
    uint64_t v31 = OUTLINED_FUNCTION_244_0();
    unint64_t v32 = v1;
  }

  else
  {
    unint64_t v32 = 0LL;
    uint64_t v31 = 0LL;
    v16[15].n128_u64[1] = 0LL;
    v16[16].n128_u64[0] = 0LL;
  }

  v16[15].n128_u64[0] = v32;
  v16[16].n128_u64[1] = v31;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_55(0xD00000000000002DLL, 0x80000000003428C0LL);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartCallCATs.unsupportedContactsNoUsableHandleForRedial(completion:)()
{
  return OUTLINED_FUNCTION_13(52LL);
}

uint64_t StartCallCATs.unsupportedContactsNoUsableHandleForRedial()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(52LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(52LL, 0x80000000003428F0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedContactsUnsupportedMmiUssd(completion:)()
{
  return OUTLINED_FUNCTION_13(47LL);
}

uint64_t StartCallCATs.unsupportedContactsUnsupportedMmiUssd()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(47LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(47LL, 0x8000000000342930LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedDestinationType(completion:)()
{
  return OUTLINED_FUNCTION_13(36LL);
}

uint64_t StartCallCATs.unsupportedDestinationType()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(36LL, 0x8000000000343DD0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000027LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedDeviceFaceTimeLink(device:));
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(39LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(39LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.unsupportedDeviceFaceTimeLink(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedDeviceFaceTimeLink(device:));
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_75_11(v3, v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000028LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedDeviceGroupFaceTime(device:));
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(40LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_42_1(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_50_6();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(40LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t StartCallCATs.unsupportedDeviceGroupFaceTime(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedDeviceGroupFaceTime(device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:completion:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_99_6(v4, v5);
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_50_6();
    unint64_t v7 = v0;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_94_7();
  }

  v3[6].n128_u64[0] = v7;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD00000000000002ALL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProvider(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_109(v11);
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v12, v13, v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[3];
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  uint64_t v11 = OUTLINED_FUNCTION_46_8(42LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  OUTLINED_FUNCTION_145_4();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_55_12();
  }

  OUTLINED_FUNCTION_104_5(v4, v5);
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_50_6();
    uint64_t v7 = v0;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_123_3();
  }

  v3[6].n128_u64[0] = v7;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_66_11(42LL, 0x80000000003429C0LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.unsupportedPreferredCallProvider(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProvider(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:completion:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_99_6(v4, v5);
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_50_6();
    unint64_t v7 = v0;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_94_7();
  }

  v3[6].n128_u64[0] = v7;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD00000000000003ELL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_109(v11);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v12, v13, v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[3];
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(62LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_145_4();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_55_12();
  }

  OUTLINED_FUNCTION_104_5(v4, v5);
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_50_6();
    uint64_t v7 = v0;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_123_3();
  }

  v3[6].n128_u64[0] = v7;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(62LL, v8);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessible(completion:)()
{
  return OUTLINED_FUNCTION_13(76LL);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessible()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(76LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(76LL, 0x8000000000343E00LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderProviderDisabledInSettings(completion:)()
{
  return OUTLINED_FUNCTION_13(68LL);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderProviderDisabledInSettings()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(68LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(68LL, 0x8000000000343E50LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:completion:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_52_1();
  }

  OUTLINED_FUNCTION_99_6(v4, v5);
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_50_6();
    unint64_t v7 = v0;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_94_7();
  }

  v3[6].n128_u64[0] = v7;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD00000000000003CLL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_71_5(v10);
  OUTLINED_FUNCTION_109(v11);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_44_12();
  return OUTLINED_FUNCTION_8_47(v12, v13, v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[3];
  uint64_t v9 = OUTLINED_FUNCTION_46_16(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7(v10, (uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v11 = OUTLINED_FUNCTION_46_8(60LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_145_4();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 128LL);
  OUTLINED_FUNCTION_136_0(v3, (__n128)xmmword_31D880);
  if (v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_142_0();
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_55_12();
  }

  OUTLINED_FUNCTION_104_5(v4, v5);
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_50_6();
    uint64_t v7 = v0;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_123_3();
  }

  v3[6].n128_u64[0] = v7;
  v3[7].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_66_11(60LL, v8);
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProviderSettingsRestricted(intent:device:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:completion:)()
{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:completion:)();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:));
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    v1[7] = 0LL;
    v1[8] = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 64);
  v1[6] = v2;
  v1[11] = 0x800000000034BC80LL;
  OUTLINED_FUNCTION_268_0(v7);
  v1[9] = v8;
  v1[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v9 = OUTLINED_FUNCTION_46();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_113_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    v1[7] = 0LL;
    v1[8] = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 56);
  v1[6] = v2;
  v1[11] = 0x800000000034BC80LL;
  OUTLINED_FUNCTION_268_0(v7);
  v1[9] = v8;
  v1[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v9;
  OUTLINED_FUNCTION_30(v9, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  uint64_t v10 = OUTLINED_FUNCTION_40_16(0xD00000000000003ELL);
  return OUTLINED_FUNCTION_12_28(v10, v11, v12, v13);
}

{
  return StartCallCATs.errorWithCodeAirplaneModeEnabled(device:isEmergency:)();
}

uint64_t StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATs.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:));
}

unint64_t lazy protocol witness table accessor for type StartCallCATs.Properties and conformance StartCallCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATs.Properties and conformance StartCallCATs.Properties;
  if (!lazy protocol witness table cache variable for type StartCallCATs.Properties and conformance StartCallCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATs.Properties,  &type metadata for StartCallCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATs.Properties and conformance StartCallCATs.Properties);
  }

  return result;
}

uint64_t type metadata completion function for StartCallCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for StartCallCATs);
}

uint64_t ObjC metadata update function for StartCallCATs()
{
  return type metadata accessor for StartCallCATs(0LL);
}

uint64_t getEnumTagSinglePayload for StartCallCATs.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xBD)
  {
    if (a2 + 67 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 67) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 68;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for StartCallCATs.Properties(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 67 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 67) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xBD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xBC) {
    return ((uint64_t (*)(void))((char *)&loc_162148 + 4 * byte_32A01D[v4]))();
  }
  *a1 = a2 + 67;
  return ((uint64_t (*)(void))((char *)sub_16217C + 4 * byte_32A018[v4]))();
}

uint64_t sub_16217C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_162184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x16218CLL);
  }
  return result;
}

uint64_t sub_162198(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1621A0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 67;
  return result;
}

uint64_t sub_1621A4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1621AC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartCallCATs.Properties()
{
  return &type metadata for StartCallCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_35_23()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_41_20(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t OUTLINED_FUNCTION_43_11@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(a1 + 40) = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_46_16@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = a1;
  v2[10] = 0x656369766564LL;
  v2[11] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_48_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_51_12(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t OUTLINED_FUNCTION_55_12()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 56) = 0LL;
  *(void *)(v0 + 64) = 0LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 64);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  return swift_task_dealloc(v5);
}

void OUTLINED_FUNCTION_73_14()
{
}

void OUTLINED_FUNCTION_74_11()
{
}

uint64_t OUTLINED_FUNCTION_75_11@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return swift_retain(v2);
}

  ;
}

__n128 *OUTLINED_FUNCTION_92_8(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6954656361467369LL;
  result[2].n128_u64[1] = 0xEA0000000000656DLL;
  return result;
}

uint64_t OUTLINED_FUNCTION_94_7()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 104) = 0LL;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_99_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x656369766564LL;
  v2[11] = 0xE600000000000000LL;
  return result;
}

__n128 *OUTLINED_FUNCTION_101_5(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x73656D614E707061LL;
  result[2].n128_u64[1] = 0xE800000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_104_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x656369766564LL;
  v2[11] = 0xE600000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_112_4()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_113_5(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

void OUTLINED_FUNCTION_116_6()
{
  *(void *)(v3 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (v1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v3 + 240) = v0;
  *(void *)(v3 + 264) = v2;
  *(void *)(v3 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x636E657265666E69LL;
  *(void *)(v3 + 280) = 0xEF656372756F5365LL;
}

uint64_t OUTLINED_FUNCTION_117_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

void OUTLINED_FUNCTION_120_5()
{
  *(_BYTE *)(v3 + 240) = v1;
  *(void *)(v3 + 264) = v2;
  strcpy((char *)(v3 + 272), "isWalkieTalkie");
  *(_BYTE *)(v3 + 287) = -18;
  *(_BYTE *)(v3 + 288) = v0;
  *(void *)(v3 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v3 + 320) = v4 + 14;
}

void OUTLINED_FUNCTION_121_5(uint64_t a1@<X8>)
{
  *(void *)(v4 + 144) = v2;
  *(void *)(v4 + 168) = v1;
  strcpy((char *)(v4 + 176), "startingOver");
  *(_BYTE *)(v4 + 189) = 0;
  *(_WORD *)(v4 + 190) = -5120;
  *(_BYTE *)(v4 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(void *)(v4 + 216) = a1;
  *(void *)(v4 + 224) = 0xD000000000000015LL;
}

uint64_t OUTLINED_FUNCTION_123_3()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 104) = 0LL;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_129_5@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = a1;
  return 0LL;
}

void OUTLINED_FUNCTION_130_0(uint64_t a1@<X8>)
{
  *(_BYTE *)(v3 + 96) = v2;
  *(void *)(v3 + 120) = a1;
  strcpy((char *)(v3 + 128), "isMyriadCall");
  *(_BYTE *)(v3 + 141) = 0;
  *(_WORD *)(v3 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -5120;
  *(_BYTE *)(v3 + 144) = v1;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v4;
}

  ;
}

uint64_t OUTLINED_FUNCTION_132_5(uint64_t result)
{
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  strcpy((char *)(v2 + 80), "hintIdentifier");
  *(_BYTE *)(v2 + 95) = -18;
  return result;
}

uint64_t OUTLINED_FUNCTION_137_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x436465776F6C6C61LL;
  v2[11] = 0xEF73746361746E6FLL;
  return result;
}

uint64_t OUTLINED_FUNCTION_139_3()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(void *)(v0 + 160) = 0LL;
  return result;
}

void OUTLINED_FUNCTION_143_2(uint64_t a1@<X8>)
{
  *(_BYTE *)(v2 + 96) = v1;
  *(void *)(v2 + 120) = a1;
  strcpy((char *)(v2 + 128), "rePromptCount");
  *(_WORD *)(v2 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -4864;
}

  ;
}

uint64_t OUTLINED_FUNCTION_148_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x436465776F6C6C61LL;
  v2[11] = 0xEF73746361746E6FLL;
  return result;
}

uint64_t OUTLINED_FUNCTION_150_2(uint64_t result)
{
  *(void *)(v2 + 96) = v1;
  *(void *)(v2 + 120) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_152_3()
{
  *(void *)(v0 + 80) = 0x6574736575716572LL;
  *(void *)(v0 + 88) = 0xEF656C646E614864LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_154_3(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = 0x656772656D457369LL;
  v2[11] = 0xEB0000000079636ELL;
  return result;
}

uint64_t OUTLINED_FUNCTION_155_2(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_165_1(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0x656D614E707061LL;
  v2[23] = 0xE700000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_169_2()
{
}

void OUTLINED_FUNCTION_171_2(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_174_2()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_176_1@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  return outlined init with copy of SpeakableString?(a2, v2, a1);
}

uint64_t OUTLINED_FUNCTION_179_1()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

  ;
}

uint64_t OUTLINED_FUNCTION_182_1(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_183_1(uint64_t a1)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x656369766564LL;
  v2[17] = 0xE600000000000000LL;
  return 0LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_191_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_192_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_194_1(uint64_t result)
{
  v1[21] = result;
  v1[22] = 0x656D614E707061LL;
  v1[23] = 0xE700000000000000LL;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_200_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(result + 40) = (a2 - 32) | 0x8000000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_202_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 88) = (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_203_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[12] = a2;
  v2[15] = result;
  v2[16] = 0x656369766564LL;
  v2[17] = 0xE600000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_205_2@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_207_2(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_212_0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

void *OUTLINED_FUNCTION_214_0()
{
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_215_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_219_0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_220_0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 32LL))(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_222_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_223(uint64_t a1)
{
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *(void *)(v2 + 48) = v1;
  return swift_bridgeObjectRetain(v1);
}

  ;
}

void OUTLINED_FUNCTION_226_0(uint64_t a1@<X8>)
{
  *(void *)(v2 + 328) = (v1 - 32) | 0x8000000000000000LL;
  *(void *)(v2 + 360) = a1;
}

uint64_t OUTLINED_FUNCTION_229_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_230_0(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

  ;
}

void OUTLINED_FUNCTION_232_0()
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

uint64_t OUTLINED_FUNCTION_234_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_235_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_236_0(uint64_t a1)
{
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *(void *)(v2 + 48) = v1;
  return swift_bridgeObjectRetain(v1);
}

void OUTLINED_FUNCTION_238_0()
{
  *(void *)(v0 + 280) = 0xEF656372756F5365LL;
}

uint64_t OUTLINED_FUNCTION_239_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a1 + 48) = v2;
  return *(unsigned int *)(a2 + 4);
}

uint64_t OUTLINED_FUNCTION_240()
{
  return outlined init with copy of SpeakableString?(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_241(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_244_0()
{
  return type metadata accessor for DialogPersonHandle(0LL);
}

__n128 *OUTLINED_FUNCTION_247_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_248_0(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_249_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_250()
{
  return *(void *)(v0 + 8);
}

  ;
}

uint64_t OUTLINED_FUNCTION_254_0(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_255_0(uint64_t result)
{
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_256_1(uint64_t result)
{
  v2[6] = v1;
  v2[9] = result;
  v2[10] = v3 | 4;
  return result;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_260(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(a1, a2, v2);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_265@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

  ;
}

__n128 *OUTLINED_FUNCTION_267_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[5].n128_u64[1] = (v2 - 32) | 0x8000000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_268_0(char a1@<W8>)
{
  *(void *)(v2 + 120) = v1;
  *(_BYTE *)(v2 + 96) = a1;
}

void *OUTLINED_FUNCTION_269_0()
{
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_272_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 136) = (a2 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_275_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 88) = (a2 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_277_0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 224) = v2;
  *(void *)(v1 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (a1 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_278(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(a1, v3, a3);
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_281(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = v3 + 11;
  return result;
}

  ;
}

void *specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)( uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  v112 = a5;
  v132 = a4;
  uint64_t v113 = a3;
  uint64_t v130 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin();
  BOOL v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v116 = (char *)&v110 - v8;
  uint64_t v121 = type metadata accessor for USOParse(0LL);
  uint64_t v131 = *(void *)(v121 - 8);
  __chkstk_darwin();
  v120 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin();
  v123 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v126 = *(void *)(v11 - 8);
  uint64_t v127 = v11;
  __chkstk_darwin();
  v115 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v119 = (char *)&v110 - v13;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  __chkstk_darwin();
  uint64_t v124 = (uint64_t)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v128 = (uint64_t)&v110 - v15;
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v110 - v16);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v110 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v117 = *(void *)(v20 - 8);
  __chkstk_darwin();
  v114 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v122 = (char *)&v110 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v129 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v129);
  os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
  BOOL v27 = os_log_type_enabled(v24, v26);
  v118 = a2;
  if (v27)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    v111 = v19;
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&__int128 v133 = v29;
    uint64_t v135 = 0LL;
    v136[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v28 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v26, "%s convert parse to INIntent", v28, 0xCu);
    swift_arrayDestroy(v30, 1LL);
    uint64_t v31 = v30;
    unint64_t v19 = v111;
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v32 = v130;
  outlined init with copy of Parse?(v130, (uint64_t)v19);
  uint64_t v33 = type metadata accessor for Parse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v33);
  uint64_t v35 = v131;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v19, (uint64_t)v17);
    uint64_t v36 = *(void *)(v33 - 8);
    int v37 = (*(uint64_t (**)(void *, uint64_t))(v36 + 88))(v17, v33);
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      uint64_t v38 = *v17;
      uint64_t v39 = (uint64_t)v123;
      static ConversionUtils.toUserParse(from:)(*v17);
      uint64_t v40 = v127;
      if (__swift_getEnumTagSinglePayload(v39, 1LL, v127) == 1)
      {
        uint64_t v41 = outlined destroy of SpeakableString?( v39,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v45 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v44 = 136315138;
          *(void *)&__int128 v133 = v45;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v44 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v42,  v43,  "%s couldn't transform UserDialogAct into UserParse to get the UDAs.",  v44,  0xCu);
          swift_arrayDestroy(v45, 1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
          swift_slowDealloc(v44, -1LL, -1LL);
        }

        swift_unknownObjectRelease(v38);
        goto LABEL_30;
      }

      uint64_t v56 = v126;
      unint64_t v57 = v119;
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 32))(v119, v39, v40);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v58);
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        uint64_t v59 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v63 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v62 = 136315138;
          *(void *)&__int128 v133 = v63;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v62 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v62, 0xCu);
          swift_arrayDestroy(v63, 1LL);
          swift_slowDealloc(v63, -1LL, -1LL);
          swift_slowDealloc(v62, -1LL, -1LL);

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v119, v127);
        }

        else
        {

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v57, v127);
        }

{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_s *v24;
  uint64_t v25;
  os_log_type_t v26;
  BOOL v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_s *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  os_log_s *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  os_log_s *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  os_log_s *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t (*v90)(char *, uint64_t);
  os_log_s *v91;
  uint64_t v92;
  os_log_type_t v93;
  uint64_t v94;
  uint8_t *v95;
  uint64_t v96;
  id v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_s *v103;
  os_log_type_t v104;
  uint8_t *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  void *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136[4];
  v112 = a5;
  v132 = a4;
  uint64_t v113 = a3;
  uint64_t v130 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin();
  BOOL v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v116 = (char *)&v110 - v8;
  uint64_t v121 = type metadata accessor for USOParse(0LL);
  uint64_t v131 = *(void *)(v121 - 8);
  __chkstk_darwin();
  v120 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin();
  v123 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v126 = *(void *)(v11 - 8);
  uint64_t v127 = v11;
  __chkstk_darwin();
  v115 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v119 = (char *)&v110 - v13;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  __chkstk_darwin();
  uint64_t v124 = (uint64_t)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v128 = (uint64_t)&v110 - v15;
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v110 - v16);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v110 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v117 = *(void *)(v20 - 8);
  __chkstk_darwin();
  v114 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v122 = (char *)&v110 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v129 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v129);
  os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
  BOOL v27 = os_log_type_enabled(v24, v26);
  v118 = a2;
  if (v27)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    v111 = v19;
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&__int128 v133 = v29;
    uint64_t v135 = 0LL;
    v136[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v28 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v26, "%s convert parse to INIntent", v28, 0xCu);
    swift_arrayDestroy(v30, 1LL);
    uint64_t v31 = v30;
    unint64_t v19 = v111;
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v32 = v130;
  outlined init with copy of Parse?(v130, (uint64_t)v19);
  uint64_t v33 = type metadata accessor for Parse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v33);
  uint64_t v35 = v131;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v19, (uint64_t)v17);
    uint64_t v36 = *(void *)(v33 - 8);
    int v37 = (*(uint64_t (**)(void *, uint64_t))(v36 + 88))(v17, v33);
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      uint64_t v38 = *v17;
      uint64_t v39 = (uint64_t)v123;
      static ConversionUtils.toUserParse(from:)(*v17);
      uint64_t v40 = v127;
      if (__swift_getEnumTagSinglePayload(v39, 1LL, v127) == 1)
      {
        uint64_t v41 = outlined destroy of SpeakableString?( v39,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v45 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v44 = 136315138;
          *(void *)&__int128 v133 = v45;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v44 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v42,  v43,  "%s couldn't transform UserDialogAct into UserParse to get the UDAs.",  v44,  0xCu);
          swift_arrayDestroy(v45, 1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
          swift_slowDealloc(v44, -1LL, -1LL);
        }

        swift_unknownObjectRelease(v38);
        goto LABEL_30;
      }

      uint64_t v56 = v126;
      unint64_t v57 = v119;
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 32))(v119, v39, v40);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v58);
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        uint64_t v59 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v63 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v62 = 136315138;
          *(void *)&__int128 v133 = v63;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v62 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v62, 0xCu);
          swift_arrayDestroy(v63, 1LL);
          swift_slowDealloc(v63, -1LL, -1LL);
          swift_slowDealloc(v62, -1LL, -1LL);

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v119, v127);
        }

        else
        {

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v57, v127);
        }

{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_s *v24;
  uint64_t v25;
  os_log_type_t v26;
  BOOL v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_s *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  os_log_s *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  os_log_s *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  os_log_s *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t (*v90)(char *, uint64_t);
  os_log_s *v91;
  uint64_t v92;
  os_log_type_t v93;
  uint64_t v94;
  uint8_t *v95;
  uint64_t v96;
  id v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  os_log_s *v106;
  os_log_type_t v107;
  uint8_t *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  void *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139[4];
  v115 = a5;
  uint64_t v135 = a4;
  v116 = a3;
  __int128 v133 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin();
  BOOL v7 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v119 = (char *)&v113 - v8;
  uint64_t v124 = type metadata accessor for USOParse(0LL);
  uint64_t v134 = *(void *)(v124 - 8);
  __chkstk_darwin();
  v123 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin();
  uint64_t v126 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v129 = *(void *)(v11 - 8);
  uint64_t v130 = v11;
  __chkstk_darwin();
  v118 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v122 = (char *)&v113 - v13;
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  __chkstk_darwin();
  uint64_t v127 = (uint64_t)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v131 = (uint64_t)&v113 - v15;
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v113 - v16);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v113 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  v120 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v125 = (char *)&v113 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = type metadata accessor for Logger(0LL);
  v132 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v132);
  os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
  BOOL v27 = os_log_type_enabled(v24, v26);
  uint64_t v121 = a2;
  if (v27)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    v114 = v19;
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&v136 = v29;
    v138 = 0LL;
    v139[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v28 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v26, "%s convert parse to INIntent", v28, 0xCu);
    swift_arrayDestroy(v30, 1LL);
    uint64_t v31 = v30;
    unint64_t v19 = v114;
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v32 = v133;
  outlined init with copy of Parse?(v133, (uint64_t)v19);
  uint64_t v33 = type metadata accessor for Parse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v33);
  uint64_t v35 = v134;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v19, (uint64_t)v17);
    uint64_t v36 = *(void *)(v33 - 8);
    int v37 = (*(uint64_t (**)(void *, uint64_t))(v36 + 88))(v17, v33);
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      uint64_t v38 = *v17;
      uint64_t v39 = (uint64_t)v126;
      static ConversionUtils.toUserParse(from:)(*v17);
      uint64_t v40 = v130;
      if (__swift_getEnumTagSinglePayload(v39, 1LL, v130) == 1)
      {
        uint64_t v41 = outlined destroy of SpeakableString?( v39,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v45 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v44 = 136315138;
          *(void *)&v136 = v45;
          v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v44 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v42,  v43,  "%s couldn't transform UserDialogAct into UserParse to get the UDAs.",  v44,  0xCu);
          swift_arrayDestroy(v45, 1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
          swift_slowDealloc(v44, -1LL, -1LL);
        }

        swift_unknownObjectRelease(v38);
        goto LABEL_30;
      }

      uint64_t v56 = v129;
      unint64_t v57 = v122;
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 32))(v122, v39, v40);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v58);
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        uint64_t v59 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v63 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v62 = 136315138;
          *(void *)&v136 = v63;
          v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v62 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v62, 0xCu);
          swift_arrayDestroy(v63, 1LL);
          swift_slowDealloc(v63, -1LL, -1LL);
          swift_slowDealloc(v62, -1LL, -1LL);

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v122, v130);
        }

        else
        {

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v57, v130);
        }

{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_s *v24;
  uint64_t v25;
  os_log_type_t v26;
  BOOL v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_s *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  os_log_s *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  os_log_s *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  os_log_s *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t (*v90)(char *, uint64_t);
  os_log_s *v91;
  uint64_t v92;
  os_log_type_t v93;
  uint64_t v94;
  uint8_t *v95;
  uint64_t v96;
  id v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_s *v103;
  os_log_type_t v104;
  uint8_t *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  void *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136[4];
  v112 = a5;
  v132 = a4;
  uint64_t v113 = a3;
  uint64_t v130 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin();
  BOOL v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v116 = (char *)&v110 - v8;
  uint64_t v121 = type metadata accessor for USOParse(0LL);
  uint64_t v131 = *(void *)(v121 - 8);
  __chkstk_darwin();
  v120 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin();
  v123 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v126 = *(void *)(v11 - 8);
  uint64_t v127 = v11;
  __chkstk_darwin();
  v115 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v119 = (char *)&v110 - v13;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  __chkstk_darwin();
  uint64_t v124 = (uint64_t)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v128 = (uint64_t)&v110 - v15;
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v110 - v16);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v110 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v117 = *(void *)(v20 - 8);
  __chkstk_darwin();
  v114 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v122 = (char *)&v110 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v129 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v129);
  os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
  BOOL v27 = os_log_type_enabled(v24, v26);
  v118 = a2;
  if (v27)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    v111 = v19;
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&__int128 v133 = v29;
    uint64_t v135 = 0LL;
    v136[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v28 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v26, "%s convert parse to INIntent", v28, 0xCu);
    swift_arrayDestroy(v30, 1LL);
    uint64_t v31 = v30;
    unint64_t v19 = v111;
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v32 = v130;
  outlined init with copy of Parse?(v130, (uint64_t)v19);
  uint64_t v33 = type metadata accessor for Parse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v33);
  uint64_t v35 = v131;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v19, (uint64_t)v17);
    uint64_t v36 = *(void *)(v33 - 8);
    int v37 = (*(uint64_t (**)(void *, uint64_t))(v36 + 88))(v17, v33);
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      uint64_t v38 = *v17;
      uint64_t v39 = (uint64_t)v123;
      static ConversionUtils.toUserParse(from:)(*v17);
      uint64_t v40 = v127;
      if (__swift_getEnumTagSinglePayload(v39, 1LL, v127) == 1)
      {
        uint64_t v41 = outlined destroy of SpeakableString?( v39,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v45 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v44 = 136315138;
          *(void *)&__int128 v133 = v45;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v44 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v42,  v43,  "%s couldn't transform UserDialogAct into UserParse to get the UDAs.",  v44,  0xCu);
          swift_arrayDestroy(v45, 1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
          swift_slowDealloc(v44, -1LL, -1LL);
        }

        swift_unknownObjectRelease(v38);
        goto LABEL_30;
      }

      uint64_t v56 = v126;
      unint64_t v57 = v119;
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 32))(v119, v39, v40);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v58);
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        uint64_t v59 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v63 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v62 = 136315138;
          *(void *)&__int128 v133 = v63;
          uint64_t v135 = 0LL;
          v136[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v136[0], (uint64_t *)&v133);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v62 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v62, 0xCu);
          swift_arrayDestroy(v63, 1LL);
          swift_slowDealloc(v63, -1LL, -1LL);
          swift_slowDealloc(v62, -1LL, -1LL);

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v119, v127);
        }

        else
        {

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v57, v127);
        }

id specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)( uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  v115 = a5;
  id v135 = a4;
  uint64_t v116 = a3;
  uint64_t v133 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin();
  BOOL v7 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v119 = (char *)&v113 - v8;
  uint64_t v124 = type metadata accessor for USOParse(0LL);
  uint64_t v134 = *(void *)(v124 - 8);
  __chkstk_darwin();
  v123 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin();
  uint64_t v126 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v129 = *(void *)(v11 - 8);
  uint64_t v130 = v11;
  __chkstk_darwin();
  v118 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v122 = (char *)&v113 - v13;
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  __chkstk_darwin();
  uint64_t v127 = (uint64_t)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v131 = (uint64_t)&v113 - v15;
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v113 - v16);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v113 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v120 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v125 = (char *)&v113 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v132 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v132);
  os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
  BOOL v27 = os_log_type_enabled(v24, v26);
  uint64_t v121 = a2;
  if (v27)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    v114 = v19;
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&__int128 v136 = v29;
    uint64_t v138 = 0LL;
    v139[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v28 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v26, "%s convert parse to INIntent", v28, 0xCu);
    swift_arrayDestroy(v30, 1LL);
    uint64_t v31 = v30;
    unint64_t v19 = v114;
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v32 = v133;
  outlined init with copy of Parse?(v133, (uint64_t)v19);
  uint64_t v33 = type metadata accessor for Parse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v33);
  uint64_t v35 = v134;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v19, (uint64_t)v17);
    uint64_t v36 = *(void *)(v33 - 8);
    int v37 = (*(uint64_t (**)(void *, uint64_t))(v36 + 88))(v17, v33);
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      uint64_t v38 = *v17;
      uint64_t v39 = (uint64_t)v126;
      static ConversionUtils.toUserParse(from:)(*v17);
      uint64_t v40 = v130;
      if (__swift_getEnumTagSinglePayload(v39, 1LL, v130) == 1)
      {
        uint64_t v41 = outlined destroy of SpeakableString?( v39,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v45 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v44 = 136315138;
          *(void *)&__int128 v136 = v45;
          uint64_t v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v44 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v42,  v43,  "%s couldn't transform UserDialogAct into UserParse to get the UDAs.",  v44,  0xCu);
          swift_arrayDestroy(v45, 1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
          swift_slowDealloc(v44, -1LL, -1LL);
        }

        swift_unknownObjectRelease(v38);
        goto LABEL_30;
      }

      uint64_t v56 = v129;
      unint64_t v57 = v122;
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 32))(v122, v39, v40);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v58);
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        uint64_t v59 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v63 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v62 = 136315138;
          *(void *)&__int128 v136 = v63;
          uint64_t v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v62 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v62, 0xCu);
          swift_arrayDestroy(v63, 1LL);
          swift_slowDealloc(v63, -1LL, -1LL);
          swift_slowDealloc(v62, -1LL, -1LL);

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v122, v130);
        }

        else
        {

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v57, v130);
        }

void *specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)( uint64_t a1, void *a2, char *a3, void *a4, void *a5)
{
  v115 = a5;
  id v135 = a4;
  uint64_t v116 = a3;
  uint64_t v133 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  __chkstk_darwin();
  BOOL v7 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v119 = (char *)&v113 - v8;
  uint64_t v124 = type metadata accessor for USOParse(0LL);
  uint64_t v134 = *(void *)(v124 - 8);
  __chkstk_darwin();
  v123 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  __chkstk_darwin();
  uint64_t v126 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v129 = *(void *)(v11 - 8);
  uint64_t v130 = v11;
  __chkstk_darwin();
  v118 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v122 = (char *)&v113 - v13;
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  __chkstk_darwin();
  uint64_t v127 = (uint64_t)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v131 = (uint64_t)&v113 - v15;
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v113 - v16);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v113 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v120 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v125 = (char *)&v113 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v132 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v132);
  os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
  BOOL v27 = os_log_type_enabled(v24, v26);
  uint64_t v121 = a2;
  if (v27)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    v114 = v19;
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    *(void *)&__int128 v136 = v29;
    uint64_t v138 = 0LL;
    v139[0] = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
    uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v28 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v26, "%s convert parse to INIntent", v28, 0xCu);
    swift_arrayDestroy(v30, 1LL);
    uint64_t v31 = v30;
    unint64_t v19 = v114;
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v32 = v133;
  outlined init with copy of Parse?(v133, (uint64_t)v19);
  uint64_t v33 = type metadata accessor for Parse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v33);
  uint64_t v35 = v134;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v19, (uint64_t)v17);
    uint64_t v36 = *(void *)(v33 - 8);
    int v37 = (*(uint64_t (**)(void *, uint64_t))(v36 + 88))(v17, v33);
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(void *, uint64_t))(v36 + 96))(v17, v33);
      uint64_t v38 = *v17;
      uint64_t v39 = (uint64_t)v126;
      static ConversionUtils.toUserParse(from:)(*v17);
      uint64_t v40 = v130;
      if (__swift_getEnumTagSinglePayload(v39, 1LL, v130) == 1)
      {
        uint64_t v41 = outlined destroy of SpeakableString?( v39,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v45 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v44 = 136315138;
          *(void *)&__int128 v136 = v45;
          uint64_t v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v44 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v42,  v43,  "%s couldn't transform UserDialogAct into UserParse to get the UDAs.",  v44,  0xCu);
          swift_arrayDestroy(v45, 1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
          swift_slowDealloc(v44, -1LL, -1LL);
        }

        swift_unknownObjectRelease(v38);
        goto LABEL_30;
      }

      uint64_t v56 = v129;
      unint64_t v57 = v122;
      uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 32))(v122, v39, v40);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v58);
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1LL, v20) == 1)
      {
        uint64_t v59 = outlined destroy of SpeakableString?( (uint64_t)v7,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v63 = swift_slowAlloc(32LL, -1LL);
          *(_DWORD *)uint64_t v62 = 136315138;
          *(void *)&__int128 v136 = v63;
          uint64_t v138 = 0LL;
          v139[0] = 0xE000000000000000LL;
          DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of specialized static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:),  0LL,  0LL);
          uint64_t v138 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v138, v139[0], (uint64_t *)&v136);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, v139, v62 + 4);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v60, v61, "#%s NLv4IntentOnly: No user dialog act found in userParse.", v62, 0xCu);
          swift_arrayDestroy(v63, 1LL);
          swift_slowDealloc(v63, -1LL, -1LL);
          swift_slowDealloc(v62, -1LL, -1LL);

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v122, v130);
        }

        else
        {

          swift_unknownObjectRelease(v38);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v57, v130);
        }

void *static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:)( uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v141 = a6;
  uint64_t v142 = a7;
  uint64_t v126 = a5;
  uint64_t v125 = a3;
  uint64_t v127 = a2;
  uint64_t v147 = a1;
  uint64_t v133 = type metadata accessor for USOParse(0LL);
  uint64_t v148 = *(void *)(v133 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v130 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_26((uint64_t)&v123 - v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v11);
  uint64_t v143 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v140 = *(void *)(v143 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v129 = v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_26((uint64_t)&v123 - v13);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v138 = v14;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v144 = (uint64_t)&v123 - v15;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v123 - v16);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v123 - v18;
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v128 = v22;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_26((uint64_t)&v123 - v23);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v146 = __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v146);
  os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
  BOOL v28 = os_log_type_enabled(v25, v27);
  v145 = v19;
  uint64_t v134 = v21;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v30 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v124 = a4;
    uint64_t v31 = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    *(void *)&__int128 v149 = v30;
    OUTLINED_FUNCTION_15_43();
    OUTLINED_FUNCTION_1_59( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
    uint64_t v151 = OUTLINED_FUNCTION_2_55();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152, v29 + 4);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_57_0(&dword_0, v25, v27, "%s convert parse to INIntent", v29);
    OUTLINED_FUNCTION_17_0(v31);
    uint64_t v32 = v31;
    a4 = v124;
    unint64_t v19 = v145;
    OUTLINED_FUNCTION_0_2(v32);
    OUTLINED_FUNCTION_0_2((uint64_t)v29);
  }

  uint64_t v33 = v147;
  outlined init with copy of Parse?(v147, (uint64_t)v19);
  uint64_t v34 = type metadata accessor for Parse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v34);
  uint64_t v36 = v148;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Parse?((uint64_t)v19, (uint64_t)v17);
    int v37 = *(uint64_t (***)(uint64_t, uint64_t))(v34 - 8);
    int v38 = v37[11]((uint64_t)v17, v34);
    if (v38 == enum case for Parse.NLv4IntentOnly(_:))
    {
      OUTLINED_FUNCTION_20_33(v37[12]);
      uint64_t v39 = v137;
      static ConversionUtils.toUserParse(from:)(*v17);
      uint64_t v40 = v143;
      if (__swift_getEnumTagSinglePayload(v39, 1LL, v143) == 1)
      {
        outlined destroy of SpeakableString?( v39,  &demangling cache variable for type metadata for Siri_Nlu_External_UserParse?);
        uint64_t v41 = (os_log_s *)OUTLINED_FUNCTION_14_40();
        os_log_type_t v42 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_33_10(v42))
        {
          os_log_type_t v43 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v44 = OUTLINED_FUNCTION_7_0(32LL);
          *(_DWORD *)os_log_type_t v43 = 136315138;
          *(void *)&__int128 v149 = v44;
          OUTLINED_FUNCTION_15_43();
          OUTLINED_FUNCTION_1_59( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
          uint64_t v45 = OUTLINED_FUNCTION_2_55();
          OUTLINED_FUNCTION_19_31(v45);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_57_0( &dword_0,  v41,  (os_log_type_t)v17,  "%s couldn't transform UserDialogAct into UserParse to get the UDAs.",  v43);
          OUTLINED_FUNCTION_17_0(v44);
          OUTLINED_FUNCTION_0_2(v44);
          OUTLINED_FUNCTION_0_2((uint64_t)v43);
        }

        uint64_t v46 = OUTLINED_FUNCTION_78_3();
        goto LABEL_31;
      }

      uint64_t v59 = v140;
      uint64_t v60 = v136;
      uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 32))(v136, v39, v40);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v61);
      uint64_t v52 = v131;
      specialized Collection.first.getter();
      OUTLINED_FUNCTION_62();
      if (__swift_getEnumTagSinglePayload(v52, 1LL, v20) == 1)
      {
        outlined destroy of SpeakableString?( v52,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        uint64_t v62 = (os_log_s *)OUTLINED_FUNCTION_14_40();
        os_log_type_t v63 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_33_10(v63))
        {
          uint64_t v64 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v65 = OUTLINED_FUNCTION_7_0(32LL);
          *(_DWORD *)uint64_t v64 = 136315138;
          *(void *)&__int128 v149 = v65;
          OUTLINED_FUNCTION_15_43();
          OUTLINED_FUNCTION_1_59( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
          uint64_t v66 = OUTLINED_FUNCTION_2_55();
          OUTLINED_FUNCTION_19_31(v66);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_57_0( &dword_0,  v62,  (os_log_type_t)v60,  "#%s NLv4IntentOnly: No user dialog act found in userParse.",  v64);
          OUTLINED_FUNCTION_17_0(v65);
          OUTLINED_FUNCTION_0_2(v65);
          OUTLINED_FUNCTION_0_2((uint64_t)v64);

          OUTLINED_FUNCTION_78_3();
          uint64_t v67 = OUTLINED_FUNCTION_36_19();
          uint64_t v69 = v143;
        }

        else
        {

          OUTLINED_FUNCTION_78_3();
          uint64_t v67 = OUTLINED_FUNCTION_36_19();
          uint64_t v69 = v40;
        }

        uint64_t v46 = v68(v67, v69);
        goto LABEL_31;
      }

      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v40);
      OUTLINED_FUNCTION_78_3();
      goto LABEL_25;
    }

    if (v38 == enum case for Parse.uso(_:))
    {
      OUTLINED_FUNCTION_20_33(v37[12]);
      uint64_t v47 = v132;
      uint64_t v48 = v133;
      uint64_t v49 = (*(uint64_t (**)(void))(v36 + 32))();
      uint64_t v50 = v129;
      uint64_t v51 = USOParse.userParse.getter(v49);
      Siri_Nlu_External_UserParse.userDialogActs.getter(v51);
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v50, v143);
      uint64_t v52 = v130;
      specialized Collection.first.getter();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v52, 1LL, v20) == 1)
      {
        outlined destroy of SpeakableString?( v52,  &demangling cache variable for type metadata for Siri_Nlu_External_UserDialogAct?);
        os_log_type_t v53 = (void *)OUTLINED_FUNCTION_14_40();
        os_log_type_t v54 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_7_7(v54))
        {
          uint64_t v55 = OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v56 = OUTLINED_FUNCTION_7_0(32LL);
          OUTLINED_FUNCTION_4_62(v56, 4.8149e-34);
          OUTLINED_FUNCTION_1_59( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.convertToIntent(parse:sharedGlobals:app:previousIntent:groupResolver:));
          uint64_t v151 = OUTLINED_FUNCTION_2_55();
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152, v36);
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_7_60(&dword_0, v57, v58, "%s USO: No user dialog act found in userParse.");
          OUTLINED_FUNCTION_10_49();
          OUTLINED_FUNCTION_0_2(v56);
          OUTLINED_FUNCTION_0_2(v55);

          uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v148 + 8))(v132, v133);
        }

        else
        {

          uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v47, v48);
        }

id static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)( void *a1, int a2, uint64_t a3, id a4)
{
  id v6 = [a1 _metadata];
  NSString v7 = v6;
  if (v6)
  {
    id v8 = [v6 intentId];

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      os_log_type_t v4 = v9;

      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }

    else
    {
      NSString v7 = 0LL;
    }
  }

  [a1 setIdentifier:v7];

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  id v53 = a1;
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v53);
  os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (OUTLINED_FUNCTION_7_7(v13))
  {
    uint64_t v14 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v15 = OUTLINED_FUNCTION_7_0(64LL);
    *(_DWORD *)uint64_t v14 = 136315394;
    unint64_t v58 = 0xE000000000000000LL;
    uint64_t v59 = v15;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)( (uint64_t)&type metadata for String,  (uint64_t)&outlined read-only object #0 of static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:),  0LL,  0LL);
    uint64_t v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v14 + 4);
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v14 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    id v16 = [v53 debugDescription];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v19 = v18;

    uint64_t v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v59);
    int v20 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v14 + 14);
    OUTLINED_FUNCTION_26_32(v20, v21, v22, v23, v24, v25, v26, v27, v53);
    OUTLINED_FUNCTION_26_32(v28, v29, v30, v31, v32, v33, v34, v35, v54);
    OUTLINED_FUNCTION_87_0();
    _os_log_impl(&dword_0, v11, v4, "%s Converted intent: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2LL);
    OUTLINED_FUNCTION_0_2(v15);
    OUTLINED_FUNCTION_0_2(v14);
  }

  else
  {

    OUTLINED_FUNCTION_26_32(v36, v37, v38, v39, v40, v41, v42, v43, v53);
    OUTLINED_FUNCTION_26_32(v44, v45, v46, v47, v48, v49, v50, v51, v56);
  }

  return v55;
}

void static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  HIDWORD(v35) = a4;
  uint64_t v12 = type metadata accessor for Locale(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = a7[3];
  uint64_t v18 = a7[4];
  unint64_t v19 = __swift_project_boxed_opaque_existential_1(a7, v17);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 56))(v17, v18);
  LOBYTE(v17) = OUTLINED_FUNCTION_30_24(v20);
  uint64_t v21 = OUTLINED_FUNCTION_38_1();
  if ((v17 & 1) != 0)
  {
    static SiriKitEventSender.current.getter(&v44, v21);
    uint64_t v22 = OUTLINED_FUNCTION_28_30();
    OUTLINED_FUNCTION_73_7(v22);
    uint64_t v23 = OUTLINED_FUNCTION_41_21();
    specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)( a1,  a3,  BYTE4(v35) & 1,  a5,  a6,  (uint64_t)a7,  0LL,  1LL,  (uint64_t)&v44,  (uint64_t)v19,  a8,  v23,  a2,  v34,  v35,  a3,  a5,  a6,  v39,  v40,  v41,  (uint64_t)v42,  v43,  v44,  v45);
    OUTLINED_FUNCTION_9_49();
  }

  else
  {
    uint64_t v24 = a7[3];
    uint64_t v25 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v24);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 8))(&v44, v24, v25);
    uint64_t v26 = v46;
    uint64_t v27 = v47;
    int v28 = __swift_project_boxed_opaque_existential_1(&v44, v46);
    uint64_t v29 = dispatch thunk of DeviceState.siriLocale.getter(v26, v27);
    static SiriKitEventSender.current.getter(&v39, v29);
    uint64_t v30 = OUTLINED_FUNCTION_28_30();
    OUTLINED_FUNCTION_73_7(v30);
    uint64_t v33 = OUTLINED_FUNCTION_41_21();
    OUTLINED_FUNCTION_33_32();
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( a1,  a3,  v31,  a5,  v16,  a6,  (uint64_t)a7,  0LL,  v32,  (uint64_t)&v39,  (uint64_t)v28,  v33,  a2,  v34,  v35,  a3,  a5,  a6,  v39,  v40,  v41,  v42,  v43,  v44,  v45);
    OUTLINED_FUNCTION_9_49();
    __swift_destroy_boxed_opaque_existential_1(&v39);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  }

  __swift_destroy_boxed_opaque_existential_1(&v44);
  OUTLINED_FUNCTION_7_5();
}

void specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

{
  OUTLINED_FUNCTION_21_32(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_13_2();
}

{
  OUTLINED_FUNCTION_21_32(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_13_2();
}

void specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, void, uint64_t, void *, uint64_t, void, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t), void (*a11)(uint64_t, uint64_t))
{
  uint64_t v36 = type metadata accessor for Locale(0LL);
  uint64_t v15 = *(void *)(v36 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = *(void *)(a8 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v22 = v21 - v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v21 - v20, a7, a8);
  OUTLINED_FUNCTION_27_33();
  uint64_t v23 = OUTLINED_FUNCTION_31_26();
  uint64_t v25 = v24(v23);
  char v26 = OUTLINED_FUNCTION_30_24(v25);
  uint64_t v27 = OUTLINED_FUNCTION_38_1();
  if ((v26 & 1) != 0)
  {
    static SiriKitEventSender.current.getter(v42, v27);
    uint64_t v28 = OUTLINED_FUNCTION_28_30();
    uint64_t v29 = OUTLINED_FUNCTION_73_7(v28);
    a10(a1, a2, a3 & 1, a4, a5, a6, 0LL, 1LL, v42, v29, v22, a8, a9);
    OUTLINED_FUNCTION_9_49();
  }

  else
  {
    OUTLINED_FUNCTION_27_33();
    uint64_t v30 = OUTLINED_FUNCTION_31_26();
    v31(v30);
    __swift_project_boxed_opaque_existential_1(v42, v42[3]);
    uint64_t v32 = OUTLINED_FUNCTION_31_26();
    uint64_t v34 = dispatch thunk of DeviceState.siriLocale.getter(v32, v33);
    static SiriKitEventSender.current.getter(v41, v34);
    uint64_t v35 = OUTLINED_FUNCTION_28_30();
    OUTLINED_FUNCTION_73_7(v35);
    __swift_project_boxed_opaque_existential_1(a5, a5[3]);
    OUTLINED_FUNCTION_33_32();
    a11(a1, a2);
    OUTLINED_FUNCTION_9_49();
    __swift_destroy_boxed_opaque_existential_1(v41);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v36);
  }

  __swift_destroy_boxed_opaque_existential_1(v42);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, a8);
  OUTLINED_FUNCTION_7_5();
}

void OUTLINED_FUNCTION_1_59(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_2_55()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( *(void *)(v0 - 128),  *(void *)(v0 - 120),  (uint64_t *)(v0 - 168));
}

uint64_t OUTLINED_FUNCTION_4_62(uint64_t result, float a2)
{
  float *v2 = a2;
  *(void *)(v3 - 168) = result;
  *(void *)(v3 - 128) = 0LL;
  *(void *)(v3 - 120) = 0xE000000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_7_60(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_9_49()
{
  return swift_release(v0);
}

uint64_t OUTLINED_FUNCTION_10_49()
{
  return swift_arrayDestroy(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_13_50(uint64_t a1)
{
  *(void *)(v3 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 128, v3 - 120, v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_40()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_15_43()
{
  *(void *)(v0 - 128) = 0LL;
  *(void *)(v0 - 120) = 0xE000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_19_31(uint64_t a1)
{
  *(void *)(v4 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 - 128, v3 + 8, v2, v1);
}

uint64_t OUTLINED_FUNCTION_20_33@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

void OUTLINED_FUNCTION_26_32(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
}

uint64_t OUTLINED_FUNCTION_28_30()
{
  return type metadata accessor for EmergencyContactResolution();
}

uint64_t OUTLINED_FUNCTION_30_24(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
}

uint64_t OUTLINED_FUNCTION_31_26()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_35_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v4, a4);
}

uint64_t OUTLINED_FUNCTION_36_19()
{
  return *(void *)(v0 - 272);
}

uint64_t OUTLINED_FUNCTION_41_21()
{
  return swift_getObjectType(v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional __swiftcall PhoneCallDisplayTextCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_16A598 + 4 * aW[a1]))( 0xD000000000000028LL,  0x8000000000342E40LL);
}

void sub_16A598()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.Properties()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDisplayTextCATsSimple.addToCallButtonText()()
{
  unsigned __int8 v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(40LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

uint64_t static String.UsoAttributeNameLabel.getter()
{
  return 0x6C6562616CLL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(40LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.appSettings(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.appSettings(appName:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    os_log_type_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(32LL);
  return OUTLINED_FUNCTION_12_22(v11, v12, v13, v14);
}

void PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds.rawValue.getter()
{
  return 0x6974746553707061LL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.appSettingsAsLabels(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.appSettingsAsLabels(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(32LL);
  return OUTLINED_FUNCTION_11_22(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.callButtonText(label:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.callButtonText(label:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_58_6(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)PhoneCallDisplayTextCATs.callButtonText(label:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(35LL);
  return OUTLINED_FUNCTION_12_22(v11, v12, v13, v14);
}

void PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.callButtonTextAsLabels(label:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.callButtonTextAsLabels(label:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_58_6(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(35LL);
  return OUTLINED_FUNCTION_11_22(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelButtonText()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(37LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds.rawValue.getter()
{
  return 0x6C65636E6163LL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelButtonTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(37LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelledText()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds.rawValue.getter()
{
  return 0x64656C65636E6163LL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.cancelledTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(34LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.changeApp()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(30LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t PhoneCallDisplayTextCATsSimple.changeAppAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(30LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.changeText()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(31LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.changeTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(31LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.contactComposition()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(39LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::ContactCompositionDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x546563614677656ELL;
  }
  if (a1 == 1) {
    return 28532LL;
  }
  return 0x6F68576F74LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::ContactCompositionDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::ContactCompositionDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDisplayTextCATsSimple.contactCompositionAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(39LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds and conformance PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencySashTitle()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(39LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencySashTitleAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(39LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServices()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

unint64_t PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds.rawValue.getter()
{
  return 0xD000000000000011LL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds( void *a1@<X8>)
{
  *a1 = 0xD000000000000011LL;
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServicesAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(38LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServicesPrompt()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(44LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds.rawValue.getter()
{
  return 0x74706D6F7270LL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.emergencyServicesPromptAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(44LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds and conformance PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.handleLabelAndType(personHandleLabel:label:type:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v4[6] = OUTLINED_FUNCTION_28();
  v4[7] = OUTLINED_FUNCTION_28();
  v4[8] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.handleLabelAndType(personHandleLabel:label:type:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 176LL);
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_320080;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = 0x8000000000349740LL;
  OUTLINED_FUNCTION_29_16(v0, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_61_10(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
    uint64_t v9 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v9);
  }

  uint64_t v10 = OUTLINED_FUNCTION_45_16();
  OUTLINED_FUNCTION_29_16(v10, v11, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_82_5();
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 120) = v0;
    uint64_t v13 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v13);
  }

  uint64_t v14 = OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_29_16(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = OUTLINED_FUNCTION_75_12();
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 168) = v0;
    uint64_t v17 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v17);
  }

  uint64_t v18 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v1 + 80) = v18;
  *uint64_t v18 = v1;
  v18[1] = PhoneCallDisplayTextCATsSimple.handleLabelAndType(personHandleLabel:label:type:);
  return v20(v2 + 22, 0x8000000000343000LL, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(void);
  OUTLINED_FUNCTION_33_33();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_2_26(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_10_0();
    swift_task_dealloc(v1);
    uint64_t v6 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_61(v6, v7);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  swift_task_dealloc(v1);
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::HandleLabelAndTypeDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)( Swift::String a1, Swift::OpaquePointer a2)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.rawValue.getter()
{
  return 0x2331686374697773LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::HandleLabelAndTypeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::HandleLabelAndTypeDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
  void *v0 = 0x2331686374697773LL;
  v0[1] = v1;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDisplayTextCATsSimple.handleLabelAndTypeAsLabels(personHandleLabel:label:type:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v4[6] = OUTLINED_FUNCTION_28();
  v4[7] = OUTLINED_FUNCTION_28();
  v4[8] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.handleLabelAndTypeAsLabels(personHandleLabel:label:type:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 176LL);
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_320080;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = 0x8000000000349740LL;
  OUTLINED_FUNCTION_29_16(v0, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_61_10(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
    uint64_t v9 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v9);
  }

  uint64_t v10 = OUTLINED_FUNCTION_45_16();
  OUTLINED_FUNCTION_29_16(v10, v11, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_82_5();
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 120) = v0;
    uint64_t v13 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v13);
  }

  uint64_t v14 = OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_29_16(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = OUTLINED_FUNCTION_75_12();
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v4 + 168) = v0;
    uint64_t v17 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v17);
  }

  uint64_t v18 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v1 + 80) = v18;
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds();
  *uint64_t v18 = v1;
  v18[1] = PhoneCallDisplayTextCATsSimple.handleLabelAndTypeAsLabels(personHandleLabel:label:type:);
  OUTLINED_FUNCTION_38_2();
  return v20();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(void);
  OUTLINED_FUNCTION_33_33();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_2_26(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_10_0();
    swift_task_dealloc(v1);
    uint64_t v6 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_61(v6, v7);
  }

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds and conformance PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.joinButtonText()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.joinButtonText();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

uint64_t PhoneCallDisplayTextCATsSimple.joinButtonText()(uint64_t a1)
{
  uint64_t v6 = *v2;
  uint64_t v4 = swift_task_dealloc(*(void *)(*v2 + 16));
  if (!v1) {
    uint64_t v4 = a1;
  }
  return OUTLINED_FUNCTION_61(v4, *(uint64_t (**)(void))(v6 + 8));
}

void PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.joinButtonTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(35LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.newCallButtonText()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.newCallButtonTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(38LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.nextButtonText()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.nextButtonTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(35LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.openApp(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.openApp(appName:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(28LL);
  return OUTLINED_FUNCTION_12_22(v11, v12, v13, v14);
}

void PhoneCallDisplayTextCATsSimple.OpenAppDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.OpenAppDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.OpenAppDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.openAppAsLabels(appName:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.openAppAsLabels(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(28LL);
  return OUTLINED_FUNCTION_11_22(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.OpenAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.OpenAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.OpenAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.OpenAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenAppDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.openContactsButtonText()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(43LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

uint64_t PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds.rawValue.getter()
{
  return 0x746E6F436E65706FLL;
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.openContactsButtonTextAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(43LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds and conformance PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.transcription()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.transcriptionAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(34LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds and conformance PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.tryWithApp(appName:isThirdPartyApp:)(uint64_t a1, char a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.tryWithApp(appName:isThirdPartyApp:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 128LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  OUTLINED_FUNCTION_35_25();
  OUTLINED_FUNCTION_83_4(v10);
  uint64_t v11 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)PhoneCallDisplayTextCATs.callButtonText(label:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v12 = OUTLINED_FUNCTION_46_8(31LL);
  return OUTLINED_FUNCTION_12_22(v12, v13, v14, v15);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::TryWithAppDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x7261506472696874LL;
  }
  else {
    return 0x7261507473726966LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::TryWithAppDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::TryWithAppDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds.rawValue.getter(v1);
  v0[1] = 0xEA00000000007974LL;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDisplayTextCATsSimple.tryWithAppAsLabels(appName:isThirdPartyApp:)(uint64_t a1, char a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.tryWithAppAsLabels(appName:isThirdPartyApp:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 128LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  OUTLINED_FUNCTION_35_25();
  OUTLINED_FUNCTION_83_4(v9);
  uint64_t v10 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v11 = OUTLINED_FUNCTION_38_20(31LL);
  return OUTLINED_FUNCTION_11_22(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.unknownCaller()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.unknownCallerAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(34LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds and conformance PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.updateSettings()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds( void *a1@<X8>)
{
}

uint64_t PhoneCallDisplayTextCATsSimple.updateSettingsAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds();
  void *v0 = v1;
  v0[1] = PhoneCallDisplayTextCATsSimple.addToCallButtonTextAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(35LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds and conformance PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds);
  }

  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.useApp(appName:isPhoneApp:)(uint64_t a1, char a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.useApp(appName:isPhoneApp:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 128LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  OUTLINED_FUNCTION_43_12();
  OUTLINED_FUNCTION_83_4(v10);
  unint64_t v11 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v12 = OUTLINED_FUNCTION_46_8(27LL);
  return OUTLINED_FUNCTION_12_22(v12, v13, v14, v15);
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::UseAppDialogIds_optional __swiftcall PhoneCallDisplayTextCATsSimple.UseAppDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of PhoneCallDisplayTextCATsSimple.UseAppDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t PhoneCallDisplayTextCATsSimple.UseAppDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x656E6F6850657375LL;
  }
  else {
    return 0x68506E6F4E657375LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::UseAppDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallDisplayTextCATsSimple::UseAppDialogIds_optional *a2@<X8>)
{
  result.value = PhoneCallDisplayTextCATsSimple.UseAppDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = PhoneCallDisplayTextCATsSimple.UseAppDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDisplayTextCATsSimple.useAppAsLabels(appName:isPhoneApp:)(uint64_t a1, char a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallDisplayTextCATsSimple.useAppAsLabels(appName:isPhoneApp:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 128LL);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  OUTLINED_FUNCTION_43_12();
  OUTLINED_FUNCTION_83_4(v9);
  uint64_t v10 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)PhoneCallDisplayTextCATs.appSettings(appName:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v11 = OUTLINED_FUNCTION_38_20(27LL);
  return OUTLINED_FUNCTION_11_22(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.UseAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.UseAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.UseAppDialogIds,  &type metadata for PhoneCallDisplayTextCATsSimple.UseAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.UseAppDialogIds and conformance PhoneCallDisplayTextCATsSimple.UseAppDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallDisplayTextCATsSimple.Properties,  &type metadata for PhoneCallDisplayTextCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallDisplayTextCATsSimple.Properties and conformance PhoneCallDisplayTextCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata completion function for PhoneCallDisplayTextCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for PhoneCallDisplayTextCATsSimple);
}

uint64_t ObjC metadata update function for PhoneCallDisplayTextCATsSimple()
{
  return type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
}

uint64_t getEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.Properties( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xEB)
  {
    if (a2 + 21 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 21) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 22;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xEA) {
    return ((uint64_t (*)(void))((char *)&loc_16DA58 + 4 * byte_32A14B[v4]))();
  }
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_16DA8C + 4 * byte_32A146[v4]))();
}

uint64_t sub_16DA8C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_16DA94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x16DA9CLL);
  }
  return result;
}

uint64_t sub_16DAA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x16DAB0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 21;
  return result;
}

uint64_t sub_16DAB4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_16DABC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.Properties()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.AppSettingsDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.CallButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.CancelButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.CancelledTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.ChangeAppDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.ChangeTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.EmergencySashTitleDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.EmergencyServicesDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.EmergencyServicesPromptDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_16DBAC + 4 * byte_32A155[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_16DBE0 + 4 * byte_32A150[v4]))();
}

uint64_t sub_16DBE0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_16DBE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x16DBF0LL);
  }
  return result;
}

uint64_t sub_16DBFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x16DC04LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_16DC08(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_16DC10(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.HandleLabelAndTypeDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.JoinButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.NewCallButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.NextButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.OpenAppDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.OpenContactsButtonTextDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.TranscriptionDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds()
{
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.UnknownCallerDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.AddToCallButtonTextDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_16DCCC + 4 * byte_32A15A[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_16DCEC + 4 * byte_32A15F[v4]))();
  }
}

_BYTE *sub_16DCCC(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_16DCEC(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_16DCF4(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_16DCFC(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_16DD04(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_16DD0C(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.UpdateSettingsDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallDisplayTextCATsSimple.TryWithAppDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_16DD70 + 4 * byte_32A169[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_16DDA4 + 4 * byte_32A164[v4]))();
}

uint64_t sub_16DDA4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_16DDAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x16DDB4LL);
  }
  return result;
}

uint64_t sub_16DDC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x16DDC8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_16DDCC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_16DDD4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallDisplayTextCATsSimple.UseAppDialogIds()
{
}

unint64_t OUTLINED_FUNCTION_26_33(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_33_33()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 80);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 88) = v0;
  return swift_task_dealloc(v5);
}

void OUTLINED_FUNCTION_35_25()
{
  *(void *)(v0 + 80) = 0x5064726968547369LL;
  *(void *)(v0 + 88) = 0xEF70704179747261LL;
}

unint64_t OUTLINED_FUNCTION_38_20(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

void OUTLINED_FUNCTION_43_12()
{
  *(void *)(v0 + 80) = 0x41656E6F68507369LL;
  *(void *)(v0 + 88) = 0xEA00000000007070LL;
}

uint64_t OUTLINED_FUNCTION_45_16()
{
  uint64_t result = *(void *)(v0 + 24);
  *(void *)(v1 + 80) = 0x6C6562616CLL;
  *(void *)(v1 + 88) = 0xE500000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_12()
{
  uint64_t result = *(void *)(v0 + 32);
  *(void *)(v1 + 128) = 1701869940LL;
  *(void *)(v1 + 136) = 0xE400000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_52_14()
{
  return 0x65676E616863LL;
}

uint64_t OUTLINED_FUNCTION_61_10(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_68_14()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 72));
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_73_15(uint64_t result, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = result;
  *(void *)(v3 + 24) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_75_12()
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, v0);
}

uint64_t protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance AnswerCallCATsSimple()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(**v0 + class metadata base offset for AnswerCallCATsSimple));
  *(void *)(v1 + 16) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_28_1(v2, (uint64_t)SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels());
  return OUTLINED_FUNCTION_0_39(v3, v4);
}

uint64_t protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance AnswerCallCATsSimple()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for AnswerCallCATsSimple + **v0 + 16));
  *(void *)(v1 + 16) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_28_1(v2, (uint64_t)SuggestionsCATsSimple.phoneCall_StartGFTCall());
  return OUTLINED_FUNCTION_0_39(v3, v4);
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional __swiftcall AnswerCallCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of AnswerCallCATsSimple.Properties.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerCallCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = AnswerCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:));
}

uint64_t AnswerCallCATsSimple.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  unsigned int v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *unsigned int v6 = v1;
  v6[1] = AnnounceIncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD000000000000020LL);
  return v9(v7);
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall AnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of AnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t AnswerCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x7373694D7473754ALL;
  }
  if (a1 == 1) {
    return 0xD000000000000015LL;
  }
  return 0x696D6F636E496F4ELL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnswerCallCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = AnswerCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = AnswerCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:));
}

uint64_t AnswerCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)()
{
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  unsigned int v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  unint64_t v7 = lazy protocol witness table accessor for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds();
  *unsigned int v6 = v1;
  v6[1] = AnnounceIncomingCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:);
  return v9( 0xD000000000000020LL,  0x8000000000342A40LL,  v4,  &type metadata for AnswerCallCATsSimple.IntentHandledResponseDialogIds,  v7);
}

unint64_t lazy protocol witness table accessor for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnswerCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for AnswerCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnswerCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for AnswerCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.IntentHandledResponseDialogIds and conformance AnswerCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

uint64_t AnswerCallCATsSimple.offerFollowUpIntent(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AnswerCallCATsSimple.offerFollowUpIntent(followUpOfferType:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_3_22(v6);
  if (v7)
  {
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  char v9 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  *char v9 = v0;
  v9[1] = AnnounceIncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:);
  uint64_t v10 = OUTLINED_FUNCTION_21_19(v2 + 13);
  return v12(v10);
}

void AnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(uint64_t a1)
{
  v2._rawValue = &outlined read-only object #0 of AnswerCallCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, a1);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds( uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t AnswerCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_3_22(v6);
  if (v7)
  {
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  char v9 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  unint64_t v10 = lazy protocol witness table accessor for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds();
  *char v9 = v0;
  v9[1] = AnnounceIncomingCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  return v12( v2 + 13,  0x8000000000342A70LL,  v4,  &type metadata for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds,  v10);
}

unint64_t lazy protocol witness table accessor for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds,  &type metadata for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds,  &type metadata for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.OfferFollowUpIntentDialogIds and conformance AnswerCallCATsSimple.OfferFollowUpIntentDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnswerCallCATsSimple.Properties,  &type metadata for AnswerCallCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnswerCallCATsSimple.Properties and conformance AnswerCallCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnswerCallCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnswerCallCATsSimple;
  if (!type metadata singleton initialization cache for AnswerCallCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnswerCallCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for AnswerCallCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnswerCallCATsSimple);
}

uint64_t ObjC metadata update function for AnswerCallCATsSimple()
{
  return type metadata accessor for AnswerCallCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for AnswerCallCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_16E82C + 4 * byte_32B2D5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_16E860 + 4 * asc_32B2D0[v4]))();
}

uint64_t sub_16E860(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_16E868(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x16E870LL);
  }
  return result;
}

uint64_t sub_16E87C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x16E884LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_16E888(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_16E890(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnswerCallCATsSimple.Properties()
{
}

uint64_t storeEnumTagSinglePayload for AnswerCallCATsSimple.IntentHandledResponseDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_16E8F4 + 4 * byte_32B2DF[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_16E928 + 4 * byte_32B2DA[v4]))();
}

uint64_t sub_16E928(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_16E930(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x16E938LL);
  }
  return result;
}

uint64_t sub_16E944(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x16E94CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_16E950(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_16E958(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnswerCallCATsSimple.IntentHandledResponseDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_16E9B0 + 4 * byte_32B2E4[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_16E9D0 + 4 * byte_32B2E9[v4]))();
  }
}

_BYTE *sub_16E9B0(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_16E9D0(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_16E9D8(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_16E9E0(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_16E9E8(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_16E9F0(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void type metadata accessor for AnswerCallCATsSimple.OfferFollowUpIntentDialogIds()
{
}

void PhoneCallYesNoConfirmationFlowStrategy.__allocating_init(outputProducer:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3)
{
}

void PhoneCallYesNoConfirmationFlowStrategy.init(outputProducer:sharedGlobals:)( uint64_t a1, uint64_t a2, __int128 *a3)
{
  v3[3] = a1;
  v3[4] = a2;
  outlined init with copy of SignalProviding((uint64_t)a3, (uint64_t)(v3 + 5));
  uint64_t v5 = type metadata accessor for YesNoConfirmationParser();
  uint64_t v6 = swift_allocObject(v5, 64LL, 7LL);
  *(_BYTE *)(v6 + 16) = 5;
  outlined init with take of AppSelectionSignalComponent(a3, v6 + 24);
  v3[2] = v6;
  OUTLINED_FUNCTION_6();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.actionForInput(_:)(uint64_t a1)
{
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(uint64_t))(**(void **)(v1 + 16) + 128LL))(a1);
  uint64_t v5 = type metadata accessor for ConfirmationResponse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1LL, v5);
  uint64_t v7 = outlined destroy of ConfirmationResponse?((uint64_t)v4);
  if (EnumTagSinglePayload == 1) {
    return static ActionForInput.ignore()(v7);
  }
  else {
    return static ActionForInput.handle()(v7);
  }
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.parseConfirmationResponse(input:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for PhoneError(0LL);
  v3[5] = v4;
  v3[6] = OUTLINED_FUNCTION_12_0(v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  v3[7] = OUTLINED_FUNCTION_28();
  v3[8] = OUTLINED_FUNCTION_28();
  v3[9] = OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.parseConfirmationResponse(input:)()
{
  uint64_t v2 = v0[9];
  (*(void (**)(void))(**(void **)(v0[4] + 16LL) + 128LL))(v0[3]);
  uint64_t v3 = type metadata accessor for ConfirmationResponse(0LL);
  if (__swift_getEnumTagSinglePayload(v2, 1LL, v3) != 1)
  {
    uint64_t v4 = v0[8];
    outlined init with copy of ConfirmationResponse?(v0[9], v4);
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v3);
    uint64_t v7 = v6;
    if ((_DWORD)v6 == enum case for ConfirmationResponse.confirmed(_:))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v8 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
      uint64_t v9 = (os_log_s *)OUTLINED_FUNCTION_9();
      os_log_type_t v11 = static os_log_type_t.debug.getter(v9, v10);
      if (!OUTLINED_FUNCTION_7_61(v11)) {
        goto LABEL_13;
      }
      uint64_t v12 = "PhoneCallYesNoConfirmationFlowStrategyTest user has confirmed to continue reading";
LABEL_12:
      uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v9, v1, v12, v16, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v16);
LABEL_13:
      uint64_t v18 = v0[8];
      uint64_t v17 = v0[9];
      uint64_t v20 = v0[6];
      uint64_t v19 = v0[7];

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v19, v7, v3);
      __swift_storeEnumTagSinglePayload(v19, 0LL, 1LL, v3);
      SimpleConfirmationResponseProvider.init(_:)(v19);
      outlined destroy of ConfirmationResponse?(v17);
      OUTLINED_FUNCTION_46_0();
      swift_task_dealloc(v18);
      swift_task_dealloc(v19);
      swift_task_dealloc(v20);
      uint64_t v21 = (uint64_t (*)(void))v0[1];
      return v21();
    }

    if ((_DWORD)v6 == enum case for ConfirmationResponse.rejected(_:))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v13 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
      uint64_t v9 = (os_log_s *)OUTLINED_FUNCTION_9();
      os_log_type_t v15 = static os_log_type_t.debug.getter(v9, v14);
      if (!OUTLINED_FUNCTION_7_61(v15)) {
        goto LABEL_13;
      }
      uint64_t v12 = "PhoneCallYesNoConfirmationFlowStrategyTest user has rejected to continue reading";
      goto LABEL_12;
    }

    (*(void (**)(void, uint64_t))(v5 + 8))(v0[8], v3);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v22 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  uint64_t v23 = (os_log_s *)OUTLINED_FUNCTION_9();
  os_log_type_t v24 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl( &dword_0,  v23,  v24,  "#PhoneCallYesNoConfirmationFlowStrategyTest returns an unknown value, which is not expected",  v25,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v25);
  }

  uint64_t v26 = v0[9];
  uint64_t v27 = (void *)v0[6];
  uint64_t v28 = v0[5];

  *uint64_t v27 = 0LL;
  v27[1] = 0LL;
  swift_storeEnumTagMultiPayload(v27, v28, 0LL);
  uint64_t v29 = lazy protocol witness table accessor for type SimpleHandoffStrategy and conformance SimpleHandoffStrategy( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  255LL,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
  swift_allocError(v28, v29, 0LL, 0LL);
  PhoneError.logged()(v30);
  uint64_t v31 = outlined destroy of PhoneError((uint64_t)v27);
  swift_willThrow(v31, v32, v33, v34, v35, v36, v37, v38);
  outlined destroy of ConfirmationResponse?(v26);
  swift_task_dealloc(v26);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc(v27);
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:));
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  uint64_t v1 = *(int **)(v0[3] + 24LL);
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc(v1[1]);
  v0[4] = v2;
  void *v2 = v0;
  v2[1] = PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:);
  return v4(v0[2]);
}

{
  uint64_t (**v0)(void);
  OUTLINED_FUNCTION_14_1(*((void *)*v0 + 4));
  return OUTLINED_FUNCTION_3_0(v0[1]);
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeConfirmationRejectedResponse()(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[16] = OUTLINED_FUNCTION_12_0(v3);
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  v2[17] = OUTLINED_FUNCTION_12_0(v4);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeConfirmationRejectedResponse()()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[15] + 40LL;
  uint64_t v3 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v3);
  uint64_t v4 = CATWrapperSimple.__allocating_init(options:globals:)(v1, 0LL);
  uint64_t v5 = swift_retain();
  static DialogPhase.canceled.getter(v5);
  outlined init with copy of SignalProviding(v2, (uint64_t)(v0 + 8));
  uint64_t v6 = type metadata accessor for DialogOutputFactory(0LL);
  OUTLINED_FUNCTION_15_2(v6);
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v8 = v7;
  v0[18] = v7;
  swift_release(v4);
  uint64_t v9 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(*(void *)v8 + 128LL));
  v0[19] = v9;
  *uint64_t v9 = v0;
  v9[1] = PhoneCallYesNoConfirmationFlowStrategy.makeConfirmationRejectedResponse();
  return v11(v0 + 2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(*(void *)v0 + 144LL);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 152LL));
  swift_release(v1);
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    *(void *)(v0 + 104) = *(void *)(v0 + 16);
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    swift_willThrowTypedImpl(v0 + 104, v1, &protocol self-conformance witness table for Error);
  }

  else
  {
    outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 16), *(void *)(v0 + 112));
  }

  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeFlowCancelledResponse()(uint64_t a1)
{
  uint64_t v4 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(*(void *)v1 + 136LL));
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return v6(a1);
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeErrorResponse(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)PhoneCallYesNoConfirmationFlowStrategy.makeErrorResponse(_:));
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeErrorResponse(_:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_willThrow();
  swift_errorRetain(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.makeFlow()()
{
  void (*v4)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void v15[5];
  void v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v1 = v0;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 5, v2);
  uint64_t v4 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 16);
  swift_retain();
  v4(v16, v2, v3);
  uint64_t v5 = v17;
  uint64_t v6 = v18;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(v16, v17);
  v15[3] = v5;
  v15[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16LL))(boxed_opaque_existential_1, v7, v5);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  OUTLINED_FUNCTION_15_2(v9);
  uint64_t v10 = type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
  uint64_t v12 = lazy protocol witness table accessor for type SimpleHandoffStrategy and conformance SimpleHandoffStrategy( &lazy protocol witness table cache variable for type PhoneCallYesNoConfirmationFlowStrategy and conformance PhoneCallYesNoConfirmationFlowStrategy,  v11,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy,  (uint64_t)&protocol conformance descriptor for PhoneCallYesNoConfirmationFlowStrategy);
  uint64_t v13 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)(v12, v1, v15, v10, v12);
  __swift_destroy_boxed_opaque_existential_1(v16);
  return v13;
}

void *PhoneCallYesNoConfirmationFlowStrategy.deinit()
{
  return v0;
}

uint64_t PhoneCallYesNoConfirmationFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.actionForInput(_:) in conformance PhoneCallYesNoConfirmationFlowStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112LL))();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance PhoneCallYesNoConfirmationFlowStrategy( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(*(void *)v2 + 120LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v9(a1, a2);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:) in conformance PhoneCallYesNoConfirmationFlowStrategy( uint64_t a1)
{
  uint64_t v4 = *(int **)(*(void *)v1 + 128LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v7(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:) in conformance PhoneCallYesNoConfirmationFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:) in conformance PhoneCallYesNoConfirmationFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse() in conformance PhoneCallYesNoConfirmationFlowStrategy( uint64_t a1)
{
  uint64_t v4 = *(int **)(*(void *)v1 + 136LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v7(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance PhoneCallYesNoConfirmationFlowStrategy( uint64_t a1)
{
  uint64_t v4 = *(int **)(*(void *)v1 + 144LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v7(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:) in conformance PhoneCallYesNoConfirmationFlowStrategy( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(*(void *)v2 + 152LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v9(a1, a2);
}

uint64_t outlined destroy of ConfirmationResponse?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of ConfirmationResponse?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PhoneCallYesNoConfirmationFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin38PhoneCallYesNoConfirmationFlowStrategy);
}

void *associated type witness table accessor for PromptForConfirmationFlowStrategyAsync.AnswerType : ConfirmationResponseProviding in PhoneCallYesNoConfirmationFlowStrategy()
{
  return &protocol witness table for SimpleConfirmationResponseProvider;
}

BOOL OUTLINED_FUNCTION_7_61(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t HandleIntentSubmitter.__allocating_init(aceServiceInvoker:)(__int128 *a1)
{
  uint64_t v3 = swift_allocObject(v1, 56LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(a1, v3 + 16);
  return v3;
}

uint64_t DismissSiriFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DismissSiriFlow();
  unint64_t v5 = lazy protocol witness table accessor for type DismissSiriFlow and conformance DismissSiriFlow();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t type metadata accessor for DismissSiriFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin15DismissSiriFlow);
}

uint64_t DismissSiriFlow.execute()(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = type metadata accessor for AceOutput(0LL);
  v2[18] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[19] = v4;
  v2[20] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(DismissSiriFlow.execute(), 0LL, 0LL);
}

uint64_t DismissSiriFlow.execute()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v2 = swift_allocObject(v1, 40LL, 7LL);
  *(_OWORD *)(v2 + 16) = xmmword_31FE60;
  id v3 = [objc_allocWithZone(SAUICloseAssistant) init];
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  specialized Array._endMutation()(v3, v4, v5, v6);
  uint64_t v28 = 0LL;
  memset(v27, 0, sizeof(v27));
  AceOutput.init(commands:flowActivity:)(v2, v27);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  v0[21] = v8;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v11 = static os_log_type_t.debug.getter(v9, v10);
  if (OUTLINED_FUNCTION_35_12(v11))
  {
    uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v13 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)&v27[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    if (one-time initialization token for typeName != -1) {
      swift_once(&one-time initialization token for typeName, one-time initialization function for typeName);
    }
    uint64_t v14 = static DismissSiriFlow.typeName;
    unint64_t v15 = unk_434C30;
    swift_bridgeObjectRetain();
    v0[15] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, (uint64_t *)v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 15, v0 + 16, v12 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v9, v11, "%s: Dismissing Siri", v12, 0xCu);
    OUTLINED_FUNCTION_17_0(v13);
    OUTLINED_FUNCTION_0_2(v13);
    OUTLINED_FUNCTION_0_2((uint64_t)v12);
  }

  uint64_t v17 = v0[19];
  uint64_t v16 = v0[20];
  uint64_t v18 = (void *)v0[17];
  uint64_t v19 = v0[18];
  uint64_t v20 = v18[5];
  uint64_t v21 = v18[6];
  __swift_project_boxed_opaque_existential_1(v18 + 2, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v22 = v0[5];
  uint64_t v23 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v22);
  v0[11] = v19;
  v0[12] = &protocol witness table for AceOutput;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v17 + 16))(boxed_opaque_existential_1, v16, v19);
  uint64_t v25 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
  v0[22] = v25;
  *uint64_t v25 = v0;
  v25[1] = DismissSiriFlow.execute();
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 8, v22, v23);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v2 = *v1;
  id v3 = *(void *)(*v1 + 176);
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = DismissSiriFlow.execute();
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1((void *)(v2 + 64));
    uint64_t v4 = DismissSiriFlow.execute();
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

{
  uint64_t v0;
  uint64_t v1;
  __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 16));
  OUTLINED_FUNCTION_4_63();
  OUTLINED_FUNCTION_3_70();
  swift_task_dealloc(v0);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_s *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v1 = *(void *)(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 64));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  id v3 = (os_log_s *)Logger.logObject.getter(v2);
  uint64_t v4 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_35_12(v4))
  {
    uint64_t v5 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v6 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v12 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v5 = 136315394;
    if (one-time initialization token for typeName != -1) {
      swift_once(&one-time initialization token for typeName, one-time initialization function for typeName);
    }
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v9 = static DismissSiriFlow.typeName;
    uint64_t v8 = unk_434C30;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 104) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v5 + 4);
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2112;
    swift_errorRetain(v7);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v5 + 14);
    *uint64_t v6 = v10;
    OUTLINED_FUNCTION_8_50();
    OUTLINED_FUNCTION_8_50();
    _os_log_impl(&dword_0, v3, v4, "%s: Error publishing SAUICloseAssistant command: %@", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v6);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);
    OUTLINED_FUNCTION_17_0(v12);
    OUTLINED_FUNCTION_0_2(v12);
    OUTLINED_FUNCTION_0_2(v5);

    OUTLINED_FUNCTION_8_50();
  }

  else
  {
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
  }

  OUTLINED_FUNCTION_4_63();
  OUTLINED_FUNCTION_3_70();
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t protocol witness for Flow.on(input:) in conformance DismissSiriFlow()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96LL))() & 1;
}

uint64_t protocol witness for Flow.execute() in conformance DismissSiriFlow(uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 112LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return v7(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance DismissSiriFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DismissSiriFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t OUTLINED_FUNCTION_3_70()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_63()
{
  return static ExecuteResponse.complete()();
}

uint64_t OUTLINED_FUNCTION_8_50()
{
  return swift_errorRelease(v0);
}

uint64_t protocol witness for IncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:) in conformance IdentifyIncomingCallerCATsSimple()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(**v0 + class metadata base offset for IdentifyIncomingCallerCATsSimple));
  *(void *)(v1 + 16) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_28_1(v2, (uint64_t)SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels());
  return OUTLINED_FUNCTION_0_39(v3, v4);
}

uint64_t protocol witness for IncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:) in conformance IdentifyIncomingCallerCATsSimple()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_0_1(*(void *)(class metadata base offset for IdentifyIncomingCallerCATsSimple
                                                 + **v0
                                                 + 16));
  *(void *)(v1 + 16) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_28_1(v2, (uint64_t)SuggestionsCATsSimple.phoneCall_StartGFTCall());
  return OUTLINED_FUNCTION_0_39(v3, v4);
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional __swiftcall IdentifyIncomingCallerCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of IdentifyIncomingCallerCATsSimple.Properties.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance IdentifyIncomingCallerCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = IdentifyIncomingCallerCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)IdentifyIncomingCallerCATsSimple.intentHandledResponse(incomingCallConcept:));
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *uint64_t v6 = v1;
  v6[1] = AnnounceIncomingCallCATsSimple.intentHandledResponse(incomingCallConcept:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD00000000000002CLL);
  return v9(v7);
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1701E0 + 4 * asc_32B680[a1]))( 0x7373694D7473754ALL,  0xEE006C6C61436465LL);
}

unint64_t sub_1701E0()
{
  return 0xD000000000000015LL;
}

uint64_t sub_1701FC()
{
  return 0x69486C6C61436F4ELL;
}

uint64_t sub_170220()
{
  return 0x6423317473726966LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
}

void protocol witness for Hashable.hash(into:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::IdentifyIncomingCallerCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)IdentifyIncomingCallerCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:));
}

uint64_t IdentifyIncomingCallerCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:)()
{
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  unint64_t v7 = lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds();
  *uint64_t v6 = v1;
  v6[1] = AnnounceIncomingCallCATsSimple.intentHandledResponseAsLabels(incomingCallConcept:);
  return v9( 0xD00000000000002CLL,  0x8000000000342D50LL,  v4,  &type metadata for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds,  v7);
}

unint64_t lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds,  &type metadata for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds,  &type metadata for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds and conformance IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

uint64_t IdentifyIncomingCallerCATsSimple.offerFollowUpIntent(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t IdentifyIncomingCallerCATsSimple.offerFollowUpIntent(followUpOfferType:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_3_22(v6);
  if (v7)
  {
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  *uint64_t v9 = v0;
  v9[1] = AnnounceIncomingCallCATsSimple.offerFollowUpIntent(followUpOfferType:);
  uint64_t v10 = OUTLINED_FUNCTION_21_19(v2 + 25);
  return v12(v10);
}

void IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:)(uint64_t a1)
{
  v2._rawValue = &outlined read-only object #0 of IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, a1);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds( uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t IdentifyIncomingCallerCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t IdentifyIncomingCallerCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  *(void *)(v0 + 40) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_31D870;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_3_22(v6);
  if (v7)
  {
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  unint64_t v10 = lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds();
  *uint64_t v9 = v0;
  v9[1] = AnnounceIncomingCallCATsSimple.offerFollowUpIntentAsLabels(followUpOfferType:);
  return v12( v2 + 25,  0x8000000000342D80LL,  v4,  &type metadata for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds,  v10);
}

unint64_t lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds,  &type metadata for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds,  &type metadata for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds and conformance IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for IdentifyIncomingCallerCATsSimple.Properties,  &type metadata for IdentifyIncomingCallerCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IdentifyIncomingCallerCATsSimple.Properties and conformance IdentifyIncomingCallerCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for IdentifyIncomingCallerCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for IdentifyIncomingCallerCATsSimple;
  if (!type metadata singleton initialization cache for IdentifyIncomingCallerCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IdentifyIncomingCallerCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for IdentifyIncomingCallerCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2( a1,  0LL,  0LL,  v2,  a1 + class metadata base offset for IdentifyIncomingCallerCATsSimple);
}

uint64_t ObjC metadata update function for IdentifyIncomingCallerCATsSimple()
{
  return type metadata accessor for IdentifyIncomingCallerCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for IdentifyIncomingCallerCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1708D8 + 4 * byte_32B68C[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_17090C + 4 * byte_32B687[v4]))();
}

uint64_t sub_17090C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_170914(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x17091CLL);
  }
  return result;
}

uint64_t sub_170928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x170930LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_170934(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_17093C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for IdentifyIncomingCallerCATsSimple.Properties()
{
}

uint64_t storeEnumTagSinglePayload for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_1709A0 + 4 * byte_32B696[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1709D4 + 4 * byte_32B691[v4]))();
}

uint64_t sub_1709D4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1709DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1709E4LL);
  }
  return result;
}

uint64_t sub_1709F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1709F8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_1709FC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_170A04(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_170A5C + 4 * byte_32B69B[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_170A7C + 4 * byte_32B6A0[v4]))();
  }
}

_BYTE *sub_170A5C(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_170A7C(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_170A84(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_170A8C(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_170A94(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_170A9C(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void type metadata accessor for IdentifyIncomingCallerCATsSimple.OfferFollowUpIntentDialogIds()
{
}

uint64_t specialized Transformer<>.VoiceTriggerAudioRouteBehavior.init<A>(for:isEmergencyCallIntent:sharedGlobals:)( char a1, void *a2)
{
  if ((a1 & 1) != 0)
  {
    uint64_t v3 = a2[3];
    uint64_t v4 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v3);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v10, v3, v4);
    uint64_t v5 = a2[3];
    uint64_t v6 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 112))(v5, v6);
    uint64_t v8 = static Transformer<>.VoiceTriggerAudioRouteBehavior.chooseBehaviorForEmergencyCall(deviceState:currentRequest:)( v10,  v7);
    swift_release(v7);
    __swift_destroy_boxed_opaque_existential_1(v10);
  }

  else
  {
    uint64_t v8 = 2LL;
  }

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

uint64_t specialized Transformer<>.VoiceTriggerAudioRouteBehavior.init<A>(for:isEmergencyCallIntent:sharedGlobals:)( uint64_t a1, void *a2)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl( &dword_0,  v5,  v7,  "#VoiceTriggerAudioRouteBehavior heySiriAudioRoute is enabled for INAnswerCallIntent.",  v8,  2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  __swift_destroy_boxed_opaque_existential_1(a2);
  return 0LL;
}

void specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)( void *a1, void *a2, void *a3)
{
}

{
  specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3);
}

{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  os_log_type_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t BackingType;
  __CFString *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __CFString *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  PhoneCallNLIntent.isEmergencyCall()();
  uint64_t v6 = a2[3];
  os_log_type_t v7 = a2[4];
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a2, v6);
  uint64_t v77 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  v77(&v83, v6, v7);
  __swift_project_boxed_opaque_existential_1(&v83, v86);
  DeviceState.isVoiceTrigger.getter();
  if ((v9 & 1) == 0)
  {
    uint64_t v12 = [a3 _metadata];
    [v12 triggerMethod];
  }

  OUTLINED_FUNCTION_9_24(v9, v10, v11);
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  unint64_t v15 = __swift_project_boxed_opaque_existential_1(a2, v13);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 112))(v13, v14))
  {
LABEL_11:
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    OUTLINED_FUNCTION_47_15();
    OUTLINED_FUNCTION_64_11();
    __asm { BR              X10 }
  }

  if ((OUTLINED_FUNCTION_73_16() & 1) == 0)
  {
    OUTLINED_FUNCTION_77_0();
    goto LABEL_11;
  }

  OUTLINED_FUNCTION_15_22();
  if (!v35) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v16, (uint64_t)static Logger.siriPhone);
  uint64_t v17 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_93(v17))
  {
    uint64_t v18 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
    OUTLINED_FUNCTION_7_0(32LL);
    OUTLINED_FUNCTION_86_8();
    *uint64_t v18 = 136315138;
    unint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
    uint64_t v26 = OUTLINED_FUNCTION_13_51(v19, v19, v20, v21, v22, v23, v24, v25, v74, (uint64_t)v77, v80);
    unint64_t v89 = OUTLINED_FUNCTION_12_8(v26, v27, v28, v29, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v18 + 1, v18 + 3);
    OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_7_62(&dword_0, v31, v32, "#%s Request is made in ambient mode. Routing to HS audio route.");
    OUTLINED_FUNCTION_48_13();
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v18);
  }

  uint64_t v33 = _INCallAudioRouteHeySiriAudioRoute;
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_15_22();
  if (!v35) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v36 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v36, (uint64_t)static Logger.siriPhone);
  uint64_t v37 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_52_15(v37))
  {
    uint64_t v38 = OUTLINED_FUNCTION_7_0(22LL);
    OUTLINED_FUNCTION_7_0(64LL);
    OUTLINED_FUNCTION_86_8();
    *(_DWORD *)uint64_t v38 = 136315394;
    unint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
    uint64_t v46 = OUTLINED_FUNCTION_13_51(v39, v39, v40, v41, v42, v43, v44, v45, v74, (uint64_t)v77, v80);
    int v51 = OUTLINED_FUNCTION_12_8(v46, v47, v48, v49, v50);
    OUTLINED_FUNCTION_23_31(v51, v52, v53, v54, v55, v56, v57, v58, v75, v78, v81, v83, v84, v85, v86, v87, v88, v89);
    OUTLINED_FUNCTION_129();
    *(_WORD *)(v38 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    if (!v33)
    {
      OUTLINED_FUNCTION_50_4();
LABEL_26:
      uint64_t v65 = OUTLINED_FUNCTION_36_20(v61, v62, v63);
      OUTLINED_FUNCTION_30_25(v65, v66, v67, v68, v69, v70, v71, v72, v76, v79, v82, v83, v84, v85, v86, v87, v88, v89);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_62_10(&dword_0, v73, (os_log_type_t)a2, "#%s --> %s");
      OUTLINED_FUNCTION_49_16();
      OUTLINED_FUNCTION_0_2((uint64_t)v8);
      OUTLINED_FUNCTION_0_2(v38);
      goto LABEL_27;
    }

    uint64_t BackingType = INCallAudioRouteGetBackingType(v33);
    switch((_DWORD)BackingType)
    {
      case 4:
        uint64_t v60 = @"HEY_SIRI_AUDIO_ROUTE";
        break;
      case 3:
        uint64_t v60 = @"BLUETOOTH_AUDIO_ROUTE";
        break;
      case 2:
        uint64_t v60 = @"SPEAKERPHONE_AUDIO_ROUTE";
        break;
      default:
        uint64_t v76 = BackingType;
        uint64_t v60 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)"));
        goto LABEL_25;
    }

    uint64_t v64 = v60;
LABEL_25:
    static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    OUTLINED_FUNCTION_68_15();
    goto LABEL_26;
  }

void specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)( void *a1, void *a2, void *a3, void (*a4)(Swift::Bool, uint64_t *))
{
  uint64_t v6 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_83_8();
  Swift::Bool v10 = PhoneCallNLIntent.isEmergencyCall()();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)&v87);
  a4(v10, &v87);
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v87, v11, v12);
  __swift_project_boxed_opaque_existential_1(&v87, v90);
  OUTLINED_FUNCTION_83_8();
  DeviceState.isVoiceTrigger.getter();
  if ((v13 & 1) == 0)
  {
    if (a3)
    {
      uint64_t v13 = (uint64_t)[a3 _metadata];
      if (v13)
      {
        uint64_t v16 = (void *)v13;
        [(id)v13 triggerMethod];
      }
    }
  }

  OUTLINED_FUNCTION_9_24(v13, v14, v15);
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  uint64_t v19 = __swift_project_boxed_opaque_existential_1(a2, v17);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 112))(v17, v18))
  {
LABEL_13:
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    OUTLINED_FUNCTION_47_15();
    OUTLINED_FUNCTION_64_11();
    __asm { BR              X10 }
  }

  if ((OUTLINED_FUNCTION_73_16() & 1) == 0)
  {
    OUTLINED_FUNCTION_77_0();
    goto LABEL_13;
  }

  OUTLINED_FUNCTION_38_21();
  if (!v39) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v20, (uint64_t)static Logger.siriPhone);
  os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_93(v21))
  {
    uint64_t v22 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
    OUTLINED_FUNCTION_7_0(32LL);
    OUTLINED_FUNCTION_86_8();
    *uint64_t v22 = 136315138;
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
    uint64_t v30 = OUTLINED_FUNCTION_13_51(v23, v23, v24, v25, v26, v27, v28, v29, v78, v81, v84);
    uint64_t v93 = OUTLINED_FUNCTION_12_8(v30, v31, v32, v33, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v22 + 1, v22 + 3);
    uint64_t v6 = v4;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_62(&dword_0, v35, v36, "#%s Request is made in ambient mode. Routing to HS audio route.");
    OUTLINED_FUNCTION_48_13();
    OUTLINED_FUNCTION_0_2((uint64_t)a1);
    OUTLINED_FUNCTION_0_2((uint64_t)v22);
  }

  uint64_t v37 = _INCallAudioRouteHeySiriAudioRoute;
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_38_21();
  if (!v39) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v40 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v40, (uint64_t)static Logger.siriPhone);
  os_log_type_t v41 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_52_15(v41))
  {
    uint64_t v42 = OUTLINED_FUNCTION_7_0(22LL);
    OUTLINED_FUNCTION_7_0(64LL);
    OUTLINED_FUNCTION_86_8();
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>.Type);
    uint64_t v50 = OUTLINED_FUNCTION_13_51(v43, v43, v44, v45, v46, v47, v48, v49, v78, v81, v6);
    uint64_t v55 = OUTLINED_FUNCTION_12_8(v50, v51, v52, v53, v54);
    OUTLINED_FUNCTION_23_31(v55, v56, v57, v58, v59, v60, v61, v62, v79, v82, v85, v87, v88, v89, v90, v91, v92, v93);
    OUTLINED_FUNCTION_129();
    *(_WORD *)(v42 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    if (!v37)
    {
      OUTLINED_FUNCTION_50_4();
LABEL_29:
      uint64_t v69 = OUTLINED_FUNCTION_36_20(v65, v66, v67);
      OUTLINED_FUNCTION_30_25(v69, v70, v71, v72, v73, v74, v75, v76, v80, v83, v86, v87, v88, v89, v90, v91, v92, v93);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_62_10(&dword_0, v77, (os_log_type_t)v17, "#%s --> %s");
      OUTLINED_FUNCTION_49_16();
      OUTLINED_FUNCTION_0_2((uint64_t)a1);
      OUTLINED_FUNCTION_0_2(v42);

      goto LABEL_30;
    }

    uint64_t BackingType = INCallAudioRouteGetBackingType(v37);
    switch((_DWORD)BackingType)
    {
      case 4:
        uint64_t v64 = @"HEY_SIRI_AUDIO_ROUTE";
        break;
      case 3:
        uint64_t v64 = @"BLUETOOTH_AUDIO_ROUTE";
        break;
      case 2:
        uint64_t v64 = @"SPEAKERPHONE_AUDIO_ROUTE";
        break;
      default:
        uint64_t v80 = BackingType;
        uint64_t v64 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)"));
        goto LABEL_28;
    }

    uint64_t v68 = v64;
LABEL_28:
    static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    OUTLINED_FUNCTION_68_15();
    goto LABEL_29;
  }

LABEL_30:
  OUTLINED_FUNCTION_1_6();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.State.description.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_32_28();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v0, v0);
  int v5 = OUTLINED_FUNCTION_18_40(v0);
  if (v5)
  {
    if (v5 == 1) {
      return 0xD000000000000016LL;
    }
    else {
      return 0x74656C706D6F632ELL;
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v0, v1);
    v10[0] = 0x65726577736E612ELL;
    v10[1] = 0xEA00000000002864LL;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
    v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v7);
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    uint64_t v6 = v10[0];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }

  return v6;
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for EmergencyDuringOngoingCallOfferFlow.State,  (uint64_t)&nominal type descriptor for EmergencyDuringOngoingCallOfferFlow.State);
}

uint64_t outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t static EmergencyDuringOngoingCallOfferFlow.State.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = OUTLINED_FUNCTION_32_28();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EmergencyDuringOngoingCallOfferFlow.State, EmergencyDuringOngoingCallOfferFlow.State));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  uint64_t v11 = v2 + *(int *)(v10 + 48);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, v2);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a2, v11);
  int v12 = OUTLINED_FUNCTION_18_40(v2);
  if (!v12)
  {
    outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v2, v3);
    if (!OUTLINED_FUNCTION_18_40(v11))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v11, v6);
      char v13 = static ConfirmationResponse.== infix(_:_:)(v3, v9);
      uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
      v14(v9, v6);
      v14((char *)v3, v6);
      OUTLINED_FUNCTION_82_9();
      return v13 & 1;
    }

    OUTLINED_FUNCTION_0_14(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    goto LABEL_9;
  }

  if (v12 == 1)
  {
  }

  else if (OUTLINED_FUNCTION_18_40(v11) != 2)
  {
LABEL_9:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v2,  &demangling cache variable for type metadata for (EmergencyDuringOngoingCallOfferFlow.State, EmergencyDuringOngoingCallOfferFlow.State));
    char v13 = 0;
    return v13 & 1;
  }

  OUTLINED_FUNCTION_82_9();
  char v13 = 1;
  return v13 & 1;
}

uint64_t outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t key path setter for EmergencyDuringOngoingCallOfferFlow.state : EmergencyDuringOngoingCallOfferFlow( uint64_t a1)
{
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, (uint64_t)v3);
  return EmergencyDuringOngoingCallOfferFlow.state.setter((uint64_t)v3);
}

void EmergencyDuringOngoingCallOfferFlow.state.didset()
{
  uint64_t v1 = v0;
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  uint64_t v5 = swift_retain_n(v0, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v18 = v10;
    uint64_t v11 = v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state;
    swift_beginAccess( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state,  v17,  0LL,  0LL);
    outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v11, (uint64_t)v3);
    uint64_t v12 = EmergencyDuringOngoingCallOfferFlow.State.description.getter();
    unint64_t v14 = v13;
    outlined destroy of EmergencyDuringOngoingCallOfferFlow.State((uint64_t)v3);
    uint64_t v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17, v9 + 4);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v6, v8, "#EmergencyDuringOngoingCallOfferFlow transitioning to state = %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v0, 2LL);
  }

uint64_t EmergencyDuringOngoingCallOfferFlow.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(v3, a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.state.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state;
  swift_beginAccess( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state,  v5,  33LL,  0LL);
  outlined assign with copy of EmergencyDuringOngoingCallOfferFlow.State(a1, v3);
  swift_endAccess(v5);
  EmergencyDuringOngoingCallOfferFlow.state.didset();
  return outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(a1);
}

void EmergencyDuringOngoingCallOfferFlow.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

uint64_t EmergencyDuringOngoingCallOfferFlow.commonCats.getter()
{
  return swift_retain(*(void *)(v0
                                + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCats));
}

void EmergencyDuringOngoingCallOfferFlow.commonCatPatterns.getter(uint64_t a1@<X8>)
{
}

void EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)()
{
  uint64_t v21 = v0;
  uint64_t v2 = (void *)v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v15 = *(void *)(v1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v1, v16);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v19 = v18 - v17;
  (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
  specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( v14,  v12,  v10,  v8,  v6,  v4,  v19,  v21,  v16,  v15);
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_7_5();
}

void EmergencyDuringOngoingCallOfferFlow.__allocating_init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)()
{
  uint64_t v11 = OUTLINED_FUNCTION_19_32(v9, v10, v19);
  OUTLINED_FUNCTION_8_51(v11, v12, v13, v14, v15, v16, v17, v18, v20, v21, v22);
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_7_5();
}

void EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)()
{
  uint64_t v11 = OUTLINED_FUNCTION_19_32(v9, v10, v19);
  OUTLINED_FUNCTION_8_51(v11, v12, v13, v14, v15, v16, v17, v18, v20, v21, v22);
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_7_5();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  __swift_storeEnumTagSinglePayload(v3, 1LL, 1LL, v6);
  uint64_t v7 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_404A60, 56LL);
  v7[2] = 0LL;
  v7[3] = 0LL;
  v7[4] = a1;
  v7[5] = a2;
  v7[6] = v2;
  OUTLINED_FUNCTION_3_8();
  swift_retain();
  uint64_t v8 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v3,  (uint64_t)&async function pointer to partial apply for closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:),  (uint64_t)v7);
  return swift_release(v8);
}

uint64_t closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  v6[3] = a5;
  uint64_t v8 = type metadata accessor for ExecuteResponse(0LL);
  void v6[4] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  void v6[5] = v9;
  uint64_t v10 = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v6[6] = v10;
  uint64_t v11 = *(int **)(*(void *)a6 + 176LL);
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)v11 + *v11);
  uint64_t v12 = (void *)swift_task_alloc(v11[1]);
  v6[7] = v12;
  *uint64_t v12 = v6;
  v12[1] = closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:);
  return v14(v10);
}

uint64_t closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)()
{
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.execute()(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[22] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v4 = (*(void *)(*(void *)(type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL) - 8) + 64LL)
      + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[23] = swift_task_alloc(v4);
  v2[24] = swift_task_alloc(v4);
  return OUTLINED_FUNCTION_5_7();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 192);
  (*(void (**)(void))(**(void **)(v0 + 168) + 128LL))();
  uint64_t v2 = OUTLINED_FUNCTION_32_28();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 2LL, v2);
  if (!(_DWORD)EnumTagSinglePayload)
  {
    uint64_t v22 = *(void *)(v0 + 184);
    outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State(*(void *)(v0 + 192), v22);
    uint64_t v23 = *(void *)(v2 - 8);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v2);
    if ((_DWORD)v24 == enum case for ConfirmationResponse.confirmed(_:))
    {
      uint64_t v25 = EmergencyDuringOngoingCallOfferFlow.chooseNextFlowForComplete()(v24);
      static ExecuteResponse.complete(next:)(v25);
      goto LABEL_8;
    }

    if ((_DWORD)v24 == enum case for ConfirmationResponse.rejected(_:))
    {
      *(void *)(v0 + 144) = EmergencyDuringOngoingCallOfferFlow.makePromptCancelledOutputFlow()();
      type metadata accessor for SimpleOutputFlowAsync(0LL);
      static ExecuteResponse.complete<A>(next:)(v0 + 144);
      goto LABEL_8;
    }

    uint64_t EnumTagSinglePayload = (*(uint64_t (**)(void, uint64_t))(v23 + 8))(*(void *)(v0 + 184), v2);
LABEL_10:
    static ExecuteResponse.complete()(EnumTagSinglePayload);
    goto LABEL_11;
  }

  if ((_DWORD)EnumTagSinglePayload != 1) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void **)(v4 + 16);
  uint64_t v6 = *(void **)(v4 + 24);
  uint64_t v7 = (void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  char v8 = *(_BYTE *)(v4 + 32);
  outlined init with copy of SharedGlobalsProviding( v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals,  v0 + 64);
  type metadata accessor for StartCallCATs(0LL);
  id v9 = outlined copy of EmergencyDuringOngoingCallPromptType(v5, v6, v8);
  static CATOption.defaultMode.getter(v9);
  OUTLINED_FUNCTION_42_10();
  type metadata accessor for OngoingCallCATs(0LL);
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_42_10();
  type metadata accessor for StartCallCATsSimple(0LL);
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_5_45();
  type metadata accessor for OngoingCallCATsSimple(0LL);
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_5_45();
  uint64_t v10 = type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy();
  OUTLINED_FUNCTION_8_2(v10, 112LL);
  uint64_t v11 = EmergencyDuringOngoingCallConfirmationStrategy.init(type:sharedGlobals:startCallCats:ongoingCallCats:startCallCATsSimple:ongoingCallCATsSimple:)();
  uint64_t v12 = v7[3];
  uint64_t v13 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v12);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
  swift_retain();
  v14(v12, v13);
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 56);
  uint64_t v17 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v15);
  *(void *)(v0 + 128) = v15;
  *(void *)(v0 + 136) = v16;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 104));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16LL))( boxed_opaque_existential_1,  v17,  v15);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  OUTLINED_FUNCTION_15_2(v19);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type EmergencyDuringOngoingCallConfirmationStrategy and conformance EmergencyDuringOngoingCallConfirmationStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy);
  uint64_t v21 = PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)(v20, v11, v0 + 104, v10, v20);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  *(void *)(v0 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v21;
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider> and conformance PromptForConfirmationFlowAsync<A, B>,  &demangling cache variable for type metadata for PromptForConfirmationFlowAsync<(), SimpleConfirmationResponseProvider>);
  OUTLINED_FUNCTION_3_8();
  static ExecuteResponse.ongoing<A>(next:childCompletion:)( v0 + 152,  partial apply for implicit closure #2 in implicit closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(),  v4,  v19);
  swift_release(v11);
  OUTLINED_FUNCTION_22();
LABEL_8:
  OUTLINED_FUNCTION_38_1();
LABEL_11:
  uint64_t v26 = *(void *)(v0 + 184);
  uint64_t v27 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 176);
  OUTLINED_FUNCTION_82_9();
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.onPromptComplete(_:)()
{
  uint64_t v43 = v2;
  uint64_t v44 = v3;
  uint64_t v42 = v1;
  uint64_t v5 = v4;
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v41 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = OUTLINED_FUNCTION_32_28();
  uint64_t v40 = *(void *)(v11 - 8);
  __chkstk_darwin();
  char v39 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PromptResult<SimpleConfirmationResponseProvider>);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v17 = OUTLINED_FUNCTION_5_50();
  uint64_t v18 = ((uint64_t (*)(uint64_t))type metadata accessor for SimpleConfirmationResponseProvider)(v17);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v22 = v21 - v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v0, v5, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 88))(v0, v15) != enum case for PromptResult.answered<A>(_:))
  {
    OUTLINED_FUNCTION_88_10(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    goto LABEL_5;
  }

  OUTLINED_FUNCTION_88_10(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96));
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v22, v0, v18);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v22;
  ((void (*)(uint64_t))SimpleConfirmationResponseProvider.confirmationResponse.getter)(v23);
  if (__swift_getEnumTagSinglePayload(v10, 1LL, v11) == 1)
  {
    OUTLINED_FUNCTION_22_33();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v10,  &demangling cache variable for type metadata for ConfirmationResponse?);
LABEL_5:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v24 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = (os_log_s *)OUTLINED_FUNCTION_9();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10(v26))
    {
      uint64_t v27 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v27 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v25,  (os_log_type_t)v5,  "#EmergencyDuringOngoingCallOfferFlow Did not receive .answered from child confirmation flow",  v27);
      OUTLINED_FUNCTION_0_2((uint64_t)v27);
    }

    return OUTLINED_FUNCTION_17_42(v41, 2LL);
  }

  uint64_t v29 = v40;
  uint64_t v30 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v14, v10, v11);
  unint64_t v31 = v39;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v39, v30, v11);
  uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v31, v11);
  if ((_DWORD)v32 == enum case for ConfirmationResponse.confirmed(_:)
    || (_DWORD)v32 == enum case for ConfirmationResponse.rejected(_:))
  {
    uint64_t v33 = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 104))(v41, v32, v11);
    OUTLINED_FUNCTION_17_42(v33, 0LL);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v11);
    return OUTLINED_FUNCTION_22_33();
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v34 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v34, (uint64_t)static Logger.siriPhone);
    uint64_t v35 = (os_log_s *)OUTLINED_FUNCTION_9();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10(v36))
    {
      uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v37 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v35,  (os_log_type_t)v22,  "#EmergencyDuringOngoingCallOfferFlow Received an unknown ConfirmationResponse",  v37);
      OUTLINED_FUNCTION_0_2((uint64_t)v37);
    }

    OUTLINED_FUNCTION_17_42(v41, 2LL);
    uint64_t v38 = *(void (**)(char *, uint64_t))(v29 + 8);
    v38(v30, v11);
    OUTLINED_FUNCTION_22_33();
    return ((uint64_t (*)(char *, uint64_t))v38)(v31, v11);
  }

uint64_t EmergencyDuringOngoingCallOfferFlow.makePromptCancelledOutputFlow()()
{
  uint64_t v0 = OUTLINED_FUNCTION_5_50();
  type metadata accessor for CATOption(v0);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  OUTLINED_FUNCTION_65();
  uint64_t v1 = OUTLINED_FUNCTION_5_45();
  uint64_t v2 = swift_retain();
  uint64_t v3 = static DialogPhase.canceled.getter(v2);
  OUTLINED_FUNCTION_132(v3, (uint64_t)v10);
  uint64_t v4 = type metadata accessor for DialogOutputFactory(0LL);
  OUTLINED_FUNCTION_15_2(v4);
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v6 = v5;
  uint64_t v7 = swift_release(v1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 112LL))(v7);
  OUTLINED_FUNCTION_38_1();
  return v8;
}

uint64_t EmergencyDuringOngoingCallOfferFlow.chooseNextFlowForComplete()(uint64_t a1)
{
  void (*v8)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_s *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void v37[5];
  _BYTE v38[56];
  _BYTE v39[40];
  __int128 v40;
  void v41[4];
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  void __dst[22];
  uint64_t v2 = v1;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  OUTLINED_FUNCTION_132(a1, (uint64_t)v39);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
  uint64_t v4 = type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject(v4, v38);
  v41[1] = &type metadata for PhoneCallFeatureFlags;
  v41[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v40 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_404C78, 192LL);
  memcpy((void *)(v40 + 16), __dst, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v40, inited + 16);
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v6);
  uint64_t v8 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  outlined retain of PhoneCallFeatureFlags(__dst);
  v8(v37, v6, v7);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v37, (uint64_t)&v40);
  OUTLINED_FUNCTION_22();
  __swift_destroy_boxed_opaque_existential_1(v37);
  uint64_t v44 = *((void *)&v40 + 1);
  uint64_t v9 = v40;
  outlined release of Set<String>(&v44);
  outlined init with take of String?((uint64_t)v41, (uint64_t)v43);
  outlined release of String?((uint64_t)v43);
  uint64_t v42 = v41[3];
  outlined release of Set<String>(&v42);
  uint64_t v10 = type metadata accessor for StartCallRCHFlowDelegate(0LL);
  OUTLINED_FUNCTION_132(v10, (uint64_t)v37);
  OUTLINED_FUNCTION_3_8();
  uint64_t v11 = StartCallRCHFlowDelegate.__allocating_init(sharedGlobals:appResolved:)(v37, v9);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = (os_log_s *)OUTLINED_FUNCTION_9();
  uint64_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v16 = (uint8_t *)OUTLINED_FUNCTION_1_0();
    *(_WORD *)uint64_t v16 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v13, v15, "#EmergencyDuringOngoingCallOfferFlow choosing next flow", v16);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  uint64_t v18 = *(void **)(v2 + 16);
  uint64_t v17 = *(void **)(v2 + 24);
  if (!*(_BYTE *)(v2 + 32))
  {
    uint64_t v25 = *(void **)(v2 + 40);
    os_log_type_t v26 = v18;
    uint64_t v27 = EmergencyDuringOngoingCallOfferFlow.makeEmergencyStartCallIntent(localEmergencyPerson:previousIntent:)( v18,  v25);
    OUTLINED_FUNCTION_31_27((uint64_t)v27);
    uint64_t v29 = v28;
    v37[0] = v28;
    uint64_t v30 = OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>);
    uint64_t v24 = Flow.eraseToAnyFlow()(v30);

    swift_release(v11);
    outlined consume of EmergencyDuringOngoingCallPromptType(v18, v17, 0);
    swift_release(v29);
    unint64_t v31 = v9;
LABEL_12:
    swift_release(v31);
    goto LABEL_13;
  }

  if (*(_BYTE *)(v2 + 32) != 1)
  {
    uint64_t v32 = EmergencyDuringOngoingCallOfferFlow.makeEmergencyStartCallIntent(localEmergencyPerson:previousIntent:)( 0LL,  *(void **)(v2 + 40));
    OUTLINED_FUNCTION_31_27((uint64_t)v32);
    uint64_t v34 = v33;
    v37[0] = v33;
    uint64_t v35 = OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type AnyValueFlow<RCHFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>);
    uint64_t v24 = Flow.eraseToAnyFlow()(v35);
    swift_release(v34);
    OUTLINED_FUNCTION_22();

    unint64_t v31 = v11;
    goto LABEL_12;
  }

  uint64_t v19 = v18;
  uint64_t v20 = v17;
  OngoingCallRCHFlowFactory.makeHandleIntentFlow(app:intent:intentResponse:)(v9, v19, v20);
  uint64_t v22 = v21;
  v37[0] = v21;
  uint64_t v23 = OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_27_20(&lazy protocol witness table cache variable for type AnyHandleIntentFlow<INStartCallIntent, INStartCallIntentResponse> and conformance AnyHandleIntentFlow<A, B>);
  uint64_t v24 = Flow.eraseToAnyFlow()(v23);
  swift_release(v22);
  OUTLINED_FUNCTION_22();
  swift_release(v11);

LABEL_13:
  outlined destroy of OngoingCallRCHFlowFactory((uint64_t)v39);
  return v24;
}

id EmergencyDuringOngoingCallOfferFlow.makeEmergencyStartCallIntent(localEmergencyPerson:previousIntent:)( void *a1, void *a2)
{
  void (*v10)(_OWORD *__return_ptr, __int128 *, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v22;
  __n128 v23;
  _OWORD v24[2];
  uint64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  _UNKNOWN **v28;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  outlined init with copy of SharedGlobalsProviding( v2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals,  (uint64_t)&v26);
  uint64_t v7 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_404C28, 64LL);
  outlined init with take of AppSelectionSignalComponent(&v26, v7 + 16);
  *(void *)(v7 + 56) = a2;
  id v8 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0LL);
  Transformer.init(transform:)( partial apply for specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:),  v7,  v9);
  uint64_t v10 = (void (*)(_OWORD *__return_ptr, __int128 *, __n128))Transformer.transform.getter(v5);
  uint64_t v25 = 0LL;
  memset(v24, 0, sizeof(v24));
  uint64_t v27 = &type metadata for PhoneCallDirectInvocationNLIntent;
  uint64_t v28 = &protocol witness table for PhoneCallDirectInvocationNLIntent;
  *(void *)&os_log_type_t v26 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_404C50, 120LL);
  v23.n128_u64[1] = (unint64_t)_swiftEmptyArrayStorage;
  v23.n128_u64[0] = (unint64_t)_swiftEmptyArrayStorage;
  WORD2(v2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 518;
  LODWORD(v2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 287507209;
  uint64_t v11 = PhoneCallDirectInvocationNLIntent.init(app:contacts:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:contactQueries:references:)( (uint64_t)v24,  (uint64_t)_swiftEmptyArrayStorage,  2,  0LL,  4,  2,  5,  1,  (uint64_t)v26 + 16,  v22,  v23,  (uint64_t)_swiftEmptyArrayStorage);
  v10(v24, &v26, v11);
  OUTLINED_FUNCTION_38_1();
  uint64_t v12 = *(void *)&v24[0];
  __swift_destroy_boxed_opaque_existential_1(&v26);
  if (a1)
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 40LL);
    *(_OWORD *)(v14 + 16) = xmmword_31FE60;
    *(void *)(v14 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
    *(void *)&os_log_type_t v26 = v14;
    specialized Array._endMutation()(v14, v15, v16, v17);
    uint64_t v18 = v26;
  }

  else
  {
    uint64_t v18 = 0LL;
  }

  objc_allocWithZone(&OBJC_CLASS___INStartCallIntent);
  uint64_t v19 = a1;
  uint64_t v20 = @nonobjc INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:)( 0LL,  0LL,  v12,  2LL,  1LL,  v18,  0LL,  1LL);
  OUTLINED_FUNCTION_0_14(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  return v20;
}

void EmergencyDuringOngoingCallOfferFlow.toAnyConfirmIntentFlow<A>()()
{
  uint64_t v1 = OUTLINED_FUNCTION_67_14();
  type metadata accessor for AnyConfirmIntentFlow(v1);
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter(0LL, v0, v2, v3);
  char v14 = OUTLINED_FUNCTION_77_8();
  OUTLINED_FUNCTION_3_8();
  uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>,  v0);
  uint64_t v12 = OUTLINED_FUNCTION_84_8(WitnessTable, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  AnyConfirmIntentFlow.__allocating_init<A>(_:)(v12);
  OUTLINED_FUNCTION_24_0();
}

uint64_t TrialSmartAppSelectionConfigProvider.__allocating_init(trialConfigSource:)(uint64_t a1)
{
  uint64_t result = swift_allocObject(v1, 24LL, 7LL);
  *(void *)(result + 16) = a1;
  return result;
}

void EmergencyDuringOngoingCallOfferFlow.toAnyUnsupportedValueFlow<A>()()
{
  uint64_t v1 = OUTLINED_FUNCTION_67_14();
  type metadata accessor for AnyUnsupportedValueFlow(v1);
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter(0LL, v0, v2, v3);
  char v14 = OUTLINED_FUNCTION_77_8();
  OUTLINED_FUNCTION_3_8();
  uint64_t WitnessTable = swift_getWitnessTable( &protocol conformance descriptor for EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A>,  v0);
  uint64_t v12 = OUTLINED_FUNCTION_84_8(WitnessTable, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  AnyUnsupportedValueFlow.__allocating_init<A>(_:)(v12);
  OUTLINED_FUNCTION_24_0();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter( (uint64_t (*)(uint64_t, void))&type metadata accessor for ConfirmIntentAnswer,  a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.on(input:)()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 160LL))() & 1;
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.execute(completion:)()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 168LL))();
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.__deallocating_deinit()
{
  uint64_t v0 = ThirdPartyAnnotatedAppStore.deinit();
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t protocol witness for Flow.on(input:) in conformance EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>()
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.on(input:)() & 1;
}

uint64_t protocol witness for Flow.execute(completion:) in conformance EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>()
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.execute(completion:)();
}

uint64_t protocol witness for Flow.exitValue.getter in conformance EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>@<X0>( uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter(a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter.exitValue.getter@<X0>( uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter( (uint64_t (*)(uint64_t, void))&type metadata accessor for IntentPromptAnswer,  a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter.exitValue.getter@<X0>( uint64_t (*a1)(uint64_t, void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = enum case for PromptResult.cancelled<A>(_:);
  uint64_t v6 = a1(255LL, *(void *)(v4 + 80));
  uint64_t v7 = type metadata accessor for PromptResult(0LL, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104LL))(a2, v5, v7);
}

uint64_t protocol witness for Flow.onAsync(input:) in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A1>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for Flow.onAsync(input:) in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A1>;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t protocol witness for Flow.execute() in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A1>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.execute()[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return Flow.execute()(a1, a2, a3);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A>@<X0>( uint64_t a1@<X8>)
{
  return EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter.exitValue.getter(a1);
}

uint64_t EmergencyDuringOngoingCallOfferFlow.deinit()
{
  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCats));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCatPatterns));
  return v0;
}

uint64_t EmergencyDuringOngoingCallOfferFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.execute() in conformance EmergencyDuringOngoingCallOfferFlow(uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 176LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return v7(a1);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance EmergencyDuringOngoingCallOfferFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

void specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)( void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  if (!v4) {
    *a4 = v6;
  }
}

{
  uint64_t v4;
  uint64_t v6;
  specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3);
  if (!v4) {
    *a4 = v6;
  }
}

{
  uint64_t v4;
  uint64_t v6;
  specialized closure #1 in static Transformer<>.transformer<A>(intentType:sharedGlobals:previousIntent:)(a1, a2, a3);
  if (!v4) {
    *a4 = v6;
  }
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v23 = a6;
  type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  __chkstk_darwin();
  uint64_t v18 = &v24[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  v26[3] = a9;
  void v26[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32LL))(boxed_opaque_existential_1, a7, a9);
  uint64_t v20 = type metadata accessor for ConfirmationResponse(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1LL, 2LL, v20);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a5, (uint64_t)v25);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v26, (uint64_t)v24);
  uint64_t v21 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, _BYTE *))(a8 + 152))( v18,  a1,  a2,  a3,  a4,  v25,  v23,  v24);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return v21;
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( uint64_t a1, void *a2, void *a3, char a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v39[3] = a10;
  _OWORD v39[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32LL))( boxed_opaque_existential_1,  a8,  a10);
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State( a1,  a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state);
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(_BYTE *)(a9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(a9 + 40) = a5;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a6,  a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  *(void *)(a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCats) = a7;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v39,  a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCatPatterns);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  uint64_t v20 = one-time initialization token for siriPhone;
  id v21 = a5;
  swift_retain();
  if (v20 != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v22 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  id v23 = outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v26 = static os_log_type_t.debug.getter(v24, v25);
  if (os_log_type_enabled(v24, v26))
  {
    uint64_t v35 = v21;
    os_log_type_t v36 = a6;
    uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = v33;
    *(_DWORD *)uint64_t v27 = 136315138;
    outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    uint64_t v34 = a1;
    unint64_t v28 = EmergencyDuringOngoingCallPromptType.description.getter(a2, a3, a4);
    unint64_t v30 = v29;
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v27 + 4);
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    _os_log_impl(&dword_0, v24, v26, "#EmergencyDuringOngoingCallOfferFlow initialized with promptType: %s", v27, 0xCu);
    swift_arrayDestroy(v33, 1LL);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v27, -1LL, -1LL);

    swift_release(a7);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    __swift_destroy_boxed_opaque_existential_1(v36);
    uint64_t v31 = v34;
  }

  else
  {

    swift_release(a7);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    __swift_destroy_boxed_opaque_existential_1(a6);
    uint64_t v31 = a1;
  }

  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v31);
  __swift_destroy_boxed_opaque_existential_1(v39);
  return a9;
}

uint64_t sub_173CEC()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t partial apply for closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc(dword_434DCC);
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return closure #1 in EmergencyDuringOngoingCallOfferFlow.execute(completion:)(a1, v4, v5, v6, v7, v8);
}

id outlined copy of EmergencyDuringOngoingCallPromptType(id result, void *a2, char a3)
{
  if (a3)
  {
    if (a3 != 1) {
      return result;
    }
    id v3 = result;
    uint64_t result = a2;
  }

  return result;
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter);
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter);
}

void outlined consume of EmergencyDuringOngoingCallPromptType(void *a1, void *a2, char a3)
{
  if (a3)
  {
    if (a3 != 1) {
      return;
    }

    a1 = a2;
  }
}

uint64_t sub_173E2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 128LL))();
}

uint64_t ObjC metadata update function for EmergencyDuringOngoingCallOfferFlow()
{
  return type metadata accessor for EmergencyDuringOngoingCallOfferFlow(0LL);
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallOfferFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for EmergencyDuringOngoingCallOfferFlow,  (uint64_t)&nominal type descriptor for EmergencyDuringOngoingCallOfferFlow);
}

uint64_t type metadata completion function for EmergencyDuringOngoingCallOfferFlow(uint64_t a1)
{
  v4[0] = &unk_32BA18;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = &unk_32BA30;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[5] = &unk_32BA30;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EmergencyDuringOngoingCallOfferFlow.State( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain();
  }

  else
  {
    uint64_t v7 = type metadata accessor for ConfirmationResponse(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2LL, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 2LL, v7);
    }
  }

  return a1;
}

uint64_t destroy for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 2LL, v2);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  }
  return result;
}

void *initializeWithCopy for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 2LL, v6);
  }

  return a1;
}

void *assignWithCopy for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 2LL, v6);
  return a1;
}

void *initializeWithTake for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 2LL, v6);
  }

  return a1;
}

void *assignWithTake for EmergencyDuringOngoingCallOfferFlow.State(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConfirmationResponse(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 2LL, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyDuringOngoingCallOfferFlow.State( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17431C);
}

uint64_t sub_17431C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_32_28();
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3) {
    return EnumTagSinglePayload - 2;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for EmergencyDuringOngoingCallOfferFlow.State( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_174368);
}

uint64_t sub_174368(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = OUTLINED_FUNCTION_32_28();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t getEnumTag for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConfirmationResponse(0LL);
  return __swift_getEnumTagSinglePayload(a1, 2LL, v2);
}

uint64_t destructiveInjectEnumTag for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse(0LL);
  return __swift_storeEnumTagSinglePayload(a1, a2, 2LL, v4);
}

uint64_t type metadata completion function for EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1)
{
  uint64_t result = type metadata accessor for ConfirmationResponse(319LL);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256LL, *(void *)(result - 8) + 64LL, 2LL);
    return 0LL;
  }

  return result;
}

uint64_t base witness table accessor for Flow in EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A>( uint64_t a1)
{
  return swift_getWitnessTable( &protocol conformance descriptor for EmergencyDuringOngoingCallOfferFlow.UnsupportedValueFlowAdapter<A>,  a1);
}

uint64_t base witness table accessor for Flow in EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>( uint64_t a1)
{
  return swift_getWitnessTable( &protocol conformance descriptor for EmergencyDuringOngoingCallOfferFlow.ConfirmIntentFlowAdapter<A>,  a1);
}

uint64_t sub_174490()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_1744BC()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 120LL, 7LL);
}

uint64_t outlined assign with copy of EmergencyDuringOngoingCallOfferFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_174554()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

uint64_t outlined destroy of OngoingCallRCHFlowFactory(uint64_t a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_71( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, a2, v12, v11);
}

void OUTLINED_FUNCTION_7_62(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_8_51( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( v16,  v15,  v14,  v13,  v12,  *(void **)(v17 - 96),  *(void *)(v17 - 88),  v11,  a9,  a10,  a11);
}

uint64_t OUTLINED_FUNCTION_10_50(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_11_50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  return String.init<A>(describing:)(va, a2);
}

uint64_t OUTLINED_FUNCTION_13_51( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  return String.init<A>(describing:)(va, a2);
}

uint64_t OUTLINED_FUNCTION_16_35(uint64_t a1)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7072656B61657073LL, 0xEC000000656E6F68LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_17_42(uint64_t a1, uint64_t a2)
{
  return EmergencyDuringOngoingCallOfferFlow.state.setter(v2);
}

uint64_t OUTLINED_FUNCTION_18_40(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 2LL, v1);
}

uint64_t OUTLINED_FUNCTION_19_32@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t OUTLINED_FUNCTION_22_33()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_23_31( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  a18 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a18, v18 + 8, v20, v19 + 12);
}

uint64_t OUTLINED_FUNCTION_24_26()
{
  return swift_arrayDestroy(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_28_31()
{
  return 0x65756C625F746F6ELL;
}

uint64_t OUTLINED_FUNCTION_30_25( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  a18 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a18, v20, v18, v19 + 22);
}

void OUTLINED_FUNCTION_31_27(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_32_28()
{
  return type metadata accessor for ConfirmationResponse(0LL);
}

void OUTLINED_FUNCTION_33_34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 - 96) = a6;
  *(void *)(v7 - 88) = a7;
}

uint64_t OUTLINED_FUNCTION_36_20(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v3, (uint64_t *)va);
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_43_13()
{
}

void OUTLINED_FUNCTION_44_17(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_45_17()
{
  return 0x746F6F7465756C62LL;
}

uint64_t OUTLINED_FUNCTION_47_15()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_48_13()
{
  return swift_arrayDestroy(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_49_16()
{
  return swift_arrayDestroy(v0, 2LL);
}

BOOL OUTLINED_FUNCTION_52_15(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_53_16(float a1)
{
  float *v1 = a1;
}

void OUTLINED_FUNCTION_56_13(float a1)
{
  float *v1 = a1;
}

void OUTLINED_FUNCTION_62_10(void *a1, uint64_t a2, os_log_type_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_63_11()
{
  return swift_bridgeObjectRelease(0xEC000000656E6F68LL);
}

uint64_t OUTLINED_FUNCTION_67_14()
{
  return 0LL;
}

void OUTLINED_FUNCTION_68_15()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_73_16()
{
  return CurrentRequest.isInAmbient.getter();
}

uint64_t OUTLINED_FUNCTION_77_8()
{
  return TrialSmartAppSelectionConfigProvider.__allocating_init(trialConfigSource:)(v0);
}

uint64_t OUTLINED_FUNCTION_82_9()
{
  return outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v0);
}

uint64_t OUTLINED_FUNCTION_83_8()
{
  return v0;
}

char *OUTLINED_FUNCTION_84_8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

  ;
}

uint64_t OUTLINED_FUNCTION_88_10@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t AnnounceCallFlow.__allocating_init(directAction:sharedGlobals:)(uint64_t a1, void *a2)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void, uint64_t, uint64_t, void, void *);
  uint64_t v15;
  void v17[5];
  _BYTE v18[56];
  __int128 v19;
  void v20[4];
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  void __dst[22];
  uint64_t v3 = v2;
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
  uint64_t v6 = type metadata accessor for PhoneCallFeatureManager();
  uint64_t inited = swift_initStackObject(v6, v18);
  v20[1] = &type metadata for PhoneCallFeatureFlags;
  v20[2] = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&uint64_t v19 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_404D30, 192LL);
  memcpy((void *)(v19 + 16), __dst, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v19, inited + 16);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8);
  outlined retain of PhoneCallFeatureFlags(__dst);
  v10(v17, v8, v9);
  FirstPartyAnnotatedAppStore.getDefaultApp(for:)(v17, (uint64_t)&v19);
  swift_release(inited);
  uint64_t v11 = __swift_destroy_boxed_opaque_existential_1(v17);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 352LL))(v11);
  char v13 = v19;
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v17);
  char v14 = *(void (**)(void, uint64_t, uint64_t, void, void *))(v3 + 152);
  swift_retain();
  v14(0LL, v12, v13, 0LL, v17);
  uint64_t v15 = OUTLINED_FUNCTION_8_52();
  swift_release(v15);
  swift_release(a1);
  id v23 = *((void *)&v19 + 1);
  outlined release of Set<String>(&v23);
  outlined init with take of AnnotatedApp?( (uint64_t)v20,  (uint64_t)v22,  &demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v22);
  id v21 = v20[3];
  outlined release of Set<String>(&v21);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v3;
}

void AnnounceCallFlow.__allocating_init(directAction:sharedGlobals:appFinder:)( uint64_t a1, void *a2, void *a3)
{
  os_log_type_t v36 = a2;
  uint64_t v33 = OUTLINED_FUNCTION_15_1();
  uint64_t v32 = *(void *)(v33 - 8);
  uint64_t v5 = __chkstk_darwin();
  uint64_t v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = *(uint64_t (**)(void))(*(void *)a1 + 256LL);
  uint64_t v7 = (void *)((uint64_t (*)(uint64_t))v34)(v5);
  uint64_t v8 = outlined bridged method (ob) of @objc INCallRecord.providerBundleId.getter(v7);
  if (!v9) {
    goto LABEL_4;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  uint64_t v13 = a3[3];
  uint64_t v12 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v13);
  uint64_t v14 = v36[4];
  __swift_project_boxed_opaque_existential_1(v36, v36[3]);
  uint64_t v15 = OUTLINED_FUNCTION_8_52();
  v16(v15, v14);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void *, __int128 *, uint64_t, uint64_t))(v12 + 8))( v39,  v10,  v11,  _swiftEmptyArrayStorage,  &v41,  v13,  v12);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(&v41);
  uint64_t v17 = outlined init with take of AnnotatedApp?( (uint64_t)v39,  (uint64_t)v40,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v40[0])
  {
    __int128 v41 = v40[0];
    __int128 v42 = v40[1];
    __int128 v43 = v40[2];
    uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 200LL))(v17);
    uint64_t v19 = v34();
    uint64_t v20 = v41;
    id v21 = v36;
    outlined init with copy of SignalProviding((uint64_t)v36, (uint64_t)&v37);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))(v35 + 152);
    swift_retain();
    v22(v18, v19, v20, 1LL, &v37);
    swift_release(v20);
    swift_release(a1);
    uint64_t v44 = *((void *)&v41 + 1);
    outlined release of Set<String>(&v44);
    outlined init with take of AnnotatedApp?( (uint64_t)&v42,  (uint64_t)v45,  &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v45);
    uint64_t v46 = *((void *)&v43 + 1);
    outlined release of Set<String>(&v46);
    __swift_destroy_boxed_opaque_existential_1(a3);
    __swift_destroy_boxed_opaque_existential_1(v21);
    OUTLINED_FUNCTION_7_5();
  }

  else
  {
LABEL_4:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = v33;
    uint64_t v24 = __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v24, v23);
    os_log_type_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v29 = OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&__int128 v41 = v29;
      *(_DWORD *)unint64_t v28 = 136315138;
      uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000051LL,  0x800000000034BF50LL,  (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v28 + 4);
      _os_log_impl(&dword_0, v26, v27, "%s", v28, 0xCu);
      swift_arrayDestroy(v29, 1LL);
      OUTLINED_FUNCTION_0_2(v29);
      OUTLINED_FUNCTION_0_2((uint64_t)v28);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000051LL, 0x800000000034BF50LL);
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000051LL,  0x800000000034BF50LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    __break(1u);
  }

uint64_t AnnounceCallFlow.State.description.getter(void *a1)
{
  if (!a1) {
    return 0x6E41726566666F2ELL;
  }
  id v1 = a1;
  _StringGuts.grow(_:)(26LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  id v2 = [v1 description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  uint64_t v5 = v4;

  v6._uint64_t countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  v7._uint64_t countAndFlagsBits = 41LL;
  v7._object = (void *)0xE100000000000000LL;
  String.append(_:)(v7);

  return 0xD000000000000017LL;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnnounceCallFlow.State()
{
  return AnnounceCallFlow.State.description.getter(*v0);
}

void key path setter for AnnounceCallFlow.state : AnnounceCallFlow(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  AnnounceCallFlow.state.setter(v1);
}

void AnnounceCallFlow.state.didset()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    Swift::String v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v22 = v8;
    *(_DWORD *)Swift::String v7 = 136315138;
    swift_beginAccess(v0 + 16, v21, 0LL, 0LL);
    uint64_t v9 = *(void **)(v0 + 16);
    if (v9)
    {
      id v10 = v9;
      _StringGuts.grow(_:)(26LL);
      swift_bridgeObjectRelease();
      unint64_t v20 = 0x800000000034BFB0LL;
      id v11 = [v10 description];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      uint64_t v14 = v13;

      v15._uint64_t countAndFlagsBits = v12;
      v15._object = v14;
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      v16._uint64_t countAndFlagsBits = 41LL;
      v16._object = (void *)0xE100000000000000LL;
      String.append(_:)(v16);

      uint64_t v17 = 0xD000000000000017LL;
      unint64_t v18 = 0x800000000034BFB0LL;
    }

    else
    {
      unint64_t v18 = 0xEC00000072657773LL;
      uint64_t v17 = 0x6E41726566666F2ELL;
    }

    uint64_t v19 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v7 + 4);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v6, "#AnnounceCallFlow state = %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v0, 2LL);
  }

void *AnnounceCallFlow.state.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void AnnounceCallFlow.state.setter(void *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
  id v4 = a1;

  AnnounceCallFlow.state.didset();
}

uint64_t AnnounceCallFlow.announceOutputStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of AnnounceIncomingCallerOutputStrategy(v1 + 32, a1);
}

uint64_t AnnounceCallFlow.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 88, a1);
}

uint64_t AnnounceCallFlow.intentRecord.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  id v2 = objc_allocWithZone(&OBJC_CLASS___INIdentifyIncomingCallerIntent);
  swift_retain();
  id v3 = [v2 init];
  uint64_t v4 = OUTLINED_FUNCTION_49( (uint64_t)v3,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntentResponse,  &OBJC_CLASS___INIdentifyIncomingCallerIntentResponse_ptr);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 40LL);
  *(_OWORD *)(v6 + 16) = xmmword_31FE60;
  Swift::String v7 = *(void **)(v0 + 24);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  uint64_t v16 = v6;
  specialized Array._endMutation()(v6, v8, v9, v10);
  id v11 = v7;
  INIdentifyIncomingCallerIntentResponse.init(statusCode:callRecords:)(2LL, v16);
  uint64_t v13 = v12;
  uint64_t v14 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent,  &OBJC_CLASS___INIdentifyIncomingCallerIntent_ptr);
  return IntentResolutionRecord.init(app:intent:intentResponse:)(v1, v3, v13, v14, v4);
}

uint64_t AnnounceCallFlow.__allocating_init(state:callRecord:app:invocationType:sharedGlobals:)( uint64_t a1, void *a2, uint64_t a3, char a4, __int128 *a5)
{
  char v9 = a4 & 1;
  OUTLINED_FUNCTION_8_2(v5, 136LL);
  uint64_t v10 = (void *)OUTLINED_FUNCTION_8_52();
  AnnounceCallFlow.init(state:callRecord:app:invocationType:sharedGlobals:)(v10, a2, a3, v9, a5);
  return v5;
}

void AnnounceCallFlow.init(state:callRecord:app:invocationType:sharedGlobals:)( void *a1, void *a2, uint64_t a3, char a4, __int128 *a5)
{
  uint64_t v6 = v5;
  char v11 = a4 & 1;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v14 = type metadata accessor for AnnounceIncomingCallCATsSimple(0LL);
  id v15 = a1;
  id v16 = a2;
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapperSimple.__allocating_init(options:globals:)(v13, 0LL);

  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
  *(_OWORD *)(v6 + 40) = v18;
  *(void *)(v6 + 56) = v14;
  *(void *)(v6 + 64) = &protocol witness table for AnnounceIncomingCallCATsSimple;
  *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *(_BYTE *)(v6 + 80) = v11;
  *(void *)(v6 + 128) = a3;
  outlined init with take of AppSelectionSignalComponent(a5, v6 + 88);
  OUTLINED_FUNCTION_7_5();
}

uint64_t AnnounceCallFlow.execute()(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  v2[21] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[22] = v4;
  unint64_t v5 = (*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[23] = swift_task_alloc(v5);
  v2[24] = swift_task_alloc(v5);
  return swift_task_switch(AnnounceCallFlow.execute(), 0LL, 0LL);
}

uint64_t AnnounceCallFlow.execute()()
{
  uint64_t v1 = OUTLINED_FUNCTION_14_41();
  *(void *)(v0 + 200) = v1;
  if (v1)
  {
    id v2 = (void *)v1;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v3 = OUTLINED_FUNCTION_15_1();
    uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
    *(void *)(v0 + 208) = v4;
    unint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
    if (os_log_type_enabled(v5, v7))
    {
      uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl( &dword_0,  v5,  v7,  "#AnnounceCallFlow: playNotificationSound without ringtone, use regular chime",  v8,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v8);
    }

    char v9 = *(void **)(v0 + 160);

    OUTLINED_FUNCTION_49( v10,  (unint64_t *)&lazy cache variable for type metadata for SAUIPlayNotificationSound,  &OBJC_CLASS___SAUIPlayNotificationSound_ptr);
    id v11 = [v2 request];
    id v12 = [v11 identifier];

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v15 = v14;

    static String._unconditionallyBridgeFromObjectiveC(_:)(SANotificationTypeIncomingMessageValue);
    SAUIPlayNotificationSound.init(notificationId:soundType:)(v13, v15);
    uint64_t v17 = v16;
    *(void *)(v0 + 216) = v16;
    uint64_t v18 = v9[15];
    __swift_project_boxed_opaque_existential_1(v9 + 11, v9[14]);
    uint64_t v19 = OUTLINED_FUNCTION_8_52();
    v20(v19, v18);
    uint64_t v21 = *(void *)(v0 + 120);
    uint64_t v22 = *(void *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v21);
    uint64_t v23 = (void *)swift_task_alloc(async function pointer to AceServiceInvokerAsync.submit<A>(_:)[1]);
    *(void *)(v0 + 224) = v23;
    uint64_t v24 = OUTLINED_FUNCTION_49( (uint64_t)v23,  (unint64_t *)&lazy cache variable for type metadata for SABaseCommand,  &OBJC_CLASS___SABaseCommand_ptr);
    *uint64_t v23 = v0;
    v23[1] = AnnounceCallFlow.execute();
    return AceServiceInvokerAsync.submit<A>(_:)(v17, v21, v24, v22);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v26 = OUTLINED_FUNCTION_15_1();
    uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    unint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v30 = static os_log_type_t.debug.getter(v28, v29);
    if (os_log_type_enabled(v28, v30))
    {
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl( &dword_0,  v28,  v30,  "#AnnounceCallFlow: Pushing IncomingCallFollowUpFlow for follow-up offer",  v31,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v31);
    }

    uint64_t v33 = *(void *)(v0 + 184);
    uint64_t v32 = *(void *)(v0 + 192);
    uint64_t v35 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 176);
    uint64_t v36 = *(void *)(v0 + 160);

    uint64_t v37 = *(void *)(v36 + 128);
    swift_retain();
    AnnounceCallFlow.intentRecord.getter();
    uint64_t v43 = IntentResolutionRecord.intent.getter(v35);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v38(v32, v35);
    AnnounceCallFlow.intentRecord.getter();
    uint64_t v39 = IntentResolutionRecord.intentResponse.getter(v35);
    v38(v33, v35);
    outlined init with copy of SignalProviding(v36 + 88, v0 + 16);
    outlined init with copy of SignalProviding(v0 + 16, v0 + 56);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
    __int128 v41 = (void *)OUTLINED_FUNCTION_8_2(v40, 120LL);
    void v41[5] = &type metadata for AnnounceIncomingCallerOutputStrategy;
    v41[6] = &protocol witness table for AnnounceIncomingCallerOutputStrategy;
    uint64_t v42 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_404D58, 65LL);
    v41[2] = v42;
    outlined init with copy of AnnounceIncomingCallerOutputStrategy(v36 + 32, v42 + 16);
    v41[12] = v37;
    v41[13] = v43;
    v41[14] = v39;
    outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 56), (uint64_t)(v41 + 7));
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
    *(void *)(v0 + 136) = v41;
    lazy protocol witness table accessor for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>();
    static ExecuteResponse.complete<A>(next:)(v0 + 136);
    swift_release(v41);
    OUTLINED_FUNCTION_13_52();
    OUTLINED_FUNCTION_23_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

{
  void *v0;
  uint64_t v1;
  void *v2;
  __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 96));
  OUTLINED_FUNCTION_5_59();
  OUTLINED_FUNCTION_15_44();

  OUTLINED_FUNCTION_13_52();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint8_t *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_s *v3;
  os_log_type_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __swift_destroy_boxed_opaque_existential_1((void *)(v1 + 96));
  OUTLINED_FUNCTION_9_50();
  id v2 = OUTLINED_FUNCTION_9_50();
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  uint64_t v4 = static os_log_type_t.error.getter();
  unint64_t v5 = (void *)v4;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v6 = *(void *)(v1 + 232);
    uint64_t v0 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    os_log_type_t v7 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v0 = 138412290;
    OUTLINED_FUNCTION_9_50();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(void *)(v1 + 144) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v0 + 4);
    *os_log_type_t v7 = v8;
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    _os_log_impl( &dword_0,  v3,  (os_log_type_t)v5,  "#AnnounceCallFlow: Error playing sound %@, proceeding to dialog",  v0,  0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v7, 1LL);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
    OUTLINED_FUNCTION_0_2((uint64_t)v0);

    OUTLINED_FUNCTION_13_6();
  }

  else
  {
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
  }

  OUTLINED_FUNCTION_5_59();
  OUTLINED_FUNCTION_15_44();

  OUTLINED_FUNCTION_13_52();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t AnnounceCallFlow.execute()(void *a1)
{
  uint64_t v4 = *(void *)(*(void *)v2 + 224LL);
  *(void *)(*(void *)v2 + 232LL) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    unint64_t v5 = AnnounceCallFlow.execute();
  }

  else
  {

    unint64_t v5 = AnnounceCallFlow.execute();
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

uint64_t AnnounceCallFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnnounceCallFlow();
  unint64_t v5 = lazy protocol witness table accessor for type AnnounceCallFlow and conformance AnnounceCallFlow();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t AnnounceCallFlow.deinit()
{
  outlined destroy of AnnounceIncomingCallerOutputStrategy(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 88));
  swift_release(*(void *)(v0 + 128));
  return v0;
}

uint64_t AnnounceCallFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AnnounceCallFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AnnounceCallFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_175D30()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

uint64_t outlined bridged method (ob) of @objc INCallRecord.providerBundleId.getter(void *a1)
{
  id v2 = [a1 providerBundleId];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t outlined init with copy of AnnounceIncomingCallerOutputStrategy(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_175E7C()
{
  return swift_deallocObject(v0, 65LL, 7LL);
}

unint64_t lazy protocol witness table accessor for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>;
  if (!lazy protocol witness table cache variable for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IncomingCallFollowUpFlow<A, B>, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IncomingCallFollowUpFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance IncomingCallFollowUpFlow<A, B>);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceCallFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin16AnnounceCallFlow);
}

unint64_t lazy protocol witness table accessor for type AnnounceCallFlow and conformance AnnounceCallFlow()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallFlow and conformance AnnounceCallFlow;
  if (!lazy protocol witness table cache variable for type AnnounceCallFlow and conformance AnnounceCallFlow)
  {
    uint64_t v1 = type metadata accessor for AnnounceCallFlow();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AnnounceCallFlow, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallFlow and conformance AnnounceCallFlow);
  }

  return result;
}

uint64_t outlined destroy of AnnounceIncomingCallerOutputStrategy(uint64_t a1)
{
  return a1;
}

uint64_t sub_175F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_14_41();
  *a1 = result;
  return result;
}

void **initializeBufferWithCopyOfBuffer for AnnounceCallFlow.State(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for AnnounceCallFlow.State(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for AnnounceCallFlow.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AnnounceCallFlow.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for AnnounceCallFlow.State( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0LL;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for AnnounceCallFlow.State()
{
  return &type metadata for AnnounceCallFlow.State;
}

uint64_t OUTLINED_FUNCTION_8_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_50()
{
  return swift_errorRetain(v0);
}

uint64_t OUTLINED_FUNCTION_13_52()
{
  return swift_task_dealloc(*(void *)(v0 + 192));
}

uint64_t OUTLINED_FUNCTION_14_41()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120LL))();
}

uint64_t OUTLINED_FUNCTION_15_44()
{
  return static ExecuteResponse.replan(requireInput:)(0LL);
}

uint64_t PhoneIntentRCHFlowStrategy.__allocating_init(sharedGlobals:app:)(__int128 *a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject(v2, 64LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(a1, v5 + 16);
  *(void *)(v5 + 56) = a2;
  return v5;
}

void PhoneIntentRCHFlowStrategy.init(sharedGlobals:app:)(__int128 *a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneIntentRCHFlowStrategy.actionForInput(input:)()
{
  uint64_t v1 = type metadata accessor for Parse(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  id v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
  Input.parse.getter(v7);
  (*(void (**)(__int128 *__return_ptr, _BYTE *))(*(void *)v7 + 192LL))(&v23, v4);
  swift_release(v7);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  if (!v24)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v23,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    return static ActionForInput.ignore()(v11);
  }

  outlined init with take of AppSelectionSignalComponent(&v23, (uint64_t)v25);
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(v9, v8);
  (*(void (**)(__int128 *__return_ptr))(*(void *)v10 + 240LL))(&v23);
  swift_release(v10);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)&v23,  (uint64_t)v17,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
  if (v18[3] == 1LL)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v17,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    uint64_t v21 = 0LL;
LABEL_8:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v19,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_9:
    static ActionForInput.handle()(v16);
    goto LABEL_10;
  }

  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v18,  (uint64_t)&v19,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  outlined destroy of TransformationResult((uint64_t)v17);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_8;
  }
  outlined init with take of AppSelectionSignalComponent(&v19, (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v22, (uint64_t)v17);
  PhoneCallNLIntent.shouldResetRequest(previousNLIntent:)();
  char v14 = v13;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v17,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if ((v14 & 1) == 0)
  {
    uint64_t v16 = __swift_destroy_boxed_opaque_existential_1(v22);
    goto LABEL_9;
  }

  static ActionForInput.ignore()(v15);
  __swift_destroy_boxed_opaque_existential_1(v22);
LABEL_10:
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v23,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

uint64_t PhoneIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v3[15] = *v2;
  return swift_task_switch(PhoneIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:), 0LL, 0LL);
}

uint64_t PhoneIntentRCHFlowStrategy.makeIntentFromParse(parse:currentIntent:)()
{
  uint64_t v2 = (void *)(v0 + 16);
  uint64_t v3 = (__int128 *)(v0 + 56);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = swift_retain_n(v4, 2LL);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v9 = static os_log_type_t.debug.getter(v7, v8);
  uint64_t v10 = &unk_31F000;
  if (os_log_type_enabled(v7, v9))
  {
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v1 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v13 = OUTLINED_FUNCTION_7_0(64LL);
    v55[0] = v13;
    *(_DWORD *)uint64_t v1 = 136315394;
    *(void *)(v0 + 16) = v12;
    uint64_t v15 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(v11 + 80), *(void *)(v11 + 88), v14);
    swift_retain();
    uint64_t v16 = String.init<A>(describing:)(v0 + 16, v15);
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v1 + 4);
    swift_bridgeObjectRelease();
    uint64_t v18 = v12;
    uint64_t v2 = (void *)(v0 + 16);
    uint64_t v3 = (__int128 *)(v0 + 56);
    OUTLINED_FUNCTION_31_1(v18);
    *(_WORD *)(v1 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v10 = (void *)(v1 + 14);
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000029LL,  0x800000000034C040LL,  v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v1 + 14);
    _os_log_impl(&dword_0, v7, v9, "#%s %s", (uint8_t *)v1, 0x16u);
    swift_arrayDestroy(v13, 2LL);
    OUTLINED_FUNCTION_0_2(v13);
    OUTLINED_FUNCTION_0_2(v1);
  }

  else
  {
    OUTLINED_FUNCTION_31_1(*(void *)(v0 + 112));
  }

  uint64_t v19 = *(void *)(v0 + 96);
  OUTLINED_FUNCTION_3_72();
  uint64_t v20 = (*(uint64_t (**)(void *, uint64_t))(v1 + 72))(v10, v1);
  (*(void (**)(uint64_t))(*(void *)v20 + 192LL))(v19);
  swift_release(v20);
  if (!*(void *)(v0 + 80))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v3,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
    unint64_t v42 = lazy protocol witness table accessor for type ParseError and conformance ParseError();
    uint64_t v43 = OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ParseError, v42);
    OUTLINED_FUNCTION_7_63((__n128)xmmword_3201A0, v43, v44);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v21 = *(void *)(v0 + 112);
  *(void *)os_log_type_t type = *(void *)(v0 + 120);
  uint64_t v22 = *(void **)(v0 + 104);
  outlined init with take of AppSelectionSignalComponent(v3, (uint64_t)v2);
  OUTLINED_FUNCTION_3_72();
  (*(void (**)(void *, uint64_t))(v1 + 80))(v10, v1);
  uint64_t v23 = *(void *)(v21 + 56);
  uint64_t v24 = *(void *)(*(void *)type + 80LL);
  swift_retain();
  id v25 = v22;
  SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)((uint64_t)v2, v23, (uint64_t)v22, 0LL, v24);
  uint64_t v27 = v26;
  swift_release(v23);

  outlined destroy of SKTransformer((uint64_t)v3);
  if (!v27)
  {
    unint64_t v45 = lazy protocol witness table accessor for type ParseError and conformance ParseError();
    uint64_t v46 = OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ParseError, v45);
    OUTLINED_FUNCTION_7_63((__n128)xmmword_3201A0, v46, v47);
    __swift_destroy_boxed_opaque_existential_1(v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  swift_retain_n(*(void *)(v0 + 112), 2LL);
  id v28 = v27;
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
  if (os_log_type_enabled(v29, v31))
  {
    os_log_type_t typea = v31;
    uint64_t v54 = v2;
    uint64_t v33 = *(void *)(v0 + 112);
    uint64_t v32 = *(void *)(v0 + 120);
    uint64_t v34 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v50 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v51 = OUTLINED_FUNCTION_7_0(32LL);
    v55[0] = v51;
    *(_DWORD *)uint64_t v34 = 136315394;
    *(void *)(v0 + 56) = v33;
    uint64_t v36 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, v24, *(void *)(v32 + 88), v35);
    swift_retain();
    uint64_t v37 = String.init<A>(describing:)(v3, v36);
    *(void *)(v0 + 56) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, v0 + 64, v34 + 4);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_31_1(v33);
    *(_WORD *)(v34 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2112;
    *(void *)(v0 + 56) = v28;
    id v39 = v28;
    id v40 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, v0 + 64, v34 + 14);
    *uint64_t v50 = v27;

    id v28 = v39;
    _os_log_impl(&dword_0, v29, typea, "#%s intent: %@", (uint8_t *)v34, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_6_56();
    OUTLINED_FUNCTION_0_2((uint64_t)v50);
    OUTLINED_FUNCTION_6_56();
    OUTLINED_FUNCTION_0_2(v51);
    OUTLINED_FUNCTION_0_2(v34);

    __int128 v41 = v54;
  }

  else
  {
    uint64_t v49 = *(void *)(v0 + 112);

    OUTLINED_FUNCTION_31_1(v49);
    __int128 v41 = v2;
  }

  __swift_destroy_boxed_opaque_existential_1(v41);
  return (*(uint64_t (**)(id))(v0 + 8))(v28);
}

unint64_t lazy protocol witness table accessor for type ParseError and conformance ParseError()
{
  unint64_t result = lazy protocol witness table cache variable for type ParseError and conformance ParseError;
  if (!lazy protocol witness table cache variable for type ParseError and conformance ParseError)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ParseError, &type metadata for ParseError);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ParseError and conformance ParseError);
  }

  return result;
}

uint64_t PhoneIntentRCHFlowStrategy.deinit()
{
  return v0;
}

uint64_t PhoneIntentRCHFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeIntentFromParse(parse:currentIntent:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 128LL);
  os_log_type_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v9(a1, a2);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeParameterMetadata(intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(a2 + 80), *(void *)(a2 + 88), a4);
  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v6, a3);
}

uint64_t protocol witness for RCHFlowStrategyAsync.makeErrorResponse(error:) in conformance PhoneIntentRCHFlowStrategy<A1, B1>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v9 = (void *)swift_task_alloc(async function pointer to RCHFlowStrategyAsync.makeErrorResponse(error:)[1]);
  *(void *)(v4 + 16) = v9;
  *os_log_type_t v9 = v4;
  v9[1] = protocol witness for Flow.execute() in conformance ContactNeedsValueGuardFlow<A>;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

void protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1@<X8>)
{
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(a4 + 80), *(void *)(a4 + 88), v12);
  *uint64_t v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v13, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(a4 + 80), *(void *)(a4 + 88), v12);
  *uint64_t v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v13, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(a4 + 80), *(void *)(a4 + 88), v12);
  *uint64_t v11 = v5;
  v11[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v13, a5);
}

uint64_t protocol witness for ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)[1]);
  *(void *)(v6 + 16) = v13;
  uint64_t v15 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(a5 + 80), *(void *)(a5 + 88), v14);
  *uint64_t v13 = v6;
  v13[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v15, a6);
}

uint64_t protocol witness for RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)[1]);
  *(void *)(v6 + 16) = v13;
  uint64_t v15 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(a5 + 80), *(void *)(a5 + 88), v14);
  *uint64_t v13 = v6;
  v13[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( a1,  a2,  a3,  a4,  v15,  a6);
}

uint64_t protocol witness for IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:) in conformance PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v9 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + 16) = v9;
  uint64_t v11 = type metadata accessor for PhoneIntentRCHFlowStrategy(0LL, *(void *)(a3 + 80), *(void *)(a3 + 88), v10);
  *os_log_type_t v9 = v4;
  v9[1] = protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v11, a4);
}

uint64_t type metadata accessor for PhoneIntentRCHFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for PhoneIntentRCHFlowStrategy);
}

uint64_t base witness table accessor for ResolveConfirmFlowStrategyAsync in PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for PhoneIntentRCHFlowStrategy<A, B>, a1);
}

uint64_t base witness table accessor for IntentExtensionCommunicatingAsync in PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for PhoneIntentRCHFlowStrategy<A, B>, a1);
}

uint64_t base witness table accessor for RouteConfirmIntentResponseFlowStrategyAsync in PhoneIntentRCHFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for PhoneIntentRCHFlowStrategy<A, B>, a1);
}

uint64_t type metadata completion function for PhoneIntentRCHFlowStrategy(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 96);
}

void *OUTLINED_FUNCTION_3_72()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 40));
}

uint64_t OUTLINED_FUNCTION_6_56()
{
  return swift_arrayDestroy(v0, 1LL);
}

uint64_t OUTLINED_FUNCTION_7_63(__n128 a1, uint64_t a2, __n128 *a3)
{
  *a3 = a1;
  return swift_willThrow();
}

uint64_t *AnnounceDropInCallDirectAction.identifier.unsafeMutableAddressor()
{
  if (one-time initialization token for identifier != -1) {
    swift_once(&one-time initialization token for identifier, one-time initialization function for identifier);
  }
  return &static AnnounceDropInCallDirectAction.identifier;
}

uint64_t AnnounceDropInCallDirectAction.init(from:)(uint64_t a1)
{
  if (one-time initialization token for announcementTypeKey != -1) {
    swift_once( &one-time initialization token for announcementTypeKey,  one-time initialization function for announcementTypeKey);
  }
  if (!*(void *)(a1 + 16))
  {
    __int128 v8 = 0u;
    __int128 v9 = 0u;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }

  uint64_t v2 = qword_4352F0;
  uint64_t v3 = static AnnounceDropInCallDirectAction.announcementTypeKey;
  swift_bridgeObjectRetain();
  unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v3, v2);
  if ((v5 & 1) == 0)
  {
    __int128 v8 = 0u;
    __int128 v9 = 0u;
    OUTLINED_FUNCTION_39();
    goto LABEL_10;
  }

  outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v8);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_11:
    outlined destroy of Any?((uint64_t)&v8);
    return 0LL;
  }

  return 0LL;
}

void AnnounceDropInCallFlow.__allocating_init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)( uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = v4;
  uint64_t v13 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  uint64_t v15 = a3[3];
  uint64_t v14 = a3[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a3, v15);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  unint64_t v17 = OUTLINED_FUNCTION_19_33(v16, v21);
  v18(v17);
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_1_31(v19, v20, v22);
  specialized AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)( a1,  a2,  v6,  v8,  v13,  v15,  v7,  v14,  v5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_7_5();
}

uint64_t one-time initialization function for identifier()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneDirectInvocationIdentifierAnnounceDropInCall);
  static AnnounceDropInCallDirectAction.identifier = result;
  unk_477C50 = v1;
  return result;
}

{
  uint64_t result;
  uint64_t v1;
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneDirectInvocationIdentifierIdentifyIncomingCaller);
  static IdentifyIncomingCallerDirectAction.identifier = result;
  *(void *)algn_478288 = v1;
  return result;
}

{
  Swift::String v0;
  PhoneCallFlowDelegatePlugin::DIIdentifier v2;
  v0._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneDirectInvocationIdentifierAnnounceVoicemail);
  uint64_t v2 = DIIdentifier.init(_:)(v0);
  *(PhoneCallFlowDelegatePlugin::DIIdentifier *)static AnnounceVoicemailDirectAction.identifier = v2;
  return v2.namespace._countAndFlagsBits;
}

uint64_t static AnnounceDropInCallDirectAction.identifier.getter()
{
  if (one-time initialization token for identifier != -1) {
    swift_once(&one-time initialization token for identifier, one-time initialization function for identifier);
  }
  uint64_t v0 = static AnnounceDropInCallDirectAction.identifier;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t one-time initialization function for announcementTypeKey()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceDropInCallDirectInvocationPayloadKeyAnnouncementType);
  static AnnounceDropInCallDirectAction.announcementTypeKey = result;
  qword_4352F0 = v1;
  return result;
}

void AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)( uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v13 = a3[3];
  uint64_t v12 = a3[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a3, v13);
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  uint64_t v15 = OUTLINED_FUNCTION_19_33(v14, v19);
  v16(v15);
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_68_6();
  __chkstk_darwin();
  OUTLINED_FUNCTION_1_31(v17, v18, v20);
  specialized AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)( a1,  a2,  v5,  v7,  v21,  v13,  v6,  v12,  v4);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_7_5();
}

uint64_t AnnounceDropInCallFlow.on(input:)()
{
  uint64_t v2 = (uint64_t)v0;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  __swift_project_boxed_opaque_existential_1(v0 + 13, v3);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v18, v3, v4);
  uint64_t v5 = v19;
  uint64_t v6 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  char v7 = dispatch thunk of DeviceState.isHomePod.getter(v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v18);
  if ((v7 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v8 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
    uint64_t v9 = OUTLINED_FUNCTION_11_18((uint64_t)v0);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_93(v11))
    {
      uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v13 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v17 = v2;
      v18[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      ObjC metadata update function for AnnounceDropInCallFlow();
      swift_retain();
      uint64_t v14 = OUTLINED_FUNCTION_24_27((uint64_t)&v17);
      uint64_t v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v12 + 4);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31_1(v2);
      OUTLINED_FUNCTION_57_0(&dword_0, v10, v1, "#%s Drop in call is only supported on HomePod.", v12);
      OUTLINED_FUNCTION_17_0(v13);
      OUTLINED_FUNCTION_0_2(v13);
      OUTLINED_FUNCTION_0_2((uint64_t)v12);
    }

    else
    {
      OUTLINED_FUNCTION_31_1(v2);
    }
  }

  return v7 & 1;
}

uint64_t AnnounceDropInCallFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = ObjC metadata update function for AnnounceDropInCallFlow();
  uint64_t v5 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type AnnounceDropInCallFlow and conformance AnnounceDropInCallFlow,  type metadata accessor for AnnounceDropInCallFlow,  (uint64_t)&protocol conformance descriptor for AnnounceDropInCallFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t AnnounceDropInCallFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v3, v4, v5);
}

uint64_t AnnounceDropInCallFlow.execute()()
{
  uint64_t v2 = (void *)(v0 + 16);
  uint64_t v3 = (void *)(v0 + 64);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = OUTLINED_FUNCTION_15_1();
  uint64_t v6 = (os_log_s *)__swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = OUTLINED_FUNCTION_11_18(v4);
  Logger.logObject.getter(v7);
  os_log_type_t v8 = OUTLINED_FUNCTION_6_0();
  BOOL v9 = OUTLINED_FUNCTION_29_5(v8);
  uint64_t v10 = *(void *)(v0 + 112);
  if (v9)
  {
    os_log_type_t v11 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v12 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v39 = v12;
    *(_DWORD *)os_log_type_t v11 = 136315138;
    *(void *)(v0 + 16) = v10;
    uint64_t v13 = ObjC metadata update function for AnnounceDropInCallFlow();
    OUTLINED_FUNCTION_44_1();
    uint64_t v14 = String.init<A>(describing:)(v2, v13);
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v0 + 24, v11 + 4);
    OUTLINED_FUNCTION_31_1(v10);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_57_0(&dword_0, v6, v1, "#%s Announcing drop in call.", v11);
    OUTLINED_FUNCTION_17_0(v12);
    uint64_t v16 = v12;
    uint64_t v3 = (void *)(v0 + 64);
    OUTLINED_FUNCTION_0_2(v16);
    OUTLINED_FUNCTION_0_2((uint64_t)v11);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v10);
  }

  uint64_t v17 = *(void **)(v0 + 112);
  uint64_t v18 = v17[16];
  uint64_t v19 = v17[17];
  __swift_project_boxed_opaque_existential_1(v17 + 13, v18);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
  OUTLINED_FUNCTION_59();
  v20(v18, v19);
  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 56);
  uint64_t v23 = __swift_project_boxed_opaque_existential_1(v2, v21);
  *(void *)(v0 + 88) = v21;
  *(void *)(v0 + 96) = v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v3);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16LL))( boxed_opaque_existential_1,  v23,  v21);
  uint64_t v25 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  OUTLINED_FUNCTION_59();
  uint64_t v26 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v3,  &async function pointer to partial apply for closure #1 in AnnounceDropInCallFlow.execute(),  v17);
  __swift_destroy_boxed_opaque_existential_1(v2);
  uint64_t v27 = OUTLINED_FUNCTION_11_18((uint64_t)v17);
  id v28 = v6;
  Logger.logObject.getter(v27);
  os_log_type_t v29 = OUTLINED_FUNCTION_6_0();
  BOOL v30 = OUTLINED_FUNCTION_29_5(v29);
  uint64_t v31 = *(void *)(v0 + 112);
  if (v30)
  {
    uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v33 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    *(void *)(v0 + 16) = v31;
    uint64_t v34 = ObjC metadata update function for AnnounceDropInCallFlow();
    swift_retain();
    uint64_t v35 = String.init<A>(describing:)(v2, v34);
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v0 + 24, v32 + 4);
    OUTLINED_FUNCTION_31_1(v31);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_57_0(&dword_0, v28, (os_log_type_t)v17, "#%s Announcement completed.", v32);
    OUTLINED_FUNCTION_17_0(v33);
    OUTLINED_FUNCTION_0_2(v33);
    OUTLINED_FUNCTION_0_2((uint64_t)v32);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v31);
  }

  uint64_t v37 = *(void *)(v0 + 112);
  *(void *)(v0 + 16) = v26;
  static ExecuteResponse.complete<A>(next:)(v2);
  swift_release(v26);
  swift_release(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in AnnounceDropInCallFlow.execute()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int **)(*(void *)a2 + 160LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v7(a1);
}

uint64_t AnnounceDropInCallFlow.makeAnnouncement()(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  uint64_t v3 = type metadata accessor for PhoneError(0LL);
  v2[23] = v3;
  v2[24] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  uint64_t v4 = v3[25];
  v3[26] = v1;
  swift_task_dealloc(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v5;
  uint64_t v3 = *(void **)v2;
  uint64_t v5 = v3;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  OUTLINED_FUNCTION_132_2(v3[27], &v5);
  if (v1)
  {
    swift_task_dealloc(v3[24]);
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v5;
  uint64_t v3 = *(void **)v2;
  uint64_t v5 = v3;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = v1;
  OUTLINED_FUNCTION_132_2(v3[28], &v5);
  if (v1)
  {
    swift_task_dealloc(v3[24]);
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

void AnnounceDropInCallFlow.makeAnnouncement()()
{
  uint64_t v111 = (uint64_t)(v0 + 19);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = v0[22];
  uint64_t v2 = OUTLINED_FUNCTION_15_1();
  uint64_t v3 = (os_log_s *)__swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = OUTLINED_FUNCTION_11_18(v1);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v7 = static os_log_type_t.debug.getter(v5, v6);
  BOOL v8 = os_log_type_enabled(v5, v7);
  uint64_t v9 = v0[22];
  uint64_t v10 = &unk_31F000;
  if (v8)
  {
    uint64_t v110 = (uint64_t)(v0 + 20);
    os_log_type_t v11 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v112 = OUTLINED_FUNCTION_7_0(32LL);
    *(_DWORD *)os_log_type_t v11 = 136315138;
    v0[19] = v9;
    ObjC metadata update function for AnnounceDropInCallFlow();
    OUTLINED_FUNCTION_59();
    uint64_t v12 = OUTLINED_FUNCTION_24_27(v111);
    v0[20] = OUTLINED_FUNCTION_12_8(v12, v13, v14, v15, v16);
    uint64_t v10 = (void *)&unk_31F000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 20, v0 + 21, v11 + 4);
    OUTLINED_FUNCTION_31_1(v9);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_57_0(&dword_0, v5, v7, "#%s Making announcement using RF.", v11);
    OUTLINED_FUNCTION_17_0(v112);
    OUTLINED_FUNCTION_0_2(v112);
    OUTLINED_FUNCTION_0_2((uint64_t)v11);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v9);
  }

  uint64_t v17 = (uint64_t)(v0 + 13);
  uint64_t v18 = v0[22];
  uint64_t v19 = *(void *)(v18 + 144);
  if (v19 == 3)
  {
    uint64_t v30 = OUTLINED_FUNCTION_11_18(v18);
    Logger.logObject.getter(v30);
    os_log_type_t v31 = OUTLINED_FUNCTION_6_0();
    BOOL v32 = os_log_type_enabled(v3, v31);
    uint64_t v33 = v0[22];
    if (v32)
    {
      uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_86_8();
      OUTLINED_FUNCTION_18_41(COERCE_FLOAT(v10[237]));
      *(void *)uint64_t v17 = v33;
      ObjC metadata update function for AnnounceDropInCallFlow();
      OUTLINED_FUNCTION_44_1();
      uint64_t v35 = OUTLINED_FUNCTION_24_27((uint64_t)(v0 + 13));
      uint64_t v17 = v36;
      uint64_t v40 = OUTLINED_FUNCTION_12_8(v35, v36, v37, v38, v39);
      uint64_t v48 = OUTLINED_FUNCTION_26_34(v40, v41, v42, v43, v44, v45, v46, v47, v109, v110, v0 + 14);
      OUTLINED_FUNCTION_33_35((uint64_t)v48, (uint64_t)(v0 + 15), v49);
      OUTLINED_FUNCTION_31_1(v33);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0(&dword_0, v3, v31, "#%s Received Single Tap, Informing user double tap to hang up.", v34);
      OUTLINED_FUNCTION_48_13();
      OUTLINED_FUNCTION_0_2(v9);
      OUTLINED_FUNCTION_0_2((uint64_t)v34);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v33);
    }

    OUTLINED_FUNCTION_13_53();
    uint64_t v93 = (void *)OUTLINED_FUNCTION_18_29(*(void *)(v17 + 24));
    v0[28] = v93;
    uint64_t v94 = AnnounceDropInCallFlow.makeAnnouncement();
  }

  else
  {
    if (v19 != 2)
    {
      if (v19 == 1)
      {
        uint64_t v20 = swift_retain_n(v18, 2LL);
        Logger.logObject.getter(v20);
        os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
        BOOL v22 = OUTLINED_FUNCTION_93(v21);
        uint64_t v23 = v0[22];
        if (v22)
        {
          uint64_t v17 = OUTLINED_FUNCTION_7_0(12LL);
          OUTLINED_FUNCTION_7_0(32LL);
          OUTLINED_FUNCTION_86_8();
          *(_DWORD *)uint64_t v17 = v10[237];
          v0[17] = v23;
          uint64_t v24 = ObjC metadata update function for AnnounceDropInCallFlow();
          OUTLINED_FUNCTION_44_1();
          uint64_t v25 = String.init<A>(describing:)(v0 + 17, v24);
          v0[18] = OUTLINED_FUNCTION_12_8(v25, v26, v27, v28, v29);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 18, v111, v17 + 4);
          OUTLINED_FUNCTION_31_1(v23);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_57_0( &dword_0,  v3,  (os_log_type_t)((_BYTE)v0 + 120),  "#%s Announcing CallBellStarted.",  (uint8_t *)v17);
          OUTLINED_FUNCTION_48_13();
          OUTLINED_FUNCTION_0_2(v9);
          OUTLINED_FUNCTION_0_2(v17);
        }

        else
        {

          OUTLINED_FUNCTION_31_1(v23);
        }

        OUTLINED_FUNCTION_13_53();
        uint64_t v91 = (void *)OUTLINED_FUNCTION_18_29(*(void *)(v17 + 16));
        v0[25] = v91;
        void *v91 = v0;
        v91[1] = AnnounceDropInCallFlow.makeAnnouncement();
        OUTLINED_FUNCTION_41_14();
        __asm { BR              X4 }
      }

      uint64_t v71 = swift_retain_n(v18, 2LL);
      Logger.logObject.getter(v71);
      os_log_type_t v72 = OUTLINED_FUNCTION_6_0();
      BOOL v73 = OUTLINED_FUNCTION_93(v72);
      uint64_t v74 = v0[22];
      if (v73)
      {
        uint64_t v75 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        OUTLINED_FUNCTION_7_0(32LL);
        OUTLINED_FUNCTION_86_8();
        OUTLINED_FUNCTION_18_41(COERCE_FLOAT(v10[237]));
        v0[11] = v74;
        ObjC metadata update function for AnnounceDropInCallFlow();
        swift_retain();
        uint64_t v76 = OUTLINED_FUNCTION_24_27((uint64_t)(v0 + 11));
        uint64_t v81 = OUTLINED_FUNCTION_12_8(v76, v77, v78, v79, v80);
        uint64_t v89 = OUTLINED_FUNCTION_26_34(v81, v82, v83, v84, v85, v86, v87, v88, v109, v110, v0 + 12);
        OUTLINED_FUNCTION_33_35((uint64_t)v89, (uint64_t)(v0 + 13), v90);
        OUTLINED_FUNCTION_31_1(v74);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0( &dword_0,  v3,  (os_log_type_t)((_BYTE)v0 + 120),  "#%s Received unsupported announcement type",  v75);
        OUTLINED_FUNCTION_48_13();
        OUTLINED_FUNCTION_0_2(v9);
        OUTLINED_FUNCTION_0_2((uint64_t)v75);
      }

      else
      {

        OUTLINED_FUNCTION_31_1(v74);
      }

      uint64_t v96 = v0[23];
      uint64_t v97 = v0[24];
      swift_storeEnumTagMultiPayload(v97, v96, 17LL);
      uint64_t v98 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
      swift_allocError(v96, v98, 0LL, 0LL);
      PhoneError.logged()(v99);
      uint64_t v100 = outlined destroy of PhoneError(v97);
      swift_willThrow(v100, v101, v102, v103, v104, v105, v106, v107);
      OUTLINED_FUNCTION_34_22();
      OUTLINED_FUNCTION_41_14();
      __asm { BR              X0 }
    }

    uint64_t v50 = swift_retain_n(v18, 2LL);
    Logger.logObject.getter(v50);
    os_log_type_t v51 = OUTLINED_FUNCTION_6_0();
    uint64_t v52 = v51;
    BOOL v53 = os_log_type_enabled(v3, v51);
    uint64_t v54 = v0[22];
    if (v53)
    {
      uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_86_8();
      OUTLINED_FUNCTION_18_41(COERCE_FLOAT(v10[237]));
      v0[15] = v54;
      ObjC metadata update function for AnnounceDropInCallFlow();
      OUTLINED_FUNCTION_44_1();
      uint64_t v56 = OUTLINED_FUNCTION_24_27((uint64_t)(v0 + 15));
      uint64_t v61 = OUTLINED_FUNCTION_12_8(v56, v57, v58, v59, v60);
      uint64_t v69 = OUTLINED_FUNCTION_26_34(v61, v62, v63, v64, v65, v66, v67, v68, v109, v110, v0 + 16);
      OUTLINED_FUNCTION_33_35((uint64_t)v69, (uint64_t)(v0 + 17), v70);
      OUTLINED_FUNCTION_31_1(v54);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0(&dword_0, v3, (os_log_type_t)v52, "#%s Announcing CallBellEnded.", v55);
      OUTLINED_FUNCTION_48_13();
      OUTLINED_FUNCTION_0_2(v9);
      OUTLINED_FUNCTION_0_2((uint64_t)v55);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v54);
    }

    OUTLINED_FUNCTION_13_53();
    uint64_t v93 = (void *)OUTLINED_FUNCTION_18_29(*(void *)(v52 + 8));
    v0[27] = v93;
    uint64_t v94 = AnnounceDropInCallFlow.makeAnnouncement();
  }

  *uint64_t v93 = v0;
  v93[1] = v94;
  OUTLINED_FUNCTION_41_14();
  __asm { BR              X2 }

uint64_t AnnounceDropInCallFlow.makeAnnouncement()()
{
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  *(void *)(v0 + 240) = v1;
  OUTLINED_FUNCTION_6_57(v1);
  return OUTLINED_FUNCTION_5_60();
}

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_8_53();
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  *(void *)(v0 + 240) = v1;
  OUTLINED_FUNCTION_6_57(v1);
  return OUTLINED_FUNCTION_5_60();
}

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_8_53();
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  *(void *)(v0 + 240) = v1;
  OUTLINED_FUNCTION_6_57(v1);
  return OUTLINED_FUNCTION_5_60();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v2 = *(void *)(*(void *)v1 + 240LL);
  *(void *)(*(void *)v1 + 248LL) = v0;
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 192);

  swift_task_dealloc(v1);
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_34_22();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_34_22();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in AnnounceDropInCallFlow.makeAnnouncement()(uint64_t *a1, void *a2)
{
  uint64_t v4 = a2 + 13;
  uint64_t v6 = a2[16];
  uint64_t v5 = a2[17];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v9, v6, v5);
  uint64_t v7 = SirikitDeviceState.__allocating_init(from:)(v9);
  uint64_t result = swift_release(*a1);
  *a1 = v7;
  return result;
}

void *AnnounceDropInCallFlow.deinit()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin22AnnounceDropInCallFlow_completionOutputManifest;
  uint64_t v2 = type metadata accessor for OutputGenerationManifest(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t AnnounceDropInCallFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.exitValue.getter in conformance AnnounceDropInCallFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AnnounceDropInCallFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t specialized AnnounceDropInCallFlow.init(announcementType:sharedGlobals:announceCallBellCatPatterns:responseGenerator:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v27 = a1;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = a6;
  uint64_t v33 = a8;
  uint64_t v20 = __swift_allocate_boxed_opaque_existential_1(&v31);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32LL))(v20, a3, a6);
  uint64_t v29 = a7;
  uint64_t v30 = a9;
  os_log_type_t v21 = __swift_allocate_boxed_opaque_existential_1(&v28);
  uint64_t v22 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32LL))(v21, a4, a7);
  static DialogPhase.completion.getter(v22);
  OutputGenerationManifest.init(dialogPhase:_:)( v19,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  *(void *)(a5 + 144) = v27;
  outlined init with copy of SignalProviding((uint64_t)a2, a5 + 104);
  uint64_t v23 = type metadata accessor for AnnounceCallBellCATs(0LL);
  static CATOption.defaultMode.getter(v23);
  uint64_t v24 = CATWrapper.__allocating_init(options:globals:)(v17, 0LL);
  __swift_destroy_boxed_opaque_existential_1(a2);
  *(void *)(a5 + 16) = v24;
  outlined init with take of AppSelectionSignalComponent(&v31, a5 + 24);
  outlined init with take of AppSelectionSignalComponent(&v28, a5 + 64);
  return a5;
}

uint64_t type metadata accessor for AnnounceDropInCallFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceDropInCallFlow;
  if (!type metadata singleton initialization cache for AnnounceDropInCallFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceDropInCallFlow);
  }
  return result;
}

uint64_t partial apply for closure #1 in AnnounceDropInCallFlow.execute()(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_435304);
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in AnnounceDropInCallFlow.execute()(a1, v1);
}

uint64_t partial apply for closure #1 in AnnounceDropInCallFlow.makeAnnouncement()(uint64_t *a1)
{
  return closure #1 in AnnounceDropInCallFlow.makeAnnouncement()(a1, v1);
}

ValueMetadata *type metadata accessor for AnnounceDropInCallDirectAction()
{
  return &type metadata for AnnounceDropInCallDirectAction;
}

uint64_t ObjC metadata update function for AnnounceDropInCallFlow()
{
  return type metadata accessor for AnnounceDropInCallFlow(0LL);
}

uint64_t type metadata completion function for AnnounceDropInCallFlow(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "(";
  v4[2] = "(";
  v4[3] = "(";
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    void v4[5] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_6_57(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 168);
}

void *OUTLINED_FUNCTION_8_53()
{
  uint64_t v2 = *(void *)(v1 + 176);
  *(void *)(v1 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  return __swift_project_boxed_opaque_existential_1((void *)(v2 + 64), *(void *)(v2 + 88));
}

void *OUTLINED_FUNCTION_13_53()
{
  return __swift_project_boxed_opaque_existential_1( (void *)(*(void *)(v0 + 176) + 24LL),  *(void *)(*(void *)(v0 + 176) + 48LL));
}

void OUTLINED_FUNCTION_18_41(float a1)
{
  float *v1 = a1;
}

char *OUTLINED_FUNCTION_19_33@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_24_27(uint64_t a1)
{
  return String.init<A>(describing:)(a1, v1);
}

void *OUTLINED_FUNCTION_26_34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  *a11 = a1;
  return a11;
}

uint64_t OUTLINED_FUNCTION_33_35(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_34_22()
{
  return swift_task_dealloc(*(void *)(v0 + 192));
}

uint64_t LoggableError.logged(shouldLogToAbc:shouldCreateTTR:)@<X0>( char a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  LODWORD(v9) = a2;
  uint64_t v71 = a5;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v69 = *(void (**)(os_log_s *, uint64_t))(v11 - 8);
  __chkstk_darwin();
  unint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v70 = (os_log_s *)((char *)&v64 - v14);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v73 = 0LL;
  unint64_t v74 = 0xE000000000000000LL;
  OUTLINED_FUNCTION_8_54();
  unint64_t v17 = v74;
  uint64_t v67 = v73;
  uint64_t v72 = v11;
  if ((a1 & 1) != 0)
  {
    LODWORD(v66) = v9;
    uint64_t v68 = v13;
    uint64_t v18 = OUTLINED_FUNCTION_3_73();
    uint64_t v65 = v19;
    v19(v18);
    uint64_t v20 = swift_bridgeObjectRetain_n(v17, 2LL);
    os_log_type_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
    if (os_log_type_enabled(v21, v23))
    {
      uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v25 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v73 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v64 = (void (*)(uint64_t, uint64_t))(v24 + 4);
      OUTLINED_FUNCTION_76_4();
      uint64_t v26 = OUTLINED_FUNCTION_6_58();
      uint64_t v27 = OUTLINED_FUNCTION_15_15(v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v27, v28, v64);
      OUTLINED_FUNCTION_11_51();
      _os_log_impl(&dword_0, v21, v23, "#LoggableError Trying ABC for %s", v24, 0xCu);
      swift_arrayDestroy(v25, 1LL);
      OUTLINED_FUNCTION_0_2(v25);
      OUTLINED_FUNCTION_0_2((uint64_t)v24);

      uint64_t v29 = (void (*)(uint64_t, uint64_t))*((void *)v69 + 1);
      uint64_t v30 = v16;
      uint64_t v31 = v72;
    }

    else
    {

      OUTLINED_FUNCTION_12_52();
      uint64_t v29 = (void (*)(uint64_t, uint64_t))*((void *)v69 + 1);
      uint64_t v30 = v16;
      uint64_t v31 = v11;
    }

    uint64_t v64 = v29;
    v29((uint64_t)v30, v31);
    uint64_t v9 = OUTLINED_FUNCTION_15_45();
    uint64_t v33 = v32;
    uint64_t v73 = a4[1](a3, (uint64_t)a4);
    unint64_t v74 = v34;
    OUTLINED_FUNCTION_2_56();
    v75._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_0_64(a4[2]);
    OUTLINED_FUNCTION_5_61(v75);
    swift_bridgeObjectRelease();
    uint64_t v35 = v73;
    uint64_t v36 = v74;
    uint64_t v37 = (uint64_t)v70;
    uint64_t v38 = OUTLINED_FUNCTION_3_73();
    v65(v38);
    static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)( 0x4C41544146LL,  0xE500000000000000LL,  v9,  v33,  v35,  v36,  v37);
    OUTLINED_FUNCTION_50();
    swift_bridgeObjectRelease();
    uint64_t v11 = v72;
    v64(v37, v72);
    unint64_t v13 = v68;
    LOBYTE(v9) = (_BYTE)v66;
  }

  if ((v9 & 1) != 0)
  {
    uint64_t v39 = OUTLINED_FUNCTION_3_73();
    uint64_t v66 = v40;
    v40(v39);
    uint64_t v41 = OUTLINED_FUNCTION_76_4();
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v44 = static os_log_type_t.debug.getter(v42, v43);
    if (os_log_type_enabled(v42, v44))
    {
      uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v73 = v46;
      uint64_t v68 = v13;
      *(_DWORD *)uint64_t v45 = 136315138;
      OUTLINED_FUNCTION_76_4();
      uint64_t v47 = OUTLINED_FUNCTION_6_58();
      uint64_t v48 = OUTLINED_FUNCTION_15_15(v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, v49, v45 + 4);
      OUTLINED_FUNCTION_11_51();
      _os_log_impl(&dword_0, v42, v44, "#LoggableError Trying TTR for %s", v45, 0xCu);
      swift_arrayDestroy(v46, 1LL);
      OUTLINED_FUNCTION_0_2(v46);
      OUTLINED_FUNCTION_0_2((uint64_t)v45);

      uint64_t v50 = (uint64_t)v68;
      os_log_type_t v51 = (void (*)(os_log_s *, uint64_t))*((void *)v69 + 1);
      uint64_t v52 = v72;
    }

    else
    {

      OUTLINED_FUNCTION_12_52();
      os_log_type_t v51 = (void (*)(os_log_s *, uint64_t))*((void *)v69 + 1);
      uint64_t v50 = (uint64_t)v13;
      uint64_t v52 = v11;
    }

    uint64_t v69 = v51;
    v51((os_log_s *)v50, v52);
    uint64_t v73 = 0LL;
    unint64_t v74 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(28LL);
    swift_bridgeObjectRelease();
    uint64_t v73 = 0xD00000000000001ALL;
    unint64_t v74 = 0x800000000034C0F0LL;
    v76._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_15_45();
    OUTLINED_FUNCTION_5_61(v76);
    OUTLINED_FUNCTION_50();
    uint64_t v53 = v74;
    uint64_t v68 = (char *)v73;
    uint64_t v73 = OUTLINED_FUNCTION_0_64(a4[1]);
    unint64_t v74 = v54;
    OUTLINED_FUNCTION_2_56();
    v77._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_0_64(a4[2]);
    OUTLINED_FUNCTION_5_61(v77);
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_2_56();
    v78._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_0_64(a4[3]);
    OUTLINED_FUNCTION_5_61(v78);
    OUTLINED_FUNCTION_4_1();
    uint64_t v56 = v73;
    uint64_t v55 = v74;
    uint64_t v73 = 0LL;
    unint64_t v74 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(31LL);
    v57._uint64_t countAndFlagsBits = 0x45656E6F68502061LL;
    v57._object = (void *)0xEE002820726F7272LL;
    String.append(_:)(v57);
    OUTLINED_FUNCTION_8_54();
    v58._uint64_t countAndFlagsBits = 0x6564207361772029LL;
    v58._object = (void *)0xEF2E646574636574LL;
    String.append(_:)(v58);
    uint64_t v59 = v73;
    uint64_t v60 = v74;
    uint64_t v61 = v70;
    uint64_t v62 = OUTLINED_FUNCTION_3_73();
    v66(v62);
    static FileRadarUtils.tapToRadar(title:desc:reason:logger:)((uint64_t)v68, v53, v56, v55, v59, v60, v61);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_4_1();
    swift_bridgeObjectRelease();
    v69(v61, v72);
  }

  else
  {
    swift_bridgeObjectRelease();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16LL))(v71, v6, a3);
}

uint64_t LoggableError.caseName.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v22[-2] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Mirror(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v22[-2] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v22[1] = a1;
  uint64_t v11 = __swift_allocate_boxed_opaque_existential_1(&v21);
  OUTLINED_FUNCTION_7_64((uint64_t)v11);
  uint64_t v12 = Mirror.init(reflecting:)(&v21);
  unint64_t v13 = (void *)Mirror.children.getter(v12);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  specialized Collection.first.getter(v13, &v21);
  swift_release(v13);
  if (v22[3])
  {
    uint64_t v15 = (void *)*((void *)&v21 + 1);
    uint64_t v14 = v21;
    __swift_destroy_boxed_opaque_existential_1(v22);
  }

  else
  {
    outlined destroy of (label: String?, value: Any)?((uint64_t)&v21);
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
  }

  OUTLINED_FUNCTION_7_64((uint64_t)v6);
  if (!v15)
  {
    *(void *)&__int128 v21 = 0LL;
    *((void *)&v21 + 1) = 0xE000000000000000LL;
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v6, a1);
    uint64_t v15 = (void *)*((void *)&v21 + 1);
    uint64_t v14 = v21;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  uint64_t DynamicType = swift_getDynamicType(v2, a1, 0LL);
  *(void *)&__int128 v21 = _typeName(_:qualified:)(DynamicType, 0LL);
  *((void *)&v21 + 1) = v17;
  v18._uint64_t countAndFlagsBits = 46LL;
  v18._object = (void *)0xE100000000000000LL;
  String.append(_:)(v18);
  v19._uint64_t countAndFlagsBits = v14;
  v19._object = v15;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t outlined destroy of (label: String?, value: Any)?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (label: String?, value: Any)?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_64@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void OUTLINED_FUNCTION_2_56()
{
  v0._uint64_t countAndFlagsBits = 657930LL;
  v0._object = (void *)0xE300000000000000LL;
  String.append(_:)(v0);
}

uint64_t OUTLINED_FUNCTION_3_73()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_58()
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*(void *)(v1 - 152), v0, (uint64_t *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_7_64(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_8_54()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_11_51()
{
  return swift_bridgeObjectRelease_n(v0, 3LL);
}

uint64_t OUTLINED_FUNCTION_12_52()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  return LoggableError.caseName.getter(v0);
}

void *StartCallDirectAction.identifier.unsafeMutableAddressor()
{
  return &static StartCallDirectAction.identifier;
}

PhoneCallFlowDelegatePlugin::StartCallDirectAction_optional __swiftcall StartCallDirectAction.init(from:)( Swift::OpaquePointer from)
{
  if (!*((void *)from._rawValue + 2)
    || (uint64_t v2 = OUTLINED_FUNCTION_0_65(), v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2, v3), (v5 & 1) == 0))
  {
    __int128 v10 = 0u;
    __int128 v11 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }

  outlined init with copy of Any(*((void *)from._rawValue + 7) + 32 * v4, (uint64_t)&v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_7:
    outlined destroy of Any?((uint64_t)&v10);
    goto LABEL_8;
  }

  if ((swift_dynamicCast(v9, &v10, (char *)&type metadata for Any + 8) & 1) == 0)
  {
LABEL_8:
    uint64_t v6 = 0LL;
    uint64_t v7 = 0LL;
    goto LABEL_9;
  }

  uint64_t v6 = v9[0];
  uint64_t v7 = (void *)v9[1];
LABEL_9:
  result.value.appBundleId._object = v7;
  result.value.appBundleId._uint64_t countAndFlagsBits = v6;
  return result;
}

unint64_t static StartCallDirectAction.identifier.getter()
{
  return 0xD000000000000034LL;
}

BOOL StartCallDirectAction.Keys.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of StartCallDirectAction.Keys.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t StartCallDirectAction.Keys.rawValue.getter()
{
  return OUTLINED_FUNCTION_0_65();
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallDirectAction.Keys@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = StartCallDirectAction.Keys.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallDirectAction.Keys( void *a1@<X8>)
{
  *a1 = 0x6C646E7542707061LL;
  a1[1] = 0xEB00000000644965LL;
}

uint64_t StartCallDirectAction.toDictionary()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  uint64_t inited = swift_initStackObject(v4, &v7);
  *(_OWORD *)(inited + 16) = xmmword_31D870;
  *(void *)(inited + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x6C646E7542707061LL;
  *(void *)(inited + 40) = 0xEB00000000644965LL;
  *(void *)(inited + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  return Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
}

unint64_t lazy protocol witness table accessor for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys;
  if (!lazy protocol witness table cache variable for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallDirectAction.Keys,  &type metadata for StartCallDirectAction.Keys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallDirectAction.Keys and conformance StartCallDirectAction.Keys);
  }

  return result;
}

ValueMetadata *type metadata accessor for StartCallDirectAction()
{
  return &type metadata for StartCallDirectAction;
}

uint64_t storeEnumTagSinglePayload for StartCallDirectAction.Keys(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_179264 + 4 * byte_32BF60[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_179284 + 4 * byte_32BF65[v4]))();
  }
}

_BYTE *sub_179264(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_179284(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_17928C(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_179294(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_17929C(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1792A4(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StartCallDirectAction.Keys()
{
  return &type metadata for StartCallDirectAction.Keys;
}

uint64_t OUTLINED_FUNCTION_0_65()
{
  return 0x6C646E7542707061LL;
}

uint64_t specialized Sequence.allSatisfy(_:)(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  LOBYTE(v4) = a4;
  uint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a1);
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    uint64_t v8 = 4LL;
    unsigned int v24 = v4 & 1;
    while (1)
    {
      uint64_t v4 = v8 - 4;
      if ((v6 & 0xC000000000000001LL) != 0)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6);
      }

      else
      {
        uint64_t v9 = *(void *)(v6 + 8 * v8);
        swift_retain(v9);
      }

      uint64_t v10 = v8 - 3;
      if (__OFADD__(v4, 1LL)) {
        break;
      }
      uint64_t v11 = ((uint64_t (*)(void))dispatch thunk of SiriKitDisambiguationItem.getSecondComponent())();
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)(v24);
        uint64_t v15 = v14;
        uint64_t v11 = swift_release(v12);
        if (a3)
        {
          if (!v15) {
            goto LABEL_25;
          }
          if (v13 == a2 && v15 == a3)
          {
            uint64_t v11 = swift_bridgeObjectRelease(v15);
          }

          else
          {
            char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v13, v15, 0LL);
            uint64_t v11 = swift_bridgeObjectRelease(v15);
            if ((v17 & 1) == 0) {
              goto LABEL_25;
            }
          }
        }

        else if (v15)
        {
          swift_bridgeObjectRelease(v6);
          swift_release(v9);
          swift_bridgeObjectRelease(v15);
LABEL_26:
          uint64_t v20 = 0LL;
          uint64_t v6 = a3;
          goto LABEL_33;
        }
      }

      else if (a3)
      {
        goto LABEL_25;
      }

      uint64_t v18 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()(v11);
      if (!v18)
      {
LABEL_25:
        swift_bridgeObjectRelease(v6);
        swift_release(v9);
        goto LABEL_26;
      }

      uint64_t v19 = v18;
      swift_release(v9);
      swift_release(v19);
      ++v8;
      if (v10 == v7)
      {
        swift_bridgeObjectRelease(a3);
        uint64_t v20 = 1LL;
        goto LABEL_33;
      }
    }

    __break(1u);
LABEL_28:
    if (v6 < 0) {
      uint64_t v21 = v6;
    }
    else {
      uint64_t v21 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v6);
  }

  swift_bridgeObjectRelease(v6);
  uint64_t v20 = 1LL;
  uint64_t v6 = a3;
LABEL_33:
  swift_bridgeObjectRelease(v6);
  return v20;
}

void SiriKitDisambiguationList.makeSpeakableHandleLabels(deviceIsLocked:)(uint64_t a1)
{
  char v22 = a1;
  uint64_t v2 = (uint64_t)SiriKitDisambiguationList.removeSecondComponentIfIdenticalAcrossAllItems(deviceLocked:)(a1);
  unint64_t v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0) {
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v2);
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v4 != 1)
  {
    type metadata accessor for SiriKitDisambiguationList(0LL);
    uint64_t v8 = (uint64_t)static SiriKitDisambiguationList.keepOnlySecondComponentIfUnique(disambiguationItems:deviceLocked:)( v3,  v22 & 1);
    OUTLINED_FUNCTION_50();
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0) {
        uint64_t v21 = v8;
      }
      else {
        uint64_t v21 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v21);
      OUTLINED_FUNCTION_4_1();
      if (!v9) {
        goto LABEL_19;
      }
    }

    else
    {
      uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
      if (!v9) {
        goto LABEL_19;
      }
    }

    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v9 < 0)
    {
      __break(1u);
      return;
    }

    for (uint64_t i = 0LL; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001LL) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      }
      else {
        swift_retain();
      }
      Swift::String v11 = SiriKitDisambiguationItem.toSpokenHandleDisambiguation(deviceLocked:)(v22 & 1);
      OUTLINED_FUNCTION_38_1();
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      if (v12 >= _swiftEmptyArrayStorage[3] >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      *(Swift::String *)&_swiftEmptyArrayStorage[2 * v12 + 4] = v11;
    }

void *SiriKitDisambiguationList.removeSecondComponentIfIdenticalAcrossAllItems(deviceLocked:)(uint64_t a1)
{
  LOBYTE(v1) = a1;
  uint64_t v2 = SiriKitDisambiguationList.disambiguationItems.getter(a1);
  for (uint64_t i = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL)); ; uint64_t i = _CocoaArrayWrapper.endIndex.getter(v39))
  {
    uint64_t v4 = swift_bridgeObjectRelease();
    uint64_t v5 = SiriKitDisambiguationList.disambiguationItems.getter(v4);
    uint64_t v2 = v5;
    if (i < 2) {
      return (void *)v2;
    }
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v5 & 0xC000000000000001LL) == 0, v5);
    if ((v2 & 0xC000000000000001LL) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
    }

    else
    {
      uint64_t v6 = *(void *)(v2 + 32);
      swift_retain();
    }

    uint64_t v7 = swift_bridgeObjectRelease();
    uint64_t v8 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()(v7);
    uint64_t v9 = swift_release(v6);
    if (v8)
    {
      uint64_t v10 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)(v1 & 1);
      uint64_t v12 = v11;
      uint64_t v9 = swift_release(v8);
    }

    else
    {
      uint64_t v10 = 0LL;
      uint64_t v12 = 0LL;
    }

    unint64_t v13 = SiriKitDisambiguationList.disambiguationItems.getter(v9);
    swift_bridgeObjectRetain();
    char v14 = specialized Sequence.allSatisfy(_:)(v13, v10, v12, v1 & 1);
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_bridgeObjectRelease();
    uint64_t v16 = SiriKitDisambiguationList.disambiguationItems.getter(v15);
    uint64_t v2 = v16;
    if ((v14 & 1) == 0) {
      return (void *)v2;
    }
    if ((unint64_t)v16 >> 62)
    {
      if (v16 >= 0) {
        v16 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (!v1)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
    }

    else
    {
      uint64_t v1 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8LL));
      if (!v1) {
        goto LABEL_33;
      }
    }

    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)(v1);
    if (v1 < 0) {
      break;
    }
    uint64_t v18 = 0LL;
    while (1)
    {
      if ((v2 & 0xC000000000000001LL) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v2);
      }

      else
      {
        uint64_t v19 = *(void *)(v2 + 8 * v18 + 32);
        swift_retain();
      }

      uint64_t v20 = SiriKitDisambiguationItem.components.getter();
      uint64_t v40 = v20;
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v20)
        || v20 < 0
        || (v20 & 0x4000000000000000LL) != 0)
      {
        uint64_t v20 = specialized _ArrayBuffer._consumeAndCreateNew()(v20);
        uint64_t v40 = v20;
      }

      uint64_t v21 = v20 & 0xFFFFFFFFFFFFFF8LL;
      unint64_t v22 = *(void *)(v21 + 16);
      if (v22 < 2) {
        break;
      }
      unint64_t v23 = v22 - 1;
      uint64_t v25 = *(void *)(v21 + 40);
      uint64_t v24 = v21 + 40;
      uint64_t v26 = memmove((void *)v24, (const void *)(v24 + 8), 8 * v22 - 16);
      ++v18;
      *(void *)(v24 - 24) = v23;
      specialized Array._endMutation()(v26, v27, v28, v29);
      uint64_t v30 = swift_release(v25);
      uint64_t v31 = SiriKitDisambiguationItem.utterance.getter(v30);
      uint64_t v33 = v32;
      uint64_t v34 = type metadata accessor for SiriKitDisambiguationItem(0LL);
      swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
      uint64_t v35 = SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)(v40, v31, v33, 0LL);
      uint64_t v36 = swift_release(v19);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      uint64_t v37 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
      uint64_t v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
      specialized ContiguousArray._endMutation()(v38);
      if (v1 == v18) {
        goto LABEL_33;
      }
    }

    __break(1u);
LABEL_25:
    if (v2 < 0) {
      uint64_t v39 = v2;
    }
    else {
      uint64_t v39 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
  }

  __break(1u);
  return result;
}

void *static SiriKitDisambiguationList.keepOnlySecondComponentIfUnique(disambiguationItems:deviceLocked:)( unint64_t a1, char a2)
{
  LOBYTE(App.__allocating_init(appIdentifier:)(v1, v2) = a2;
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_79;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  unint64_t result = (void *)swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_83:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }

LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0LL;
    unint64_t v77 = v3 & 0xC000000000000001LL;
    uint64_t v71 = v3 + 32;
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v76 = v4;
    do
    {
      if (v77)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
        uint64_t v9 = v8;
      }

      else
      {
        uint64_t v9 = *(void *)(v3 + 8 * v6 + 32);
        uint64_t v8 = swift_retain();
      }

      uint64_t v10 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()(v8);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)(v2 & 1);
        uint64_t v14 = v13;
        swift_release(v9);
        swift_release(v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  v7[2] + 1LL,  1LL,  (uint64_t)v7);
          uint64_t v7 = v18;
        }

        unint64_t v16 = v7[2];
        unint64_t v15 = v7[3];
        if (v16 >= v15 >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v15 > 1,  v16 + 1,  1LL,  (uint64_t)v7);
          uint64_t v7 = v19;
        }

        v7[2] = v16 + 1;
        uint64_t v17 = &v7[2 * v16];
        v17[4] = v12;
        void v17[5] = v14;
        uint64_t v4 = v76;
      }

      else
      {
        swift_release(v9);
      }

      ++v6;
    }

    while (v4 != v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v20 = 0LL;
    uint64_t v72 = v3;
    char v74 = v2;
    while (1)
    {
      if (v77)
      {
        uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v3);
        uint64_t v22 = v21;
      }

      else
      {
        uint64_t v22 = *(void *)(v71 + 8 * v20);
        uint64_t v21 = swift_retain();
      }

      uint64_t v23 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()(v21);
      if (!v23) {
        goto LABEL_44;
      }
      uint64_t v24 = v23;
      uint64_t v25 = dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)(v2 & 1);
      uint64_t v27 = v26;
      uint64_t v28 = v7[2];
      if (v28)
      {
        uint64_t v2 = v25;
        uint64_t v29 = v7[4];
        uint64_t v30 = v7[5];
        BOOL v31 = v29 == v2 && v30 == v27;
        if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v2, v27, 0LL) & 1) != 0)
        {
          uint64_t v32 = 0LL;
          BOOL v75 = 0;
        }

        else if (v28 == 1)
        {
          uint64_t v32 = 0LL;
          BOOL v75 = 1;
        }

        else
        {
          uint64_t v60 = v7[6];
          uint64_t v61 = v7[7];
          BOOL v62 = v60 == v2 && v61 == v27;
          if (v62 || (_stringCompareWithSmolCheck(_:_:expecting:)(v60, v61, v2, v27, 0LL) & 1) != 0)
          {
            BOOL v75 = 0;
            uint64_t v32 = 1LL;
          }

          else
          {
            uint64_t v63 = v7 + 9;
            uint64_t v64 = 2LL;
            uint64_t v65 = 1LL;
            while (1)
            {
              BOOL v75 = v28 == v64;
              if (v28 == v64)
              {
                uint64_t v32 = 0LL;
                goto LABEL_28;
              }

              ++v65;
              uint64_t v66 = *(v63 - 1);
              uint64_t v67 = *v63;
              if (v66 == v2 && v67 == v27) {
                break;
              }
              char v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v67, v2, v27, 0LL);
              uint64_t v32 = v64++;
              v63 += 2;
              if ((v69 & 1) != 0) {
                goto LABEL_28;
              }
            }

            uint64_t v32 = v65;
          }
        }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v7 & 0xC000000000000001LL) == 0, v7);
  if ((v7 & 0xC000000000000001LL) != 0) {
    uint64_t v8 = (id)OUTLINED_FUNCTION_5_49(0LL);
  }
  else {
    uint64_t v8 = *(id *)(v7 + 32);
  }
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_39();
  uint64_t v10 = [v9 fullPrint];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  uint64_t v13 = v12;

LABEL_8:
  unint64_t v15 = v0[22];
  uint64_t v17 = v0[14];
  unint64_t v16 = (void *)v0[15];
  uint64_t v18 = v0[9];
  uint64_t v19 = v0[10];
  *unint64_t v16 = v4;
  v16[1] = v11;
  __int128 v16[2] = v13;
  swift_storeEnumTagMultiPayload(v16, v17, 1LL);
  OUTLINED_FUNCTION_124();
  uint64_t v20 = OUTLINED_FUNCTION_128();
  static DialogPhase.clarification.getter(v20);
  uint64_t v21 = (void *)swift_task_alloc(48LL);
  v21[2] = v15;
  v21[3] = v4;
  uint64_t v21[4] = v11;
  v21[5] = v13;
  OutputGenerationManifest.init(dialogPhase:_:)( v19,  partial apply for closure #3 in PhoneAppResolutionOnDeviceFlowStrategy.makeDisambiguationPrompt(apps:),  v21);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_25();
  uint64_t v22 = *(void *)(v18 + 280);
  __swift_project_boxed_opaque_existential_1((void *)(v18 + 256), v22);
  v0[5] = v17;
  OUTLINED_FUNCTION_118_6( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  v23,  v24,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  v0[6] = v25;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  OUTLINED_FUNCTION_158_5((uint64_t)v16, (uint64_t)boxed_opaque_existential_1);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v28 = OUTLINED_FUNCTION_8_2(v27, 40LL);
  *(_OWORD *)(v28 + 16) = xmmword_31FE60;
  *(void *)(v28 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v38;
  OUTLINED_FUNCTION_5_64(v28, v29, v30, v31);
  v0[32] = v39;
  uint64_t v32 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)[1];
  uint64_t v33 = v38;
  uint64_t v34 = (void *)swift_task_alloc(v32);
  v0[33] = v34;
  uint64_t v35 = OUTLINED_FUNCTION_273_2(v34);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)( v35,  v0 + 2,  v39,  v36,  v22);
}

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v3 & 0xC000000000000001LL) == 0, v3);
  if ((v3 & 0xC000000000000001LL) != 0) {
    uint64_t v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v3);
  }
  else {
    uint64_t v4 = *(id *)(v3 + 32);
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(void **)(v0 + 24);
  OUTLINED_FUNCTION_62();
  uint64_t v7 = [v5 fullPrint];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  uint64_t v10 = v9;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v8, v10);
}

uint64_t OUTLINED_FUNCTION_0_66()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v0);
}

uint64_t OUTLINED_FUNCTION_2_57()
{
  return swift_retain(*(void *)(v0 + 32));
}

uint64_t AssistantProperties.countryCode.getter()
{
  id v0 = (id)_AFPreferencesCountryCode();
  if (!v0) {
    return 0LL;
  }
  uint64_t v1 = v0;
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v0);

  return v2;
}

ValueMetadata *type metadata accessor for AssistantProperties()
{
  return &type metadata for AssistantProperties;
}

uint64_t SeasAppMatcherRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a3;
  void v6[4] = a6;
  v6[2] = a1;
  uint64_t v7 = type metadata accessor for AppMatcherResult(0LL);
  void v6[5] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[6] = v8;
  v6[7] = OUTLINED_FUNCTION_23(v8);
  uint64_t v9 = type metadata accessor for AppMatcher(0LL);
  v6[8] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[9] = v10;
  v6[10] = OUTLINED_FUNCTION_23(v10);
  return swift_task_switch( SeasAppMatcherRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:),  0LL,  0LL);
}

uint64_t SeasAppMatcherRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)()
{
  uint64_t v1 = AppMatcher.resolve(intent:bundleIds:)(*(void *)(v0 + 24), *(void *)(v0 + 32));
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  AppMatcherResult.resolution.getter(v1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::String __swiftcall SeasAppMatcherRule.getName()()
{
  uint64_t v0 = (void *)0x800000000032C070LL;
  uint64_t v1 = 0xD000000000000012LL;
  result._object = v0;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t protocol witness for SeasRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:) in conformance SeasAppMatcherRule( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(int **)(**(void **)v6 + 80LL);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  unint64_t v15 = (void *)swift_task_alloc(v14[1]);
  *(void *)(v7 + 16) = v15;
  *unint64_t v15 = v7;
  v15[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for SeasAppMatcherRule()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin18SeasAppMatcherRule);
}

uint64_t static Transformer<>.transformer(sharedGlobals:app:previousIntent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_allocObject(&unk_405238, 64LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(v6, v3 + 16);
  *(void *)(v3 + 56) = a2;
  swift_retain();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INPreferredCallProvider(0LL);
  return Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v3,  v4);
}

uint64_t closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v172 = a4;
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v7 + 152))(&v209, v6, v7);
  uint64_t v8 = *((void *)&v210 + 1);
  uint64_t v9 = v211;
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(&v209, *((uint64_t *)&v210 + 1));
  if (a3)
  {
    uint64_t v11 = App.appIdentifier.getter();
    a3 = v12;
  }

  else
  {
    uint64_t v11 = 0LL;
  }

  uint64_t v13 = v10;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(&v196, v11, a3, v8, v9);
  uint64_t v14 = v199;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(&v209);
  outlined init with take of AnnotatedApp?( (uint64_t)&v196,  (uint64_t)v208,  &demangling cache variable for type metadata for AnnotatedApp?);
  if (*(void *)&v208[0])
  {
    __int128 v209 = v208[0];
    __int128 v210 = v208[1];
    __int128 v211 = v208[2];
    uint64_t v212 = *((void *)&v208[0] + 1);
    unint64_t v15 = *(void **)&v208[0];
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_128();
    outlined release of Set<String>(&v212);
    outlined init with take of AnnotatedApp?( (uint64_t)&v210,  (uint64_t)v213,  &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v213);
    uint64_t v214 = *((void *)&v211 + 1);
    outlined release of Set<String>(&v214);
  }

  else
  {
    unint64_t v15 = 0LL;
  }

  OUTLINED_FUNCTION_3_74();
  Swift::Bool v16 = PhoneCallNLIntent.hasAnyFaceTime()();
  outlined init with copy of SignalProviding(a1, (uint64_t)&v191);
  if (v16)
  {
    uint64_t v13 = __swift_project_boxed_opaque_existential_1(&v191, v194);
    Swift::Bool v17 = PhoneCallNLIntent.isFirstPartyOrDefaultAppRequest()();
    __swift_destroy_boxed_opaque_existential_1(&v191);
    if (v17)
    {
      OUTLINED_FUNCTION_23_32();
      if (!v18) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v19 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v19, (uint64_t)static Logger.siriPhone);
      os_log_type_t v20 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_5(v20))
      {
        uint64_t v21 = OUTLINED_FUNCTION_1_60();
        uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
        *(void *)&__int128 v205 = v22;
        OUTLINED_FUNCTION_13_54(4.8149e-34);
        *(void *)&__int128 v202 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
        uint64_t v31 = OUTLINED_FUNCTION_16_36( v23,  v24,  v25,  v26,  v27,  v28,  v29,  v30,  v159,  v165,  (uint64_t)v172,  v178,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202);
        *(void *)&__int128 v202 = OUTLINED_FUNCTION_25_35( v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  v160,  v166,  v173,  v179,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205);
        OUTLINED_FUNCTION_2_58((uint64_t)&v202, v14 + 8);
        OUTLINED_FUNCTION_87_0();
        OUTLINED_FUNCTION_5_62(&dword_0, v39, v40, "#%s using FaceTime provider per verb or noun parse");
        OUTLINED_FUNCTION_7_65();
        OUTLINED_FUNCTION_0_2(v22);
        OUTLINED_FUNCTION_0_2(v21);
      }

      goto LABEL_13;
    }
  }

  else
  {
    __swift_destroy_boxed_opaque_existential_1(&v191);
  }

  OUTLINED_FUNCTION_3_74();
  Swift::Bool v42 = PhoneCallNLIntent.isRedialOrCallBack()();
  outlined init with copy of SignalProviding(a1, (uint64_t)&v186);
  if (v42)
  {
    __swift_destroy_boxed_opaque_existential_1(&v186);
LABEL_19:
    OUTLINED_FUNCTION_23_32();
    if (!v18) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v44 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v44, (uint64_t)static Logger.siriPhone);
    os_log_type_t v45 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_5(v45))
    {
      uint64_t v46 = OUTLINED_FUNCTION_1_60();
      uint64_t v47 = OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&__int128 v205 = v47;
      OUTLINED_FUNCTION_13_54(4.8149e-34);
      *(void *)&__int128 v202 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
      uint64_t v56 = OUTLINED_FUNCTION_16_36( v48,  v49,  v50,  v51,  v52,  v53,  v54,  v55,  v159,  v165,  (uint64_t)v172,  v178,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202);
      *(void *)&__int128 v202 = OUTLINED_FUNCTION_25_35( v56,  v57,  v58,  v59,  v60,  v61,  v62,  v63,  v161,  v167,  v174,  v180,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205);
      OUTLINED_FUNCTION_2_58((uint64_t)&v202, v14 + 8);
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_5_62( &dword_0,  v64,  v65,  "#%s Not setting preferredCallProvider because this is a redial/callback or find request");
      OUTLINED_FUNCTION_7_65();
      OUTLINED_FUNCTION_0_2(v47);
      OUTLINED_FUNCTION_0_2(v46);
    }

    uint64_t v41 = 0LL;
    goto LABEL_24;
  }

  uint64_t v13 = __swift_project_boxed_opaque_existential_1(&v186, v189);
  Swift::Bool v43 = PhoneCallNLIntent.isFind()();
  __swift_destroy_boxed_opaque_existential_1(&v186);
  if (v43) {
    goto LABEL_19;
  }
  if (v15)
  {
    swift_retain();
    uint64_t v13 = v15;
    if (App.isFaceTime()())
    {
      outlined init with take of AnnotatedApp?( (uint64_t)&v196,  (uint64_t)&v202,  &demangling cache variable for type metadata for AnnotatedApp?);
      if ((void)v202)
      {
        __int128 v206 = v203;
        __int128 v207 = v204;
        __int128 v205 = v202;
        if (v204 != 1)
        {
          uint64_t v111 = one-time initialization token for siriPhone;
          OUTLINED_FUNCTION_23_1();
          OUTLINED_FUNCTION_128();
          OUTLINED_FUNCTION_36_1();
          OUTLINED_FUNCTION_36();
          if (v111 != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v112 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_12_1(v112, (uint64_t)static Logger.siriPhone);
          os_log_type_t v113 = OUTLINED_FUNCTION_6_0();
          if (OUTLINED_FUNCTION_29_5(v113))
          {
            uint64_t v114 = OUTLINED_FUNCTION_1_60();
            uint64_t v185 = OUTLINED_FUNCTION_7_0(32LL);
            OUTLINED_FUNCTION_13_54(4.8149e-34);
            uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
            uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
            uint64_t v116 = String.init<A>(describing:)(&v215, v115);
            uint64_t v215 = OUTLINED_FUNCTION_24_28(v116, v117, v118, v119, v120, v121, v122);
            OUTLINED_FUNCTION_2_58((uint64_t)&v215, (uint64_t)&v216);
            OUTLINED_FUNCTION_87_0();
            OUTLINED_FUNCTION_5_62( &dword_0,  v123,  v124,  "#%s using FaceTime provider per app resolution result (user requested)");
            OUTLINED_FUNCTION_7_65();
            OUTLINED_FUNCTION_0_2(v185);
            OUTLINED_FUNCTION_0_2(v114);

            OUTLINED_FUNCTION_31_2();
            uint64_t v125 = swift_release(v205);
            OUTLINED_FUNCTION_9_51( v125,  v126,  v127,  v128,  v129,  v130,  v131,  v132,  v159,  v165,  (uint64_t)v172,  v178,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205,  *((uint64_t *)&v205 + 1));
            OUTLINED_FUNCTION_23_20((uint64_t)&v206, v133, &demangling cache variable for type metadata for String?);
            uint64_t v134 = OUTLINED_FUNCTION_28_20();
            OUTLINED_FUNCTION_6_59( v134,  v135,  v136,  v137,  v138,  v139,  v140,  v141,  v163,  v170,  v176,  v182,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205,  *((uint64_t *)&v205 + 1),  v206,  *((uint64_t *)&v206 + 1),  v207,  *((uint64_t *)&v207 + 1));
            goto LABEL_14;
          }

          OUTLINED_FUNCTION_31_2();
          uint64_t v142 = swift_release(v205);
          OUTLINED_FUNCTION_9_51( v142,  v143,  v144,  v145,  v146,  v147,  v148,  v149,  v159,  v165,  (uint64_t)v172,  v178,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205,  *((uint64_t *)&v205 + 1));
          OUTLINED_FUNCTION_23_20((uint64_t)&v206, v150, &demangling cache variable for type metadata for String?);
          uint64_t v151 = OUTLINED_FUNCTION_28_20();
          OUTLINED_FUNCTION_6_59( v151,  v152,  v153,  v154,  v155,  v156,  v157,  v158,  v164,  v171,  v177,  v183,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205,  *((uint64_t *)&v205 + 1),  v206,  *((uint64_t *)&v206 + 1),  v207,  *((uint64_t *)&v207 + 1));
LABEL_13:

LABEL_14:
          uint64_t v41 = 2LL;
          goto LABEL_24;
        }

        uint64_t v76 = v205;
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_36();
        OUTLINED_FUNCTION_23_1();
        OUTLINED_FUNCTION_128();
        uint64_t v77 = swift_release(v76);
        OUTLINED_FUNCTION_9_51( v77,  v78,  v79,  v80,  v81,  v82,  v83,  v84,  v159,  v165,  (uint64_t)v172,  v178,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205,  *((uint64_t *)&v205 + 1));
        OUTLINED_FUNCTION_23_20((uint64_t)&v206, v85, &demangling cache variable for type metadata for String?);
        uint64_t v86 = OUTLINED_FUNCTION_28_20();
        OUTLINED_FUNCTION_6_59( v86,  v87,  v88,  v89,  v90,  v91,  v92,  v93,  v162,  v169,  v175,  v181,  v184,  v185,  v186,  v187,  v188,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  v197,  v198,  v199,  v200,  v201,  v202,  *((uint64_t *)&v202 + 1),  v203,  *((uint64_t *)&v203 + 1),  v204,  *((uint64_t *)&v204 + 1),  v205,  *((uint64_t *)&v205 + 1),  v206,  *((uint64_t *)&v206 + 1),  v207,  *((uint64_t *)&v207 + 1));
      }
    }

    OUTLINED_FUNCTION_31_2();
  }

  OUTLINED_FUNCTION_3_74();
  if (PhoneCallNLIntent.isFirstPartyOrDefaultAppRequest()())
  {
    OUTLINED_FUNCTION_23_32();
    if (!v18) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v94 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v94, (uint64_t)static Logger.siriPhone);
    os_log_type_t v95 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled((os_log_t)v13, v95))
    {
      uint64_t v96 = (uint8_t *)OUTLINED_FUNCTION_1_60();
      uint64_t v97 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v185 = v97;
      *(_DWORD *)uint64_t v96 = 136315138;
      unint64_t v15 = v96 + 4;
      uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
      uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>.Type);
      uint64_t v99 = String.init<A>(describing:)(&v184, v98);
      uint64_t v184 = OUTLINED_FUNCTION_24_28(v99, v100, v101, v102, v103, v104, v105);
      OUTLINED_FUNCTION_2_58((uint64_t)&v184, (uint64_t)&v185);
      OUTLINED_FUNCTION_87_0();
      _os_log_impl(&dword_0, (os_log_t)v13, v95, "#%s fallback to telephony", v96, 0xCu);
      uint64_t v41 = 1LL;
      swift_arrayDestroy(v97, 1LL);
      OUTLINED_FUNCTION_0_2(v97);
      OUTLINED_FUNCTION_0_2((uint64_t)v96);
    }

    else
    {

      uint64_t v41 = 1LL;
    }
  }

  else
  {
    uint64_t v41 = 3LL;
  }

uint64_t sub_17ABEC()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_1_60()
{
  return swift_slowAlloc(12LL, -1LL);
}

uint64_t OUTLINED_FUNCTION_2_58(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_3_74()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

void *OUTLINED_FUNCTION_6_59( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42)
{
  *(void *)(v42 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a42;
  return outlined release of Set<String>((void *)(v42 - 72));
}

uint64_t OUTLINED_FUNCTION_7_65()
{
  return swift_arrayDestroy(v0, 1LL);
}

void *OUTLINED_FUNCTION_9_51( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  *(void *)(v38 - 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a38;
  return outlined release of Set<String>((void *)(v38 - 112));
}

void OUTLINED_FUNCTION_13_54(float a1)
{
  float *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_16_36( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
  return String.init<A>(describing:)(&a31, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_24_28( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 64LL);
  *(_OWORD *)(v1 + 16) = xmmword_31D880;
  Swift::String v14 = String.uppercased()();
  uint64_t v12 = 32LL;
  unint64_t v13 = 0xE100000000000000LL;
  uint64_t v10 = 95LL;
  unint64_t v11 = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_10_14((uint64_t)&v12, (uint64_t)&v10);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_42_15();
  Swift::String v2 = String.uppercased()();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_5();
  object = v14._object;
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v14._countAndFlagsBits;
  *(void *)(v1 + 40) = object;
  Swift::String v14 = String.uppercased()();
  uint64_t v12 = 32LL;
  unint64_t v13 = 0xE100000000000000LL;
  uint64_t v10 = 95LL;
  unint64_t v11 = 0xE100000000000000LL;
  OUTLINED_FUNCTION_10_14((uint64_t)&v12, (uint64_t)&v10);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_42_15();
  Swift::String v4 = String.uppercased()();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v14._object;
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v14._countAndFlagsBits;
  *(void *)(v1 + 56) = v5;
  NLContextUpdate.weightedPromptResponseOptions.setter(v1);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v0, 48LL);
  *(_OWORD *)(v6 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_31_3();
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v6 + 40) = v8;
  NLContextUpdate.weightedPromptResponseTargets.setter(v6);
  return NLContextUpdate.weightedPromptStrict.setter(1LL);
}

uint64_t specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()()
{
  uint64_t v70 = (char *)OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v69 = v0;
  __chkstk_darwin();
  uint64_t v68 = (void (**)(char *, uint64_t))((char *)&v60 - v1);
  uint64_t v66 = (char *)OUTLINED_FUNCTION_15_1();
  os_log_type_t v67 = (char *)*((void *)v66 - 1);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v64 = v2;
  uint64_t v3 = OUTLINED_FUNCTION_65_1();
  uint64_t v75 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(v3);
  uint64_t v71 = *(void *)(v75 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v63 = (char *)&v60 - v4;
  uint64_t v5 = OUTLINED_FUNCTION_65_1();
  uint64_t v76 = type metadata accessor for Siri_Nlu_External_SystemOffered(v5);
  uint64_t v74 = *(void *)(v76 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v60 - v6;
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  uint64_t v73 = v9;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  unint64_t v11 = (char *)&v60 - v10;
  type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  unint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Siri_Nlu_External_UserWantedToProceed(0LL);
  unint64_t v15 = *(char **)(v14 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin();
  os_log_type_t v20 = (char *)&v60 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for UsoTaskBuilder_call_common_PhoneCall(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  uint64_t v24 = UsoTaskBuilder_call_common_PhoneCall.init()();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v26 = OUTLINED_FUNCTION_8_2(v25, 40LL);
  *(_OWORD *)(v26 + 16) = xmmword_31FE60;
  *(void *)(v26 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v24;
  v79[0] = v26;
  specialized Array._endMutation()(v26, v27, v28, v29);
  uint64_t v30 = v79[0];
  uint64_t v31 = type metadata accessor for UsoBuilderOptions(0LL);
  OUTLINED_FUNCTION_29_1((uint64_t)v22, v32, v33, v31);
  uint64_t v65 = v24;
  swift_retain();
  uint64_t v34 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v30, v22);
  OUTLINED_FUNCTION_62();
  outlined destroy of CommonDirectAction?( (uint64_t)v22,  &demangling cache variable for type metadata for UsoBuilderOptions?);
  Siri_Nlu_External_UserWantedToProceed.init()();
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v34, 0LL);
  uint64_t v64 = v34;
  uint64_t v35 = Siri_Nlu_External_UserWantedToProceed.reference.setter(v13);
  Siri_Nlu_External_UserDialogAct.init()(v35);
  uint64_t v68 = (void (**)(char *, uint64_t))v15;
  uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v15 + 2);
  os_log_type_t v67 = v20;
  uint64_t v69 = v14;
  OUTLINED_FUNCTION_142(v18, (uint64_t)v20, v36);
  uint64_t v37 = Siri_Nlu_External_UserDialogAct.wantedToProceed.setter(v18);
  Siri_Nlu_External_SystemOffered.init()(v37);
  uint64_t v38 = v73;
  uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v73 + 16);
  uint64_t v40 = v61;
  uint64_t v70 = v11;
  v39(v61, v11, v72);
  uint64_t v41 = Siri_Nlu_External_SystemOffered.offeredAct.setter(v40);
  uint64_t v42 = (uint64_t)v63;
  Siri_Nlu_External_SystemDialogAct.init()(v41);
  uint64_t v43 = v74;
  uint64_t v44 = v62;
  (*(void (**)(os_log_s *, char *, uint64_t))(v74 + 16))(v62, v7, v76);
  Siri_Nlu_External_SystemDialogAct.offered.setter(v44);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  OUTLINED_FUNCTION_12_1((uint64_t)v66, (uint64_t)static Logger.siriPhone);
  os_log_type_t v45 = OUTLINED_FUNCTION_41();
  BOOL v46 = OUTLINED_FUNCTION_87(v45);
  uint64_t v47 = v75;
  if (v46)
  {
    uint64_t v48 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v49 = OUTLINED_FUNCTION_7_0(32LL);
    v79[0] = v49;
    uint64_t v66 = v7;
    *(_DWORD *)uint64_t v48 = 136315138;
    OUTLINED_FUNCTION_25_0(v42, (uint64_t)v78, 0LL);
    uint64_t v50 = v71;
    uint64_t v51 = v60;
    OUTLINED_FUNCTION_19_28(v60, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 16));
    uint64_t v52 = specialized String.init(describing:)(v51);
    uint64_t v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, v79);
    uint64_t v38 = v73;
    uint64_t v7 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v48 + 4);
    uint64_t v47 = v75;
    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v44,  OS_LOG_TYPE_DEFAULT,  "#PhoneCallNLContextProvider Returning SystemOffered for start call confirmation: %s",  v48,  0xCu);
    swift_arrayDestroy(v49, 1LL);
    uint64_t v54 = v49;
    uint64_t v43 = v74;
    OUTLINED_FUNCTION_0_2(v54);
    OUTLINED_FUNCTION_0_2((uint64_t)v48);
  }

  else
  {

    uint64_t v50 = v71;
  }

  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Siri_Nlu_External_SystemDialogAct>);
  uint64_t v56 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v57 = (v56 + 32) & ~v56;
  uint64_t v58 = swift_allocObject(v55, v57 + *(void *)(v50 + 72), v56 | 7);
  *(_OWORD *)(v58 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_25_0(v42, (uint64_t)v79, 0LL);
  OUTLINED_FUNCTION_19_28(v58 + v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16));
  swift_release(v65);
  swift_release(v64);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v76);
  OUTLINED_FUNCTION_11_20((uint64_t)v70, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  v68[1](v67, v69);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v42, v47);
  return v58;
}

void *specialized _ArrayProtocol.filter(_:)(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_38;
  }
  for (uint64_t i = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL)); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    uint64_t v23 = v2;
    unint64_t v4 = 0LL;
    uint64_t v26 = v2 & 0xFFFFFFFFFFFFFF8LL;
    unint64_t v27 = v2 & 0xC000000000000001LL;
    uint64_t v24 = i;
    uint64_t v25 = v2 + 32;
    while (1)
    {
      if (v27)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v23);
      }

      else
      {
        if (v4 >= *(void *)(v26 + 16)) {
          goto LABEL_36;
        }
        id v5 = *(id *)(v25 + 8 * v4);
      }

      uint64_t v6 = v5;
      if (__OFADD__(v4++, 1LL)) {
        goto LABEL_37;
      }
      outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(a2);
      if (v8) {
        break;
      }

LABEL_26:
      if (v4 == i) {
        goto LABEL_42;
      }
    }

    uint64_t v9 = v8;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 >= 0) {
        uint64_t v20 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v20 = v8;
      }
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v10)
      {
LABEL_24:
        uint64_t v17 = swift_bridgeObjectRelease_n(v9, 2LL);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        uint64_t v18 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        uint64_t v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v6);
        specialized ContiguousArray._endMutation()(v19);
        goto LABEL_25;
      }
    }

    else
    {
      uint64_t v10 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_24;
      }
    }

    if ((v9 & 0xC000000000000001LL) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v9);
    }
    else {
      id v11 = *(id *)(v9 + 32);
    }
    uint64_t v12 = v11;
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    uint64_t v2 = static NSObject.== infix(_:_:)(v12, v6);

    if ((v2 & 1) != 0)
    {
LABEL_14:

      swift_bridgeObjectRelease_n(v9, 2LL);
LABEL_25:
      uint64_t i = v24;
      goto LABEL_26;
    }

    if (v10 == 1) {
      goto LABEL_24;
    }
    uint64_t v13 = 5LL;
    while (1)
    {
      id v14 = (v9 & 0xC000000000000001LL) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v9)
          : *(id *)(v9 + 8 * v13);
      uint64_t v2 = (uint64_t)v14;
      uint64_t v15 = v13 - 3;
      if (__OFADD__(v13 - 4, 1LL)) {
        break;
      }
      char v16 = static NSObject.== infix(_:_:)(v14, v6);

      if ((v16 & 1) != 0) {
        goto LABEL_14;
      }
      ++v13;
      if (v15 == v10) {
        goto LABEL_24;
      }
    }

    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    if (v2 < 0) {
      uint64_t v21 = v2;
    }
    else {
      uint64_t v21 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
  }

{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void *v16;
  uint64_t v17;
  void *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  uint64_t v27;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_40;
  }
  unint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  if (v4)
  {
    while (1)
    {
      uint64_t v30 = v3;
      id v5 = 0LL;
      uint64_t v6 = v3 & 0xC000000000000001LL;
      uint64_t v7 = v3 + 32;
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
      uint64_t v29 = (void **)(a2 + 7);
      uint64_t v32 = v6;
      uint64_t v33 = a2;
      uint64_t v31 = v3;
      uint64_t v34 = v4;
      while (1)
      {
        if (v6)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v30);
          uint64_t v8 = v9;
        }

        else
        {
          if (v5 >= *(void *)(v3 + 16))
          {
            __break(1u);
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }

          uint64_t v8 = *(void *)(v7 + 8 * v5);
          uint64_t v9 = swift_retain(v8);
        }

        if (__OFADD__(v5++, 1LL)) {
          goto LABEL_38;
        }
        id v11 = App.appIdentifier.getter(v9);
        if (v12) {
          break;
        }
        swift_release(v8);
LABEL_24:
        if (v5 == v4)
        {
          uint64_t v3 = v30;
          goto LABEL_44;
        }
      }

      uint64_t v13 = v12;
      id v14 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000LL) == 0) {
        id v14 = v11 & 0xFFFFFFFFFFFFLL;
      }
      if (!v14) {
        break;
      }
      uint64_t v15 = String.lowercased()();
      swift_bridgeObjectRelease(v13);
      char v16 = (void *)a2[2];
      if (!v16)
      {
        swift_release(v8);
        swift_bridgeObjectRelease(v15._object);
        goto LABEL_23;
      }

      uint64_t v17 = a2[4];
      uint64_t v18 = (void *)a2[5];
      uint64_t v19 = v17 == v15._countAndFlagsBits && v18 == v15._object;
      if (v19
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v15._countAndFlagsBits, v15._object, 0LL) & 1) != 0)
      {
LABEL_18:
        uint64_t v20 = swift_bridgeObjectRelease(v15._object);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        uint64_t v21 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
        uint64_t v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v8);
        specialized ContiguousArray._endMutation()(v22);
        goto LABEL_19;
      }

      if (v16 == (void *)((char *)&dword_0 + 1))
      {
LABEL_35:
        swift_release(v8);
        swift_bridgeObjectRelease(v15._object);
LABEL_19:
        uint64_t v6 = v32;
        a2 = v33;
        uint64_t v3 = v31;
LABEL_23:
        unint64_t v4 = v34;
        goto LABEL_24;
      }

      uint64_t v23 = v29;
      uint64_t v3 = 1LL;
      while (1)
      {
        a2 = (void *)(v3 + 1);
        if (__OFADD__(v3, 1LL)) {
          break;
        }
        uint64_t v24 = (uint64_t)*(v23 - 1);
        uint64_t v25 = *v23;
        uint64_t v26 = v24 == v15._countAndFlagsBits && v25 == v15._object;
        if (v26
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v15._countAndFlagsBits, v15._object, 0LL) & 1) != 0)
        {
          goto LABEL_18;
        }

        v23 += 2;
        ++v3;
        if (a2 == v16) {
          goto LABEL_35;
        }
      }

uint64_t StartCallConfirmIntentFlowStrategy.__allocating_init(delegate:startCallCATsSimple:displayTextCATsSimple:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = OUTLINED_FUNCTION_8_2(v3, 41LL);
  *(_BYTE *)(result + 40) = 5;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  return result;
}

uint64_t PhonePersonAndVisualData.person.getter()
{
  return swift_retain(*(void *)(v0 + 24));
}

uint64_t StartCallConfirmIntentFlowStrategy.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding( *(void *)(v1 + 16) + direct field offset for StartCallRCHFlowDelegate.sharedGlobals,  a1);
}

void StartCallConfirmIntentFlowStrategy.promptResponse.didset()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  unint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_beginAccess(v1 + 40, v13, 0LL, 0LL);
    LOBYTE(v1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(v1 + 40);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallConfirmation?);
    uint64_t v10 = String.init<A>(describing:)(&v12, v9);
    uint64_t v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, v13, v7 + 4);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v6, "#StartCallConfirmIntentFlowStrategy promptResponse: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v0, 2LL);
  }

void StartCallConfirmIntentFlowStrategy.promptResponse.setter(char a1)
{
  *(_BYTE *)(v1 + 40) = a1;
  StartCallConfirmIntentFlowStrategy.promptResponse.didset();
}

uint64_t StartCallConfirmIntentFlowStrategy.init(delegate:startCallCATsSimple:displayTextCATsSimple:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)(v3 + 40) = 5;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  return v3;
}

uint64_t StartCallConfirmIntentFlowStrategy.actionForInput(_:confirmParameters:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CommonDirectAction?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v4 = v2 - v3;
  __chkstk_darwin();
  unint64_t v53 = (uint64_t *)((char *)&v52 - v5);
  uint64_t v6 = OUTLINED_FUNCTION_65_1();
  uint64_t v52 = type metadata accessor for Parse.DirectInvocation(v6);
  uint64_t v7 = *(void *)(v52 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v9 = v8;
  uint64_t v10 = OUTLINED_FUNCTION_65_1();
  uint64_t v11 = type metadata accessor for Parse(v10);
  uint64_t v12 = *(uint64_t (***)(uint64_t, uint64_t))(v11 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v15 = (os_log_s *)(v13 - v14);
  uint64_t v16 = __chkstk_darwin();
  uint64_t v18 = (uint64_t *)((char *)&v52 - v17);
  Input.parse.getter(v16);
  int v19 = v12[11]((uint64_t)v18, v11);
  if (v19 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_2;
  }
  if (v19 == enum case for Parse.directInvocation(_:))
  {
    OUTLINED_FUNCTION_37_25((uint64_t)v18, v12[12]);
    uint64_t v27 = v7;
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v18, v52);
    uint64_t v28 = v53;
    static CommonDirectAction.from(_:)(v9, v53);
    uint64_t v29 = (os_log_s *)type metadata accessor for CommonDirectAction(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1LL, (uint64_t)v29) != 1)
    {
      outlined init with copy of CommonDirectAction?( (uint64_t)v28,  v4,  &demangling cache variable for type metadata for CommonDirectAction?);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v29);
      if (EnumCaseMultiPayload == 6)
      {
        OUTLINED_FUNCTION_15_46();
        v1[40] = 0;
LABEL_28:
        OUTLINED_FUNCTION_104_6();
        OUTLINED_FUNCTION_11_20(v9, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
        outlined destroy of CommonDirectAction?( (uint64_t)v28,  &demangling cache variable for type metadata for CommonDirectAction?);
        goto LABEL_29;
      }

      if (EnumCaseMultiPayload == 7)
      {
        OUTLINED_FUNCTION_15_46();
        char v31 = 2;
LABEL_27:
        v1[40] = v31;
        goto LABEL_28;
      }

      outlined destroy of MainFlow(v4, type metadata accessor for CommonDirectAction);
    }

    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v35 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v35, (uint64_t)static Logger.siriPhone);
    os_log_type_t v36 = OUTLINED_FUNCTION_59_8();
    if (OUTLINED_FUNCTION_10(v36))
    {
      uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v37 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v29,  (os_log_type_t)&unk_42A000,  "#StartCallConfirmIntentStrategy Unrecognized directInvocation",  v37);
      OUTLINED_FUNCTION_0_2((uint64_t)v37);
    }

    OUTLINED_FUNCTION_15_46();
    char v31 = 5;
    goto LABEL_27;
  }

  if (v19 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_37_25((uint64_t)v18, v12[12]);
    uint64_t v20 = swift_unknownObjectRelease(*v18);
    goto LABEL_3;
  }

  if (v19 == enum case for Parse.uso(_:))
  {
LABEL_2:
    uint64_t v20 = OUTLINED_FUNCTION_37_25((uint64_t)v18, v12[1]);
LABEL_3:
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v1 + 112LL))(v55, v20);
    uint64_t v21 = v56;
    uint64_t v22 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 72))(v21, v22);
    Input.parse.getter(v23);
    (*(void (**)(void *__return_ptr, os_log_s *))(*(void *)v23 + 192LL))(v58, v15);
    swift_release(v23);
    OUTLINED_FUNCTION_37_25((uint64_t)v15, v12[1]);
    __swift_destroy_boxed_opaque_existential_1(v55);
    uint64_t v24 = v59;
    if (v59)
    {
      uint64_t v25 = v60;
      OUTLINED_FUNCTION_49_0(v58);
      char v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
      __swift_destroy_boxed_opaque_existential_1(v58);
    }

    else
    {
      outlined destroy of CommonDirectAction?( (uint64_t)v58,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
      char v26 = 5;
    }

    OUTLINED_FUNCTION_15_46();
    v1[40] = v26;
    OUTLINED_FUNCTION_104_6();
    goto LABEL_29;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v32 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v32, (uint64_t)static Logger.siriPhone);
  os_log_type_t v33 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_10(v33))
  {
    uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v34 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v15,  (os_log_type_t)&unk_42A000,  "#StartCallConfirmIntentStrategy Unrecognized parse type",  v34);
    OUTLINED_FUNCTION_0_2((uint64_t)v34);
  }

  OUTLINED_FUNCTION_15_46();
  v1[40] = 5;
  OUTLINED_FUNCTION_104_6();
  OUTLINED_FUNCTION_37_25((uint64_t)v18, v12[1]);
LABEL_29:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v38 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
  uint64_t v39 = OUTLINED_FUNCTION_11_18((uint64_t)v1);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v42 = static os_log_type_t.debug.getter(v40, v41);
  if (os_log_type_enabled(v40, v42))
  {
    uint64_t v43 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v44 = OUTLINED_FUNCTION_7_0(64LL);
    v55[0] = v44;
    *(_DWORD *)uint64_t v43 = 136315394;
    uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000024LL, 0x800000000034C150LL, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v43 + 4);
    *(_WORD *)(v43 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    unsigned __int8 v45 = OUTLINED_FUNCTION_71_11();
    if (v45 == 5)
    {
      unint64_t v46 = 0xE300000000000000LL;
      uint64_t v47 = 7104878LL;
    }

    else
    {
      uint64_t v47 = PhoneCallConfirmation.rawValue.getter(v45);
      unint64_t v46 = v48;
    }

    uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v46, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v43 + 14);
    OUTLINED_FUNCTION_17_30();
    OUTLINED_FUNCTION_62();
    _os_log_impl(&dword_0, v40, v42, "#StartCallConfirmIntentStrategy %s received response: %s", (uint8_t *)v43, 0x16u);
    OUTLINED_FUNCTION_77_3();
    OUTLINED_FUNCTION_0_2(v44);
    OUTLINED_FUNCTION_0_2(v43);
  }

  else
  {

    OUTLINED_FUNCTION_17_30();
  }

  uint64_t v49 = OUTLINED_FUNCTION_71_11();
  StartCallConfirmIntentFlowStrategy.cancelEmergencyCountdownTimer()();
  return static ActionForInput.cancel()(v51);
}

uint64_t StartCallConfirmIntentFlowStrategy.parseConfirmationResponse(input:confirmParameters:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a1;
  uint64_t v5 = OUTLINED_FUNCTION_82_0();
  void v4[5] = v5;
  void v4[6] = OUTLINED_FUNCTION_12_0(v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  v4[7] = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallConfirmIntentFlowStrategy.parseConfirmationResponse(input:confirmParameters:)()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_14_41();
  if (v1 >= 3u)
  {
    uint64_t v9 = (void *)v0[6];
    uint64_t v10 = v0[5];
    *uint64_t v9 = 0LL;
    v9[1] = 0LL;
    swift_storeEnumTagMultiPayload(v9, v10, 0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    OUTLINED_FUNCTION_4_4(v10, v11);
    PhoneError.logged()(v12);
    outlined destroy of MainFlow((uint64_t)v9, type metadata accessor for PhoneError);
    swift_willThrow(v13, v14, v15, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_23_3();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }

  else
  {
    uint64_t v2 = v0[7];
    uint64_t v3 = *(unsigned int *)*(&off_4052D8 + (char)v1);
    uint64_t v4 = type metadata accessor for ConfirmationResponse(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104LL))(v2, v3, v4);
    __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v4);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
    uint64_t v6 = IntentResolutionRecord.intent.getter(v5);
    uint64_t v7 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
    ConfirmIntentAnswer.init(confirmationResponse:intent:)(v2, v6, v7);
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_7_8();
    uint64_t v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  }

  return v8();
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmation(confirmParameters:)( uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = OUTLINED_FUNCTION_82_0();
  v3[6] = v4;
  v3[7] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmation(confirmParameters:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = (void *)IntentResolutionRecord.intent.getter(v1);
  uint64_t v3 = (void *)IntentResolutionRecord.intentResponse.getter(v1);
  char v4 = StartCallConfirmIntentFlowStrategy.shouldEnableFeatureOnResponseFramework(intent:intentResponse:)(v2, v3);

  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = IntentResolutionRecord.app.getter(v1);
  *(void *)(v0 + 80) = IntentResolutionRecord.intent.getter(v1);
  *(void *)(v0 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = IntentResolutionRecord.intentResponse.getter(v1);
  if ((v4 & 1) != 0)
  {
    uint64_t v5 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(**(void **)(v0 + 40) + 184LL));
    *(void *)(v0 + 96) = v5;
    OUTLINED_FUNCTION_55_13(v5);
    OUTLINED_FUNCTION_82_10();
    __asm { BR              X4 }
  }

  uint64_t v7 = (void *)swift_task_alloc(dword_43550C);
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  OUTLINED_FUNCTION_55_13(v7);
  OUTLINED_FUNCTION_82_10();
  return StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( v8,  v9,  v10,  v11);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(void);
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v0 + 104) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v5, v6, v7);
  }

  else
  {
    OUTLINED_FUNCTION_106_4();

    OUTLINED_FUNCTION_38_1();
    swift_task_dealloc(*(void *)(v0 + 56));
    uint64_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_24_1(v9);
  }

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(void);
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v0 + 120) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v5, v6, v7);
  }

  else
  {
    OUTLINED_FUNCTION_106_4();

    OUTLINED_FUNCTION_38_1();
    swift_task_dealloc(*(void *)(v0 + 56));
    uint64_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_24_1(v9);
  }

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);

  OUTLINED_FUNCTION_22();
  *(void *)(v0 + 16) = v1;
  swift_errorRetain(v1);
  char v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast(v3, v0 + 16, v4))
  {
    uint64_t v5 = *(void *)(v0 + 56);
    if (swift_getEnumCaseMultiPayload(v5, *(void *)(v0 + 48)) == 4)
    {
      uint64_t v6 = *(void *)(v0 + 64);
      swift_errorRelease(*(void *)(v0 + 104));
      outlined destroy of MainFlow(v5, type metadata accessor for PhoneError);
      uint64_t v7 = IntentResolutionRecord.app.getter(v6);
      *(void *)(v0 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
      uint64_t v8 = IntentResolutionRecord.intent.getter(v6);
      *(void *)(v0 + 136) = v8;
      uint64_t v9 = IntentResolutionRecord.intentResponse.getter(v6);
      *(void *)(v0 + 144) = v9;
      uint64_t v10 = (void *)swift_task_alloc(dword_43550C);
      *(void *)(v0 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
      *uint64_t v10 = v0;
      v10[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmation(confirmParameters:);
      return StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( *(void *)(v0 + 24),  v7,  v8,  v9);
    }

    outlined destroy of MainFlow(v5, type metadata accessor for PhoneError);
  }

  uint64_t v12 = OUTLINED_FUNCTION_170_0();
  swift_willThrow(v12, v13, v14, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_68_16();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 160) = v1;
  swift_task_dealloc(v3);
  if (!v1)
  {
    char v4 = *(void **)(v0 + 136);

    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_68_16();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = *(void **)(v0 + 136);

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_68_16();
  return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = *(void **)(v0 + 80);

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_68_16();
  return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v0 + 8));
}

Swift::Bool __swiftcall StartCallConfirmIntentFlowStrategy.isEmergencyConfirmationEnabledOnRF()()
{
  void (*v2)(uint64_t *__return_ptr);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  Swift::Bool v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void v41[5];
  void v42[3];
  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(uint64_t *__return_ptr))(*(void *)v0 + 112LL);
  v2(v42);
  uint64_t v3 = OUTLINED_FUNCTION_82(v42);
  OUTLINED_FUNCTION_64_12((uint64_t)v3, v4, v5, v6, v7, v8);
  uint64_t v9 = v41[3];
  uint64_t v10 = v41[4];
  OUTLINED_FUNCTION_82(v41);
  if ((dispatch thunk of DeviceState.isWatch.getter(v9, v10) & 1) != 0)
  {
    v2(&v38);
    LOBYTE(v9) = v40;
    OUTLINED_FUNCTION_49_0(&v38);
    uint64_t v11 = OUTLINED_FUNCTION_120_0();
    uint64_t v13 = v12(v11);
    uint64_t v1 = (os_log_s *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 248LL))(v13);
    OUTLINED_FUNCTION_38_1();
    __swift_destroy_boxed_opaque_existential_1(&v38);
    uint64_t v14 = __swift_destroy_boxed_opaque_existential_1(v41);
    OUTLINED_FUNCTION_13_28(v14, v15, v16, v17, v18, v19, v20, v21, v37, v38, v39);
    if ((v1 & 1) == 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v22 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v22, (uint64_t)static Logger.siriPhone);
      uint64_t v23 = OUTLINED_FUNCTION_41();
      if (!OUTLINED_FUNCTION_87(v23))
      {
        uint64_t v25 = 0;
        goto LABEL_15;
      }

      uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v24 = 0;
      uint64_t v25 = 0;
      goto LABEL_12;
    }
  }

  else
  {
    char v26 = __swift_destroy_boxed_opaque_existential_1(v41);
    OUTLINED_FUNCTION_13_28(v26, v27, v28, v29, v30, v31, v32, v33, v37, v38, v39);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v34 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v34, (uint64_t)static Logger.siriPhone);
  uint64_t v35 = OUTLINED_FUNCTION_41();
  if (!OUTLINED_FUNCTION_87(v35))
  {
    uint64_t v25 = 1;
    goto LABEL_15;
  }

  uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
  *(_WORD *)uint64_t v24 = 0;
  OUTLINED_FUNCTION_5( &dword_0,  v1,  (os_log_type_t)v9,  "#StartCallConfirmIntentFlowStrategy using RF for emergency confirmation",  v24);
  uint64_t v25 = 1;
LABEL_12:
  OUTLINED_FUNCTION_0_2((uint64_t)v24);
LABEL_15:

  return v25;
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[84] = v4;
  v5[83] = a4;
  v5[82] = a3;
  v5[81] = a2;
  v5[80] = a1;
  uint64_t v6 = type metadata accessor for ContactConfirmationModel(0LL);
  v5[85] = v6;
  v5[86] = OUTLINED_FUNCTION_12_0(v6);
  uint64_t v7 = type metadata accessor for YesNoConfirmationModel(0LL);
  v5[87] = OUTLINED_FUNCTION_12_0(v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v5[88] = OUTLINED_FUNCTION_12_0(v8);
  uint64_t v9 = type metadata accessor for Locale(0LL);
  v5[89] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[90] = v10;
  v5[91] = OUTLINED_FUNCTION_23(v10);
  uint64_t v11 = type metadata accessor for DialogPhase(0LL);
  v5[92] = OUTLINED_FUNCTION_12_0(v11);
  uint64_t v12 = type metadata accessor for OutputGenerationManifest(0LL);
  v5[93] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[94] = v13;
  v5[95] = OUTLINED_FUNCTION_23(v13);
  uint64_t v14 = OUTLINED_FUNCTION_82_0();
  v5[96] = v14;
  v5[97] = OUTLINED_FUNCTION_12_0(v14);
  uint64_t v15 = type metadata accessor for CATOption(0LL);
  v5[98] = OUTLINED_FUNCTION_12_0(v15);
  uint64_t v16 = type metadata accessor for NLContextUpdate(0LL);
  v5[99] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v5[100] = v17;
  unint64_t v18 = (*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[101] = swift_task_alloc(v18);
  v5[102] = swift_task_alloc(v18);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = OUTLINED_FUNCTION_15_1();
  uint64_t v2 = (os_log_s *)__swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v2);
  os_log_type_t v3 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v4 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  v2,  v3,  "#StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput: Building output using Response Framework..",  v4);
    OUTLINED_FUNCTION_0_2((uint64_t)v4);
  }

  uint64_t v5 = *(void **)(v0 + 664);
  uint64_t v6 = *(void **)(v0 + 656);

  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v6, v5);
  if ((v7 & 1) == 0)
  {
    uint64_t v39 = *(void **)(v0 + 808);
    uint64_t v40 = *(void *)(v0 + 760);
    uint64_t v41 = *(void *)(v0 + 736);
    os_log_type_t v42 = *(void **)(v0 + 664);
    specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
    uint64_t v43 = specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
    uint64_t v44 = NLContextUpdate.nluSystemDialogActs.setter(v43);
    static DialogPhase.confirmation.getter(v44);
    OutputGenerationManifest.init(dialogPhase:_:)( v41,  closure #1 in StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:),  0LL);
    id v45 = [v42 confirmationReason];
    if (v45 != (id)_INStartCallIntentConfirmationReasonHasRestrictedContacts) {
      goto LABEL_29;
    }
    outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(*(void **)(v0 + 664));
    if (!v46) {
      goto LABEL_29;
    }
    uint64_t v39 = (void *)v46;
    if ((unint64_t)v46 >> 62)
    {
      if (v46 >= 0) {
        v46 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v40 = _CocoaArrayWrapper.endIndex.getter(v46);
    }

    else
    {
      uint64_t v40 = *(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8LL));
    }

    OUTLINED_FUNCTION_62();
    if (!v40)
    {
LABEL_29:
      OUTLINED_FUNCTION_88_11();
      os_log_type_t v71 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v71))
      {
        uint64_t v72 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_47(v72);
        OUTLINED_FUNCTION_5_13( &dword_0,  v73,  v74,  "StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput return intentConfirmation dialog");
        OUTLINED_FUNCTION_0_2(v40);
      }

      uint64_t v75 = *(void *)(v0 + 672);
      uint64_t v76 = *(void **)(v0 + 656);

      uint64_t v77 = *(void **)(v75 + 24);
      id v78 = v76;
      specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
      *(void *)(v0 + 920) = v79;
      uint64_t v80 = (void *)swift_task_alloc(*(unsigned int *)(*(void *)(class metadata base offset for StartCallCATsSimple
                                                                   + *v77
                                                                   + 496)
                                                       + 4LL));
      *(void *)(v0 + 92__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v80;
      *uint64_t v80 = v0;
      v80[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
      OUTLINED_FUNCTION_68_10();
      __asm { BR              X1 }
    }

    uint64_t v47 = *(void **)(v0 + 664);
    uint64_t v48 = type metadata accessor for PhonePersonList.Builder();
    uint64_t v49 = OUTLINED_FUNCTION_8_2(v48, 24LL);
    uint64_t v50 = _swiftEmptyArrayStorage;
    *(void *)(v49 + 16) = _swiftEmptyArrayStorage;
    uint64_t v51 = v49 + 16;
    outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(v47);
    if (!v52)
    {
      uint64_t v99 = _swiftEmptyArrayStorage;
      goto LABEL_45;
    }

    uint64_t v53 = v52;
    v156[0] = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v52 >> 62)
    {
      if (v52 >= 0) {
        uint64_t v100 = v52 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v100 = v52;
      }
      swift_bridgeObjectRetain();
      uint64_t v54 = _CocoaArrayWrapper.endIndex.getter(v100);
      if (v54) {
        goto LABEL_18;
      }
    }

    else
    {
      uint64_t v54 = *(void *)((char *)&dword_10 + (v52 & 0xFFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain();
      if (v54)
      {
LABEL_18:
        uint64_t v145 = v49 + 16;
        uint64_t v146 = v49;
        uint64_t result = type metadata accessor for PhonePerson(0LL);
        if (v54 < 1)
        {
          __break(1u);
          goto LABEL_73;
        }

        uint64_t v55 = 0LL;
        unint64_t v148 = v53 & 0xC000000000000001LL;
        *(void *)os_log_type_t type = *(void *)(v0 + 720);
        uint64_t v152 = v53;
        do
        {
          if (v148) {
            id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v53);
          }
          else {
            id v56 = *(id *)(v53 + 8 * v55 + 32);
          }
          uint64_t v57 = v56;
          uint64_t v58 = *(void *)(v0 + 728);
          uint64_t v59 = *(void *)(v0 + 712);
          static Device.current.getter((void *)(v0 + 176));
          uint64_t v60 = *(void *)(v0 + 200);
          uint64_t v61 = *(void *)(v0 + 208);
          OUTLINED_FUNCTION_82((void *)(v0 + 176));
          dispatch thunk of DeviceState.siriLocale.getter(v60, v61);
          __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 176));
          OUTLINED_FUNCTION_74_12(v57);
          uint64_t v63 = v62;
          (*(void (**)(uint64_t, uint64_t))(*(void *)type + 8LL))(v58, v59);

          if (v63)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
            unint64_t v66 = *(void *)((char *)&dword_10 + (v156[0] & 0xFFFFFFFFFFFFFF8LL));
            unint64_t v65 = *(void *)((char *)&dword_18 + (v156[0] & 0xFFFFFFFFFFFFFF8LL));
            if (v66 >= v65 >> 1) {
              OUTLINED_FUNCTION_61_11(v66 + 1, v65);
            }
            uint64_t v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v63);
            specialized Array._endMutation()(v67, v68, v69, v70);
          }

          ++v55;
          uint64_t v53 = v152;
        }

        while (v54 != v55);
        OUTLINED_FUNCTION_39();
        uint64_t v99 = (void *)v156[0];
        uint64_t v50 = _swiftEmptyArrayStorage;
        uint64_t v51 = v145;
        uint64_t v49 = v146;
        goto LABEL_44;
      }
    }

    OUTLINED_FUNCTION_39();
    uint64_t v99 = _swiftEmptyArrayStorage;
LABEL_44:
    OUTLINED_FUNCTION_39();
LABEL_45:
    uint64_t v101 = *(void **)(v0 + 656);
    OUTLINED_FUNCTION_3_3(v51, v0 + 592);
    *(void *)(v49 + 16) = v99;
    swift_bridgeObjectRelease();
    uint64_t v102 = type metadata accessor for PhonePersonList();
    OUTLINED_FUNCTION_8_2(v102, 32LL);
    *(void *)(v0 + 840) = PhonePersonList.init(builder:)(v49);
    outlined bridged method (pb) of @objc INStartCallIntent.contacts.getter(v101);
    if (!v103)
    {
      uint64_t v105 = OUTLINED_FUNCTION_8_2(v48, 24LL);
      uint64_t v104 = 0LL;
      *(void *)(v105 + 16) = _swiftEmptyArrayStorage;
      goto LABEL_66;
    }

    uint64_t v104 = (uint64_t)specialized _ArrayProtocol.filter(_:)(v103, *(id *)(v0 + 664));
    uint64_t v105 = OUTLINED_FUNCTION_8_2(v48, 24LL);
    *(void *)(v105 + 16) = _swiftEmptyArrayStorage;
    v156[0] = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v104 >> 62)
    {
      if (v104 < 0) {
        uint64_t v121 = v104;
      }
      else {
        uint64_t v121 = v104 & 0xFFFFFFFFFFFFFF8LL;
      }
      OUTLINED_FUNCTION_151();
      uint64_t v106 = _CocoaArrayWrapper.endIndex.getter(v121);
      if (v106)
      {
LABEL_48:
        uint64_t v147 = v102;
        uint64_t result = type metadata accessor for PhonePerson(0LL);
        if (v106 >= 1)
        {
          uint64_t v107 = 0LL;
          unint64_t v149 = v104 & 0xC000000000000001LL;
          *(void *)os_log_type_t typea = *(void *)(v0 + 720);
          uint64_t v153 = v104;
          do
          {
            if (v149) {
              id v108 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v107, v104);
            }
            else {
              id v108 = *(id *)(v104 + 8 * v107 + 32);
            }
            uint64_t v109 = v108;
            static Device.current.getter((void *)(v0 + 496));
            uint64_t v110 = *(void *)(v0 + 520);
            uint64_t v111 = *(void *)(v0 + 528);
            __swift_project_boxed_opaque_existential_1((void *)(v0 + 496), v110);
            dispatch thunk of DeviceState.siriLocale.getter(v110, v111);
            __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 496));
            OUTLINED_FUNCTION_74_12(v109);
            uint64_t v113 = v112;
            OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)typea + 8LL));

            if (v113)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v114);
              unint64_t v116 = *(void *)((char *)&dword_10 + (v156[0] & 0xFFFFFFFFFFFFFF8LL));
              unint64_t v115 = *(void *)((char *)&dword_18 + (v156[0] & 0xFFFFFFFFFFFFFF8LL));
              if (v116 >= v115 >> 1) {
                OUTLINED_FUNCTION_61_11(v116 + 1, v115);
              }
              uint64_t v117 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v116, v113);
              specialized Array._endMutation()(v117, v118, v119, v120);
            }

            ++v107;
            uint64_t v104 = v153;
          }

          while (v106 != v107);
          OUTLINED_FUNCTION_34_0();
          uint64_t v50 = (void *)v156[0];
          uint64_t v102 = v147;
          goto LABEL_65;
        }

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  OUTLINED_FUNCTION_27_7();
  os_log_type_t v3 = *(void *)(v2 + 824);
  *uint64_t v4 = *v1;
  *(void *)(v2 + 83__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_66_13();
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_10_51();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t **v3;
  uint64_t v1 = v0[99];
  uint64_t v2 = v0[88];
  OUTLINED_FUNCTION_142(v2, v0[101], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[100] + 16));
  __swift_storeEnumTagSinglePayload(v2, 0LL, 1LL, v1);
  OutputGenerationManifest.nlContextUpdate.setter(v2);
  os_log_type_t v3 = (uint64_t **)swift_task_alloc(dword_43551C);
  v0[111] = (uint64_t)v3;
  *os_log_type_t v3 = v0;
  v3[1] = (uint64_t *)StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  return StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(v0[87]);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  OUTLINED_FUNCTION_27_7();
  os_log_type_t v3 = *(void *)(v2 + 888);
  *uint64_t v4 = *v1;
  *(void *)(v2 + 896) = v0;
  swift_task_dealloc(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_27_7();
  uint64_t v1 = (void *)(v0 + 376);
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 912));
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v1 = *(void *)(v0 + 848);
  uint64_t v2 = *(void *)(v0 + 840);
  uint64_t v11 = *(void *)(v0 + 808);
  os_log_type_t v3 = *(void *)(v0 + 800);
  uint64_t v4 = *(void *)(v0 + 760);
  uint64_t v5 = *(void *)(v0 + 752);
  uint64_t v6 = *(void *)(v0 + 744);
  char v7 = *(void *)(v0 + 696);
  uint64_t v8 = *(void *)(v0 + 688);

  swift_release(v2);
  swift_release(v1);
  outlined destroy of MainFlow(v8, type metadata accessor for ContactConfirmationModel);
  outlined destroy of MainFlow(v7, type metadata accessor for YesNoConfirmationModel);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  OUTLINED_FUNCTION_37_25(v11, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 336));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 296));
  OUTLINED_FUNCTION_10_51();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  uint64_t v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[117] = v1;
  swift_task_dealloc(v4);
  swift_release(v2[115]);
  if (!v1) {
    v2[118] = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v1 = (void *)v0[118];
  uint64_t v2 = v0[99];
  os_log_type_t v3 = v0[88];
  uint64_t v4 = v0[84];
  (*(void (**)(uint64_t, void, uint64_t))(v0[100] + 16LL))(v3, v0[101], v2);
  __swift_storeEnumTagSinglePayload(v3, 0LL, 1LL, v2);
  uint64_t v5 = OutputGenerationManifest.nlContextUpdate.setter(v3);
  (*(void (**)(uint64_t))(*(void *)v4 + 112LL))(v5);
  uint64_t v6 = v0[60];
  char v7 = v0[61];
  __swift_project_boxed_opaque_existential_1(v0 + 57, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 136))(v6, v7);
  OUTLINED_FUNCTION_49_0(v0 + 17);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v9 = OUTLINED_FUNCTION_8_2(v8, 40LL);
  *(_OWORD *)(v9 + 16) = xmmword_31FE60;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  id v22 = v9;
  specialized Array._endMutation()(v9, v10, v11, v12);
  v0[119] = v22;
  uint64_t v13 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  uint64_t v14 = v1;
  uint64_t v15 = (void *)swift_task_alloc(v13);
  v0[120] = v15;
  *uint64_t v15 = v0;
  v15[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_82_10();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v16,  v17,  v18,  v19,  v20);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 960));
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_48_14(*(void **)(v0 + 944));
  OUTLINED_FUNCTION_37_25(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_75_13();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 136));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 456));
  OUTLINED_FUNCTION_10_51();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  os_log_type_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v3);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_66_13();
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_6_60();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_118_3();
  return OUTLINED_FUNCTION_2_38(v1);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = v0[100];
  uint64_t v2 = v0[95];
  os_log_type_t v3 = v0[94];
  swift_release(v0[105]);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_11_20(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_6_60();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_23_3();
  uint64_t v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_118_3();
  return OUTLINED_FUNCTION_2_38(v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_48_14(*(void **)(v0 + 872));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_37_25(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_75_13();
  OUTLINED_FUNCTION_6_60();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_23_3();
  os_log_type_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_118_3();
  return OUTLINED_FUNCTION_2_38(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = *(void *)(v0 + 800);
  OUTLINED_FUNCTION_54_9(*(void *)(v0 + 752));
  OUTLINED_FUNCTION_117_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_6_60();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_23_3();
  uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_118_3();
  return OUTLINED_FUNCTION_2_38(v2);
}

LABEL_73:
        __break(1u);
        return result;
      }
    }

    else
    {
      uint64_t v106 = *(void *)((char *)&dword_10 + (v104 & 0xFFFFFFFFFFFFF8LL));
      OUTLINED_FUNCTION_151();
      if (v106) {
        goto LABEL_48;
      }
    }

    OUTLINED_FUNCTION_34_0();
LABEL_65:
    OUTLINED_FUNCTION_34_0();
LABEL_66:
    OUTLINED_FUNCTION_3_3(v105 + 16, v0 + 568);
    *(void *)(v105 + 16) = v50;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_2(v102, 32LL);
    *(void *)(v0 + 84__swift_destroy_boxed_opaque_existential_1(v0 + 8) = PhonePersonList.init(builder:)(v105);
    if (v104)
    {
      uint64_t v122 = (void *)(v0 + 536);
      id v123 = *(id *)(v0 + 664);
      OUTLINED_FUNCTION_151();
      id v124 = v123;
      OUTLINED_FUNCTION_88_11();
      os_log_type_t v125 = OUTLINED_FUNCTION_6_0();
      BOOL v126 = OUTLINED_FUNCTION_27_1(v125);
      uint64_t v127 = *(void **)(v0 + 664);
      if (v126)
      {
        uint64_t v128 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v154 = OUTLINED_FUNCTION_7_0(64LL);
        v156[0] = v154;
        *(_DWORD *)uint64_t v128 = 136315394;
        outlined bridged method (pb) of @objc INStartCallIntentResponse.restrictedContacts.getter(v127);
        *(void *)(v0 + 63__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v129;
        uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]?);
        uint64_t v131 = String.init<A>(describing:)(v0 + 632, v130);
        *(void *)(v0 + 616) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v131, v132, v156);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 616, v0 + 624, v128 + 4);
        swift_bridgeObjectRelease();

        *(_WORD *)(v128 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v133 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
        uint64_t v134 = swift_bridgeObjectRetain();
        uint64_t v135 = Array.description.getter(v134, v133);
        unint64_t v137 = v136;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 624) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v137, v156);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632, v128 + 14);
        OUTLINED_FUNCTION_23_5();
        OUTLINED_FUNCTION_7_4(v104);
        _os_log_impl( &dword_0,  (os_log_t)v123,  (os_log_type_t)v105,  "Some contacts are restricted: %s. User needs to confirm by Yes/No the updated contacts: %s",  (uint8_t *)v128,  0x16u);
        OUTLINED_FUNCTION_77_3();
        OUTLINED_FUNCTION_0_2(v154);
        uint64_t v138 = v128;
        uint64_t v122 = (void *)(v0 + 536);
        OUTLINED_FUNCTION_0_2(v138);
      }

      else
      {

        OUTLINED_FUNCTION_7_4(v104);
      }

      *(void *)(v0 + 560) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
      *(void *)(v0 + 536) = v104;
      NSObject.update(with:at:)((uint64_t)v122, 0x73746361746E6F63LL, 0xE800000000000000LL);
      __swift_destroy_boxed_opaque_existential_1(v122);
    }

    uint64_t v139 = *(void **)(*(void *)(v0 + 672) + 24LL);
    id v140 = *(id *)(v0 + 656);
    specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
    *(void *)(v0 + 856) = v141;
    uint64_t v142 = *(unsigned int *)(*(void *)(class metadata base offset for StartCallCATsSimple + *v139 + 544) + 4LL);
    swift_retain();
    swift_retain();
    uint64_t v143 = (void *)swift_task_alloc(v142);
    *(void *)(v0 + 864) = v143;
    *uint64_t v143 = v0;
    v143[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
    OUTLINED_FUNCTION_68_10();
    __asm { BR              X3 }
  }

  uint64_t v8 = (*(uint64_t (**)(void))(**(void **)(v0 + 672) + 176LL))();
  uint64_t v9 = OUTLINED_FUNCTION_88_11();
  uint64_t v11 = (void *)v9;
  if ((v8 & 1) == 0)
  {
    os_log_type_t v82 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_27_1(v82))
    {
      uint64_t v83 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v83);
      OUTLINED_FUNCTION_5_13( &dword_0,  v84,  v85,  "#StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput: the emergency confirmation dialog hasn't be en migrated to Response Framework yet!");
      OUTLINED_FUNCTION_0_2(v8);
    }

    uint64_t v86 = *(void **)(v0 + 776);
    uint64_t v87 = *(void *)(v0 + 768);

    *uint64_t v86 = 0xD000000000000032LL;
    v86[1] = 0x800000000034C180LL;
    v86[2] = 0xD000000000000044LL;
    v86[3] = 0x800000000034C1C0LL;
    v86[4] = 0xD00000000000003BLL;
    v86[5] = 0x800000000034C210LL;
    v86[6] = 121LL;
    swift_storeEnumTagMultiPayload(v86, v87, 4LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    OUTLINED_FUNCTION_4_4(v87, v88);
    PhoneError.logged()(v89);
    outlined destroy of MainFlow((uint64_t)v86, type metadata accessor for PhoneError);
    swift_willThrow(v90, v91, v92, v93, v94, v95, v96, v97);
    swift_task_dealloc(*(void *)(v0 + 816));
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_29_17();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_68_10();
    __asm { BR              X0 }
  }

  os_log_type_t v12 = static os_log_type_t.debug.getter(v9, v10);
  if (OUTLINED_FUNCTION_27_1(v12))
  {
    uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v13);
    OUTLINED_FUNCTION_5_13( &dword_0,  v14,  v15,  "#StartCallConfirmIntentFlowStrategy makePromptForConfirmationOutput: Using the RF2.0 emergency countdown with nlContextUpdate");
    OUTLINED_FUNCTION_0_2(v8);
  }

  uint64_t v16 = *(void *)(v0 + 672);
  uint64_t v17 = *(void **)(v0 + 664);
  unint64_t v18 = *(void **)(v0 + 656);
  uint64_t v19 = *(void *)(v0 + 648);

  specialized static PhoneCallNLContextProvider.makeGenericConfirmationNLv3Context()();
  uint64_t v20 = specialized static PhoneCallNLContextProvider.makeSDAForConfirmation()();
  NLContextUpdate.nluSystemDialogActs.setter(v20);
  uint64_t v21 = *(uint64_t (**)(void))(*(void *)v16 + 112LL);
  swift_retain();
  id v155 = v18;
  id v22 = v17;
  uint64_t v23 = v21();
  ((void (*)(uint64_t))v21)(v23);
  uint64_t v25 = *(void *)(v0 + 240);
  uint64_t v24 = *(void *)(v0 + 248);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 216), v25);
  (*(void (**)(uint64_t, uint64_t))(v24 + 136))(v25, v24);
  uint64_t v26 = *(void *)(v0 + 440);
  uint64_t v27 = *(void *)(v0 + 448);
  uint64_t v28 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 416), v26);
  *(void *)(v0 + 104) = v26;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(v27 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 80));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16LL))( boxed_opaque_existential_1,  v28,  v26);
  type metadata accessor for StartCallCATsSimple(0LL);
  OUTLINED_FUNCTION_100_5();
  uint64_t v30 = OUTLINED_FUNCTION_110_0();
  type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  OUTLINED_FUNCTION_100_5();
  uint64_t v31 = OUTLINED_FUNCTION_110_0();
  *(void *)(v0 + 16) = v19;
  *(void *)(v0 + 24) = v155;
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v22;
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 256), v0 + 40);
  *(void *)(v0 + 120) = v30;
  *(void *)(v0 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v31;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 416));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 216));
  uint64_t v32 = (void *)swift_task_alloc(dword_43FEBC);
  *(void *)(v0 + 824) = v32;
  *uint64_t v32 = v0;
  v32[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_68_10();
  return EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( v33,  v34,  v35,  v36,  v37);
}

      OUTLINED_FUNCTION_17_40(v112, (v111 & 0xC000000000000001LL) == 0);
      if ((v111 & 0xC000000000000001LL) != 0) {
        uint64_t v113 = OUTLINED_FUNCTION_38_3();
      }
      else {
        uint64_t v113 = (uint64_t)OUTLINED_FUNCTION_31_24();
      }
      uint64_t v114 = (id)v113;
      OUTLINED_FUNCTION_62();
LABEL_85:
      uint64_t v118 = (void *)v140[5];
      uint64_t v119 = swift_retain();
      uint64_t v120 = OUTLINED_FUNCTION_42_20(v119, "preferredCallProvider");
      uint64_t v134 = v23;
      if (!v120)
      {
        id v123 = 0xE700000000000000LL;
        OUTLINED_FUNCTION_74_24();
        goto LABEL_96;
      }

      uint64_t v121 = INPreferredCallProviderGetBackingType(v120);
      switch((_DWORD)v121)
      {
        case 4:
          uint64_t v122 = @"THIRD_PARTY_PROVIDER";
          break;
        case 3:
          uint64_t v122 = @"FACETIME_PROVIDER";
          break;
        case 2:
          uint64_t v122 = @"TELEPHONY_PROVIDER";
          break;
        default:
          uint64_t v122 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v121));
          goto LABEL_95;
      }

      id v124 = v122;
LABEL_95:
      uint64_t v23 = OUTLINED_FUNCTION_149_9((uint64_t)v122);
      id v123 = v125;

LABEL_96:
      BOOL v126 = (uint64_t)v135;
      OUTLINED_FUNCTION_1_34(v23, v123);
      uint64_t v127 = OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_94_16(v127);
      OUTLINED_FUNCTION_18_22();
      specialized INPersonContainingIntent.isFirstContactRelatedOrMyself.getter(a22);
      uint64_t v129 = v128;
      OUTLINED_FUNCTION_60_6();
      OUTLINED_FUNCTION_34_40(v143);
      __swift_destroy_boxed_opaque_existential_1(v143);
      OUTLINED_FUNCTION_70_23(v114, v129 & 1, v24);
      uint64_t v131 = v130;
      OUTLINED_FUNCTION_120_13();
      unint64_t v132 = v134;
      OUTLINED_FUNCTION_98_17( v134,  v126,  v131,  v136,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(class metadata base offset for StartCallCATs + *v118 + 1792));
      OUTLINED_FUNCTION_31_1(v132);
      swift_release(v131);

      OUTLINED_FUNCTION_164_0();
      outlined destroy of PhoneCallNLIntent?(v126, &demangling cache variable for type metadata for SpeakableString?);
      unint64_t v103 = OUTLINED_FUNCTION_150_9();
LABEL_97:
      outlined destroy of PhoneCallNLIntent?(v103, v102);
LABEL_98:

      OUTLINED_FUNCTION_7_5();
      return;
    case 4uLL:
      uint64_t v57 = OUTLINED_FUNCTION_131_12();
      if (!v57) {
        goto LABEL_64;
      }
      uint64_t v58 = v57;
      uint64_t v142 = _swiftEmptyArrayStorage;
      OUTLINED_FUNCTION_71();
      if (v60)
      {
        OUTLINED_FUNCTION_48_0();
        uint64_t v61 = OUTLINED_FUNCTION_61_1();
        if (!v61) {
          goto LABEL_63;
        }
      }

      else
      {
        uint64_t v61 = *(void *)(v59 + 16);
        OUTLINED_FUNCTION_48_0();
        if (!v61) {
          goto LABEL_63;
        }
      }

      v133[0] = a21;
      OUTLINED_FUNCTION_18_22();
      if (v61 < 1)
      {
        __break(1u);
LABEL_78:
        OUTLINED_FUNCTION_29_7();
        goto LABEL_52;
      }

      for (uint64_t i = 0LL; i != v61; ++i)
      {
        if ((v58 & 0xC000000000000001LL) != 0) {
          uint64_t v63 = OUTLINED_FUNCTION_224_2(i);
        }
        else {
          uint64_t v63 = (uint64_t)OUTLINED_FUNCTION_27_10(v58 + 8 * i);
        }
        uint64_t v64 = (void *)v63;
        OUTLINED_FUNCTION_60_6();
        __swift_project_boxed_opaque_existential_1(v143, v144);
        OUTLINED_FUNCTION_51_6();
        __swift_destroy_boxed_opaque_existential_1(v143);
        OUTLINED_FUNCTION_70_23(v64, 0, (uint64_t)v40);
        unint64_t v66 = v65;
        OUTLINED_FUNCTION_15_0(v137);

        if (v66)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
          OUTLINED_FUNCTION_137_9();
          if (v69) {
            OUTLINED_FUNCTION_3_25((uint64_t)v64 + 1, v68);
          }
          uint64_t v70 = OUTLINED_FUNCTION_100_12();
          specialized Array._endMutation()(v70, v71, v72, v73);
        }
      }

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  os_log_type_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 864LL);
  v3[109] = a1;
  v3[110] = v1;
  swift_task_dealloc(v4);
  uint64_t v5 = v3[106];
  swift_release(v3[105]);
  swift_release(v5);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v23 = (void *)v22[109];
  uint64_t v24 = (void *)v22[86];
  uint64_t v25 = (int *)v22[85];
  uint64_t v26 = v22[84];
  outlined init with copy of YesNoConfirmationModel( v22[87],  (uint64_t)v24 + v25[6],  type metadata accessor for YesNoConfirmationModel);
  *uint64_t v24 = 0xD000000000000013LL;
  v24[1] = 0x8000000000346BC0LL;
  void v24[2] = 0LL;
  v24[3] = 0LL;
  uint64_t v27 = (char *)v24 + v25[7];
  v27[64] = 0;
  *((_OWORD *)v27 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *((_OWORD *)v27 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = 0u;
  *(_OWORD *)uint64_t v27 = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  uint64_t v28 = (void *)((char *)v24 + v25[8]);
  *uint64_t v28 = 0LL;
  v28[1] = 0LL;
  (*(void (**)(void))(*(void *)v26 + 112LL))();
  uint64_t v29 = v22[40];
  uint64_t v30 = v22[41];
  __swift_project_boxed_opaque_existential_1(v22 + 37, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 136))(v29, v30);
  uint64_t v31 = v22[45];
  uint64_t v32 = v22[46];
  OUTLINED_FUNCTION_82(v22 + 42);
  uint64_t v33 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v22[50] = v33;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  v22[51] = v34;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22 + 47);
  outlined init with copy of YesNoConfirmationModel( (uint64_t)v24,  (uint64_t)boxed_opaque_existential_1,  type metadata accessor for ContactConfirmationModel);
  swift_storeEnumTagMultiPayload(boxed_opaque_existential_1, v33, 2LL);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v37 = OUTLINED_FUNCTION_8_2(v36, 40LL);
  *(_OWORD *)(v37 + 16) = xmmword_31FE60;
  *(void *)(v37 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v23;
  uint64_t v48 = v37;
  specialized Array._endMutation()(v37, v38, v39, v40);
  v22[113] = v48;
  uint64_t v41 = *(void *)(v32 + 8);
  uint64_t v42 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
  id v43 = v23;
  uint64_t v44 = (void *)swift_task_alloc(v42);
  v22[114] = v44;
  *uint64_t v44 = v22;
  v44[1] = StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v22[80],  v22 + 47,  v48,  v22[95],  v31,  v41,  v45,  v46,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t closure #1 in StartCallConfirmIntentFlowStrategy.makePromptForConfirmationOutput(app:intent:intentResponse:)()
{
  return OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
}

uint64_t StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[31] = a4;
  _BYTE v5[32] = v4;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v5[33] = v6;
  v5[34] = OUTLINED_FUNCTION_12_0(v6);
  uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
  v5[35] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[36] = v8;
  v5[37] = OUTLINED_FUNCTION_23(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v3, (uint64_t)static Logger.siriPhone);
  os_log_type_t v4 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v5);
    OUTLINED_FUNCTION_5_13( &dword_0,  v6,  v7,  "#StartCallConfirmIntentFlowStrategy makeLegacyPromptForConfirmationOutput: Building the legacy output..");
    OUTLINED_FUNCTION_0_2(v1);
  }

  uint64_t v9 = *(void *)(v2 + 248);
  uint64_t v8 = *(void *)(v2 + 256);
  __int128 v21 = *(_OWORD *)(v2 + 232);

  uint64_t v10 = OUTLINED_FUNCTION_111_5();
  *(void *)(v2 + 304) = v10;
  *(void *)(v10 + 16) = v8;
  *(_OWORD *)(v10 + 24) = v21;
  *(void *)(v10 + 40) = v9;
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v2 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
  *uint64_t v11 = v2;
  v11[1] = StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_60_15();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v12, v13, v14, v15, v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 320) = v1;
  swift_task_dealloc(v3);
  if (!v1) {
    swift_task_dealloc(*(void *)(v0 + 304));
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v3 = OUTLINED_FUNCTION_111_5();
  *(void *)(v0 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  os_log_type_t v4 = *(_OWORD *)(v0 + 232);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  uint64_t v5 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 336) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v5 = v0;
  v5[1] = StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 216,  0LL,  0LL,  0xD000000000000041LL,  0x800000000034C2C0LL,  partial apply for closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:),  v3,  v6);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  OUTLINED_FUNCTION_27_7();
  uint64_t v3 = *(void *)(v2 + 336);
  *os_log_type_t v4 = *v1;
  *(void *)(v2 + 344) = v0;
  swift_task_dealloc(v3);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  void *v4;
  uint64_t v1 = *(void *)(v0 + 256);
  *(void *)(v0 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(v0 + 216);
  uint64_t v2 = OUTLINED_FUNCTION_111_5();
  *(void *)(v0 + 360) = v2;
  uint64_t v3 = *(_OWORD *)(v0 + 240);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  os_log_type_t v4 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 36__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  *os_log_type_t v4 = v0;
  v4[1] = StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:);
  OUTLINED_FUNCTION_60_15();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 368));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::Bool v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v10 = *(void *)(v0 + 296);
  uint64_t v13 = *(void *)(v0 + 288);
  uint64_t v14 = *(void *)(v0 + 280);
  uint64_t v11 = *(void *)(v0 + 272);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void (**)(void))(**(void **)(v0 + 256) + 112LL);
  v2();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v3 = OUTLINED_FUNCTION_11_26();
  ((void (*)(uint64_t))v2)(v3);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_49_0((void *)(v0 + 136));
  os_log_type_t v4 = OUTLINED_FUNCTION_120_0();
  uint64_t v5 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v4);
  uint64_t v6 = TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(1);
  uint64_t v7 = type metadata accessor for AceOutput(0LL);
  *(_OWORD *)(v0 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(void *)(v0 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
  *(_OWORD *)(v0 + 176) = 0u;
  v1[3] = v7;
  v1[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v1);
  static AceOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v10,  v0 + 56,  v5 & 1,  v12,  v6,  0LL,  v11,  _swiftEmptyArrayStorage,  v0 + 176);
  swift_bridgeObjectRelease();
  outlined destroy of CommonDirectAction?(v0 + 176, &demangling cache variable for type metadata for FlowActivity?);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
  outlined destroy of CommonDirectAction?(v11, &demangling cache variable for type metadata for NLContextUpdate?);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v14);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 136));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 96));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_23_3();
  uint64_t v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v8();
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 304));
  OUTLINED_FUNCTION_107_5();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_54_9(*(void *)(v0 + 288));
  OUTLINED_FUNCTION_107_5();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v13 = dispatch thunk of BaseRCHFlowDelegate.makeDialogTemplating()(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v9);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = swift_allocObject(&unk_4052C0, v15 + v11, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))( v16 + v15,  (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v9);
  dispatch thunk of DucTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:)( a3,  a4,  a5,  partial apply for closure #1 in closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:),  v16);
  swift_release(v16);
  return swift_release(v13);
}

uint64_t closure #1 in closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of CommonDirectAction?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    uint64_t v13 = *v8;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(throwing:)(&v13, v9);
  }

  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(returning:)(v5, v11);
  }

uint64_t closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v13 = dispatch thunk of BaseRCHFlowDelegate.makeAceViewProvider()(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v9);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = swift_allocObject(&unk_405298, v15 + v11, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))( v16 + v15,  (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v9);
  dispatch thunk of DefaultAceViewProvider.makeAceViewsForConfirmIntentWithUser(app:intent:intentResponse:_:)( a3,  a4,  a5,  partial apply for closure #1 in closure #1 in ContactUnsetRelationshipFlowStrategy.makeMeCardNotFoundResponse(requestedRelationship:resolveRecord:),  v16);
  swift_release(v16);
  return swift_release(v13);
}

uint64_t closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin();
  uint64_t v11 = dispatch thunk of BaseRCHFlowDelegate.makeNLContextProvider()(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))( (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v7);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 16) & ~v12;
  uint64_t v14 = swift_allocObject(&unk_405270, v13 + v9, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))( v14 + v13,  (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v7);
  dispatch thunk of DefaultNLContextProvider.makeContextForConfirmIntent(intent:confirmIntentResponse:_:)( a3,  a4,  partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:),  v14);
  swift_release(v14);
  return swift_release(v11);
}

uint64_t closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of CommonDirectAction?( a1,  (uint64_t)v3,  &demangling cache variable for type metadata for NLContextUpdate?);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
  return CheckedContinuation.resume(returning:)(v3, v4);
}

uint64_t StartCallConfirmIntentFlowStrategy.shouldEnableFeatureOnResponseFramework(intent:intentResponse:)( void *a1, void *a2)
{
  if ((v3 & 1) != 0) {
    return (*(uint64_t (**)(void))(*(void *)v2 + 176LL))();
  }
  else {
    return 1LL;
  }
}

void StartCallConfirmIntentFlowStrategy.cancelEmergencyCountdownTimer()()
{
  uint64_t v1 = type metadata accessor for EmergencyCountdownModel(0LL);
  (*(void (**)(void *__return_ptr))(*(void *)v0 + 112LL))(v31);
  uint64_t v2 = OUTLINED_FUNCTION_82(v31);
  OUTLINED_FUNCTION_64_12((uint64_t)v2, v3, v4, v5, v6, v7);
  id v8 = specialized UpdateResponseCommand<>.asUpdateCommand(for:)( v1,  (uint64_t)&protocol witness table for EmergencyCountdownModel);
  uint64_t v9 = v29;
  uint64_t v10 = v30;
  unsigned __int8 v11 = __swift_project_boxed_opaque_existential_1(v28, v29);
  uint64_t v12 = v9;
  os_log_type_t v13 = v11;
  AceServiceInvokerAsync.submitAndForget(_:)(v8, v12, v10);

  uint64_t v14 = __swift_destroy_boxed_opaque_existential_1(v28);
  OUTLINED_FUNCTION_13_28(v14, v15, v16, v17, v18, v19, v20, v21, v25, v26, v27);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v22 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v22, (uint64_t)static Logger.siriPhone);
  os_log_type_t v23 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v23))
  {
    uint64_t v24 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v24);
    OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)v8,  v13,  "#StartCallConfirmIntentFlowStrategy sent update command to cancel countdown timer",  v10);
    OUTLINED_FUNCTION_0_2((uint64_t)v10);
  }
}

uint64_t StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(uint64_t a1)
{
  *(void *)(v2 + 1376) = v1;
  *(void *)(v2 + 136__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

uint64_t StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  uint64_t v1 = v0[172];
  v0[173] = static SiriPhoneActionFactory.makeConfirmAndRejectActions()();
  v0[174] = v2;
  OUTLINED_FUNCTION_11_18(v1);
  swift_asyncLet_begin( v0 + 82,  0LL,  &type metadata for String,  &async function pointer to partial apply for implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  v1);
  OUTLINED_FUNCTION_11_18(v1);
  swift_asyncLet_begin( v0 + 2,  0LL,  &type metadata for String,  &async function pointer to partial apply for implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  v1);
  OUTLINED_FUNCTION_82_10();
  return swift_asyncLet_get_throwing(v3, v4, v5, v6);
}

{
  uint64_t v0;
  void *v1;
  v1[175] = v0;
  if (v0) {
    return swift_asyncLet_finish( v1 + 2,  v1 + 167,  StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  v1 + 162);
  }
  v1[176] = v1[169];
  v1[177] = v1[170];
  swift_bridgeObjectRetain();
  return swift_asyncLet_get_throwing( v1 + 2,  v1 + 167,  StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  v1 + 162);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 1424) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = v0[177];
  uint64_t v2 = v0[176];
  uint64_t v3 = (void *)v0[174];
  uint64_t v4 = (void *)v0[173];
  uint64_t v5 = v0[171];
  uint64_t v6 = v0[167];
  uint64_t v7 = v0[168];
  swift_bridgeObjectRetain();
  YesNoConfirmationModel.init(yesText:yesAction:noText:noAction:)( v2,  v1,  v4,  v6,  v7,  (uint64_t)v3,  v5);
  return swift_asyncLet_finish( v0 + 2,  v0 + 167,  StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  v0 + 162);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  OUTLINED_FUNCTION_34_2();
  OUTLINED_FUNCTION_69();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v1 = *(void **)(v0 + 1392);
  uint64_t v2 = *(void *)(v0 + 1376);

  swift_release_n(v2, 3LL);
  uint64_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_16_1(v3);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  OUTLINED_FUNCTION_34_2();
  OUTLINED_FUNCTION_69();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  void *v0;
  uint64_t v1;
  OUTLINED_FUNCTION_86();

  OUTLINED_FUNCTION_98_6();
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v1 + 8));
}

{
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  OUTLINED_FUNCTION_34_2();
  OUTLINED_FUNCTION_69();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
}

{
  void *v0;
  uint64_t v1;
  OUTLINED_FUNCTION_86();

  OUTLINED_FUNCTION_98_6();
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()( uint64_t a1, uint64_t a2)
{
  void v2[2] = a1;
  void v2[3] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  0LL,  0LL);
}

uint64_t implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void **)(v0[3] + 32LL);
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_29_1(v1, v4, v5, v3);
  uint64_t v6 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + *v2 + 40);
  uint64_t v9 = (uint64_t (*)(void))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  v0[5] = v7;
  *uint64_t v7 = v0;
  v7[1] = implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel();
  return v9(v0[4]);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[6] = v1;
  swift_task_dealloc(v4);
  uint64_t v5 = v2[4];
  if (!v1) {
    v2[7] = v0;
  }
  outlined destroy of CommonDirectAction?(v5, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v6, v7, v8);
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 32));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()( uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter(a1);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_38_1();
  uint64_t *v2 = v3;
  v2[1] = v5;
  OUTLINED_FUNCTION_7_8();
  uint64_t v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_12_4(v6);
}

uint64_t implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch( implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  0LL,  0LL);
}

uint64_t implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + **(void **)(*(void *)(v0 + 24) + 32LL)
                                                  + 56));
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  void *v1 = v0;
  v1[1] = implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel();
  return OUTLINED_FUNCTION_3_0(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v4);
  swift_task_dealloc(v5);
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v7, v8, v9);
}

uint64_t implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()( uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter(a1);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_38_1();
  uint64_t *v2 = v3;
  v2[1] = v5;
  uint64_t v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return v6();
}

void *StartCallConfirmIntentFlowStrategy.deinit()
{
  return v0;
}

uint64_t StartCallConfirmIntentFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 41LL, 7LL);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.parseConfirmationResponse(input:confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = *(int **)(**(void **)v3 + 160LL);
  unsigned __int8 v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v11(a1, a2, a3);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makePromptForConfirmation(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(**(void **)v2 + 168LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v9(a1, a2);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeRepromptOnEmptyParse(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to ConfirmIntentFlowStrategyAsync.makeRepromptOnEmptyParse(confirmParameters:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *id v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ConfirmIntentFlowStrategyAsync.makeRepromptOnEmptyParse(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeRepromptOnLowConfidence(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to ConfirmIntentFlowStrategyAsync.makeRepromptOnLowConfidence(confirmParameters:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *id v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ConfirmIntentFlowStrategyAsync.makeRepromptOnLowConfidence(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeConfirmationRejectedResponse(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to ConfirmIntentFlowStrategyAsync.makeConfirmationRejectedResponse(confirmParameters:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *id v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ConfirmIntentFlowStrategyAsync.makeConfirmationRejectedResponse(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeFlowCancelledResponse(confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to ConfirmIntentFlowStrategyAsync.makeFlowCancelledResponse(confirmParameters:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *id v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return ConfirmIntentFlowStrategyAsync.makeFlowCancelledResponse(confirmParameters:)(a1, a2, v9, a4);
}

uint64_t protocol witness for ConfirmIntentFlowStrategyAsync.makeErrorResponse(error:confirmParameters:) in conformance StartCallConfirmIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ConfirmIntentFlowStrategyAsync.makeErrorResponse(error:confirmParameters:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StartCallConfirmIntentFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ConfirmIntentFlowStrategyAsync.makeErrorResponse(error:confirmParameters:)(a1, a2, a3, v11, a5);
}

void outlined init with copy of YesNoConfirmationModel( uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3(0LL);
  OUTLINED_FUNCTION_57(v3);
  OUTLINED_FUNCTION_2();
}

uint64_t outlined destroy of EmergencyCountdownOutputBuilder(uint64_t a1)
{
  return a1;
}

uint64_t sub_17F9B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_14_41();
  *a1 = result;
  return result;
}

void sub_17F9D8(char *a1)
{
}

uint64_t type metadata accessor for StartCallConfirmIntentFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin34StartCallConfirmIntentFlowStrategy);
}

uint64_t partial apply for implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43567C);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #1 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(v2, v3);
}

uint64_t partial apply for implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43568C);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #2 in StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel()(v2, v3);
}

uint64_t partial apply for closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  return closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( a1,  v1[2],  v1[3],  v1[4],  v1[5]);
}

uint64_t partial apply for closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  return closure #2 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( a1,  v1[2],  v1[3],  v1[4],  v1[5]);
}

uint64_t partial apply for closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  return closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( a1,  v1[2],  v1[3],  v1[4]);
}

void outlined destroy of CommonDirectAction?(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_115_4(a1, a2);
  OUTLINED_FUNCTION_2_0(v2);
  OUTLINED_FUNCTION_2();
}

uint64_t sub_17FAF0()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
}

uint64_t partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  return partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( a1,  &demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>,  (uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:));
}

uint64_t sub_17FB10()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
}

uint64_t sub_17FB1C()
{
  return objectdestroyTm_8(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

uint64_t partial apply for closure #1 in closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1)
{
  return partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( a1,  &demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>,  (uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #1 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:));
}

uint64_t partial apply for closure #1 in closure #3 in StartCallConfirmIntentFlowStrategy.makeLegacyPromptForConfirmationOutput(app:intent:intentResponse:)( uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(v3, v4 + v5);
}

uint64_t OUTLINED_FUNCTION_6_60()
{
  return swift_task_dealloc(*(void *)(v0 + 816));
}

uint64_t OUTLINED_FUNCTION_10_51()
{
  return swift_task_dealloc(*(void *)(v0 + 816));
}

uint64_t OUTLINED_FUNCTION_15_46()
{
  return swift_beginAccess(v0 + 40, v1 - 128, 1LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_37_25@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

void OUTLINED_FUNCTION_42_15()
{
  v0._uint64_t countAndFlagsBits = 0x2E65756C61562ELL;
  v0._object = (void *)0xE700000000000000LL;
  String.append(_:)(v0);
}

void OUTLINED_FUNCTION_48_14(void *a1@<X8>)
{
}

uint64_t OUTLINED_FUNCTION_55_13(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 24);
}

  ;
}

uint64_t OUTLINED_FUNCTION_61_11@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a2 > 1, a1, 1LL);
}

uint64_t OUTLINED_FUNCTION_68_16()
{
  return swift_task_dealloc(*(void *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_71_11()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120LL))();
}

void OUTLINED_FUNCTION_74_12(void *a1)
{
}

uint64_t OUTLINED_FUNCTION_75_13()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

  ;
}

void OUTLINED_FUNCTION_83_9(void *a1, os_log_s *a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_88_11()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_98_6()
{
  return swift_release_n(v0, 3LL);
}

uint64_t OUTLINED_FUNCTION_100_5()
{
  return static CATOption.defaultMode.getter();
}

void OUTLINED_FUNCTION_104_6()
{
}

void OUTLINED_FUNCTION_106_4()
{
}

uint64_t OUTLINED_FUNCTION_111_5()
{
  return swift_task_alloc(48LL);
}

uint64_t OUTLINED_FUNCTION_115_4(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_117_6(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_118_3()
{
  return *(void *)(v0 + 8);
}

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)( void *a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v8 = a2 & 1;
  uint64_t v9 = a5[3];
  uint64_t v10 = a5[4];
  uint64_t v11 = OUTLINED_FUNCTION_66(a5);
  return specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)( a1,  v8,  a3,  a4,  (uint64_t)v11,  v9,  v10);
}

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContextWithAppSelectionUserPersona(phoneCallNLIntent:contextNLType:userPersona:app:resolvedSiriKitContacts:callStateProvider:)( void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char v10 = a2 & 1;
  uint64_t v11 = a6[3];
  uint64_t v12 = a6[4];
  os_log_type_t v13 = __swift_project_boxed_opaque_existential_1(a6, v11);
  uint64_t v14 = specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)( a1,  v10,  a4,  a5,  (uint64_t)v13,  v11,  v12);
  uint64_t v15 = v14;
  if (v14)
  {
    id v16 = [v14 phoneCallContext];
    if (v16)
    {
      uint64_t v17 = v16;
      [v16 setUserPersona:a3];
      [v15 setPhoneCallContext:v17];
    }
  }

  return v15;
}

void static PhoneDomainContextMetricsUtils.populatePhoneDomainContextSRR()()
{
  uint64_t v2 = &CameraControlFlow + 64;
  id v3 = OUTLINED_FUNCTION_18_42(objc_allocWithZone(&OBJC_CLASS___FLOWSchemaFLOWDomainContext));
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = OUTLINED_FUNCTION_18_42(objc_allocWithZone(&OBJC_CLASS___FLOWSchemaFLOWPhoneCallContext));
    if (v5)
    {
      uint64_t v2 = v5;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v6 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
      os_log_type_t v7 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_4(v7))
      {
        char v8 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)char v8 = 0;
        OUTLINED_FUNCTION_5(&dword_0, v0, v1, "#PhoneDomainContextMetricsUtils add DomainContext resolved via SRR", v8);
        OUTLINED_FUNCTION_0_2((uint64_t)v8);
      }

      OUTLINED_FUNCTION_20_34((uint64_t)[v2 addPersonType:11], "setPhoneCallContext:");
      OUTLINED_FUNCTION_15_47(v4, "setHasPhoneCallContext:");
      goto LABEL_13;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v9, (uint64_t)static Logger.siriPhone);
  os_log_type_t v10 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_10(v10))
  {
    uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_1_0();
    *uint64_t v11 = 0;
    OUTLINED_FUNCTION_2_2( &dword_0,  v12,  v13,  "#PhoneDomainContextMetricsUtils returning without logging phone domain context resolved via SRR");
    OUTLINED_FUNCTION_0_2((uint64_t)v11);
  }

void *static PhoneDomainContextMetricsUtils.populatePhoneDomainContextForHangUpDirectInvocation(callStateProvider:)( void *a1)
{
  id v4 = [objc_allocWithZone(FLOWSchemaFLOWDomainContext) init];
  if (v4)
  {
    os_log_type_t v1 = v4;
    id v5 = [objc_allocWithZone(FLOWSchemaFLOWPhoneCallContext) init];
    if (v5)
    {
      uint64_t v6 = v5;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v7 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v7, (uint64_t)static Logger.siriPhone);
      os_log_type_t v8 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_93(v8))
      {
        uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v9 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)&CameraControlFlow.base_props,  v2,  "#PhoneDomainContextMetricsUtils add DomainContext for HangUpIntentResponse",  v9);
        OUTLINED_FUNCTION_0_2((uint64_t)v9);
      }

      uint64_t v10 = a1[3];
      uint64_t v11 = a1[4];
      OUTLINED_FUNCTION_66(a1);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v22, v10, v11);
      uint64_t v12 = v23;
      uint64_t v13 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
      __swift_destroy_boxed_opaque_existential_1(v22);
      if ((v14 & 1) != 0) {
        uint64_t v15 = 4LL;
      }
      else {
        uint64_t v15 = 0LL;
      }
      [v6 setPhoneCallAppType:v15];
      [v1 setPhoneCallContext:v6];
      OUTLINED_FUNCTION_15_47(v1, "setHasPhoneCallContext:");

      return v1;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v16, (uint64_t)static Logger.siriPhone);
  os_log_type_t v17 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_10(v17))
  {
    uint64_t v18 = (_WORD *)OUTLINED_FUNCTION_1_0();
    *uint64_t v18 = 0;
    OUTLINED_FUNCTION_2_2( &dword_0,  v19,  v20,  "#PhoneDomainContextMetricsUtils returning without logging phone domain context for HangUpIntent");
    OUTLINED_FUNCTION_0_2((uint64_t)v18);
  }

  return 0LL;
}

void static PhoneDomainContextMetricsUtils.populatePhoneDomainContextForThirdPartyFaceTime()()
{
  os_log_type_t v2 = &CameraControlFlow + 64;
  id v3 = OUTLINED_FUNCTION_18_42(objc_allocWithZone(&OBJC_CLASS___FLOWSchemaFLOWDomainContext));
  if (v3)
  {
    id v4 = v3;
    id v5 = OUTLINED_FUNCTION_18_42(objc_allocWithZone(&OBJC_CLASS___FLOWSchemaFLOWPhoneCallContext));
    if (v5)
    {
      os_log_type_t v2 = v5;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v6 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v6, (uint64_t)static Logger.siriPhone);
      os_log_type_t v7 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_4(v7))
      {
        os_log_type_t v8 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)os_log_type_t v8 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v0,  v1,  "#PhoneDomainContextMetricsUtils add DomainContext for making FaceTime call to non-Apple users",  v8);
        OUTLINED_FUNCTION_0_2((uint64_t)v8);
      }

      id v9 = OUTLINED_FUNCTION_15_47(v2, "setIsThirdPartyFaceTime:");
      OUTLINED_FUNCTION_20_34((uint64_t)v9, "setPhoneCallContext:");
      OUTLINED_FUNCTION_15_47(v4, "setHasPhoneCallContext:");
      goto LABEL_13;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v10, (uint64_t)static Logger.siriPhone);
  os_log_type_t v11 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_10(v11))
  {
    uint64_t v12 = (_WORD *)OUTLINED_FUNCTION_1_0();
    *uint64_t v12 = 0;
    OUTLINED_FUNCTION_2_2( &dword_0,  v13,  v14,  "#PhoneDomainContextMetricsUtils returning without logging phone domain context for making FaceTime call to non-Apple users");
    OUTLINED_FUNCTION_0_2((uint64_t)v12);
  }

void *specialized static PhoneDomainContextMetricsUtils.populatePhoneDomainContext(phoneCallNLIntent:contextNLType:app:resolvedSiriKitContacts:callStateProvider:)( void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a6 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v17);
  id v18 = [objc_allocWithZone(FLOWSchemaFLOWDomainContext) init];
  if (v18)
  {
    uint64_t v19 = v18;
    id v20 = [objc_allocWithZone(FLOWSchemaFLOWPhoneCallContext) init];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v34 = a7;
      if ((a2 & 1) != 0)
      {
        static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv4(phoneContext:resolvedSiriKitContacts:)( v20,  a4);
      }

      else
      {
        uint64_t v22 = a1[3];
        uint64_t v23 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v22);
        uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
        static PhoneDomainContextMetricsUtils.addContactRecipientTypeNLv3(phoneCallContacts:phoneContext:)(v24, v21);
        swift_bridgeObjectRelease();
      }

      uint64_t v29 = a1[3];
      uint64_t v30 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v29);
      uint64_t v31 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v30 + 136))(v29, v30) + 16);
      swift_bridgeObjectRelease();
      if (v31) {
        [v21 addPersonType:10];
      }
      specialized static PhoneDomainContextMetricsUtils.addPhoneCallAppType(phoneCallNLIntent:app:phoneContext:callStateProvider:)( a1,  a3,  v21,  (uint64_t)v15,  a6,  v34);
      static PhoneDomainContextMetricsUtils.addPhoneCallType(phoneCallNLIntent:phoneContext:)((uint64_t)a1, v21);
      static PhoneDomainContextMetricsUtils.addEmergencyType(phoneCallNLIntent:phoneContext:)((uint64_t)a1, v21);
      [v19 setPhoneCallContext:v21];
      [v19 setHasPhoneCallContext:1];
      goto LABEL_15;
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = (void *)Logger.logObject.getter(v26);
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled((os_log_t)v21, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl( &dword_0,  (os_log_t)v21,  v27,  "#PhoneDomainContextMetricsUtils returning without logging phone domain context",  v28,  2u);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  uint64_t v19 = 0LL;
LABEL_15:

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a6);
  return v19;
}

unint64_t lazy protocol witness table accessor for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType;
  if (!lazy protocol witness table cache variable for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneDomainContextNLType,  &type metadata for PhoneDomainContextNLType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneDomainContextNLType and conformance PhoneDomainContextNLType);
  }

  return result;
}

ValueMetadata *type metadata accessor for PhoneDomainContextMetricsUtils()
{
  return &type metadata for PhoneDomainContextMetricsUtils;
}

uint64_t storeEnumTagSinglePayload for PhoneDomainContextNLType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_180684 + 4 * byte_32C195[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1806B8 + 4 * asc_32C190[v4]))();
}

uint64_t sub_1806B8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1806C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1806C8LL);
  }
  return result;
}

uint64_t sub_1806D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1806DCLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1806E0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1806E8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneDomainContextNLType()
{
  return &type metadata for PhoneDomainContextNLType;
}

uint64_t specialized static PhoneDomainContextMetricsUtils.addPhoneCallAppType(phoneCallNLIntent:app:phoneContext:callStateProvider:)( void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  v37[3] = a5;
  v37[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16LL))(boxed_opaque_existential_1, a4, a5);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  uint64_t v14 = swift_retain_n(a2, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v17 = static os_log_type_t.debug.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    uint64_t v31 = a3;
    id v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = v6;
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    v36[0] = v19;
    *(_DWORD *)id v18 = 136315138;
    uint64_t v32 = a2;
    swift_retain();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for App?);
    uint64_t v21 = String.init<A>(describing:)(&v32, v20);
    uint64_t v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v18 + 4);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v15, v17, "#PhoneDomainContextMetricsUtils addPhoneCallAppType with app: %s", v18, 0xCu);
    swift_arrayDestroy(v19, 1LL);
    uint64_t v23 = v19;
    uint64_t v6 = v30;
    swift_slowDealloc(v23, -1LL, -1LL);
    uint64_t v24 = v18;
    a3 = v31;
    swift_slowDealloc(v24, -1LL, -1LL);

    if (a2)
    {
LABEL_5:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      swift_retain();
      if (PhoneCallNLIntent.isFaceTimeCall()() && App.isFirstParty()())
      {
        [a3 setPhoneCallAppType:2];
LABEL_17:
        swift_release(a2);
        return __swift_destroy_boxed_opaque_existential_1(v37);
      }

      if (!App.isFirstParty()())
      {
        [a3 setPhoneCallAppType:3];
        goto LABEL_17;
      }

      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      Swift::Bool v25 = PhoneCallNLIntent.isHangUpCall()();
      outlined init with copy of SignalProviding((uint64_t)v37, (uint64_t)v36);
      if (v25)
      {
        __swift_project_boxed_opaque_existential_1(v36, v36[3]);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 16))(&v32, a5, v6);
        uint64_t v26 = v34;
        uint64_t v27 = v35;
        __swift_project_boxed_opaque_existential_1(&v32, v34);
        char v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
        __swift_destroy_boxed_opaque_existential_1(&v32);
        __swift_destroy_boxed_opaque_existential_1(v36);
        if ((v28 & 1) != 0)
        {
          [a3 setPhoneCallAppType:4];
          goto LABEL_17;
        }
      }

      else
      {
        __swift_destroy_boxed_opaque_existential_1(v36);
      }

      [a3 setPhoneCallAppType:1];
      goto LABEL_17;
    }
  }

  else
  {

    swift_release_n(a2, 2LL);
    if (a2) {
      goto LABEL_5;
    }
  }

  [a3 setPhoneCallAppType:0];
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t OUTLINED_FUNCTION_0_67()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_2_59(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_11_52(void *a1)
{
  return v1;
}

uint64_t OUTLINED_FUNCTION_13_55(char a1)
{
  return a1 & 1;
}

uint64_t OUTLINED_FUNCTION_14_42(void *a1)
{
  return v1;
}

id OUTLINED_FUNCTION_15_47(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 1);
}

id OUTLINED_FUNCTION_18_42(void *a1)
{
  return [a1 *(SEL *)(v1 + 1088)];
}

id OUTLINED_FUNCTION_20_34(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_22_34(uint64_t a1)
{
  return v2(a1, v1);
}

void PhoneCallNLv4Intent.init(contactQueries:contacts:app:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:references:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)a9 = a1;
  *(void *)(a9 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  outlined init with take of PhoneCallNLIntent?( a3,  a9 + 16,  &demangling cache variable for type metadata for PhoneCallApp?);
  *(_BYTE *)(a9 + 56) = a4;
  *(void *)(a9 + 64) = a5;
  *(_BYTE *)(a9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  *(_BYTE *)(a9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a7;
  *(_BYTE *)(a9 + 74) = a8;
  *(_BYTE *)(a9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a10;
  *(_WORD *)(a9 + 76) = *(_WORD *)((char *)&a10 + 1);
  *(_DWORD *)(a9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(_DWORD *)((char *)&a10 + 3);
  *(void *)(a9 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a11;
  *(void *)(a9 + 96) = a12;
}

uint64_t PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)(void *a1, uint64_t a2)
{
  return PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:));
}

BOOL specialized static PhoneCallNLIntent.isAppModified(previousNLIntent:currentNLIntent:)( uint64_t a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a2, v4);
  PhoneCallNLIntent.applicationId.getter(v4, v5, (uint64_t)v6);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 5) = specialized Optional<A>.isNilOrEmpty.getter(v7, v8);
  swift_bridgeObjectRelease();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v53);
  outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)v50);
  if ((v5 & 1) != 0) {
    goto LABEL_2;
  }
  uint64_t v15 = v54;
  uint64_t v16 = v55;
  os_log_type_t v17 = __swift_project_boxed_opaque_existential_1(v53, v54);
  PhoneCallNLIntent.applicationId.getter(v15, v16, (uint64_t)v17);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v22 = v51;
  uint64_t v23 = v52;
  uint64_t v24 = __swift_project_boxed_opaque_existential_1(v50, v51);
  PhoneCallNLIntent.applicationId.getter(v22, v23, (uint64_t)v24);
  if (!v21)
  {
    if (!v26) {
      goto LABEL_2;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v53);
    id v43 = v50;
LABEL_29:
    __swift_destroy_boxed_opaque_existential_1(v43);
    return 1LL;
  }

  if (!v26) {
    goto LABEL_26;
  }
  if (v19 == v25 && v21 == v26)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_2:
    __swift_destroy_boxed_opaque_existential_1(v53);
    __swift_destroy_boxed_opaque_existential_1(v50);
    goto LABEL_3;
  }

  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v25, v26, 0LL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v53);
  __swift_destroy_boxed_opaque_existential_1(v50);
  if ((v28 & 1) == 0) {
    return 1LL;
  }
LABEL_3:
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  os_log_type_t v11 = __swift_project_boxed_opaque_existential_1(a2, v9);
  PhoneCallNLIntent.appName.getter(v9, v10, (uint64_t)v11);
  LOBYTE(v10) = specialized Optional<A>.isNilOrEmpty.getter(v12, v13);
  swift_bridgeObjectRelease();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v47);
  outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)v44);
  if ((v10 & 1) != 0)
  {
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1(v47);
    __swift_destroy_boxed_opaque_existential_1(v44);
    return 0LL;
  }

  uint64_t v29 = v48;
  uint64_t v30 = v49;
  uint64_t v31 = __swift_project_boxed_opaque_existential_1(v47, v48);
  PhoneCallNLIntent.appName.getter(v29, v30, (uint64_t)v31);
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v36 = v45;
  uint64_t v37 = v46;
  uint64_t v38 = __swift_project_boxed_opaque_existential_1(v44, v45);
  PhoneCallNLIntent.appName.getter(v36, v37, (uint64_t)v38);
  if (!v35)
  {
    if (!v40) {
      goto LABEL_4;
    }
    goto LABEL_28;
  }

  if (!v40)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v47);
    id v43 = v44;
    goto LABEL_29;
  }

  if (v33 == v39 && v35 == v40)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }

  char v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, v39, v40, 0LL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v47);
  __swift_destroy_boxed_opaque_existential_1(v44);
  return (v42 & 1) == 0;
}

uint64_t specialized static PhoneCallNLIntent.isPhoneCallVerbModified(previousNLIntent:currentNLIntent:)( uint64_t a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  unsigned __int8 v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  if (v6 == 17)
  {
    outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v37);
    goto LABEL_3;
  }

  uint64_t v25 = PhoneCallVerb.rawValue.getter(v6);
  if (v25 == 1819042147 && v26 == 0xE400000000000000LL)
  {
    swift_bridgeObjectRelease();
    outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v37);
LABEL_23:
    __swift_destroy_boxed_opaque_existential_1(v37);
    outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v34);
    outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)v31);
    goto LABEL_24;
  }

  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 1819042147LL, 0xE400000000000000LL, 0LL);
  swift_bridgeObjectRelease();
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v37);
  if ((v28 & 1) != 0) {
    goto LABEL_23;
  }
LABEL_3:
  uint64_t v7 = v38;
  uint64_t v8 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  int v9 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
  __swift_destroy_boxed_opaque_existential_1(v37);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v34);
  outlined init with copy of SharedGlobalsProviding(a1, (uint64_t)v31);
  if (v9 == 17)
  {
LABEL_24:
    char v29 = 0;
    goto LABEL_28;
  }

  uint64_t v10 = v35;
  uint64_t v11 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  unsigned __int8 v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 104))(v10, v11);
  uint64_t v13 = v32;
  uint64_t v14 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  unsigned __int8 v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
  char v16 = v15 == 17 && v12 == 17;
  if (v12 != 17 && v15 != 17)
  {
    unsigned __int8 v18 = v15;
    uint64_t v19 = PhoneCallVerb.rawValue.getter(v12);
    uint64_t v21 = v20;
    uint64_t v22 = PhoneCallVerb.rawValue.getter(v18);
    if (v19 == v22 && v21 == v23) {
      char v16 = 1;
    }
    else {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0LL);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  char v29 = v16 ^ 1;
LABEL_28:
  __swift_destroy_boxed_opaque_existential_1(v34);
  __swift_destroy_boxed_opaque_existential_1(v31);
  return v29 & 1;
}

void UsoEntity_common_App.applicationId.getter()
{
  uint64_t v3 = OUTLINED_FUNCTION_58_13();
  uint64_t v100 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  OUTLINED_FUNCTION_25_6();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  OUTLINED_FUNCTION_15();
  uint64_t v97 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v9);
  OUTLINED_FUNCTION_15();
  uint64_t v96 = v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v11);
  OUTLINED_FUNCTION_266();
  __chkstk_darwin(v12);
  OUTLINED_FUNCTION_15();
  uint64_t v91 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v14);
  OUTLINED_FUNCTION_52_16();
  uint64_t v16 = __chkstk_darwin(v15);
  unsigned __int8 v18 = (char *)&v87 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v87 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin(v21);
  OUTLINED_FUNCTION_10_1();
  uint64_t v95 = v22;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v23);
  OUTLINED_FUNCTION_70_14();
  __chkstk_darwin(v24);
  uint64_t v94 = (uint64_t)&v87 - v25;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin(v26);
  char v28 = (char *)&v87 - v27;
  uint64_t v29 = OUTLINED_FUNCTION_51_13();
  uint64_t v30 = v29;
  uint64_t v98 = v2;
  if (v29)
  {
    uint64_t v92 = v1;
    uint64_t v31 = *(void *)(v29 + 16);
    if (v31)
    {
      uint64_t v89 = v28;
      uint64_t v90 = v6;
      OUTLINED_FUNCTION_37_2();
      uint64_t v33 = v30 + v32;
      unint64_t v99 = *(void *)(v34 + 72);
      uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 16);
      uint64_t v88 = v30;
      swift_bridgeObjectRetain_n(v30, 2LL);
      uint64_t v93 = 0x8000000000341970LL;
      while (1)
      {
        uint64_t v36 = v35(v20, v33, v3);
        uint64_t v37 = UsoIdentifier.namespace.getter(v36);
        char v39 = v38;
        if (v38)
        {
          BOOL v40 = v37 == 0x64695F6D657469LL && v38 == 0xE700000000000000LL;
          if (v40)
          {
            OUTLINED_FUNCTION_62();
            uint64_t v42 = OUTLINED_FUNCTION_36_21((uint64_t)v18);
LABEL_13:
            uint64_t v43 = UsoIdentifier.appBundleId.getter(v42);
            uint64_t v45 = v44;
            v46._uint64_t countAndFlagsBits = v43;
            v46._object = v45;
            Swift::Int v47 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of UsoIdentifierAppBundleType.init(rawValue:),  v46);
            OUTLINED_FUNCTION_4_1();
            if (v47)
            {
              if (v47 == 1)
              {
                char v39 = OUTLINED_FUNCTION_49_2(0xD000000000000015LL, v93, 0x746163696C707041LL, 0xEC000000736E6F69LL);
                OUTLINED_FUNCTION_4_1();
              }

              else
              {
                char v39 = 0;
              }
            }

            else
            {
              swift_bridgeObjectRelease(0xEC000000736E6F69LL);
              char v39 = 1;
            }

            goto LABEL_18;
          }

          char v41 = OUTLINED_FUNCTION_49_2(v37, v38, 0x64695F6D657469LL, 0xE700000000000000LL);
          OUTLINED_FUNCTION_62();
          uint64_t v42 = OUTLINED_FUNCTION_36_21((uint64_t)v18);
          char v39 = 0;
          if ((v41 & 1) != 0) {
            goto LABEL_13;
          }
        }

        else
        {
          OUTLINED_FUNCTION_36_21((uint64_t)v18);
        }

void UserDialogActParse.identifiers.setter(uint64_t a1)
{
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  OUTLINED_FUNCTION_2();
}

void PhoneCallNLv4Intent.app.getter(uint64_t a1@<X8>)
{
}

void PhoneCallNLv4Intent.app.setter(uint64_t a1)
{
}

uint64_t PhoneCallNLv4Intent.phoneCallAVMode.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t PhoneCallNLv4Intent.phoneCallAVMode.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 56) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallAttributes.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void PhoneCallNLv4Intent.phoneCallAttributes.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailVerb.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailVerb.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.voiceMailVerb.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t PhoneCallDirectInvocationNLIntent.voiceMailNoun.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.voiceMailNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallConfirmation.getter()
{
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t PhoneCallNLv4Intent.phoneCallConfirmation.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 74) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallConfirmation.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallDestinationType.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 5) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallDestinationType.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 76);
}

uint64_t PhoneCallNLv4Intent.phoneCallNoun.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 76) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallPreferredProvider.getter()
{
  return *(unsigned __int8 *)(v0 + 77);
}

uint64_t PhoneCallNLv4Intent.phoneCallPreferredProvider.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 77) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallPreferredProvider.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallReference.getter()
{
  return *(unsigned __int8 *)(v0 + 78);
}

uint64_t PhoneCallNLv4Intent.phoneCallReference.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallReference.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.phoneCallVerb.getter()
{
  return *(unsigned __int8 *)(v0 + 79);
}

uint64_t PhoneCallNLv4Intent.phoneCallVerb.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 79) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.phoneCallVerb.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallNLv4Intent.voiceMailNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t PhoneCallNLv4Intent.voiceMailNoun.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 81) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallNLv4Intent.voiceMailNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.references.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 96));
}

void PhoneCallDirectInvocationNLIntent.references.setter(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  OUTLINED_FUNCTION_2();
}

double static PhoneCallNLv4Intent.getYesConfirmationNLIntent()@<D0>(uint64_t *a1@<X8>)
{
  return static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(0, a1);
}

double static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)@<D0>( char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v7 = 0LL;
  memset(v6, 0, sizeof(v6));
  a2[3] = (uint64_t)&type metadata for PhoneCallNLv4Intent;
  a2[4] = (uint64_t)&protocol witness table for PhoneCallNLv4Intent;
  uint64_t v4 = OUTLINED_FUNCTION_62_11((uint64_t)&unk_405440);
  *a2 = v4;
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v4 + 24) = _swiftEmptyArrayStorage;
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v6,  v4 + 32,  &demangling cache variable for type metadata for PhoneCallApp?);
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2;
  *(void *)(v4 + 80) = 0LL;
  *(_WORD *)(v4 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 516;
  *(_BYTE *)(v4 + 90) = a1;
  *(void *)&double result = 587401477LL;
  *(_DWORD *)(v4 + 91) = 587401477;
  *(_WORD *)(v4 + 9__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 1553;
  *(_BYTE *)(v4 + 97) = 2;
  *(void *)(v4 + 104) = _swiftEmptyArrayStorage;
  *(void *)(v4 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = _swiftEmptyArrayStorage;
  return result;
}

double static PhoneCallNLv4Intent.getNoConfirmationNLIntent()@<D0>(uint64_t *a1@<X8>)
{
  return static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(1, a1);
}

double static PhoneCallNLv4Intent.getCancelConfirmationNLIntent()@<D0>(uint64_t *a1@<X8>)
{
  return static PhoneCallNLv4Intent.getConfirmationNLIntent(phoneCallConfirmation:)(2, a1);
}

Swift::Bool __swiftcall PhoneCallNLv4Intent.isLabelOnlyRequest()()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(void *)(v1 + 16) == 1LL)
  {
    outlined init with copy of SharedGlobalsProviding(v1 + 32, (uint64_t)v7);
    Class isa = OUTLINED_FUNCTION_45_18(v7).super.isa;
    uint64_t v3 = __swift_destroy_boxed_opaque_existential_1(v7);
    INPerson.isUnnamedHandleLabel.getter(v3);
    char v5 = v4;
  }

  else
  {
    char v5 = 0;
  }

  return v5 & 1;
}

void PhoneCallNLv4Contact.__allocating_init()()
{
}

uint64_t PhoneCallNLv4Contact.init()()
{
  *(_BYTE *)(v0 + 16) = 38;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_BYTE *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0LL;
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(void *)(v0 + 80) = 0LL;
  *(void *)(v0 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1LL;
  bzero((void *)(v0 + 96), 0xB8uLL);
  *(void *)(v0 + 280) = 3LL;
  *(_DWORD *)(v0 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 33554435;
  *(_BYTE *)(v0 + 29__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  *(void *)(v0 + 296) = &_swiftEmptySetSingleton;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_OWORD *)(v0 + 320) = 0u;
  *(void *)(v0 + 336) = 0LL;
  *(_WORD *)(v0 + 344) = 1023;
  return v0;
}

uint64_t PhoneCallNLv4Contact.init(contactConvertible:contactRole:)(void *a1, uint64_t a2)
{
  return PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:));
}

uint64_t PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)( void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)a1, v7);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t))(v12 + 16))(v10 - v9);
  uint64_t v13 = a3(v11, a2, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

void UsoEntity_common_PersonRelationship.relationshipIdentifierOrLabel.getter()
{
  uint64_t v4 = v2 - v3;
  __chkstk_darwin();
  uint64_t v6 = (char *)v29 - v5;
  uint64_t v7 = OUTLINED_FUNCTION_58_13();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_52_16();
  __chkstk_darwin();
  uint64_t v10 = (char *)v29 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)v29 - v11;
  if (dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)( 0xD000000000000010LL,  0x800000000034C310LL))
  {
    specialized Collection.first.getter();
    OUTLINED_FUNCTION_39();
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1LL, v7) != 1)
    {
      uint64_t v13 = OUTLINED_FUNCTION_56_4( (uint64_t)v12,  (uint64_t)v6,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
      UsoIdentifier.value.getter(v13);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      goto LABEL_21;
    }
  }

  else
  {
    OUTLINED_FUNCTION_44_2((uint64_t)v6, 1LL);
  }

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v6,  &demangling cache variable for type metadata for UsoIdentifier?);
  uint64_t v14 = dispatch thunk of CodeGenBase.usoIdentifiers.getter();
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
    uint64_t v23 = 1LL;
    goto LABEL_17;
  }

  uint64_t v30 = v10;
  uint64_t v31 = v4;
  uint64_t v32 = v0;
  unint64_t v16 = v14 + ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v17 = *(void *)(v8 + 72);
  unsigned __int8 v18 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
  v29[1] = v14;
  swift_bridgeObjectRetain();
  unint64_t v33 = 0x8000000000346510LL;
  while (1)
  {
    uint64_t v19 = v18(v1, v16, v7);
    uint64_t v20 = UsoIdentifier.namespace.getter(v19);
    if (!v21) {
      goto LABEL_11;
    }
    if (v20 == 0xD000000000000012LL && v21 == v33) {
      break;
    }
    char v22 = OUTLINED_FUNCTION_49_2(v20, v21, 0xD000000000000012LL, 0x8000000000346510LL);
    OUTLINED_FUNCTION_62();
    if ((v22 & 1) != 0) {
      goto LABEL_15;
    }
LABEL_11:
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    v16 += v17;
    if (!--v15)
    {
      OUTLINED_FUNCTION_23_5();
      uint64_t v23 = 1LL;
      uint64_t v4 = v31;
      goto LABEL_16;
    }
  }

  OUTLINED_FUNCTION_23_5();
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v4 = v31;
  OUTLINED_FUNCTION_56_4(v31, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  uint64_t v23 = 0LL;
LABEL_16:
  uint64_t v10 = v30;
LABEL_17:
  OUTLINED_FUNCTION_44_2(v4, v23);
  OUTLINED_FUNCTION_23_5();
  if (__swift_getEnumTagSinglePayload(v4, 1LL, v7) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v4,  &demangling cache variable for type metadata for UsoIdentifier?);
    uint64_t v24 = dispatch thunk of UsoEntity_common_PersonRelationship.relationshipType.getter();
    if (!v25)
    {
      uint64_t v27 = dispatch thunk of UsoEntity_common_PersonRelationship.relationshipTypeAsExpression.getter(v24);
      if (v27)
      {
        uint64_t v28 = v27;
        dispatch thunk of CodeGenExpression.operand.getter(&v34);
        swift_release(v28);
      }
    }
  }

  else
  {
    uint64_t v26 = OUTLINED_FUNCTION_56_4((uint64_t)v10, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    UsoIdentifier.value.getter(v26);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

void PhoneCallNLv4Contact.contactReference.getter()
{
}

uint64_t key path setter for PhoneCallNLv4Contact.contactId : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 272LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t key path setter for PhoneCallNLv4Contact.emailAddress : PhoneCallNLv4Contact( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 296LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallNLv4Contact.emailAddress.setter()
{
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallNLv4Contact.emailAddress.modify(uint64_t a1)
{
}

void PhoneCallNLv4Contact.isMe.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.contactName : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 344LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallNLv4Contact.contactName.setter()
{
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallNLv4Contact.contactName.modify(uint64_t a1)
{
}

void key path getter for PhoneCallNLv4Contact.personName : PhoneCallNLv4Contact( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 360LL))(v3);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v3,  a2,  &demangling cache variable for type metadata for PhoneCallPersonName?);
}

uint64_t key path setter for PhoneCallNLv4Contact.personName : PhoneCallNLv4Contact(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(**(void **)a2 + 368LL);
  outlined retain of PhoneCallPersonName?( v5,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of PhoneCallPersonName?);
  return v3(v5);
}

void PhoneCallNLv4Contact.personName.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.organizationName : PhoneCallNLv4Contact( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 392LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallNLv4Contact.organizationName.getter()
{
}

void PhoneCallNLv4Contact.organizationName.setter()
{
  *(void *)(v1 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v1 + 200) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallNLv4Contact.organizationName.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.telephoneNumber : PhoneCallNLv4Contact( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 416LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallNLv4Contact.telephoneNumber.setter()
{
  *(void *)(v1 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  *(void *)(v1 + 216) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallNLv4Contact.telephoneNumber.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.relationship : PhoneCallNLv4Contact( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 440LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallNLv4Contact.relationship.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.handleType : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 464LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallNLv4Contact.handleType.getter()
{
}

void PhoneCallNLv4Contact.handleType.setter()
{
  *(void *)(v1 + 240) = v2;
  *(void *)(v1 + 24__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_1();
}

void PhoneCallNLv4Contact.handleType.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.handleLabel : PhoneCallNLv4Contact(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 488LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallNLv4Contact.handleLabel.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.emergencyType : PhoneCallNLv4Contact( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, unint64_t))(**(void **)a2 + 512LL);
  outlined copy of PhoneCallEmergencyType?(*a1, v3);
  return v4(v2, v3);
}

uint64_t PhoneCallNLv4Contact.emergencyType.setter()
{
  uint64_t v3 = *(void *)(v1 + 272);
  unint64_t v4 = *(void *)(v1 + 280);
  *(void *)(v1 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v1 + 280) = v0;
  outlined copy of PhoneCallEmergencyType?(v2, v0);
  outlined consume of PhoneCallEmergencyType?(v3, v4);
  return outlined consume of PhoneCallEmergencyType?(v2, v0);
}

void PhoneCallNLv4Contact.emergencyType.modify(uint64_t a1)
{
}

void PhoneCallNLv4Contact.emergencyLocationType.modify(uint64_t a1)
{
}

void PhoneCallNLv4Contact.isAmbiguousHandle.getter()
{
}

void PhoneCallNLv4Contact.isAmbiguousHandle.setter(char a1)
{
  *(_BYTE *)(v1 + 289) = a1;
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallNLv4Contact.isAmbiguousHandle.modify(uint64_t a1)
{
}

void PhoneCallNLv4Contact.searchQualifier.getter()
{
}

void PhoneCallNLv4Contact.searchQualifier.setter(int a1)
{
  *(_BYTE *)(v1 + 29__swift_destroy_boxed_opaque_existential_1(v0 + 2) = BYTE2(a1);
  *(_WORD *)(v1 + 290) = a1;
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallNLv4Contact.searchQualifier.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.vocabularyAppsBundleSet : PhoneCallNLv4Contact( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 608LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t PhoneCallNLv4Contact.vocabularyAppsBundleSet.getter()
{
  return swift_bridgeObjectRetain();
}

void PhoneCallNLv4Contact.vocabularyAppsBundleSet.setter(uint64_t a1)
{
  *(void *)(v1 + 296) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallNLv4Contact.vocabularyAppsBundleSet.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallNLv4Contact.backingContact : PhoneCallNLv4Contact( uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_BYTE *))(**(void **)a2 + 632LL))(v4);
}

void PhoneCallNLv4Contact.backingContact.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + 304;
  OUTLINED_FUNCTION_25_0(v3, (uint64_t)v4, 0LL);
  outlined init with copy of TransformationResult?( v3,  a1,  &demangling cache variable for type metadata for BackingContact?);
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallNLv4Contact.backingContact.modify(uint64_t a1)
{
}

void PhoneCallNLv4Contact.contactSource.getter()
{
}

void PhoneCallNLv4Contact.contactSource.setter(char a1)
{
  *(_BYTE *)(v1 + 34__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a1;
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallNLv4Contact.contactSource.modify(uint64_t a1)
{
}

uint64_t PhoneCallNLv4Contact.deinit()
{
  return v0;
}

uint64_t PhoneCallNLv4Contact.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 346LL, 7LL);
}

uint64_t (*protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 328LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.contactId.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 280LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.contactName.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 344LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.contactName.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 352LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.contactSource.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 648LL))();
}

uint64_t protocol witness for SiriPhoneContact.contactSource.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 656LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.contactSource.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 664LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.personName.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 376LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.organizationName.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 384LL))();
}

uint64_t protocol witness for SiriPhoneContact.organizationName.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 392LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.organizationName.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 400LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

void protocol witness for SiriPhoneContact.telephoneNumber.setter in conformance PhoneCallNLv4Contact()
{
}

uint64_t (*protocol witness for SiriPhoneContact.telephoneNumber.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 424LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

void protocol witness for SiriPhoneContact.emailAddress.setter in conformance PhoneCallNLv4Contact()
{
}

uint64_t (*protocol witness for SiriPhoneContact.emailAddress.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 304LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.relationship.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 448LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.handleType.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 456LL))();
}

void protocol witness for SiriPhoneContact.handleType.setter in conformance PhoneCallNLv4Contact()
{
}

uint64_t (*protocol witness for SiriPhoneContact.handleType.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 472LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.handleLabel.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 496LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.emergencyType.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 512LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.emergencyType.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 520LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.emergencyLocationType.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 544LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.contactReference.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 240LL))();
}

uint64_t protocol witness for SiriPhoneContact.contactReference.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 248LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.contactReference.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 256LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.isAmbiguousHandle.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 552LL))() & 1;
}

uint64_t protocol witness for SiriPhoneContact.isAmbiguousHandle.setter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 560LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.isAmbiguousHandle.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 568LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.searchQualifier.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 576LL))() & 0xFFFFFF;
}

uint64_t protocol witness for SiriPhoneContact.vocabularyAppsBundleSet.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 600LL))();
}

uint64_t protocol witness for SiriPhoneContact.backingContact.getter in conformance PhoneCallNLv4Contact()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 624LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.backingContact.modify in conformance PhoneCallNLv4Contact( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 640LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

void UsoEntity_common_PhoneNumber.tags.getter()
{
  uint64_t v57 = v3;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_52_16();
  __chkstk_darwin();
  uint64_t v5 = (char *)&v54 - v4;
  uint64_t v6 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)(0x65756C6176LL, 0xE500000000000000LL);
  if (v6) {
    uint64_t v7 = (void *)v6;
  }
  else {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  v58[0] = _swiftEmptyArrayStorage;
  uint64_t v56 = v7[2];
  if (v56)
  {
    unint64_t v8 = 0LL;
    uint64_t v54 = v7;
    uint64_t v55 = v2;
    while (1)
    {
      if (v8 >= v7[2])
      {
        __break(1u);
        return;
      }

      unint64_t v9 = (*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      uint64_t v10 = *(void *)(v1 + 72);
      uint64_t v11 = OUTLINED_FUNCTION_142( (uint64_t)v5,  (uint64_t)v7 + v9 + v10 * v8,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
      uint64_t v12 = UsoIdentifier.namespace.getter(v11);
      if (v13)
      {
        if (v12 == 0x6D754E656E6F6870LL && v13 == 0xEB00000000726562LL)
        {
          OUTLINED_FUNCTION_62();
LABEL_15:
          unint64_t v16 = *(void (**)(uint64_t (*)(void, void, void), char *, uint64_t))(v1 + 32);
          v16(v2, v5, v0);
          uint64_t v17 = v58[0];
          if ((swift_isUniquelyReferenced_nonNull_native(v58[0]) & 1) == 0)
          {
            OUTLINED_FUNCTION_63_12();
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v17 = v58[0];
          }

          unint64_t v18 = *(void *)(v17 + 16);
          if (v18 >= *(void *)(v17 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v17 = v58[0];
          }

          *(void *)(v17 + 16) = v18 + 1;
          unint64_t v19 = v17 + v9 + v18 * v10;
          uint64_t v2 = v55;
          v16((uint64_t (*)(void, void, void))v19, (char *)v55, v0);
          v58[0] = v17;
          uint64_t v7 = v54;
          goto LABEL_20;
        }

        char v15 = OUTLINED_FUNCTION_49_2(v12, v13, 0x6D754E656E6F6870LL, 0xEB00000000726562LL);
        OUTLINED_FUNCTION_62();
        if ((v15 & 1) != 0) {
          goto LABEL_15;
        }
      }

      OUTLINED_FUNCTION_41_2((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
LABEL_20:
      if (v56 == ++v8)
      {
        uint64_t v20 = (void *)v58[0];
        goto LABEL_23;
      }
    }
  }

  uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_23:
  OUTLINED_FUNCTION_87_0();
  uint64_t v21 = v20[2];
  if (v21)
  {
    v58[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    char v22 = (char *)v20 + ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v56 = *(void *)(v1 + 72);
    uint64_t v23 = *(uint64_t (**)(void, void, void))(v1 + 16);
    uint64_t v54 = v20;
    uint64_t v55 = v23;
    do
    {
      uint64_t v24 = v57;
      uint64_t v25 = v55(v57, v22, v0);
      uint64_t v26 = UsoIdentifier.value.getter(v25);
      uint64_t v28 = v27;
      OUTLINED_FUNCTION_41_2(v24, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      uint64_t v29 = (void *)v58[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v58[0]) & 1) == 0)
      {
        OUTLINED_FUNCTION_63_12();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v29 = (void *)v58[0];
      }

      unint64_t v30 = v29[2];
      if (v30 >= v29[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v29 = (void *)v58[0];
      }

      void v29[2] = v30 + 1;
      uint64_t v31 = &v29[2 * v30];
      v31[4] = v26;
      v31[5] = v28;
      v22 += v56;
      --v21;
    }

    while (v21);
    swift_release(v54);
  }

  else
  {
    swift_release(v20);
    uint64_t v29 = _swiftEmptyArrayStorage;
  }

  uint64_t v32 = v29[2];
  if (v32)
  {
    OUTLINED_FUNCTION_6_1();
    unint64_t v33 = v29 + 5;
    uint64_t v34 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v35 = *(v33 - 1);
      unint64_t v36 = *v33;
      uint64_t v37 = HIBYTE(*v33) & 0xF;
      if ((*v33 & 0x2000000000000000LL) == 0) {
        uint64_t v37 = *(v33 - 1);
      }
      uint64_t v38 = 7LL;
      if (((v36 >> 60) & ((v35 & 0x800000000000000LL) == 0)) != 0) {
        uint64_t v38 = 11LL;
      }
      uint64_t v39 = v38 | (v37 << 16);
      swift_bridgeObjectRetain();
      uint64_t v40 = String.index(_:offsetBy:limitedBy:)(15LL, 1LL, v39, v35, v36);
      if ((v41 & 1) != 0) {
        uint64_t v42 = v39;
      }
      else {
        uint64_t v42 = v40;
      }
      String.subscript.getter(15LL, v42, v35, v36);
      Swift::String v43 = Substring.lowercased()();
      OUTLINED_FUNCTION_23_5();
      swift_bridgeObjectRetain();
      specialized Collection.dropFirst(_:)(1LL);
      Swift::String v59 = v43;
      v58[0] = v44;
      v58[1] = v45;
      v58[2] = v46;
      void v58[3] = v47;
      unint64_t v48 = lazy protocol witness table accessor for type Substring and conformance Substring();
      OUTLINED_FUNCTION_76_4();
      String.append<A>(contentsOf:)(v58, &type metadata for Substring, v48);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_23_5();
      Swift::Int v49 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of UsoEntity_common_PhoneNumber.tags.getter,  v59);
      OUTLINED_FUNCTION_62();
      if (!v49)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
        {
          OUTLINED_FUNCTION_66_14();
          uint64_t v34 = v52;
        }

        unint64_t v50 = v34[2];
        unint64_t v51 = v50 + 1;
        if (v50 >= v34[3] >> 1)
        {
          OUTLINED_FUNCTION_66_14();
          uint64_t v34 = v53;
        }

        v34[2] = v51;
      }

      v33 += 2;
      --v32;
    }

    while (v32);
    OUTLINED_FUNCTION_50();
  }

  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

BOOL PhoneNumberTag.init(tagName:)()
{
  v3._uint64_t countAndFlagsBits = v0;
  v3._object = v1;
  return PhoneNumberTag.init(rawValue:)(v3);
}

uint64_t protocol witness for PhoneNumber.value.getter in conformance UsoEntity_common_PhoneNumber()
{
  return dispatch thunk of UsoEntity_common_PhoneNumber.value.getter();
}

void protocol witness for PhoneNumber.tags.getter in conformance UsoEntity_common_PhoneNumber()
{
}

void UsoEntity_common_Group.smsGroupNameId.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_58_13();
  uint64_t v69 = *(void *)(v2 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v5 = v3 - v4;
  __chkstk_darwin();
  uint64_t v7 = (char *)v58 - v6;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v63 = v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v59 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_266();
  __chkstk_darwin();
  uint64_t v61 = (uint64_t)v58 - v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v62 = v11;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v67 = v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v66 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  char v15 = (char *)v58 - v14;
  uint64_t v16 = OUTLINED_FUNCTION_51_13();
  uint64_t v68 = v15;
  uint64_t v64 = v1;
  if (!v16)
  {
    uint64_t v28 = OUTLINED_FUNCTION_120_4((uint64_t)v15, 1LL);
    goto LABEL_14;
  }

  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 + 16);
  if (!v18)
  {
LABEL_10:
    OUTLINED_FUNCTION_120_4((uint64_t)v15, 1LL);
    uint64_t v28 = swift_bridgeObjectRelease();
    goto LABEL_14;
  }

  v58[1] = v16;
  v58[2] = v0;
  OUTLINED_FUNCTION_37_2();
  uint64_t v20 = v17 + v19;
  uint64_t v22 = *(void *)(v21 + 72);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  swift_bridgeObjectRetain();
  unint64_t v65 = 0x8000000000346560LL;
  while (1)
  {
    uint64_t v24 = v23(v7, v20, v2);
    uint64_t v25 = UsoIdentifier.namespace.getter(v24);
    if (!v26) {
      goto LABEL_8;
    }
    if (v25 == 0xD000000000000014LL && v26 == v65) {
      break;
    }
    char v27 = OUTLINED_FUNCTION_49_2(v25, v26, 0xD000000000000014LL, 0x8000000000346560LL);
    OUTLINED_FUNCTION_62();
    if ((v27 & 1) != 0) {
      goto LABEL_13;
    }
LABEL_8:
    OUTLINED_FUNCTION_41_2((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
    v20 += v22;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      char v15 = v68;
      uint64_t v1 = v64;
      goto LABEL_10;
    }
  }

  OUTLINED_FUNCTION_34_0();
LABEL_13:
  OUTLINED_FUNCTION_62();
  char v15 = v68;
  OUTLINED_FUNCTION_142((uint64_t)v68, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32));
  OUTLINED_FUNCTION_8_7((uint64_t)v15);
  uint64_t v28 = OUTLINED_FUNCTION_34_0();
  uint64_t v1 = v64;
LABEL_14:
  uint64_t v29 = dispatch thunk of CodeGenBase.usoIdentifiers.getter(v28);
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30)
  {
    uint64_t v40 = 1LL;
    uint64_t v41 = v66;
    goto LABEL_26;
  }

  OUTLINED_FUNCTION_37_2();
  uint64_t v32 = v29 + v31;
  uint64_t v34 = *(void *)(v33 + 72);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  unint64_t v65 = v29;
  swift_bridgeObjectRetain();
  while (2)
  {
    uint64_t v36 = v35(v5, v32, v2);
    uint64_t v37 = UsoIdentifier.namespace.getter(v36);
    if (!v38)
    {
LABEL_20:
      OUTLINED_FUNCTION_41_2(v5, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
      v32 += v34;
      if (!--v30)
      {
        OUTLINED_FUNCTION_34_0();
        uint64_t v40 = 1LL;
        char v15 = v68;
        uint64_t v41 = v66;
        goto LABEL_25;
      }

      continue;
    }

    break;
  }

  if (v37 != 0xD000000000000016LL || v38 != 0x8000000000346590LL)
  {
    char v39 = OUTLINED_FUNCTION_49_2(v37, v38, 0xD000000000000016LL, 0x8000000000346590LL);
    OUTLINED_FUNCTION_62();
    if ((v39 & 1) != 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }

  OUTLINED_FUNCTION_34_0();
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v41 = v66;
  OUTLINED_FUNCTION_142(v66, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32));
  uint64_t v40 = 0LL;
  char v15 = v68;
LABEL_25:
  uint64_t v1 = v64;
LABEL_26:
  __swift_storeEnumTagSinglePayload(v41, v40, 1LL, v2);
  OUTLINED_FUNCTION_34_0();
  uint64_t v42 = v62;
  outlined init with copy of TransformationResult?( (uint64_t)v15,  v62,  &demangling cache variable for type metadata for UsoIdentifier?);
  uint64_t v43 = v61;
  outlined init with copy of TransformationResult?( v41,  v61,  &demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_3_7(v42);
  uint64_t v44 = v67;
  if (v45)
  {
    outlined init with take of PhoneCallNLIntent?( v43,  v67,  &demangling cache variable for type metadata for UsoIdentifier?);
    OUTLINED_FUNCTION_9_19(v42);
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v43,  &demangling cache variable for type metadata for UsoIdentifier?);
    OUTLINED_FUNCTION_142(v44, v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32));
    OUTLINED_FUNCTION_8_7(v44);
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v46 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
  outlined init with copy of TransformationResult?( v44,  v1,  &demangling cache variable for type metadata for UsoIdentifier?);
  unint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v50 = static os_log_type_t.debug.getter(v48, v49);
  BOOL v51 = os_log_type_enabled(v48, v50);
  if (v51)
  {
    uint64_t v52 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v53 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v71 = v53;
    *(_DWORD *)uint64_t v52 = 136315138;
    char v15 = v68;
    uint64_t v54 = v59;
    outlined init with copy of TransformationResult?( v1,  v59,  &demangling cache variable for type metadata for UsoIdentifier?);
    uint64_t v55 = String.init<A>(describing:)(v54, v60);
    uint64_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, &v71);
    uint64_t v41 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v52 + 4);
    OUTLINED_FUNCTION_129();
    uint64_t v44 = v67;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for UsoIdentifier?);
    _os_log_impl(&dword_0, v48, v50, "#UsoEntity_common_Group smsGroupNameId UsoIdentifier: %s", v52, 0xCu);
    OUTLINED_FUNCTION_17_0(v53);
    OUTLINED_FUNCTION_0_2(v53);
    OUTLINED_FUNCTION_0_2((uint64_t)v52);
  }

  else
  {
    OUTLINED_FUNCTION_64_13(v51, &demangling cache variable for type metadata for UsoIdentifier?);
  }

  uint64_t v57 = v63;
  outlined init with copy of TransformationResult?( v44,  v63,  &demangling cache variable for type metadata for UsoIdentifier?);
  OUTLINED_FUNCTION_3_7(v57);
  if (v45)
  {
    OUTLINED_FUNCTION_133_1(v44);
    OUTLINED_FUNCTION_133_1(v41);
    OUTLINED_FUNCTION_133_1((uint64_t)v15);
    OUTLINED_FUNCTION_133_1(v57);
  }

  else
  {
    OUTLINED_FUNCTION_77_9();
    OUTLINED_FUNCTION_76_12();
    OUTLINED_FUNCTION_3(v44);
    OUTLINED_FUNCTION_3(v41);
    OUTLINED_FUNCTION_3((uint64_t)v15);
    OUTLINED_FUNCTION_41_2(v57, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
  }

  OUTLINED_FUNCTION_7_5();
}

uint64_t protocol witness for SmsGroup.smsGroupName.getter in conformance UsoEntity_common_Group()
{
  return UsoEntity_common_Group.smsGroupName.getter();
}

void protocol witness for SmsGroup.smsGroupNameId.getter in conformance UsoEntity_common_Group()
{
}

uint64_t UsoEntity_common_App.appName.getter()
{
  uint64_t result = dispatch thunk of UsoEntity_common_App.name.getter();
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease(v1);
    return 0LL;
  }

  return result;
}

void protocol witness for PhoneCallApp.applicationId.getter in conformance UsoEntity_common_App()
{
}

uint64_t protocol witness for PhoneCallApp.appName.getter in conformance UsoEntity_common_App()
{
  return UsoEntity_common_App.appName.getter();
}

uint64_t UsoEntity_common_PhoneCallMode.phoneCallAVMode.getter()
{
  uint64_t v48 = v4;
  uint64_t v49 = v5;
  type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues(0LL);
  OUTLINED_FUNCTION_72_14();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v41 = v7 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UsoEntity_common_PhoneCallMode.DefinedValues?, UsoEntity_common_PhoneCallMode.DefinedValues?));
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v46 = v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v11 = &v39[-v10];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v42 = v12;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  OUTLINED_FUNCTION_70_14();
  __chkstk_darwin();
  OUTLINED_FUNCTION_15();
  uint64_t v45 = v13;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  char v15 = &v39[-v14];
  __chkstk_darwin();
  uint64_t v17 = &v39[-v16];
  uint64_t v18 = __chkstk_darwin();
  uint64_t v20 = &v39[-v19];
  uint64_t v44 = v1;
  dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter(v18);
  uint64_t v47 = v2;
  uint64_t v21 = *(void (**)(_BYTE *, void, uint64_t))(v2 + 104);
  v21(v17, enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Audio(_:), v0);
  OUTLINED_FUNCTION_8_7((uint64_t)v17);
  uint64_t v43 = v8;
  uint64_t v22 = (uint64_t)&v11[*(int *)(v8 + 48)];
  outlined init with copy of TransformationResult?( (uint64_t)v20,  (uint64_t)v11,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  outlined init with copy of TransformationResult?( (uint64_t)v17,  v22,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_3_7((uint64_t)v11);
  if (v24)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v17,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v20,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
    uint64_t v23 = OUTLINED_FUNCTION_3_7(v22);
    if (v24)
    {
      OUTLINED_FUNCTION_64_13( v23,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      return 0LL;
    }

    goto LABEL_9;
  }

  outlined init with copy of TransformationResult?( (uint64_t)v11,  (uint64_t)v15,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_3_7(v22);
  if (v24)
  {
    OUTLINED_FUNCTION_9_19((uint64_t)v17);
    OUTLINED_FUNCTION_9_19((uint64_t)v20);
    uint64_t v23 = OUTLINED_FUNCTION_41_2((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
LABEL_9:
    OUTLINED_FUNCTION_64_13( v23,  &demangling cache variable for type metadata for (UsoEntity_common_PhoneCallMode.DefinedValues?, UsoEntity_common_PhoneCallMode.DefinedValues?));
    goto LABEL_10;
  }

  uint64_t v29 = v47;
  uint64_t v30 = v41;
  OUTLINED_FUNCTION_142(v41, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_PhoneCallMode.DefinedValues and conformance UsoEntity_common_PhoneCallMode.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_PhoneCallMode.DefinedValues);
  int v40 = OUTLINED_FUNCTION_73_17((uint64_t)v15, v30);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v31(v30, v0);
  OUTLINED_FUNCTION_71_12((uint64_t)v17);
  OUTLINED_FUNCTION_71_12((uint64_t)v20);
  v31((uint64_t)v15, v0);
  OUTLINED_FUNCTION_71_12((uint64_t)v11);
  if ((v40 & 1) != 0) {
    return 0LL;
  }
LABEL_10:
  uint64_t v25 = v45;
  dispatch thunk of UsoEntity_common_PhoneCallMode.definedValue.getter(v32);
  v21((_BYTE *)v3, enum case for UsoEntity_common_PhoneCallMode.DefinedValues.common_PhoneCallMode_Video(_:), v0);
  OUTLINED_FUNCTION_8_7(v3);
  uint64_t v26 = v46;
  uint64_t v27 = v46 + *(int *)(v43 + 48);
  outlined init with copy of TransformationResult?( v25,  v46,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  outlined init with copy of TransformationResult?( v3,  v27,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_3_7(v26);
  if (v24)
  {
    OUTLINED_FUNCTION_3(v3);
    OUTLINED_FUNCTION_3(v25);
    OUTLINED_FUNCTION_3_7(v27);
    if (v24)
    {
      outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v26,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
      return 1LL;
    }

    goto LABEL_18;
  }

  outlined init with copy of TransformationResult?( v26,  v42,  &demangling cache variable for type metadata for UsoEntity_common_PhoneCallMode.DefinedValues?);
  OUTLINED_FUNCTION_3_7(v27);
  if (v28)
  {
    OUTLINED_FUNCTION_9_19(v3);
    OUTLINED_FUNCTION_9_19(v25);
    OUTLINED_FUNCTION_41_2(v42, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
LABEL_18:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v26,  &demangling cache variable for type metadata for (UsoEntity_common_PhoneCallMode.DefinedValues?, UsoEntity_common_PhoneCallMode.DefinedValues?));
    return 2LL;
  }

  uint64_t v34 = v47;
  uint64_t v35 = v41;
  OUTLINED_FUNCTION_142(v41, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type UsoEntity_common_PhoneCallMode.DefinedValues and conformance UsoEntity_common_PhoneCallMode.DefinedValues,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_PhoneCallMode.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_PhoneCallMode.DefinedValues);
  uint64_t v36 = v42;
  char v37 = OUTLINED_FUNCTION_73_17(v42, v35);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v38(v35, v0);
  OUTLINED_FUNCTION_3(v3);
  OUTLINED_FUNCTION_3(v25);
  v38(v36, v0);
  OUTLINED_FUNCTION_3(v26);
  if ((v37 & 1) != 0) {
    return 1LL;
  }
  return 2LL;
}

BOOL PhoneNumber.isEmergencyNumber.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  BOOL v3 = *(void *)(v2 + 16) != 0LL;
  swift_bridgeObjectRelease(v2);
  return v3;
}

uint64_t LocalEmergencyCallDisambiguationModel.items.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 16));
}

BOOL PhoneNumberTag.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneNumberTag.init(rawValue:),  v2);
  OUTLINED_FUNCTION_39();
  return v3 != 0;
}

uint64_t PhoneNumberTag.rawValue.getter()
{
  return 0x636E656772656D65LL;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneNumberTag@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = PhoneNumberTag.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneNumberTag(void *a1@<X8>)
{
  *a1 = 0x636E656772656D65LL;
  a1[1] = 0xEF7265626D754E79LL;
}

void *specialized PhoneCallNLv4Contact.__allocating_init(contactConvertible:contactRole:)( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t (**a5)(uint64_t, uint64_t))
{
  uint64_t v9 = *(void *)(a4 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for PhoneCallNLv4Contact();
  uint64_t v13 = (void *)swift_allocObject(v12, 346LL, 7LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  uint64_t v14 = specialized PhoneCallNLv4Contact.init(contactConvertible:contactRole:)((uint64_t)v11, a2, v13, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, a4);
  return v14;
}

uint64_t sub_184644()
{
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 32));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 120LL, 7LL);
}

unint64_t lazy protocol witness table accessor for type PhoneNumberTag and conformance PhoneNumberTag()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneNumberTag and conformance PhoneNumberTag;
  if (!lazy protocol witness table cache variable for type PhoneNumberTag and conformance PhoneNumberTag)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneNumberTag,  &type metadata for PhoneNumberTag);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneNumberTag and conformance PhoneNumberTag);
  }

  return result;
}

void sub_1846D8()
{
  _BYTE *v0 = (*(uint64_t (**)(void))(v1 + 240))();
  OUTLINED_FUNCTION_2();
}

void sub_1846FC()
{
}

void sub_18471C()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 264))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_184744()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 288))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18476C()
{
  _BYTE *v0 = (*(uint64_t (**)(void))(v1 + 312))() & 1;
  OUTLINED_FUNCTION_2();
}

void sub_184794()
{
}

void sub_1847B8()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 336))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_1847E8()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 384))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_184810()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 408))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_184838()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 432))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_184860()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 456))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_184888()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 480))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_1848B0()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 504))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_1848D8()
{
  _BYTE *v0 = (*(uint64_t (**)(void))(v1 + 528))();
  OUTLINED_FUNCTION_2();
}

void sub_1848FC()
{
}

void sub_18491C()
{
  _BYTE *v0 = (*(uint64_t (**)(void))(v1 + 552))() & 1;
  OUTLINED_FUNCTION_2();
}

void sub_184944()
{
}

void sub_184968()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 576))();
  *(_WORD *)uint64_t v0 = v2;
  *(_BYTE *)(v0 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = BYTE2(v2);
  OUTLINED_FUNCTION_2();
}

void sub_184994()
{
}

void sub_1849C0()
{
  void *v0 = (*(uint64_t (**)(void))(v1 + 600))();
  OUTLINED_FUNCTION_2();
}

void sub_1849E8(uint64_t a1)
{
}

void sub_184A10()
{
  _BYTE *v0 = (*(uint64_t (**)(void))(v1 + 648))();
  OUTLINED_FUNCTION_2();
}

void sub_184A34()
{
}

uint64_t assignWithCopy for PhoneCallNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }

uint64_t assignWithTake for PhoneCallNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 16));
  }
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(void *)(a1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneCallNLv4Intent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 104))
    {
      LODWORD(App.__allocating_init(appIdentifier:)(v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(App.__allocating_init(appIdentifier:)(v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallNLv4Intent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(result + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 104) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for PhoneCallNLv4Intent()
{
}

void initializeBufferWithCopyOfBuffer for PhoneNumberImpl(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_2();
}

void type metadata accessor for PhoneNumberImpl()
{
}

uint64_t storeEnumTagSinglePayload for PhoneNumberTag(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_184D98 + 4 * byte_32C260[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_184DB8 + 4 * byte_32C265[v4]))();
  }
}

_BYTE *sub_184D98(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_184DB8(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_184DC0(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_184DC8(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_184DD0(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_184DD8(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void type metadata accessor for PhoneNumberTag()
{
}

uint64_t OUTLINED_FUNCTION_9_52@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void *OUTLINED_FUNCTION_11_53()
{
  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_21(uint64_t a1)
{
  return v3(a1, v2, v1);
}

INPerson OUTLINED_FUNCTION_45_18(void *a1)
{
  return SiriPhoneContact.toINPerson()();
}

uint64_t OUTLINED_FUNCTION_46_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return outlined init with copy of PhoneCallNLv4Intent(v5, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_49_17(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_51_13()
{
  return dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)(1701667182LL, 0xE400000000000000LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_53_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 - 104, v4 - 96, a3, a4);
}

uint64_t OUTLINED_FUNCTION_56_14(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_58_13()
{
  return type metadata accessor for UsoIdentifier(0LL);
}

uint64_t OUTLINED_FUNCTION_62_11(uint64_t a1)
{
  return swift_allocObject(a1, 120LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_63_12()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_68_17( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t *)va);
}

  ;
}

void OUTLINED_FUNCTION_71_12(uint64_t a1)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_73_17(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v2);
}

void *OUTLINED_FUNCTION_75_14()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v1 - 128), v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_77_9()
{
  return UsoIdentifier.value.getter();
}

uint64_t OUTLINED_FUNCTION_81_10@<X0>(unsigned __int8 *a1@<X0>, uint64_t (*a2)(void)@<X8>)
{
  return a2(*a1);
}

void static PhoneReferenceResolution.appsToRrEntities(apps:device:)(uint64_t a1, void *a2)
{
  uint64_t v83 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupIdentifier?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v78 = v3;
  uint64_t v4 = OUTLINED_FUNCTION_65_1();
  uint64_t v5 = type metadata accessor for RREntity(v4);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v91 = (char *)&v73 - v9;
  uint64_t v10 = OUTLINED_FUNCTION_65_1();
  uint64_t v11 = type metadata accessor for Locale(v10);
  uint64_t v81 = *(void *)(v11 - 8);
  uint64_t v82 = v11;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v80 = v12;
  uint64_t v13 = OUTLINED_FUNCTION_65_1();
  uint64_t v14 = type metadata accessor for UsoIdentifier(v13);
  uint64_t v84 = *(void *)(v14 - 8);
  uint64_t v85 = v14;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v92 = v15;
  uint64_t v16 = OUTLINED_FUNCTION_65_1();
  uint64_t v17 = type metadata accessor for UUID(v16);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v21 = (void *)(v20 - v19);
  uint64_t v23 = UUID.init()(v22);
  uint64_t v77 = UUID.uuidString.getter(v23);
  uint64_t v86 = v24;
  (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
  uint64_t v25 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v25; uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v67))
  {
    unint64_t v79 = a1 & 0xC000000000000001LL;
    uint64_t v93 = _swiftEmptyArrayStorage;
    uint64_t v26 = 4LL;
    uint64_t v75 = v8;
    uint64_t v76 = a1;
    uint64_t v74 = v5;
    uint64_t v73 = v25;
    while (1)
    {
      if (v79)
      {
        uint64_t v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v26 - 4, a1);
      }

      else
      {
        uint64_t v8 = *(char **)(a1 + 8 * v26);
        swift_retain();
      }

      if (__OFADD__(v26 - 4, 1LL)) {
        break;
      }
      App.appIdentifier.getter();
      if (!v27)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_50();
        OUTLINED_FUNCTION_30_26();
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v59 = OUTLINED_FUNCTION_15_1();
        uint64_t v60 = (os_log_s *)OUTLINED_FUNCTION_12_1(v59, (uint64_t)static Logger.siriPhone);
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_10(v61))
        {
          uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_1_0();
          *(_WORD *)uint64_t v62 = 0;
          OUTLINED_FUNCTION_5( &dword_0,  v60,  (os_log_type_t)v8,  "#ReferenceResolution appsToRrEntities get unexpected app id during appsToRrEntities, return an empty rrEntities array",  v62);
          OUTLINED_FUNCTION_0_2((uint64_t)v62);
        }

        swift_release(v8);

        goto LABEL_33;
      }

      uint64_t v88 = v26 - 4;
      uint64_t v89 = v26 - 3;
      swift_bridgeObjectRetain();
      uint64_t v28 = OUTLINED_FUNCTION_7_66();
      UsoIdentifier.init(value:appBundleId:namespace:)(v28, v29, v30, v31, 0x64695F6D657469LL, 0xE700000000000000LL);
      uint64_t v32 = type metadata accessor for UsoEntityBuilder_common_App(0LL);
      OUTLINED_FUNCTION_15_2(v32);
      uint64_t v33 = UsoEntityBuilder_common_App.init()();
      uint64_t v34 = v83[3];
      uint64_t v35 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v34);
      uint64_t v36 = v80;
      dispatch thunk of DeviceState.siriLocale.getter(v34, v35);
      uint64_t v37 = type metadata accessor for AppInfoBuilder();
      swift_initStackObject(v37, v94);
      uint64_t v90 = v8;
      uint64_t v38 = AppInfoBuilder.getAppName(_:requestedLocale:)((uint64_t)v8, v36);
      unint64_t v40 = v39;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v36, v82);
      if (v40) {
        uint64_t v41 = v38;
      }
      else {
        uint64_t v41 = 0LL;
      }
      if (!v40) {
        unint64_t v40 = 0xE000000000000000LL;
      }
      os_log_type_t v42 = v33;
      dispatch thunk of UsoEntityBuilder_common_App.setName(value:)(v41, v40);
      uint64_t v43 = OUTLINED_FUNCTION_50();
      uint64_t v44 = dispatch thunk of UsoEntityBuilder_common_App.name.getter(v43);
      if (v44)
      {
        os_log_type_t v42 = v44;
        dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v92);
        OUTLINED_FUNCTION_38_1();
      }

      uint64_t v45 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v33);
      uint64_t v46 = v75;
      if (!v45)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_30_26();
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v63 = OUTLINED_FUNCTION_15_1();
        uint64_t v64 = (os_log_s *)OUTLINED_FUNCTION_12_1(v63, (uint64_t)static Logger.siriPhone);
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (OUTLINED_FUNCTION_10(v65))
        {
          uint64_t v66 = (uint8_t *)OUTLINED_FUNCTION_1_0();
          *(_WORD *)uint64_t v66 = 0;
          OUTLINED_FUNCTION_5( &dword_0,  v64,  v42,  "#ReferenceResolution appsToRrEntities error to convert common app entity builder to common app entity",  v66);
          OUTLINED_FUNCTION_0_2((uint64_t)v66);
        }

        OUTLINED_FUNCTION_35_26();

        OUTLINED_FUNCTION_122();
        OUTLINED_FUNCTION_27_35();
LABEL_33:
        uint64_t v93 = _swiftEmptyArrayStorage;
        goto LABEL_45;
      }

      uint64_t v87 = v33;
      type metadata accessor for GroupIdentifier(0LL);
      uint64_t v47 = v78;
      OUTLINED_FUNCTION_157_1(v78, 1LL);
      swift_retain();
      uint64_t v48 = v91;
      uint64_t v49 = OUTLINED_FUNCTION_7_66();
      RREntity.init(id:appBundleId:usoEntity:dataType:data:group:)(v49);
      uint64_t v50 = v86;
      swift_bridgeObjectRetain();
      GroupIdentifier.init(id:seq:)(v77, v50, v88);
      OUTLINED_FUNCTION_157_1(v47, 0LL);
      uint64_t v51 = v47;
      uint64_t v52 = v93;
      RREntity.group.setter(v51);
      uint64_t v5 = v74;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v46, v48, v74);
      if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v93 = v57;
      }

      uint64_t v53 = v73;
      uint64_t v54 = v89;
      unint64_t v55 = v93[2];
      uint64_t v21 = (void *)(v55 + 1);
      if (v55 >= v93[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v93 = v58;
      }

      unint64_t v56 = v93;
      v93[2] = v21;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))( (unint64_t)v56 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + *(void *)(v6 + 72) * v55,
        v46,
        v5);
      OUTLINED_FUNCTION_31_2();
      swift_release(v87);
      OUTLINED_FUNCTION_35_26();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v91, v5);
      OUTLINED_FUNCTION_27_35();
      ++v26;
      a1 = v76;
      if (v54 == v53) {
        goto LABEL_40;
      }
    }

    __break(1u);
LABEL_35:
    if (a1 < 0) {
      uint64_t v67 = a1;
    }
    else {
      uint64_t v67 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  uint64_t v93 = _swiftEmptyArrayStorage;
LABEL_40:
  OUTLINED_FUNCTION_30_26();
  OUTLINED_FUNCTION_50();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v68 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v68, (uint64_t)static Logger.siriPhone);
  os_log_type_t v69 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v69))
  {
    uint64_t v70 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_31_0(v70);
    OUTLINED_FUNCTION_3_2( &dword_0,  v71,  v72,  "#ReferenceResolution appsToRrEntities successfully generate rrEntities for apps disambigation");
    OUTLINED_FUNCTION_0_2(a1);
  }

LABEL_45:
  OUTLINED_FUNCTION_7_5();
}

void static PhoneReferenceResolution.getContactSourceType(contactSource:)(uint64_t a1, uint64_t a2)
{
  if (a1 != 0xD000000000000016LL || a2 != 0x800000000034C4A0LL)
  {
    uint64_t v4 = OUTLINED_FUNCTION_31_28();
    if ((OUTLINED_FUNCTION_49_2(v4, v5, 0xD000000000000016LL, v6) & 1) == 0
      && (a1 != 0xD000000000000022LL || a2 != 0x80000000003470E0LL))
    {
      uint64_t v7 = OUTLINED_FUNCTION_31_28();
      OUTLINED_FUNCTION_49_2(v7, v8, v9, v10);
    }
  }

  OUTLINED_FUNCTION_6();
}

void static PhoneReferenceResolution.isTelephonyTargetFromSrr(contactSourceType:)(char a1)
{
  if (!a1)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }

  if (a1 == 1) {
    uint64_t v2 = 0x80000000003440E0LL;
  }
  else {
    uint64_t v2 = 0xED00007465677261LL;
  }
  if (a1 == 1) {
    uint64_t v3 = 0xD000000000000012LL;
  }
  else {
    uint64_t v3 = 0x54746C7561666564LL;
  }
  char v4 = OUTLINED_FUNCTION_49_2(v3, v2, 0x6E69737542727273LL, 0xEB00000000737365LL);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    if (a1 == 2) {
      OUTLINED_FUNCTION_49_2(0x54746C7561666564LL, 0xED00007465677261LL, 0xD000000000000012LL, 0x80000000003440E0LL);
    }
    goto LABEL_11;
  }

uint64_t ContactSourceType.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6E69737542727273LL;
  }
  if (a1 == 1) {
    return 0xD000000000000012LL;
  }
  return 0x54746C7561666564LL;
}

uint64_t static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v128 = a3;
  uint64_t v7 = type metadata accessor for PhoneRRTarget.Target(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for MatchedResultsSetting(0LL);
  uint64_t v126 = *(void *)(v11 - 8);
  uint64_t v127 = v11;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RREntity?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for RREntity(0LL);
  uint64_t v130 = *(void *)(v18 - 8);
  uint64_t v131 = v18;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v129 = (os_log_s *)v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v124 = (uint8_t *)&v119 - v22;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v23 = OUTLINED_FUNCTION_15_1();
  uint64_t v24 = (os_log_s *)__swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
  uint64_t v25 = swift_retain_n(a1, 2LL);
  os_log_type_t v125 = v24;
  Logger.logObject.getter(v25);
  os_log_type_t v26 = OUTLINED_FUNCTION_6_0();
  BOOL v27 = os_log_type_enabled(v24, v26);
  uint64_t v122 = v7;
  id v123 = v21;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc(22LL, -1LL);
    uint64_t v121 = a4;
    uint64_t v29 = v28;
    uint64_t v30 = swift_slowAlloc(64LL, -1LL);
    v133[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v120 = v10;
    uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039LL, 0x800000000034C4C0LL, v133);
    uint64_t v32 = OUTLINED_FUNCTION_26_35(v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v32, v33, v34, v35);
    *(_WORD *)(v29 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v132 = a1;
    uint64_t v36 = type metadata accessor for UsoEntity(0LL);
    swift_retain();
    uint64_t v37 = String.init<A>(describing:)(&v132, v36);
    uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, v133);
    uint64_t v40 = OUTLINED_FUNCTION_26_35(v39);
    uint64_t v10 = v120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v40, v41, v42, v43);
    OUTLINED_FUNCTION_0_3();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v24, v26, "#ReferenceResolution %s resolving %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v30, 2LL);
    OUTLINED_FUNCTION_0_2(v30);
    uint64_t v44 = v29;
    a4 = v121;
    OUTLINED_FUNCTION_0_2(v44);
  }

  else
  {

    OUTLINED_FUNCTION_0_3();
  }

  uint64_t v45 = a2[3];
  uint64_t v46 = a2[4];
  unsigned __int8 v47 = __swift_project_boxed_opaque_existential_1(a2, v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v14, v128, v127);
  uint64_t v48 = type metadata accessor for ResolveQuery(0LL);
  OUTLINED_FUNCTION_15_2(v48);
  uint64_t v49 = swift_retain();
  uint64_t v50 = ResolveQuery.init(referenceEntity:alternativeEntityTypes:restrictedEntitiesKey:matchedResultsSetting:)( v49,  0LL,  0LL,  0LL,  v14);
  os_log_type_t v51 = v47;
  RRReferenceResolverProtocol.resolveEntity(resolveQuery:)( v50,  v45,  v46,  v52,  v53,  v54,  v55,  v56,  v119,  v120,  v121,  v122,  (uint64_t)v123,  (uint64_t)v124,  (uint64_t)v125,  v126,  v127,  v128,  (uint64_t)v129,  v130);
  swift_release(v50);
  uint64_t v57 = v131;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v17, 1LL, v131);
  uint64_t v59 = v129;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of UUID?(v17, &demangling cache variable for type metadata for RREntity?);
    uint64_t v60 = (os_log_s *)OUTLINED_FUNCTION_12_53();
    os_log_type_t v62 = static os_log_type_t.debug.getter(v60, v61);
    if (OUTLINED_FUNCTION_10(v62))
    {
      uint64_t v63 = (uint8_t *)OUTLINED_FUNCTION_1_0();
      *(_WORD *)uint64_t v63 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v60, v51, "#ReferenceResolution no entity found", v63);
      OUTLINED_FUNCTION_0_2((uint64_t)v63);
    }

    goto LABEL_26;
  }

  (*(void (**)(os_log_s *, uint64_t, uint64_t))(v130 + 32))(v129, v17, v57);
  static Signpost.begin(_:)();
  uint64_t v128 = v64;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v69 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
  uint64_t v70 = (void *)RREntity.convertData<A>(to:)(v69, v69);
  Signpost.OpenSignpost.end()();
  if (v70)
  {
    id v71 = v70;
    OUTLINED_FUNCTION_12_53();
    os_log_type_t v72 = OUTLINED_FUNCTION_6_0();
    BOOL v73 = OUTLINED_FUNCTION_29_4(v72);
    uint64_t v74 = (uint64_t)v123;
    if (v73)
    {
      uint64_t v75 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_60_0(v75);
      OUTLINED_FUNCTION_5(&dword_0, v59, (os_log_type_t)v66, "#ReferenceResolution resolved to an INPerson", v68);
      OUTLINED_FUNCTION_0_2((uint64_t)v68);
    }

    uint64_t v76 = v124;
    *(void *)id v124 = v71;
    uint64_t v77 = v76;
    uint64_t v66 = v122;
    uint64_t v78 = v122;
    uint64_t v79 = 0LL;
    goto LABEL_23;
  }

  OUTLINED_FUNCTION_25_36();
  uint64_t v80 = OUTLINED_FUNCTION_20_35();
  uint64_t v81 = type metadata accessor for UsoEntity_common_Person(v80);
  OUTLINED_FUNCTION_2_60(v81);
  OUTLINED_FUNCTION_38_1();
  uint64_t v82 = v133[0];
  uint64_t v74 = (uint64_t)v123;
  uint64_t v76 = v124;
  if (v133[0])
  {
    OUTLINED_FUNCTION_12_53();
    os_log_type_t v83 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_4(v83))
    {
      uint64_t v84 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_60_0(v84);
      OUTLINED_FUNCTION_5(&dword_0, v59, (os_log_type_t)v66, "#ReferenceResolution resolved to a common_Person", v76);
      uint64_t v85 = (uint64_t)v76;
      uint64_t v76 = v124;
      OUTLINED_FUNCTION_0_2(v85);
    }

    UsoEntity_common_Person.toContactQuery()(v86);
LABEL_18:
    swift_release(v82);
    uint64_t v77 = v76;
    uint64_t v66 = v122;
    uint64_t v78 = v122;
    uint64_t v79 = 2LL;
    goto LABEL_23;
  }

  OUTLINED_FUNCTION_25_36();
  uint64_t v87 = OUTLINED_FUNCTION_20_35();
  uint64_t v88 = type metadata accessor for UsoEntity_common_Group(v87);
  OUTLINED_FUNCTION_2_60(v88);
  OUTLINED_FUNCTION_38_1();
  uint64_t v76 = (uint8_t *)v133[0];
  if (v133[0])
  {
    OUTLINED_FUNCTION_12_53();
    os_log_type_t v89 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v89))
    {
      uint64_t v90 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_31_0(v90);
      OUTLINED_FUNCTION_3_2(&dword_0, v91, v92, "#ReferenceResolution resolved to a common_Group");
      OUTLINED_FUNCTION_0_2(v66);
    }

    uint64_t v77 = OUTLINED_FUNCTION_19_34();
    uint64_t v79 = 1LL;
    goto LABEL_23;
  }

  OUTLINED_FUNCTION_25_36();
  uint64_t v103 = OUTLINED_FUNCTION_20_35();
  uint64_t v104 = type metadata accessor for UsoEntity_common_Agent(v103);
  OUTLINED_FUNCTION_2_60(v104);
  OUTLINED_FUNCTION_38_1();
  uint64_t v82 = v133[0];
  if (v133[0])
  {
    OUTLINED_FUNCTION_12_53();
    os_log_type_t v105 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_4(v105))
    {
      uint64_t v106 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_60_0(v106);
      OUTLINED_FUNCTION_5(&dword_0, v59, (os_log_type_t)v66, "#ReferenceResolution resolved to a common_Agent", 0LL);
      OUTLINED_FUNCTION_0_2(0LL);
    }

    uint64_t v76 = v124;
    UsoEntity_common_Agent.toContactQuery()();
    goto LABEL_18;
  }

  OUTLINED_FUNCTION_25_36();
  uint64_t v107 = OUTLINED_FUNCTION_20_35();
  uint64_t v108 = type metadata accessor for UsoEntity_common_App(v107);
  OUTLINED_FUNCTION_2_60(v108);
  OUTLINED_FUNCTION_38_1();
  uint64_t v76 = (uint8_t *)v133[0];
  if (!v133[0])
  {
    uint64_t v113 = (void *)OUTLINED_FUNCTION_12_53();
    os_log_type_t v114 = static os_log_type_t.error.getter();
    BOOL v115 = OUTLINED_FUNCTION_7(v114);
    uint64_t v76 = v124;
    if (v115)
    {
      unint64_t v116 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_31_0(v116);
      OUTLINED_FUNCTION_3_2( &dword_0,  v117,  v118,  "#ReferenceResolution resolved entity was not recognized as a person or group");
      OUTLINED_FUNCTION_0_2(v66);
    }

    uint64_t v93 = 1LL;
    uint64_t v66 = v122;
    goto LABEL_24;
  }

  OUTLINED_FUNCTION_12_53();
  os_log_type_t v109 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v109))
  {
    uint64_t v110 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_31_0(v110);
    OUTLINED_FUNCTION_3_2(&dword_0, v111, v112, "#ReferenceResolution resolved to a common_app");
    OUTLINED_FUNCTION_0_2(v66);
  }

  uint64_t v77 = OUTLINED_FUNCTION_19_34();
  uint64_t v79 = 3LL;
LABEL_23:
  swift_storeEnumTagMultiPayload(v77, v78, v79);
  uint64_t v93 = 0LL;
LABEL_24:
  uint64_t v94 = __swift_storeEnumTagSinglePayload((uint64_t)v76, v93, 1LL, v66);
  uint64_t v95 = RREntity.appBundleId.getter(v94);
  static PhoneReferenceResolution.getContactSourceType(contactSource:)(v95, v96);
  char v98 = v97;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_35_26();

  (*(void (**)(os_log_s *, uint64_t))(v130 + 8))(v59, v57);
  outlined init with take of PhoneRRTarget.Target?((uint64_t)v76, v74);
  if (__swift_getEnumTagSinglePayload(v74, 1LL, v66) != 1)
  {
    outlined init with take of PhoneRRTarget.Target(v74, v10);
    outlined init with take of PhoneRRTarget.Target(v10, a4);
    uint64_t v99 = type metadata accessor for PhoneRRTarget(0LL);
    *(_BYTE *)(a4 + *(int *)(v99 + 20)) = v98;
    uint64_t v100 = a4;
    uint64_t v101 = 0LL;
    return __swift_storeEnumTagSinglePayload(v100, v101, 1LL, v99);
  }

  outlined destroy of UUID?(v74, &demangling cache variable for type metadata for PhoneRRTarget.Target?);
LABEL_26:
  uint64_t v99 = type metadata accessor for PhoneRRTarget(0LL);
  uint64_t v100 = a4;
  uint64_t v101 = 1LL;
  return __swift_storeEnumTagSinglePayload(v100, v101, 1LL, v99);
}

uint64_t PhoneRRTarget.init(target:source:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result = type metadata accessor for PhoneRRTarget(0LL);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

void static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void (*v47)(__int128 *__return_ptr, __int128 *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66[2];
  __int128 v67[2];
  uint64_t v68;
  uint64_t v58 = a4;
  uint64_t v59 = a6;
  os_log_type_t v62 = a3;
  uint64_t v63 = a2;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  uint64_t v60 = *(void *)(v64 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v65 = v10;
  uint64_t v11 = OUTLINED_FUNCTION_65_1();
  type metadata accessor for MatchedResultsSetting(v11);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 144))(v15, v16);
  OUTLINED_FUNCTION_39_14(v68, enum case for MatchedResultsSetting.defaultMatching(_:));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (PhoneCallNLIntent.hasOnlyCallVerb()())
  {
    uint64_t v17 = static UsoUtils.buildDummyReferenceEntity()();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
      unint64_t v21 = *(void *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v20 = *(void *)((char *)&dword_18 + (v68 & 0xFFFFFFFFFFFFFF8LL));
      if (v21 >= v20 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1LL);
      }
      uint64_t v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
      specialized Array._endMutation()(v22, v23, v24, v25);
      OUTLINED_FUNCTION_122();
      uint64_t v26 = OUTLINED_FUNCTION_28_32();
      OUTLINED_FUNCTION_39_14(v26, enum case for MatchedResultsSetting.extremelySalientResultsOnly(_:));
    }
  }

  if ((unint64_t)v68 >> 62)
  {
    if (v68 < 0) {
      uint64_t v52 = v68;
    }
    else {
      uint64_t v52 = v68 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_3();
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease();
    if (!v53) {
      goto LABEL_28;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFF8LL)))
  {
    goto LABEL_28;
  }

  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v28 = outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
  if (v29) {
    uint64_t v30 = v28;
  }
  else {
    uint64_t v30 = 0LL;
  }
  if (v29) {
    uint64_t v31 = v29;
  }
  else {
    uint64_t v31 = 0xE000000000000000LL;
  }
  uint64_t v32 = __chkstk_darwin();
  *(&v57 - 4) = (uint64_t)&v68;
  *(&v57 - __swift_destroy_boxed_opaque_existential_1(v0 + 3) = a5;
  *(&v57 - __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v14;
  static SiriKitEventSender.current.getter(v67, v32);
  uint64_t v33 = specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)( 302,  v30,  v31,  (uint64_t)v67,  (void (*)(uint64_t *__return_ptr))partial apply for closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:));
  uint64_t v35 = v34;
  uint64_t v61 = v36;
  uint64_t v57 = v37;
  __swift_destroy_boxed_opaque_existential_1(v67);
  if (!v33) {
    goto LABEL_27;
  }
  uint64_t v38 = a7[3];
  uint64_t v39 = a7[4];
  __swift_project_boxed_opaque_existential_1(a7, v38);
  type metadata accessor for SiriKitEvent(0LL);
  LOBYTE(v67[0]) = 0;
  uint64_t v40 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v30,  v31,  31LL,  closure #2 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:),  0LL);
  dispatch thunk of SiriKitEventSending.send(_:)(v40, v38, v39);
  OUTLINED_FUNCTION_122();
  if ((unint64_t)v33 >> 62)
  {
    if (v33 >= 0) {
      uint64_t v54 = v33 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v54 = v33;
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v41 = *(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8LL));
  }

  uint64_t v42 = v64;
  uint64_t v43 = v61;
  if (v41)
  {
    uint64_t v44 = OUTLINED_FUNCTION_43_14();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 + 8) + 16LL))(v33, v44);
  }

  if ((unint64_t)v43 >> 62)
  {
    if (v43 >= 0) {
      uint64_t v55 = v43 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v55 = v43;
    }
    swift_bridgeObjectRetain();
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease();
    if (!v56) {
      goto LABEL_26;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8LL)))
  {
    goto LABEL_26;
  }

  outlined init with copy of SharedGlobalsProviding(v58, (uint64_t)v67);
  outlined init with copy of SharedGlobalsProviding(v59, (uint64_t)v66);
  uint64_t v45 = swift_allocObject(&unk_405A80, 96LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(v67, v45 + 16);
  outlined init with take of AppSelectionSignalComponent(v66, v45 + 56);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:),  v45,  v46);
  unsigned __int8 v47 = (void (*)(__int128 *__return_ptr, __int128 *))Transformer.transform.getter(v42);
  specialized _arrayForceCast<A, B>(_:)();
  *(void *)&v67[0] = v48;
  v47(v66, v67);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_38_1();
  uint64_t v49 = *(void *)&v66[0];
  if (*(void *)&v66[0])
  {
    uint64_t v50 = OUTLINED_FUNCTION_43_14();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 + 8) + 32LL))(v49, v50);
    swift_bridgeObjectRelease();
  }

  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v65, v42);
LABEL_26:
  os_log_type_t v51 = *(void *)(v35 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v51) {
LABEL_27:
  }
    swift_bridgeObjectRelease();
LABEL_28:
  OUTLINED_FUNCTION_28_32();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MatchedResultsSetting(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:)( v10,  a1,  (uint64_t)v9);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v11;
  a3[1] = v13;
  a3[2] = v15;
  a3[3] = v17;
  return result;
}

void *static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = type metadata accessor for ContactQuery(0LL);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v7 = (char *)v20 - v6;
  __chkstk_darwin();
  uint64_t v9 = (char *)v20 - v8;
  uint64_t v21 = type metadata accessor for PhoneRRTarget.Target(0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for PhoneRRTarget(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v30 = (uint64_t)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  specialized Sequence.compactMap<A>(_:)( (uint64_t)partial apply for closure #1 in static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:),  (uint64_t)v32,  a1);
  uint64_t v36 = _swiftEmptyArrayStorage;
  uint64_t v37 = _swiftEmptyArrayStorage;
  uint64_t v35 = _swiftEmptyArrayStorage;
  if (*(void *)(v15 + 16))
  {
    uint64_t v26 = v15 + ((*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v31 = _swiftEmptyArrayStorage;
    v20[1] = v7;
    v20[0] = v9;
    uint64_t v16 = v21;
    uint64_t v22 = v11;
    uint64_t v23 = v12;
    uint64_t v24 = v15;
    uint64_t v25 = v13;
    if (*(void *)(v15 + 16))
    {
      uint64_t v28 = 1LL;
      uint64_t v17 = v30;
      outlined init with copy of PhoneRRTarget.Target(v26, v30);
      outlined init with copy of PhoneRRTarget.Target(v17, (uint64_t)v11);
      uint64_t v18 = (char *)&loc_1867A4 + *((int *)qword_186F38 + swift_getEnumCaseMultiPayload(v11, v16));
      __asm { BR              X9 }
    }

    __break(1u);
    JUMPOUT(0x186F30LL);
  }

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)()
{
  void (*v1)(uint64_t *__return_ptr);
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _BYTE v9[96];
  void v10[5];
  OUTLINED_FUNCTION_23_33();
  outlined init with copy of SharedGlobalsProviding(v4, (uint64_t)v10);
  uint64_t v5 = type metadata accessor for PhoneSelfPerformanceLogger();
  swift_initStackObject(v5, v9);
  OUTLINED_FUNCTION_6_3();
  PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)(v10, v3, v2, v0);
  v1(&v8);
  uint64_t v6 = v8;
  OUTLINED_FUNCTION_31_2();
  return v6;
}

__n128 specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)()
{
  void (*v1)(_OWORD *__return_ptr);
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __n128 result;
  __n128 v11;
  __int128 v12;
  _OWORD v13[2];
  uint64_t v14;
  char v15;
  _BYTE v16[96];
  void v17[5];
  OUTLINED_FUNCTION_23_33();
  uint64_t v5 = v4;
  outlined init with copy of SharedGlobalsProviding(v6, (uint64_t)v17);
  uint64_t v7 = type metadata accessor for PhoneSelfPerformanceLogger();
  swift_initStackObject(v7, v16);
  OUTLINED_FUNCTION_6_3();
  PhoneSelfPerformanceLogger.init(siriKitEventSender:domainExecutionType:taskType:)(v17, v3, v2, v0);
  v1(v13);
  uint64_t v11 = (__n128)v13[1];
  uint64_t v12 = v13[0];
  uint64_t v8 = v14;
  uint64_t v9 = v15;
  OUTLINED_FUNCTION_31_2();
  uint64_t result = v11;
  *(_OWORD *)uint64_t v5 = v12;
  *(__n128 *)(v5 + 16) = v11;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  *(_BYTE *)(v5 + 40) = v9;
  return result;
}

uint64_t closure #2 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)()
{
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter(v0);
}

void PhoneRRTarget.target.getter(uint64_t a1@<X8>)
{
}

uint64_t PhoneRRTarget.source.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PhoneRRTarget(0LL) + 20));
}

PhoneCallFlowDelegatePlugin::ContactSourceType_optional __swiftcall ContactSourceType.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of ContactSourceType.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::ContactSourceType_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ContactSourceType_optional)v3;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ContactSourceType()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance ContactSourceType()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ContactSourceType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ContactSourceType(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::ContactSourceType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ContactSourceType@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ContactSourceType_optional *a2@<X8>)
{
  result.value = ContactSourceType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ContactSourceType@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = ContactSourceType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t outlined bridged method (pb) of @objc static INIntent.typeName()(void *a1)
{
  id v1 = [a1 typeName];
  if (!v1) {
    return 0LL;
  }
  Swift::String v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t type metadata accessor for PhoneRRTarget.Target(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneRRTarget.Target,  (uint64_t)&nominal type descriptor for PhoneRRTarget.Target);
}

uint64_t type metadata accessor for PhoneRRTarget(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneRRTarget,  (uint64_t)&nominal type descriptor for PhoneRRTarget);
}

uint64_t outlined init with take of PhoneRRTarget.Target?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneRRTarget.Target?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of PhoneRRTarget.Target(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneRRTarget.Target(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)@<X0>( void *a1@<X8>)
{
  return closure #1 in static PhoneReferenceResolution.resolveUpdateSKIntent(nlIntent:siriKitIntent:deviceState:referenceResolver:contactGroupResolver:siriKitEventSender:)( *(void *)(v1 + 24),  *(void *)(v1 + 32),  a1);
}

uint64_t sub_187388()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

unint64_t lazy protocol witness table accessor for type ContactSourceType and conformance ContactSourceType()
{
  unint64_t result = lazy protocol witness table cache variable for type ContactSourceType and conformance ContactSourceType;
  if (!lazy protocol witness table cache variable for type ContactSourceType and conformance ContactSourceType)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ContactSourceType,  &type metadata for ContactSourceType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ContactSourceType and conformance ContactSourceType);
  }

  return result;
}

ValueMetadata *type metadata accessor for PhoneReferenceResolution()
{
  return &type metadata for PhoneReferenceResolution;
}

uint64_t initializeBufferWithCopyOfBuffer for PhoneRRTarget(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = type metadata accessor for PhoneRRTarget.Target(0LL);
    uint64_t v7 = (char *)&loc_187460 + 4 * byte_32C470[swift_getEnumCaseMultiPayload(a2, v6)];
    __asm { BR              X10 }
  }

  uint64_t v8 = *a2;
  *a1 = *a2;
  uint64_t v9 = v8 + ((v5 + 16LL) & ~(unint64_t)v5);
  swift_retain();
  return v9;
}

void destroy for PhoneRRTarget(id *a1)
{
  uint64_t v2 = type metadata accessor for PhoneRRTarget.Target(0LL);
  switch(swift_getEnumCaseMultiPayload(a1, v2))
  {
    case 0u:

      break;
    case 1u:
    case 3u:
      swift_release(*a1);
      break;
    case 2u:
      uint64_t v3 = type metadata accessor for ContactQuery(0LL);
      (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
      break;
    default:
      return;
  }

void initializeWithCopy for PhoneRRTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PhoneRRTarget.Target(0LL);
  uint64_t v4 = (char *)sub_18760C + 4 * byte_32C478[swift_getEnumCaseMultiPayload(a2, v3)];
  __asm { BR              X10 }

void **sub_18760C()
{
  uint64_t v4 = *v1;
  unsigned __int8 *v0 = *v1;
  id v5 = v4;
  swift_storeEnumTagMultiPayload(v0, v3, 0LL);
  *((_BYTE *)v0 + *(int *)(v2 + 20)) = *((_BYTE *)v1 + *(int *)(v2 + 20));
  return v0;
}

uint64_t assignWithCopy for PhoneRRTarget(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    outlined destroy of MainFlow(result, type metadata accessor for PhoneRRTarget.Target);
    uint64_t v4 = type metadata accessor for PhoneRRTarget.Target(0LL);
    id v5 = (char *)&loc_187718 + 4 * byte_32C47C[swift_getEnumCaseMultiPayload(a2, v4)];
    __asm { BR              X10 }
  }

  *(_BYTE *)(result + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return result;
}

void *initializeWithTake for PhoneRRTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PhoneRRTarget.Target(0LL);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 2)
  {
    uint64_t v7 = type metadata accessor for ContactQuery(0LL);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 2LL);
  }

  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64LL));
  }

  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for PhoneRRTarget(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of MainFlow((uint64_t)a1, type metadata accessor for PhoneRRTarget.Target);
    uint64_t v6 = type metadata accessor for PhoneRRTarget.Target(0LL);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 2)
    {
      uint64_t v7 = type metadata accessor for ContactQuery(0LL);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 2LL);
    }

    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64LL));
    }
  }

  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneRRTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_187928);
}

void sub_187928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneRRTarget.Target(0LL);
  if (*(_DWORD *)(*(void *)(v4 - 8) + 84LL) == (_DWORD)a2) {
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  }
  else {
    OUTLINED_FUNCTION_6();
  }
}

uint64_t storeEnumTagSinglePayload for PhoneRRTarget(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1879AC);
}

uint64_t sub_1879AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_20_35();
  uint64_t result = type metadata accessor for PhoneRRTarget.Target(v8);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return __swift_storeEnumTagSinglePayload(v4, a2, a2, result);
  }
  *(_BYTE *)(v4 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t type metadata completion function for PhoneRRTarget(uint64_t a1)
{
  uint64_t result = type metadata accessor for PhoneRRTarget.Target(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_32C568;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PhoneRRTarget.Target(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v4 & 0x20000) == 0)
  {
    id v5 = (char *)&loc_187ADC + 4 * byte_32C480[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }

  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = v6 + ((v4 + 16LL) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

void destroy for PhoneRRTarget.Target(id *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:

      break;
    case 1u:
    case 3u:
      swift_release(*a1);
      break;
    case 2u:
      uint64_t v3 = type metadata accessor for ContactQuery(0LL);
      (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
      break;
    default:
      return;
  }

void initializeWithCopy for PhoneRRTarget.Target(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (char *)sub_187C60 + 4 * byte_32C488[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }

void **sub_187C60()
{
  uint64_t v3 = *v2;
  unsigned __int8 *v0 = *v2;
  id v4 = v3;
  swift_storeEnumTagMultiPayload(v0, v1, 0LL);
  return v0;
}

uint64_t assignWithCopy for PhoneRRTarget.Target(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    outlined destroy of MainFlow(result, type metadata accessor for PhoneRRTarget.Target);
    id v5 = (char *)&loc_187D54 + 4 * byte_32C48C[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }

  return result;
}

void *initializeWithTake for PhoneRRTarget.Target(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
  {
    uint64_t v6 = type metadata accessor for ContactQuery(0LL);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 2LL);
  }

  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

void *assignWithTake for PhoneRRTarget.Target(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of MainFlow((uint64_t)a1, type metadata accessor for PhoneRRTarget.Target);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
    {
      uint64_t v6 = type metadata accessor for ContactQuery(0LL);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 2LL);
    }

    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }
  }

  return a1;
}

uint64_t type metadata completion function for PhoneRRTarget.Target(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for ContactQuery(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 4LL, v4);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for ContactSourceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_187FE8 + 4 * byte_32C495[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18801C + 4 * byte_32C490[v4]))();
}

uint64_t sub_18801C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_188024(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18802CLL);
  }
  return result;
}

uint64_t sub_188038(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x188040LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_188044(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18804C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactSourceType()
{
  return &type metadata for ContactSourceType;
}

uint64_t partial apply for closure #1 in static PhoneReferenceResolution.resolveEntities(_:referenceResolver:matchedResultsSetting:)@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return static PhoneReferenceResolution.resolveEntity(_:referenceResolver:matchedResultsSetting:)( *a1,  *(void **)(v2 + 16),  *(void *)(v2 + 24),  a2);
}

void outlined init with copy of PhoneRRTarget.Target(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_20_35();
  uint64_t v6 = v5(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a2, v2, v6);
  OUTLINED_FUNCTION_2();
}

void *OUTLINED_FUNCTION_2_60(uint64_t a1)
{
  return static UsoEntity_CodeGenConverter.convertAs<A>(entity:asType:)((void *)(v2 - 96), v1, a1, a1);
}

uint64_t OUTLINED_FUNCTION_7_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_53()
{
  return Logger.logObject.getter();
}

void *OUTLINED_FUNCTION_19_34()
{
  uint64_t v2 = *(void **)(v1 - 168);
  void *v2 = v0;
  return v2;
}

uint64_t OUTLINED_FUNCTION_20_35()
{
  return 0LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_26_35(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_28_32()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_30_26()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 168));
}

uint64_t OUTLINED_FUNCTION_31_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_26()
{
  return swift_release(*(void *)(v0 - 136));
}

uint64_t OUTLINED_FUNCTION_39_14(uint64_t a1, uint64_t a2)
{
  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_43_14()
{
  return swift_getObjectType(*(void *)(v0 - 208));
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF( void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v45 = a5;
  uint64_t v46 = a8;
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v44 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v54 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v49 = (char *)&v40 - v16;
  uint64_t v17 = a4;
  __chkstk_darwin(v15);
  uint64_t v48 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = swift_getAssociatedTypeWitness(0LL);
  uint64_t v47 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v43 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v50 = v8;
  uint64_t v24 = a6;
  uint64_t v25 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v25) {
    return static Array._allocateUninitialized(_:)(0LL, v17);
  }
  Swift::Int v26 = v25;
  uint64_t v41 = v19;
  uint64_t v27 = v14;
  uint64_t v58 = ContiguousArray.init()(v17);
  uint64_t v51 = type metadata accessor for ContiguousArray(0LL, v17);
  ContiguousArray.reserveCapacity(_:)(v26);
  uint64_t v42 = v23;
  uint64_t v28 = a3;
  uint64_t v29 = v50;
  uint64_t v30 = v28;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v26 < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v55 = v24;
    uint64_t v33 = v48;
    uint64_t v32 = v49;
    uint64_t v34 = v42;
    while (1)
    {
      uint64_t v35 = (void (*)(_BYTE *, void))dispatch thunk of Collection.subscript.read(v57, v34, v30, v55);
      (*(void (**)(char *))(v27 + 16))(v32);
      v35(v57, 0LL);
      uint64_t v36 = v56;
      v52(v32, v54);
      if (v36) {
        break;
      }
      uint64_t v56 = 0LL;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v32, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v33, v51);
      dispatch thunk of Collection.formIndex(after:)(v34, v30, v55);
      if (!--v26)
      {
        uint64_t v37 = v47;
        uint64_t v38 = v43;
        uint64_t v39 = v41;
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v43, v34, v41);
        _expectEnd<A>(of:is:)(v29, v38, v30, v55);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
        return v58;
      }
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v41);
    swift_release(v58);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v46, v54, v45);
  }

  return result;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.__allocating_init(promptProvider:sharedGlobals:)( uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = a1;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = OUTLINED_FUNCTION_13_56();
  uint64_t v9 = OUTLINED_FUNCTION_13_56();
  uint64_t v25 = type metadata accessor for PhoneCallBaseCatTemplatingService(0LL, v8, v9, v10);
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_12_54();
  default argument 0 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  OUTLINED_FUNCTION_12_54();
  default argument 2 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  OUTLINED_FUNCTION_12_54();
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v11 = OUTLINED_FUNCTION_12_54();
  default argument 4 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( v13,  v11,  v12);
  uint64_t v14 = OUTLINED_FUNCTION_12_54();
  default argument 6 of UnsupportedFaceTimeOutputProvider.init(unsupportedPhoneCall:sharedGlobals:startCallCats:startCallCATsSimple:phoneCallDisplayTextCATsSimple:unsupportedFlowCats:labelTemplates:)( v16,  v14,  v15);
  OUTLINED_FUNCTION_12_54();
  default argument 6 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  PhoneCallBaseCatTemplatingService.__allocating_init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v18 = v17;
  uint64_t v20 = v26;
  uint64_t v19 = v27;
  uint64_t v21 = OUTLINED_FUNCTION_95_3();
  v22(v21);
  OUTLINED_FUNCTION_28_33();
  uint64_t v23 = (*(uint64_t (**)(char *, _BYTE *, uint64_t, void, uint64_t))(v3 + 200))(v7, v28, v18, 0LL, 255LL);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v5);
  return v23;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.authenticationPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + direct field offset for ContactNeedsDisambiguationFlowStrategy.authenticationPolicy;
  uint64_t v4 = OUTLINED_FUNCTION_29_27();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t ContactNeedsDisambiguationFlowStrategy.promptProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80LL) - 8LL) + 16LL))( a1,  v1 + *(void *)(*(void *)v1 + 112LL));
}

uint64_t ContactNeedsDisambiguationFlowStrategy.sharedGlobals.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + *(void *)(*(void *)v1 + 120LL), a1);
}

uint64_t ContactNeedsDisambiguationFlowStrategy.templatingService.getter()
{
  return swift_retain(*(void *)(v0 + *(void *)(*(void *)v0 + 128LL)));
}

uint64_t ContactNeedsDisambiguationFlowStrategy.referenceResolver.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + *(void *)(*(void *)v1 + 136LL), a1);
}

void key path setter for ContactNeedsDisambiguationFlowStrategy.cachedPromptResponse : <A>ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)a2 + *(void *)(**(void **)a2 + 144LL);
  unsigned __int8 v4 = *(_BYTE *)(a1 + 8);
  swift_beginAccess(v3, v7, 1LL, 0LL);
  uint64_t v5 = *(void **)v3;
  *(void *)uint64_t v3 = v2;
  unsigned __int8 v6 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(v3 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  outlined copy of ContactDisambiguationPromptResponse?(v2, v4);
  outlined consume of ContactDisambiguationPromptResponse?(v5, v6);
}

id ContactNeedsDisambiguationFlowStrategy.cachedPromptResponse.getter()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144LL);
  swift_beginAccess(v1, v4, 0LL, 0LL);
  id v2 = *(id *)v1;
  outlined copy of ContactDisambiguationPromptResponse?(*(id *)v1, *(_BYTE *)(v1 + 8));
  return v2;
}

id outlined copy of ContactDisambiguationPromptResponse?(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    return outlined copy of ContactDisambiguationPromptResponse(result, a2);
  }
  return result;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.__allocating_init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  ContactNeedsDisambiguationFlowStrategy.init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)( a1,  a2,  a3,  a4,  a5);
  return v11;
}

uint64_t *ContactNeedsDisambiguationFlowStrategy.init(promptProvider:sharedGlobals:templatingService:cachedPromptResponse:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned __int8 v6 = v5;
  uint64_t v12 = *v6;
  static UnlockDevicePolicy.default.getter(a1);
  *(uint64_t *)((char *)v6 + direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate) = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v13 = (uint64_t)v6 + *(void *)(*v6 + 144);
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = -1;
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(v12 + 80) - 8LL) + 16LL))( (uint64_t)v6 + *(void *)(*v6 + 112),  a1,  *(void *)(v12 + 80));
  outlined init with copy of SignalProviding((uint64_t)a2, (uint64_t)v6 + *(void *)(*v6 + 120));
  *(uint64_t *)((char *)v6 + *(void *)(*v6 + 128)) = a3;
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 72))(v14, v15);
  uint64_t v17 = OUTLINED_FUNCTION_95_3();
  v18(v17);
  outlined init with copy of SignalProviding(v16 + 120, (uint64_t)v23);
  OUTLINED_FUNCTION_38_1();
  outlined init with take of AppSelectionSignalComponent(v23, (uint64_t)v6 + *(void *)(*v6 + 136));
  uint64_t v19 = (uint64_t)v6 + *(void *)(*v6 + 144);
  OUTLINED_FUNCTION_3_3(v19, (uint64_t)v23);
  uint64_t v20 = *(void **)v19;
  *(void *)uint64_t v19 = a4;
  unsigned __int8 v21 = *(_BYTE *)(v19 + 8);
  *(_BYTE *)(v19 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a5;
  outlined consume of ContactDisambiguationPromptResponse?(v20, v21);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v6;
}

void ContactNeedsDisambiguationFlowStrategy.actionForInput(_:resolveRecord:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Parse(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(v0 + direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate);
  outlined init with copy of SignalProviding(v1 + *(void *)(*(void *)v1 + 136LL), (uint64_t)&v20);
  outlined init with copy of SignalProviding(v1 + *(void *)(*(void *)v1 + 120LL), (uint64_t)&v21);
  uint64_t v19 = v6;
  uint64_t v7 = swift_bridgeObjectRetain();
  Input.parse.getter(v7);
  uint64_t v8 = ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)((uint64_t)v5);
  LOBYTE(OUTLINED_FUNCTION_9_39(v4, v5, v6) = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  outlined destroy of ContactDisambiguationPromptResponseParser((uint64_t)&v19);
  uint64_t v10 = v1 + *(void *)(*(void *)v1 + 144LL);
  OUTLINED_FUNCTION_3_3(v10, (uint64_t)&v19);
  uint64_t v11 = *(void **)v10;
  *(void *)uint64_t v10 = v8;
  unsigned __int8 v12 = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(v10 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  outlined consume of ContactDisambiguationPromptResponse?(v11, v12);
  uint64_t v13 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 176LL))();
  switch(v14)
  {
    case 0u:
      if (v13 - 1 < 2)
      {
        OUTLINED_FUNCTION_27_36();
        static ActionForInput.cancel()(v17);
      }

      else
      {
        if ((_BYTE)v13)
        {
          if (v13 != 6)
          {
            unsigned __int8 v14 = 0;
            goto LABEL_17;
          }

          static ActionForInput.ignore()(v13);
        }

        else
        {
          static ActionForInput.handle()(v13);
        }

        OUTLINED_FUNCTION_27_36();
      }

      return;
    case 1u:
      unsigned __int8 v15 = 1;
      goto LABEL_12;
    case 2u:
      goto LABEL_17;
    case 3u:
      unsigned __int8 v15 = 3;
      goto LABEL_12;
    case 4u:
      if (v13) {
        goto LABEL_17;
      }
      uint64_t v13 = 0LL;
      unsigned __int8 v15 = 4;
LABEL_12:
      outlined consume of ContactDisambiguationPromptResponse?(v13, v15);
      static ActionForInput.handle()(v16);
      break;
    default:
      if (v14 == 255) {
        goto LABEL_18;
      }
LABEL_17:
      outlined consume of ContactDisambiguationPromptResponse?(v13, v14);
LABEL_18:
      static ActionForInput.ignore()(v13);
      break;
  }

uint64_t ContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[6] = a1;
  uint64_t v6 = *v4;
  v5[9] = *(void *)(*v4 + 88);
  v5[10] = *(void *)(v6 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  v5[11] = AssociatedTypeWitness;
  uint64_t v8 = type metadata accessor for IntentPromptAnswer(0LL, AssociatedTypeWitness);
  v5[12] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[13] = v9;
  void v5[14] = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = type metadata accessor for ParameterIdentifier(0LL);
  v5[15] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v5[16] = v11;
  v5[17] = OUTLINED_FUNCTION_23(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( uint64_t a1)
{
  uint64_t v98 = v1 + 40;
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t v5 = OUTLINED_FUNCTION_30_27(a1, *(void *)(v1 + 88));
  uint64_t v6 = (void *)ParameterResolutionRecord.intent.getter(v5);
  *(void *)(v1 + 144) = v6;
  uint64_t v96 = v5;
  uint64_t v7 = ParameterResolutionRecord.parameter.getter(v5);
  uint64_t v8 = ParameterIdentifier.multicardinalIndex.getter(v7);
  char v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v10 & 1) != 0) {
    Swift::Int v11 = 0LL;
  }
  else {
    Swift::Int v11 = v8;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  *(void *)(v1 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
  id v103 = v6;
  unsigned __int8 v14 = (os_log_s *)OUTLINED_FUNCTION_23_34();
  os_log_type_t v16 = static os_log_type_t.debug.getter(v14, v15);
  BOOL v17 = os_log_type_enabled(v14, v16);
  if (v17)
  {
    uint64_t v25 = v11;
    uint64_t v26 = *(void *)(v1 + 80);
    uint64_t v27 = *(void *)(v1 + 88);
    uint64_t v28 = *(void *)(v1 + 72);
    uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v30 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)&__int128 v106 = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v28, v26, v27);
    (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8LL))(v27);
    unint64_t v32 = OUTLINED_FUNCTION_68();
    OUTLINED_FUNCTION_14_43(v32);
    OUTLINED_FUNCTION_62();
    uint64_t v33 = OUTLINED_FUNCTION_95_3();
    *(void *)(v1 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v35);
    Swift::Int v11 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v98, v1 + 48, v29 + 4);
    uint64_t v36 = OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_31_29(v36, v37, v38, v39, v40, v41, v42, v43, v91, v13, v96, v98, v25, v103);
    OUTLINED_FUNCTION_57_0( &dword_0,  v14,  v16,  "#ContactNeedsDisambiguationFlowStrategy contacts before parsing disambiguation response: %s",  v29);
    OUTLINED_FUNCTION_17_0(v30);
    OUTLINED_FUNCTION_0_2(v30);
    OUTLINED_FUNCTION_0_2((uint64_t)v29);
  }

  else
  {
    OUTLINED_FUNCTION_31_29(v17, v18, v19, v20, v21, v22, v23, v24, v91, v94, v96, v98, at, v103);
  }

  uint64_t v44 = (void *)OUTLINED_FUNCTION_24_29();
  *(void *)(v1 + 160) = v44;
  if (v45 == 255) {
    goto LABEL_23;
  }
  uint64_t v46 = v44;
  if (v45 != 1)
  {
    if (v45)
    {
      outlined consume of ContactDisambiguationPromptResponse?(v44, v45);
    }

    else
    {
      int v47 = v44;
      outlined consume of ContactDisambiguationPromptResponse?(v44, 0);
      if ((v47 - 1) < 2)
      {
        uint64_t v48 = *(void *)(swift_getAssociatedConformanceWitness( *(void *)(v1 + 72),  *(void *)(v1 + 80),  *(void *)(v1 + 88))
                        + 8);

        id v49 = v104;
        uint64_t v50 = (os_log_s *)OUTLINED_FUNCTION_23_34();
        os_log_type_t v52 = static os_log_type_t.debug.getter(v50, v51);
        if (os_log_type_enabled(v50, v52))
        {
          uint64_t v95 = v1 + 32;
          uint64_t v53 = *(void *)(v1 + 88);
          uint64_t v54 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v55 = OUTLINED_FUNCTION_7_0(32LL);
          *(void *)&__int128 v106 = v55;
          *(_DWORD *)uint64_t v54 = 136315138;
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v53, v48);
          Swift::Int ata = (Swift::Int)(v54 + 4);
          unint64_t v56 = OUTLINED_FUNCTION_68();
          uint64_t v57 = OUTLINED_FUNCTION_14_43(v56);
          unint64_t v59 = v58;
          OUTLINED_FUNCTION_62();
          *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v59, (uint64_t *)&v106);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 32, v99, v54 + 4);
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_57_0( &dword_0,  v50,  v52,  "#ContactNeedsDisambiguationFlowStrategy contacts after user said no: %s",  v54);
          OUTLINED_FUNCTION_17_0(v55);
          OUTLINED_FUNCTION_0_2(v55);
          OUTLINED_FUNCTION_0_2((uint64_t)v54);
        }

        else
        {
        }

        uint64_t v66 = *(void *)(v1 + 112);
        uint64_t v89 = *(void *)(v1 + 88);
        uint64_t v67 = *(void *)(v1 + 96);
        __int128 v106 = 0u;
        __int128 v107 = 0u;
        IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v106, v49, v89);
        goto LABEL_24;
      }
    }

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v3 = *v2;
  uint64_t v5 = *(void *)(*v2 + 184);
  uint64_t v4 = *(void *)(*v2 + 192);
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  swift_task_dealloc(v4);
  swift_release(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)()
{
  uint64_t v1 = (os_log_s *)Logger.logObject.getter(*(id *)(v0 + 200));
  os_log_type_t v3 = static os_log_type_t.debug.getter(v1, v2);
  if (os_log_type_enabled(v1, v3))
  {
    uint64_t v22 = *(void **)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v8 = OUTLINED_FUNCTION_7_0(32LL);
    v23[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = v5(v6, v4);
    if (v9) {
      char v10 = (void *)v9;
    }
    else {
      char v10 = _swiftEmptyArrayStorage;
    }
    unint64_t v11 = OUTLINED_FUNCTION_68();
    uint64_t v12 = Array.description.getter(v10, v11);
    unint64_t v14 = v13;
    OUTLINED_FUNCTION_23_5();
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_57_0( &dword_0,  v1,  v3,  "#ContactNeedsDisambiguationFlowStrategy contacts after re-running CRR: %s",  v7);
    OUTLINED_FUNCTION_17_0(v8);
    OUTLINED_FUNCTION_0_2(v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  else
  {
  }

  uint64_t v15 = *(void **)(v0 + 200);
  os_log_type_t v16 = *(void **)(v0 + 160);
  BOOL v17 = *(void **)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v19 = *(void *)(v0 + 96);
  v23[3] = OUTLINED_FUNCTION_68();
  v23[0] = (uint64_t)v16;
  outlined copy of ContactDisambiguationPromptResponse?(v16, 1u);
  IntentPromptAnswer.init(answeredValue:updatedIntent:)(v23, v15, v20);
  static DisambiguationResult.chosenItem(_:)(v18, v19);
  OUTLINED_FUNCTION_16_37();

  OUTLINED_FUNCTION_18_43();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 112);
  OUTLINED_FUNCTION_16_37();

  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[31] = a4;
  _BYTE v5[32] = v4;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  v5[33] = *v4;
  return OUTLINED_FUNCTION_33_0((uint64_t)ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:));
}

uint64_t ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:)()
{
  if ((v1 & 1) != 0) {
    return (*(uint64_t (**)(id))(v0 + 8))(*(id *)(v0 + 232));
  }
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  *(_OWORD *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
  uint64_t v7 = type metadata accessor for ContactQuery(0LL);
  uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
       + *(void *)(*(void *)(v7 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v8 + 16) = xmmword_31D870;
  INPerson.toContactQuery()();
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v0 + 64) = 2;
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(void *)(v0 + 80) = 0x1123030905050204LL;
  *(_WORD *)(v0 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 518;
  *(void *)(v0 + 96) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 104) = v8;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = _swiftEmptyArrayStorage;
  uint64_t v11 = v3 + 80;
  uint64_t v10 = *(void *)(v3 + 80);
  uint64_t v9 = *(void *)(v11 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  swift_getAssociatedConformanceWitness(v9, v10, AssociatedTypeWitness);
  swift_retain();
  static ContactSlotResolver.makeMulticardinalResolver<A>(multicardinalIndex:rchFlowContext:sharedGlobals:)( v5,  0,  v4,  0LL,  0LL,  AssociatedTypeWitness,  v0 + 120);
  swift_release(v4);
  *(void *)(v0 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for PhoneCallDirectInvocationNLIntent;
  *(void *)(v0 + 216) = &protocol witness table for PhoneCallDirectInvocationNLIntent;
  uint64_t v13 = swift_allocObject(&unk_405CD8, 120LL, 7LL);
  *(void *)(v0 + 184) = v13;
  outlined init with copy of PhoneCallDirectInvocationNLIntent(v0 + 16, v13 + 16);
  unint64_t v14 = (void *)swift_task_alloc(dword_439C14);
  *(void *)(v0 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v14;
  *(void *)(v0 + 280) = type metadata accessor for AnyIntentResolver(0LL, AssociatedTypeWitness, v15, v16);
  *unint64_t v14 = v0;
  v14[1] = ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:);
  return AnyIntentResolver.resolve(skIntent:nlIntent:)(*(void *)(v0 + 232), v0 + 184);
}

{
  uint64_t v0;
  outlined destroy of PhoneCallDirectInvocationNLIntent((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 296));
}

{
  uint64_t v0;
  outlined destroy of PhoneCallDirectInvocationNLIntent((void *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 184));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.reresolvePerson(_:skIntent:app:multicardinalValueIndex:)( uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 272LL);
  *(void *)(*(void *)v2 + 288LL) = v1;
  uint64_t v6 = swift_task_dealloc(v5);
  if (v1)
  {
    OUTLINED_FUNCTION_22_35(v6, v4[35]);
  }

  else
  {
    uint64_t v7 = v4[35];
    v4[37] = a1;
    OUTLINED_FUNCTION_22_35(v6, v7);
    __swift_destroy_boxed_opaque_existential_1(v4 + 23);
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)(uint64_t a1)
{
  void v2[3] = a1;
  void v2[4] = v1;
  v2[5] = *v1;
  uint64_t v3 = OUTLINED_FUNCTION_29_27();
  v2[6] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[7] = v4;
  _BYTE v2[8] = OUTLINED_FUNCTION_23(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v2 = OUTLINED_FUNCTION_30_27(AssociatedTypeWitness, AssociatedTypeWitness);
  __int128 v16 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = (void *)ParameterResolutionRecord.result.getter(v2);
  id v4 = [v3 disambiguationItems];

  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, (char *)&type metadata for Any + 8);
  uint64_t v6 = *(void *)(v5 + 16);
  OUTLINED_FUNCTION_23_5();
  uint64_t v7 = (void *)ParameterResolutionRecord.result.getter(v2);
  uint64_t v8 = v7;
  uint64_t v9 = &selRef_alternatives;
  if (v6) {
    uint64_t v9 = &selRef_disambiguationItems;
  }
  id v10 = objc_msgSend(v7, *v9, v16);

  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, (char *)&type metadata for Any + 8);
  uint64_t v12 = specialized _arrayConditionalCast<A, B>(_:)(v11);
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  OUTLINED_FUNCTION_62();
  if (!v12) {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = swift_task_alloc(48LL);
  *(void *)(v0 + 80) = v13;
  *(void *)(v13 + 16) = v12;
  *(int8x16_t *)(v13 + 24) = vextq_s8(v17, v17, 8uLL);
  unint64_t v14 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v14;
  type metadata accessor for SiriKitDisambiguationList(0LL);
  *unint64_t v14 = v0;
  v14[1] = ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:);
  OUTLINED_FUNCTION_19_1();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 88LL));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[40];
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  id v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1( (void *)(v4 + *(void *)(*(void *)v4 + 120LL)),  *(void *)(v4 + *(void *)(*(void *)v4 + 120LL) + 24));
  uint64_t v6 = OUTLINED_FUNCTION_95_3();
  v7(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))( v1,  v4 + direct field offset for ContactNeedsDisambiguationFlowStrategy.authenticationPolicy,  v3);
  uint64_t v8 = type metadata accessor for SiriKitDisambiguationListAdapter(0LL);
  OUTLINED_FUNCTION_15_2(v8);
  uint64_t v9 = SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:authenticationPolicy:)(v5, v11, v1);
  OUTLINED_FUNCTION_7_8();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

void *closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v29 = a2;
  uint64_t v31 = a1;
  uint64_t v4 = *a3;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationList, Never>);
  uint64_t v5 = *(void *)(v30 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  uint64_t v7 = *(uint64_t *)((char *)a3 + *(void *)(v4 + 128));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v9 = swift_getAssociatedTypeWitness(255LL);
  uint64_t v35 = &protocol witness table for PhoneCallBaseCatTemplatingService<A, B>;
  uint64_t v34 = type metadata accessor for PhoneCallBaseCatTemplatingService(0LL, AssociatedTypeWitness, v9, v10);
  *(void *)&__int128 v33 = v7;
  uint64_t v11 = type metadata accessor for ParameterResolutionRecord(0LL, AssociatedTypeWitness);
  swift_retain();
  uint64_t v12 = ParameterResolutionRecord.app.getter(v11);
  uint64_t v13 = App.appIdentifier.getter();
  unint64_t v15 = v14;
  swift_release(v12);
  if (v15) {
    uint64_t v16 = v13;
  }
  else {
    uint64_t v16 = 0LL;
  }
  if (v15) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = 0xE000000000000000LL;
  }
  uint64_t v18 = (uint64_t *)((char *)a3 + *(void *)(*a3 + 120));
  uint64_t v19 = v18[3];
  uint64_t v20 = v18[4];
  __swift_project_boxed_opaque_existential_1(v18, v19);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 184))(v32, v19, v20);
  uint64_t v21 = v18[3];
  uint64_t v22 = v18[4];
  __swift_project_boxed_opaque_existential_1(v18, v21);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 8))(v41, v21, v22);
  uint64_t v23 = v29;
  v36[0] = v29;
  v36[1] = v29;
  outlined init with take of AppSelectionSignalComponent(&v33, (uint64_t)&v42);
  outlined init with take of AppSelectionSignalComponent(v32, (uint64_t)&v40);
  char v37 = 1;
  uint64_t v38 = v16;
  unint64_t v39 = v17;
  uint64_t v24 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))( (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v31,  v30);
  uint64_t v25 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v26 = (v25 + 16) & ~v25;
  uint64_t v27 = swift_allocObject(&unk_405CB0, v26 + v6, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))( v27 + v26,  (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v24);
  swift_bridgeObjectRetain_n(v23, 2LL);
  specialized DisambiguationItemFactory.buildDisambiguationItemList(_:)( (uint64_t)partial apply for closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:),  v27);
  swift_release(v27);
  return outlined destroy of PhoneContactDisambiguationItemFactory(v36);
}

uint64_t closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1)
{
  uint64_t v3 = a1;
  swift_retain();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationList, Never>);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[6] = a3;
  v4[7] = v3;
  void v4[4] = a1;
  void v4[5] = a2;
  v4[8] = *v3;
  return OUTLINED_FUNCTION_33_0((uint64_t)ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:));
}

uint64_t ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PaginatedItemContainer<SiriKitDisambiguationItemPair>);
  v0[2] = PaginatedItemContainer.items.getter(v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SiriKitDisambiguationItemPair]);
  unint64_t v4 = OUTLINED_FUNCTION_68();
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  uint64_t v6 = Sequence.compactMap<A>(_:)( closure #1 in ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:),  0LL,  v3,  v4,  WitnessTable);
  OUTLINED_FUNCTION_23_5();
  uint64_t v7 = direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate;
  *(void *)(v1 + direct field offset for ContactNeedsDisambiguationFlowStrategy.personsToDisambiguate) = v6;
  swift_bridgeObjectRelease();
  v0[3] = PaginatedItemContainer.items.getter(v2);
  uint64_t v8 = type metadata accessor for SiriKitDisambiguationItem(0LL);
  uint64_t v9 = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  uint64_t v11 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF( (void (*)(char *, char *))closure #2 in ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:),  0LL,  v3,  v8,  (uint64_t)&type metadata for Never,  v9,  (uint64_t)&protocol witness table for Never,  v10);
  OUTLINED_FUNCTION_4_1();
  int64_t v12 = *(void *)(v1 + v7);
  swift_bridgeObjectRetain_n(v12, 2LL);
  specialized _arrayForceCast<A, B>(_:)(v12);
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_4_1();
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0) {
      uint64_t v33 = v12;
    }
    else {
      uint64_t v33 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v33);
    OUTLINED_FUNCTION_4_1();
  }

  else
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v15 < 6 || (PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v12), (v16 & 1) != 0))
  {
    if ((specialized Sequence.contains(where:)(v12, (char *)&dword_0 + 2) & 1) != 0)
    {
      char v17 = specialized Sequence.contains(where:)(v12, (char *)&dword_0 + 1);
      OUTLINED_FUNCTION_4_1();
      char v18 = v17 ^ 1;
    }

    else
    {
      OUTLINED_FUNCTION_4_1();
      char v18 = 1;
    }
  }

  else
  {
    OUTLINED_FUNCTION_4_1();
    char v18 = 0;
  }

  uint64_t v19 = v0[8];
  uint64_t v20 = type metadata accessor for SiriKitDisambiguationList(0LL);
  OUTLINED_FUNCTION_15_2(v20);
  uint64_t v21 = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v14,  v11,  v18 & 1,  0LL);
  v0[9] = v21;
  uint64_t v24 = v19 + 80;
  uint64_t v23 = *(void *)(v19 + 80);
  uint64_t v22 = *(void *)(v24 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v26 = OUTLINED_FUNCTION_30_27(AssociatedTypeWitness, AssociatedTypeWitness);
  uint64_t v27 = ParameterResolutionRecord.app.getter(v26);
  v0[10] = v27;
  uint64_t v28 = ParameterResolutionRecord.intent.getter(v26);
  v0[11] = v28;
  uint64_t v29 = ParameterResolutionRecord.result.getter(v26);
  v0[12] = v29;
  uint64_t v30 = *(int **)(v22 + 56);
  uint64_t v34 = (int *)((char *)v30 + *v30);
  uint64_t v31 = (void *)swift_task_alloc(v30[1]);
  v0[13] = v31;
  *uint64_t v31 = v0;
  v31[1] = ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:);
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v34)( v0[4],  v27,  v28,  v29,  v21,  v23,  v22);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  *(void *)(*v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc(v3);
  if (!v0)
  {
    unint64_t v4 = *(void **)(v2 + 88);

    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v5, v6, v7);
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 72));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 72);

  OUTLINED_FUNCTION_38_1();
  swift_release(v2);
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)@<X0>( uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = swift_dynamicCast(a2, v4, (char *)&type metadata for Any + 8);
  if ((result & 1) == 0) {
    *a2 = 0LL;
  }
  return result;
}

uint64_t closure #2 in ContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = SiriKitDisambiguationItemPair.formattedItem.getter();
  *a1 = result;
  return result;
}

uint64_t *ContactNeedsDisambiguationFlowStrategy.deinit()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + direct field offset for ContactNeedsDisambiguationFlowStrategy.authenticationPolicy;
  uint64_t v3 = OUTLINED_FUNCTION_29_27();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8LL) + 8LL))((uint64_t)v0 + *(void *)(*v0 + 112));
  __swift_destroy_boxed_opaque_existential_1((uint64_t *)((char *)v0 + *(void *)(*v0 + 120)));
  swift_release(*(uint64_t *)((char *)v0 + *(void *)(*v0 + 128)));
  __swift_destroy_boxed_opaque_existential_1((uint64_t *)((char *)v0 + *(void *)(*v0 + 136)));
  outlined consume of ContactDisambiguationPromptResponse?( *(id *)((char *)v0 + *(void *)(*v0 + 144)),  *((_BYTE *)v0 + *(void *)(*v0 + 144) + 8));
  return v0;
}

uint64_t ContactNeedsDisambiguationFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.authenticationPolicy.getter in conformance ContactNeedsDisambiguationFlowStrategy<A>@<X0>( uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + direct field offset for ContactNeedsDisambiguationFlowStrategy.authenticationPolicy;
  uint64_t v4 = type metadata accessor for UnlockDevicePolicy(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a2 + 80),  *(void *)(a2 + 88),  a4);
  return NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:)(a1, v6, a3);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.actionForInput(_:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208LL))();
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeDisambiguationItemContainer(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = *(int **)(**(void **)v2 + 232LL);
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc(v5[1]);
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for NeedsDisambiguationFlowStrategyAsync.makeDisambiguationItemContainer(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>;
  return v8(a2);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeDisambiguationItemContainer(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 24);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v6 + 8));
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.parseDisambiguationResult(input:paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(**(void **)v4 + 216LL);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makePromptForDisambiguation(paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 240LL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return v11(a1, a2, a3);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a4 + 80),  *(void *)(a4 + 88),  v12);
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)( a1,  a2,  a3,  v13,  a5);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)[1]);
  *(void *)(v5 + 16) = v11;
  uint64_t v13 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a4 + 80),  *(void *)(a4 + 88),  v12);
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)( a1,  a2,  a3,  v13,  a5);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)[1]);
  *(void *)(v4 + 16) = v9;
  uint64_t v11 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a3 + 80),  *(void *)(a3 + 88),  v10);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, v11, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)[1]);
  *(void *)(v4 + 16) = v9;
  uint64_t v11 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a3 + 80),  *(void *)(a3 + 88),  v10);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, v11, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a2 + 80),  *(void *)(a2 + 88),  a4);
  return NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:)(a1, v6, a3);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)[1]);
  *(void *)(v6 + 16) = v13;
  uint64_t v15 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a5 + 80),  *(void *)(a5 + 88),  v14);
  *uint64_t v13 = v6;
  v13[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v15, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:) in conformance ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)[1]);
  *(void *)(v7 + 16) = v15;
  uint64_t v17 = type metadata accessor for ContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a6 + 80),  *(void *)(a6 + 88),  v16);
  *uint64_t v15 = v7;
  v15[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v17, a7);
}

void *partial apply for closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1)
{
  return closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( a1,  *(void *)(v1 + 16),  *(uint64_t **)(v1 + 24));
}

uint64_t base witness table accessor for ParameterResolutionHandlingAsync in ContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for ContactNeedsDisambiguationFlowStrategy<A>, a1);
}

void *associated type witness table accessor for NeedsDisambiguationFlowStrategyAsync.DisambiguationItemContainerType : DisambiguationItemContaining in ContactNeedsDisambiguationFlowStrategy<A>()
{
  return &protocol witness table for SiriKitDisambiguationListAdapter;
}

uint64_t sub_18ABA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_24_29();
  *(void *)a1 = result;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  return result;
}

uint64_t sub_18ABD0()
{
  return 16LL;
}

__n128 sub_18ABDC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata completion function for ContactNeedsDisambiguationFlowStrategy(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnlockDevicePolicy(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 80));
    if (v4 <= 0x3F)
    {
      v5[2] = *(void *)(result - 8) + 64LL;
      void v5[3] = "(";
      v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[5] = "(";
      v5[6] = &unk_32C6E0;
      uint64_t result = swift_initClassMetadata2(a1, 0LL, 7LL, v5, a1 + 96);
      if (!result) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t type metadata accessor for ContactNeedsDisambiguationFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for ContactNeedsDisambiguationFlowStrategy);
}

uint64_t sub_18ACB0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationList, Never>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1)
{
  return closure #1 in closure #1 in ContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)(a1);
}

uint64_t sub_18AD54()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 120LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_12_54()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  return swift_getAssociatedTypeWitness(255LL);
}

uint64_t OUTLINED_FUNCTION_14_43(uint64_t a1)
{
  return Array.description.getter(v1, a1);
}

void OUTLINED_FUNCTION_16_37()
{
}

uint64_t OUTLINED_FUNCTION_18_43()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_35(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(a2 - 8) + 8LL))(v2);
}

uint64_t OUTLINED_FUNCTION_23_34()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_24_29()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176LL))();
}

uint64_t OUTLINED_FUNCTION_28_33()
{
  return outlined init with copy of SignalProviding(v0, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_29_27()
{
  return type metadata accessor for UnlockDevicePolicy(0LL);
}

uint64_t OUTLINED_FUNCTION_30_27(uint64_t a1, uint64_t a2)
{
  return type metadata accessor for ParameterResolutionRecord(0LL, a2);
}

void OUTLINED_FUNCTION_31_29( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

void OngoingCallRCHFlowFactory.makeHandleIntentFlow(app:intent:intentResponse:)( uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (void *)v3;
  id v44 = a2;
  id v45 = a3;
  uint64_t v43 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_3_76(v5);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  uint64_t v42 = v10;
  uint64_t v11 = v10;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v40 - v14;
  outlined init with copy of SignalProviding(v3, (uint64_t)v49);
  specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of OngoingCallRCHFlowFactory.makeHandleIntentFlow(app:intent:intentResponse:));
  uint64_t v17 = v16;
  uint64_t v18 = type metadata accessor for HangUpAndCallHandleIntentStrategy(0LL);
  OUTLINED_FUNCTION_15_2(v18);
  uint64_t v19 = HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)((uint64_t)v49, v17);
  uint64_t v20 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  uint64_t v40 = v20;
  uint64_t v21 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INStartCallIntentResponse,  &OBJC_CLASS___INStartCallIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v20, v21);
  OngoingCallRCHFlowFactory.addHangUpAndCallFlowProducers(sharedGlobals:producers:)((uint64_t)v4);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v15, v9);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v22);
  uint64_t v23 = RCHChildFlowFactory.init(producers:)(v13);
  uint64_t v25 = v4[3];
  uint64_t v24 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 104))(v49, v25, v24);
  uint64_t v26 = v50;
  uint64_t v27 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  uint64_t v48 = v19;
  uint64_t v28 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 24);
  uint64_t v29 = lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>);
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))v28(&v48, v18, v29, v26, v27);
  uint64_t v32 = v31;
  uint64_t v33 = v43;
  swift_retain();
  id v34 = v44;
  id v35 = v45;
  IntentResolutionRecord.init(app:intent:intentResponse:)(v33, v34, v35, v40, v21);
  uint64_t v36 = v30(v23, v8);
  swift_release(v32);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v8, v47);
  __swift_destroy_boxed_opaque_existential_1(v49);
  v49[0] = v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyHandleIntentFlow<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v37);
  swift_retain();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  uint64_t v39 = lazy protocol witness table accessor for type AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>( &lazy protocol witness table cache variable for type AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>,  &demangling cache variable for type metadata for AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>>);
  AnyHandleIntentFlow.init<A>(_:)(v49, v38, v39);
  swift_release(v36);
  swift_release(v19);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v41);
  OUTLINED_FUNCTION_7_5();
}

void OngoingCallRCHFlowFactory.makePreConfirmedRCHFlow(delegate:intent:app:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v24)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v39 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_3_76(v5);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v41 = v7 - v6;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  uint64_t v40 = v9;
  __chkstk_darwin();
  uint64_t v38 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v16 = v15 - v14;
  static PhoneCallFlowFactory.getStartCallProducers(skIntent:delegate:app:sharedGlobals:)();
  uint64_t v17 = v16 + *(int *)(v13 + 36);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v37(v12, v17, v8);
  OngoingCallRCHFlowFactory.addHangUpAndCallFlowProducers(sharedGlobals:producers:)((uint64_t)v3);
  outlined init with copy of SignalProviding((uint64_t)v3, (uint64_t)v45);
  type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
  OUTLINED_FUNCTION_4_64();
  uint64_t v18 = OUTLINED_FUNCTION_6_61();
  type metadata accessor for StartCallCATsSimple(0LL);
  OUTLINED_FUNCTION_4_64();
  uint64_t v19 = OUTLINED_FUNCTION_6_61();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  swift_allocObject(v20, 80LL, 7LL);
  id v34 = a3;
  uint64_t v21 = specialized CallingIntentRCHFlowStrategy.init(sharedGlobals:appResolved:phoneCallDisplayTextCATsSimple:startCallCATsSimple:)( v45,  a3,  v18,  v19);
  id v35 = v21;
  uint64_t v23 = v3[3];
  uint64_t v22 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v23);
  uint64_t v24 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 104);
  swift_retain();
  v24(v45, v23, v22);
  uint64_t v26 = v46;
  uint64_t v25 = v47;
  __swift_project_boxed_opaque_existential_1(v45, v46);
  id v44 = v21;
  uint64_t v27 = v38;
  uint64_t v28 = v36;
  v37(v38, (uint64_t)v12, v36);
  uint64_t v29 = v41;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v41, v16, v43);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowFactory<INStartCallIntent, INStartCallIntentResponse>);
  OUTLINED_FUNCTION_15_2(v30);
  uint64_t v31 = RCHChildFlowFactory.init(producers:withFallbacks:)(v27, v29);
  uint64_t v32 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
  uint64_t v33 = lazy protocol witness table accessor for type AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>( (unint64_t *)&lazy protocol witness table cache variable for type CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse> and conformance CallingIntentRCHFlowStrategy<A, B>,  &demangling cache variable for type metadata for CallingIntentRCHFlowStrategy<INStartCallIntent, INStartCallIntentResponse>);
  v32(&v44, v31, v34, v39, v20, v33, v26, v25);
  swift_release(v31);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v28);
  outlined destroy of PhoneCallFlowFactory.PhoneRCHFlowProducers<INStartCallIntent, INStartCallIntentResponse>(v16);
  swift_release(v35);
  __swift_destroy_boxed_opaque_existential_1(v45);
  OUTLINED_FUNCTION_7_5();
}

uint64_t OngoingCallRCHFlowFactory.addHangUpAndCallFlowProducers(sharedGlobals:producers:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for HangUpAndCallHandleIntentStrategy(0LL);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  uint64_t v4 = HangUpAndCallHandleIntentStrategy.init(sharedGlobals:options:)((uint64_t)v13, v2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  RCHChildFlowProducersAsync.confirmIntentFlowProducer.setter( default argument 1 of ContactDonationInfo.init(thirdPartyAppId:contactInNumberOfThirdPartyApps:contactExistsInFirstParty:),  0LL,  v5);
  v13[0] = v4;
  uint64_t v6 = lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>);
  uint64_t v7 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v13, v3, v6);
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter(v7, v8, v5);
  v13[0] = v4;
  uint64_t v9 = lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>(&lazy protocol witness table cache variable for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>);
  uint64_t v10 = static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)(v13, v3, v9);
  RCHChildFlowProducersAsync.continueInAppFlowProducer.setter(v10, v11, v5);
  return swift_release(v4);
}

uint64_t lazy protocol witness table accessor for type AnyValueFlow<HandleIntentFlowResult<INStartCallIntent, INStartCallIntentResponse>> and conformance AnyValueFlow<A>( unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = OUTLINED_FUNCTION_110(v4);
    atomic_store(result, a1);
  }

  return result;
}

ValueMetadata *type metadata accessor for OngoingCallRCHFlowFactory()
{
  return &type metadata for OngoingCallRCHFlowFactory;
}

uint64_t lazy protocol witness table accessor for type HangUpAndCallHandleIntentStrategy and conformance CallingIntentContinueInAppStrategy<A, B>( unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v3 = type metadata accessor for HangUpAndCallHandleIntentStrategy(255LL);
    uint64_t result = OUTLINED_FUNCTION_110(v3);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t OUTLINED_FUNCTION_3_76(uint64_t result)
{
  *(void *)(v1 - 144) = *(void *)(result - 8);
  *(void *)(v1 - 136) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_64()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_6_61()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t EmergencyCountdownModel.sashTitle.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v9);
  return v10;
}

void key path setter for EmergencyCountdownModel.sashTitle : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.sashTitle.setter(v1);
}

void EmergencyCountdownModel.sashTitle.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_120();
}

void EmergencyCountdownModel.cancelButtonText.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

uint64_t type metadata accessor for EmergencyCountdownModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for EmergencyCountdownModel;
  if (!type metadata singleton initialization cache for EmergencyCountdownModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyCountdownModel);
  }
  return result;
}

void key path setter for EmergencyCountdownModel.cancelButtonText : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.cancelButtonText.setter(v1);
}

void EmergencyCountdownModel.cancelButtonText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.cancelButtonText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.cancelledText.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for EmergencyCountdownModel.cancelledText : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.cancelledText.setter(v1);
}

void EmergencyCountdownModel.cancelledText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.cancelledText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.callButtonText.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for EmergencyCountdownModel.callButtonText : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.callButtonText.setter(v1);
}

void EmergencyCountdownModel.callButtonText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.callButtonText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void property wrapper backing initializer of EmergencyCountdownModel.callingLabel(uint64_t a1, uint64_t a2)
{
  v2[0] = a1;
  v2[1] = a2;
  Loggable.init(wrappedValue:)(v2, &type metadata for String);
  OUTLINED_FUNCTION_120();
}

void EmergencyCountdownModel.callingLabel.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for EmergencyCountdownModel.callingLabel : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.callingLabel.setter(v1);
}

void EmergencyCountdownModel.callingLabel.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.callingLabel.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.emergencyServicesLabel.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for EmergencyCountdownModel.emergencyServicesLabel : EmergencyCountdownModel( uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.emergencyServicesLabel.setter(v1);
}

void EmergencyCountdownModel.emergencyServicesLabel.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.emergencyServicesLabel.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.sos.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for EmergencyCountdownModel.sos : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.sos.setter(v1);
}

void EmergencyCountdownModel.sos.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.sos.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.dialog.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for EmergencyCountdownModel.dialog : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.dialog.setter(v1);
}

void EmergencyCountdownModel.dialog.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.dialog.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.localeIdentifier.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for EmergencyCountdownModel.localeIdentifier : EmergencyCountdownModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  EmergencyCountdownModel.localeIdentifier.setter(v1);
}

void EmergencyCountdownModel.localeIdentifier.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.localeIdentifier.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue( char a1)
{
  char v1 = a1;
  Loggable.init(wrappedValue:)(&v1, &type metadata for Bool);
  OUTLINED_FUNCTION_120();
}

void EmergencyCountdownModel.isSmartEnabled.getter()
{
}

void EmergencyCountdownModel.isSmartEnabled.setter(char a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_46_18(v1, v2, v3, v4, v5, v6, v7, v8, v9, *(int *)v10, *(__int16 *)&v10[4], v10[6], a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.isSmartEnabled.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.shouldPlayTTSCountdown.getter()
{
}

void EmergencyCountdownModel.shouldPlayTTSCountdown.setter(char a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_46_18(v1, v2, v3, v4, v5, v6, v7, v8, v9, *(int *)v10, *(__int16 *)&v10[4], v10[6], a1);
  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.shouldPlayTTSCountdown.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.callAction(uint64_t a1)
{
  return OUTLINED_FUNCTION_24_30();
}

void EmergencyCountdownModel.callAction.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for EmergencyCountdownModel.callAction : EmergencyCountdownModel(id *a1)
{
  id v1 = *a1;
  EmergencyCountdownModel.callAction.setter();
}

void EmergencyCountdownModel.callAction.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void EmergencyCountdownModel.callAction.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.directInvocation(uint64_t a1)
{
  return OUTLINED_FUNCTION_24_30();
}

void EmergencyCountdownModel.cancelAction.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for EmergencyCountdownModel.cancelAction : EmergencyCountdownModel(id *a1)
{
  id v1 = *a1;
  EmergencyCountdownModel.cancelAction.setter();
}

void EmergencyCountdownModel.cancelAction.setter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_14_4(v0);
  OUTLINED_FUNCTION_2();
}

void EmergencyCountdownModel.cancelAction.modify()
{
  id v1 = OUTLINED_FUNCTION_3_1();
  void *v0 = v1;
  OUTLINED_FUNCTION_1_61();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v1[4] = OUTLINED_FUNCTION_12_9(v2);
  OUTLINED_FUNCTION_6();
}

void EmergencyCountdownModel.responseViewId.getter()
{
}

void EmergencyCountdownModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(OUTLINED_FUNCTION_1_61() + 68));
  swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *EmergencyCountdownModel.responseViewId.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void *EmergencyCountdownModel.resultViewID.unsafeMutableAddressor()
{
  return &static EmergencyCountdownModel.resultViewID;
}

unint64_t static EmergencyCountdownModel.resultViewID.getter()
{
  return 0xD000000000000017LL;
}

void EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:shouldPlayTTSCountdown:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20, uint64_t a21, char a22, char a23)
{
  uint64_t v29 = (void *)(a9 + *(int *)(OUTLINED_FUNCTION_1_61() + 68));
  *uint64_t v29 = 0xD000000000000017LL;
  v29[1] = 0x8000000000346BE0LL;
  uint64_t v161 = a1;
  uint64_t v162 = a2;
  uint64_t v30 = Loggable.init(wrappedValue:)(&v161, &type metadata for String);
  uint64_t v161 = a3;
  uint64_t v162 = a4;
  uint64_t v38 = OUTLINED_FUNCTION_9_53(v30, v31, v32, v33, v34, v35, v36, v37, a12, a13, a14, a15, a16);
  uint64_t v161 = a5;
  uint64_t v162 = a6;
  uint64_t v46 = OUTLINED_FUNCTION_9_53(v38, v39, v40, v41, v42, v43, v44, v45, v114, v123, v132, v141, v150);
  uint64_t v161 = a10;
  uint64_t v162 = a11;
  uint64_t v54 = OUTLINED_FUNCTION_9_53(v46, v47, v48, v49, v50, v51, v52, v53, v115, v124, v133, v142, v151);
  uint64_t v161 = v116;
  uint64_t v162 = v125;
  uint64_t v62 = OUTLINED_FUNCTION_9_53(v54, v55, v56, v57, v58, v59, v60, v61, v116, v125, v134, v143, v152);
  uint64_t v161 = v135;
  uint64_t v162 = v144;
  uint64_t v70 = OUTLINED_FUNCTION_9_53(v62, v63, v64, v65, v66, v67, v68, v69, v117, v126, v135, v144, v153);
  uint64_t v161 = a7;
  uint64_t v162 = a8;
  uint64_t v78 = OUTLINED_FUNCTION_9_53(v70, v71, v72, v73, v74, v75, v76, v77, v118, v127, v136, v145, v154);
  uint64_t v161 = v155;
  uint64_t v162 = a17;
  uint64_t v86 = OUTLINED_FUNCTION_9_53(v78, v79, v80, v81, v82, v83, v84, v85, v119, v128, v137, v146, v155);
  OUTLINED_FUNCTION_24_10( v86,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
  id v87 = a18;
  uint64_t v88 = OUTLINED_FUNCTION_41_22((uint64_t)v87);
  OUTLINED_FUNCTION_24_10( v88,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor,  &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
  id v89 = a19;
  uint64_t v90 = OUTLINED_FUNCTION_41_22((uint64_t)v89);
  uint64_t v161 = a20;
  uint64_t v162 = a21;
  uint64_t v98 = OUTLINED_FUNCTION_9_53(v90, v91, v92, v93, v94, v95, v96, v97, v120, v129, v138, v147, v156);
  LOBYTE(v161) = a22;
  uint64_t v106 = OUTLINED_FUNCTION_9_53(v98, v99, v100, v101, v102, v103, v104, v105, v121, v130, v139, v148, v157);
  LOBYTE(v161) = a23;
  OUTLINED_FUNCTION_9_53(v106, v107, v108, v109, v110, v111, v112, v113, v122, v131, v140, v149, v158);
}

uint64_t EmergencyCountdownModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6C74695468736173LL && a2 == 0xE900000000000065LL)
  {
    unint64_t v5 = 0xE900000000000065LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C74695468736173LL, 0xE900000000000065LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0xD000000000000010LL)
  {
    unint64_t v7 = 0x800000000034C580LL;
    if (a2 == 0x800000000034C580LL) {
      goto LABEL_13;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000000034C580LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if (a1 == 0x656C6C65636E6163LL && a2 == 0xED00007478655464LL)
  {
    unint64_t v9 = 0xED00007478655464LL;
    goto LABEL_21;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C6C65636E6163LL, 0xED00007478655464LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 0x747475426C6C6163LL && a2 == 0xEE00747865546E6FLL)
  {
    unint64_t v11 = 0xEE00747865546E6FLL;
    goto LABEL_29;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x747475426C6C6163LL, 0xEE00747865546E6FLL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
LABEL_29:
    swift_bridgeObjectRelease(v11);
    return 3LL;
  }

  if (a1 == 0x4C676E696C6C6163LL && a2 == 0xEC0000006C656261LL)
  {
    unint64_t v13 = 0xEC0000006C656261LL;
    goto LABEL_37;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4C676E696C6C6163LL, 0xEC0000006C656261LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v13 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v13);
    return 4LL;
  }

  if (a1 == 0xD000000000000016LL)
  {
    unint64_t v14 = 0x800000000034C5A0LL;
    if (a2 == 0x800000000034C5A0LL) {
      goto LABEL_42;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x800000000034C5A0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v14 = a2;
LABEL_42:
    swift_bridgeObjectRelease(v14);
    return 5LL;
  }

  if (a1 == 7565171 && a2 == 0xE300000000000000LL)
  {
    unint64_t v16 = 0xE300000000000000LL;
    goto LABEL_50;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7565171LL, 0xE300000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v16 = a2;
LABEL_50:
    swift_bridgeObjectRelease(v16);
    return 6LL;
  }

  if (a1 == 0x676F6C616964LL && a2 == 0xE600000000000000LL)
  {
    unint64_t v18 = 0xE600000000000000LL;
    goto LABEL_58;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676F6C616964LL, 0xE600000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v18 = a2;
LABEL_58:
    swift_bridgeObjectRelease(v18);
    return 7LL;
  }

  if (a1 == 0xD000000000000010LL)
  {
    unint64_t v19 = 0x800000000034C5C0LL;
    if (a2 == 0x800000000034C5C0LL) {
      goto LABEL_63;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000000034C5C0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v19 = a2;
LABEL_63:
    swift_bridgeObjectRelease(v19);
    return 8LL;
  }

  if (a1 == 0x457472616D537369LL && a2 == 0xEE0064656C62616ELL)
  {
    unint64_t v21 = 0xEE0064656C62616ELL;
    goto LABEL_71;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x457472616D537369LL, 0xEE0064656C62616ELL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v21 = a2;
LABEL_71:
    swift_bridgeObjectRelease(v21);
    return 9LL;
  }

  if (a1 == 0xD000000000000016LL)
  {
    unint64_t v22 = 0x800000000034BC00LL;
    if (a2 == 0x800000000034BC00LL) {
      goto LABEL_76;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x800000000034BC00LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v22 = a2;
LABEL_76:
    swift_bridgeObjectRelease(v22);
    return 10LL;
  }

  if (a1 == 0x697463416C6C6163LL && a2 == 0xEA00000000006E6FLL)
  {
    unint64_t v24 = 0xEA00000000006E6FLL;
    goto LABEL_84;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x697463416C6C6163LL, 0xEA00000000006E6FLL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v24 = a2;
LABEL_84:
    swift_bridgeObjectRelease(v24);
    return 11LL;
  }

  if (a1 == 0x63416C65636E6163LL && a2 == 0xEC0000006E6F6974LL)
  {
    unint64_t v26 = 0xEC0000006E6F6974LL;
    goto LABEL_92;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x63416C65636E6163LL, 0xEC0000006E6F6974LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v26 = a2;
LABEL_92:
    swift_bridgeObjectRelease(v26);
    return 12LL;
  }

  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    swift_bridgeObjectRelease(0xEE00644977656956LL);
    return 13LL;
  }

  else
  {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v28 & 1) != 0) {
      return 13LL;
    }
    else {
      return 14LL;
    }
  }

uint64_t EmergencyCountdownModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18CBD4 + 4 * asc_32C730[a1]))( 0x6C74695468736173LL,  0xE900000000000065LL);
}

unint64_t sub_18CBD4()
{
  return 0xD000000000000010LL;
}

uint64_t sub_18CCA0()
{
  return 0x457472616D537369LL;
}

void sub_18CCC4()
{
}

uint64_t sub_18CCE4()
{
  return 0x697463416C6C6163LL;
}

uint64_t sub_18CD00()
{
  return 0x63416C65636E6163LL;
}

uint64_t sub_18CD20()
{
  return 0x65736E6F70736572LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance EmergencyCountdownModel.CodingKeys()
{
  return EmergencyCountdownModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance EmergencyCountdownModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = EmergencyCountdownModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.init(intValue:) in conformance EmergencyCountdownModel.CodingKeys@<X0>( _BYTE *a1@<X8>)
{
  uint64_t result = VoicemailVerbSemantics.associatedSemantic.getter();
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance EmergencyCountdownModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance EmergencyCountdownModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void EmergencyCountdownModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<EmergencyCountdownModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_406038, &unk_406038, v12, v10, v11);
  char v38 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_1((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
  OUTLINED_FUNCTION_7_11(v3, (uint64_t)&v38);
  if (!v2)
  {
    unint64_t v13 = (int *)type metadata accessor for EmergencyCountdownModel(0LL);
    uint64_t v14 = v3 + v13[5];
    char v37 = 1;
    OUTLINED_FUNCTION_7_11(v14, (uint64_t)&v37);
    uint64_t v15 = v3 + v13[6];
    char v36 = 2;
    OUTLINED_FUNCTION_7_11(v15, (uint64_t)&v36);
    uint64_t v16 = v3 + v13[7];
    char v35 = 3;
    OUTLINED_FUNCTION_7_11(v16, (uint64_t)&v35);
    uint64_t v17 = v3 + v13[8];
    char v34 = 4;
    OUTLINED_FUNCTION_7_11(v17, (uint64_t)&v34);
    uint64_t v18 = v3 + v13[9];
    char v33 = 5;
    OUTLINED_FUNCTION_7_11(v18, (uint64_t)&v33);
    uint64_t v19 = v3 + v13[10];
    char v32 = 6;
    OUTLINED_FUNCTION_7_11(v19, (uint64_t)&v32);
    uint64_t v20 = v3 + v13[11];
    char v31 = 7;
    OUTLINED_FUNCTION_7_11(v20, (uint64_t)&v31);
    uint64_t v21 = v3 + v13[12];
    char v30 = 8;
    OUTLINED_FUNCTION_7_11(v21, (uint64_t)&v30);
    uint64_t v22 = v3 + v13[13];
    char v29 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_7_11(v22, (uint64_t)&v29);
    uint64_t v23 = v3 + v13[14];
    char v28 = 10;
    OUTLINED_FUNCTION_7_11(v23, (uint64_t)&v28);
    _OWORD v27[2] = 11;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_6_12();
    v27[1] = 12;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_6_12();
    unint64_t v24 = (uint64_t *)(v3 + v13[17]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    v27[0] = 13;
    KeyedEncodingContainer.encode(_:forKey:)(v25, v26, v27, v5);
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_406038);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_406038);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_406038);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyCountdownModel.CodingKeys, &unk_406038);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }

  return result;
}

void lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>( uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<Bool>);
    atomic_store(OUTLINED_FUNCTION_27_37(v2, v2), v1);
  }

  OUTLINED_FUNCTION_4();
}

void EmergencyCountdownModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v104 = *(void *)(v106 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v97 = v3;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  uint64_t v105 = *(void *)(v107 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v98 = v4;
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v108 = *(void *)(v116 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v99 = v5;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v100 = (char *)&v93 - v6;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v119 = *(void *)(v114 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  uint64_t v101 = v7;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v102 = (char *)&v93 - v8;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v103 = (char *)&v93 - v9;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  uint64_t v109 = (char *)&v93 - v10;
  OUTLINED_FUNCTION_33();
  __chkstk_darwin();
  unint64_t v12 = (char *)&v93 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v93 - v13;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v93 - v15;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v93 - v17;
  __chkstk_darwin();
  uint64_t v112 = (char *)&v93 - v19;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<EmergencyCountdownModel.CodingKeys>);
  uint64_t v20 = *(void *)(v110 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v23 = v22 - v21;
  type metadata accessor for EmergencyCountdownModel(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v26 = v25 - v24;
  uint64_t v120 = v27;
  uint64_t v28 = v27[17];
  uint64_t v118 = v26;
  char v29 = (void *)(v26 + v28);
  *char v29 = 0xD000000000000017LL;
  v29[1] = 0x8000000000346BE0LL;
  uint64_t v115 = (uint64_t *)(v26 + v28);
  uint64_t v31 = a1[3];
  uint64_t v30 = a1[4];
  uint64_t v113 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  unint64_t v32 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  uint64_t v111 = v23;
  char v33 = v117;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_406038, &unk_406038, v32, v31, v30);
  if (v33)
  {
    uint64_t v117 = v33;
    uint64_t v34 = v114;
    unsigned int v39 = 0x2000;
  }

  else
  {
    char v35 = v16;
    uint64_t v117 = v14;
    uint64_t v95 = v20;
    char v134 = 0;
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_1((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    uint64_t v14 = v36;
    uint64_t v37 = v114;
    uint64_t v38 = v110;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v114, &v134, v110, v114, v36);
    uint64_t v53 = v118;
    uint64_t v54 = v112;
    uint64_t v112 = *(char **)(v119 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v112)(v118, v54, v37);
    char v133 = 1;
    OUTLINED_FUNCTION_33_36(v37, (uint64_t)&v133, v38, v37);
    OUTLINED_FUNCTION_16_38(v53 + v120[5], (uint64_t)v18);
    char v132 = 2;
    uint64_t v55 = (uint64_t)v35;
    uint64_t v94 = v14;
    OUTLINED_FUNCTION_33_36(v37, (uint64_t)&v132, v38, v37);
    uint64_t v56 = v120;
    uint64_t v57 = OUTLINED_FUNCTION_16_38(v53 + v120[6], v55);
    char v131 = 3;
    uint64_t v58 = (uint64_t)v117;
    OUTLINED_FUNCTION_3_77(v57, (uint64_t)&v131);
    uint64_t v59 = OUTLINED_FUNCTION_16_38(v53 + v56[7], v58);
    char v130 = 4;
    OUTLINED_FUNCTION_3_77(v59, (uint64_t)&v130);
    uint64_t v60 = v56;
    uint64_t v61 = OUTLINED_FUNCTION_16_38(v53 + v56[8], (uint64_t)v12);
    char v129 = 5;
    uint64_t v62 = (uint64_t)v109;
    OUTLINED_FUNCTION_3_77(v61, (uint64_t)&v129);
    uint64_t v63 = OUTLINED_FUNCTION_16_38(v53 + v56[9], v62);
    char v128 = 6;
    uint64_t v64 = (uint64_t)v103;
    OUTLINED_FUNCTION_3_77(v63, (uint64_t)&v128);
    uint64_t v65 = OUTLINED_FUNCTION_16_38(v53 + v56[10], v64);
    char v127 = 7;
    uint64_t v66 = (uint64_t)v102;
    OUTLINED_FUNCTION_3_77(v65, (uint64_t)&v127);
    LODWORD(v14) = 0;
    uint64_t v67 = OUTLINED_FUNCTION_22_36(v60[11]);
    OUTLINED_FUNCTION_16_38(v67, v66);
    v126[0] = 8;
    uint64_t v68 = v101;
    uint64_t v34 = v37;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v37, v126, v38, v37, v94);
    uint64_t v117 = 0LL;
    uint64_t v69 = OUTLINED_FUNCTION_22_36(v120[12]);
    ((void (*)(uint64_t, uint64_t, uint64_t))v112)(v69, v68, v37);
    char v125 = 9;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    uint64_t v71 = v70;
    uint64_t v72 = v117;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v116, &v125, v38, v116, v70);
    uint64_t v117 = v72;
    if (!v72)
    {
      uint64_t v73 = OUTLINED_FUNCTION_22_36(v120[13]);
      uint64_t v74 = *(void (**)(uint64_t, char *, uint64_t))(v108 + 32);
      uint64_t v75 = v116;
      v74(v73, v100, v116);
      char v124 = 10;
      uint64_t v76 = v117;
      KeyedDecodingContainer.decode<A>(_:forKey:)(v75, &v124, v110, v75, v71);
      LODWORD(v11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v76 == 0LL;
      uint64_t v117 = v76;
      if (v76)
      {
        OUTLINED_FUNCTION_13_57();
        LODWORD(v109) = 0;
        LODWORD(v110) = 0;
      }

      else
      {
        uint64_t v77 = OUTLINED_FUNCTION_22_36(v120[14]);
        v74(v77, v99, v116);
        char v123 = 11;
        lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>);
        OUTLINED_FUNCTION_29_28(v107, (uint64_t)&v123, v79, v80, v78);
        uint64_t v117 = 0LL;
        uint64_t v81 = OUTLINED_FUNCTION_22_36(v120[15]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32))(v81, v98, v107);
        char v122 = 12;
        lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
        OUTLINED_FUNCTION_29_28(v106, (uint64_t)&v122, v83, v84, v82);
        uint64_t v117 = 0LL;
        uint64_t v85 = OUTLINED_FUNCTION_22_36(v120[16]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32))(v85, v97, v106);
        char v121 = 13;
        uint64_t v86 = v117;
        uint64_t v87 = KeyedDecodingContainer.decode(_:forKey:)(&v121, v110);
        uint64_t v117 = v86;
        if (!v86)
        {
          uint64_t v89 = v87;
          uint64_t v90 = v88;
          OUTLINED_FUNCTION_13_57();
          uint64_t v91 = v115;
          swift_bridgeObjectRelease();
          uint64_t *v91 = v89;
          v91[1] = v90;
          uint64_t v92 = v118;
          outlined init with copy of EmergencyCountdownModel(v118, v96);
          OUTLINED_FUNCTION_42_16();
          outlined destroy of EmergencyCountdownModel(v92);
          goto LABEL_50;
        }

        OUTLINED_FUNCTION_13_57();
        LODWORD(v109) = 1;
        LODWORD(v110) = 1;
      }

      OUTLINED_FUNCTION_42_16();
      LOBYTE(v4__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 1;
      int v40 = 1;
      int v41 = 1;
      int v42 = 1;
      int v43 = 1;
      int v44 = 1;
      LODWORD(v111) = 1;
      LODWORD(v11__swift_destroy_boxed_opaque_existential_1(v0 + 3) = 1;
      LODWORD(v14) = 1;
      goto LABEL_8;
    }

    OUTLINED_FUNCTION_13_57();
    unsigned int v39 = 8703;
  }

  OUTLINED_FUNCTION_42_16();
  int v40 = (v39 >> 2) & 1;
  int v41 = (v39 >> 3) & 1;
  int v42 = (v39 >> 4) & 1;
  int v43 = (v39 >> 5) & 1;
  int v44 = (v39 >> 6) & 1;
  LODWORD(v11__swift_destroy_boxed_opaque_existential_1(v0 + 3) = (v39 >> 8) & 1;
  LODWORD(v111) = (v39 >> 7) & 1;
  if ((v39 & 1) == 0)
  {
    if ((v39 & 2) != 0)
    {
      OUTLINED_FUNCTION_39_15();
      OUTLINED_FUNCTION_23_35();
      goto LABEL_9;
    }

    OUTLINED_FUNCTION_39_15();
    goto LABEL_13;
  }

  LODWORD(v14) = 0;
  LODWORD(v11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  LODWORD(v109) = 0;
  LODWORD(v110) = 0;
  int v45 = (v39 >> 1) & 1;
LABEL_8:
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v34);
  if ((v45 & 1) != 0)
  {
LABEL_9:
    uint64_t v46 = v118;
    OUTLINED_FUNCTION_14_44(v120[5]);
    if ((v40 & 1) == 0)
    {
      if (v41)
      {
LABEL_11:
        OUTLINED_FUNCTION_23_35();
        uint64_t v47 = v116;
        goto LABEL_16;
      }

      goto LABEL_20;
    }

    goto LABEL_15;
  }

void _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_1(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String>);
    atomic_store(OUTLINED_FUNCTION_27_37(v2, v2), v1);
  }

  OUTLINED_FUNCTION_4();
}

void lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>( uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v2);
    atomic_store(OUTLINED_FUNCTION_110(v3), v1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t outlined init with copy of EmergencyCountdownModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyCountdownModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of EmergencyCountdownModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyCountdownModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance EmergencyCountdownModel( uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1 + 68));
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

void protocol witness for Decodable.init(from:) in conformance EmergencyCountdownModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownModel(void *a1)
{
}

PhoneCallFlowDelegatePlugin::EmergencyCountdownUpdateAction_optional __swiftcall EmergencyCountdownUpdateAction.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of EmergencyCountdownUpdateAction.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_EmergencyCountdownUpdateAction_startTimer;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_EmergencyCountdownUpdateAction_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t EmergencyCountdownUpdateAction.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6D69547472617473LL;
  }
  else {
    return 0x69546C65636E6163LL;
  }
}

void instantiation function for generic protocol witness table for EmergencyCountdownModel(uint64_t a1)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
}

void base witness table accessor for Decodable in EmergencyCountdownModel()
{
}

void base witness table accessor for Encodable in EmergencyCountdownModel()
{
}

void lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel( uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v2 = type metadata accessor for EmergencyCountdownModel(255LL);
    atomic_store(OUTLINED_FUNCTION_110(v2), v1);
  }

  OUTLINED_FUNCTION_2();
}

void protocol witness for static Equatable.== infix(_:_:) in conformance EmergencyCountdownUpdateAction( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction()
{
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyCountdownUpdateAction,  &type metadata for EmergencyCountdownUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyCountdownUpdateAction,  &type metadata for EmergencyCountdownUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyCountdownUpdateAction,  &type metadata for EmergencyCountdownUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyCountdownUpdateAction,  &type metadata for EmergencyCountdownUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyCountdownUpdateAction,  &type metadata for EmergencyCountdownUpdateAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }

  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance EmergencyCountdownUpdateAction()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EmergencyCountdownUpdateAction(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance EmergencyCountdownUpdateAction( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::EmergencyCountdownUpdateAction_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EmergencyCountdownUpdateAction@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::EmergencyCountdownUpdateAction_optional *a2@<X8>)
{
  result.value = EmergencyCountdownUpdateAction.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EmergencyCountdownUpdateAction( uint64_t *a1@<X8>)
{
  *a1 = EmergencyCountdownUpdateAction.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for Decodable.init(from:) in conformance EmergencyCountdownUpdateAction( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t updated = lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return RawRepresentable<>.init(from:)(a1, a2, a3, updated);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownUpdateAction( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t updated = lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, updated);
}

uint64_t protocol witness for UpdateResponseCommand.init(_:) in conformance EmergencyCountdownUpdateAction( uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t updated = lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  unint64_t v7 = lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return UpdateResponseCommand<>.init(_:)(a1, a2, a3, updated, v7);
}

uint64_t protocol witness for UpdateResponseCommand.serializeData() in conformance EmergencyCountdownUpdateAction( uint64_t a1, uint64_t a2)
{
  unint64_t updated = lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  unint64_t v5 = lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  return UpdateResponseCommand<>.serializeData()(a1, a2, updated, v5);
}

void sub_18E0F0()
{
  uint64_t *v0 = EmergencyCountdownModel.sashTitle.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_2();
}

void sub_18E114()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E138()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E15C()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E180()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E1A4()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E1C8()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E1EC()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E210()
{
  void *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_18E234()
{
  _BYTE *v0 = v1 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_18E258(char *a1)
{
}

void sub_18E278()
{
  _BYTE *v0 = v1 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_18E29C(char *a1)
{
}

void sub_18E2BC()
{
  void *v0 = v1;
  OUTLINED_FUNCTION_2();
}

void sub_18E2E0()
{
  void *v0 = v1;
  OUTLINED_FUNCTION_2();
}

char *initializeBufferWithCopyOfBuffer for EmergencyCountdownModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v26 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v8 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    v8(&a1[a3[5]], (uint64_t *)((char *)a2 + a3[5]), v7);
    v8(&a1[a3[6]], (uint64_t *)((char *)a2 + a3[6]), v7);
    v8(&a1[a3[7]], (uint64_t *)((char *)a2 + a3[7]), v7);
    v8(&a1[a3[8]], (uint64_t *)((char *)a2 + a3[8]), v7);
    v8(&a1[a3[9]], (uint64_t *)((char *)a2 + a3[9]), v7);
    v8(&a1[a3[10]], (uint64_t *)((char *)a2 + a3[10]), v7);
    v8(&a1[a3[11]], (uint64_t *)((char *)a2 + a3[11]), v7);
    v8(&a1[a3[12]], (uint64_t *)((char *)a2 + a3[12]), v7);
    uint64_t v9 = a3[13];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
    v13(v10, v11, v12);
    v13(&a1[a3[14]], (char *)a2 + a3[14], v12);
    uint64_t v14 = a3[15];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16LL))(v15, v16, v17);
    uint64_t v18 = a3[16];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v19, v20, v21);
    uint64_t v22 = a3[17];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *(void *)uint64_t v23 = *v24;
    *((void *)v23 + 1) = v25;
    swift_bridgeObjectRetain();
  }

  return a1;
}

uint64_t destroy for EmergencyCountdownModel(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  v5(a1 + a2[8], v4);
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  v5(a1 + a2[11], v4);
  v5(a1 + a2[12], v4);
  uint64_t v6 = a1 + a2[13];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL);
  v8(v6, v7);
  v8(a1 + a2[14], v7);
  uint64_t v9 = a1 + a2[15];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(v9, v10);
  uint64_t v11 = a1 + a2[16];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL);
  v12(v9, v10, v11);
  v12(a1 + a3[14], a2 + a3[14], v11);
  uint64_t v13 = a3[15];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
  uint64_t v17 = a3[16];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16LL))(v18, v19, v20);
  uint64_t v21 = a3[17];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24LL);
  v12(v9, v10, v11);
  v12(a1 + a3[14], a2 + a3[14], v11);
  uint64_t v13 = a3[15];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24LL))(v14, v15, v16);
  uint64_t v17 = a3[16];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24LL))(v18, v19, v20);
  uint64_t v21 = a3[17];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL);
  v12(v9, v10, v11);
  v12(a1 + a3[14], a2 + a3[14], v11);
  uint64_t v13 = a3[15];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32LL))(v14, v15, v16);
  uint64_t v17 = a3[16];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL))(v18, v19, v20);
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40LL);
  v12(v9, v10, v11);
  v12(a1 + a3[14], a2 + a3[14], v11);
  uint64_t v13 = a3[15];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40LL))(v14, v15, v16);
  uint64_t v17 = a3[16];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40LL))(v18, v19, v20);
  uint64_t v21 = a3[17];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18ED9C);
}

uint64_t sub_18ED9C(uint64_t a1, uint64_t a2, int *a3)
{
  if (v9)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_20_36();
  if (v9)
  {
    uint64_t v7 = v10;
    uint64_t v11 = a3[13];
LABEL_13:
    uint64_t v8 = a1 + v11;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  OUTLINED_FUNCTION_20_36();
  if (v12)
  {
    uint64_t v7 = v13;
    uint64_t v11 = a3[15];
    goto LABEL_13;
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  OUTLINED_FUNCTION_20_36();
  if (v14)
  {
    uint64_t v7 = v15;
    uint64_t v11 = a3[16];
    goto LABEL_13;
  }

  unint64_t v17 = *(void *)(a1 + a3[17] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18EE84);
}

void sub_18EE84(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if (v10)
  {
    uint64_t v8 = v7;
    uint64_t v9 = a1;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    OUTLINED_FUNCTION_168();
    if (v10)
    {
      uint64_t v8 = v11;
      uint64_t v12 = a4[13];
    }

    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      OUTLINED_FUNCTION_168();
      if (v13)
      {
        uint64_t v8 = v14;
        uint64_t v12 = a4[15];
      }

      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        OUTLINED_FUNCTION_168();
        if (!v15)
        {
          *(void *)(a1 + a4[17] + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = (a2 - 1);
          OUTLINED_FUNCTION_6();
          return;
        }

        uint64_t v8 = v16;
        uint64_t v12 = a4[16];
      }
    }

    uint64_t v9 = a1 + v12;
  }

  __swift_storeEnumTagSinglePayload(v9, a2, a2, v8);
}

void type metadata completion function for EmergencyCountdownModel(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v10[0] = *(void *)(v2 - 8) + 64LL;
    v10[1] = v10[0];
    void v10[2] = v10[0];
    v10[3] = v10[0];
    v10[4] = v10[0];
    void v10[5] = v10[0];
    v10[6] = v10[0];
    _BYTE v10[7] = v10[0];
    v10[8] = v10[0];
    type metadata accessor for Loggable<String>( 319LL,  &lazy cache variable for type metadata for Loggable<Bool>,  (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      uint64_t v11 = *(void *)(v4 - 8) + 64LL;
      uint64_t v12 = v11;
      type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>( 319LL,  &lazy cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
      if (v7 <= 0x3F)
      {
        uint64_t v13 = *(void *)(v6 - 8) + 64LL;
        type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>( 319LL,  (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor,  &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
        if (v9 <= 0x3F)
        {
          uint64_t v14 = *(void *)(v8 - 8) + 64LL;
          char v15 = &unk_32C948;
          swift_initStructMetadata(a1, 256LL, 14LL, v10, a1 + 16);
        }
      }
    }
  }

void type metadata accessor for Loggable<String>(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t v4 = type metadata accessor for Loggable(a1, a3);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }

  OUTLINED_FUNCTION_2();
}

void type metadata accessor for CodableAceObject<SAIntentGroupLaunchAppWithIntent>( uint64_t a1, unint64_t *a2, unint64_t *a3, void *a4)
{
  if (!*a2)
  {
    type metadata accessor for INPlayVoicemailIntent(255LL, a3, a4);
    unint64_t v7 = type metadata accessor for CodableAceObject(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }

  OUTLINED_FUNCTION_2();
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownUpdateAction( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_18F154 + 4 * byte_32C743[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18F188 + 4 * byte_32C73E[v4]))();
}

uint64_t sub_18F188(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18F190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18F198LL);
  }
  return result;
}

uint64_t sub_18F1A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18F1ACLL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::EmergencyCountdownUpdateAction_optional result = a2 + 1;
  return result;
}

uint64_t sub_18F1B0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18F1B8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownUpdateAction()
{
  return &type metadata for EmergencyCountdownUpdateAction;
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF2) {
    return ((uint64_t (*)(void))((char *)&loc_18F220 + 4 * byte_32C74D[v4]))();
  }
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_18F254 + 4 * byte_32C748[v4]))();
}

uint64_t sub_18F254(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18F25C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18F264LL);
  }
  return result;
}

uint64_t sub_18F270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18F278LL);
  }
  *(_BYTE *)PhoneCallFlowDelegatePlugin::EmergencyCountdownUpdateAction_optional result = a2 + 13;
  return result;
}

uint64_t sub_18F27C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18F284(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for EmergencyCountdownModel.CodingKeys()
{
  return &unk_406038;
}

uint64_t OUTLINED_FUNCTION_1_61()
{
  return type metadata accessor for EmergencyCountdownModel(0LL);
}

uint64_t OUTLINED_FUNCTION_2_61()
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(v1 - 304) + 8LL))(*(void *)(v1 - 176), v0);
}

uint64_t OUTLINED_FUNCTION_3_77(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(v2, a2, v3, v2, *(void *)(v4 - 312));
}

uint64_t OUTLINED_FUNCTION_7_67@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void, uint64_t))(a1 + 8))(*(void *)(v2 - 176), v1);
}

uint64_t OUTLINED_FUNCTION_9_53( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  return Loggable.init(wrappedValue:)(va, v13);
}

uint64_t OUTLINED_FUNCTION_13_57()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 304) + 8LL))( *(void *)(v0 - 176),  *(void *)(v0 - 184));
}

uint64_t OUTLINED_FUNCTION_14_44@<X0>(uint64_t a1@<X8>)
{
  return v3(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_16_38(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 168))(a1, a2, v2);
}

void *OUTLINED_FUNCTION_18_44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.wrappedValue.getter(&a9);
}

  ;
}

uint64_t OUTLINED_FUNCTION_22_36@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 120) + a1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_24_30()
{
  return ((uint64_t (*)(void))CodableAceObject.init(wrappedValue:))();
}

uint64_t OUTLINED_FUNCTION_29_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, *(void *)(v5 - 184), a1, a5);
}

uint64_t OUTLINED_FUNCTION_33_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, a3, a4, v4);
}

void OUTLINED_FUNCTION_39_15()
{
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  *(_DWORD *)(v0 - 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0;
}

uint64_t OUTLINED_FUNCTION_41_22(uint64_t a1)
{
  return CodableAceObject.init(wrappedValue:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_42_16()
{
  return __swift_destroy_boxed_opaque_existential_1(*(void **)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_46_18( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return Loggable.wrappedValue.setter(&a13, a1);
}

uint64_t SeasContactInSingleAppRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[5] = a6;
  v7[6] = v6;
  void v7[3] = a1;
  v7[4] = a5;
  return swift_task_switch( SeasContactInSingleAppRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:),  0LL,  0LL);
}

uint64_t SeasContactInSingleAppRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)()
{
  uint64_t v1 = static SeasRulesHelper.getContactDonationInfo(phoneCallNLIntent:appBundleIds:)( *(void **)(v0 + 32),  *(void *)(v0 + 40));
  if (!v2) {
    goto LABEL_9;
  }
  unint64_t v5 = v2;
  if ((v4 & 1) != 0 || v3 != 1)
  {
    OUTLINED_FUNCTION_39();
LABEL_9:
    uint64_t v20 = *(uint64_t **)(v0 + 24);
    uint64_t v21 = (unsigned int *)&enum case for AppMatchResolution.noMatchFound(_:);
    goto LABEL_12;
  }

  uint64_t v6 = v1;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  swift_retain_n(v7, 2LL);
  uint64_t v9 = swift_bridgeObjectRetain_n(v5, 2LL);
  char v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v12 = static os_log_type_t.debug.getter(v10, v11);
  BOOL v13 = os_log_type_enabled(v10, v12);
  uint64_t v14 = *(void **)(v0 + 48);
  if (v13)
  {
    uint64_t v15 = swift_slowAlloc(22LL, -1LL);
    uint64_t v26 = swift_slowAlloc(64LL, -1LL);
    v27[0] = v26;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v17 = v14[2];
    uint64_t v16 = v14[3];
    os_log_type_t type = v12;
    uint64_t v19 = v14[4];
    uint64_t v18 = (void *)v14[5];
    v27[1] = 0LL;
    _OWORD v27[2] = 0xE000000000000000LL;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v17, v16, v19, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v15 + 4);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_18();
    *(_WORD *)(v15 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v5, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v15 + 14);
    swift_bridgeObjectRelease_n(v5, 3LL);
    _os_log_impl(&dword_0, v10, type, "%s current contact only exists in third party app %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v26, 2LL);
    OUTLINED_FUNCTION_0_2(v26);
    OUTLINED_FUNCTION_0_2(v15);
  }

  else
  {
    OUTLINED_FUNCTION_14_18();
    swift_bridgeObjectRelease_n(v5, 2LL);
  }

  uint64_t v20 = *(uint64_t **)(v0 + 24);
  *uint64_t v20 = v6;
  v20[1] = v5;
  uint64_t v21 = (unsigned int *)&enum case for AppMatchResolution.resolved(_:);
LABEL_12:
  uint64_t v22 = *v21;
  uint64_t matched = type metadata accessor for AppMatchResolution(0LL);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(matched - 8) + 104LL))(v20, v22, matched);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::String __swiftcall SeasContactInSingleAppRule.getName()()
{
  uint64_t v0 = (void *)0x800000000032CA80LL;
  uint64_t v1 = 0xD00000000000001ALL;
  result._object = v0;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t SeasContactInSingleAppRule.deinit()
{
  return v0;
}

uint64_t SeasContactInSingleAppRule.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 48LL, 7LL);
}

uint64_t SeasContactInSingleAppRule.__allocating_init()()
{
  uint64_t v1 = swift_allocObject(v0, 48LL, 7LL);
  SeasContactInSingleAppRule.init()();
  return v1;
}

void *SeasContactInSingleAppRule.init()()
{
  v0[2] = type metadata accessor for SeasContactInSingleAppRule();
  v0[3] = &outlined read-only object #0 of SeasContactInSingleAppRule.init();
  v0[4] = 0LL;
  v0[5] = 0LL;
  return v0;
}

uint64_t protocol witness for SeasRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:) in conformance SeasContactInSingleAppRule( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(int **)(**(void **)v6 + 88LL);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  uint64_t v15 = (void *)swift_task_alloc(v14[1]);
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for SeasContactInSingleAppRule()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin26SeasContactInSingleAppRule);
}

uint64_t OUTLINED_FUNCTION_0_68()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 24));
}

uint64_t static UsoUtils.buildDummyReferenceEntity()()
{
  uint64_t v1 = (char *)&v23 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for UsoEntity_common_ReferenceType.DefinedValues(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  unint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UsoTaskBuilder_noVerb_common_Person(0LL);
  OUTLINED_FUNCTION_15_2(v6);
  uint64_t v7 = UsoTaskBuilder_noVerb_common_Person.init()();
  uint64_t v8 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
  OUTLINED_FUNCTION_15_2(v8);
  uint64_t v9 = UsoEntityBuilder_common_Person.init()();
  uint64_t v10 = type metadata accessor for UsoEntityBuilder_common_ReferenceType(0LL);
  OUTLINED_FUNCTION_15_2(v10);
  uint64_t v11 = UsoEntityBuilder_common_ReferenceType.init()();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for UsoEntity_common_ReferenceType.DefinedValues.common_ReferenceType_DefiniteReference(_:),  v2);
  dispatch thunk of UsoEntityBuilder_common_ReferenceType.setDefinedValue(value:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = swift_retain();
  dispatch thunk of UsoEntityBuilderGlobalArgs.setUsoReferenceType(value:)( v12,  &protocol witness table for UsoEntityBuilder_common_ReferenceType);
  swift_release(v11);
  dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.setEntity(value:)(v9);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v14 + 16) = xmmword_31FE60;
  *(void *)(v14 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  uint64_t v24 = v14;
  specialized Array._endMutation()(v14, v15, v16, v17);
  uint64_t v18 = v24;
  uint64_t v19 = type metadata accessor for UsoBuilderOptions(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v1, 1LL, 1LL, v19);
  swift_retain();
  uint64_t v20 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v18, v1);
  swift_bridgeObjectRelease();
  outlined destroy of UsoBuilderOptions?((uint64_t)v1);
  uint64_t v21 = static UsoConversionUtils.extractFirstEntityFromGraph(graph:)(v20);
  swift_release(v7);
  swift_release(v9);
  swift_release(v11);
  swift_release(v20);
  return v21;
}

ValueMetadata *type metadata accessor for UsoUtils()
{
  return &type metadata for UsoUtils;
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional __swiftcall SearchCallHistoryCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  unint64_t v2 = _findStringSwitchCaseWithCache(cases:string:cache:)( &outlined read-only object #0 of SearchCallHistoryCATs.Properties.init(rawValue:),  rawValue._countAndFlagsBits,  rawValue._object,  &outlined variable #1 of SearchCallHistoryCATs.Properties.init(rawValue:));
  swift_bridgeObjectRelease(object);
  if (v2 >= 0x28) {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional)40;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional)v2;
  }
}

uint64_t SearchCallHistoryCATs.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_18FC3C + 4 * byte_32CB00[a1]))( 0xD000000000000027LL,  0x8000000000344120LL);
}

void sub_18FC3C()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATs.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATs.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATs.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATs.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATs::Properties_optional *a2@<X8>)
{
  result.value = SearchCallHistoryCATs.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATs.Properties@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = SearchCallHistoryCATs.Properties.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:completion:)()
{
  return OUTLINED_FUNCTION_222_1();
}

{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  unint64_t v7;
  OUTLINED_FUNCTION_163();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_8_2(v4, 80LL);
  OUTLINED_FUNCTION_6_62(v5, (__n128)xmmword_31D870);
  if (v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_17_38();
    uint64_t v7 = v3;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_54_0();
    v5[3].n128_u64[1] = 0LL;
    v5[4].n128_u64[0] = 0LL;
  }

  v5[3].n128_u64[0] = v7;
  v5[4].n128_u64[1] = v6;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_290(v1);
  return OUTLINED_FUNCTION_51_12((uint64_t)v5);
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.buildCallRecordDetail(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_12_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_12_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(39LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  OUTLINED_FUNCTION_58_1();
  return OUTLINED_FUNCTION_218_0(v0);
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.buildCallRecordDetail(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:completion:)()
{
  return OUTLINED_FUNCTION_222_1();
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_12_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_12_55(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneCallRecord(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  uint64_t v8 = OUTLINED_FUNCTION_102(44LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  OUTLINED_FUNCTION_58_1();
  return OUTLINED_FUNCTION_218_0(v0);
}

uint64_t SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.buildCallRecordDisplayName(callRecord:));
}

uint64_t SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 80LL);
  OUTLINED_FUNCTION_6_62(v3, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_17_38();
    unint64_t v5 = a1;
  }

  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_32_23();
  }

  v3[3].n128_u64[0] = v5;
  v3[4].n128_u64[1] = v4;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_263_0();
  return OUTLINED_FUNCTION_1_41((uint64_t)v3);
}

void SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:completion:)()
{
  char v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = OUTLINED_FUNCTION_8_2(v8, 128LL);
  *(_OWORD *)(v9 + 16) = xmmword_31D880;
  uint64_t v10 = (void *)(v9 + 48);
  OUTLINED_FUNCTION_56_0();
  *(void *)(v11 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v11 + 40) = v12;
  outlined init with copy of SpeakableString?( v5,  (uint64_t)v7,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35((uint64_t)v7, 1LL, v13);
  if (v14)
  {
    outlined destroy of SpeakableString?((uint64_t)v7, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }

  else
  {
    *(void *)(v9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL))( boxed_opaque_existential_1,  v7,  v13);
  }

  OUTLINED_FUNCTION_171_3();
  *(void *)(v9 + 80) = v16;
  *(void *)(v9 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v17;
  if ((v1 & 1) != 0)
  {
    uint64_t v18 = 0LL;
    uint64_t v3 = 0LL;
    *(void *)(v9 + 104) = 0LL;
    *(void *)(v9 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v18 = &type metadata for Double;
  }

  *(void *)(v9 + 120) = v18;
  *(void *)(v9 + 96) = v3;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000022LL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(_BYTE *)(v5 + 80) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v5 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  v0[7] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_31D880;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v3 + 40) = 0x800000000034C620LL;
  OUTLINED_FUNCTION_29_16(v1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_234_0(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
    uint64_t v8 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  OUTLINED_FUNCTION_162_4();
  if ((v9 & 1) != 0)
  {
    uint64_t v11 = 0LL;
    uint64_t v10 = 0LL;
    *(void *)(v3 + 104) = 0LL;
    *(void *)(v3 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v10 = v0[4];
    uint64_t v11 = &type metadata for Double;
  }

  *(void *)(v3 + 120) = v11;
  *(void *)(v3 + 96) = v10;
  uint64_t v12 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v13 = (void *)OUTLINED_FUNCTION_230_0(v12);
  OUTLINED_FUNCTION_109(v13);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v14, v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_71_9();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = OUTLINED_FUNCTION_77_1(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D880;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v5 + 40) = 0x800000000034C620LL;
  OUTLINED_FUNCTION_29_16(v2, v6, &demangling cache variable for type metadata for SpeakableString?);
  char v7 = OUTLINED_FUNCTION_26_0();
  uint64_t v8 = OUTLINED_FUNCTION_45_0(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v1[9] = v2;
    uint64_t v10 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  OUTLINED_FUNCTION_162_4();
  if ((v11 & 1) != 0)
  {
    uint64_t v13 = 0LL;
    uint64_t v12 = 0LL;
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  else
  {
    uint64_t v12 = v0[3];
    uint64_t v13 = &type metadata for Double;
  }

  v1[15] = v13;
  v1[12] = v12;
  uint64_t v14 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[7] = v14;
  OUTLINED_FUNCTION_53_7(v14, (uint64_t)SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:));
  uint64_t v15 = OUTLINED_FUNCTION_40(0xD000000000000022LL);
  return OUTLINED_FUNCTION_25_5(v15, v16, v17, v18);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t (*v0)(void);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  char v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_174_2();
  return OUTLINED_FUNCTION_3_0(v0);
}

uint64_t SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:)()
{
  char v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 128LL);
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v7 + 40) = v8;
  OUTLINED_FUNCTION_47_3();
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  uint64_t v10 = OUTLINED_FUNCTION_35(v0, 1LL, v9);
  if (v11)
  {
    OUTLINED_FUNCTION_182_1(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
    uint64_t v12 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_38_0((uint64_t)v12);
  }

  OUTLINED_FUNCTION_171_3();
  *(void *)(v6 + 80) = v13;
  *(void *)(v6 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v14;
  if ((v2 & 1) != 0)
  {
    uint64_t v15 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v6 + 104) = 0LL;
    *(void *)(v6 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v15 = &type metadata for Double;
  }

  *(void *)(v6 + 120) = v15;
  *(void *)(v6 + 96) = v4;
  OUTLINED_FUNCTION_260(0xD000000000000022LL, 0x8000000000344180LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:completion:)()
{
  char v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  *(_OWORD *)(v5 + 16) = xmmword_31D880;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000014LL;
  *(void *)(v5 + 40) = 0x800000000034C640LL;
  if (v3)
  {
    uint64_t v6 = type metadata accessor for DialogCalendar(0LL);
    uint64_t v7 = v3;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  *(void *)(v5 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
  *(void *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(void *)(v5 + 80) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_202_1((uint64_t)"isTimeDescriptive");
  *(void *)(v5 + 120) = &type metadata for Bool;
  *(_BYTE *)(v5 + 96) = v1 & 1;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_23_19(0xD000000000000024LL);
  return OUTLINED_FUNCTION_51_12(v5);
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:));
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)()
{
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = OUTLINED_FUNCTION_125(v5);
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  uint64_t v7 = OUTLINED_FUNCTION_307(v6, v2 + 3);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for DialogCalendar(v7);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  char v8 = *(_BYTE *)(v0 + 64);
  *(void *)(v1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x800000000034C660LL;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v8;
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v1 + 80) = v2;
  OUTLINED_FUNCTION_3_8();
  uint64_t v9 = OUTLINED_FUNCTION_46();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_113_5(v9);
  OUTLINED_FUNCTION_45_8(v10);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  OUTLINED_FUNCTION_50_11();
  OUTLINED_FUNCTION_206_1();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = OUTLINED_FUNCTION_27(v5);
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  uint64_t v7 = OUTLINED_FUNCTION_307(v6, v2 + 3);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for DialogCalendar(v7);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  char v8 = *(_BYTE *)(v0 + 56);
  *(void *)(v1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x800000000034C660LL;
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v8;
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v1 + 80) = v2;
  OUTLINED_FUNCTION_3_8();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v9;
  OUTLINED_FUNCTION_30(v9, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  uint64_t v10 = OUTLINED_FUNCTION_40_16(v2 + 19);
  return OUTLINED_FUNCTION_12_28(v10, v11, v12, v13);
}

uint64_t SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.confirmDateCreated(dateCreatedToConfirm:isTimeDescriptive:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_131_3();
  OUTLINED_FUNCTION_206_1();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 128LL);
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3 + 3;
  *(void *)(v6 + 40) = 0x800000000034C640LL;
  if (v2)
  {
    uint64_t v7 = type metadata accessor for DialogCalendar(0LL);
    char v8 = v2;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_52_1();
  }

  *(void *)(v6 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v8;
  *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v6 + 80) = v3;
  OUTLINED_FUNCTION_78_12((uint64_t)"isTimeDescriptive");
  *(void *)(v6 + 120) = &type metadata for Bool;
  *(_BYTE *)(v6 + 96) = a2 & 1;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_260(v3 + 19, 0x80000000003441B0LL);
  return OUTLINED_FUNCTION_1_41(v6);
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000012LL;
  *(void *)(v2 + 40) = 0x800000000034C680LL;
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_140_0();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v4;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000022LL);
  return OUTLINED_FUNCTION_1_41(v2);
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:));
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_125(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"recipientToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_18_2();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  char v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_50_11();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"recipientToConfirm");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for DialogPerson(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_18_2();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  char v8 = OUTLINED_FUNCTION_40_16(0xD000000000000022LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  *(_OWORD *)(v2 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000012LL;
  *(void *)(v3 + 40) = v4;
  if (v0)
  {
    uint64_t v5 = OUTLINED_FUNCTION_140_0();
    uint64_t v6 = v0;
  }

  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_55_12();
  }

  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_107_6(0xD000000000000022LL, (uint64_t)"SearchCallHistory#ConfirmRecipient");
  return OUTLINED_FUNCTION_1_41(v2);
}

uint64_t SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.confirmRecipient(recipientToConfirm:));
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_136_0(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_53_18();
    unint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD00000000000001FLL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.confirmUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_77_10(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  char v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_77_10(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  char v8 = OUTLINED_FUNCTION_102(31LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_136_0(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_53_18();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_55(0xD00000000000001FLL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t SearchCallHistoryCATs.confirmUnseen(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.confirmUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.errorWithCode(completion:)()
{
  return OUTLINED_FUNCTION_13(31LL);
}

uint64_t SearchCallHistoryCATs.errorWithCode()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(31LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(31LL, 0x8000000000344230LL, (uint64_t)_swiftEmptyArrayStorage);
}

void SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:completion:)()
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  *(_OWORD *)(v4 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_135_1(v4);
  OUTLINED_FUNCTION_47_3();
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_35(v0, 1LL, v5);
  if (v7)
  {
    OUTLINED_FUNCTION_182_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
    char v8 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_38_0((uint64_t)v8);
  }

  OUTLINED_FUNCTION_177();
  *(void *)(v4 + 80) = v9;
  *(void *)(v4 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  if (v2)
  {
    uint64_t v11 = OUTLINED_FUNCTION_53_18();
    uint64_t v12 = v2;
  }

  else
  {
    uint64_t v12 = 0LL;
    uint64_t v11 = 0LL;
    *(void *)(v4 + 104) = 0LL;
    *(void *)(v4 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  *(void *)(v4 + 96) = v12;
  *(void *)(v4 + 120) = v11;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000037LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v4[6] = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v10 = v9[3];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_8_2(v11, 128LL);
  v9[7] = v12;
  *(_OWORD *)(v12 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_135_1(v12);
  OUTLINED_FUNCTION_29_16(v10, v13, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_26_0();
  uint64_t v15 = OUTLINED_FUNCTION_234_0(v14);
  if (v16)
  {
    OUTLINED_FUNCTION_41_1(v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v12 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    uint64_t v17 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v17);
  }

  uint64_t v18 = v9[4];
  uint64_t v19 = OUTLINED_FUNCTION_203_2();
  if (v18)
  {
    uint64_t v19 = type metadata accessor for PhoneSearchCallHistoryIntent(v19);
  }

  else
  {
    *(void *)(v12 + 104) = 0LL;
    *(void *)(v12 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  *(void *)(v12 + 96) = v18;
  *(void *)(v12 + 120) = v19;
  OUTLINED_FUNCTION_18_2();
  uint64_t v20 = OUTLINED_FUNCTION_46();
  uint64_t v21 = (void *)OUTLINED_FUNCTION_230_0(v20);
  OUTLINED_FUNCTION_109(v21);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_8_47(v22, 0xD000000000000037LL, v23, v12, a9);
}

{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  OUTLINED_FUNCTION_50_11();
  uint64_t v11 = v9[2];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_8_2(v12, 128LL);
  uint64_t v14 = OUTLINED_FUNCTION_77_1(v13);
  *(_OWORD *)(v14 + 16) = xmmword_31D880;
  OUTLINED_FUNCTION_135_1(v14);
  OUTLINED_FUNCTION_29_16(v11, v15, &demangling cache variable for type metadata for SpeakableString?);
  char v16 = OUTLINED_FUNCTION_26_0();
  uint64_t v17 = OUTLINED_FUNCTION_45_0(v16);
  if (v18)
  {
    OUTLINED_FUNCTION_41_1(v17, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    void v10[9] = v11;
    uint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v19);
  }

  uint64_t v20 = v9[3];
  uint64_t v21 = OUTLINED_FUNCTION_203_2();
  if (v20)
  {
    uint64_t v21 = type metadata accessor for PhoneSearchCallHistoryIntent(v21);
  }

  else
  {
    v10[13] = 0LL;
    v10[14] = 0LL;
  }

  v10[12] = v20;
  v10[15] = v21;
  OUTLINED_FUNCTION_18_2();
  uint64_t v22 = (void *)OUTLINED_FUNCTION_46();
  v9[7] = v22;
  OUTLINED_FUNCTION_53_7(v22, (uint64_t)SearchCallHistoryCATs.confirmCallTypes(callTypeToConfirm:callTypesCount:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD000000000000037LL, v23, (uint64_t)v10, a9);
}

uint64_t SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATs.errorWithCodeAppConfigurationRequired(appName:intent:)()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 128LL);
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  char v7 = (void *)(v6 + 48);
  OUTLINED_FUNCTION_135_1(v6);
  outlined init with copy of SpeakableString?(v4, v0, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t v9 = OUTLINED_FUNCTION_35(v0, 1LL, v8);
  if (v10)
  {
    OUTLINED_FUNCTION_41_1(v9, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)char v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v0,  v8);
  }

  OUTLINED_FUNCTION_177();
  *(void *)(v6 + 80) = v12;
  *(void *)(v6 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v13;
  if (v2)
  {
    uint64_t v14 = OUTLINED_FUNCTION_53_18();
    uint64_t v15 = v2;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_123_3();
  }

  *(void *)(v6 + 96) = v15;
  *(void *)(v6 + 120) = v14;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_55(0xD000000000000037LL, v16);
  return OUTLINED_FUNCTION_50();
}

void SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:completion:)()
{
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_282();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_8_2(v12, 320LL);
  OUTLINED_FUNCTION_3_78(v13, (__n128)xmmword_328A80);
  if ((v2 & 1) != 0) {
    OUTLINED_FUNCTION_241_0();
  }
  else {
    uint64_t v14 = &type metadata for Double;
  }
  v13[3].n128_u64[0] = v5;
  v13[4].n128_u64[1] = (unint64_t)v14;
  v13[5].n128_u64[0] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_163_3((uint64_t)"totalCallRecordCount");
  if ((v4 & 1) != 0)
  {
    uint64_t v15 = 0LL;
    unint64_t v3 = 0LL;
    v13[6].n128_u64[1] = 0LL;
    v13[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v15 = &type metadata for Double;
  }

  v13[6].n128_u64[0] = v3;
  OUTLINED_FUNCTION_224_1((uint64_t)v15);
  if (v0)
  {
    uint64_t v16 = OUTLINED_FUNCTION_50_6();
    uint64_t v17 = v0;
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_129_6();
  }

  OUTLINED_FUNCTION_192_2(v16, v17);
  if (v11)
  {
    uint64_t v18 = OUTLINED_FUNCTION_53_18();
    uint64_t v19 = v11;
  }

  else
  {
    uint64_t v18 = OUTLINED_FUNCTION_239_1();
  }

  OUTLINED_FUNCTION_139_4(v18, v19);
  v13[15].n128_u8[0] = v9 & 1;
  OUTLINED_FUNCTION_313();
  v13[16].n128_u64[1] = v20;
  v13[17].n128_u64[0] = v21;
  v13[17].n128_u64[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_29_16(v7, v22, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v23 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_106_5(v23);
  if (v24)
  {
    OUTLINED_FUNCTION_25_1();
    uint64_t v25 = OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_41_1(v25, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    v13[19].n128_u64[1] = v2;
    uint64_t v26 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_97_1( (uint64_t)v26,  v1,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL));
    OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_3_8();
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000027LL);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  _BYTE v10[7] = a9;
  v10[8] = v9;
  OUTLINED_FUNCTION_220_1(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v10[9] = OUTLINED_FUNCTION_12_0(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v12, v13, v14);
}

uint64_t SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)()
{
  char v3 = *(_BYTE *)(v0 + 104);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 320LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_247_1(v5);
  OUTLINED_FUNCTION_3_78(v6, (__n128)xmmword_328A80);
  if ((v3 & 1) != 0)
  {
    char v8 = 0LL;
    uint64_t v7 = 0LL;
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  else
  {
    uint64_t v7 = *(void *)(v0 + 24);
    char v8 = &type metadata for Double;
  }

  v2[6] = v7;
  v2[9] = v8;
  v2[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_196_2((uint64_t)"totalCallRecordCount");
  if ((v9 & 1) != 0) {
    OUTLINED_FUNCTION_180_2();
  }
  else {
    uint64_t v10 = &type metadata for Double;
  }
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = OUTLINED_FUNCTION_66_15((uint64_t)v10);
  if (v11)
  {
    uint64_t v12 = type metadata accessor for SirikitDeviceState(v12);
  }

  else
  {
    v2[19] = 0LL;
    v2[20] = 0LL;
  }

  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = OUTLINED_FUNCTION_65_11(v12);
  if (v13)
  {
    uint64_t v14 = type metadata accessor for PhoneSearchCallHistoryIntent(v14);
  }

  else
  {
    v2[25] = 0LL;
    v2[26] = 0LL;
  }

  OUTLINED_FUNCTION_47_16(v14);
  OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_204_1(v16);
  if (v17)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v18 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v18, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[39] = v1;
    uint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v19);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  uint64_t v20 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v21 = (void *)OUTLINED_FUNCTION_219_1(v20);
  OUTLINED_FUNCTION_308(v21);
  OUTLINED_FUNCTION_83_10();
  return OUTLINED_FUNCTION_43_15(v22, v23, v24, v25, v26);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_36_22();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_214_1();
    OUTLINED_FUNCTION_23_3();
    unint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_245_0();
  OUTLINED_FUNCTION_23_3();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_251_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  OUTLINED_FUNCTION_108_0();
  char v3 = *(_BYTE *)(v0 + 96);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 320LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_248_1(v5);
  OUTLINED_FUNCTION_3_78(v6, (__n128)xmmword_328A80);
  if ((v3 & 1) != 0)
  {
    char v8 = 0LL;
    uint64_t v7 = 0LL;
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  else
  {
    uint64_t v7 = *(void *)(v0 + 16);
    char v8 = &type metadata for Double;
  }

  v2[6] = v7;
  v2[9] = v8;
  v2[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_196_2((uint64_t)"totalCallRecordCount");
  if ((v9 & 1) != 0) {
    OUTLINED_FUNCTION_180_2();
  }
  else {
    uint64_t v10 = &type metadata for Double;
  }
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = OUTLINED_FUNCTION_66_15((uint64_t)v10);
  if (v11)
  {
    uint64_t v12 = type metadata accessor for SirikitDeviceState(v12);
  }

  else
  {
    v2[19] = 0LL;
    v2[20] = 0LL;
  }

  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = OUTLINED_FUNCTION_65_11(v12);
  if (v13)
  {
    uint64_t v14 = type metadata accessor for PhoneSearchCallHistoryIntent(v14);
  }

  else
  {
    v2[25] = 0LL;
    v2[26] = 0LL;
  }

  OUTLINED_FUNCTION_47_16(v14);
  OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_205(v16);
  if (v17)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v18 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v18, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[39] = v1;
    uint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v19);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  uint64_t v20 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 80) = v20;
  *uint64_t v20 = v0;
  v20[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  unint64_t v21 = OUTLINED_FUNCTION_69_13(0xD000000000000027LL);
  return OUTLINED_FUNCTION_32_16(v21, v22, v23, v24);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_32_29();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_209_0();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_207_0();
  OUTLINED_FUNCTION_23_3();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_216();
  return OUTLINED_FUNCTION_3_0(v0);
}

uint64_t SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v8 + 64) = OUTLINED_FUNCTION_12_0(v9);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:)()
{
  char v7 = v6;
  unint64_t v9 = v8;
  OUTLINED_FUNCTION_243_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 320LL);
  OUTLINED_FUNCTION_3_78(v11, (__n128)xmmword_328A80);
  if ((v1 & 1) != 0)
  {
    unint64_t v0 = 0LL;
    v11[3].n128_u64[1] = 0LL;
    v11[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_295();
  v11[3].n128_u64[0] = v0;
  v11[4].n128_u64[1] = v12;
  v11[5].n128_u64[0] = v13;
  OUTLINED_FUNCTION_78_12((uint64_t)"totalCallRecordCount");
  if ((v5 & 1) != 0)
  {
    uint64_t v14 = 0LL;
    unint64_t v4 = 0LL;
    v11[6].n128_u64[1] = 0LL;
    v11[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v14 = &type metadata for Double;
  }

  v11[6].n128_u64[0] = v4;
  v11[7].n128_u64[1] = (unint64_t)v14;
  v11[8].n128_u64[0] = 0x656369766564LL;
  v11[8].n128_u64[1] = 0xE600000000000000LL;
  if (v2)
  {
    OUTLINED_FUNCTION_50_6();
    unint64_t v15 = v2;
  }

  else
  {
    OUTLINED_FUNCTION_139_3();
  }

  v11[9].n128_u64[0] = v15;
  OUTLINED_FUNCTION_98_7();
  v11[10].n128_u64[1] = v16;
  v11[11].n128_u64[0] = v17;
  v11[11].n128_u64[1] = 0xE600000000000000LL;
  if (v9)
  {
    OUTLINED_FUNCTION_53_18();
    unint64_t v18 = v9;
  }

  else
  {
    unint64_t v18 = 0LL;
    v11[12].n128_u64[1] = 0LL;
    v11[13].n128_u64[0] = 0LL;
  }

  v11[12].n128_u64[0] = v18;
  OUTLINED_FUNCTION_207();
  v11[13].n128_u64[1] = v19;
  v11[14].n128_u64[0] = v20;
  OUTLINED_FUNCTION_192();
  v11[14].n128_u64[1] = v21;
  v11[15].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_313();
  v11[16].n128_u64[1] = v22;
  v11[17].n128_u64[0] = v23;
  v11[17].n128_u64[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_213_0(v24, v25, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v26 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v3, 1LL, v26);
  if (v27)
  {
    OUTLINED_FUNCTION_29_3();
    uint64_t v28 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_182_1(v28, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v11[19].n128_u64[1] = v26;
    char v29 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_155_2((uint64_t)v29);
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_295();
  OUTLINED_FUNCTION_260(v30 + 19, 0x8000000000344290LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:completion:)( uint64_t a1, uint64_t a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  return SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:completion:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  0xD000000000000031LL);
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  *(_BYTE *)(v7 + 81) = a5;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(_BYTE *)(v7 + 80) = a3;
  *(void *)(v7 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)()
{
  char v1 = *(_BYTE *)(v0 + 80);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_3_78(v3, (__n128)xmmword_320080);
  if ((v1 & 1) != 0) {
    OUTLINED_FUNCTION_137_4();
  }
  else {
    uint64_t v4 = *(void *)(v0 + 24);
  }
  OUTLINED_FUNCTION_184_0(v4);
  OUTLINED_FUNCTION_78_12((uint64_t)"totalCallRecordCount");
  if ((v5 & 1) != 0) {
    OUTLINED_FUNCTION_131_4();
  }
  else {
    uint64_t v6 = &type metadata for Double;
  }
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = OUTLINED_FUNCTION_37_26((uint64_t)v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    v3[9].n128_u64[1] = 0LL;
    v3[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_202_2(v8);
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = OUTLINED_FUNCTION_46();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_230_0(v9);
  OUTLINED_FUNCTION_258_1(v10);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_71_9();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_287();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  OUTLINED_FUNCTION_50_11();
  char v1 = *(_BYTE *)(v0 + 72);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  OUTLINED_FUNCTION_3_78(v3, (__n128)xmmword_320080);
  if ((v1 & 1) != 0) {
    OUTLINED_FUNCTION_137_4();
  }
  else {
    uint64_t v4 = *(void *)(v0 + 16);
  }
  OUTLINED_FUNCTION_185_0(v4);
  OUTLINED_FUNCTION_78_12((uint64_t)"totalCallRecordCount");
  if ((v5 & 1) != 0) {
    OUTLINED_FUNCTION_131_4();
  }
  else {
    uint64_t v6 = &type metadata for Double;
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = OUTLINED_FUNCTION_37_26((uint64_t)v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    v3[9].n128_u64[1] = 0LL;
    v3[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_202_2(v8);
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 56) = v9;
  *uint64_t v9 = v0;
  v9[1] = SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  uint64_t v10 = OUTLINED_FUNCTION_40_16(49LL);
  return OUTLINED_FUNCTION_12_28(v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_285();
    char v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  return OUTLINED_FUNCTION_232_1();
}

{
  unint64_t v0;
  char v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_269_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_8_2(v9, 176LL);
  OUTLINED_FUNCTION_3_78(v10, (__n128)xmmword_320080);
  if ((v6 & 1) != 0)
  {
    uint64_t v8 = 0LL;
    v10[3].n128_u64[1] = 0LL;
    v10[4].n128_u64[0] = 0LL;
  }

  v10[3].n128_u64[0] = v8;
  OUTLINED_FUNCTION_295();
  v10[4].n128_u64[1] = v11;
  v10[5].n128_u64[0] = v12;
  OUTLINED_FUNCTION_202_1((uint64_t)"totalCallRecordCount");
  if ((v2 & 1) != 0)
  {
    uint64_t v13 = 0LL;
    uint64_t v4 = 0LL;
    v10[6].n128_u64[1] = 0LL;
    v10[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v13 = &type metadata for Double;
  }

  v10[6].n128_u64[0] = v4;
  v10[7].n128_u64[1] = (unint64_t)v13;
  v10[8].n128_u64[0] = 0x746E65746E69LL;
  v10[8].n128_u64[1] = 0xE600000000000000LL;
  if (v0)
  {
    uint64_t v14 = OUTLINED_FUNCTION_53_18();
    unint64_t v15 = v0;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_54_0();
    v10[9].n128_u64[1] = 0LL;
    v10[10].n128_u64[0] = 0LL;
  }

  v10[9].n128_u64[0] = v15;
  v10[10].n128_u64[1] = v14;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_263_0();
  return OUTLINED_FUNCTION_3_6((uint64_t)v10);
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v6 + 40) = v5;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a4;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.offerToCallBack(completion:)()
{
  return OUTLINED_FUNCTION_13(33LL);
}

uint64_t SearchCallHistoryCATs.offerToCallBack()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(33LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(33LL, 0x8000000000344300LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:completion:)()
{
  return OUTLINED_FUNCTION_150_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_269_1();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 80LL);
  *(_OWORD *)(v7 + 16) = xmmword_31D870;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v7 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v0);
  return OUTLINED_FUNCTION_3_6(v7);
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.offerToContinueReading(isLastPage:));
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = OUTLINED_FUNCTION_31_30(v1);
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v4 = OUTLINED_FUNCTION_95_5( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:),  v3);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_310(v4);
  OUTLINED_FUNCTION_309(v5);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_254_1();
  return OUTLINED_FUNCTION_6_15(v6, v7, v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_61_12();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_281_0();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  __n128 v3 = OUTLINED_FUNCTION_31_30(v2);
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v5 = (void *)OUTLINED_FUNCTION_96_3( v3,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:),  v4);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_302(v5, (uint64_t)SearchCallHistoryCATs.offerToContinueReading(isLastPage:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v6 = OUTLINED_FUNCTION_271_0(40LL);
  return OUTLINED_FUNCTION_81_11(v6, v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_26_31();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_279_0();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  OUTLINED_FUNCTION_306();
  return OUTLINED_FUNCTION_147_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_163();
  uint64_t v1 = v0;
  __n128 v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 80LL);
  *(_OWORD *)(v7 + 16) = xmmword_31D870;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v7 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  OUTLINED_FUNCTION_264_0();
  return OUTLINED_FUNCTION_51_12(v7);
}

uint64_t SearchCallHistoryCATs.offerToContinueReading(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.offerToContinueReading(isLastPage:));
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:completion:)()
{
  return OUTLINED_FUNCTION_150_3();
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:));
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = OUTLINED_FUNCTION_174_3(v1);
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v4 = OUTLINED_FUNCTION_95_5( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:),  v3);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_310(v4);
  OUTLINED_FUNCTION_309(v5);
  OUTLINED_FUNCTION_254_1();
  return OUTLINED_FUNCTION_6_15(v6, v7, v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_61_12();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_281_0();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  __n128 v3 = OUTLINED_FUNCTION_174_3(v2);
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v5 = (void *)OUTLINED_FUNCTION_96_3( v3,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:),  v4);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_302(v5, (uint64_t)SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:));
  uint64_t v6 = OUTLINED_FUNCTION_271_0(44LL);
  return OUTLINED_FUNCTION_81_11(v6, v7, v8, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_26_31();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_279_0();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  return OUTLINED_FUNCTION_147_1();
}

uint64_t SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:));
}

uint64_t SearchCallHistoryCATs.promptForCallTypes(completion:)()
{
  return OUTLINED_FUNCTION_13(36LL);
}

uint64_t SearchCallHistoryCATs.promptForCallTypes()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(36LL, 0x8000000000344390LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.promptForDateCreated(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t SearchCallHistoryCATs.promptForDateCreated()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x80000000003443C0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.promptForRecipient(completion:)()
{
  return OUTLINED_FUNCTION_13(36LL);
}

uint64_t SearchCallHistoryCATs.promptForRecipient()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(36LL, 0x80000000003443F0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.promptForUnseen(completion:)()
{
  return OUTLINED_FUNCTION_13(33LL);
}

uint64_t SearchCallHistoryCATs.promptForUnseen()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  unsigned __int8 *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(33LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(33LL, 0x8000000000344420LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:completion:)()
{
  char v1 = v0;
  char v3 = v2;
  unint64_t v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 272LL);
  OUTLINED_FUNCTION_6_62(v11, (__n128)xmmword_323F80);
  if (v9)
  {
    OUTLINED_FUNCTION_17_38();
    unint64_t v12 = v9;
  }

  else
  {
    OUTLINED_FUNCTION_52_1();
  }

  v11[3].n128_u64[0] = v12;
  OUTLINED_FUNCTION_317();
  v11[4].n128_u64[1] = v13;
  v11[5].n128_u64[0] = v14;
  OUTLINED_FUNCTION_312();
  v11[5].n128_u64[1] = v15;
  v11[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_98_7();
  v11[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[8].n128_u64[0] = v16;
  v11[8].n128_u64[1] = 0xE600000000000000LL;
  if (v5)
  {
    uint64_t v17 = OUTLINED_FUNCTION_53_18();
    unint64_t v18 = v5;
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_139_3();
  }

  v11[9].n128_u64[0] = v18;
  v11[10].n128_u64[1] = v17;
  v11[11].n128_u64[0] = 0xD000000000000013LL;
  OUTLINED_FUNCTION_56_0();
  v11[11].n128_u64[1] = v19;
  v11[12].n128_u8[0] = v3 & 1;
  v11[13].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[14].n128_u64[0] = 0xD000000000000012LL;
  v11[14].n128_u64[1] = 0x800000000034C6E0LL;
  v11[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[15].n128_u8[0] = v1 & 1;
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000020LL);
  return OUTLINED_FUNCTION_3_6((uint64_t)v11);
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6)
{
  *(_BYTE *)(v7 + 74) = a6;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a5;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v7 + 40) = v6;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 272LL);
  unint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_6_62(v5, (__n128)xmmword_323F80);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_17_38();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[4];
  OUTLINED_FUNCTION_125_7(v6, v7);
  uint64_t v9 = OUTLINED_FUNCTION_170_2();
  if (v8)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }

  else
  {
    *(void *)(v1 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v1 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_261_0(v9);
  OUTLINED_FUNCTION_283_0();
  OUTLINED_FUNCTION_257(v10);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  v0[7] = v11;
  OUTLINED_FUNCTION_109(v11);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v12, v13, v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 272LL);
  v0[5] = v4;
  OUTLINED_FUNCTION_6_62(v4, (__n128)xmmword_323F80);
  if (v2)
  {
    unint64_t v5 = OUTLINED_FUNCTION_17_38();
    uint64_t v6 = v2;
  }

  else
  {
    unint64_t v5 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v7 = v0[3];
  OUTLINED_FUNCTION_125_7(v5, v6);
  uint64_t v8 = OUTLINED_FUNCTION_170_2();
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    v4[9].n128_u64[1] = 0LL;
    v4[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_261_0(v8);
  OUTLINED_FUNCTION_283_0();
  OUTLINED_FUNCTION_257(v9);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  char v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7(v10, (uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
  uint64_t v11 = OUTLINED_FUNCTION_40(v1 + 14);
  return OUTLINED_FUNCTION_25_5(v11, v12, v13, v14);
}

{
  char v0;
  char v1;
  char v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 272LL);
  OUTLINED_FUNCTION_6_62(v11, (__n128)xmmword_323F80);
  if (v9)
  {
    OUTLINED_FUNCTION_17_38();
    uint64_t v12 = v9;
  }

  else
  {
    OUTLINED_FUNCTION_55_12();
  }

  v11[3].n128_u64[0] = v12;
  OUTLINED_FUNCTION_317();
  v11[4].n128_u64[1] = v13;
  v11[5].n128_u64[0] = v14;
  OUTLINED_FUNCTION_312();
  v11[5].n128_u64[1] = v15;
  v11[6].n128_u8[0] = v7 & 1;
  OUTLINED_FUNCTION_98_7();
  v11[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[8].n128_u64[0] = v16;
  v11[8].n128_u64[1] = 0xE600000000000000LL;
  if (v5)
  {
    uint64_t v17 = OUTLINED_FUNCTION_53_18();
    unint64_t v18 = v5;
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_129_6();
  }

  v11[9].n128_u64[0] = v18;
  v11[10].n128_u64[1] = v17;
  v11[11].n128_u64[0] = 0xD000000000000013LL;
  v11[11].n128_u64[1] = 0x800000000034C6C0LL;
  v11[12].n128_u8[0] = v3 & 1;
  v11[13].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[14].n128_u64[0] = 0xD000000000000012LL;
  OUTLINED_FUNCTION_275_1((uint64_t)"isTimeRangeRequest");
  v11[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[15].n128_u8[0] = v1 & 1;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_107_6(0xD000000000000020LL, (uint64_t)"SearchCallHistory#ReadCallRecord");
  return OUTLINED_FUNCTION_3_6((uint64_t)v11);
}

uint64_t SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(_BYTE *)(v6 + 66) = a5;
  *(_BYTE *)(v6 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a4;
  *(_BYTE *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readCallRecord(callRecord:isLastOfGroup:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:completion:)( uint64_t a1, uint64_t a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  return SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:completion:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  0xD000000000000033LL);
}

uint64_t SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:completion:)( uint64_t a1, uint64_t a2, unint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = (__n128 *)OUTLINED_FUNCTION_8_2(v13, 176LL);
  OUTLINED_FUNCTION_3_78(v14, (__n128)xmmword_320080);
  if ((v8 & 1) != 0)
  {
    unint64_t v9 = 0LL;
    v14[3].n128_u64[1] = 0LL;
    v14[4].n128_u64[0] = 0LL;
  }

  v14[3].n128_u64[0] = v9;
  OUTLINED_FUNCTION_295();
  v14[4].n128_u64[1] = v15;
  v14[5].n128_u64[0] = v16;
  OUTLINED_FUNCTION_278_0((uint64_t)"totalCallRecordCount");
  if ((a4 & 1) != 0)
  {
    OUTLINED_FUNCTION_240_0();
  }

  else
  {
    uint64_t v17 = &type metadata for Double;
    unint64_t v18 = a3;
  }

  v14[6].n128_u64[0] = v18;
  v14[7].n128_u64[1] = (unint64_t)v17;
  v14[8].n128_u64[0] = 0x746E65746E69LL;
  v14[8].n128_u64[1] = 0xE600000000000000LL;
  if (a5)
  {
    uint64_t v19 = OUTLINED_FUNCTION_53_18();
    unint64_t v20 = a5;
  }

  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_54_0();
    v14[9].n128_u64[1] = 0LL;
    v14[10].n128_u64[0] = 0LL;
  }

  v14[9].n128_u64[0] = v20;
  v14[10].n128_u64[1] = v19;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_23_19(a8);
  return OUTLINED_FUNCTION_132_6((uint64_t)v14);
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  *(_BYTE *)(v7 + 81) = a5;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(_BYTE *)(v7 + 80) = a3;
  *(void *)(v7 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)()
{
  char v1 = *(_BYTE *)(v0 + 80);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 56) = v3;
  OUTLINED_FUNCTION_3_78(v3, (__n128)xmmword_320080);
  if ((v1 & 1) != 0) {
    OUTLINED_FUNCTION_137_4();
  }
  else {
    uint64_t v4 = *(void *)(v0 + 24);
  }
  OUTLINED_FUNCTION_184_0(v4);
  OUTLINED_FUNCTION_78_12((uint64_t)"totalCallRecordCount");
  if ((v5 & 1) != 0) {
    OUTLINED_FUNCTION_131_4();
  }
  else {
    uint64_t v6 = &type metadata for Double;
  }
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = OUTLINED_FUNCTION_37_26((uint64_t)v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    v3[9].n128_u64[1] = 0LL;
    v3[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_202_2(v8);
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = OUTLINED_FUNCTION_46();
  char v10 = (void *)OUTLINED_FUNCTION_230_0(v9);
  OUTLINED_FUNCTION_258_1(v10);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_71_9();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_287();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  OUTLINED_FUNCTION_50_11();
  char v1 = *(_BYTE *)(v0 + 72);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  OUTLINED_FUNCTION_3_78(v3, (__n128)xmmword_320080);
  if ((v1 & 1) != 0) {
    OUTLINED_FUNCTION_137_4();
  }
  else {
    uint64_t v4 = *(void *)(v0 + 16);
  }
  OUTLINED_FUNCTION_185_0(v4);
  OUTLINED_FUNCTION_78_12((uint64_t)"totalCallRecordCount");
  if ((v5 & 1) != 0) {
    OUTLINED_FUNCTION_131_4();
  }
  else {
    uint64_t v6 = &type metadata for Double;
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = OUTLINED_FUNCTION_37_26((uint64_t)v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    v3[9].n128_u64[1] = 0LL;
    v3[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_202_2(v8);
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 56) = v9;
  *uint64_t v9 = v0;
  v9[1] = SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:);
  char v10 = OUTLINED_FUNCTION_40_16(51LL);
  return OUTLINED_FUNCTION_12_28(v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_285();
    char v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  return OUTLINED_FUNCTION_232_1();
}

uint64_t SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v6 + 40) = v5;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a4;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readMissedCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:));
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:completion:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_8_2(v17, 416LL);
  *(_OWORD *)(v18 + 16) = xmmword_323F90;
  OUTLINED_FUNCTION_52_17(v18, 0x6953776F646E6977LL);
  if ((a2 & 1) != 0)
  {
    uint64_t v19 = 0LL;
    a1 = 0LL;
    *(void *)(v18 + 56) = 0LL;
    *(void *)(v18 + 64) = 0LL;
  }

  else
  {
    uint64_t v19 = &type metadata for Double;
  }

  *(void *)(v18 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  *(void *)(v18 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v19;
  *(void *)(v18 + 80) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_202_1((uint64_t)"callRecordsItem1");
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v18 + 96) = a3;
  *(void *)(v18 + 120) = v20;
  *(void *)(v18 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 136) = v21;
  *(void *)(v18 + 144) = a4;
  *(void *)(v18 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v22;
  *(void *)(v18 + 176) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 184) = v23;
  *(void *)(v18 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v18 + 216) = v24;
  *(void *)(v18 + 224) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v25;
  *(void *)(v18 + 240) = a6;
  OUTLINED_FUNCTION_98_7();
  *(void *)(v18 + 264) = v26;
  *(void *)(v18 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v27;
  *(void *)(v18 + 280) = 0xE600000000000000LL;
  if (a7)
  {
    uint64_t v28 = OUTLINED_FUNCTION_53_18();
    uint64_t v29 = a7;
  }

  else
  {
    uint64_t v28 = OUTLINED_FUNCTION_54_0();
    *(void *)(v18 + 296) = 0LL;
    *(void *)(v18 + 304) = 0LL;
  }

  *(void *)(v18 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v29;
  *(void *)(v18 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v28;
  *(void *)(v18 + 320) = 0xD000000000000013LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v30;
  *(_BYTE *)(v18 + 336) = a8 & 1;
  *(void *)(v18 + 360) = &type metadata for Bool;
  *(void *)(v18 + 36__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000012LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v18 + 376) = v31;
  *(void *)(v18 + 40__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v32;
  *(_BYTE *)(v18 + 384) = a9 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_29_3();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000029LL);
  return swift_bridgeObjectRelease();
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9)
{
  *(_WORD *)(v10 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a9;
  *(void *)(v10 + 64) = a8;
  *(void *)(v10 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
  *(void *)(v10 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a6;
  *(void *)(v10 + 56) = a7;
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v10 + 40) = a5;
  *(_BYTE *)(v10 + 104) = a3;
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  return OUTLINED_FUNCTION_173_2((uint64_t)SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  char v2 = *(_BYTE *)(v0 + 104);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 416LL);
  *(void *)(v0 + 80) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_323F90;
  OUTLINED_FUNCTION_52_17(v4, 0x6953776F646E6977LL);
  if ((v2 & 1) != 0)
  {
    uint64_t v6 = 0LL;
    uint64_t v5 = 0LL;
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  else
  {
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v6 = &type metadata for Double;
  }

  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 32);
  *(void *)(v4 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(void *)(v4 + 80) = 0xD000000000000010LL;
  *(void *)(v4 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x800000000034C700LL;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v4 + 96) = v9;
  *(void *)(v4 + 120) = v10;
  *(void *)(v4 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000010LL;
  *(void *)(v4 + 136) = 0x800000000034C720LL;
  *(void *)(v4 + 144) = v8;
  uint64_t v11 = OUTLINED_FUNCTION_270_1(v10, (uint64_t)"callRecordsItem3");
  uint64_t v12 = OUTLINED_FUNCTION_148_4(v11, (uint64_t)"callRecordsItem4");
  if (v7)
  {
    uint64_t v12 = type metadata accessor for PhoneSearchCallHistoryIntent(v12);
  }

  else
  {
    *(void *)(v4 + 296) = 0LL;
    *(void *)(v4 + 304) = 0LL;
  }

  char v13 = *(_BYTE *)(v0 + 106);
  char v14 = *(_BYTE *)(v0 + 105);
  *(void *)(v4 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
  *(void *)(v4 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(void *)(v4 + 320) = 0xD000000000000013LL;
  *(void *)(v4 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x800000000034C6C0LL;
  *(_BYTE *)(v4 + 336) = v14;
  *(void *)(v4 + 360) = &type metadata for Bool;
  *(void *)(v4 + 36__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000012LL;
  OUTLINED_FUNCTION_255(v13);
  OUTLINED_FUNCTION_191_1();
  OUTLINED_FUNCTION_20_14();
  OUTLINED_FUNCTION_124();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_8();
  uint64_t v15 = swift_task_alloc(v1);
  unint64_t v16 = (void *)OUTLINED_FUNCTION_219_1(v15);
  *unint64_t v16 = v0;
  v16[1] = SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:);
  OUTLINED_FUNCTION_40_10();
  return v18();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_36_22();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_16_1(*(uint64_t (**)(void))(v1 + 8));
  }

{
  uint64_t (*v0)(void);
  swift_bridgeObjectRelease();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_251_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t (*v18)(uint64_t);
  char v2 = *(_BYTE *)(v0 + 96);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 416LL);
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_323F90;
  OUTLINED_FUNCTION_52_17(v4, 0x6953776F646E6977LL);
  if ((v2 & 1) != 0)
  {
    uint64_t v6 = 0LL;
    uint64_t v5 = 0LL;
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  else
  {
    uint64_t v5 = *(void *)(v0 + 16);
    uint64_t v6 = &type metadata for Double;
  }

  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 24);
  *(void *)(v4 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(void *)(v4 + 80) = 0xD000000000000010LL;
  *(void *)(v4 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x800000000034C700LL;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v4 + 96) = v9;
  *(void *)(v4 + 120) = v10;
  *(void *)(v4 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000010LL;
  *(void *)(v4 + 136) = 0x800000000034C720LL;
  *(void *)(v4 + 144) = v8;
  uint64_t v11 = OUTLINED_FUNCTION_270_1(v10, (uint64_t)"callRecordsItem3");
  uint64_t v12 = OUTLINED_FUNCTION_148_4(v11, (uint64_t)"callRecordsItem4");
  if (v7)
  {
    uint64_t v12 = type metadata accessor for PhoneSearchCallHistoryIntent(v12);
  }

  else
  {
    *(void *)(v4 + 296) = 0LL;
    *(void *)(v4 + 304) = 0LL;
  }

  char v13 = *(_BYTE *)(v0 + 98);
  char v14 = *(_BYTE *)(v0 + 97);
  *(void *)(v4 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
  *(void *)(v4 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(void *)(v4 + 320) = 0xD000000000000013LL;
  *(void *)(v4 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x800000000034C6C0LL;
  *(_BYTE *)(v4 + 336) = v14;
  *(void *)(v4 + 360) = &type metadata for Bool;
  *(void *)(v4 + 36__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000012LL;
  OUTLINED_FUNCTION_255(v13);
  OUTLINED_FUNCTION_191_1();
  OUTLINED_FUNCTION_20_14();
  OUTLINED_FUNCTION_124();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_8();
  uint64_t v15 = (void *)swift_task_alloc(v1);
  *(void *)(v0 + 80) = v15;
  *uint64_t v15 = v0;
  v15[1] = SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:);
  unint64_t v16 = OUTLINED_FUNCTION_21_19(0xD000000000000029LL);
  return v18(v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_32_29();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t (*v0)(void);
  swift_bridgeObjectRelease();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_216();
  return OUTLINED_FUNCTION_3_0(v0);
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  *(void *)(v10 + 56) = a7;
  *(void *)(v10 + 64) = v9;
  *(_BYTE *)(v10 + 9__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a9;
  *(_BYTE *)(v10 + 97) = a8;
  *(void *)(v10 + 40) = a5;
  *(void *)(v10 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a6;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(_BYTE *)(v10 + 96) = a2;
  *(void *)(v10 + 16) = a1;
  return OUTLINED_FUNCTION_173_2((uint64_t)SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readMultipleCallRecords(windowSize:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v18 = OUTLINED_FUNCTION_8_2(v17, 416LL);
  *(_OWORD *)(v18 + 16) = xmmword_323F90;
  OUTLINED_FUNCTION_52_17(v18, 0x6953776F646E6977LL);
  if ((v9 & 1) != 0)
  {
    uint64_t v19 = 0LL;
    uint64_t v10 = 0LL;
    *(void *)(v18 + 56) = 0LL;
    *(void *)(v18 + 64) = 0LL;
  }

  else
  {
    uint64_t v19 = &type metadata for Double;
  }

  *(void *)(v18 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  *(void *)(v18 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v19;
  *(void *)(v18 + 80) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_78_12((uint64_t)"callRecordsItem1");
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v18 + 96) = a3;
  *(void *)(v18 + 120) = v20;
  *(void *)(v18 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 136) = v21;
  *(void *)(v18 + 144) = a4;
  *(void *)(v18 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v22;
  *(void *)(v18 + 176) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 184) = v23;
  *(void *)(v18 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v18 + 216) = v24;
  *(void *)(v18 + 224) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v25;
  *(void *)(v18 + 240) = a6;
  OUTLINED_FUNCTION_98_7();
  *(void *)(v18 + 264) = v26;
  *(void *)(v18 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v27;
  *(void *)(v18 + 280) = 0xE600000000000000LL;
  if (a7)
  {
    uint64_t v28 = OUTLINED_FUNCTION_53_18();
    uint64_t v29 = a7;
  }

  else
  {
    uint64_t v28 = OUTLINED_FUNCTION_54_0();
    *(void *)(v18 + 296) = 0LL;
    *(void *)(v18 + 304) = 0LL;
  }

  *(void *)(v18 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v29;
  *(void *)(v18 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v28;
  *(void *)(v18 + 320) = 0xD000000000000013LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v30;
  *(_BYTE *)(v18 + 336) = a8 & 1;
  *(void *)(v18 + 360) = &type metadata for Bool;
  *(void *)(v18 + 36__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000012LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v18 + 376) = v31;
  *(void *)(v18 + 40__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v32;
  *(_BYTE *)(v18 + 384) = a9 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_20_14();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_260(v33, v34);
  return OUTLINED_FUNCTION_132_6(v18);
}

void SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:completion:)()
{
  unint64_t v31 = v5;
  OUTLINED_FUNCTION_158_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 464LL);
  OUTLINED_FUNCTION_6_62(v7, (__n128)xmmword_32CC10);
  if (v2)
  {
    uint64_t v8 = OUTLINED_FUNCTION_17_38();
    uint64_t v9 = v2;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_75_3();
  }

  OUTLINED_FUNCTION_118_0(v8, v9);
  if (v3)
  {
    uint64_t v10 = OUTLINED_FUNCTION_53_18();
    uint64_t v11 = v3;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_236_1();
  }

  OUTLINED_FUNCTION_253_0(v10, v11);
  OUTLINED_FUNCTION_276_1((uint64_t)"isSingleDateRequest");
  OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_194_2((uint64_t)"isTimeRangeRequest");
  OUTLINED_FUNCTION_274_1((uint64_t)"voiceMailPosition");
  OUTLINED_FUNCTION_227_1(v12, v13, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v4, 1LL, v14);
  if (v15)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v16 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_322(v16, &demangling cache variable for type metadata for SpeakableString?);
    _OWORD *v1 = 0u;
    v1[1] = 0u;
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_213_1();
    OUTLINED_FUNCTION_149_4((uint64_t)v17);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_299();
  v7[17].n128_u64[0] = v20;
  v7[17].n128_u64[1] = v21;
  if ((v22 & 1) != 0)
  {
    uint64_t v23 = 0LL;
    unint64_t v19 = 0LL;
    v7[18].n128_u64[1] = 0LL;
    v7[19].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v23 = &type metadata for Double;
  }

  v7[18].n128_u64[0] = v19;
  v7[19].n128_u64[1] = (unint64_t)v23;
  v7[20].n128_u64[0] = v0;
  v7[20].n128_u64[1] = 0x800000000034C7A0LL;
  if ((v18 & 1) != 0)
  {
    uint64_t v24 = 0LL;
    unint64_t v25 = 0LL;
    v7[21].n128_u64[1] = 0LL;
    v7[22].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v24 = &type metadata for Double;
    unint64_t v25 = v31;
  }

  v7[21].n128_u64[0] = v25;
  v7[22].n128_u64[1] = (unint64_t)v24;
  v7[23].n128_u64[0] = v0 + 16;
  OUTLINED_FUNCTION_323();
  v7[23].n128_u64[1] = v26;
  v7[24].n128_u8[0] = v27 & 1;
  OUTLINED_FUNCTION_296();
  v7[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[26].n128_u64[0] = v28;
  OUTLINED_FUNCTION_294();
  v7[26].n128_u64[1] = v29;
  v7[28].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[27].n128_u8[0] = v30 & 1;
  OUTLINED_FUNCTION_142_5(v0 + 30);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10, char a11, char a12)
{
  *(void *)(v13 + 56) = a9;
  *(void *)(v13 + 64) = v12;
  *(_BYTE *)(v13 + 109) = a12;
  *(_BYTE *)(v13 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a11;
  OUTLINED_FUNCTION_111_6(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v13 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v14);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v15, v16, v17);
}

uint64_t SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)()
{
  uint64_t v3 = v0[3];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 464LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_247_1(v5);
  uint64_t v7 = OUTLINED_FUNCTION_12_55(v6, (__n128)xmmword_32CC10);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for PhoneCallRecord(v7);
  }

  else
  {
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  uint64_t v8 = v0[4];
  uint64_t v9 = OUTLINED_FUNCTION_38_22(v7);
  if (v8)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }

  else
  {
    v2[13] = 0LL;
    v2[14] = 0LL;
  }

  OUTLINED_FUNCTION_99_7();
  OUTLINED_FUNCTION_89_8(v10);
  OUTLINED_FUNCTION_176_2();
  OUTLINED_FUNCTION_94_8();
  OUTLINED_FUNCTION_133_5();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v11);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_112_5(v12);
  if (v13)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v14 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[33] = v1;
    uint64_t v15 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v15);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_34_23();
  if ((v16 & 1) != 0) {
    OUTLINED_FUNCTION_136_4();
  }
  else {
    uint64_t v17 = v0[6];
  }
  OUTLINED_FUNCTION_231_1(v17);
  OUTLINED_FUNCTION_141_4((uint64_t)"savedRecordsCount");
  if ((v18 & 1) != 0) {
    OUTLINED_FUNCTION_181();
  }
  else {
    unint64_t v19 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_200_2((uint64_t)v19);
  OUTLINED_FUNCTION_93_6((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v20 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v21 = (void *)OUTLINED_FUNCTION_219_1(v20);
  OUTLINED_FUNCTION_259_1(v21);
  OUTLINED_FUNCTION_83_10();
  return OUTLINED_FUNCTION_43_15(v22, v23, v24, v25, v26);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  OUTLINED_FUNCTION_108_0();
  uint64_t v4 = v0[2];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 464LL);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_248_1(v6);
  uint64_t v8 = OUTLINED_FUNCTION_12_55(v7, (__n128)xmmword_32CC10);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  uint64_t v9 = v0[3];
  uint64_t v10 = OUTLINED_FUNCTION_38_22(v8);
  if (v9)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }

  else
  {
    v2[13] = 0LL;
    v2[14] = 0LL;
  }

  OUTLINED_FUNCTION_100_6();
  OUTLINED_FUNCTION_89_8(v11);
  OUTLINED_FUNCTION_176_2();
  OUTLINED_FUNCTION_94_8();
  OUTLINED_FUNCTION_133_5();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v12);
  char v13 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_113_6(v13);
  if (v14)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v15 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[33] = v1;
    char v16 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v16);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_34_23();
  if ((v17 & 1) != 0) {
    OUTLINED_FUNCTION_136_4();
  }
  else {
    char v18 = v0[5];
  }
  OUTLINED_FUNCTION_231_1(v18);
  OUTLINED_FUNCTION_141_4((uint64_t)"savedRecordsCount");
  if ((v19 & 1) != 0) {
    OUTLINED_FUNCTION_181();
  }
  else {
    uint64_t v20 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_200_2((uint64_t)v20);
  OUTLINED_FUNCTION_93_6((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  unint64_t v21 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[10] = v21;
  *unint64_t v21 = v0;
  v21[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  uint64_t v22 = OUTLINED_FUNCTION_69_13(v3 + 30);
  return OUTLINED_FUNCTION_32_16(v22, v23, v24, v25);
}

uint64_t SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)( uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, unsigned __int8 a10, unsigned __int8 a11)
{
  *(_WORD *)(v11 + 100) = __PAIR16__(a11, a10);
  OUTLINED_FUNCTION_121(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v11 + 64) = OUTLINED_FUNCTION_12_0(v12);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v13, v14, v15);
}

void SearchCallHistoryCATs.readNewOrSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:)()
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_8_2(v8, 464LL);
  OUTLINED_FUNCTION_6_62(v9, (__n128)xmmword_32CC10);
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_17_38();
    uint64_t v11 = v2;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_55_12();
  }

  OUTLINED_FUNCTION_177_2(v10, v11);
  if (v3)
  {
    uint64_t v12 = OUTLINED_FUNCTION_53_18();
    uint64_t v13 = v3;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_123_3();
  }

  OUTLINED_FUNCTION_244_1(v12, v13);
  v9[8].n128_u64[1] = 0x800000000034C6C0LL;
  OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_195_1((uint64_t)"isTimeRangeRequest");
  OUTLINED_FUNCTION_275_1((uint64_t)"voiceMailPosition");
  OUTLINED_FUNCTION_230_1(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v4, 1LL, v16);
  if (v17)
  {
    OUTLINED_FUNCTION_44_1();
    uint64_t v18 = OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_88_5(v18, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v9[16].n128_u64[1] = v16;
    unint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_223_0((uint64_t)v19);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
  }

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_299();
  v9[17].n128_u64[0] = v22;
  v9[17].n128_u64[1] = v21;
  if ((v23 & 1) != 0)
  {
    uint64_t v24 = 0LL;
    unint64_t v0 = 0LL;
    v9[18].n128_u64[1] = 0LL;
    v9[19].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v24 = &type metadata for Double;
  }

  v9[18].n128_u64[0] = v0;
  v9[19].n128_u64[1] = (unint64_t)v24;
  v9[20].n128_u64[0] = v1;
  v9[20].n128_u64[1] = 0x800000000034C7A0LL;
  if ((v20 & 1) != 0)
  {
    uint64_t v25 = 0LL;
    unint64_t v26 = 0LL;
    v9[21].n128_u64[1] = 0LL;
    v9[22].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v25 = &type metadata for Double;
    unint64_t v26 = v32;
  }

  v9[21].n128_u64[0] = v26;
  v9[22].n128_u64[1] = (unint64_t)v25;
  v9[23].n128_u64[0] = v1 + 16;
  OUTLINED_FUNCTION_323();
  v9[23].n128_u64[1] = v27;
  v9[24].n128_u8[0] = v28 & 1;
  OUTLINED_FUNCTION_296();
  v9[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[26].n128_u64[0] = v29;
  OUTLINED_FUNCTION_294();
  v9[26].n128_u64[1] = v30;
  v9[28].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[27].n128_u8[0] = v31 & 1;
  OUTLINED_FUNCTION_55(v1 + 30, 0x80000000003444F0LL);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

void SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:completion:)()
{
  uint64_t v31 = v5;
  char v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_158_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_8_2(v10, 368LL);
  OUTLINED_FUNCTION_6_62((__n128 *)v11, (__n128)xmmword_32A100);
  if (v1)
  {
    uint64_t v12 = OUTLINED_FUNCTION_17_38();
    uint64_t v13 = v1;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_75_3();
  }

  OUTLINED_FUNCTION_118_0(v12, v13);
  if (v2)
  {
    uint64_t v14 = OUTLINED_FUNCTION_53_18();
    uint64_t v15 = v2;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_236_1();
  }

  *(void *)(v11 + 96) = v15;
  *(void *)(v11 + 120) = v14;
  *(void *)(v11 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000013LL;
  OUTLINED_FUNCTION_276_1((uint64_t)"isSingleDateRequest");
  *(_BYTE *)(v11 + 144) = v0 & 1;
  *(void *)(v11 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(void *)(v11 + 176) = 0xD000000000000012LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v11 + 184) = v16;
  *(_BYTE *)(v11 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4 & 1;
  *(void *)(v11 + 216) = v17;
  *(void *)(v11 + 224) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_274_1((uint64_t)"voiceMailPosition");
  OUTLINED_FUNCTION_227_1(v18, v19, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v20 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v3, 1LL, v20);
  if (v21)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v22 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_322(v22, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v11 + 240) = 0u;
    *(_OWORD *)(v11 + 256) = 0u;
  }

  else
  {
    char v23 = OUTLINED_FUNCTION_213_1();
    OUTLINED_FUNCTION_149_4((uint64_t)v23);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_143_3();
  *(void *)(v11 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v24;
  *(void *)(v11 + 280) = v25;
  if ((v7 & 1) != 0)
  {
    unint64_t v26 = 0LL;
    uint64_t v9 = 0LL;
    *(void *)(v11 + 296) = 0LL;
    *(void *)(v11 + 304) = 0LL;
  }

  else
  {
    unint64_t v26 = &type metadata for Double;
  }

  *(void *)(v11 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v9;
  *(void *)(v11 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v26;
  *(void *)(v11 + 320) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v11 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v27;
  if ((v28 & 1) != 0)
  {
    unint64_t v29 = 0LL;
    uint64_t v30 = 0LL;
    *(void *)(v11 + 344) = 0LL;
    *(void *)(v11 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    unint64_t v29 = &type metadata for Double;
    uint64_t v30 = v31;
  }

  *(void *)(v11 + 360) = v29;
  *(void *)(v11 + 336) = v30;
  OUTLINED_FUNCTION_142_5(0xD000000000000028LL);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  _BYTE v10[7] = a9;
  v10[8] = v9;
  OUTLINED_FUNCTION_111_6(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v10[9] = OUTLINED_FUNCTION_12_0(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v12, v13, v14);
}

uint64_t SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)()
{
  uint64_t v4 = v0[3];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 368LL);
  char v7 = (__n128 *)OUTLINED_FUNCTION_247_1(v6);
  uint64_t v8 = OUTLINED_FUNCTION_12_55(v7, (__n128)xmmword_32A100);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    *(void *)(v2 + 56) = 0LL;
    *(void *)(v2 + 64) = 0LL;
  }

  uint64_t v9 = v0[4];
  uint64_t v10 = OUTLINED_FUNCTION_38_22(v8);
  if (v9)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_99_7();
  OUTLINED_FUNCTION_89_8(v11);
  *(_BYTE *)(v2 + 144) = v12;
  *(void *)(v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(void *)(v2 + 176) = v3 + 1;
  OUTLINED_FUNCTION_226_1();
  OUTLINED_FUNCTION_133_5();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v13);
  uint64_t v14 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_112_5(v14);
  if (v15)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v16 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v2 + 264) = v1;
    uint64_t v17 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v17);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_34_23();
  if ((v18 & 1) != 0) {
    OUTLINED_FUNCTION_136_4();
  }
  else {
    uint64_t v19 = v0[6];
  }
  OUTLINED_FUNCTION_231_1(v19);
  OUTLINED_FUNCTION_141_4((uint64_t)"savedRecordsCount");
  if ((v20 & 1) != 0)
  {
    uint64_t v22 = 0LL;
    uint64_t v21 = 0LL;
    *(void *)(v2 + 344) = 0LL;
    *(void *)(v2 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v21 = v0[7];
    uint64_t v22 = &type metadata for Double;
  }

  *(void *)(v2 + 360) = v22;
  *(void *)(v2 + 336) = v21;
  uint64_t v23 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v24 = (void *)OUTLINED_FUNCTION_219_1(v23);
  OUTLINED_FUNCTION_259_1(v24);
  OUTLINED_FUNCTION_83_10();
  return OUTLINED_FUNCTION_43_15(v25, v26, v27, v28, v29);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_36_22();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_214_1();
    OUTLINED_FUNCTION_23_3();
    uint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v2);
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  OUTLINED_FUNCTION_108_0();
  uint64_t v4 = v0[2];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 368LL);
  char v7 = (__n128 *)OUTLINED_FUNCTION_248_1(v6);
  uint64_t v8 = OUTLINED_FUNCTION_12_55(v7, (__n128)xmmword_32A100);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    *(void *)(v2 + 56) = 0LL;
    *(void *)(v2 + 64) = 0LL;
  }

  uint64_t v9 = v0[3];
  uint64_t v10 = OUTLINED_FUNCTION_38_22(v8);
  if (v9)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_100_6();
  OUTLINED_FUNCTION_89_8(v11);
  *(_BYTE *)(v2 + 144) = v12;
  *(void *)(v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(void *)(v2 + 176) = v3 + 1;
  OUTLINED_FUNCTION_226_1();
  OUTLINED_FUNCTION_133_5();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v13);
  uint64_t v14 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_113_6(v14);
  if (v15)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v16 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v2 + 264) = v1;
    uint64_t v17 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v17);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_34_23();
  if ((v18 & 1) != 0) {
    OUTLINED_FUNCTION_136_4();
  }
  else {
    uint64_t v19 = v0[5];
  }
  OUTLINED_FUNCTION_231_1(v19);
  OUTLINED_FUNCTION_141_4((uint64_t)"savedRecordsCount");
  if ((v20 & 1) != 0)
  {
    uint64_t v22 = 0LL;
    uint64_t v21 = 0LL;
    *(void *)(v2 + 344) = 0LL;
    *(void *)(v2 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v21 = v0[6];
    uint64_t v22 = &type metadata for Double;
  }

  *(void *)(v2 + 360) = v22;
  *(void *)(v2 + 336) = v21;
  uint64_t v23 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[10] = v23;
  *uint64_t v23 = v0;
  v23[1] = SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:);
  uint64_t v24 = OUTLINED_FUNCTION_69_13(v3 + 23);
  return OUTLINED_FUNCTION_32_16(v24, v25, v26, v27);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_32_29();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    OUTLINED_FUNCTION_209_0();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

uint64_t SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)( uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_12_0(v10);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v11, v12, v13);
}

void SearchCallHistoryCATs.readNewVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_53_0();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 368LL);
  OUTLINED_FUNCTION_6_62((__n128 *)v15, (__n128)xmmword_32A100);
  if (v13)
  {
    OUTLINED_FUNCTION_17_38();
    uint64_t v16 = v13;
  }

  else
  {
    OUTLINED_FUNCTION_52_1();
  }

  *(void *)(v15 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v16;
  OUTLINED_FUNCTION_98_7();
  *(void *)(v15 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
  *(void *)(v15 + 80) = v18;
  *(void *)(v15 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xE600000000000000LL;
  if (v11)
  {
    OUTLINED_FUNCTION_53_18();
  }

  else
  {
    *(void *)(v15 + 104) = 0LL;
    *(void *)(v15 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_206_1();
  *(void *)(v15 + 96) = v19;
  *(void *)(v15 + 120) = v20;
  *(void *)(v15 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0 | 2;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v15 + 136) = v21;
  *(_BYTE *)(v15 + 144) = v9 & 1;
  *(void *)(v15 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(void *)(v15 + 176) = v0 + 1;
  OUTLINED_FUNCTION_179();
  *(void *)(v15 + 184) = v22;
  *(_BYTE *)(v15 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7 & 1;
  *(void *)(v15 + 216) = v23;
  *(void *)(v15 + 224) = v0;
  *(void *)(v15 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x800000000034C780LL;
  OUTLINED_FUNCTION_230_1(v24, v25, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v26 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v1, 1LL, v26);
  if (v27)
  {
    OUTLINED_FUNCTION_44_1();
    uint64_t v28 = OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_88_5(v28, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v15 + 240) = 0u;
    *(_OWORD *)(v15 + 256) = 0u;
  }

  else
  {
    *(void *)(v15 + 264) = v26;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v15 + 240));
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32LL))( boxed_opaque_existential_1,  v1,  v26);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
  }

  OUTLINED_FUNCTION_143_3();
  *(void *)(v15 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v30;
  *(void *)(v15 + 280) = v31;
  if ((v32 & 1) != 0)
  {
    uint64_t v33 = 0LL;
    uint64_t v5 = 0LL;
    *(void *)(v15 + 296) = 0LL;
    *(void *)(v15 + 304) = 0LL;
  }

  else
  {
    uint64_t v33 = &type metadata for Double;
  }

  *(void *)(v15 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(void *)(v15 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v33;
  *(void *)(v15 + 320) = v0;
  OUTLINED_FUNCTION_179();
  *(void *)(v15 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v34;
  if ((v35 & 1) != 0)
  {
    char v36 = 0LL;
    uint64_t v3 = 0LL;
    *(void *)(v15 + 344) = 0LL;
    *(void *)(v15 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    char v36 = &type metadata for Double;
  }

  *(void *)(v15 + 360) = v36;
  *(void *)(v15 + 336) = v3;
  OUTLINED_FUNCTION_260(v0 + 23, 0x8000000000344520LL);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.readPlayVoiceMailPrePrompt(completion:)()
{
  return OUTLINED_FUNCTION_13(44LL);
}

uint64_t SearchCallHistoryCATs.readPlayVoiceMailPrePrompt()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  _OWORD *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(44LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(44LL, 0x8000000000344550LL, (uint64_t)_swiftEmptyArrayStorage);
}

void SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:completion:)()
{
  unint64_t v29 = v5;
  OUTLINED_FUNCTION_158_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 416LL);
  OUTLINED_FUNCTION_6_62(v7, (__n128)xmmword_323F90);
  if (v2)
  {
    uint64_t v8 = OUTLINED_FUNCTION_17_38();
    uint64_t v9 = v2;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_75_3();
  }

  OUTLINED_FUNCTION_118_0(v8, v9);
  if (v3)
  {
    uint64_t v10 = OUTLINED_FUNCTION_53_18();
    uint64_t v11 = v3;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_236_1();
  }

  OUTLINED_FUNCTION_253_0(v10, v11);
  OUTLINED_FUNCTION_276_1((uint64_t)"isSingleDateRequest");
  OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_194_2((uint64_t)"isTimeRangeRequest");
  OUTLINED_FUNCTION_274_1((uint64_t)"voiceMailPosition");
  OUTLINED_FUNCTION_227_1(v12, v13, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v14 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v4, 1LL, v14);
  if (v15)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v16 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_322(v16, &demangling cache variable for type metadata for SpeakableString?);
    _OWORD *v1 = 0u;
    v1[1] = 0u;
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_213_1();
    OUTLINED_FUNCTION_149_4((uint64_t)v17);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_143_3();
  v7[17].n128_u64[0] = v19;
  v7[17].n128_u64[1] = v20;
  if ((v21 & 1) != 0)
  {
    uint64_t v22 = 0LL;
    unint64_t v18 = 0LL;
    v7[18].n128_u64[1] = 0LL;
    v7[19].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v22 = &type metadata for Double;
  }

  v7[18].n128_u64[0] = v18;
  v7[19].n128_u64[1] = (unint64_t)v22;
  v7[20].n128_u64[0] = v0;
  OUTLINED_FUNCTION_323();
  v7[20].n128_u64[1] = v23;
  if ((v24 & 1) != 0)
  {
    uint64_t v25 = 0LL;
    unint64_t v26 = 0LL;
    v7[21].n128_u64[1] = 0LL;
    v7[22].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v25 = &type metadata for Double;
    unint64_t v26 = v29;
  }

  v7[21].n128_u64[0] = v26;
  v7[22].n128_u64[1] = (unint64_t)v25;
  v7[23].n128_u64[0] = v0 + 16;
  OUTLINED_FUNCTION_179();
  v7[23].n128_u64[1] = v27;
  v7[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[24].n128_u8[0] = v28 & 1;
  OUTLINED_FUNCTION_142_5(v0 + 25);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10, char a11)
{
  *(void *)(v12 + 56) = a9;
  *(void *)(v12 + 64) = v11;
  *(_BYTE *)(v12 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a11;
  OUTLINED_FUNCTION_111_6(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v12 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v13);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v14, v15, v16);
}

uint64_t SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)()
{
  uint64_t v3 = v0[3];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 416LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_247_1(v5);
  uint64_t v7 = OUTLINED_FUNCTION_12_55(v6, (__n128)xmmword_323F90);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for PhoneCallRecord(v7);
  }

  else
  {
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  uint64_t v8 = v0[4];
  uint64_t v9 = OUTLINED_FUNCTION_38_22(v7);
  if (v8)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }

  else
  {
    v2[13] = 0LL;
    v2[14] = 0LL;
  }

  OUTLINED_FUNCTION_99_7();
  OUTLINED_FUNCTION_89_8(v10);
  OUTLINED_FUNCTION_176_2();
  OUTLINED_FUNCTION_94_8();
  OUTLINED_FUNCTION_133_5();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v11);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_112_5(v12);
  if (v13)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v14 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[33] = v1;
    uint64_t v15 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v15);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_34_23();
  if ((v16 & 1) != 0) {
    OUTLINED_FUNCTION_136_4();
  }
  else {
    uint64_t v17 = v0[6];
  }
  OUTLINED_FUNCTION_231_1(v17);
  OUTLINED_FUNCTION_141_4((uint64_t)"savedRecordsCount");
  if ((v18 & 1) != 0) {
    OUTLINED_FUNCTION_181();
  }
  else {
    unint64_t v19 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_200_2((uint64_t)v19);
  OUTLINED_FUNCTION_272_1((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  uint64_t v20 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  char v21 = (void *)OUTLINED_FUNCTION_219_1(v20);
  OUTLINED_FUNCTION_259_1(v21);
  OUTLINED_FUNCTION_83_10();
  return OUTLINED_FUNCTION_43_15(v22, v23, v24, v25, v26);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  OUTLINED_FUNCTION_108_0();
  uint64_t v4 = v0[2];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 416LL);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_248_1(v6);
  uint64_t v8 = OUTLINED_FUNCTION_12_55(v7, (__n128)xmmword_323F90);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  uint64_t v9 = v0[3];
  uint64_t v10 = OUTLINED_FUNCTION_38_22(v8);
  if (v9)
  {
    type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }

  else
  {
    v2[13] = 0LL;
    v2[14] = 0LL;
  }

  OUTLINED_FUNCTION_100_6();
  OUTLINED_FUNCTION_89_8(v11);
  OUTLINED_FUNCTION_176_2();
  OUTLINED_FUNCTION_94_8();
  OUTLINED_FUNCTION_133_5();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v12);
  char v13 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_113_6(v13);
  if (v14)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v15 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v15, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[33] = v1;
    char v16 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v16);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_34_23();
  if ((v17 & 1) != 0) {
    OUTLINED_FUNCTION_136_4();
  }
  else {
    char v18 = v0[5];
  }
  OUTLINED_FUNCTION_231_1(v18);
  OUTLINED_FUNCTION_141_4((uint64_t)"savedRecordsCount");
  if ((v19 & 1) != 0) {
    OUTLINED_FUNCTION_181();
  }
  else {
    uint64_t v20 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_200_2((uint64_t)v20);
  OUTLINED_FUNCTION_272_1((uint64_t)"isLeadingSavedVoiceMailPostPrompt");
  char v21 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  v0[10] = v21;
  *char v21 = v0;
  v21[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  uint64_t v22 = OUTLINED_FUNCTION_69_13(v3 + 25);
  return OUTLINED_FUNCTION_32_16(v22, v23, v24, v25);
}

uint64_t SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)( uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, char a10)
{
  *(_BYTE *)(v10 + 100) = a10;
  OUTLINED_FUNCTION_121(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v10 + 64) = OUTLINED_FUNCTION_12_0(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v12, v13, v14);
}

void SearchCallHistoryCATs.readSavedVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:voiceMailPosition:newRecordsCount:savedRecordsCount:isLeadingSavedVoiceMailPostPrompt:)()
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_8_2(v8, 416LL);
  OUTLINED_FUNCTION_6_62(v9, (__n128)xmmword_323F90);
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_17_38();
    uint64_t v11 = v2;
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_55_12();
  }

  OUTLINED_FUNCTION_177_2(v10, v11);
  if (v3)
  {
    uint64_t v12 = OUTLINED_FUNCTION_53_18();
    uint64_t v13 = v3;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_123_3();
  }

  OUTLINED_FUNCTION_244_1(v12, v13);
  v9[8].n128_u64[1] = 0x800000000034C6C0LL;
  OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_195_1((uint64_t)"isTimeRangeRequest");
  OUTLINED_FUNCTION_275_1((uint64_t)"voiceMailPosition");
  OUTLINED_FUNCTION_230_1(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v4, 1LL, v16);
  if (v17)
  {
    OUTLINED_FUNCTION_44_1();
    uint64_t v18 = OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_88_5(v18, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v9[16].n128_u64[1] = v16;
    unint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_223_0((uint64_t)v19);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
  }

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_143_3();
  v9[17].n128_u64[0] = v21;
  v9[17].n128_u64[1] = v20;
  if ((v22 & 1) != 0)
  {
    uint64_t v23 = 0LL;
    unint64_t v0 = 0LL;
    v9[18].n128_u64[1] = 0LL;
    v9[19].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v23 = &type metadata for Double;
  }

  v9[18].n128_u64[0] = v0;
  v9[19].n128_u64[1] = (unint64_t)v23;
  v9[20].n128_u64[0] = v1;
  OUTLINED_FUNCTION_323();
  v9[20].n128_u64[1] = v24;
  if ((v25 & 1) != 0)
  {
    unint64_t v26 = 0LL;
    unint64_t v27 = 0LL;
    v9[21].n128_u64[1] = 0LL;
    v9[22].n128_u64[0] = 0LL;
  }

  else
  {
    unint64_t v26 = &type metadata for Double;
    unint64_t v27 = v30;
  }

  v9[21].n128_u64[0] = v27;
  v9[22].n128_u64[1] = (unint64_t)v26;
  v9[23].n128_u64[0] = v1 + 16;
  OUTLINED_FUNCTION_179();
  v9[23].n128_u64[1] = v28;
  v9[25].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[24].n128_u8[0] = v29 & 1;
  OUTLINED_FUNCTION_55(v1 + 25, 0x8000000000344580LL);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

void SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:completion:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  OUTLINED_FUNCTION_301();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 272LL);
  OUTLINED_FUNCTION_3_78(v11, (__n128)xmmword_323F80);
  if ((v0 & 1) != 0) {
    OUTLINED_FUNCTION_241_0();
  }
  else {
    uint64_t v12 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_297((uint64_t)v12);
  OUTLINED_FUNCTION_163_3((uint64_t)"totalCallRecordCount");
  if ((v7 & 1) != 0)
  {
    uint64_t v13 = 0LL;
    unint64_t v9 = 0LL;
    v11[6].n128_u64[1] = 0LL;
    v11[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v13 = &type metadata for Double;
  }

  v11[6].n128_u64[0] = v9;
  OUTLINED_FUNCTION_124_5((uint64_t)v13);
  if (v5)
  {
    uint64_t v14 = OUTLINED_FUNCTION_53_18();
    uint64_t v15 = v5;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_129_6();
  }

  OUTLINED_FUNCTION_140_5(v14, v15);
  OUTLINED_FUNCTION_146_3((uint64_t)&type metadata for Bool);
  OUTLINED_FUNCTION_29_16(v3, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_106_5(v17);
  if (v18)
  {
    uint64_t v19 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v19, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    v11[16].n128_u64[1] = v3;
    unint64_t v20 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_97_1( (uint64_t)v20,  v1,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
    OUTLINED_FUNCTION_25_1();
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(v0 + 31);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v9 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a8;
  *(void *)(v9 + 56) = v8;
  *(_BYTE *)(v9 + 9__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a7;
  *(_BYTE *)(v9 + 97) = a5;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v9 + 40) = a6;
  *(_BYTE *)(v9 + 96) = a3;
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_12_0(v10);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)()
{
  char v2 = *(_BYTE *)(v1 + 96);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 272LL);
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  OUTLINED_FUNCTION_3_78(v4, (__n128)xmmword_323F80);
  if ((v2 & 1) != 0)
  {
    char v6 = 0LL;
    unint64_t v5 = 0LL;
    v4[3].n128_u64[1] = 0LL;
    v4[4].n128_u64[0] = 0LL;
  }

  else
  {
    unint64_t v5 = *(void *)(v1 + 24);
    char v6 = &type metadata for Double;
  }

  v4[3].n128_u64[0] = v5;
  v4[4].n128_u64[1] = (unint64_t)v6;
  v4[5].n128_u64[0] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_278_0((uint64_t)"totalCallRecordCount");
  if ((v7 & 1) != 0) {
    OUTLINED_FUNCTION_240_0();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = OUTLINED_FUNCTION_166_1((uint64_t)v8);
  if (v9)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }

  else
  {
    v4[9].n128_u64[1] = 0LL;
    v4[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_126_5(v10);
  OUTLINED_FUNCTION_151_1();
  OUTLINED_FUNCTION_29_16(v12, v11, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_36_2(v13) == 1)
  {
    uint64_t v14 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v4[16].n128_u64[1] = v0;
    uint64_t v15 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v15);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v16 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  *(void *)(v1 + 80) = v16;
  *uint64_t v16 = v1;
  v16[1] = SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:);
  OUTLINED_FUNCTION_40_10();
  return v18();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(void);
  char v2 = *(void *)(*(void *)v1 + 80LL);
  *(void *)(*(void *)v1 + 88LL) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_16_1(v4);
  }

{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  __n128 *v4;
  unint64_t v5;
  void *v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v19)(uint64_t);
  char v2 = *(_BYTE *)(v1 + 88);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 272LL);
  *(void *)(v1 + 64) = v4;
  OUTLINED_FUNCTION_3_78(v4, (__n128)xmmword_323F80);
  if ((v2 & 1) != 0)
  {
    char v6 = 0LL;
    unint64_t v5 = 0LL;
    v4[3].n128_u64[1] = 0LL;
    v4[4].n128_u64[0] = 0LL;
  }

  else
  {
    unint64_t v5 = *(void *)(v1 + 16);
    char v6 = &type metadata for Double;
  }

  v4[3].n128_u64[0] = v5;
  v4[4].n128_u64[1] = (unint64_t)v6;
  v4[5].n128_u64[0] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_278_0((uint64_t)"totalCallRecordCount");
  if ((v7 & 1) != 0) {
    OUTLINED_FUNCTION_240_0();
  }
  else {
    uint64_t v8 = &type metadata for Double;
  }
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v10 = OUTLINED_FUNCTION_166_1((uint64_t)v8);
  if (v9)
  {
    uint64_t v10 = type metadata accessor for PhoneSearchCallHistoryIntent(v10);
  }

  else
  {
    v4[9].n128_u64[1] = 0LL;
    v4[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_126_5(v10);
  OUTLINED_FUNCTION_151_1();
  OUTLINED_FUNCTION_29_16(v12, v11, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v13 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_36_2(v13) == 1)
  {
    uint64_t v14 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v14, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v4[16].n128_u64[1] = v0;
    uint64_t v15 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v15);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v16 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *uint64_t v16 = v1;
  v16[1] = SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:);
  uint64_t v17 = OUTLINED_FUNCTION_21_19(0xD000000000000033LL);
  return v19(v17);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t (*v8)(void);
  char v2 = *(void *)(*(void *)v1 + 72LL);
  *(void *)(*(void *)v1 + 8OUTLINED_FUNCTION_25_0(v0 + 345, (uint64_t)v1, 0LL) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    char v7 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v7, v8);
  }

uint64_t SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
  *(_BYTE *)(v8 + 90) = a6;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(_BYTE *)(v8 + 89) = a4;
  *(_BYTE *)(v8 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v8 + 56) = OUTLINED_FUNCTION_12_0(v9);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

void SearchCallHistoryCATs.readSearchCallHistoryIntroduction(callRecordCount:totalCallRecordCount:intent:isFirstPartyApp:appName:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  OUTLINED_FUNCTION_301();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 272LL);
  OUTLINED_FUNCTION_3_78(v11, (__n128)xmmword_323F80);
  if ((v0 & 1) != 0) {
    OUTLINED_FUNCTION_241_0();
  }
  else {
    uint64_t v12 = &type metadata for Double;
  }
  OUTLINED_FUNCTION_297((uint64_t)v12);
  OUTLINED_FUNCTION_163_3((uint64_t)"totalCallRecordCount");
  if ((v7 & 1) != 0)
  {
    uint64_t v13 = 0LL;
    unint64_t v9 = 0LL;
    v11[6].n128_u64[1] = 0LL;
    v11[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v13 = &type metadata for Double;
  }

  v11[6].n128_u64[0] = v9;
  OUTLINED_FUNCTION_124_5((uint64_t)v13);
  if (v5)
  {
    uint64_t v14 = OUTLINED_FUNCTION_53_18();
    uint64_t v15 = v5;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_129_6();
  }

  OUTLINED_FUNCTION_140_5(v14, v15);
  OUTLINED_FUNCTION_146_3((uint64_t)&type metadata for Bool);
  OUTLINED_FUNCTION_29_16(v3, v16, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_106_5(v17);
  if (v18)
  {
    uint64_t v19 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v19, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    v11[16].n128_u64[1] = v3;
    unint64_t v20 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_97_1( (uint64_t)v20,  v1,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_55(v0 + 31, 0x80000000003445B0LL);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:completion:)()
{
  return OUTLINED_FUNCTION_201_2();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  unint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_8_2(v10, 224LL);
  OUTLINED_FUNCTION_6_62(v11, (__n128)xmmword_31F580);
  if (v9)
  {
    OUTLINED_FUNCTION_17_38();
    uint64_t v12 = v9;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    v11[3].n128_u64[1] = 0LL;
    v11[4].n128_u64[0] = 0LL;
  }

  v11[3].n128_u64[0] = v12;
  OUTLINED_FUNCTION_98_7();
  v11[4].n128_u64[1] = v13;
  v11[5].n128_u64[0] = v14;
  v11[5].n128_u64[1] = 0xE600000000000000LL;
  if (v7)
  {
    uint64_t v15 = OUTLINED_FUNCTION_53_18();
    uint64_t v16 = v7;
  }

  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_54_0();
    v11[6].n128_u64[1] = 0LL;
    v11[7].n128_u64[0] = 0LL;
  }

  v11[6].n128_u64[0] = v16;
  v11[7].n128_u64[1] = v15;
  v11[8].n128_u64[0] = 0xD000000000000013LL;
  v11[8].n128_u64[1] = 0x800000000034C6C0LL;
  v11[9].n128_u8[0] = v5 & 1;
  v11[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v11[11].n128_u64[0] = 0xD000000000000012LL;
  OUTLINED_FUNCTION_56_0();
  v11[11].n128_u64[1] = v17;
  v11[13].n128_u64[1] = v18;
  v11[12].n128_u8[0] = v3 & 1;
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_290(v1);
  return OUTLINED_FUNCTION_3_6((uint64_t)v11);
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a5;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 224LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_6_62(v5, (__n128)xmmword_31F580);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_17_38();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[4];
  uint64_t v9 = OUTLINED_FUNCTION_109_2(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_109_7(v9);
  OUTLINED_FUNCTION_199_2();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_116_0(v10);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  v0[7] = v11;
  OUTLINED_FUNCTION_109(v11);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v12, v13, v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 224LL);
  v0[5] = v4;
  OUTLINED_FUNCTION_6_62(v4, (__n128)xmmword_31F580);
  if (v2)
  {
    uint64_t v5 = OUTLINED_FUNCTION_17_38();
    uint64_t v6 = v2;
  }

  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v7 = v0[3];
  uint64_t v8 = OUTLINED_FUNCTION_109_2(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_109_7(v8);
  OUTLINED_FUNCTION_199_2();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_116_0(v9);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  char v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7(v10, (uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
  uint64_t v11 = OUTLINED_FUNCTION_40(v1 + 20);
  return OUTLINED_FUNCTION_25_5(v11, v12, v13, v14);
}

{
  return OUTLINED_FUNCTION_229_1();
}

{
  char v0;
  char v1;
  char v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __n128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  OUTLINED_FUNCTION_29_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_8_2(v8, 224LL);
  OUTLINED_FUNCTION_6_62(v9, (__n128)xmmword_31F580);
  if (v7)
  {
    char v10 = OUTLINED_FUNCTION_17_38();
    uint64_t v11 = v7;
  }

  else
  {
    char v10 = OUTLINED_FUNCTION_54_0();
    v9[3].n128_u64[1] = 0LL;
    v9[4].n128_u64[0] = 0LL;
  }

  v9[3].n128_u64[0] = v11;
  v9[4].n128_u64[1] = v10;
  v9[5].n128_u64[0] = 0x746E65746E69LL;
  v9[5].n128_u64[1] = 0xE600000000000000LL;
  if (v5)
  {
    uint64_t v12 = OUTLINED_FUNCTION_53_18();
    uint64_t v13 = v5;
  }

  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_54_0();
    v9[6].n128_u64[1] = 0LL;
    v9[7].n128_u64[0] = 0LL;
  }

  v9[6].n128_u64[0] = v13;
  v9[7].n128_u64[1] = v12;
  v9[8].n128_u64[0] = 0xD000000000000013LL;
  v9[8].n128_u64[1] = 0x800000000034C6C0LL;
  v9[9].n128_u8[0] = v3 & 1;
  v9[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v9[11].n128_u64[0] = 0xD000000000000012LL;
  OUTLINED_FUNCTION_56_0();
  v9[11].n128_u64[1] = v14;
  v9[13].n128_u64[1] = v15;
  v9[12].n128_u8[0] = v1 & 1;
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_264_0();
  return OUTLINED_FUNCTION_3_6((uint64_t)v9);
}

uint64_t SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_BYTE *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a4;
  *(_BYTE *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:completion:)()
{
  return OUTLINED_FUNCTION_201_2();
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a5;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 224LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_77_1(v4);
  OUTLINED_FUNCTION_6_62(v5, (__n128)xmmword_31F580);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_17_38();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[4];
  uint64_t v9 = OUTLINED_FUNCTION_109_2(v6, v7);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for PhoneSearchCallHistoryIntent(v9);
  }

  else
  {
    *(void *)(v1 + 104) = 0LL;
    *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_109_7(v9);
  OUTLINED_FUNCTION_199_2();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_116_0(v10);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  v0[7] = v11;
  OUTLINED_FUNCTION_109(v11);
  OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_24_4(v12, v13, v14, v15, v16);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  OUTLINED_FUNCTION_44();
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_8_2(v3, 224LL);
  v0[5] = v4;
  OUTLINED_FUNCTION_6_62(v4, (__n128)xmmword_31F580);
  if (v2)
  {
    uint64_t v5 = OUTLINED_FUNCTION_17_38();
    uint64_t v6 = v2;
  }

  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v7 = v0[3];
  uint64_t v8 = OUTLINED_FUNCTION_109_2(v5, v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_109_7(v8);
  OUTLINED_FUNCTION_199_2();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_116_0(v9);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  char v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  uint64_t v11 = OUTLINED_FUNCTION_40(v1 + 25);
  return OUTLINED_FUNCTION_25_5(v11, v12, v13, v14);
}

{
  return OUTLINED_FUNCTION_229_1();
}

uint64_t SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)( uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_BYTE *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a4;
  *(_BYTE *)(v5 + 64) = a3;
  *(void *)(v5 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readSingleVoiceMailRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:));
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:completion:)()
{
  char v2 = v1;
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v10 = OUTLINED_FUNCTION_8_2(v9, 176LL);
  *(_OWORD *)(v10 + 16) = xmmword_320080;
  OUTLINED_FUNCTION_16_39(v10, 0x726F63655277656ELL);
  if ((v6 & 1) != 0)
  {
    uint64_t v11 = 0LL;
    uint64_t v8 = 0LL;
    *(void *)(v10 + 56) = 0LL;
    *(void *)(v10 + 64) = 0LL;
  }

  else
  {
    uint64_t v11 = &type metadata for Double;
  }

  *(void *)(v10 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v8;
  *(void *)(v10 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
  *(void *)(v10 + 80) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_78_12((uint64_t)"savedRecordsCount");
  if ((v2 & 1) != 0)
  {
    uint64_t v12 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v10 + 104) = 0LL;
    *(void *)(v10 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v12 = &type metadata for Double;
  }

  *(void *)(v10 + 96) = v4;
  *(void *)(v10 + 120) = v12;
  *(void *)(v10 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x746E65746E69LL;
  *(void *)(v10 + 136) = 0xE600000000000000LL;
  if (v0)
  {
    uint64_t v13 = OUTLINED_FUNCTION_53_18();
    uint64_t v14 = v0;
  }

  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_139_3();
  }

  *(void *)(v10 + 144) = v14;
  *(void *)(v10 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v13;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD000000000000032LL);
  return OUTLINED_FUNCTION_3_6(v10);
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  *(_BYTE *)(v7 + 81) = a5;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(_BYTE *)(v7 + 80) = a3;
  *(void *)(v7 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:));
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)()
{
  char v1 = *(_BYTE *)(v0 + 80);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_320080;
  OUTLINED_FUNCTION_16_39(v3, 0x726F63655277656ELL);
  if ((v1 & 1) != 0) {
    OUTLINED_FUNCTION_137_4();
  }
  else {
    uint64_t v4 = *(void *)(v0 + 24);
  }
  OUTLINED_FUNCTION_184_0(v4);
  OUTLINED_FUNCTION_78_12((uint64_t)"savedRecordsCount");
  if ((v5 & 1) != 0) {
    OUTLINED_FUNCTION_131_4();
  }
  else {
    uint64_t v6 = &type metadata for Double;
  }
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = OUTLINED_FUNCTION_37_26((uint64_t)v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v3 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_202_2(v8);
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = OUTLINED_FUNCTION_46();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_230_0(v9);
  OUTLINED_FUNCTION_258_1(v10);
  OUTLINED_FUNCTION_157_2();
  return OUTLINED_FUNCTION_8_47(v11, v12, v13, v14, v15);
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  OUTLINED_FUNCTION_50_11();
  char v1 = *(_BYTE *)(v0 + 72);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 176LL);
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_320080;
  OUTLINED_FUNCTION_16_39(v3, 0x726F63655277656ELL);
  if ((v1 & 1) != 0) {
    OUTLINED_FUNCTION_137_4();
  }
  else {
    uint64_t v4 = *(void *)(v0 + 16);
  }
  OUTLINED_FUNCTION_185_0(v4);
  OUTLINED_FUNCTION_78_12((uint64_t)"savedRecordsCount");
  if ((v5 & 1) != 0) {
    OUTLINED_FUNCTION_131_4();
  }
  else {
    uint64_t v6 = &type metadata for Double;
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = OUTLINED_FUNCTION_37_26((uint64_t)v6);
  if (v7)
  {
    uint64_t v8 = type metadata accessor for PhoneSearchCallHistoryIntent(v8);
  }

  else
  {
    *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v3 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_202_2(v8);
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 56) = v9;
  *uint64_t v9 = v0;
  v9[1] = SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:);
  uint64_t v10 = OUTLINED_FUNCTION_40_16(50LL);
  return OUTLINED_FUNCTION_12_28(v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  OUTLINED_FUNCTION_163();
  char v1 = v0;
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_8_2(v10, 176LL);
  *(_OWORD *)(v11 + 16) = xmmword_320080;
  OUTLINED_FUNCTION_16_39(v11, 0x726F63655277656ELL);
  if ((v7 & 1) != 0)
  {
    uint64_t v12 = 0LL;
    uint64_t v9 = 0LL;
    *(void *)(v11 + 56) = 0LL;
    *(void *)(v11 + 64) = 0LL;
  }

  else
  {
    uint64_t v12 = &type metadata for Double;
  }

  *(void *)(v11 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v9;
  *(void *)(v11 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(void *)(v11 + 80) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_163_3((uint64_t)"savedRecordsCount");
  if ((v3 & 1) != 0)
  {
    uint64_t v13 = 0LL;
    char v5 = 0LL;
    *(void *)(v11 + 104) = 0LL;
    *(void *)(v11 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v13 = &type metadata for Double;
  }

  *(void *)(v11 + 96) = v5;
  OUTLINED_FUNCTION_124_5((uint64_t)v13);
  if (v1)
  {
    uint64_t v14 = OUTLINED_FUNCTION_53_18();
    uint64_t v15 = v1;
  }

  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_129_6();
  }

  *(void *)(v11 + 144) = v15;
  *(void *)(v11 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v14;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_107_6(0xD000000000000032LL, (uint64_t)"SearchCallHistory#ReadVoiceMailHistoryIntroduction");
  return OUTLINED_FUNCTION_51_12(v11);
}

uint64_t SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v6 + 40) = v5;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a4;
  *(_BYTE *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a3;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.readVoiceMailHistoryIntroduction(newRecordsCount:savedRecordsCount:intent:));
}

uint64_t SearchCallHistoryCATs.repeatVoicemailPause(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t SearchCallHistoryCATs.repeatVoicemailPause()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  _OWORD *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x8000000000344690LL, (uint64_t)_swiftEmptyArrayStorage);
}

void SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21)
{
  uint64_t v28 = v27;
  char v30 = v29;
  unint64_t v32 = v31;
  OUTLINED_FUNCTION_282();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v34 = (__n128 *)OUTLINED_FUNCTION_8_2(v33, 368LL);
  OUTLINED_FUNCTION_3_78(v34, (__n128)xmmword_32A100);
  if ((v23 & 1) != 0)
  {
    char v35 = 0LL;
    unint64_t v26 = 0LL;
    v34[3].n128_u64[1] = 0LL;
    v34[4].n128_u64[0] = 0LL;
  }

  else
  {
    char v35 = &type metadata for Double;
  }

  v34[3].n128_u64[0] = v26;
  v34[4].n128_u64[1] = (unint64_t)v35;
  v34[5].n128_u64[0] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_56_0();
  v34[5].n128_u64[1] = v36;
  if ((v25 & 1) != 0)
  {
    uint64_t v37 = 0LL;
    unint64_t v24 = 0LL;
    v34[6].n128_u64[1] = 0LL;
    v34[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v37 = &type metadata for Double;
  }

  v34[6].n128_u64[0] = v24;
  v34[7].n128_u64[1] = (unint64_t)v37;
  v34[8].n128_u64[0] = 0x656369766564LL;
  v34[8].n128_u64[1] = 0xE600000000000000LL;
  if (v21)
  {
    OUTLINED_FUNCTION_50_6();
    unint64_t v38 = v21;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    v34[9].n128_u64[1] = 0LL;
    v34[10].n128_u64[0] = 0LL;
  }

  v34[9].n128_u64[0] = v38;
  OUTLINED_FUNCTION_98_7();
  v34[10].n128_u64[1] = v39;
  v34[11].n128_u64[0] = v40;
  v34[11].n128_u64[1] = 0xE600000000000000LL;
  if (v32)
  {
    OUTLINED_FUNCTION_53_18();
    unint64_t v41 = v32;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    v34[12].n128_u64[1] = 0LL;
    v34[13].n128_u64[0] = 0LL;
  }

  v34[12].n128_u64[0] = v41;
  OUTLINED_FUNCTION_207();
  v34[13].n128_u64[1] = v42;
  v34[14].n128_u64[0] = v43;
  OUTLINED_FUNCTION_192();
  v34[14].n128_u64[1] = v44;
  v34[15].n128_u8[0] = v30 & 1;
  OUTLINED_FUNCTION_266_0();
  v34[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v34[17].n128_u64[0] = v45;
  v34[17].n128_u64[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_29_16(v28, v46, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v47 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_106_5(v47);
  if (v48)
  {
    OUTLINED_FUNCTION_29_3();
    uint64_t v49 = OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_41_1(v49, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_184();
  }

  else
  {
    v34[19].n128_u64[1] = v23;
    int v50 = OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_97_1( (uint64_t)v50,  v22,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32LL));
    OUTLINED_FUNCTION_29_3();
    OUTLINED_FUNCTION_3_8();
  }

  OUTLINED_FUNCTION_56_0();
  v34[20].n128_u64[0] = v52;
  v34[20].n128_u64[1] = v51;
  v34[22].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v34[21].n128_u8[0] = a21 & 1;
  OUTLINED_FUNCTION_142_5(v52 + 19);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10)
{
  *(void *)(v11 + 56) = a9;
  *(void *)(v11 + 64) = v10;
  *(_BYTE *)(v11 + 107) = a10;
  OUTLINED_FUNCTION_220_1(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v11 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v12);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v13, v14, v15);
}

uint64_t SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)()
{
  char v3 = *(_BYTE *)(v0 + 104);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 368LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_247_1(v5);
  OUTLINED_FUNCTION_3_78(v6, (__n128)xmmword_32A100);
  if ((v3 & 1) != 0)
  {
    uint64_t v8 = 0LL;
    uint64_t v7 = 0LL;
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  else
  {
    uint64_t v7 = *(void *)(v0 + 24);
    uint64_t v8 = &type metadata for Double;
  }

  v2[6] = v7;
  v2[9] = v8;
  v2[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_196_2((uint64_t)"totalCallRecordCount");
  if ((v9 & 1) != 0) {
    OUTLINED_FUNCTION_180_2();
  }
  else {
    uint64_t v10 = &type metadata for Double;
  }
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = OUTLINED_FUNCTION_66_15((uint64_t)v10);
  if (v11)
  {
    uint64_t v12 = type metadata accessor for SirikitDeviceState(v12);
  }

  else
  {
    v2[19] = 0LL;
    v2[20] = 0LL;
  }

  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = OUTLINED_FUNCTION_65_11(v12);
  if (v13)
  {
    uint64_t v14 = type metadata accessor for PhoneSearchCallHistoryIntent(v14);
  }

  else
  {
    v2[25] = 0LL;
    v2[26] = 0LL;
  }

  OUTLINED_FUNCTION_47_16(v14);
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_204_1(v16);
  if (v17)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v18 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v18, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[39] = v1;
    uint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v19);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_273_1((uint64_t)"isShowingMissedCall");
  uint64_t v20 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  unint64_t v21 = (void *)OUTLINED_FUNCTION_219_1(v20);
  OUTLINED_FUNCTION_308(v21);
  OUTLINED_FUNCTION_83_10();
  return OUTLINED_FUNCTION_43_15(v22, v23, v24, v25, v26);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  OUTLINED_FUNCTION_108_0();
  char v3 = *(_BYTE *)(v0 + 96);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 368LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_248_1(v5);
  OUTLINED_FUNCTION_3_78(v6, (__n128)xmmword_32A100);
  if ((v3 & 1) != 0)
  {
    uint64_t v8 = 0LL;
    uint64_t v7 = 0LL;
    v2[7] = 0LL;
    _BYTE v2[8] = 0LL;
  }

  else
  {
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v8 = &type metadata for Double;
  }

  v2[6] = v7;
  v2[9] = v8;
  v2[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_196_2((uint64_t)"totalCallRecordCount");
  if ((v9 & 1) != 0) {
    OUTLINED_FUNCTION_180_2();
  }
  else {
    uint64_t v10 = &type metadata for Double;
  }
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = OUTLINED_FUNCTION_66_15((uint64_t)v10);
  if (v11)
  {
    uint64_t v12 = type metadata accessor for SirikitDeviceState(v12);
  }

  else
  {
    v2[19] = 0LL;
    v2[20] = 0LL;
  }

  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = OUTLINED_FUNCTION_65_11(v12);
  if (v13)
  {
    uint64_t v14 = type metadata accessor for PhoneSearchCallHistoryIntent(v14);
  }

  else
  {
    v2[25] = 0LL;
    v2[26] = 0LL;
  }

  OUTLINED_FUNCTION_47_16(v14);
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v15);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_205(v16);
  if (v17)
  {
    OUTLINED_FUNCTION_59();
    uint64_t v18 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_35_10(v18, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v2[39] = v1;
    uint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v19);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_273_1((uint64_t)"isShowingMissedCall");
  uint64_t v20 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 80) = v20;
  *uint64_t v20 = v0;
  v20[1] = SearchCallHistoryCATs.intentHandledResponse(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:);
  unint64_t v21 = OUTLINED_FUNCTION_69_13(0xD000000000000026LL);
  return OUTLINED_FUNCTION_32_16(v21, v22, v23, v24);
}

uint64_t SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  *(_BYTE *)(v9 + 99) = a9;
  OUTLINED_FUNCTION_211_0(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v9 + 64) = OUTLINED_FUNCTION_12_0(v10);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v11, v12, v13);
}

void SearchCallHistoryCATs.showCallHistoryIntro(callRecordCount:totalCallRecordCount:device:intent:isFirstPartyApp:appName:isShowingMissedCall:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21)
{
  char v28 = v27;
  uint64_t v30 = v29;
  OUTLINED_FUNCTION_243_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v32 = (__n128 *)OUTLINED_FUNCTION_8_2(v31, 368LL);
  OUTLINED_FUNCTION_3_78(v32, (__n128)xmmword_32A100);
  if ((v22 & 1) != 0)
  {
    uint64_t v33 = 0LL;
    unint64_t v21 = 0LL;
    v32[3].n128_u64[1] = 0LL;
    v32[4].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v33 = &type metadata for Double;
  }

  v32[3].n128_u64[0] = v21;
  v32[4].n128_u64[1] = (unint64_t)v33;
  v32[5].n128_u64[0] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_163_3((uint64_t)"totalCallRecordCount");
  if ((v26 & 1) != 0)
  {
    uint64_t v34 = 0LL;
    unint64_t v25 = 0LL;
    v32[6].n128_u64[1] = 0LL;
    v32[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v34 = &type metadata for Double;
  }

  v32[6].n128_u64[0] = v25;
  OUTLINED_FUNCTION_224_1((uint64_t)v34);
  if (v23)
  {
    uint64_t v35 = OUTLINED_FUNCTION_50_6();
    uint64_t v36 = v23;
  }

  else
  {
    uint64_t v35 = OUTLINED_FUNCTION_129_6();
  }

  OUTLINED_FUNCTION_192_2(v35, v36);
  if (v30)
  {
    uint64_t v37 = OUTLINED_FUNCTION_53_18();
    uint64_t v38 = v30;
  }

  else
  {
    uint64_t v37 = OUTLINED_FUNCTION_239_1();
  }

  OUTLINED_FUNCTION_139_4(v37, v38);
  v32[15].n128_u8[0] = v28 & 1;
  OUTLINED_FUNCTION_266_0();
  v32[16].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v32[17].n128_u64[0] = v39;
  v32[17].n128_u64[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_213_0(v40, v41, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v42 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_35(v24, 1LL, v42);
  if (v43)
  {
    OUTLINED_FUNCTION_95_1();
    uint64_t v44 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_182_1(v44, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v32[19].n128_u64[1] = v42;
    unint64_t v45 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_155_2((uint64_t)v45);
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_179();
  v32[20].n128_u64[0] = v47;
  v32[20].n128_u64[1] = v46;
  v32[22].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v32[21].n128_u8[0] = a21 & 1;
  OUTLINED_FUNCTION_55(v47 + 19, 0x80000000003446C0LL);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryCATs.unsupportedCallTypes(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t SearchCallHistoryCATs.unsupportedCallTypes()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  _OWORD *v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x80000000003446F0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.unsupportedDateCreated(completion:)()
{
  return OUTLINED_FUNCTION_13(40LL);
}

uint64_t SearchCallHistoryCATs.unsupportedDateCreated()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  _OWORD *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(40LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(40LL, 0x8000000000344720LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.unsupportedRecipient(completion:)()
{
  return OUTLINED_FUNCTION_13(38LL);
}

uint64_t SearchCallHistoryCATs.unsupportedRecipient()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  _OWORD *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(38LL, 0x8000000000344750LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:completion:)()
{
  unint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  unsigned __int8 v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_8_2(v8, 224LL);
  uint64_t v10 = OUTLINED_FUNCTION_59_13(v9, (__n128)xmmword_31F580);
  v10[3].n128_u8[0] = v7;
  uint64_t v11 = OUTLINED_FUNCTION_183_2(v10, (uint64_t)&type metadata for Bool);
  *((_BYTE *)v11 + 96) = v5;
  uint64_t v13 = OUTLINED_FUNCTION_217_1(v11, v12);
  *((_BYTE *)v13 + 144) = v3;
  v13[21] = v14;
  v13[22] = 0xD000000000000010LL;
  v13[23] = 0x80000000003490A0LL;
  if (v1)
  {
    uint64_t v15 = OUTLINED_FUNCTION_140_0();
    unint64_t v16 = v1;
  }

  else
  {
    unint64_t v16 = 0LL;
    uint64_t v15 = 0LL;
    v9[12].n128_u64[1] = 0LL;
    v9[13].n128_u64[0] = 0LL;
  }

  v9[12].n128_u64[0] = v16;
  v9[13].n128_u64[1] = v15;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_52_3(0xD00000000000002DLL);
  return OUTLINED_FUNCTION_3_6((uint64_t)v9);
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)( uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(_BYTE *)(v6 + 66) = a4;
  *(_BYTE *)(v6 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a3;
  *(_BYTE *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:));
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v12 = *(void *)(v10 + 24);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 224LL);
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_125(v14);
  unint64_t v16 = OUTLINED_FUNCTION_59_13(v15, (__n128)xmmword_31F580);
  uint64_t v17 = OUTLINED_FUNCTION_80_7((uint64_t)v16, (uint64_t)&type metadata for Bool);
  uint64_t v18 = OUTLINED_FUNCTION_319(v17, (uint64_t)"contactToConfirm");
  if (v12)
  {
    uint64_t v18 = type metadata accessor for DialogPerson(v18);
  }

  else
  {
    v11[25] = 0LL;
    v11[26] = 0LL;
  }

  v11[24] = v12;
  v11[27] = v18;
  OUTLINED_FUNCTION_6_55();
  uint64_t v19 = OUTLINED_FUNCTION_46();
  uint64_t v20 = (void *)OUTLINED_FUNCTION_113_5(v19);
  uint64_t v21 = OUTLINED_FUNCTION_45_8(v20);
  return OUTLINED_FUNCTION_24_4(v21, 0xD00000000000002DLL, 0x8000000000344780LL, (uint64_t)v11, a10);
}

{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  OUTLINED_FUNCTION_44();
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 224LL);
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_27(v14);
  unint64_t v16 = OUTLINED_FUNCTION_59_13(v15, (__n128)xmmword_31F580);
  uint64_t v17 = OUTLINED_FUNCTION_80_7((uint64_t)v16, (uint64_t)&type metadata for Bool);
  uint64_t v18 = OUTLINED_FUNCTION_319(v17, (uint64_t)"contactToConfirm");
  if (v12)
  {
    uint64_t v18 = type metadata accessor for DialogPerson(v18);
  }

  else
  {
    v11[25] = 0LL;
    v11[26] = 0LL;
  }

  v11[24] = v12;
  v11[27] = v18;
  OUTLINED_FUNCTION_6_55();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v10 + 40) = v19;
  OUTLINED_FUNCTION_30(v19, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  return OUTLINED_FUNCTION_25_5(0xD00000000000002DLL, 0x8000000000344780LL, (uint64_t)v11, a10);
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)( char a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = v4;
  *(_BYTE *)(v5 + 5__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a3;
  *(_BYTE *)(v5 + 57) = a2;
  *(_BYTE *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:));
}

uint64_t SearchCallHistoryCATs.unsupportedSearchParameters(isVoicemail:isMissed:isLatest:contactToConfirm:)()
{
  unint64_t v1 = v0;
  char v3 = v2;
  char v5 = v4;
  unsigned __int8 v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_8_2(v8, 224LL);
  uint64_t v10 = OUTLINED_FUNCTION_59_13(v9, (__n128)xmmword_31F580);
  v10[3].n128_u8[0] = v7;
  uint64_t v11 = OUTLINED_FUNCTION_183_2(v10, (uint64_t)&type metadata for Bool);
  *((_BYTE *)v11 + 96) = v5;
  uint64_t v13 = OUTLINED_FUNCTION_217_1(v11, v12);
  *((_BYTE *)v13 + 144) = v3;
  v13[21] = v14;
  v13[22] = 0xD000000000000010LL;
  v13[23] = 0x80000000003490A0LL;
  if (v1)
  {
    uint64_t v15 = OUTLINED_FUNCTION_140_0();
    unint64_t v16 = v1;
  }

  else
  {
    uint64_t v15 = OUTLINED_FUNCTION_239_1();
  }

  v9[12].n128_u64[0] = v16;
  v9[13].n128_u64[1] = v15;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_107_6(0xD00000000000002DLL, (uint64_t)"SearchCallHistory#UnsupportedSearchParameters");
  return OUTLINED_FUNCTION_51_12((uint64_t)v9);
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:completion:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  char v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_136_0(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_53_18();
    unint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_52_1();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000023LL);
  return OUTLINED_FUNCTION_1_41((uint64_t)v2);
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.unsupportedUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:)()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  char v5 = (__n128 *)OUTLINED_FUNCTION_125(v4);
  uint64_t v6 = OUTLINED_FUNCTION_77_10(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_113_5(v7);
  OUTLINED_FUNCTION_45_8(v8);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_98_5();
  return OUTLINED_FUNCTION_8_47(v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  OUTLINED_FUNCTION_49_1();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 80LL);
  char v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_77_10(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneSearchCallHistoryIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_6_55();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v8 = OUTLINED_FUNCTION_102(35LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

{
  unint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_131_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_136_0(v2, (__n128)xmmword_31D870);
  if (v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_53_18();
    uint64_t v4 = v0;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_55_12();
  }

  v2[3].n128_u64[0] = v4;
  v2[4].n128_u64[1] = v3;
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_55(0xD000000000000023LL, v5);
  return OUTLINED_FUNCTION_41_20((uint64_t)v2);
}

uint64_t SearchCallHistoryCATs.unsupportedUnseen(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.unsupportedUnseen(intent:));
}

uint64_t SearchCallHistoryCATs.visualCatText(completion:)()
{
  return OUTLINED_FUNCTION_13(31LL);
}

uint64_t SearchCallHistoryCATs.visualCatText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  _OWORD *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(31LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(31LL, 0x80000000003447E0LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:completion:)( char a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  *(_OWORD *)(v5 + 16) = xmmword_31D880;
  uint64_t v6 = OUTLINED_FUNCTION_31_30(v5);
  *(_BYTE *)(v6 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v6 + 80) = 0xD000000000000020LL;
  *(_BYTE *)(OUTLINED_FUNCTION_324(v6, (uint64_t)&type metadata for Bool) + 96) = a2;
  OUTLINED_FUNCTION_23_19(v7 | 0x11);
  return OUTLINED_FUNCTION_1_41(v5);
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)( uint64_t a1, char a2, char a3)
{
  *(_BYTE *)(v4 + 57) = a3;
  *(_BYTE *)(v4 + 56) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:));
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 128LL);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_31D880;
  uint64_t v3 = OUTLINED_FUNCTION_31_30(v2);
  uint64_t v4 = OUTLINED_FUNCTION_293(v3, (uint64_t)&type metadata for Bool);
  OUTLINED_FUNCTION_256(v4, v5);
  uint64_t v6 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v7 = (void *)OUTLINED_FUNCTION_310(v6);
  OUTLINED_FUNCTION_309(v7);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_6_15(v8, v9, v10, v2, v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(void);
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  *(void *)(v0 + 24) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_31D880;
  uint64_t v4 = OUTLINED_FUNCTION_31_30(v3);
  uint64_t v5 = OUTLINED_FUNCTION_293(v4, (uint64_t)&type metadata for Bool);
  OUTLINED_FUNCTION_256(v5, v6);
  uint64_t v7 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  OUTLINED_FUNCTION_302(v7, (uint64_t)SearchCallHistoryCATs.offerToReadMoreCallRecords(isLastWindow:));
  uint64_t v8 = OUTLINED_FUNCTION_21_19(v1 | 0x11);
  return OUTLINED_FUNCTION_81_11(v8, v9, v3, v11);
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:)( char a1, char a2)
{
  *(void *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 49) = a2;
  *(_BYTE *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.voiceMailOfferToContinueReading(isLastPage:isLeadingSavedVoiceMailPrePrompt:));
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  *(_OWORD *)(v5 + 16) = xmmword_31D880;
  uint64_t v6 = OUTLINED_FUNCTION_31_30(v5);
  *(_BYTE *)(v6 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v6 + 80) = 0xD000000000000020LL;
  *(_BYTE *)(OUTLINED_FUNCTION_324(v6, (uint64_t)&type metadata for Bool) + 96) = a2;
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_260(v7, v8);
  return OUTLINED_FUNCTION_1_41(v5);
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:completion:)()
{
  return OUTLINED_FUNCTION_150_3();
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:));
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 80LL);
  uint64_t v2 = OUTLINED_FUNCTION_31_30(v1);
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v4 = OUTLINED_FUNCTION_95_5( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:),  v3);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_310(v4);
  OUTLINED_FUNCTION_309(v5);
  OUTLINED_FUNCTION_40_10();
  OUTLINED_FUNCTION_254_1();
  return OUTLINED_FUNCTION_6_15(v6, v7, v8, v9, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  __n128 v3 = OUTLINED_FUNCTION_31_30(v2);
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v5 = (void *)OUTLINED_FUNCTION_96_3( v3,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:),  v4);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_302(v5, (uint64_t)SearchCallHistoryCATs.offerToContinueReading(isLastPage:));
  OUTLINED_FUNCTION_27_3();
  uint64_t v6 = OUTLINED_FUNCTION_271_0(48LL);
  return OUTLINED_FUNCTION_81_11(v6, v7, v8, v9);
}

{
  OUTLINED_FUNCTION_306();
  return OUTLINED_FUNCTION_147_1();
}

uint64_t SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.voiceMailOfferToFollowUpAction(isLastPage:));
}

uint64_t SearchCallHistoryCATs.voiceMailPromptToPlay(completion:)()
{
  return OUTLINED_FUNCTION_13(39LL);
}

uint64_t SearchCallHistoryCATs.voiceMailPromptToPlay()()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_53_2(v1);
  void *v2 = v0;
  v2[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_62_0();
  return OUTLINED_FUNCTION_6_15(v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  _OWORD *v1 = v0;
  v1[1] = UnsupportedFlowCATs.deleteVoicemail();
  OUTLINED_FUNCTION_38_2();
  uint64_t v2 = OUTLINED_FUNCTION_59_1(39LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

{
  return OUTLINED_FUNCTION_14_6(39LL, 0x8000000000344880LL, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:completion:)()
{
  char v1 = v0;
  unint64_t v3 = v2;
  char v5 = v4;
  unsigned __int8 v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_8_2(v8, 176LL);
  uint64_t v10 = OUTLINED_FUNCTION_54_13(v9, (__n128)xmmword_320080);
  v10[3].n128_u8[0] = v7;
  uint64_t v11 = OUTLINED_FUNCTION_152_4((uint64_t)v10, (uint64_t)&type metadata for Bool);
  *(_BYTE *)(v11 + 96) = v5;
  OUTLINED_FUNCTION_63_13((void *)v11, v12);
  if ((v1 & 1) != 0)
  {
    uint64_t v13 = 0LL;
    unint64_t v3 = 0LL;
    v9[9].n128_u64[1] = 0LL;
    v9[10].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v13 = &type metadata for Double;
  }

  v9[10].n128_u64[1] = (unint64_t)v13;
  v9[9].n128_u64[0] = v3;
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_52_3(0xD000000000000036LL);
  return OUTLINED_FUNCTION_51_12((uint64_t)v9);
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)( uint64_t a1, char a2, char a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(_BYTE *)(v6 + 66) = a5;
  *(_BYTE *)(v6 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a3;
  *(_BYTE *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:));
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  char v11 = *(_BYTE *)(v10 + 66);
  unsigned __int8 v12 = *(_BYTE *)(v10 + 65);
  unsigned __int8 v13 = *(_BYTE *)(v10 + 64);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_8_2(v14, 176LL);
  *(void *)(v10 + 40) = v15;
  unint64_t v16 = OUTLINED_FUNCTION_54_13(v15, (__n128)xmmword_320080);
  v16[3].n128_u8[0] = v13;
  v16[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v16[5], "isLastWindow");
  v16[5].n128_u8[13] = 0;
  v16[5].n128_u16[7] = -5120;
  v16[6].n128_u8[0] = v12;
  OUTLINED_FUNCTION_63_13(v16, (uint64_t)&type metadata for Bool);
  if ((v11 & 1) != 0)
  {
    uint64_t v18 = 0LL;
    unint64_t v17 = 0LL;
    v15[9].n128_u64[1] = 0LL;
    v15[10].n128_u64[0] = 0LL;
  }

  else
  {
    unint64_t v17 = *(void *)(v10 + 24);
    uint64_t v18 = &type metadata for Double;
  }

  v15[10].n128_u64[1] = (unint64_t)v18;
  v15[9].n128_u64[0] = v17;
  uint64_t v19 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  uint64_t v20 = (void *)OUTLINED_FUNCTION_113_5(v19);
  OUTLINED_FUNCTION_45_8(v20);
  OUTLINED_FUNCTION_40_10();
  return OUTLINED_FUNCTION_8_47(v21, 0xD000000000000036LL, v22, (uint64_t)v15, a10);
}

{
  uint64_t v10;
  char v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  uint64_t v14;
  __n128 *v15;
  __n128 *v16;
  unint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  OUTLINED_FUNCTION_49_1();
  char v11 = *(_BYTE *)(v10 + 58);
  unsigned __int8 v12 = *(_BYTE *)(v10 + 57);
  unsigned __int8 v13 = *(_BYTE *)(v10 + 56);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_8_2(v14, 176LL);
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  unint64_t v16 = OUTLINED_FUNCTION_54_13(v15, (__n128)xmmword_320080);
  v16[3].n128_u8[0] = v13;
  v16[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  strcpy((char *)&v16[5], "isLastWindow");
  v16[5].n128_u8[13] = 0;
  v16[5].n128_u16[7] = -5120;
  v16[6].n128_u8[0] = v12;
  OUTLINED_FUNCTION_63_13(v16, (uint64_t)&type metadata for Bool);
  if ((v11 & 1) != 0)
  {
    uint64_t v18 = 0LL;
    unint64_t v17 = 0LL;
    v15[9].n128_u64[1] = 0LL;
    v15[10].n128_u64[0] = 0LL;
  }

  else
  {
    unint64_t v17 = *(void *)(v10 + 16);
    uint64_t v18 = &type metadata for Double;
  }

  v15[10].n128_u64[1] = (unint64_t)v18;
  v15[9].n128_u64[0] = v17;
  uint64_t v19 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v10 + 40) = v19;
  OUTLINED_FUNCTION_30(v19, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_12_28(0xD000000000000036LL, v20, (uint64_t)v15, a10);
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)( char a1, char a2, uint64_t a3, char a4)
{
  *(_BYTE *)(v5 + 5__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a4;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = v4;
  *(_BYTE *)(v5 + 57) = a2;
  *(_BYTE *)(v5 + 56) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:));
}

uint64_t SearchCallHistoryCATs.windowIntroForReadingMultipleRecords(isFirstWindow:isLastWindow:windowSize:)()
{
  char v1 = v0;
  unint64_t v3 = v2;
  char v5 = v4;
  unsigned __int8 v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_8_2(v8, 176LL);
  uint64_t v10 = OUTLINED_FUNCTION_54_13(v9, (__n128)xmmword_320080);
  v10[3].n128_u8[0] = v7;
  uint64_t v11 = OUTLINED_FUNCTION_152_4((uint64_t)v10, (uint64_t)&type metadata for Bool);
  *(_BYTE *)(v11 + 96) = v5;
  OUTLINED_FUNCTION_63_13((void *)v11, v12);
  if ((v1 & 1) != 0)
  {
    unsigned __int8 v13 = 0LL;
    unint64_t v3 = 0LL;
    v9[9].n128_u64[1] = 0LL;
    v9[10].n128_u64[0] = 0LL;
  }

  else
  {
    unsigned __int8 v13 = &type metadata for Double;
  }

  v9[10].n128_u64[1] = (unint64_t)v13;
  v9[9].n128_u64[0] = v3;
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_55(0xD000000000000036LL, v14);
  return OUTLINED_FUNCTION_51_12((uint64_t)v9);
}

uint64_t SearchCallHistoryCATs.__allocating_init(templateDir:options:globals:)()
{
  return SearchCallHistoryCATs.init(templateDir:options:globals:)();
}

uint64_t SearchCallHistoryCATs.init(templateDir:options:globals:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for CATOption(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  outlined init with copy of SpeakableString?(v7, v1, (uint64_t *)&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v0, v5, v8);
  uint64_t v10 = CATWrapper.init(templateDir:options:globals:)(v1, v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5, v8);
  outlined destroy of SpeakableString?(v7, (uint64_t *)&demangling cache variable for type metadata for URL?);
  return v10;
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SearchCallHistoryCATs.Properties,  &type metadata for SearchCallHistoryCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATs.Properties and conformance SearchCallHistoryCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for SearchCallHistoryCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryCATs;
  if (!type metadata singleton initialization cache for SearchCallHistoryCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchCallHistoryCATs);
  }
  return result;
}

uint64_t type metadata completion function for SearchCallHistoryCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for SearchCallHistoryCATs);
}

uint64_t ObjC metadata update function for SearchCallHistoryCATs()
{
  return type metadata accessor for SearchCallHistoryCATs(0LL);
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryCATs.Properties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xD9)
  {
    if (a2 + 39 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 39) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 40;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xD8) {
    return ((uint64_t (*)(void))((char *)&loc_198664 + 4 * byte_32CB2D[v4]))();
  }
  *a1 = a2 + 39;
  return ((uint64_t (*)(void))((char *)sub_198698 + 4 * byte_32CB28[v4]))();
}

uint64_t sub_198698(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1986A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1986A8LL);
  }
  return result;
}

uint64_t sub_1986B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1986BCLL);
  }
  *(_BYTE *)uint64_t result = a2 + 39;
  return result;
}

uint64_t sub_1986C0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1986C8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchCallHistoryCATs.Properties()
{
  return &type metadata for SearchCallHistoryCATs.Properties;
}

__n128 *OUTLINED_FUNCTION_3_78(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6F6365526C6C6163LL;
  result[2].n128_u64[1] = 0xEF746E756F436472LL;
  return result;
}

__n128 *OUTLINED_FUNCTION_6_62(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6F6365526C6C6163LL;
  result[2].n128_u64[1] = 0xEA00000000006472LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_55(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6F6365526C6C6163LL;
  a1[2].n128_u64[1] = 0xEA00000000006472LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_16_39@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(result + 40) = v2 | 0xEF746E756F430000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_31_30(uint64_t result)
{
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x61507473614C7369LL;
  *(void *)(result + 40) = 0xEA00000000006567LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_29()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 80);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_33_37(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

void OUTLINED_FUNCTION_34_23()
{
  *(void *)(v0 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x726F63655277656ELL;
  *(void *)(v0 + 280) = 0xEF746E756F437364LL;
}

uint64_t OUTLINED_FUNCTION_36_22()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 88);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 96) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_37_26@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x746E65746E69LL;
  v2[17] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_38_22(uint64_t a1)
{
  v2[6] = v1;
  v2[9] = a1;
  v2[10] = 0x746E65746E69LL;
  v2[11] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_43_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_47_16(uint64_t result)
{
  _BYTE v2[24] = v1;
  v2[27] = result;
  v2[28] = 0x5074737269467369LL;
  v2[29] = 0xEF70704179747261LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_52_17@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(result + 40) = v2 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_53_18()
{
  return type metadata accessor for PhoneSearchCallHistoryIntent(0LL);
}

__n128 *OUTLINED_FUNCTION_54_13(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "isFirstWindow");
  result[2].n128_u16[7] = -4864;
  return result;
}

__n128 *OUTLINED_FUNCTION_59_13(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6D6563696F567369LL;
  result[2].n128_u64[1] = 0xEB000000006C6961LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_61_12()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 40);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  return swift_task_dealloc(v5);
}

void *OUTLINED_FUNCTION_63_13@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  result[15] = a2;
  result[16] = 0x6953776F646E6977LL;
  result[17] = 0xEA0000000000657ALL;
  return result;
}

uint64_t OUTLINED_FUNCTION_69_13@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_77_10(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x746E65746E69LL;
  a1[2].n128_u64[1] = 0xE600000000000000LL;
  return 0LL;
}

void OUTLINED_FUNCTION_78_12(uint64_t a1@<X8>)
{
  *(void *)(v1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_80_7@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(result + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(void *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(result + 80) = 0x64657373694D7369LL;
  *(void *)(result + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xE800000000000000LL;
  *(_BYTE *)(result + 96) = v3;
  *(void *)(result + 120) = a2;
  *(void *)(result + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x74736574614C7369LL;
  *(void *)(result + 136) = 0xE800000000000000LL;
  *(_BYTE *)(result + 144) = v2;
  *(void *)(result + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(void *)(result + 176) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_81_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

  ;
}

uint64_t OUTLINED_FUNCTION_89_8(uint64_t result)
{
  v3[15] = result;
  v3[16] = v1;
  v3[17] = (v2 - 32) | 0x8000000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_93_6(uint64_t a1@<X8>)
{
  *(void *)(v4 + 376) = (a1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v4 + 384) = v2;
  *(void *)(v4 + 40__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  strcpy((char *)(v4 + 416), "isNewVoicemail");
  *(_BYTE *)(v4 + 431) = -18;
  *(void *)(v4 + 456) = v3;
  *(_BYTE *)(v4 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
}

void OUTLINED_FUNCTION_94_8()
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

  ;
}

void OUTLINED_FUNCTION_99_7()
{
  *(void *)(v1 + 96) = v0;
}

void OUTLINED_FUNCTION_100_6()
{
  *(void *)(v1 + 96) = v0;
}

uint64_t OUTLINED_FUNCTION_106_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_111_6( uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  *(_BYTE *)(v9 + 107) = v8;
  *(_BYTE *)(v9 + 106) = a8;
  *(void *)(v9 + 40) = a6;
  *(void *)(v9 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a7;
  *(_BYTE *)(v9 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a5;
  *(_BYTE *)(v9 + 104) = a4;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v9 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_112_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_113_6(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1LL, a1);
}

void OUTLINED_FUNCTION_124_5(uint64_t a1@<X8>)
{
  v1[15] = a1;
  v1[16] = 0x746E65746E69LL;
  v1[17] = 0xE600000000000000LL;
}

uint64_t OUTLINED_FUNCTION_125_7@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  strcpy((char *)(v2 + 80), "isLastOfGroup");
  *(_WORD *)(v2 + 94) = -4864;
  return result;
}

uint64_t OUTLINED_FUNCTION_126_5(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0x5074737269467369LL;
  v2[23] = 0xEF70704179747261LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_129_6()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(void *)(v0 + 160) = 0LL;
  return result;
}

void OUTLINED_FUNCTION_131_4()
{
  *(void *)(v0 + 104) = 0LL;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
}

uint64_t OUTLINED_FUNCTION_132_6(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

void OUTLINED_FUNCTION_133_5()
{
  *(void *)(v1 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (v0 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_136_4()
{
  *(void *)(v0 + 296) = 0LL;
  *(void *)(v0 + 304) = 0LL;
}

void OUTLINED_FUNCTION_137_4()
{
  *(void *)(v0 + 56) = 0LL;
  *(void *)(v0 + 64) = 0LL;
}

uint64_t OUTLINED_FUNCTION_139_4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _BYTE v2[24] = a2;
  v2[27] = result;
  v2[28] = 0x5074737269467369LL;
  v2[29] = 0xEF70704179747261LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_140_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[18] = a2;
  v2[21] = result;
  v2[22] = 0x5074737269467369LL;
  v2[23] = 0xEF70704179747261LL;
  return result;
}

void OUTLINED_FUNCTION_141_4(uint64_t a1@<X8>)
{
  *(void *)(v1 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = (a1 - 32) | 0x8000000000000000LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_147_1()
{
  return SearchCallHistoryCATs.offerToContinueReading(isLastPage:)();
}

uint64_t OUTLINED_FUNCTION_148_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v3[29] = (a2 - 32) | 0x8000000000000000LL;
  v3[30] = v2;
  v3[33] = a1;
  v3[34] = 0x746E65746E69LL;
  v3[35] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_149_4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_150_3()
{
  return SearchCallHistoryCATs.offerToContinueReading(isLastPage:completion:)();
}

uint64_t OUTLINED_FUNCTION_152_4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  strcpy((char *)(result + 80), "isLastWindow");
  *(_BYTE *)(result + 9__swift_destroy_boxed_opaque_existential_1(v0 + 3) = 0;
  *(_WORD *)(result + 94) = -5120;
  return result;
}

void OUTLINED_FUNCTION_153_4(int a1@<W6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  *(void *)(v4 - 96) = a3;
  *(void *)(v4 - 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(void *)(v4 - 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(_DWORD *)(v4 - 100) = a1;
}

uint64_t OUTLINED_FUNCTION_166_1@<X0>(uint64_t a1@<X8>)
{
  v2[12] = v1;
  v2[15] = a1;
  v2[16] = 0x746E65746E69LL;
  v2[17] = 0xE600000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_170_2()
{
  *(_BYTE *)(v2 + 96) = v0;
  *(void *)(v2 + 120) = v1;
  *(void *)(v2 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x746E65746E69LL;
  *(void *)(v2 + 136) = 0xE600000000000000LL;
  return 0LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_173_2(uint64_t a1)
{
  return swift_task_switch(a1, 0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_174_3(uint64_t result)
{
  *(_BYTE *)(result + 4__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 0;
  *(_WORD *)(result + 46) = -5120;
  return result;
}

void OUTLINED_FUNCTION_176_2()
{
  *(_BYTE *)(v2 + 144) = v0;
  *(void *)(v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  *(void *)(v2 + 176) = v3 + 1;
}

uint64_t OUTLINED_FUNCTION_177_2@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[6] = a2;
  v2[9] = result;
  v2[10] = 0x746E65746E69LL;
  v2[11] = 0xE600000000000000LL;
  return result;
}

void *OUTLINED_FUNCTION_183_2@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  result[9] = a2;
  result[10] = 0x64657373694D7369LL;
  result[11] = 0xE800000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_184_0(uint64_t a1@<X8>)
{
  v2[6] = a1;
  v2[9] = v1;
  v2[10] = v3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

void OUTLINED_FUNCTION_185_0(uint64_t a1@<X8>)
{
  v2[6] = a1;
  v2[9] = v1;
  v2[10] = v3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_191_1()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_192_2@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[18] = a2;
  v2[21] = result;
  v2[22] = 0x746E65746E69LL;
  v2[23] = 0xE600000000000000LL;
  return result;
}

void OUTLINED_FUNCTION_194_2(uint64_t a1@<X8>)
{
  *(void *)(v2 + 184) = (a1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v2 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4 & 1;
  *(void *)(v2 + 216) = v1;
  *(void *)(v2 + 224) = v3;
}

void OUTLINED_FUNCTION_199_2()
{
  *(void *)(v1 + 136) = (v0 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_200_2(uint64_t a1@<X8>)
{
  v2[42] = v1;
  v2[45] = a1;
  v2[46] = v3 + 16;
}

uint64_t OUTLINED_FUNCTION_202_2(uint64_t result)
{
  *(void *)(v2 + 144) = v1;
  *(void *)(v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_203_2()
{
  *(void *)(v0 + 80) = 0x746E65746E69LL;
  *(void *)(v0 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xE600000000000000LL;
  return 0LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_209_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 72));
}

uint64_t OUTLINED_FUNCTION_211_0( uint64_t result, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v9 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a8;
  *(void *)(v9 + 56) = v8;
  *(_BYTE *)(v9 + 9__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a7;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v9 + 40) = a6;
  *(_BYTE *)(v9 + 97) = a4;
  *(_BYTE *)(v9 + 96) = a2;
  *(void *)(v9 + 16) = result;
  *(void *)(v9 + 24) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_214_1()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 80));
}

void *OUTLINED_FUNCTION_217_1@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  result[15] = a2;
  result[16] = 0x74736574614C7369LL;
  result[17] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_218_0(unint64_t a1)
{
  return SearchCallHistoryCATs.buildCallRecordDetail(callRecord:)(a1);
}

uint64_t OUTLINED_FUNCTION_219_1(uint64_t result)
{
  *(void *)(v1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_220_1( uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  *(_BYTE *)(v8 + 106) = a8;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a7;
  *(_BYTE *)(v8 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a5;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(_BYTE *)(v8 + 104) = a3;
  *(void *)(v8 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_222_1()
{
  return SearchCallHistoryCATs.buildCallRecordDetail(callRecord:completion:)();
}

uint64_t OUTLINED_FUNCTION_223_0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 32LL))(a1, v2, v1);
}

void OUTLINED_FUNCTION_224_1(uint64_t a1@<X8>)
{
  v1[15] = a1;
  v1[16] = 0x656369766564LL;
  v1[17] = 0xE600000000000000LL;
}

void OUTLINED_FUNCTION_226_1()
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

uint64_t OUTLINED_FUNCTION_227_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_229_1()
{
  return SearchCallHistoryCATs.readSingleCallRecord(callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)();
}

uint64_t OUTLINED_FUNCTION_230_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return outlined init with copy of SpeakableString?(v4, v3, a3);
}

void OUTLINED_FUNCTION_231_1(uint64_t a1@<X8>)
{
  v2[36] = a1;
  v2[39] = v1;
  v2[40] = v3;
}

uint64_t OUTLINED_FUNCTION_232_1()
{
  return SearchCallHistoryCATs.intentHandledResponseMissedCall(callRecordCount:totalCallRecordCount:intent:)();
}

uint64_t OUTLINED_FUNCTION_236_1()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 104) = 0LL;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_239_1()
{
  uint64_t result = 0LL;
  *(void *)(v0 + 200) = 0LL;
  *(void *)(v0 + 20__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
  return result;
}

void OUTLINED_FUNCTION_240_0()
{
  *(void *)(v0 + 104) = 0LL;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
}

void OUTLINED_FUNCTION_241_0()
{
  *(void *)(v0 + 56) = 0LL;
  *(void *)(v0 + 64) = 0LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_244_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[12] = a2;
  v2[15] = result;
  v2[16] = 0xD000000000000013LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_245_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 80));
}

uint64_t OUTLINED_FUNCTION_247_1(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_248_1(uint64_t result)
{
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_251_0()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_253_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[12] = a2;
  v2[15] = result;
  v2[16] = 0xD000000000000013LL;
  return result;
}

  ;
}

uint64_t OUTLINED_FUNCTION_258_1(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_259_1(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_261_0(uint64_t result)
{
  v2[18] = v1;
  v2[21] = result;
  v2[22] = 0xD000000000000013LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_263_0()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_264_0()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(v1, v0, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_270_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v3[21] = result;
  v3[22] = v4;
  v3[23] = (a2 - 32) | 0x8000000000000000LL;
  _BYTE v3[24] = v2;
  v3[27] = result;
  v3[28] = v4;
  return result;
}

unint64_t OUTLINED_FUNCTION_271_0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

void OUTLINED_FUNCTION_272_1(uint64_t a1@<X8>)
{
  *(void *)(v3 + 376) = (a1 - 32) | 0x8000000000000000LL;
  *(void *)(v3 + 40__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  *(_BYTE *)(v3 + 384) = v1;
}

void OUTLINED_FUNCTION_273_1(uint64_t a1@<X8>)
{
  *(void *)(v3 + 320) = v4;
  *(void *)(v3 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = (a1 - 32) | 0x8000000000000000LL;
  *(void *)(v3 + 360) = v2;
  *(_BYTE *)(v3 + 336) = v1;
}

void OUTLINED_FUNCTION_274_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (a1 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_275_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (a1 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_276_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_278_0(uint64_t a1@<X8>)
{
  *(void *)(v1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_279_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_281_0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 32));
}

  ;
}

void OUTLINED_FUNCTION_283_0()
{
  *(void *)(v3 + 184) = (v1 - 32) | 0x8000000000000000LL;
  *(_BYTE *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v4;
}

uint64_t OUTLINED_FUNCTION_285()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_287()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_290(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1);
}

uint64_t OUTLINED_FUNCTION_293@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(result + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  *(void *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(result + 80) = 0xD000000000000020LL;
  return result;
}

  ;
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_297(uint64_t a1@<X8>)
{
  v1[6] = v2;
  v1[9] = a1;
  v1[10] = 0xD000000000000014LL;
}

void OUTLINED_FUNCTION_298()
{
  *(_BYTE *)(v1 + 144) = v3 & 1;
  *(void *)(v1 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  *(void *)(v1 + 176) = v2 + 1;
}

  ;
}

  ;
}

void *OUTLINED_FUNCTION_302@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *uint64_t result = v2;
  result[1] = a2;
  return result;
}

void OUTLINED_FUNCTION_305()
{
  *(_BYTE *)(v2 + 144) = v0 & 1;
  *(void *)(v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  *(void *)(v2 + 176) = v3 + 1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_307@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(a1 + 40) = (v2 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_308(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_309(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_310(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_319@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 184) = (a2 - 32) | 0x8000000000000000LL;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_322(uint64_t a1, uint64_t *a2)
{
  return outlined destroy of SpeakableString?(v2, a2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_324@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = (v2 - 32) | 0x8000000000000000LL;
  *(void *)(result + 120) = a2;
  return result;
}

uint64_t ReaderNlIntent.traversableIntentNode.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of NonTerminalIntentNode?(v1, a1);
}

uint64_t outlined init with copy of NonTerminalIntentNode?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t ReaderNlIntent.traversableIntentNode.setter(uint64_t a1)
{
  return outlined assign with take of NonTerminalIntentNode?(a1, v1);
}

uint64_t outlined assign with take of NonTerminalIntentNode?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t ReaderNlIntent.traversableOntologyNode.getter()
{
  return swift_retain();
}

uint64_t type metadata accessor for ReaderNlIntent(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for ReaderNlIntent,  (uint64_t)&nominal type descriptor for ReaderNlIntent);
}

void ReaderNlIntent.traversableOntologyNode.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ReaderNlIntent(0LL) + 20);
  swift_release(*(void *)(v1 + v3));
  *(void *)(v1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a1;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *ReaderNlIntent.traversableOntologyNode.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t ReaderNlIntent.init(intent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode(0LL);
  __swift_storeEnumTagSinglePayload(a2, 1LL, 1LL, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v8 = OUTLINED_FUNCTION_1_62(v7);
  *(_OWORD *)(v8 + 16) = xmmword_31D870;
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once(&one-time initialization token for readerVerbNode, one-time initialization function for readerVerbNode);
  }
  uint64_t v9 = static ReaderOntologyNode.readerVerbNode;
  *(void *)(v8 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  *(void *)(v8 + 64) = lazy protocol witness table accessor for type AnyValueFlow<GuardFlowResult> and conformance AnyValueFlow<A>( &lazy protocol witness table cache variable for type TerminalOntologyNode<ReaderVerb> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>,  (uint64_t)&protocol conformance descriptor for TerminalOntologyNode<A>);
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
  uint64_t v10 = type metadata accessor for NonTerminalOntologyNode(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  swift_retain();
  uint64_t v11 = NonTerminalOntologyNode.init(name:multicardinal:childNodes:)(0x726564616572LL, 0xE600000000000000LL, 0LL, v8);
  *(void *)(a2 + *(int *)(type metadata accessor for ReaderNlIntent(0LL) + 20)) = v11;
  ReaderNlIntent.getReaderIntentNode(intent:)((uint64_t)v5);
  uint64_t v12 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(a1, v12);
  return outlined assign with take of NonTerminalIntentNode?((uint64_t)v5, a2);
}

uint64_t *ReaderOntologyNode.readerVerbNode.unsafeMutableAddressor()
{
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once(&one-time initialization token for readerVerbNode, one-time initialization function for readerVerbNode);
  }
  return &static ReaderOntologyNode.readerVerbNode;
}

uint64_t ReaderNlIntent.getReaderIntentNode(intent:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v113 = (uint64_t)&v102 - v4;
  __chkstk_darwin();
  uint64_t v114 = (uint64_t)&v102 - v5;
  __chkstk_darwin();
  uint64_t v115 = (uint64_t)&v102 - v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v102 - v7;
  uint64_t v9 = type metadata accessor for NonTerminalIntentNode(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t)&v102 - v13;
  __chkstk_darwin();
  unint64_t v16 = (char *)&v102 - v15;
  uint64_t v17 = __chkstk_darwin();
  uint64_t v19 = (char *)&v102 - v18;
  NLIntent.rootNode.getter(&v118, v17);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentNode);
  if (!swift_dynamicCast(v8, &v118, v20))
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1LL, 1LL, v9);
    uint64_t v26 = (uint64_t)v8;
LABEL_50:
    outlined destroy of SpeakableString?(v26, &demangling cache variable for type metadata for NonTerminalIntentNode?);
    goto LABEL_51;
  }

  uint64_t v109 = v20;
  uint64_t v104 = v14;
  uint64_t v108 = v16;
  uint64_t v103 = v3;
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v9);
  uint64_t v106 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v21 = v106(v19, v8, v9);
  uint64_t v22 = NonTerminalIntentNode.ontologyNodeName.getter(v21);
  if (v22 == 0x6973734169726953LL && v23 == 0xED0000746E617473LL)
  {
    uint64_t v25 = swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 0x6973734169726953LL, 0xED0000746E617473LL, 0LL);
    uint64_t v25 = swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
LABEL_51:
      uint64_t v57 = a1;
      uint64_t v58 = 1LL;
      uint64_t v59 = v9;
      return __swift_storeEnumTagSinglePayload(v57, v58, 1LL, v59);
    }
  }

  uint64_t v110 = v12;
  uint64_t v111 = v10;
  uint64_t v112 = v19;
  uint64_t v27 = NonTerminalIntentNode.childNodes.getter(v25);
  uint64_t v28 = v27;
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v117 = _swiftEmptyArrayStorage;
  uint64_t v30 = *(void *)(v27 + 16);
  if (!v30) {
    goto LABEL_27;
  }
  uint64_t v107 = v9;
  uint64_t v105 = a1;
  unint64_t v31 = 0LL;
  a1 = 0x6E6F69746361LL;
  uint64_t v32 = v27 + 32;
  uint64_t v33 = 0xE600000000000000LL;
  do
  {
    if (v31 >= *(void *)(v28 + 16))
    {
      __break(1u);
      goto LABEL_102;
    }

    outlined init with copy of SignalProviding(v32, (uint64_t)&v118);
    uint64_t v34 = v119;
    uint64_t v35 = v120;
    __swift_project_boxed_opaque_existential_1(&v118, v119);
    uint64_t v36 = dispatch thunk of IntentNode.ontologyNodeName.getter(v34, v35);
    if (v36 == 0x6E6F69746361LL && v37 == 0xE600000000000000LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, 0x6E6F69746361LL, 0xE600000000000000LL, 0LL);
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1(&v118);
        goto LABEL_25;
      }
    }

    outlined init with take of AppSelectionSignalComponent(&v118, (uint64_t)v116);
    unint64_t v39 = v117;
    if ((swift_isUniquelyReferenced_nonNull_native(v117) & 1) == 0)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      unint64_t v39 = v117;
    }

    unint64_t v40 = v39[2];
    uint64_t v14 = v40 + 1;
    if (v40 >= v39[3] >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      unint64_t v39 = v117;
    }

    v39[2] = v14;
    outlined init with take of AppSelectionSignalComponent(v116, (uint64_t)&v39[5 * v40 + 4]);
LABEL_25:
    ++v31;
    v32 += 40LL;
  }

  while (v30 != v31);
  uint64_t v29 = v117;
  a1 = v105;
  uint64_t v9 = v107;
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v28 = v111;
  uint64_t v14 = (uint64_t)v112;
  uint64_t v41 = (uint64_t)v110;
  if (v29[2] != 1LL)
  {
    (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v9);
    swift_release(v29);
    goto LABEL_51;
  }

  specialized Collection.first.getter((uint64_t)v29, (uint64_t)&v118);
  swift_release(v29);
  if (!v119)
  {
    outlined destroy of SpeakableString?((uint64_t)&v118, &demangling cache variable for type metadata for IntentNode?);
    uint64_t v42 = v115;
    __swift_storeEnumTagSinglePayload(v115, 1LL, 1LL, v9);
    goto LABEL_49;
  }

  uint64_t v42 = v115;
  int v43 = swift_dynamicCast(v115, &v118, v109);
  __swift_storeEnumTagSinglePayload(v42, v43 ^ 1u, 1LL, v9);
  if (__swift_getEnumTagSinglePayload(v42, 1LL, v9) == 1)
  {
LABEL_49:
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v14, v9);
    uint64_t v26 = v42;
    goto LABEL_50;
  }

  uint64_t v107 = v9;
  uint64_t v44 = v106(v108, (char *)v42, v9);
  uint64_t v45 = NonTerminalIntentNode.childNodes.getter(v44);
  unint64_t v46 = (void *)v45;
  unint64_t v47 = _swiftEmptyArrayStorage;
  uint64_t v117 = _swiftEmptyArrayStorage;
  uint64_t v48 = *(void *)(v45 + 16);
  if (!v48) {
    goto LABEL_53;
  }
  uint64_t v105 = a1;
  unint64_t v49 = 0LL;
  a1 = 0x646E616D6D6F63LL;
  uint64_t v28 = v45 + 32;
  uint64_t v33 = 0xE700000000000000LL;
  uint64_t v41 = 40LL;
  while (2)
  {
    if (v49 >= v46[2])
    {
      __break(1u);
      goto LABEL_105;
    }

    outlined init with copy of SignalProviding(v28, (uint64_t)&v118);
    uint64_t v50 = v119;
    uint64_t v51 = v120;
    __swift_project_boxed_opaque_existential_1(&v118, v119);
    uint64_t v52 = dispatch thunk of IntentNode.ontologyNodeName.getter(v50, v51);
    if (v52 == 0x646E616D6D6F63LL && v53 == 0xE700000000000000LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, 0x646E616D6D6F63LL, 0xE700000000000000LL, 0LL);
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1(&v118);
        goto LABEL_45;
      }
    }

    outlined init with take of AppSelectionSignalComponent(&v118, (uint64_t)v116);
    uint64_t v55 = v117;
    if ((swift_isUniquelyReferenced_nonNull_native(v117) & 1) == 0)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v55 = v117;
    }

    unint64_t v56 = v55[2];
    uint64_t v14 = v56 + 1;
    if (v56 >= v55[3] >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v55 = v117;
    }

    uint64_t v55[2] = v14;
    outlined init with take of AppSelectionSignalComponent(v116, (uint64_t)&v55[5 * v56 + 4]);
LABEL_45:
    ++v49;
    v28 += 40LL;
    if (v48 != v49) {
      continue;
    }
    break;
  }

  unint64_t v47 = v117;
  a1 = v105;
  uint64_t v28 = v111;
  uint64_t v14 = (uint64_t)v112;
  uint64_t v41 = (uint64_t)v110;
LABEL_53:
  swift_bridgeObjectRelease();
  if (v47[2] != 1LL)
  {
    swift_release(v47);
    uint64_t v77 = *(void (**)(char *, uint64_t))(v28 + 8);
    uint64_t v78 = v107;
    v77(v108, v107);
    v77((char *)v14, v78);
    uint64_t v57 = a1;
    uint64_t v58 = 1LL;
    uint64_t v59 = v78;
    return __swift_storeEnumTagSinglePayload(v57, v58, 1LL, v59);
  }

  specialized Collection.first.getter((uint64_t)v47, (uint64_t)&v118);
  swift_release(v47);
  uint64_t v33 = v107;
  if (!v119)
  {
    outlined destroy of SpeakableString?((uint64_t)&v118, &demangling cache variable for type metadata for IntentNode?);
    uint64_t v61 = v114;
    __swift_storeEnumTagSinglePayload(v114, 1LL, 1LL, v33);
    goto LABEL_75;
  }

  uint64_t v61 = v114;
  int v62 = swift_dynamicCast(v114, &v118, v109);
  __swift_storeEnumTagSinglePayload(v61, v62 ^ 1u, 1LL, v33);
  if (__swift_getEnumTagSinglePayload(v61, 1LL, v33) == 1)
  {
LABEL_75:
    uint64_t v79 = *(void (**)(char *, uint64_t))(v28 + 8);
    v79(v108, v33);
    v79((char *)v14, v33);
    uint64_t v80 = v61;
    goto LABEL_76;
  }

  uint64_t v63 = v106((char *)v104, (char *)v61, v33);
  uint64_t result = NonTerminalIntentNode.childNodes.getter(v63);
  uint64_t v64 = result;
  uint64_t v65 = _swiftEmptyArrayStorage;
  uint64_t v117 = _swiftEmptyArrayStorage;
  uint64_t v66 = *(void *)(result + 16);
  if (!v66) {
    goto LABEL_79;
  }
  uint64_t v105 = a1;
  unint64_t v67 = 0LL;
  uint64_t v68 = result + 32;
  while (2)
  {
    if (v67 < *(void *)(v64 + 16))
    {
      outlined init with copy of SignalProviding(v68, (uint64_t)&v118);
      uint64_t v69 = v119;
      uint64_t v70 = v120;
      __swift_project_boxed_opaque_existential_1(&v118, v119);
      uint64_t v71 = dispatch thunk of IntentNode.ontologyNodeName.getter(v69, v70);
      if (v71 == 0x7463656A627573LL && v72 == 0xE700000000000000LL)
      {
        swift_bridgeObjectRelease();
      }

      else
      {
        char v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v72, 0x7463656A627573LL, 0xE700000000000000LL, 0LL);
        swift_bridgeObjectRelease();
        if ((v74 & 1) == 0)
        {
          uint64_t result = __swift_destroy_boxed_opaque_existential_1(&v118);
          goto LABEL_71;
        }
      }

      outlined init with take of AppSelectionSignalComponent(&v118, (uint64_t)v116);
      uint64_t v75 = v117;
      if ((swift_isUniquelyReferenced_nonNull_native(v117) & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v75 = v117;
      }

      unint64_t v76 = v75[2];
      if (v76 >= v75[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v75 = v117;
      }

      v75[2] = v76 + 1;
      uint64_t result = outlined init with take of AppSelectionSignalComponent(v116, (uint64_t)&v75[5 * v76 + 4]);
LABEL_71:
      ++v67;
      v68 += 40LL;
      if (v66 != v67) {
        continue;
      }
      uint64_t v65 = v117;
      a1 = v105;
      uint64_t v33 = v107;
      uint64_t v28 = v111;
      uint64_t v14 = (uint64_t)v112;
      uint64_t v41 = (uint64_t)v110;
LABEL_79:
      swift_bridgeObjectRelease();
      if (v65[2] != 1LL)
      {
        swift_release(v65);
        uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        goto LABEL_100;
      }

      specialized Collection.first.getter((uint64_t)v65, (uint64_t)&v118);
      swift_release(v65);
      if (v119)
      {
        uint64_t v81 = v113;
        int v82 = swift_dynamicCast(v113, &v118, v109);
        __swift_storeEnumTagSinglePayload(v81, v82 ^ 1u, 1LL, v33);
        if (__swift_getEnumTagSinglePayload(v81, 1LL, v33) != 1)
        {
          uint64_t v83 = v106((char *)v41, (char *)v81, v33);
          uint64_t result = NonTerminalIntentNode.childNodes.getter(v83);
          uint64_t v84 = result;
          unint64_t v46 = _swiftEmptyArrayStorage;
          uint64_t v117 = _swiftEmptyArrayStorage;
          uint64_t v85 = *(void *)(result + 16);
          if (v85)
          {
            uint64_t v105 = a1;
            unint64_t v86 = 0LL;
            uint64_t v87 = result + 32;
            while (1)
            {
              if (v86 >= *(void *)(v84 + 16)) {
                goto LABEL_114;
              }
              outlined init with copy of SignalProviding(v87, (uint64_t)&v118);
              uint64_t v88 = v119;
              uint64_t v89 = v120;
              __swift_project_boxed_opaque_existential_1(&v118, v119);
              uint64_t v90 = dispatch thunk of IntentNode.ontologyNodeName.getter(v88, v89);
              if (v90 == 0x726564616572LL && v91 == 0xE600000000000000LL) {
                break;
              }
              char v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v90, v91, 0x726564616572LL, 0xE600000000000000LL, 0LL);
              swift_bridgeObjectRelease();
              if ((v93 & 1) != 0) {
                goto LABEL_92;
              }
              uint64_t result = __swift_destroy_boxed_opaque_existential_1(&v118);
LABEL_97:
              ++v86;
              v87 += 40LL;
              uint64_t v96 = v109;
              if (v85 == v86)
              {
                unint64_t v46 = v117;
                a1 = v105;
                uint64_t v33 = v107;
                uint64_t v28 = v111;
                uint64_t v14 = (uint64_t)v112;
                uint64_t v41 = (uint64_t)v110;
                goto LABEL_106;
              }
            }

            swift_bridgeObjectRelease();
LABEL_92:
            outlined init with take of AppSelectionSignalComponent(&v118, (uint64_t)v116);
            uint64_t v94 = v117;
            if ((swift_isUniquelyReferenced_nonNull_native(v117) & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v94 = v117;
            }

            unint64_t v95 = v94[2];
            if (v95 >= v94[3] >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              uint64_t v94 = v117;
            }

            v94[2] = v95 + 1;
            uint64_t result = outlined init with take of AppSelectionSignalComponent(v116, (uint64_t)&v94[5 * v95 + 4]);
            goto LABEL_97;
          }

LABEL_105:
          uint64_t v96 = v109;
LABEL_106:
          swift_bridgeObjectRelease();
          if (v46[2] == 1LL)
          {
            specialized Collection.first.getter((uint64_t)v46, (uint64_t)&v118);
            swift_release(v46);
            uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
            v99(v41, v33);
            v99(v104, v33);
            v99((uint64_t)v108, v33);
            v99(v14, v33);
            if (v119)
            {
              uint64_t v100 = (uint64_t)v103;
              int v101 = swift_dynamicCast(v103, &v118, v96);
              __swift_storeEnumTagSinglePayload(v100, v101 ^ 1u, 1LL, v33);
              if (__swift_getEnumTagSinglePayload(v100, 1LL, v33) != 1)
              {
                v106((char *)a1, (char *)v100, v33);
                uint64_t v57 = a1;
                uint64_t v58 = 0LL;
                goto LABEL_78;
              }
            }

            else
            {
              outlined destroy of SpeakableString?( (uint64_t)&v118,  &demangling cache variable for type metadata for IntentNode?);
              uint64_t v100 = (uint64_t)v103;
              __swift_storeEnumTagSinglePayload((uint64_t)v103, 1LL, 1LL, v33);
            }

            uint64_t v80 = v100;
LABEL_76:
            outlined destroy of SpeakableString?( v80,  &demangling cache variable for type metadata for NonTerminalIntentNode?);
LABEL_77:
            uint64_t v57 = a1;
            uint64_t v58 = 1LL;
LABEL_78:
            uint64_t v59 = v33;
            return __swift_storeEnumTagSinglePayload(v57, v58, 1LL, v59);
          }

          swift_release(v46);
          uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
          v97(v41, v33);
LABEL_100:
          v97(v104, v33);
          v97((uint64_t)v108, v33);
          v97(v14, v33);
          goto LABEL_77;
        }

LABEL_103:
        uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v98(v104, v33);
        v98((uint64_t)v108, v33);
        v98(v14, v33);
        uint64_t v80 = v81;
        goto LABEL_76;
      }

LABEL_102:
      outlined destroy of SpeakableString?((uint64_t)&v118, &demangling cache variable for type metadata for IntentNode?);
      uint64_t v81 = v113;
      __swift_storeEnumTagSinglePayload(v113, 1LL, 1LL, v33);
      goto LABEL_103;
    }

    break;
  }

  __break(1u);
LABEL_114:
  __break(1u);
  return result;
}

uint64_t ReaderNlIntent.getReaderVerb.getter()
{
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once(&one-time initialization token for readerVerbNode, one-time initialization function for readerVerbNode);
  }
  uint64_t v0 = static ReaderOntologyNode.readerVerbNode;
  uint64_t v1 = type metadata accessor for ReaderNlIntent(0LL);
  unint64_t v2 = lazy protocol witness table accessor for type ReaderNlIntent and conformance ReaderNlIntent();
  IntentNodeTraversable.value<A>(forNode:)(&v4, v0, v1, v2);
  return v4;
}

uint64_t protocol witness for IntentNodeTraversable.traversableOntologyNode.getter in conformance ReaderNlIntent( uint64_t a1)
{
  return swift_retain(*(void *)(v1 + *(int *)(a1 + 20)));
}

uint64_t one-time initialization function for readerVerbNode()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0x6556726564616572LL, 0xEA00000000006272LL, 0LL);
  static ReaderOntologyNode.readerVerbNode = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type ReaderNlIntent and conformance ReaderNlIntent()
{
  unint64_t result = lazy protocol witness table cache variable for type ReaderNlIntent and conformance ReaderNlIntent;
  if (!lazy protocol witness table cache variable for type ReaderNlIntent and conformance ReaderNlIntent)
  {
    uint64_t v1 = type metadata accessor for ReaderNlIntent(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReaderNlIntent, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ReaderNlIntent and conformance ReaderNlIntent);
  }

  return result;
}

uint64_t static ReaderOntologyNode.readerVerbNode.getter()
{
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once(&one-time initialization token for readerVerbNode, one-time initialization function for readerVerbNode);
  }
  return swift_retain();
}

uint64_t ReaderOntologyNode.__allocating_init(name:multicardinal:)(uint64_t a1, uint64_t a2, char a3)
{
  return ReaderOntologyNode.init(name:multicardinal:)(a1, a2, a3);
}

uint64_t ReaderOntologyNode.init(name:multicardinal:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v7 = OUTLINED_FUNCTION_1_62(v6);
  *(_OWORD *)(v7 + 16) = xmmword_31D870;
  if (one-time initialization token for readerVerbNode != -1) {
    swift_once(&one-time initialization token for readerVerbNode, one-time initialization function for readerVerbNode);
  }
  uint64_t v8 = static ReaderOntologyNode.readerVerbNode;
  *(void *)(v7 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>);
  *(void *)(v7 + 64) = lazy protocol witness table accessor for type AnyValueFlow<GuardFlowResult> and conformance AnyValueFlow<A>( &lazy protocol witness table cache variable for type TerminalOntologyNode<ReaderVerb> and conformance TerminalOntologyNode<A>,  &demangling cache variable for type metadata for TerminalOntologyNode<ReaderVerb>,  (uint64_t)&protocol conformance descriptor for TerminalOntologyNode<A>);
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  swift_retain();
  return NonTerminalOntologyNode.init(name:multicardinal:childNodes:)(a1, a2, a3 & 1, v7);
}

void ReaderOntologyNode.init(name:multicardinal:childNodes:)(uint64_t a1, uint64_t a2)
{
}

uint64_t ReaderOntologyNode.__deallocating_deinit()
{
  uint64_t v0 = NonTerminalOntologyNode.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

PhoneCallFlowDelegatePlugin::ReaderVerb_optional __swiftcall ReaderVerb.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of ReaderVerb.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::ReaderVerb_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::ReaderVerb_optional)v3;
  }
}

_UNKNOWN **static ReaderVerb.allCases.getter()
{
  return &outlined read-only object #0 of static ReaderVerb.allCases.getter;
}

uint64_t ReaderVerb.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x65756E69746E6F63LL;
  }
  if (a1 == 1) {
    return 1886352499LL;
  }
  return 0x746165706572LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ReaderVerb( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

unint64_t lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb()
{
  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReaderVerb, &type metadata for ReaderVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReaderVerb, &type metadata for ReaderVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReaderVerb, &type metadata for ReaderVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReaderVerb, &type metadata for ReaderVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReaderVerb, &type metadata for ReaderVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb;
  if (!lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ReaderVerb, &type metadata for ReaderVerb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type ReaderVerb and conformance ReaderVerb);
  }

  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance ReaderVerb()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ReaderVerb(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ReaderVerb(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::ReaderVerb_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReaderVerb@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::ReaderVerb_optional *a2@<X8>)
{
  result.value = ReaderVerb.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ReaderVerb@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = ReaderVerb.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ReaderVerb()
{
  return lazy protocol witness table accessor for type AnyValueFlow<GuardFlowResult> and conformance AnyValueFlow<A>( &lazy protocol witness table cache variable for type [ReaderVerb] and conformance [A],  &demangling cache variable for type metadata for [ReaderVerb],  (uint64_t)&protocol conformance descriptor for [A]);
}

void protocol witness for static CaseIterable.allCases.getter in conformance ReaderVerb(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ReaderVerb.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance ReaderVerb( uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb();
  unint64_t v5 = lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb();
  unint64_t v6 = lazy protocol witness table accessor for type ReaderVerb and conformance ReaderVerb();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReaderNlIntent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for NonTerminalIntentNode(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v7);
    }

    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }

  swift_retain();
  return a1;
}

uint64_t destroy for ReaderNlIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NonTerminalIntentNode(0LL);
  return swift_release(*(void *)(a1 + *(int *)(a2 + 20)));
}

char *initializeWithCopy for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  return a1;
}

char *assignWithCopy for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(void *)&a2[v11];
  uint64_t v13 = *(void *)&a1[v11];
  *(void *)&a1[v11] = v12;
  swift_retain();
  swift_release(v13);
  return a1;
}

char *initializeWithTake for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for ReaderNlIntent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NonTerminalIntentNode(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(void *)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderNlIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19AE68);
}

uint64_t sub_19AE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(OUTLINED_FUNCTION_33_34(v2, v3, v4, v5, v6, v7, v8) = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ReaderNlIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19AEF0);
}

void sub_19AEF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }

  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

void type metadata completion function for ReaderNlIntent(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
  }

void type metadata accessor for NonTerminalIntentNode?(uint64_t a1)
{
  if (!lazy cache variable for type metadata for NonTerminalIntentNode?)
  {
    uint64_t v2 = type metadata accessor for NonTerminalIntentNode(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for NonTerminalIntentNode?);
    }
  }

uint64_t type metadata accessor for ReaderOntologyNode(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for ReaderOntologyNode,  (uint64_t)&nominal type descriptor for ReaderOntologyNode);
}

uint64_t type metadata completion function for ReaderOntologyNode(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for ReaderOntologyNode);
}

uint64_t ObjC metadata update function for ReaderOntologyNode()
{
  return type metadata accessor for ReaderOntologyNode(0LL);
}

uint64_t storeEnumTagSinglePayload for ReaderVerb(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_19B0CC + 4 * byte_32CC25[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19B100 + 4 * byte_32CC20[v4]))();
}

uint64_t sub_19B100(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19B108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x19B110LL);
  }
  return result;
}

uint64_t sub_19B11C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x19B124LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_19B128(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19B130(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReaderVerb()
{
  return &type metadata for ReaderVerb;
}

uint64_t OUTLINED_FUNCTION_0_69(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 46LL, a3, 36LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_1_62(uint64_t a1)
{
  return swift_allocObject(a1, 72LL, 7LL);
}

void *CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, void *a10, __int128 *a11)
{
  void (*v23)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  __int128 *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  __int128 v43[2];
  uint64_t v12 = v11;
  uint64_t v36 = a8;
  uint64_t v37 = a3;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  unint64_t v40 = a10;
  uint64_t v41 = a7;
  uint64_t v38 = a11;
  unint64_t v39 = a9;
  uint64_t v17 = *v11;
  type metadata accessor for DialogPhase(0LL);
  OUTLINED_FUNCTION_5_2();
  uint64_t v18 = __chkstk_darwin();
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static DialogPhase.completion.getter(v18);
  OutputGenerationManifest.init(dialogPhase:_:)( v20,  closure #1 in variable initialization expression of UnsupportedCallFlowOutputFactory.completionOutputManifest,  0LL);
  uint64_t v35 = a1;
  v12[2] = a1;
  uint64_t v42 = a1;
  uint64_t v21 = *(void *)(v17 + 80);
  uint64_t v22 = *(void *)(*(void *)(*(void *)(v17 + 88) + 8LL) + 8LL);
  uint64_t v23 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v22 + 8);
  swift_unknownObjectRetain(a1);
  v23(v43, v21, v22);
  outlined init with take of AppSelectionSignalComponent(v43, (uint64_t)(v12 + 3));
  uint64_t v32 = a2;
  v12[8] = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)(v12 + 9));
  uint64_t v24 = v33;
  uint64_t v25 = v34;
  v12[14] = a4;
  v12[15] = v24;
  v12[16] = v25;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v41, (uint64_t)(v12 + 17));
  uint64_t v26 = v36;
  v12[22] = v36;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v39, (uint64_t)(v12 + 23));
  outlined init with copy of SharedGlobalsProviding((uint64_t)v40, (uint64_t)(v12 + 28));
  uint64_t v27 = v12[6];
  uint64_t v28 = v12[7];
  __swift_project_boxed_opaque_existential_1(v12 + 3, v27);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v30 = v29(v27, v28);
  swift_unknownObjectRelease(v35);
  swift_release(v32);
  swift_release(a4);
  swift_release(v24);
  swift_release(v25);
  swift_release(v26);
  __swift_destroy_boxed_opaque_existential_1(v40);
  __swift_destroy_boxed_opaque_existential_1(v39);
  __swift_destroy_boxed_opaque_existential_1(v41);
  __swift_destroy_boxed_opaque_existential_1(v37);
  outlined init with copy of SharedGlobalsProviding(v30 + 120, (uint64_t)v43);
  swift_release(v30);
  outlined init with take of AppSelectionSignalComponent(v43, (uint64_t)(v12 + 33));
  outlined init with take of AppSelectionSignalComponent(v38, (uint64_t)(v12 + 38));
  return v12;
}

void CallingIntentBaseFlowStrategy.handleTemplatingResultFailure(_:_:)( uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
}

void CallingIntentBaseFlowStrategy.handleAceViewsFailure(_:_:)( uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
}

void CallingIntentBaseFlowStrategy.handleTemplatingResultFailure(_:_:)( uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, const char *a4)
{
  uint64_t v6 = v4;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  swift_retain();
  OUTLINED_FUNCTION_8_55();
  swift_retain();
  uint64_t v10 = OUTLINED_FUNCTION_8_55();
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v14 = OUTLINED_FUNCTION_7_0(64LL);
    v21[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v15 = _typeName(_:qualified:)(*v6, 0LL);
    uint64_t v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v13 + 4);
    OUTLINED_FUNCTION_31_1((uint64_t)v6);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v20 = a1;
    OUTLINED_FUNCTION_8_55();
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    uint64_t v18 = String.init<A>(describing:)(&v20, v17);
    uint64_t v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v13 + 14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_68();
    OUTLINED_FUNCTION_7_68();
    _os_log_impl(&dword_0, v11, v12, a4, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2LL);
    OUTLINED_FUNCTION_0_2(v14);
    OUTLINED_FUNCTION_0_2(v13);
  }

  else
  {
    OUTLINED_FUNCTION_31_1((uint64_t)v6);
    OUTLINED_FUNCTION_7_68();
    OUTLINED_FUNCTION_7_68();
  }

  v21[0] = a1;
  char v22 = 1;
  OUTLINED_FUNCTION_8_55();
  a2(v21);
  outlined destroy of UUID?((uint64_t)v21, &demangling cache variable for type metadata for Result<Output, Error>);
}

uint64_t CallingIntentBaseFlowStrategy.handleAceViewsFailure(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_9_50();
  OUTLINED_FUNCTION_95();
  uint64_t v5 = OUTLINED_FUNCTION_9_50();
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc(22LL, -1LL);
    uint64_t v9 = swift_slowAlloc(64LL, -1LL);
    uint64_t v25 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = _typeName(_:qualified:)(*v2, 0LL);
    uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v8 + 4);
    OUTLINED_FUNCTION_3_16();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v24 = a1;
    OUTLINED_FUNCTION_9_50();
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    uint64_t v13 = String.init<A>(describing:)(&v24, v12);
    uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v8 + 14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    _os_log_impl(&dword_0, v6, v7, "#%s failed to make ace views: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2LL);
    OUTLINED_FUNCTION_0_2(v9);
    OUTLINED_FUNCTION_0_2(v8);
  }

  else
  {
    OUTLINED_FUNCTION_3_16();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
  }

  swift_willThrow(v15, v16, v17, v18, v19, v20, v21, v22);
  return OUTLINED_FUNCTION_9_50();
}

void CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  os_log_type_t v7 = v6;
  uint64_t v43 = a5;
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  uint64_t v10 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v13, (uint64_t)static Logger.siriPhone);
  uint64_t v14 = swift_retain_n(v6, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v17 = static os_log_type_t.debug.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    uint64_t v18 = OUTLINED_FUNCTION_7_0(12LL);
    unint64_t v40 = a1;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v41 = a6;
    uint64_t v21 = v20;
    v48[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v22 = _typeName(_:qualified:)(*v7, 0LL);
    *(void *)&v47[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v47, (char *)v47 + 8, v19 + 4);
    OUTLINED_FUNCTION_31_1((uint64_t)v7);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v15, v17, "#%s slot resolvers enabled, calling multicardinal slot resolver", v19, 0xCu);
    swift_arrayDestroy(v21, 1LL);
    uint64_t v24 = v21;
    a6 = v41;
    OUTLINED_FUNCTION_0_2(v24);
    uint64_t v25 = (uint64_t)v19;
    a1 = v40;
    OUTLINED_FUNCTION_0_2(v25);
  }

  else
  {

    OUTLINED_FUNCTION_31_1((uint64_t)v7);
  }

  uint64_t v27 = *(void *)(v10 + 80);
  uint64_t v26 = *(void *)(v10 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  swift_getAssociatedConformanceWitness(v26, v27, AssociatedTypeWitness);
  uint64_t v29 = v44;
  swift_retain();
  static ContactSlotResolver.makeMulticardinalResolver<A>(multicardinalIndex:rchFlowContext:sharedGlobals:)( v42,  0,  v29,  0LL,  0LL,  AssociatedTypeWitness,  (uint64_t)v48);
  swift_release(v29);
  uint64_t v30 = type metadata accessor for TaskPriority(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1LL, 1LL, v30);
  uint64_t v33 = type metadata accessor for AnyIntentResolver(0LL, AssociatedTypeWitness, v31, v32);
  uint64_t v34 = *(void *)(v33 - 8);
  (*(void (**)(_OWORD *, uint64_t *, uint64_t))(v34 + 16))(v47, v48, v33);
  outlined init with copy of SharedGlobalsProviding(v45, (uint64_t)v46);
  uint64_t v35 = swift_allocObject(&unk_406428, 176LL, 7LL);
  *(void *)(v35 + 16) = 0LL;
  *(void *)(v35 + 24) = 0LL;
  *(void *)(v35 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v27;
  *(void *)(v35 + 40) = v26;
  __int128 v36 = v47[1];
  *(_OWORD *)(v35 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v47[0];
  *(_OWORD *)(v35 + 64) = v36;
  __int128 v37 = v47[3];
  *(_OWORD *)(v35 + 80) = v47[2];
  *(_OWORD *)(v35 + 96) = v37;
  *(void *)(v35 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  outlined init with take of AppSelectionSignalComponent(v46, v35 + 120);
  *(void *)(v35 + 160) = v43;
  *(void *)(v35 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a6;
  id v38 = a1;
  OUTLINED_FUNCTION_95();
  uint64_t v39 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( (uint64_t)v12,  (uint64_t)&async function pointer to partial apply for closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:),  v35);
  swift_release(v39);
  (*(void (**)(uint64_t *, uint64_t))(v34 + 8))(v48, v33);
  OUTLINED_FUNCTION_7_5();
}

void CallingIntentBaseFlowStrategy.getCompletionOutputManifest(intent:intentResponse:withContextForHandleIntent:responseViewId:printSupportingDialogInDisplayModes:)( uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin();
  uint64_t v15 = &v21[-v14];
  uint64_t v16 = v6 + direct field offset for CallingIntentBaseFlowStrategy.completionOutputManifest;
  uint64_t v17 = type metadata accessor for OutputGenerationManifest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16LL))(a6, v16, v17);
  if ((a2 & 1) != 0)
  {
    int v22 = a5;
    uint64_t v18 = OUTLINED_FUNCTION_3_79();
    uint64_t v19 = OUTLINED_FUNCTION_3_79();
    type metadata accessor for PhoneCallNLContextProvider(0LL, v18, v19, v20);
    LOBYTE(a__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v22;
    static PhoneCallNLContextProvider.makeContextForHandleIntent(intent:handleIntentResponse:)();
    outlined init with copy of NLContextUpdate?((uint64_t)v15, (uint64_t)v13);
    OutputGenerationManifest.nlContextUpdate.setter(v13);
    outlined destroy of UUID?((uint64_t)v15, &demangling cache variable for type metadata for NLContextUpdate?);
  }

  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(a5 & 1);
  swift_bridgeObjectRetain();
  OutputGenerationManifest.responseViewId.setter(a3, a4);
  OUTLINED_FUNCTION_7_5();
}

uint64_t ButtonBuilder.command.getter()
{
  return swift_unknownObjectRetain(*(void *)(v0 + 16));
}

void CallingIntentBaseFlowStrategy.startCallCatPatterns.getter(uint64_t a1@<X8>)
{
}

uint64_t SearchCallHistorySharedGlobals.phoneCommonCats.getter()
{
  return swift_retain(*(void *)(v0 + 120));
}

uint64_t CallingIntentBaseFlowStrategy.phoneCallCommonCATsSimple.getter()
{
  return swift_retain(*(void *)(v0 + 128));
}

void CallingIntentBaseFlowStrategy.phoneCallCommonCatPatterns.getter(uint64_t a1@<X8>)
{
}

void CallingIntentBaseFlowStrategy.responseGenerator.getter(uint64_t a1@<X8>)
{
}

void CallingIntentBaseFlowStrategy.siriKitEventSender.getter(uint64_t a1@<X8>)
{
}

void CallingIntentBaseFlowStrategy.referenceResolver.getter(uint64_t a1@<X8>)
{
}

void CallingIntentBaseFlowStrategy.appInfoBuilder.getter(uint64_t a1@<X8>)
{
}

uint64_t CallingIntentBaseFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, void *a10, __int128 *a11)
{
  uint64_t v20 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
  return v20;
}

uint64_t closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a5;
  uint64_t v11 = (void *)swift_task_alloc(dword_439C14);
  void v8[5] = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  type metadata accessor for AnyIntentResolver(0LL, AssociatedTypeWitness, v13, v14);
  *uint64_t v11 = v8;
  v11[1] = closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:);
  return AnyIntentResolver.resolve(skIntent:nlIntent:)(a5, a6);
}

uint64_t closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)( uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc(*(void *)(*v2 + 40));
  if (v1)
  {
    swift_errorRelease(v1);
    uint64_t v5 = closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:);
  }

  else
  {
    *(void *)(v4 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
    uint64_t v5 = closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:);
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

uint64_t closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)()
{
  uint64_t v1 = *(void (**)(void))(v0 + 24);
  id v2 = *(id *)(v0 + 48);
  v1();

  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void (*v1)(void);
  id v2;
  uint64_t v1 = *(void (**)(void))(v0 + 24);
  id v2 = *(id *)(v0 + 16);
  v1();

  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentBaseFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_19C0BC()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 120));
  swift_release(*(void *)(v0 + 168));
  return swift_deallocObject(v0, 176LL, 7LL);
}

uint64_t partial apply for closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)( uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (uint64_t)(v1 + 6);
  uint64_t v6 = v1[14];
  uint64_t v7 = (uint64_t)(v1 + 15);
  uint64_t v9 = v1[20];
  uint64_t v8 = v1[21];
  uint64_t v10 = (void *)swift_task_alloc(dword_436284);
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return closure #1 in CallingIntentBaseFlowStrategy.executeCRR(siriKitIntent:nlIntent:app:multicardinalValueIndex:_:)( a1,  v3,  v4,  v5,  v6,  v7,  v9,  v8);
}

uint64_t type metadata completion function for CallingIntentBaseFlowStrategy(uint64_t a1)
{
  v4[0] = "\b";
  v4[1] = &unk_32CE78;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_32CE78;
  void v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = &unk_32CE78;
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = &unk_32CE78;
  v4[10] = &unk_32CE78;
  v4[11] = &unk_32CE78;
  v4[12] = &unk_32CE78;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    v4[13] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 14LL, v4, a1 + 96);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata accessor for CallingIntentBaseFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CallingIntentBaseFlowStrategy);
}

uint64_t OUTLINED_FUNCTION_3_79()
{
  return swift_getAssociatedTypeWitness(255LL);
}

uint64_t OUTLINED_FUNCTION_7_68()
{
  return swift_errorRelease(v0);
}

uint64_t OUTLINED_FUNCTION_8_55()
{
  return swift_errorRetain(v0);
}

void specialized closure #1 in static DICodableOverride.undoEncoding<A>(name:type:)( uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    goto LABEL_9;
  }

  swift_bridgeObjectRetain();
  unint64_t v6 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v7 & 1) == 0)
  {
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }

  outlined init with copy of Any(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v40);
  swift_bridgeObjectRelease();
  if (!*((void *)&v41 + 1))
  {
LABEL_9:
    outlined destroy of Any?((uint64_t)&v40);
    return;
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
  if ((swift_dynamicCast(&v39, &v40, (char *)&type metadata for Any + 8) & 1) != 0)
  {
    uint64_t v8 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&__int128 v40 = 0LL;
    id v10 = [v8 dataWithPropertyList:isa format:200 options:0 error:&v40];

    id v11 = (id)v40;
    if (v10)
    {
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
      unint64_t v14 = v13;

      uint64_t v15 = type metadata accessor for PropertyListDecoder(0LL);
      swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
      uint64_t v16 = PropertyListDecoder.init()();
      uint64_t v17 = type metadata accessor for URL(0LL);
      *((void *)&v41 + 1) = v17;
      uint64_t v18 = __swift_allocate_boxed_opaque_existential_1(&v40);
      uint64_t v19 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type URL and conformance URL,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v18, v17, v12, v14, v17, v19);
      swift_release(v16);
      swift_bridgeObjectRetain();
      specialized Dictionary.subscript.setter((uint64_t)&v40, a2, a3);
      outlined consume of Data._Representation(v12, v14);
    }

    else
    {
      uint64_t v20 = v11;
      uint64_t v21 = _convertNSErrorToError(_:)(v11);

      swift_willThrow(v22, v23, v24, v25, v26, v27, v28, v29);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v30 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
      uint64_t v31 = swift_bridgeObjectRetain_n(a3, 2LL);
      uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc(22LL, -1LL);
        uint64_t v35 = swift_slowAlloc(64LL, -1LL);
        *(void *)&__int128 v40 = v35;
        *(_DWORD *)uint64_t v34 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, (uint64_t *)&v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v34 + 4);
        swift_bridgeObjectRelease_n(a3, 3LL);
        *(_WORD *)(v34 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v39 = type metadata accessor for URL(0LL);
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL.Type);
        uint64_t v37 = String.init<A>(describing:)(&v39, v36);
        uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, (uint64_t *)&v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v34 + 14);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v32, v33, "Could not undo encoding for property %s of type %s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy(v35, 2LL);
        swift_slowDealloc(v35, -1LL, -1LL);
        swift_slowDealloc(v34, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      swift_errorRelease(v21);
    }
  }

void specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t *a7, uint64_t *a8)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_s *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v14 = *a1;
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(a2, a3, v14, &v39);
  swift_bridgeObjectRelease();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a5);
  if (swift_dynamicCast(&v38, &v39, v15) && v38)
  {
    __int128 v41 = v38;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
    uint64_t v18 = (void (*)(uint64_t *__return_ptr, uint64_t *))a6(v17);
    uint64_t v20 = v19;
    v18(&v38, &v41);
    swift_release(v20);
    __int128 v40 = __swift_instantiateConcreteTypeFromMangledName(a7);
    *(void *)&uint64_t v39 = v38;
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v39, a2, a3);
    swift_bridgeObjectRelease();
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = type metadata accessor for Logger(0LL);
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    uint64_t v25 = static os_log_type_t.debug.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v27 = OUTLINED_FUNCTION_7_0(32LL);
      *(void *)&uint64_t v39 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      __int128 v41 = v16;
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(a8);
      uint64_t v29 = String.init<A>(describing:)(&v41, v28);
      __int128 v41 = OUTLINED_FUNCTION_13_8(v29, v30, v31, v32, v33, v34, v35, v36, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v26 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v23, v25, "No entry in userData of type %s to override", v26, 0xCu);
      swift_arrayDestroy(v27, 1LL);
      OUTLINED_FUNCTION_0_2(v27);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }
  }

uint64_t one-time initialization function for codableOverrides()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin();
  v18[1] = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v4 = (char *)v18 - v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<DICodableOverride>);
  uint64_t v6 = swift_allocObject(v5, 96LL, 7LL);
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  if (one-time initialization token for transformer != -1) {
    swift_once(&one-time initialization token for transformer, one-time initialization function for transformer);
  }
  uint64_t v7 = __swift_project_value_buffer(v0, (uint64_t)static INPersonArrayCodable.transformer);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v7, v0);
  OUTLINED_FUNCTION_11_54();
  uint64_t v8 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v10 = v9 + v2;
  v18[0] = v8 | 7;
  uint64_t v11 = swift_allocObject(&unk_406620, v9 + v2, v8 | 7);
  OUTLINED_FUNCTION_19_35();
  *(void *)(v12 + 16) = v13;
  *(void *)(v12 + 24) = 0xEA00000000007374LL;
  OUTLINED_FUNCTION_15_48(v12 + v9);
  OUTLINED_FUNCTION_11_54();
  uint64_t v14 = swift_allocObject(&unk_406648, v10, v18[0]);
  OUTLINED_FUNCTION_19_35();
  *(void *)(v15 + 16) = v16;
  *(void *)(v15 + 24) = 0xEA00000000007374LL;
  OUTLINED_FUNCTION_15_48(v15 + v9);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = partial apply for specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:);
  *(void *)(v6 + 40) = v11;
  *(void *)(v6 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = partial apply for specialized closure #2 in static DICodableOverride.transform<A, B>(name:transformer:);
  *(void *)(v6 + 56) = v14;
  uint64_t result = swift_allocObject(&unk_406670, 32LL, 7LL);
  *(void *)(result + 16) = 0x5255657469766E69LL;
  *(void *)(result + 24) = 0xE90000000000004CLL;
  *(void *)(v6 + 64) = partial apply for specialized closure #1 in static DICodableOverride.undoEncoding<A>(name:type:);
  *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  *(void *)(v6 + 80) = INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
  *(void *)(v6 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
  static MessageFlowDirectInvocation.codableOverrides = v6;
  return result;
}

uint64_t *MessageFlowDirectInvocation.codableOverrides.unsafeMutableAddressor()
{
  if (one-time initialization token for codableOverrides != -1) {
    swift_once( &one-time initialization token for codableOverrides,  one-time initialization function for codableOverrides);
  }
  return &static MessageFlowDirectInvocation.codableOverrides;
}

uint64_t static MessageFlowDirectInvocation.codableOverrides.getter()
{
  if (one-time initialization token for codableOverrides != -1) {
    swift_once( &one-time initialization token for codableOverrides,  one-time initialization function for codableOverrides);
  }
  return swift_bridgeObjectRetain();
}

void *MessageFlowDirectInvocation.identifier.unsafeMutableAddressor()
{
  return &static MessageFlowDirectInvocation.identifier;
}

unint64_t static MessageFlowDirectInvocation.identifier.getter()
{
  return OUTLINED_FUNCTION_3_80();
}

uint64_t key path setter for MessageFlowDirectInvocation.recipients : MessageFlowDirectInvocation()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return MessageFlowDirectInvocation.recipients.setter(v0);
}

uint64_t MessageFlowDirectInvocation.recipients.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease(*v1);
  void *v1 = a1;
  return result;
}

void (*MessageFlowDirectInvocation.recipients.modify(void *a1))(uint64_t *a1, char a2)
{
  *a1 = *v1;
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return MessageFlowDirectInvocation.recipients.modify;
}

void MessageFlowDirectInvocation.recipients.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_62();
    *uint64_t v3 = v2;
    swift_bridgeObjectRelease();
  }

  else
  {
    OUTLINED_FUNCTION_62();
    *uint64_t v3 = v2;
    OUTLINED_FUNCTION_6();
  }

uint64_t MessageFlowDirectInvocation.content.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain(*(void *)(v0 + 16));
  return v1;
}

void MessageFlowDirectInvocation.content.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_6();
}

uint64_t MessageFlowDirectInvocation.inviteURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_1_63();
  return OUTLINED_FUNCTION_55_1(a1, v1, v3, *(uint64_t (**)(void))(*(void *)(v3 - 8) + 16LL));
}

uint64_t type metadata accessor for MessageFlowDirectInvocation(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for MessageFlowDirectInvocation;
  if (!type metadata singleton initialization cache for MessageFlowDirectInvocation) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MessageFlowDirectInvocation);
  }
  return result;
}

uint64_t MessageFlowDirectInvocation.inviteURL.setter(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_1_63();
  return OUTLINED_FUNCTION_55_1(v1, a1, v3, *(uint64_t (**)(void))(*(void *)(v3 - 8) + 40LL));
}

Swift::Void (__swiftcall *MessageFlowDirectInvocation.inviteURL.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t MessageFlowDirectInvocation.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6E65697069636572LL && a2 == 0xEA00000000007374LL)
  {
    unint64_t v5 = 0xEA00000000007374LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E65697069636572LL, 0xEA00000000007374LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x746E65746E6F63LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v8 = 0xE700000000000000LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E65746E6F63LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x5255657469766E69LL && a2 == 0xE90000000000004CLL)
  {
    swift_bridgeObjectRelease(0xE90000000000004CLL);
    return 2LL;
  }

  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x5255657469766E69LL, 0xE90000000000004CLL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0) {
      return 2LL;
    }
    else {
      return 3LL;
    }
  }

uint64_t MessageFlowDirectInvocation.CodingKeys.stringValue.getter(char a1)
{
  if (!a1) {
    return 0x6E65697069636572LL;
  }
  if (a1 == 1) {
    return 0x746E65746E6F63LL;
  }
  return 0x5255657469766E69LL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance MessageFlowDirectInvocation.CodingKeys()
{
  return MessageFlowDirectInvocation.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance MessageFlowDirectInvocation.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = MessageFlowDirectInvocation.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance MessageFlowDirectInvocation.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MessageFlowDirectInvocation.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MessageFlowDirectInvocation.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<MessageFlowDirectInvocation.CodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_406600, &unk_406600, v10, v8, v9);
  uint64_t v15 = *v4;
  v14[1] = 0;
  lazy protocol witness table accessor for type INPersonArrayCodable and conformance INPersonArrayCodable();
  OUTLINED_FUNCTION_4_5();
  if (!v2)
  {
    uint64_t v11 = v4[1];
    uint64_t v12 = v4[2];
    v14[0] = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v11, v12, v14, v6);
    type metadata accessor for MessageFlowDirectInvocation(0LL);
    type metadata accessor for URL(0LL);
    lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type URL and conformance URL,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
    OUTLINED_FUNCTION_4_5();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

unint64_t lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for MessageFlowDirectInvocation.CodingKeys,  &unk_406600);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for MessageFlowDirectInvocation.CodingKeys,  &unk_406600);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for MessageFlowDirectInvocation.CodingKeys,  &unk_406600);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys;
  if (!lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for MessageFlowDirectInvocation.CodingKeys,  &unk_406600);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type INPersonArrayCodable and conformance INPersonArrayCodable()
{
  unint64_t result = lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable;
  if (!lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for INPersonArrayCodable,  &type metadata for INPersonArrayCodable);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable;
  if (!lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for INPersonArrayCodable,  &type metadata for INPersonArrayCodable);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type INPersonArrayCodable and conformance INPersonArrayCodable);
  }

  return result;
}

uint64_t MessageFlowDirectInvocation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = type metadata accessor for URL(0LL);
  uint64_t v4 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<MessageFlowDirectInvocation.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v7 = type metadata accessor for MessageFlowDirectInvocation(0LL);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type MessageFlowDirectInvocation.CodingKeys and conformance MessageFlowDirectInvocation.CodingKeys();
  uint64_t v27 = v2;
  uint64_t v13 = v30;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_406600, &unk_406600, v12, v10, v11);
  if (v13) {
    return OUTLINED_FUNCTION_16_40();
  }
  uint64_t v24 = v7;
  uint64_t v30 = v6;
  uint64_t v14 = v9;
  uint64_t v15 = v4;
  uint64_t v16 = v26;
  char v33 = 0;
  unint64_t v17 = lazy protocol witness table accessor for type INPersonArrayCodable and conformance INPersonArrayCodable();
  uint64_t v18 = v28;
  KeyedDecodingContainer.decode<A>(_:forKey:)( &type metadata for INPersonArrayCodable,  &v33,  v28,  &type metadata for INPersonArrayCodable,  v17);
  uint64_t v19 = (uint64_t)v14;
  *uint64_t v14 = v34;
  char v32 = 1;
  v14[1] = KeyedDecodingContainer.decode(_:forKey:)(&v32, v18);
  _BYTE v14[2] = v20;
  char v31 = 2;
  uint64_t v21 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type URL and conformance URL,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
  uint64_t v22 = v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v16, &v31, v18, v16, v21);
  OUTLINED_FUNCTION_4_65();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19 + *(int *)(v24 + 24), v22, v16);
  outlined init with copy of MessageFlowDirectInvocation(v19, v25);
  OUTLINED_FUNCTION_16_40();
  return outlined destroy of MessageFlowDirectInvocation(v19);
}

uint64_t outlined init with copy of MessageFlowDirectInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageFlowDirectInvocation(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of MessageFlowDirectInvocation(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageFlowDirectInvocation(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t MessageFlowDirectInvocation.init(recipients:content:inviteURL:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  OUTLINED_FUNCTION_12_56();
  uint64_t v7 = OUTLINED_FUNCTION_1_63();
  return OUTLINED_FUNCTION_55_1((uint64_t)a5, a4, v7, *(uint64_t (**)(void))(*(void *)(v7 - 8) + 32LL));
}

uint64_t instantiation function for generic protocol witness table for MessageFlowDirectInvocation( uint64_t a1)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type MessageFlowDirectInvocation and conformance MessageFlowDirectInvocation,  type metadata accessor for MessageFlowDirectInvocation,  (uint64_t)&protocol conformance descriptor for MessageFlowDirectInvocation);
  uint64_t result = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type MessageFlowDirectInvocation and conformance MessageFlowDirectInvocation,  type metadata accessor for MessageFlowDirectInvocation,  (uint64_t)&protocol conformance descriptor for MessageFlowDirectInvocation);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance MessageFlowDirectInvocation@<X0>( void *a1@<X0>, uint64_t a2@<X8>)
{
  return MessageFlowDirectInvocation.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance MessageFlowDirectInvocation(void *a1)
{
  return MessageFlowDirectInvocation.encode(to:)(a1);
}

uint64_t sub_19D800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ContactDisambiguationPromptResponseParser.personsToDisambiguate.getter();
  *a1 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessageFlowDirectInvocation( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL(0LL);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v6);
    v11(v8, v9, v10);
  }

  return v5;
}

uint64_t destroy for MessageFlowDirectInvocation(void *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL(0LL);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
}

uint64_t *initializeWithCopy for MessageFlowDirectInvocation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2[2];
  a1[2] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  return a1;
}

uint64_t *assignWithCopy for MessageFlowDirectInvocation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[1] = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  unint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for URL(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for MessageFlowDirectInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(v5, v6, v7);
  return a1;
}

uint64_t *assignWithTake for MessageFlowDirectInvocation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a2[2];
  uint64_t v8 = a1[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40LL))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageFlowDirectInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19DB34);
}

uint64_t sub_19DB34(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for URL(0LL);
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }

uint64_t storeEnumTagSinglePayload for MessageFlowDirectInvocation( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_19DBB4);
}

void sub_19DBB4(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    uint64_t v7 = type metadata accessor for URL(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 24), a2, a2, v7);
  }

uint64_t type metadata completion function for MessageFlowDirectInvocation(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = &unk_32CF30;
  uint64_t result = type metadata accessor for URL(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for MessageFlowDirectInvocation.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_19DCE4 + 4 * byte_32CE95[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19DD18 + 4 * byte_32CE90[v4]))();
}

uint64_t sub_19DD18(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19DD20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x19DD28LL);
  }
  return result;
}

uint64_t sub_19DD34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x19DD3CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_19DD40(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19DD48(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for MessageFlowDirectInvocation.CodingKeys()
{
  return &unk_406600;
}

void partial apply for specialized closure #1 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t *a1)
{
}

uint64_t objectdestroyTm_13()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<[Data], [INPerson]>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void partial apply for specialized closure #2 in static DICodableOverride.transform<A, B>(name:transformer:)( uint64_t *a1)
{
}

uint64_t sub_19DF64()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void partial apply for specialized closure #1 in static DICodableOverride.undoEncoding<A>(name:type:)( uint64_t *a1)
{
}

uint64_t OUTLINED_FUNCTION_1_63()
{
  return type metadata accessor for URL(0LL);
}

unint64_t OUTLINED_FUNCTION_3_80()
{
  return 0xD000000000000028LL;
}

uint64_t OUTLINED_FUNCTION_4_65()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v11, v10, a4);
}

uint64_t OUTLINED_FUNCTION_11_54()
{
  return v3(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_12_56()
{
  return type metadata accessor for MessageFlowDirectInvocation(0LL);
}

uint64_t OUTLINED_FUNCTION_15_48(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_16_40()
{
  return __swift_destroy_boxed_opaque_existential_1(*(void **)(v0 - 104));
}

  ;
}

uint64_t IntentFromParseFlowStrategyHelper.__allocating_init(sharedGlobals:appResolved:)( __int128 *a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject(v2, 64LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(a1, v5 + 24);
  *(void *)(v5 + 16) = a2;
  return v5;
}

uint64_t IntentFromParseFlowStrategyHelper.init(sharedGlobals:appResolved:)(__int128 *a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return v2;
}

void IntentFromParseFlowStrategyHelper.makeIntentFromParse(parse:previousIntent:)( void (*a1)(void, void), void *a2)
{
  uint64_t v139 = a2;
  uint64_t v137 = *(void *)v2;
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v133 = *(void *)(v4 - 8);
  uint64_t v134 = v4;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v132 = v5;
  uint64_t v6 = OUTLINED_FUNCTION_65_1();
  uint64_t v130 = type metadata accessor for PhoneCallNLv3Intent(v6);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v138 = v7;
  uint64_t v8 = OUTLINED_FUNCTION_65_1();
  uint64_t v143 = type metadata accessor for NLIntent(v8);
  uint64_t v9 = *(void *)(v143 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8_56(v10, v123);
  __chkstk_darwin();
  uint64_t v135 = (os_log_s *)((char *)&v123 - v11);
  __chkstk_darwin();
  uint64_t v140 = (char *)&v123 - v12;
  uint64_t v13 = OUTLINED_FUNCTION_65_1();
  uint64_t v14 = type metadata accessor for Logger(v13);
  uint64_t v129 = *(void *)(v14 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  char v128 = (uint8_t *)v15;
  uint64_t v16 = OUTLINED_FUNCTION_39_16();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v131 = (uint64_t)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v20 = (uint64_t *)((char *)&v123 - v19);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v22 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v2, v22))
  {
    uint64_t v23 = v17;
    uint64_t v24 = v16;
    uint64_t v25 = v9;
    uint64_t v26 = v21;
    uint64_t v27 = a1;
    uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v28 = 0;
    OUTLINED_FUNCTION_5(&dword_0, v2, v22, "#IntentFromParseFlowStrategyHelper makeIntentFromParse", v28);
    uint64_t v29 = (uint64_t)v28;
    a1 = v27;
    uint64_t v21 = v26;
    uint64_t v9 = v25;
    uint64_t v16 = v24;
    uint64_t v17 = v23;
    OUTLINED_FUNCTION_0_2(v29);
  }

  uint64_t v30 = *(void (**)(uint64_t, void (*)(void, void), uint64_t))(v17 + 16);
  uint64_t v141 = (void (*)(char *, uint64_t))a1;
  v30((uint64_t)v20, a1, v16);
  int v31 = (*(uint64_t (**)(void *, uint64_t))(v17 + 88))(v20, v16);
  if (v31 == enum case for Parse.NLv3IntentOnly(_:))
  {
    OUTLINED_FUNCTION_7_69(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    goto LABEL_7;
  }

  int v37 = v31;
  if (v31 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v126 = v30;
    OUTLINED_FUNCTION_7_69(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    unint64_t v38 = *(void **)((char *)v20
    uint64_t v39 = v140;
    uint64_t v40 = v143;
    (*(void (**)(char *, void *, uint64_t))(v9 + 32))(v140, v20, v143);
    __int128 v41 = v135;
    uint64_t v129 = *(void *)(v9 + 16);
    ((void (*)(os_log_s *, char *, uint64_t))v129)(v135, v39, v40);
    PhoneCallNLv3Intent.init(intent:)((uint64_t)v41, v138);
    OUTLINED_FUNCTION_30_28();
    OUTLINED_FUNCTION_17_43();
    os_log_type_t v42 = OUTLINED_FUNCTION_41();
    BOOL v43 = OUTLINED_FUNCTION_6_63(v42);
    uint64_t v125 = v16;
    uint64_t v124 = v17;
    uint64_t v127 = v9;
    if (v43)
    {
      uint64_t v44 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v45 = (uint64_t)v38;
      uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
      v147[0] = v46;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v135 = (os_log_s *)(v44 + 4);
      unint64_t v47 = (void *)Parse.ServerConversion.siriKitIntent.getter(v46);
      id v48 = [v47 _metadata];

      id v49 = [v48 userUtterance];
      *(void *)&__int128 v144 = v49;
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _INPBString?);
      uint64_t v51 = String.init<A>(describing:)(&v144, v50);
      *(void *)&__int128 v144 = OUTLINED_FUNCTION_35_16(v51, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, (char *)&v144 + 8, v135);
      OUTLINED_FUNCTION_31_1(v45);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0(&dword_0, v41, (os_log_type_t)v20, "User utterance: %s", v44);
      OUTLINED_FUNCTION_17_0(v46);
      uint64_t v53 = v46;
      unint64_t v38 = (void *)v45;
      OUTLINED_FUNCTION_0_2(v53);
      OUTLINED_FUNCTION_0_2((uint64_t)v44);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v38);
    }

    OUTLINED_FUNCTION_30_28();
    OUTLINED_FUNCTION_17_43();
    os_log_type_t v54 = OUTLINED_FUNCTION_41();
    BOOL v55 = OUTLINED_FUNCTION_6_63(v54);
    uint64_t v139 = v38;
    if (v55)
    {
      unint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v57 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v135 = (os_log_s *)v57;
      v147[0] = v57;
      *(_DWORD *)unint64_t v56 = 136315138;
      char v128 = v56 + 4;
      uint64_t v58 = (void *)Parse.ServerConversion.siriKitIntent.getter(v57);
      id v59 = [v58 description];
      uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      uint64_t v61 = (uint64_t)v38;
      unint64_t v63 = v62;

      uint64_t v64 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v63, v147);
      uint64_t v65 = OUTLINED_FUNCTION_69_6(v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v65, v66, v128);
      OUTLINED_FUNCTION_31_1(v61);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0(&dword_0, v41, (os_log_type_t)v20, "SKIntent from server: %s", v56);
      uint64_t v67 = (uint64_t)v135;
      OUTLINED_FUNCTION_17_0((uint64_t)v135);
      OUTLINED_FUNCTION_0_2(v67);
      OUTLINED_FUNCTION_0_2((uint64_t)v56);
    }

    else
    {

      OUTLINED_FUNCTION_31_1((uint64_t)v38);
    }

    uint64_t v69 = v143;
    uint64_t v70 = v127;
    uint64_t v71 = v136;
    ((void (*)(os_log_s *, char *, uint64_t))v129)(v136, v140, v143);
    OUTLINED_FUNCTION_17_43();
    os_log_type_t v72 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_6_63(v72))
    {
      uint64_t v73 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v74 = OUTLINED_FUNCTION_7_0(32LL);
      v147[0] = v74;
      *(_DWORD *)uint64_t v73 = 136315138;
      uint64_t v75 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type NLIntent and conformance NLIntent,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter(v143, v75);
      uint64_t v78 = OUTLINED_FUNCTION_35_16(v76, v77);
      uint64_t v79 = OUTLINED_FUNCTION_69_6(v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v79, v80, v73 + 4);
      OUTLINED_FUNCTION_62();
      uint64_t v81 = *(void (**)(os_log_s *, uint64_t))(v127 + 8);
      v81(v71, v143);
      OUTLINED_FUNCTION_57_0(&dword_0, v41, (os_log_type_t)v20, "NLIntent from server: %s", v73);
      OUTLINED_FUNCTION_17_0(v74);
      OUTLINED_FUNCTION_0_2(v74);
      OUTLINED_FUNCTION_0_2((uint64_t)v73);
    }

    else
    {
      uint64_t v81 = *(void (**)(os_log_s *, uint64_t))(v70 + 8);
      v81(v71, v69);
    }

    uint64_t v16 = v125;
    uint64_t v17 = v124;
    int v82 = v139;
    uint64_t v84 = (void *)Parse.ServerConversion.siriKitIntent.getter(v83);
    uint64_t v68 = *(void *)(v137 + 80);
    INIntent.typed<A>(as:)(v68, v68);
    unint64_t v86 = v85;

    if (v86)
    {
      uint64_t v141 = (void (*)(char *, uint64_t))v81;
      v147[3] = v130;
      v147[4] = (uint64_t)&protocol witness table for PhoneCallNLv3Intent;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v147);
      outlined init with copy of PhoneCallNLv3Intent(v138, (uint64_t)boxed_opaque_existential_1);
      id v88 = v86;
      uint64_t v89 = IntentFromParseFlowStrategyHelper.inferApp(from:)();
      uint64_t v90 = (uint64_t)(v142 + 3);
      uint64_t v91 = v82;
      uint64_t v136 = (os_log_s *)v21;
      uint64_t v93 = v142[6];
      uint64_t v92 = v142[7];
      __swift_project_boxed_opaque_existential_1(v142 + 3, v93);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v92 + 8))(&v144, v93, v92);
      uint64_t v94 = v145;
      uint64_t v95 = v146;
      __swift_project_boxed_opaque_existential_1(&v144, v145);
      uint64_t v96 = v132;
      dispatch thunk of DeviceState.siriLocale.getter(v94, v95);
      specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)( (uint64_t)v88,  (uint64_t)v147,  v89,  v96,  v90,  0LL,  1LL,  v68,  *(void *)(v137 + 88),  v122,  v123,  v124,  v125,  (uint64_t)v126,  v127,  (uint64_t)v128,  v129,  v130,  v131,  v132,  v133);

      swift_release(v89);
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v96, v134);
      __swift_destroy_boxed_opaque_existential_1(&v144);
      __swift_destroy_boxed_opaque_existential_1(v147);
      id v97 = v88;
      uint64_t v98 = v136;
      Logger.logObject.getter(v97);
      os_log_type_t v99 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_93(v99))
      {
        uint64_t v100 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v101 = OUTLINED_FUNCTION_7_0(32LL);
        v147[0] = v101;
        *(_DWORD *)uint64_t v100 = 136315138;
        *(void *)&__int128 v144 = v97;
        id v102 = v97;
        uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v68);
        uint64_t v104 = String.init<A>(describing:)(&v144, v68, WitnessTable);
        *(void *)&__int128 v144 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v104, v105, v147);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, (char *)&v144 + 8, v100 + 4);

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0(&dword_0, v98, (os_log_type_t)v94, "SKIntent after NCR replacement: %s", v100);
        OUTLINED_FUNCTION_17_0(v101);
        OUTLINED_FUNCTION_0_2(v101);
        OUTLINED_FUNCTION_0_2((uint64_t)v100);
        swift_release(v139);
      }

      else
      {
        swift_release(v91);
      }

      outlined destroy of PhoneCallNLv3Intent(v138);
      v141(v140, v143);
      goto LABEL_9;
    }

    swift_release(v82);
    outlined destroy of PhoneCallNLv3Intent(v138);
    v81((os_log_s *)v140, v143);
LABEL_28:
    uint64_t v106 = v17;
    uint64_t v107 = v131;
    v126(v131, (void (*)(void, void))v141, v16);
    OUTLINED_FUNCTION_17_43();
    os_log_type_t v108 = OUTLINED_FUNCTION_59_8();
    if (os_log_type_enabled((os_log_t)v68, v108))
    {
      uint64_t v109 = v107;
      uint64_t v110 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v111 = OUTLINED_FUNCTION_7_0(32LL);
      v147[0] = v111;
      *(_DWORD *)uint64_t v110 = 136315138;
      Swift::String v112 = Parse.typeForLogging()();
      uint64_t v113 = OUTLINED_FUNCTION_35_16(v112._countAndFlagsBits, (unint64_t)v112._object);
      uint64_t v114 = OUTLINED_FUNCTION_69_6(v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, v115, v110 + 4);
      OUTLINED_FUNCTION_62();
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v109, v16);
      OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v68,  v108,  "#IntentFromParseFlowStrategyHelper makeIntentFromParse get unexpected parse: %s",  v110);
      OUTLINED_FUNCTION_17_0(v111);
      OUTLINED_FUNCTION_0_2(v111);
      OUTLINED_FUNCTION_0_2((uint64_t)v110);
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v107, v16);
    }

    goto LABEL_9;
  }

  if (v31 == enum case for Parse.NLv4IntentOnly(_:))
  {
    OUTLINED_FUNCTION_7_69(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    swift_unknownObjectRelease(*v20);
  }

  else
  {
    uint64_t v126 = v30;
    uint64_t v68 = enum case for Parse.uso(_:);
    OUTLINED_FUNCTION_7_69(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    if (v37 != (_DWORD)v68) {
      goto LABEL_28;
    }
  }

void IntentFromParseFlowStrategyHelper.makeIntentFromParseSiriX(parse:nlIntent:previousIntent:)( void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  uint64_t v109 = a1;
  uint64_t v110 = a2;
  uint64_t v6 = *v3;
  id v104 = a3;
  uint64_t v105 = v6;
  uint64_t v7 = (os_log_s *)type metadata accessor for Logger(0LL);
  uint64_t v98 = *((void *)v7 - 1);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v99 = v8;
  uint64_t v9 = OUTLINED_FUNCTION_65_1();
  uint64_t v10 = type metadata accessor for Locale(v9);
  uint64_t v102 = *(void *)(v10 - 8);
  uint64_t v103 = v10;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v101 = v11;
  uint64_t v111 = OUTLINED_FUNCTION_39_16();
  uint64_t v12 = *(void *)(v111 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8_56(v13, v97);
  __chkstk_darwin();
  uint64_t v15 = (os_log_s *)((char *)&v97 - v14);
  uint64_t v16 = v5[2];
  uint64_t v17 = &unk_31F000;
  uint64_t v107 = (os_log_s *)((char *)&v97 - v14);
  uint64_t v108 = v12;
  uint64_t v106 = v7;
  if (v16)
  {
    uint64_t v18 = one-time initialization token for siriPhone;
    OUTLINED_FUNCTION_25_1();
    if (v18 != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    __swift_project_value_buffer((uint64_t)v7, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = swift_retain_n(v16, 2LL);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v22 = static os_log_type_t.debug.getter(v20, v21);
    if (os_log_type_enabled(v20, v22))
    {
      uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v24 = OUTLINED_FUNCTION_7_0(32LL);
      v112[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      v113[0] = (id)v16;
      uint64_t v25 = type metadata accessor for App(0LL);
      uint64_t v26 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter(v25, v26);
      uint64_t v29 = OUTLINED_FUNCTION_68_1(v27, v28);
      uint64_t v30 = OUTLINED_FUNCTION_10_4(v29);
      uint64_t v17 = (void *)&unk_31F000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v30, v31, v23 + 4);
      OUTLINED_FUNCTION_31_1(v16);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_57_0( &dword_0,  v20,  v22,  "#IntentFromParseFlowStrategyHelper makeIntentFromParse: appResolved: %s",  v23);
      OUTLINED_FUNCTION_17_0(v24);
      OUTLINED_FUNCTION_0_2(v24);
      OUTLINED_FUNCTION_0_2((uint64_t)v23);
      OUTLINED_FUNCTION_16_3();
    }

    else
    {

      swift_release_n(v16, 3LL);
    }

    uint64_t v15 = v107;
    uint64_t v12 = v108;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    __swift_project_value_buffer((uint64_t)v7, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v32 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_93(v32))
    {
      uint64_t v33 = v15;
      uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v34 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v7,  v4,  "#IntentFromParseFlowStrategyHelper makeIntentFromParse: no appResolved",  v34);
      uint64_t v35 = (uint64_t)v34;
      uint64_t v15 = v33;
      OUTLINED_FUNCTION_0_2(v35);
    }
  }

  uint64_t v36 = *(void (**)(os_log_s *, void *, uint64_t))(v12 + 16);
  uint64_t v37 = v111;
  v36(v15, v109, v111);
  int v38 = (*(uint64_t (**)(os_log_s *, uint64_t))(v12 + 88))(v15, v37);
  if (v38 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v39 = (uint64_t)(v5 + 3);
    OUTLINED_FUNCTION_19_36();
    uint64_t v40 = (void (*)(uint64_t))type metadata for Any[10];
    OUTLINED_FUNCTION_25_1();
    uint64_t v41 = (uint64_t)v104;
    id v42 = v104;
    uint64_t v43 = OUTLINED_FUNCTION_72_8();
    v40(v43);
    uint64_t v44 = v105;
    uint64_t v45 = *(void *)(v105 + 80);
    SKTransformer.convertToSKIntent<A>(ofType:phoneCallNLIntent:rchFlowContext:)(v45, v110, v16, v41, 0LL, v45);
    unint64_t v47 = v46;
    outlined destroy of SKTransformer((uint64_t)v112);
    if (v47)
    {
      OUTLINED_FUNCTION_19_36();
      id v48 = *(void (**)(uint64_t))(v44 + 8);
      uint64_t v109 = v47;
      id v49 = v47;
      uint64_t v50 = OUTLINED_FUNCTION_72_8();
      v48(v50);
      OUTLINED_FUNCTION_49_0(v112);
      uint64_t v51 = v101;
      uint64_t v52 = OUTLINED_FUNCTION_72_8();
      dispatch thunk of DeviceState.siriLocale.getter(v52, v53);
      specialized static ContactResolution.updateSiriKitIntentNLv3(siriKitIntent:nlIntent:app:locale:sharedGlobals:multicardinalIndex:)( (uint64_t)v49,  v110,  v16,  v51,  v39,  0LL,  1LL,  v45,  *(void *)(v44 + 88),  v96,  v97,  v98,  v99,  v100,  v101,  v102,  v103,  (uint64_t)v104,  v105,  (uint64_t)v106,  (uint64_t)v107);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v51, v103);
      __swift_destroy_boxed_opaque_existential_1(v112);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      os_log_type_t v54 = (os_log_s *)__swift_project_value_buffer((uint64_t)v106, (uint64_t)static Logger.siriPhone);
      id v55 = v49;
      Logger.logObject.getter(v55);
      os_log_type_t v56 = OUTLINED_FUNCTION_6_0();
      uint64_t v57 = v42;
      if (os_log_type_enabled(v54, v56))
      {
        uint64_t v58 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v59 = OUTLINED_FUNCTION_7_0(32LL);
        v112[0] = v59;
        *(_DWORD *)uint64_t v58 = 136315138;
        v113[0] = v55;
        id v60 = v55;
        uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v45);
        uint64_t v62 = String.init<A>(describing:)(v113, v45, WitnessTable);
        uint64_t v64 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, v112);
        uint64_t v65 = OUTLINED_FUNCTION_10_4(v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v65, v66, v58 + 4);

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0( &dword_0,  v54,  v56,  "#IntentFromParseFlowStrategyHelper SKIntent after NCR replacement: %s",  v58);
        OUTLINED_FUNCTION_17_0(v59);
        OUTLINED_FUNCTION_0_2(v59);
        OUTLINED_FUNCTION_0_2((uint64_t)v58);

        OUTLINED_FUNCTION_16_3();
      }

      else
      {

        OUTLINED_FUNCTION_16_3();
      }

      (*(void (**)(os_log_s *, uint64_t))(v108 + 8))(v107, v111);
    }

    else
    {

      OUTLINED_FUNCTION_16_3();
      OUTLINED_FUNCTION_34_24((uint64_t)v107);
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      __swift_project_value_buffer((uint64_t)v106, (uint64_t)static Logger.siriPhone);
      uint64_t v75 = v100;
      uint64_t v76 = ((uint64_t (*)(uint64_t, void *, uint64_t))v36)(v100, v109, v111);
      unint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
      os_log_type_t v78 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v80 = OUTLINED_FUNCTION_7_0(32LL);
        v112[0] = v80;
        *(_DWORD *)uint64_t v79 = 136315138;
        Swift::String v81 = Parse.typeForLogging()();
        uint64_t v82 = OUTLINED_FUNCTION_68_1(v81._countAndFlagsBits, (unint64_t)v81._object);
        uint64_t v83 = OUTLINED_FUNCTION_10_4(v82);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v83, v84, v79 + 4);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_34_24(v75);
        OUTLINED_FUNCTION_57_0( &dword_0,  v77,  v78,  "#IntentFromParseFlowStrategyHelper makeIntentFromParseSiriX get unexpected parse: %s",  v79);
        OUTLINED_FUNCTION_17_0(v80);
        OUTLINED_FUNCTION_0_2(v80);
        OUTLINED_FUNCTION_0_2((uint64_t)v79);
      }

      else
      {
        OUTLINED_FUNCTION_34_24(v75);
      }
    }

uint64_t IntentFromParseFlowStrategyHelper.inferApp(from:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_84_5();
  uint64_t v2 = dispatch thunk of AppResolutionStateProviding.getRequestedApp()(v0, v1);
  outlined init with copy of SignalProviding((uint64_t)v7, (uint64_t)v6);
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    uint64_t v3 = OUTLINED_FUNCTION_84_5();
    uint64_t v2 = dispatch thunk of AppResolutionStateProviding.getSuggestedApp()(v3, v4);
  }

  __swift_destroy_boxed_opaque_existential_1(v6);
  __swift_destroy_boxed_opaque_existential_1(v7);
  return v2;
}

uint64_t IntentFromParseFlowStrategyHelper.deinit()
{
  return v0;
}

uint64_t IntentFromParseFlowStrategyHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata completion function for IntentFromParseFlowStrategyHelper(uint64_t a1)
{
  v2[0] = "\b";
  v2[1] = &unk_32D0B0;
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 96);
}

uint64_t type metadata accessor for IntentFromParseFlowStrategyHelper( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for IntentFromParseFlowStrategyHelper);
}

BOOL OUTLINED_FUNCTION_6_63(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_7_69@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void OUTLINED_FUNCTION_8_56(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_17_43()
{
  return Logger.logObject.getter();
}

void *OUTLINED_FUNCTION_19_36()
{
  return __swift_project_boxed_opaque_existential_1(v1, *(void *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_30_28()
{
  return swift_retain_n(v0, 2LL);
}

uint64_t OUTLINED_FUNCTION_33_38@<X0>(uint64_t (*a1)(uint64_t, void)@<X8>)
{
  return a1(v1, *(void *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_34_24(uint64_t a1)
{
  return v1(a1, *(void *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_39_16()
{
  return type metadata accessor for Parse(0LL);
}

uint64_t static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)(void *a1)
{
  uint64_t v3 = type metadata accessor for TemplatingResult(0LL);
  v1[2] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[3] = v4;
  uint64_t v5 = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v1[4] = v5;
  uint64_t v6 = *(int **)(class metadata base offset for UnsupportedFlowCATs + *a1 + 104);
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  v1[5] = v7;
  *uint64_t v7 = v1;
  v7[1] = static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:);
  return v9(v5);
}

uint64_t static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40LL);
  *(void *)(*(void *)v1 + 48LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:);
  }
  else {
    uint64_t v3 = static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:);
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *static MyriadEmergencyCallOutputs.myriadEmergencyCallCommand(catFamily:)()
{
  uint64_t v1 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAUISayIt,  &OBJC_CLASS___SAUISayIt_ptr);
  uint64_t result = (void *)TemplatingResult.speak.getter(v1);
  if (result[2])
  {
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 16);
    uint64_t v6 = result[4];
    uint64_t v7 = result[5];
    swift_bridgeObjectRetain();
    uint64_t v8 = OUTLINED_FUNCTION_62();
    uint64_t v9 = TemplatingResult.templateIdentifier.getter(v8);
    SAUISayIt.init(message:dialogIdentifier:canUseServerTTS:listenAfterSpeaking:)(v6, v7, v9, v10, 1, 0);
    uint64_t v12 = v11;
    id v13 = [objc_allocWithZone(SAResultCallback) init];
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v15 = OUTLINED_FUNCTION_5_32(v14);
    *(_OWORD *)(v15 + 16) = xmmword_31FE60;
    *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
    OUTLINED_FUNCTION_5_64(v15, v16, v17, v18);
    id v19 = v12;
    outlined bridged method (mbnn) of @objc SAResultCallback.commands.setter();
    [v13 setCode:SAResultCallbackAnyErrorCodeValue];
    id v20 = [objc_allocWithZone(SAPhoneClientCoordinationPhoneCall) init];
    [v20 setEmergencyCall:1];
    uint64_t v21 = OUTLINED_FUNCTION_5_32(v14);
    *(_OWORD *)(v21 + 16) = xmmword_31FE60;
    *(void *)(v21 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
    OUTLINED_FUNCTION_5_64(v21, v22, v23, v24);
    outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.callbacks.setter();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc(v3);
    return (void *)(*(uint64_t (**)(id))(v0 + 8))(v20);
  }

  else
  {
    __break(1u);
  }

  return result;
}

void outlined bridged method (mbnn) of @objc SAResultCallback.commands.setter()
{
  Class isa = OUTLINED_FUNCTION_126_4().super.isa;
  int v0 = OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_4_66(v0, "setCommands:", v1, v2, v3, v4, v5, v6, v7, (uint64_t)isa);
  OUTLINED_FUNCTION_57_13(v9);
}

void outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.callbacks.setter()
{
  Class isa = OUTLINED_FUNCTION_126_4().super.isa;
  int v0 = OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_4_66(v0, "setCallbacks:", v1, v2, v3, v4, v5, v6, v7, (uint64_t)isa);
  OUTLINED_FUNCTION_57_13(v9);
}

ValueMetadata *type metadata accessor for MyriadEmergencyCallOutputs()
{
  return &type metadata for MyriadEmergencyCallOutputs;
}

id OUTLINED_FUNCTION_4_66( int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(v10, a2, a10);
}

uint64_t _s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TR( uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = swift_retain(a1);
  return a2(v3);
}

uint64_t PhoneContactDisambiguationItemFactory.init(contacts:templatingService:isDirectInvocation:appId:assistantProperties:deviceState:)()
{
  int v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  *uint64_t v10 = v12;
  v10[1] = v12;
  outlined init with take of AppSelectionSignalComponent(v13, (uint64_t)(v10 + 15));
  outlined init with take of AppSelectionSignalComponent(v3, (uint64_t)(v11 + 5));
  outlined init with take of AppSelectionSignalComponent(v1, (uint64_t)(v11 + 10));
  *((_BYTE *)v11 + 16) = v9;
  v11[3] = v7;
  v11[4] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t PhoneCallControlNLIntent.verb.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PhoneContactDisambiguationItemFactory.appId.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain(*(void *)(v0 + 32));
  return v1;
}

uint64_t PhoneContactDisambiguationItemFactory.deviceState.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 80, a1);
}

uint64_t PhoneContactDisambiguationItemFactory.templatingService.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 120, a1);
}

uint64_t PhoneContactDisambiguationItemFactory.disambiguationListProperties.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  a1[3] = &type metadata for PhoneContactDisambiguationProperties;
  a1[4] = &protocol witness table for PhoneContactDisambiguationProperties;
  *a1 = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV05buildgH04item_ySo8INPersonC_y07SiriKitC00mngH0CctF04_s11mn9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocObject(&unk_406B70, 32LL, 7LL);
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v1;
  swift_retain();
  id v9 = [v7 personHandle];
  if (v9
    && (uint64_t v10 = v9, v11 = (char *)[v9 emergencyType], v10, v11 == (_BYTE *)&dword_0 + 1))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v12 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
    os_log_type_t v13 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_63(v13))
    {
      uint64_t v14 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v14);
      OUTLINED_FUNCTION_1_64(&dword_0, v15, v16, "Building local emergency item");
      OUTLINED_FUNCTION_2_62();
    }

    PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( v7,  (uint64_t)_s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA,  v8);
  }

  else
  {
    INPerson.isUnnamedPhoneNumber.getter((uint64_t)v9);
    if ((v17 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v18 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v18, (uint64_t)static Logger.siriPhone);
      os_log_type_t v19 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_63(v19))
      {
        id v20 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_38_4(v20);
        OUTLINED_FUNCTION_1_64(&dword_0, v21, v22, "Building unnamed phone number item");
        OUTLINED_FUNCTION_2_62();
      }

      PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( v7,  (char *)_s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA,  v8);
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v23 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
      os_log_type_t v24 = OUTLINED_FUNCTION_6_0();
      if (os_log_type_enabled((os_log_t)v7, v24))
      {
        uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_0, (os_log_t)v7, v24, "Building regular item", v25, 2u);
        swift_slowDealloc(v25, -1LL, -1LL);
      }

      swift_retain();
      _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctF04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n( v7,  v5,  v3,  v1);
    }
  }

  swift_release(v1);
  return swift_release(v8);
}

uint64_t PhoneContactDisambiguationItemFactory.buildDisambiguationItem(item:_:)()
{
  uint64_t v1 = v0;
  id v2 = [v0 personHandle];
  if (v2 && (uint64_t v3 = v2, v4 = (char *)[v2 emergencyType], v3, v4 == (_BYTE *)&dword_0 + 1))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_63(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_38_4(v7);
      OUTLINED_FUNCTION_1_64(&dword_0, v8, v9, "Building local emergency item");
      OUTLINED_FUNCTION_2_62();
    }

    uint64_t v10 = (void *)OUTLINED_FUNCTION_16_41();
    return PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)(v10, v11, v12);
  }

  else
  {
    INPerson.isUnnamedPhoneNumber.getter((uint64_t)v2);
    if ((v14 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v15 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v15, (uint64_t)static Logger.siriPhone);
      os_log_type_t v16 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_63(v16))
      {
        char v17 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_38_4(v17);
        OUTLINED_FUNCTION_1_64(&dword_0, v18, v19, "Building unnamed phone number item");
        OUTLINED_FUNCTION_2_62();
      }

      id v20 = (void *)OUTLINED_FUNCTION_16_41();
      return PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)(v20, v21, v22);
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v23 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v23, (uint64_t)static Logger.siriPhone);
      os_log_type_t v24 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_63(v24))
      {
        uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_38_4(v25);
        OUTLINED_FUNCTION_1_64(&dword_0, v26, v27, "Building regular item");
        OUTLINED_FUNCTION_2_62();
      }

      unint64_t v28 = (void *)OUTLINED_FUNCTION_16_41();
      return PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)(v28, v29, v30);
    }
  }

uint64_t PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v71 = a2;
  uint64_t v72 = a3;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v69 = *(void *)(v6 - 8);
  unint64_t v70 = v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void *)(*(void *)(type metadata accessor for Image(0LL) - 8) + 64LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v12 = v11;
  os_log_type_t v13 = *(void (**)(void))(v11 + 104);
  uint64_t v73 = v14;
  id v74 = (char *)v67 - v15;
  v13();
  id v16 = [a1 displayName];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  unint64_t v19 = v18;

  swift_bridgeObjectRelease();
  uint64_t v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000LL) == 0) {
    uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (v20
    && (INPerson.hasHandleLabel.getter(), (v21 & 1) != 0)
    && (id v22 = [a1 personHandle]) != 0
    && (uint64_t v23 = v22, v24 = [v22 label], v23, v24))
  {
    id v68 = v24;
    id v25 = [a1 personHandle];
    if (v25 && (outlined bridged method (ob) of @objc INPersonHandle.value.getter(v25), v27))
    {
      uint64_t v69 = v26;
      unint64_t v70 = v27;
    }

    else
    {
      id v44 = [a1 displayName];
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      unint64_t v70 = v45;
      swift_bridgeObjectRelease();
    }

    outlined init with copy of PhoneContactDisambiguationItemFactory(v4, (uint64_t)v76);
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v47 = v73;
    v67[1] = v4;
    v46(v10, v74, v73);
    uint64_t v48 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v49 = (v48 + 200) & ~v48;
    unint64_t v50 = (v9 + v49 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v51 = (char *)swift_allocObject(&unk_406940, v50 + 8, v48 | 7);
    memcpy(v51 + 16, v76, 0xA0uLL);
    uint64_t v52 = v68;
    uint64_t v53 = v71;
    *((void *)v51 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v68;
    *((void *)v51 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 3) = v53;
    *((void *)v51 + 24) = v72;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v51[v49], v10, v47);
    *(void *)&v51[v50] = a1;
    outlined init with copy of PhoneContactDisambiguationItemFactory(v4, (uint64_t)v75);
    uint64_t v54 = swift_allocObject(&unk_406968, 200LL, 7LL);
    *(void *)(v54 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:);
    *(void *)(v54 + 24) = v51;
    *(_BYTE *)(v54 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
    memcpy((void *)(v54 + 40), v75, 0xA0uLL);
    id v55 = v52;
    uint64_t v56 = v72;
    swift_retain_n(v72, 2LL);
    id v57 = a1;
    id v58 = v55;
    id v59 = v57;
    swift_retain();
    PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( v69,  v70,  (void (*)(void, void, void, void))partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:),  v54);
    swift_bridgeObjectRelease();

    swift_release(v56);
    swift_release(v51);
    swift_release(v54);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v74, v47);
  }

  else
  {
    unint64_t v28 = v4;
    uint64_t v29 = a1;
    INPerson.hasHandleValue.getter();
    if ((v30 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      unint64_t v60 = v70;
      uint64_t v61 = __swift_project_value_buffer(v70, (uint64_t)static Logger.siriPhone);
      uint64_t v62 = (*(uint64_t (**)(char *, uint64_t, unint64_t))(v69 + 16))(v8, v61, v60);
      unint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
      os_log_type_t v64 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v66 = swift_slowAlloc(32LL, -1LL);
        v76[0] = v66;
        *(_DWORD *)uint64_t v65 = 136315138;
        v75[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000095LL,  0x800000000034C9D0LL,  v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v75, &v75[1], v65 + 4);
        _os_log_impl(&dword_0, v63, v64, "%s", v65, 0xCu);
        swift_arrayDestroy(v66, 1LL);
        swift_slowDealloc(v66, -1LL, -1LL);
        swift_slowDealloc(v65, -1LL, -1LL);
      }

      static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000095LL, 0x800000000034C9D0LL);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000095LL,  0x800000000034C9D0LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
      __break(1u);
    }

    else
    {
      outlined init with copy of PhoneContactDisambiguationItemFactory(v28, (uint64_t)v76);
      uint64_t v31 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      uint64_t v32 = v73;
      (*(void (**)(char *, char *))(v12 + 16))(v31, v74);
      uint64_t v33 = *(unsigned __int8 *)(v12 + 80);
      uint64_t v34 = (v33 + 192) & ~v33;
      unint64_t v35 = (v9 + v34 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v36 = (char *)swift_allocObject(&unk_4068F0, v35 + 8, v33 | 7);
      uint64_t v37 = v72;
      *((void *)v36 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v71;
      *((void *)v36 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v37;
      memcpy(v36 + 32, v76, 0xA0uLL);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v36[v34], v31, v32);
      *(void *)&v36[v35] = v29;
      outlined init with copy of SignalProviding((uint64_t)(v28 + 15), (uint64_t)v75);
      uint64_t v38 = v75[3];
      uint64_t v39 = v75[4];
      __swift_project_boxed_opaque_existential_1(v75, v75[3]);
      uint64_t v40 = swift_allocObject(&unk_406918, 32LL, 7LL);
      *(void *)(v40 + 16) = partial apply for closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:);
      *(void *)(v40 + 24) = v36;
      uint64_t v41 = *(void (**)(void *(*)(uint64_t), uint64_t, uint64_t, uint64_t))(v39 + 56);
      swift_retain();
      id v42 = v29;
      swift_retain();
      v41( partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:),  v40,  v38,  v39);
      swift_release(v40);
      __swift_destroy_boxed_opaque_existential_1(v75);
      swift_release(v36);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v74, v73);
    }
  }

  return result;
}

uint64_t PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( void *a1, char *a2, uint64_t a3)
{
  unint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v5 = type metadata accessor for Image(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v26 - v9;
  id v11 = [a1 personHandle];
  if (v11 && (outlined bridged method (ob) of @objc INPersonHandle.value.getter(v11), v13))
  {
    unint64_t v14 = v13;
    uint64_t v26 = v12;
  }

  else
  {
    id v15 = [a1 displayName];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    unint64_t v14 = v16;
    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v10, enum case for Image.none(_:), v5);
  outlined init with copy of PhoneContactDisambiguationItemFactory(v3, (uint64_t)v30);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
  uint64_t v17 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = (v17 + 200) & ~v17;
  unint64_t v19 = (char *)swift_allocObject(&unk_406A08, v18 + v7, v17 | 7);
  uint64_t v20 = v27;
  *((void *)v19 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *((void *)v19 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v20;
  unint64_t v27 = v10;
  uint64_t v21 = v28;
  *((void *)v19 + 4) = v28;
  memcpy(v19 + 40, v30, 0xA0uLL);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v19[v18], v8, v5);
  outlined init with copy of PhoneContactDisambiguationItemFactory(v3, (uint64_t)v29);
  uint64_t v22 = swift_allocObject(&unk_406A30, 200LL, 7LL);
  *(void *)(v22 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:);
  *(void *)(v22 + 24) = v19;
  *(_BYTE *)(v22 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
  memcpy((void *)(v22 + 40), v29, 0xA0uLL);
  id v23 = a1;
  swift_retain_n(v21, 2LL);
  id v24 = v23;
  swift_retain();
  PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( v26,  v14,  (void (*)(void, void, void, void))closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)partial apply,  v22);
  swift_bridgeObjectRelease();
  swift_release(v21);

  swift_release(v19);
  swift_release(v22);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v27, v5);
}

uint64_t _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctF04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1ncn_n( void *a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4)
{
  unint64_t v77 = a1;
  uint64_t v7 = type metadata accessor for Image(0LL);
  unint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = swift_allocObject(&unk_406B98, 32LL, 7LL);
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  uint64_t v76 = v11;
  uint64_t v12 = swift_allocObject(&unk_406A58, 24LL, 7LL);
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  uint64_t v74 = swift_allocBox(v7);
  uint64_t v14 = v13;
  unint64_t v73 = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v13, enum case for Image.none(_:), v7);
  unint64_t v15 = a2[1];
  uint64_t v75 = a4;
  swift_retain_n(a4, 2LL);
  PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v15);
  uint64_t v72 = a3;
  if ((v16 & 1) == 0)
  {
    uint64_t v29 = PhoneContactDisambiguationItemFactory.buildFullNameItemComponent(_:)(v77);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    uint64_t v30 = *(void *)((char *)&dword_10 + (*(void *)(v12 + 16) & 0xFFFFFFFFFFFFF8LL));
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
    uint64_t v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v29);
    specialized Array._endMutation()(v31, v32, v33, v34);
    __swift_project_boxed_opaque_existential_1(a2 + 10, a2[13]);
    DeviceState.isStandaloneIOS.getter();
    LOBYTE(v30) = v35;
    uint64_t v36 = a2[13];
    uint64_t v37 = a2[14];
    __swift_project_boxed_opaque_existential_1(a2 + 10, v36);
    char v38 = DeviceState.isAuthenticatedForPhone.getter(v36, v37);
    uint64_t v39 = v77;
    INPerson.buildDisplayImage(supportsCompactView:isDeviceLocked:)(v30 & 1, (v38 & 1) == 0, v10);
    unint64_t v40 = v73;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v73 + 40))(v14, v10, v7);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 16))(v10, v14, v7);
    uint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v42 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v41, (uint64_t)v10, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v40 + 8))(v10, v7);
    uint64_t v43 = swift_retain();
    uint64_t v44 = v75;
LABEL_8:
    v72(v43);
    swift_release_n(v44, 2LL);
    swift_release(v76);
    swift_release(v12);
    swift_release(v74);
    return swift_release(v42);
  }

  uint64_t v17 = v7;
  uint64_t v18 = v14;
  unint64_t v19 = v73;
  uint64_t v20 = v77;
  id v21 = [v77 personHandle];
  if (!v21 || (outlined bridged method (ob) of @objc INPersonHandle.value.getter(v21), uint64_t v71 = v23, !v22))
  {
    uint64_t v45 = (uint64_t)v10;
    uint64_t v46 = v10;
    uint64_t v47 = v17;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(v46, v18, v17);
    uint64_t v48 = swift_bridgeObjectRetain();
    uint64_t v49 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v48, v45, v20);
    uint64_t v44 = v75;
    uint64_t v42 = v49;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v45, v47);
    uint64_t v43 = swift_retain();
    goto LABEL_8;
  }

  unint64_t v73 = v22;
  id v24 = v20;
  id v25 = [v20 personHandle];
  uint64_t v26 = v12;
  if (v25)
  {
    unint64_t v27 = v25;
    uint64_t v28 = (char *)objc_msgSend(v25, "type", v71);
  }

  else
  {
    uint64_t v28 = 0LL;
  }

  uint64_t v51 = v74;
  outlined init with copy of PhoneContactDisambiguationItemFactory(a2, (uint64_t)__src);
  outlined init with copy of PhoneContactDisambiguationItemFactory(__src, (uint64_t)v79);
  uint64_t v52 = (void *)swift_allocObject(&unk_406BC0, 224LL, 7LL);
  v52[2] = v26;
  v52[3] = v24;
  uint64_t v53 = v24;
  uint64_t v54 = v76;
  v52[4] = _s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA_57;
  v52[5] = v54;
  memcpy(v52 + 6, __src, 0xA0uLL);
  v52[26] = v51;
  v52[27] = v28;
  if (v28 == (_BYTE *)&dword_0 + 2)
  {
    outlined init with copy of PhoneContactDisambiguationItemFactory(a2, (uint64_t)v78);
    uint64_t v55 = v51;
    uint64_t v56 = swift_allocObject(&unk_406BE8, 200LL, 7LL);
    *(void *)(v56 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
    *(void *)(v56 + 24) = v52;
    *(_BYTE *)(v56 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
    memcpy((void *)(v56 + 40), v78, 0xA0uLL);
    swift_retain_n(v26, 2LL);
    id v57 = v53;
    swift_retain_n(v54, 2LL);
    swift_retain_n(v55, 2LL);
    id v58 = v57;
    swift_retain();
    PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( v71,  v73,  (void (*)(void, void, void, void))closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)partial apply,  v56);
    swift_release(v54);

    swift_release(v26);
    swift_release(v52);
    swift_bridgeObjectRelease();
    uint64_t v59 = v56;
  }

  else
  {
    type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
    unint64_t v60 = a2;
    swift_retain_n(v26, 2LL);
    id v61 = v53;
    swift_retain_n(v76, 2LL);
    swift_retain_n(v51, 2LL);
    uint64_t v62 = v51;
    id v63 = v61;
    uint64_t v64 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v71, v73);
    uint64_t v65 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)(0LL);
    swift_release(v64);
    __swift_project_boxed_opaque_existential_1(v60 + 10, v60[13]);
    uint64_t v66 = v75;
    uint64_t v54 = v76;
    DeviceState.isStandaloneIOS.getter();
    uint64_t v68 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintBlue(_:)(v67 & 1);
    uint64_t v69 = swift_release(v65);
    uint64_t v70 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v69);
    swift_release(v68);
    swift_retain();
    _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctFyAH0qrgH9ComponentCcfU_04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1nnncnnn_n( v70,  v26,  v63,  v79,  v62,  (uint64_t)v28,  v72,  v66);
    swift_release(v54);

    uint64_t v55 = v62;
    swift_release(v26);
    swift_release(v52);
    swift_bridgeObjectRelease();
    uint64_t v59 = v70;
  }

  swift_release(v59);
  outlined destroy of PhoneContactDisambiguationItemFactory(v79);
  swift_release_n(v75, 2LL);
  swift_release(v54);
  swift_release(v26);
  return swift_release_n(v55, 2LL);
}

uint64_t PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( id a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v66 = a3;
  uint64_t v6 = type metadata accessor for Image(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = swift_allocObject(&unk_406A58, 24LL, 7LL);
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v67 = swift_allocBox(v6);
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for Image.none(_:), v6);
  PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v3[1]);
  uint64_t v65 = a2;
  if ((v13 & 1) == 0)
  {
    unint64_t v22 = a1;
    uint64_t v62 = (uint64_t)a1;
    uint64_t v23 = v3;
    uint64_t v24 = PhoneContactDisambiguationItemFactory.buildFullNameItemComponent(_:)(v22);
    uint64_t v63 = v10;
    uint64_t v64 = v12;
    uint64_t v25 = v24;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    uint64_t v26 = *(void *)((char *)&dword_10 + (*(void *)(v10 + 16) & 0xFFFFFFFFFFFFF8LL));
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
    uint64_t v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v25);
    specialized Array._endMutation()(v27, v28, v29, v30);
    __swift_project_boxed_opaque_existential_1(v23 + 10, v23[13]);
    DeviceState.isStandaloneIOS.getter();
    char v32 = v31;
    uint64_t v33 = v3[13];
    uint64_t v34 = v23[14];
    __swift_project_boxed_opaque_existential_1(v23 + 10, v23[13]);
    char v35 = DeviceState.isAuthenticatedForPhone.getter(v33, v34);
    uint64_t v36 = v62;
    INPerson.buildDisplayImage(supportsCompactView:isDeviceLocked:)(v32 & 1, (v35 & 1) == 0, v9);
    uint64_t v37 = v64;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 40))(v64, v9, v6);
    uint64_t v10 = v63;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, v37, v6);
    uint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v39 = (uint64_t)v9;
    unint64_t v40 = (void *)v36;
LABEL_8:
    uint64_t v41 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v38, v39, v40);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
    v65(v41);
    swift_release(v10);
    swift_release(v67);
    return swift_release(v41);
  }

  uint64_t v14 = a1;
  id v15 = [a1 personHandle];
  if (!v15 || (outlined bridged method (ob) of @objc INPersonHandle.value.getter(v15), !v17))
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
    uint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v39 = (uint64_t)v9;
    unint64_t v40 = a1;
    goto LABEL_8;
  }

  unint64_t v18 = v17;
  uint64_t v64 = v16;
  id v19 = [v14 personHandle];
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = (char *)[v19 type];
  }

  else
  {
    id v21 = 0LL;
  }

  uint64_t v43 = v3;
  outlined init with copy of PhoneContactDisambiguationItemFactory(v3, (uint64_t)__src);
  outlined init with copy of PhoneContactDisambiguationItemFactory(__src, (uint64_t)v69);
  uint64_t v44 = (void *)swift_allocObject(&unk_406AD0, 224LL, 7LL);
  v44[2] = v10;
  void v44[3] = v14;
  uint64_t v45 = v66;
  v44[4] = v65;
  v44[5] = v45;
  memcpy(v44 + 6, __src, 0xA0uLL);
  v44[26] = v67;
  v44[27] = v21;
  if (v21 == (_BYTE *)&dword_0 + 2)
  {
    outlined init with copy of PhoneContactDisambiguationItemFactory(v3, (uint64_t)v68);
    uint64_t v46 = swift_allocObject(&unk_406AF8, 200LL, 7LL);
    *(void *)(v46 + 16) = partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
    *(void *)(v46 + 24) = v44;
    *(_BYTE *)(v46 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
    memcpy((void *)(v46 + 40), v68, 0xA0uLL);
    swift_retain_n(v10, 2LL);
    id v47 = v14;
    uint64_t v48 = v66;
    swift_retain_n(v66, 2LL);
    swift_retain_n(v67, 2LL);
    id v49 = v47;
    swift_retain();
    PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( v64,  v18,  (void (*)(void, void, void, void))closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)partial apply,  v46);
    swift_release(v48);

    swift_release(v10);
    swift_release(v44);
    swift_bridgeObjectRelease();
    uint64_t v50 = v46;
  }

  else
  {
    type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
    uint64_t v62 = (uint64_t)v21;
    swift_retain_n(v10, 2LL);
    id v51 = v14;
    uint64_t v52 = v66;
    swift_retain_n(v66, 2LL);
    uint64_t v53 = v67;
    swift_retain_n(v67, 2LL);
    id v54 = v51;
    uint64_t v55 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v64, v18);
    uint64_t v56 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)(0LL);
    swift_release(v55);
    uint64_t v64 = v18;
    __swift_project_boxed_opaque_existential_1(v43 + 10, v43[13]);
    DeviceState.isStandaloneIOS.getter();
    uint64_t v58 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintBlue(_:)(v57 & 1);
    uint64_t v59 = swift_release(v56);
    uint64_t v60 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v59);
    swift_release(v58);
    closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( v60,  v10,  v54,  v65,  v52,  v69,  v53,  v62);
    swift_release(v52);

    swift_release(v10);
    swift_release(v44);
    swift_bridgeObjectRelease();
    uint64_t v50 = v60;
  }

  swift_release(v50);
  outlined destroy of PhoneContactDisambiguationItemFactory(v69);
  swift_release(v10);
  return swift_release_n(v67, 2LL);
}

uint64_t PhoneContactDisambiguationItemFactory.buildFullNameItemComponent(_:)(void *a1)
{
  uint64_t v3 = (char *)&v32[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v32[-1] - v4;
  type metadata accessor for Locale(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DialogPerson(0LL);
  static Device.current.getter(v32);
  uint64_t v8 = v33;
  uint64_t v9 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  dispatch thunk of DeviceState.siriLocale.getter(v8, v9);
  __swift_destroy_boxed_opaque_existential_1(v32);
  id v10 = a1;
  uint64_t v11 = DialogPerson.__allocating_init(person:locale:useConversationalName:)(a1, v7, 0LL);
  if (!v11)
  {
LABEL_4:
    id v15 = [v10 displayName];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v18 = v17;

    if (!v11) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }

  uint64_t v12 = swift_retain();
  dispatch thunk of DialogPerson.fullName.getter(v12);
  swift_release(v11);
  uint64_t v13 = type metadata accessor for SpeakableString(0LL);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1LL, v13);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of SpeakableString?((uint64_t)v5, &demangling cache variable for type metadata for SpeakableString?);
    goto LABEL_4;
  }

  uint64_t v16 = SpeakableString.print.getter(EnumTagSinglePayload);
  uint64_t v18 = v19;
  (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8LL))(v5, v13);
LABEL_7:
  uint64_t v20 = swift_retain();
  dispatch thunk of DialogPerson.fullName.getter(v20);
  swift_release(v11);
  uint64_t v21 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1LL, v21) != 1)
  {
    uint64_t v22 = SpeakableString.speak.getter();
    uint64_t v23 = v24;
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8LL))(v3, v21);
    goto LABEL_11;
  }

  outlined destroy of SpeakableString?((uint64_t)v3, &demangling cache variable for type metadata for SpeakableString?);
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v22 = v16;
  uint64_t v23 = v18;
LABEL_11:
  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v25 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v26 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeak(_:)(v22, v23);
  swift_release(v25);
  uint64_t v27 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeakOnLockScreen(_:)(v22, v23);
  swift_release(v26);
  uint64_t v28 = swift_bridgeObjectRelease();
  uint64_t v29 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v28);
  swift_release(v11);
  swift_release(v27);
  return v29;
}

uint64_t PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)( uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for Image(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(_BYTE *)(v3 + 16) == 1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v11 = type metadata accessor for Logger(0LL);
    uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
    if (os_log_type_enabled(v13, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl( &dword_0,  v13,  v15,  "#PhoneContactDisambiguationItemFactory Building disambiguation item with direct invocation payload",  v16,  2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    type metadata accessor for SKIDirectInvocationPayload();
    id v17 = static SKIDirectInvocationPayload.contactDisambiguation(contact:)(a3);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    uint64_t v18 = type metadata accessor for SiriKitDisambiguationItem(0LL);
    swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
    uint64_t v19 = swift_bridgeObjectRetain();
    return SiriKitDisambiguationItem.init(components:image:directInvocation:allowLineWrapForDisplayText:)( v19,  v10,  v17,  0LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    swift_bridgeObjectRetain();
    Swift::String started = INPerson.toStartRequestUtterance()();
    uint64_t v22 = type metadata accessor for SiriKitDisambiguationItem(0LL);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    return SiriKitDisambiguationItem.init(components:image:utterance:allowLineWrapForDisplayText:)( a1,  v10,  started._countAndFlagsBits,  started._object,  0LL);
  }

uint64_t _s27PhoneCallFlowDelegatePlugin0A32ContactDisambiguationItemFactoryV012buildRegulargH033_5F787DBA463515721263E7111A704531LLyySo8INPersonC_y07SiriKitC00qrgH0CctFyAH0qrgH9ComponentCcfU_04_s11qr9Flow0aB18gH16CIegxT_ACIegg_TRAJIegxT_Tf1nnncnnn_n( uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v97 = a6;
  uint64_t v105 = a4;
  uint64_t v14 = (void *)type metadata accessor for Locale(0LL);
  uint64_t v95 = *(v14 - 1);
  id v96 = v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = type metadata accessor for Image(0LL);
  uint64_t v17 = *(void *)(v101 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = swift_allocObject(&unk_406C10, 32LL, 7LL);
  uint64_t v102 = a7;
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = a8;
  uint64_t v104 = v20;
  uint64_t v21 = a2 + 16;
  uint64_t v98 = a5;
  uint64_t v100 = swift_projectBox(a5);
  swift_beginAccess(a2 + 16, __src, 33LL, 0LL);
  uint64_t v103 = a8;
  swift_retain_n(a8, 2LL);
  uint64_t v22 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  uint64_t v99 = a2;
  uint64_t v23 = *(void *)((char *)&dword_10 + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFF8LL));
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
  uint64_t v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, a1);
  specialized Array._endMutation()(v24, v25, v26, v27);
  swift_endAccess(__src);
  INPerson.hasHandleLabel.getter();
  if ((v28 & 1) != 0
    && (id v29 = [a3 personHandle]) != 0
    && (v30 = v29, id v31 = [v29 label], v30, v31))
  {
    uint64_t v90 = v17;
    uint64_t v92 = v16;
    char v32 = v105;
    outlined init with copy of PhoneContactDisambiguationItemFactory(v105, (uint64_t)__src);
    outlined init with copy of PhoneContactDisambiguationItemFactory(__src, (uint64_t)v111);
    uint64_t v33 = (void *)swift_allocObject(&unk_406C38, 216LL, 7LL);
    uint64_t v34 = v99;
    void v33[2] = v99;
    v33[3] = _s11SiriKitFlow0aB18DisambiguationItemCIegxT_ACIegg_TRTA_57;
    uint64_t v35 = v104;
    v33[4] = v104;
    memcpy(v33 + 5, __src, 0xA0uLL);
    uint64_t v36 = v98;
    v33[25] = v98;
    v33[26] = a3;
    uint64_t v94 = v33;
    uint64_t v37 = v32 + 10;
    uint64_t v38 = v31;
    uint64_t v39 = v32[13];
    uint64_t v40 = v32[14];
    unint64_t v91 = __swift_project_boxed_opaque_existential_1(v37, v39);
    swift_retain_n(v34, 2LL);
    swift_retain_n(v35, 2LL);
    swift_retain_n(v36, 2LL);
    id v93 = a3;
    uint64_t v41 = v92;
    uint64_t v42 = dispatch thunk of DeviceState.siriLocale.getter(v39, v40);
    v106[0] = Locale.identifier.getter(v42);
    v106[1] = v43;
    v109[0] = 45LL;
    v109[1] = 0xE100000000000000LL;
    v110[0] = 95LL;
    v110[1] = 0xE100000000000000LL;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v44 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v109,  v110,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, id))(v95 + 8))(v41, v96);
    id v96 = v38;
    uint64_t v47 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v38, v44, v46);
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();
    type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
    uint64_t v50 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v47, v49);
    uint64_t v51 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v50);
    swift_release(v50);
    char v52 = PhoneContactDisambiguationProperties.hasOneHandleType.getter(v105[1]);
    uint64_t v53 = v97;
    uint64_t v95 = v51;
    if ((v52 & 1) != 0 || (unint64_t)(v97 - 3) < 0xFFFFFFFFFFFFFFFELL)
    {
      swift_beginAccess(v21, v106, 33LL, 0LL);
      uint64_t v75 = swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
      uint64_t v76 = v99;
      uint64_t v77 = *(void *)((char *)&dword_10 + (*(void *)(v99 + 16) & 0xFFFFFFFFFFFFF8LL));
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v77);
      uint64_t v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v51);
      specialized Array._endMutation()(v78, v79, v80, v81);
      swift_endAccess(v106);
      swift_beginAccess(v21, v106, 0LL, 0LL);
      uint64_t v82 = *(void *)(v76 + 16);
      uint64_t v83 = v100;
      swift_beginAccess(v100, v109, 0LL, 0LL);
      uint64_t v84 = v90;
      uint64_t v85 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v19, v83, v101);
      swift_bridgeObjectRetain();
      uint64_t v67 = v93;
      uint64_t v86 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v82, (uint64_t)v19, v93);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v19, v85);
      uint64_t v87 = swift_retain();
      uint64_t v66 = v103;
      v102(v87);
      swift_release(v76);
      swift_release(v94);

      swift_bridgeObjectRelease();
      swift_release(v95);
      swift_release(v86);
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v54 = type metadata accessor for Logger(0LL);
      uint64_t v55 = __swift_project_value_buffer(v54, (uint64_t)static Logger.siriPhone);
      uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
      os_log_type_t v58 = static os_log_type_t.debug.getter(v56, v57);
      if (os_log_type_enabled(v56, v58))
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v59 = 0;
        _os_log_impl(&dword_0, v56, v58, "More than one handle type -- appending HandleType", v59, 2u);
        swift_slowDealloc(v59, -1LL, -1LL);
      }

      outlined init with copy of SignalProviding((uint64_t)(v105 + 15), (uint64_t)v106);
      uint64_t v60 = v107;
      uint64_t v61 = v108;
      __swift_project_boxed_opaque_existential_1(v106, v107);
      uint64_t v62 = (void *)swift_allocObject(&unk_406C60, 48LL, 7LL);
      uint64_t v63 = v94;
      v62[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
      v62[3] = v63;
      v62[4] = v47;
      v62[5] = v49;
      uint64_t v64 = *(void (**)(id, uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v61 + 48);
      swift_retain();
      id v65 = v96;
      v64( v96,  v53,  closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)partial apply,  v62,  v60,  v61);
      swift_release(v62);
      swift_release(v95);
      __swift_destroy_boxed_opaque_existential_1(v106);
      swift_release(v99);
      swift_release(v63);

      uint64_t v66 = v103;
      uint64_t v67 = v93;
    }

    uint64_t v88 = v104;
    swift_release(v104);
    outlined destroy of PhoneContactDisambiguationItemFactory(v111);
    swift_release(v88);

    swift_release(v98);
    return swift_release_n(v66, 2LL);
  }

  else
  {
    swift_beginAccess(a2 + 16, __src, 0LL, 0LL);
    uint64_t v68 = v100;
    swift_beginAccess(v100, v111, 0LL, 0LL);
    uint64_t v69 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v68, v101);
    uint64_t v70 = swift_bridgeObjectRetain();
    uint64_t v71 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v70, (uint64_t)v19, a3);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v69);
    uint64_t v72 = swift_retain();
    uint64_t v73 = v103;
    v102(v72);
    swift_release_n(v73, 2LL);
    swift_release(v104);
    return swift_release(v71);
  }

uint64_t closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t), uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v71 = a8;
  uint64_t v74 = a6;
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v12 = type metadata accessor for Image(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Locale(0LL);
  uint64_t v69 = *(void *)(v16 - 8);
  uint64_t v70 = v16;
  __chkstk_darwin();
  uint64_t v68 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = a2 + 16;
  uint64_t v73 = a7;
  uint64_t v19 = swift_projectBox(a7);
  swift_beginAccess(a2 + 16, __src, 33LL, 0LL);
  uint64_t v20 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  uint64_t v72 = a2;
  uint64_t v21 = *(void *)((char *)&dword_10 + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFF8LL));
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
  uint64_t v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, a1);
  specialized Array._endMutation()(v22, v23, v24, v25);
  swift_endAccess(__src);
  INPerson.hasHandleLabel.getter();
  if ((v26 & 1) != 0
    && (id v27 = [a3 personHandle]) != 0
    && (char v28 = v27, v29 = [v27 label], v28, v29))
  {
    uint64_t v30 = (unint64_t *)v74;
    outlined init with copy of PhoneContactDisambiguationItemFactory(v74, (uint64_t)__src);
    outlined init with copy of PhoneContactDisambiguationItemFactory(__src, (uint64_t)v82);
    id v31 = (void *)swift_allocObject(&unk_406B20, 216LL, 7LL);
    uint64_t v32 = v72;
    uint64_t v33 = v75;
    uint64_t v34 = v76;
    v31[2] = v72;
    void v31[3] = v33;
    v31[4] = v34;
    memcpy(v31 + 5, __src, 0xA0uLL);
    uint64_t v35 = v73;
    v31[25] = v73;
    v31[26] = a3;
    id v67 = v29;
    uint64_t v36 = v30[13];
    unint64_t v37 = v30[14];
    __swift_project_boxed_opaque_existential_1(v30 + 10, v36);
    swift_retain_n(v32, 2LL);
    swift_retain_n(v34, 2LL);
    swift_retain_n(v35, 2LL);
    uint64_t v38 = a3;
    uint64_t v39 = v68;
    uint64_t v40 = dispatch thunk of DeviceState.siriLocale.getter(v36, v37);
    v77[0] = Locale.identifier.getter(v40);
    v77[1] = v41;
    v81[0] = 45LL;
    v81[1] = 0xE100000000000000LL;
    v80[0] = 95LL;
    v80[1] = 0xE100000000000000LL;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v42 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v81,  v80,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v70);
    uint64_t v45 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v67, v42, v44);
    uint64_t v47 = v46;
    swift_bridgeObjectRelease();
    type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
    uint64_t v48 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v45, v47);
    uint64_t v49 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v48);
    swift_release(v48);
    uint64_t v50 = v30;
    if ((PhoneContactDisambiguationProperties.hasOneHandleType.getter(v30[1]) & 1) != 0
      || (unint64_t)(v71 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      uint64_t v66 = v72;
      uint64_t v62 = v73;
      uint64_t v63 = v76;
      closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( v49,  v72,  v75,  v76,  (uint64_t)v82,  v73,  v38);
      swift_release(v66);
      swift_release(v31);

      swift_bridgeObjectRelease();
      swift_release(v49);
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v75 = v38;
      uint64_t v51 = type metadata accessor for Logger(0LL);
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)static Logger.siriPhone);
      uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
      os_log_type_t v55 = static os_log_type_t.debug.getter(v53, v54);
      if (os_log_type_enabled(v53, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl(&dword_0, v53, v55, "More than one handle type -- appending HandleType", v56, 2u);
        swift_slowDealloc(v56, -1LL, -1LL);
      }

      outlined init with copy of SignalProviding((uint64_t)(v50 + 15), (uint64_t)v77);
      uint64_t v57 = v78;
      uint64_t v58 = v79;
      __swift_project_boxed_opaque_existential_1(v77, v78);
      uint64_t v59 = (void *)swift_allocObject(&unk_406B48, 48LL, 7LL);
      v59[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:);
      v59[3] = v31;
      v59[4] = v45;
      v59[5] = v47;
      uint64_t v60 = *(void (**)(id, uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v58 + 48);
      swift_retain();
      id v61 = v67;
      v60( v67,  v71,  closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)partial apply,  v59,  v57,  v58);
      swift_release(v59);
      swift_release(v49);
      __swift_destroy_boxed_opaque_existential_1(v77);
      swift_release(v72);
      swift_release(v31);

      uint64_t v62 = v73;
      uint64_t v38 = v75;
      uint64_t v63 = v76;
    }

    swift_release(v63);
    outlined destroy of PhoneContactDisambiguationItemFactory(v82);
  }

  else
  {
    swift_beginAccess(v18, __src, 0LL, 0LL);
    swift_beginAccess(v19, v82, 0LL, 0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v19, v12);
    uint64_t v64 = swift_bridgeObjectRetain();
    uint64_t v62 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v64, (uint64_t)v15, a3);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v75(v62);
  }

  return swift_release(v62);
}

uint64_t closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v25 = a4;
  char v26 = a3;
  uint64_t v11 = type metadata accessor for Image(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = swift_projectBox(a6);
  swift_beginAccess(a2 + 16, v28, 33LL, 0LL);
  uint64_t v16 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  uint64_t v17 = *(void *)((char *)&dword_10 + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFF8LL));
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
  uint64_t v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, a1);
  specialized Array._endMutation()(v18, v19, v20, v21);
  swift_endAccess(v28);
  swift_beginAccess(a2 + 16, v28, 0LL, 0LL);
  swift_beginAccess(v15, v27, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v22, (uint64_t)v14, a7);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v26(v23);
  return swift_release(v23);
}

void closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v86 = a4;
  uint64_t v87 = a5;
  uint64_t v85 = a3;
  uint64_t v9 = type metadata accessor for Locale(0LL);
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Image(0LL);
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v84 + 64);
  __chkstk_darwin();
  uint64_t v83 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v74 - v14;
  uint64_t v16 = swift_allocObject(&unk_406A58, 24LL, 7LL);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v18 = swift_allocObject(v17, 40LL, 7LL);
  *(_OWORD *)(v18 + 16) = xmmword_31FE60;
  *(void *)(v18 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  __src[0] = v18;
  specialized Array._endMutation()(v18, v19, v20, v21);
  *(void *)(v16 + 16) = __src[0];
  swift_retain();
  id v22 = [a2 personHandle];
  if (!v22) {
    goto LABEL_15;
  }
  uint64_t v23 = v22;
  id v24 = [v22 label];
  if (!v24)
  {
LABEL_14:

LABEL_15:
    uint64_t v72 = swift_bridgeObjectRetain();
    uint64_t v73 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v72, a6, a2);
    swift_bridgeObjectRelease();
    v85(v73);
    swift_release(v16);
    swift_release(v73);
    return;
  }

  uint64_t v80 = v12;
  id v78 = v24;
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000LL) == 0) {
    uint64_t v28 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (!v28)
  {

    uint64_t v23 = v78;
    goto LABEL_14;
  }

  id v76 = v23;
  uint64_t v77 = (char *)[v23 type];
  outlined init with copy of PhoneContactDisambiguationItemFactory(v87, (uint64_t)__src);
  uint64_t v29 = v84;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  uint64_t v31 = a6;
  uint64_t v32 = v80;
  v30(v15, v31, v80);
  outlined init with copy of PhoneContactDisambiguationItemFactory(__src, (uint64_t)v93);
  v30(v83, (uint64_t)v15, v32);
  uint64_t v33 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v34 = (v33 + 200) & ~v33;
  unint64_t v35 = (v13 + v34 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v36 = (void *)swift_allocObject(&unk_406A80, v35 + 8, v33 | 7);
  uint64_t v79 = v16;
  unint64_t v37 = v36;
  uint64_t v38 = v85;
  uint64_t v39 = v86;
  void v36[2] = v79;
  v36[3] = v38;
  v36[4] = v39;
  memcpy(v36 + 5, __src, 0xA0uLL);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v37 + v34, v15, v32);
  uint64_t v74 = v37;
  *(void *)((char *)v37 + v3__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a2;
  uint64_t v40 = v79;
  uint64_t v41 = v87;
  uint64_t v42 = v87[13];
  uint64_t v43 = v87[14];
  __swift_project_boxed_opaque_existential_1(v87 + 10, v42);
  swift_retain_n(v40, 2LL);
  swift_retain_n(v39, 2LL);
  id v75 = a2;
  uint64_t v44 = dispatch thunk of DeviceState.siriLocale.getter(v42, v43);
  v88[0] = Locale.identifier.getter(v44);
  v88[1] = v45;
  v92[0] = 45LL;
  v92[1] = 0xE100000000000000LL;
  v91[0] = 95LL;
  v91[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v46 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v92,  v91,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v11, v82);
  uint64_t v49 = v78;
  uint64_t v50 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v78, v46, v48);
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();
  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v53 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v50, v52);
  uint64_t v54 = (void (*)(uint64_t))dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v53);
  uint64_t v55 = v53;
  uint64_t v56 = v77;
  swift_release(v55);
  if ((PhoneContactDisambiguationProperties.hasOneHandleType.getter(v41[1]) & 1) != 0
    || (unint64_t)(v56 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    uint64_t v70 = v86;
    uint64_t v63 = (uint64_t)v83;
    uint64_t v71 = v75;
    closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( (uint64_t)v54,  v40,  v85,  v86,  (uint64_t)v93,  (uint64_t)v83,  v75);
    swift_release(v40);
    swift_release(v74);

    swift_bridgeObjectRelease();
    swift_release(v54);
  }

  else
  {
    uint64_t v85 = v54;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v57 = type metadata accessor for Logger(0LL);
    uint64_t v58 = __swift_project_value_buffer(v57, (uint64_t)static Logger.siriPhone);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v61 = static os_log_type_t.debug.getter(v59, v60);
    BOOL v62 = os_log_type_enabled(v59, v61);
    uint64_t v63 = (uint64_t)v83;
    if (v62)
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl(&dword_0, v59, v61, "More than one handle type -- appending HandleType", v64, 2u);
      swift_slowDealloc(v64, -1LL, -1LL);
    }

    outlined init with copy of SignalProviding((uint64_t)(v87 + 15), (uint64_t)v88);
    uint64_t v65 = v89;
    uint64_t v66 = v90;
    __swift_project_boxed_opaque_existential_1(v88, v89);
    id v67 = (void *)swift_allocObject(&unk_406AA8, 48LL, 7LL);
    uint64_t v68 = v74;
    void v67[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:);
    v67[3] = v68;
    v67[4] = v50;
    v67[5] = v52;
    uint64_t v69 = *(void (**)(void *, char *, uint64_t (*)(), void *, uint64_t, uint64_t))(v66 + 48);
    swift_retain();
    v69( v49,  v77,  closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)partial apply,  v67,  v65,  v66);
    swift_release(v67);
    swift_release(v85);
    __swift_destroy_boxed_opaque_existential_1(v88);
    swift_release(v68);

    uint64_t v40 = v79;
    swift_release(v79);
    uint64_t v70 = v86;
    uint64_t v71 = v75;
  }

  swift_release(v70);
  outlined destroy of PhoneContactDisambiguationItemFactory(v93);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v63, v80);
  swift_release(v40);
}

uint64_t closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 33LL, 0LL);
  uint64_t v13 = swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  uint64_t v14 = *(void *)((char *)&dword_10 + (*(void *)(a2 + 16) & 0xFFFFFFFFFFFFF8LL));
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
  uint64_t v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, a1);
  specialized Array._endMutation()(v15, v16, v17, v18);
  swift_endAccess(v22);
  swift_beginAccess(v12, v22, 0LL, 0LL);
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v19, a6, a7);
  swift_bridgeObjectRelease();
  a3(v20);
  return swift_release(v20);
}

void closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v56 = a7;
  uint64_t v62 = a6;
  uint64_t v63 = a3;
  uint64_t v64 = a5;
  uint64_t v10 = type metadata accessor for Locale(0LL);
  uint64_t v57 = *(void *)(v10 - 8);
  id v58 = (id)v10;
  __chkstk_darwin();
  uint64_t v55 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Image(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v16 = (char *)&v53 - v15;
  outlined init with copy of PhoneContactDisambiguationItemFactory(a2, (uint64_t)__src);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v17(v16, v62, v12);
  outlined init with copy of PhoneContactDisambiguationItemFactory(__src, (uint64_t)v70);
  uint64_t v59 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v17(v59, (uint64_t)v16, v12);
  uint64_t v18 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = (v18 + 200) & ~v18;
  unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v21 = (char *)swift_allocObject(&unk_4069B8, v20 + 8, v18 | 7);
  uint64_t v54 = a4;
  *((void *)v21 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  uint64_t v22 = v64;
  *((void *)v21 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v64;
  memcpy(v21 + 32, __src, 0xA0uLL);
  *((void *)v21 + 24) = a1;
  uint64_t v61 = v13;
  uint64_t v62 = v12;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  id v24 = a2;
  v23(&v21[v19], v16, v12);
  uint64_t v25 = v56;
  *(void *)&v21[v20] = v56;
  uint64_t v26 = a2[13];
  uint64_t v27 = a2[14];
  __swift_project_boxed_opaque_existential_1(a2 + 10, v26);
  swift_retain_n(v22, 2LL);
  uint64_t v60 = a1;
  swift_retain_n(a1, 2LL);
  id v28 = v25;
  uint64_t v29 = v55;
  uint64_t v30 = dispatch thunk of DeviceState.siriLocale.getter(v26, v27);
  v65[0] = Locale.identifier.getter(v30);
  v65[1] = v31;
  v69[0] = 45LL;
  v69[1] = 0xE100000000000000LL;
  v68[0] = 95LL;
  v68[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v32 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v69,  v68,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, id))(v57 + 8))(v29, v58);
  uint64_t v35 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v63, v32, v34);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v38 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v35, v37);
  uint64_t v39 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v38);
  swift_release(v38);
  if ((PhoneContactDisambiguationProperties.hasOneHandleType.getter(v24[1]) & 1) != 0)
  {
    uint64_t v40 = v64;
    uint64_t v41 = (uint64_t)v59;
    uint64_t v42 = v60;
    closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( v39,  v54,  v64,  (uint64_t)v70,  v60,  (uint64_t)v59,  v28);
    swift_release(v40);
    swift_release(v21);
    swift_bridgeObjectRelease();
    swift_release(v39);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    id v58 = v28;
    uint64_t v43 = type metadata accessor for Logger(0LL);
    uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)static Logger.siriPhone);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v47 = static os_log_type_t.debug.getter(v45, v46);
    if (os_log_type_enabled(v45, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_0, v45, v47, "More than one handle type -- appending HandleType", v48, 2u);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    outlined init with copy of SignalProviding((uint64_t)(v24 + 15), (uint64_t)v65);
    uint64_t v49 = v66;
    uint64_t v50 = v67;
    __swift_project_boxed_opaque_existential_1(v65, v66);
    uint64_t v51 = (void *)swift_allocObject(&unk_4069E0, 48LL, 7LL);
    void v51[2] = partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:);
    v51[3] = v21;
    v51[4] = v35;
    v51[5] = v37;
    uint64_t v52 = *(void (**)(uint64_t, uint64_t, void *(*)(uint64_t), void *, uint64_t, uint64_t))(v50 + 48);
    swift_retain();
    v52( v63,  2LL,  partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:),  v51,  v49,  v50);
    swift_release(v51);
    swift_release(v39);
    __swift_destroy_boxed_opaque_existential_1(v65);
    swift_release(v64);
    swift_release(v21);
    uint64_t v41 = (uint64_t)v59;
    uint64_t v42 = v60;
    id v28 = v58;
  }

  outlined destroy of PhoneContactDisambiguationItemFactory(v70);
  swift_release(v42);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v41, v62);
}

uint64_t closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = swift_allocObject(v12, 48LL, 7LL);
  *(_OWORD *)(v13 + 16) = xmmword_31FBC0;
  *(void *)(v13 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v13 + 40) = a1;
  uint64_t v19 = v13;
  specialized Array._endMutation()(v13, v14, v15, v16);
  swift_retain();
  swift_retain();
  uint64_t v17 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v19, a6, a7);
  swift_bridgeObjectRelease();
  a2(v17);
  return swift_release(v17);
}

uint64_t closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v11 = swift_allocObject(v10, 40LL, 7LL);
  *(_OWORD *)(v11 + 16) = xmmword_31FE60;
  *(void *)(v11 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  uint64_t v17 = v11;
  specialized Array._endMutation()(v11, v12, v13, v14);
  swift_retain();
  uint64_t v15 = PhoneContactDisambiguationItemFactory.buildItemForInvocationType(_:_:_:)(v17, a5, a6);
  swift_bridgeObjectRelease();
  a2(v15);
  return swift_release(v15);
}

void *closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)( uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a4;
  uint64_t v9 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1) {
    return (void *)outlined destroy of SpeakableString?( (uint64_t)v17,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }
  uint64_t v53 = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v17, v9);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v51 = a3;
  uint64_t v19 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v12, v14, v9);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
  BOOL v24 = os_log_type_enabled(v21, v23);
  uint64_t v52 = a2;
  if (v24)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v26 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = v26;
    uint64_t v56 = v26;
    uint64_t v50 = v9;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v48 = v25 + 4;
    uint64_t v27 = TemplatingResult.print.getter(v26);
    uint64_t v28 = Array.description.getter(v27, &type metadata for String);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v56);
    uint64_t v9 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v48);
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v12, v9);
    _os_log_impl(&dword_0, v21, v23, "snippetDisplayHandleLabelWithType SUCCESS: %s", v25, 0xCu);
    uint64_t v32 = v49;
    swift_arrayDestroy(v49, 1LL);
    swift_slowDealloc(v32, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v12, v9);
  }

  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v33 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v54, v53);
  uint64_t result = (void *)TemplatingResult.print.getter(v33);
  if (!result[2])
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v34 = result[4];
  uint64_t v35 = result[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintOnLockScreen(_:)(v34, v35);
  swift_bridgeObjectRelease();
  uint64_t v37 = swift_release(v33);
  uint64_t result = (void *)TemplatingResult.speak.getter(v37);
  if (!result[2])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v38 = result[4];
  uint64_t v39 = result[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeak(_:)(v38, v39);
  swift_bridgeObjectRelease();
  uint64_t v41 = swift_release(v36);
  uint64_t result = (void *)TemplatingResult.speak.getter(v41);
  if (result[2])
  {
    uint64_t v42 = result[4];
    uint64_t v43 = result[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v44 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeakOnLockScreen(_:)(v42, v43);
    swift_bridgeObjectRelease();
    uint64_t v45 = swift_release(v40);
    uint64_t v46 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v45);
    swift_release(v44);
    v52(v46);
    swift_release(v46);
    return (void *)((uint64_t (*)(char *, uint64_t))v31)(v14, v9);
  }

uint64_t closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(a1, a2);
  uint64_t v16 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeak(_:)(a3, a4);
  swift_release(v15);
  uint64_t v17 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeakOnLockScreen(_:)(a3, a4);
  swift_release(v16);
  uint64_t v18 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)(a7);
  swift_release(v17);
  __swift_project_boxed_opaque_existential_1((void *)(a8 + 80), *(void *)(a8 + 104));
  DeviceState.isStandaloneIOS.getter();
  uint64_t v20 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintBlue(_:)(v19 & 1);
  uint64_t v21 = swift_release(v18);
  uint64_t v22 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v21);
  swift_release(v20);
  a5(v22);
  return swift_release(v22);
}

uint64_t PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( uint64_t a1, unint64_t a2, void (*a3)(void, void, void, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v8 = type metadata accessor for CharacterSet(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static CharacterSet.controlCharacters.getter(v10);
  uint64_t v49 = v12;
  swift_bridgeObjectRetain();
  uint64_t v13 = specialized RangeReplaceableCollection.filter(_:)( (uint64_t (*)(void *))_sSS27PhoneCallFlowDelegatePluginE6remove10charactersSS10Foundation12CharacterSetV_tFSbs7UnicodeO6ScalarVXEfU_TA_0,  (uint64_t)v48,  a1,  a2);
  uint64_t v15 = v14;
  uint64_t v16 = v12;
  uint64_t v17 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  uint64_t v51 = 0LL;
  unint64_t v52 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(39LL);
  swift_bridgeObjectRelease();
  uint64_t v51 = 0xD000000000000012LL;
  unint64_t v52 = 0x800000000034CA70LL;
  v18._uint64_t countAndFlagsBits = v17;
  v18._object = v15;
  String.append(_:)(v18);
  v19._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  v19._object = (void *)0x800000000034CA90LL;
  String.append(_:)(v19);
  uint64_t v20 = v51;
  unint64_t v21 = v52;
  uint64_t v23 = v5[8];
  uint64_t v22 = v5[9];
  __swift_project_boxed_opaque_existential_1(v5 + 5, v23);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22);
  if (v25)
  {
    uint64_t v42 = v24;
    uint64_t v43 = v20;
    uint64_t v44 = v25;
    unint64_t v45 = v21;
    uint64_t v26 = v46;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    uint64_t v28 = swift_bridgeObjectRetain_n(v15, 2LL);
    unint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
    if (os_log_type_enabled(v29, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v33 = swift_slowAlloc(32LL, -1LL);
      uint64_t v51 = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, (unint64_t)v15, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v32 + 4);
      swift_bridgeObjectRelease_n(v15, 3LL);
      _os_log_impl(&dword_0, v29, v31, "Format phone number call: %s", v32, 0xCu);
      swift_arrayDestroy(v33, 1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v15, 2LL);
    }

    unint64_t v35 = v45;
    outlined init with copy of SignalProviding((uint64_t)(v5 + 15), (uint64_t)&v51);
    uint64_t v36 = v53;
    uint64_t v37 = v54;
    __swift_project_boxed_opaque_existential_1(&v51, v53);
    uint64_t v38 = (void *)swift_allocObject(&unk_406990, 64LL, 7LL);
    uint64_t v39 = v47;
    v38[2] = v26;
    v38[3] = v39;
    v38[4] = v17;
    v38[5] = v15;
    v38[6] = v43;
    v38[7] = v35;
    uint64_t v40 = v17;
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, void *(*)(uint64_t), void *, uint64_t, uint64_t))(v37 + 64);
    swift_bridgeObjectRetain();
    swift_retain();
    v41( v42,  v44,  v40,  v15,  partial apply for closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:),  v38,  v36,  v37);
    swift_release(v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1(&v51);
  }

  else
  {
    v46(a1, a2, v20, v21);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

void *closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a7;
  uint64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  Swift::String v19 = (uint64_t *)((char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    swift_errorRelease(*v19);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL);
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "Format phone number failure", v24, 2u);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    return (void *)v51(a4, a5, a6, v49);
  }

  else
  {
    (*(void (**)(char *, void *, uint64_t))(v12 + 32))(v16, v19, v11);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v26 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    uint64_t v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 16))(v14, v16, v11);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v30 = static os_log_type_t.debug.getter(v28, v29);
    if (os_log_type_enabled(v28, v30))
    {
      os_log_type_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v32 = swift_slowAlloc(32LL, -1LL);
      uint64_t v49 = v32;
      uint64_t v53 = v32;
      uint64_t v48 = v31;
      *(_DWORD *)os_log_type_t v31 = 136315138;
      uint64_t v47 = v31 + 4;
      uint64_t v33 = TemplatingResult.speak.getter(v32);
      uint64_t v34 = Array.description.getter(v33, &type metadata for String);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v47);
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v12 + 8);
      v37(v14, v11);
      uint64_t v38 = v48;
      _os_log_impl(&dword_0, v28, v30, "Format phone number success: %s", v48, 0xCu);
      uint64_t v39 = v49;
      swift_arrayDestroy(v49, 1LL);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    else
    {
      uint64_t v37 = *(void (**)(char *, uint64_t))(v12 + 8);
      v37(v14, v11);
    }

    uint64_t result = (void *)TemplatingResult.print.getter(v40);
    if (result[2])
    {
      uint64_t v42 = result[4];
      uint64_t v41 = result[5];
      swift_bridgeObjectRetain();
      uint64_t v43 = swift_bridgeObjectRelease();
      uint64_t result = (void *)TemplatingResult.speak.getter(v43);
      if (result[2])
      {
        uint64_t v44 = result[4];
        uint64_t v45 = result[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v51(v42, v41, v44, v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (void *)((uint64_t (*)(char *, uint64_t))v37)(v16, v11);
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
  }

  return result;
}

void *closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:)( uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
    uint64_t v11 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(0LL, 0xE000000000000000LL);
    uint64_t v12 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v11);
    swift_release(v11);
    a2(v12);
    swift_release(v12);
    return (void *)outlined destroy of SpeakableString?( (uint64_t)v10,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    uint64_t v14 = type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
    uint64_t result = (void *)TemplatingResult.print.getter(v14);
    if (result[2])
    {
      uint64_t v15 = result[4];
      uint64_t v16 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v15, v16);
      uint64_t v18 = swift_bridgeObjectRelease();
      uint64_t v19 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v18);
      swift_release(v17);
      a2(v19);
      swift_release(v19);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    else
    {
      __break(1u);
    }
  }

  return result;
}

uint64_t protocol witness for DisambiguationItemFactory.buildDisambiguationItem(item:_:) in conformance PhoneContactDisambiguationItemFactory()
{
  return PhoneContactDisambiguationItemFactory.buildDisambiguationItem(item:_:)();
}

uint64_t destroy for PhoneContactDisambiguationItemFactory(void *a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 15);
}

uint64_t initializeWithCopy for PhoneContactDisambiguationItemFactory(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  uint64_t v7 = a2 + 5;
  __int128 v8 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 64) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v10(a1 + 40, v7, v9);
  __int128 v11 = *(_OWORD *)(a2 + 13);
  *(_OWORD *)(a1 + 104) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 80, (uint64_t)(a2 + 10));
  __int128 v12 = *((_OWORD *)a2 + 9);
  *(_OWORD *)(a1 + 144) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 120, (uint64_t)(a2 + 15));
  return a1;
}

uint64_t assignWithCopy for PhoneContactDisambiguationItemFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 40), (void *)(a2 + 40));
  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 80), (void *)(a2 + 80));
  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 120), (void *)(a2 + 120));
  return a1;
}

uint64_t assignWithTake for PhoneContactDisambiguationItemFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 112);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneContactDisambiguationItemFactory(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 160))
    {
      LODWORD(App.__allocating_init(appIdentifier:)(v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(App.__allocating_init(appIdentifier:)(v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneContactDisambiguationItemFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_OWORD *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 160) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for PhoneContactDisambiguationItemFactory()
{
  return &type metadata for PhoneContactDisambiguationItemFactory;
}

uint64_t outlined init with copy of PhoneContactDisambiguationItemFactory(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A4654()
{
  uint64_t v1 = *(void *)(OUTLINED_FUNCTION_6_64() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  uint64_t v4 = ((*(void *)(v1 + 64) + ((v2 + 192) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  OUTLINED_FUNCTION_37();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_55();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_35();
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_19_37();
  return OUTLINED_FUNCTION_0_70(v0, v4, v3);
}

uint64_t partial apply for closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( uint64_t a1)
{
  uint64_t v3 = *(void *)(OUTLINED_FUNCTION_6_64() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 192LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return closure #2 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( a1,  *(void (**)(uint64_t))(v1 + 16),  *(void *)(v1 + 24),  v1 + 32,  v1 + v4,  *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1A4724()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void *partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:)( uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildEmergencyServicesItemComponent(_:)( a1,  *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1A474C()
{
  swift_release(*(void *)(v0 + 192));
  OUTLINED_FUNCTION_10_52();
  OUTLINED_FUNCTION_19_37();
  uint64_t v1 = OUTLINED_FUNCTION_23_36();
  return OUTLINED_FUNCTION_0_70(v1, v2, v3);
}

void partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_17_44();
  closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( v0,  v1,  v2,  v3,  v4,  v5,  v6);
}

uint64_t partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildHandleValueItemComponent(_:_:allowedOnLockScreen:_:)( a1,  a2,  a3,  a4,  *(void (**)(uint64_t))(v4 + 16),  *(void *)(v4 + 24),  *(unsigned __int8 *)(v4 + 32),  v4 + 40);
}

BOOL _sSS27PhoneCallFlowDelegatePluginE6remove10charactersSS10Foundation12CharacterSetV_tFSbs7UnicodeO6ScalarVXEfU_TA_0( unsigned int *a1)
{
  return closure #1 in String.remove(characters:)(a1);
}

uint64_t sub_1A4834()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

void *partial apply for closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.getPhoneNumberSpeakableString(value:_:)( a1,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56));
}

uint64_t sub_1A4870()
{
  uint64_t v1 = OUTLINED_FUNCTION_23_36();
  return OUTLINED_FUNCTION_0_70(v1, v2, v3);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_17_44();
  return closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildLocalEmergencyDisambiguationItem(_:_:)( v0,  v1,  v2,  v3,  v4,  v5,  v6);
}

void *partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)( uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildHandleLabelItemComponent(_:_:_:)( a1,  *(void (**)(uint64_t))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_1A492C()
{
  uint64_t v1 = *(void *)(OUTLINED_FUNCTION_6_64() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = ((v2 + 200) & ~v2) + *(void *)(v1 + 64);
  uint64_t v4 = v2 | 7;

  OUTLINED_FUNCTION_90_3();
  OUTLINED_FUNCTION_9_55();
  OUTLINED_FUNCTION_11_55();
  OUTLINED_FUNCTION_18_45();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 80));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 120));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 160));
  OUTLINED_FUNCTION_20_37();
  return swift_deallocObject(v0, v3, v4);
}

void partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(OUTLINED_FUNCTION_6_64() - 8) + 80LL);
  closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( a1,  *(void **)(v1 + 16),  *(void (**)(uint64_t))(v1 + 24),  *(void *)(v1 + 32),  (uint64_t *)(v1 + 40),  v1 + ((v3 + 200) & ~v3));
}

uint64_t sub_1A4A00()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1A4A24()
{
  uint64_t v1 = OUTLINED_FUNCTION_4_67();
  swift_release(v1);
  OUTLINED_FUNCTION_90_3();
  OUTLINED_FUNCTION_9_55();
  OUTLINED_FUNCTION_11_55();
  OUTLINED_FUNCTION_18_45();
  __swift_destroy_boxed_opaque_existential_1(v0 + 10);
  __swift_destroy_boxed_opaque_existential_1(v0 + 15);
  __swift_destroy_boxed_opaque_existential_1(v0 + 20);
  OUTLINED_FUNCTION_10_52();
  OUTLINED_FUNCTION_19_37();
  uint64_t v2 = OUTLINED_FUNCTION_23_36();
  return OUTLINED_FUNCTION_0_70(v2, v3, v4);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_17_44();
  return closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildUnnamedPhoneNumberDisambiguationItem(_:_:)( v0,  v1,  v2,  v3,  v4,  v5,  v6);
}

uint64_t partial apply for closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( uint64_t a1)
{
  return closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( a1,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void (**)(uint64_t))(v1 + 32),  *(void *)(v1 + 40),  (uint64_t *)(v1 + 48),  *(void *)(v1 + 208),  *(void *)(v1 + 216));
}

uint64_t objectdestroy_8Tm()
{
  return swift_deallocObject(v0, 200LL, 7LL);
}

uint64_t objectdestroy_45Tm()
{
  return swift_deallocObject(v0, 216LL, 7LL);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( uint64_t a1)
{
  return closure #1 in closure #1 in PhoneContactDisambiguationItemFactory.buildRegularDisambiguationItem(_:_:)( a1,  *(void *)(v1 + 16),  *(void (**)(uint64_t))(v1 + 24),  *(void *)(v1 + 32),  v1 + 40,  *(void *)(v1 + 200),  *(void **)(v1 + 208));
}

uint64_t OUTLINED_FUNCTION_0_70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

void OUTLINED_FUNCTION_1_64(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_2_62()
{
  return swift_slowDealloc(v0, -1LL, -1LL);
}

uint64_t OUTLINED_FUNCTION_4_67()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_6_64()
{
  return type metadata accessor for Image(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_9_55()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_10_52()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
}

uint64_t OUTLINED_FUNCTION_11_55()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_16_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_44()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_45()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 72));
}

void OUTLINED_FUNCTION_19_37()
{
}

uint64_t OUTLINED_FUNCTION_20_37()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t OUTLINED_FUNCTION_23_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_31()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 + 20);
}

uint64_t HangUpTipGenerator.init(sharedGlobals:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)a2 = 1;
  *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000013LL;
  *(void *)(a2 + 16) = 0x8000000000343C20LL;
  return outlined init with take of AppSelectionSignalComponent(a1, a2 + 24);
}

uint64_t HangUpTipGenerator.templateIdentifier.getter()
{
  return v0;
}

Swift::Bool __swiftcall HangUpTipGenerator.isEnabled()()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v1, v2);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 3) = dispatch thunk of DeviceState.isHomePod.getter(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v6);
  return v3 & 1;
}

unint64_t instantiation function for generic protocol witness table for HangUpTipGenerator( uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type HangUpTipGenerator and conformance HangUpTipGenerator();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type HangUpTipGenerator and conformance HangUpTipGenerator()
{
  unint64_t result = lazy protocol witness table cache variable for type HangUpTipGenerator and conformance HangUpTipGenerator;
  if (!lazy protocol witness table cache variable for type HangUpTipGenerator and conformance HangUpTipGenerator)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for HangUpTipGenerator,  &type metadata for HangUpTipGenerator);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type HangUpTipGenerator and conformance HangUpTipGenerator);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>;
  if (!lazy protocol witness table cache variable for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IdiomKeyedHintHistory<OneTimeHintHistory>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IdiomKeyedHintHistory<A>, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IdiomKeyedHintHistory<OneTimeHintHistory> and conformance IdiomKeyedHintHistory<A>);
  }

  return result;
}

uint64_t destroy for HangUpTipGenerator(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 24));
}

uint64_t initializeWithCopy for HangUpTipGenerator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = a2 + 24;
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain(v3);
  v7(a1 + 24, v4, v6);
  return a1;
}

uint64_t assignWithCopy for HangUpTipGenerator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 24), (void *)(a2 + 24));
  return a1;
}

uint64_t assignWithTake for HangUpTipGenerator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for HangUpTipGenerator(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(App.__allocating_init(appIdentifier:)(v1, v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(App.__allocating_init(appIdentifier:)(v1, v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(App.__allocating_init(appIdentifier:)(v1, v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HangUpTipGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 64) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HangUpTipGenerator()
{
  return &type metadata for HangUpTipGenerator;
}

uint64_t AnnotatedAppFinder.thirdPartyAnnotatedAppStore.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(v1 + 24, a1);
}

uint64_t OUTLINED_FUNCTION_1_65()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 16));
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a1 < 0 || Array.count.getter(a2) <= a1)
  {
    uint64_t v8 = 1LL;
  }

  else
  {
    Array.subscript.getter(a1, a2, a3);
    uint64_t v8 = 0LL;
  }

  return __swift_storeEnumTagSinglePayload(a4, v8, 1LL, a3);
}

uint64_t Array.subscript.getter@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a1 < 0 || Array.count.getter(a3) <= a1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16LL))(a5, a2, a4);
  }
  else {
    return Array.subscript.getter(a1, a3, a4);
  }
}

uint64_t Array<A>.hasQueryableContactInformation.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    outlined init with copy of SignalProviding(v3, (uint64_t)v75);
    uint64_t v4 = v75[4];
    OUTLINED_FUNCTION_5_0(v75);
    uint64_t v5 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56));
    if (v6) {
      break;
    }
    OUTLINED_FUNCTION_7_70(v5, 0LL, v7, v8, v9, v10, v11, v12, v70, v71);
LABEL_7:
    uint64_t v21 = v74[4];
    OUTLINED_FUNCTION_5_0(v74);
    uint64_t v22 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 200));
    if (v23)
    {
      OUTLINED_FUNCTION_0_71(v22, v23);
      OUTLINED_FUNCTION_50_18();
      uint64_t v24 = __swift_destroy_boxed_opaque_existential_1(v74);
      OUTLINED_FUNCTION_4_68(v24, v25, v26, v27, v28);
      if (v1) {
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v29 = __swift_destroy_boxed_opaque_existential_1(v74);
      OUTLINED_FUNCTION_4_68(v29, v30, v31, v32, v33);
    }

    uint64_t v34 = v73[4];
    OUTLINED_FUNCTION_5_0(v73);
    uint64_t v35 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 152));
    if (v36)
    {
      OUTLINED_FUNCTION_0_71(v35, v36);
      OUTLINED_FUNCTION_50_18();
      uint64_t v37 = __swift_destroy_boxed_opaque_existential_1(v73);
      OUTLINED_FUNCTION_3_81(v37, v38, v39, v40, v41, v42, v43, v44, v70);
      if (v1) {
        goto LABEL_23;
      }
    }

    else
    {
      uint64_t v45 = __swift_destroy_boxed_opaque_existential_1(v73);
      OUTLINED_FUNCTION_3_81(v45, v46, v47, v48, v49, v50, v51, v52, v70);
    }

    uint64_t v53 = v72;
    OUTLINED_FUNCTION_5_0(&v70);
    uint64_t v54 = OUTLINED_FUNCTION_63_0(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 176));
    if (v55)
    {
      OUTLINED_FUNCTION_0_71(v54, v55);
      OUTLINED_FUNCTION_50_18();
      OUTLINED_FUNCTION_6_65(&v70);
      if (v1) {
        goto LABEL_24;
      }
    }

    else
    {
      OUTLINED_FUNCTION_6_65(&v70);
    }

    v3 += 40LL;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 0LL;
    }
  }

  OUTLINED_FUNCTION_0_71(v5, v6);
  OUTLINED_FUNCTION_50_18();
  OUTLINED_FUNCTION_7_70(v13, v14, v15, v16, v17, v18, v19, v20, v70, v71);
  if (!v1) {
    goto LABEL_7;
  }
  uint64_t v57 = __swift_destroy_boxed_opaque_existential_1(v74);
  OUTLINED_FUNCTION_4_68(v57, v58, v59, v60, v61);
LABEL_22:
  uint64_t v62 = __swift_destroy_boxed_opaque_existential_1(v73);
  OUTLINED_FUNCTION_3_81(v62, v63, v64, v65, v66, v67, v68, v69, v70);
LABEL_23:
  OUTLINED_FUNCTION_6_65(&v70);
LABEL_24:
  swift_bridgeObjectRelease();
  return 1LL;
}

uint64_t OUTLINED_FUNCTION_0_71(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t OUTLINED_FUNCTION_3_81( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return outlined init with copy of SignalProviding(v9 - 88, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_4_68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return outlined init with copy of SignalProviding(v5 - 88, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_6_65(void *a1)
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_7_70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  return outlined init with copy of SignalProviding(v10 - 88, (uint64_t)va);
}

void PhoneCallInvite.Builder.__allocating_init()()
{
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t v2 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v3 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_29_1(v2, v4, v5, v3);
  *(void *)(v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for PhoneCallInvite.Builder.inviteType : PhoneCallInvite.Builder( uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 104LL))(v5);
}

void PhoneCallInvite.Builder.inviteType.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_12_57(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType);
  OUTLINED_FUNCTION_25_0(v3, v4, 0LL);
  outlined init with copy of SpeakableString?(v1, a1);
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallInvite.Builder.inviteType.setter(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_12_57(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType);
  OUTLINED_FUNCTION_25_0(v3, v4, 33LL);
  outlined assign with take of SpeakableString?(a1, v1);
  swift_endAccess(v5);
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallInvite.Builder.inviteType.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallInvite.Builder.participants : PhoneCallInvite.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 128LL);
  uint64_t v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

void PhoneCallInvite.Builder.participants.getter()
{
}

void PhoneCallInvite.Builder.participants.setter(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_12_57(OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants);
  OUTLINED_FUNCTION_25_0(v3, v4, 1LL);
  void *v1 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallInvite.Builder.participants.modify(uint64_t a1)
{
}

void PhoneCallInvite.Builder.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v2 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_29_1(v1, v3, v4, v2);
  *(void *)(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  OUTLINED_FUNCTION_2();
}

void PhoneCallInvite.Builder.__allocating_init(inviteType:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_67();
  PhoneCallInvite.Builder.init(inviteType:)(v0);
  OUTLINED_FUNCTION_2();
}

void PhoneCallInvite.Builder.init(inviteType:)(uint64_t a1)
{
  uint64_t v4 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_14(v4, 1LL);
  *(void *)(v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(v2, a1, v5);
  OUTLINED_FUNCTION_14(v2, 0LL);
  OUTLINED_FUNCTION_25_0(v4, (uint64_t)v6, 33LL);
  outlined assign with take of SpeakableString?(v2, v4);
  swift_endAccess(v6);
  OUTLINED_FUNCTION_16();
}

uint64_t PhoneCallInvite.Builder.withInviteType(_:)(uint64_t a1)
{
  return UsoEntity_common_Person.usoPerson.getter();
}

void PhoneCallInvite.Builder.withInviteType(print:speak:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = v10 - v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SpeakableString.init(print:speak:)(a1, a2, a3, a4);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload(v11, 0LL, 1LL, v12);
  (*(void (**)(uint64_t))(*(void *)v4 + 104LL))(v11);
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

uint64_t PhoneCallInvite.Builder.withParticipants(_:)(uint64_t a1)
{
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)v1 + 128LL);
  uint64_t v3 = swift_bridgeObjectRetain(a1);
  v2(v3);
  return swift_retain(v1);
}

void PhoneCallInvite.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhoneCallInvite(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = UsoEntity_common_Person.usoPerson.getter();
  PhoneCallInvite.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

void PhoneCallInvite.__allocating_init(builder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_67();
  PhoneCallInvite.init(builder:)(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for PhoneCallInvite(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallInvite,  (uint64_t)&nominal type descriptor for PhoneCallInvite);
}

uint64_t PhoneCallInvite.Builder.deinit()
{
  return v0;
}

uint64_t PhoneCallInvite.Builder.__deallocating_deinit()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_37();
  return swift_deallocClassInstance(v0, v1, v2);
}

unint64_t static PhoneCallInvite.catTypeName.getter()
{
  return 0xD000000000000010LL;
}

void PhoneCallRecord.mockGlobals.getter()
{
  id v1 = *(id *)(v0 + 16);
  OUTLINED_FUNCTION_60_2();
}

uint64_t PhoneCallInvite.inviteType.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?( v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType,  a1);
}

uint64_t PhoneCallInvite.participants.getter()
{
  return swift_bridgeObjectRetain(*(void *)(v0
                                            + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants));
}

uint64_t *PhoneCallInvite.init(builder:)(uint64_t a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  v1[2] = 0LL;
  (*(void (**)(void))(*(void *)a1 + 96LL))();
  uint64_t v5 = outlined init with take of SpeakableString?( v2,  (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType);
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120LL))(v5);
  if (((*(uint64_t (**)(void))(*v1 + 152))() & 1) == 0)
  {
    uint64_t v6 = (void *)static Log.siriDialogEngine.getter();
    static os_log_type_t.error.getter();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v8 = swift_allocObject(v7, 72LL, 7LL);
    *(_OWORD *)(v8 + 16) = xmmword_31D870;
    uint64_t v15 = *v3;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallInvite.Type);
    uint64_t v10 = String.init<A>(describing:)(&v15, v9);
    uint64_t v12 = v11;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    *(void *)(v8 + 40) = v12;
    os_log(_:dso:log:type:_:)("Building an instance of %s without all required inputs", v14);

    swift_bridgeObjectRelease();
  }

  swift_release(a1);
  return v3;
}

void PhoneCallInvite.__allocating_init(inviteType:participants:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PhoneCallInvite.Builder(0LL);
  uint64_t v7 = OUTLINED_FUNCTION_15_2(v6);
  uint64_t v8 = v7 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_inviteType;
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_29_1(v8, v10, v11, v9);
  *(void *)(v7 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin15PhoneCallInvite7Builder_participants) = _swiftEmptyArrayStorage;
  PhoneCallInvite.Builder.withInviteType(_:)(a1);
  swift_release(v7);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 176LL))(a2);
  swift_release(v7);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(v3 + 144))(v12);
  uint64_t v13 = OUTLINED_FUNCTION_67();
  outlined destroy of SpeakableString?(v13);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for PhoneCallInvite.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallInvite.Builder,  (uint64_t)&nominal type descriptor for PhoneCallInvite.Builder);
}

Swift::Bool __swiftcall PhoneCallInvite.allRequiredInputsHaveValues()()
{
  uint64_t v3 = v2 - v1;
  outlined init with copy of SpeakableString?( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType,  v2 - v1);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  Swift::Bool v5 = __swift_getEnumTagSinglePayload(v3, 1LL, v4) != 1;
  outlined destroy of SpeakableString?(v3);
  return v5;
}

uint64_t PhoneCallInvite.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v8 = a1 == 0x7954657469766E69LL && a2 == 0xEA00000000006570LL;
  if (v8 || (OUTLINED_FUNCTION_7_22(0x7954657469766E69LL, 0xEA00000000006570LL) & 1) != 0)
  {
    outlined init with copy of SpeakableString?( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType,  v4);
    uint64_t v9 = OUTLINED_FUNCTION_26_0();
    if (__swift_getEnumTagSinglePayload(v4, 1LL, v9) == 1)
    {
      uint64_t result = outlined destroy of SpeakableString?(v4);
LABEL_8:
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }

    *(void *)(a3 + 24) = v9;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)a3);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v9);
  }

  else
  {
    if (a1 != 0x7069636974726170LL || a2 != 0xEC00000073746E61LL)
    {
      uint64_t result = OUTLINED_FUNCTION_7_22(0x7069636974726170LL, 0xEC00000073746E61LL);
      if ((result & 1) == 0) {
        goto LABEL_8;
      }
    }

    uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants);
    *(void *)(a3 + 24) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    *(void *)a3 = v13;
    return swift_bridgeObjectRetain();
  }

PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional __swiftcall PhoneCallInvite.CodingKeys.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v3._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallInvite.CodingKeys.init(rawValue:),  v3);
  OUTLINED_FUNCTION_67();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallInvite_CodingKeys_participants;
  }
  else {
    v4.value = PhoneCallFlowDelegatePlugin_PhoneCallInvite_CodingKeys_unknownDefault;
  }
  if (v1) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t PhoneCallInvite.CodingKeys.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x7069636974726170LL;
  }
  else {
    return 0x7954657469766E69LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallInvite.CodingKeys( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallInvite.CodingKeys()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallInvite.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallInvite.CodingKeys( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallInvite.CodingKeys@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallInvite.CodingKeys.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallInvite.CodingKeys( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallInvite.CodingKeys.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneCallInvite.CodingKeys()
{
  return PhoneCallInvite.CodingKeys.rawValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneCallInvite.CodingKeys@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallInvite::CodingKeys_optional *a2@<X8>)
{
  result.value = PhoneCallInvite.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallInvite.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneCallInvite.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneCallInvite.deinit()
{
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType);
  OUTLINED_FUNCTION_20_38(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants);
  return v0;
}

uint64_t PhoneCallInvite.__deallocating_deinit()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_37();
  return swift_deallocClassInstance(v0, v1, v2);
}

uint64_t PhoneCallInvite.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneCallInvite.CodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for PhoneCallInvite.CodingKeys,  &type metadata for PhoneCallInvite.CodingKeys,  v10,  v8,  v9);
  uint64_t v11 = v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType;
  char v19 = 0;
  uint64_t v12 = type metadata accessor for SpeakableString(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v11, &v19, v6, v12, v13);
  if (!v2)
  {
    uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants);
    char v17 = 1;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    uint64_t v15 = _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_0( &lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A],  &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  (uint64_t)&protocol conformance descriptor for DialogPerson,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v17, v6, v14, v15);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

unint64_t lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallInvite.CodingKeys,  &type metadata for PhoneCallInvite.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallInvite.CodingKeys,  &type metadata for PhoneCallInvite.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallInvite.CodingKeys,  &type metadata for PhoneCallInvite.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallInvite.CodingKeys,  &type metadata for PhoneCallInvite.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys);
  }

  return result;
}

uint64_t PhoneCallInvite.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  PhoneCallInvite.init(from:)(a1);
  return v3;
}

id *PhoneCallInvite.init(from:)(void *a1)
{
  uint64_t v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneCallInvite.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  v1[2] = 0LL;
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  unint64_t v9 = lazy protocol witness table accessor for type PhoneCallInvite.CodingKeys and conformance PhoneCallInvite.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for PhoneCallInvite.CodingKeys,  &type metadata for PhoneCallInvite.CodingKeys,  v9,  v7,  v8);
  if (v2)
  {

    uint64_t v15 = type metadata accessor for PhoneCallInvite(0LL);
    swift_deallocPartialClassInstance(v1, v15, *((unsigned int *)*v1 + 12), *((unsigned __int16 *)*v1 + 26));
  }

  else
  {
    type metadata accessor for SpeakableString(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
    OUTLINED_FUNCTION_19_38();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v10, v11, v12, v13, v14);
    outlined init with take of SpeakableString?( v6,  (uint64_t)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_inviteType);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
    _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_0( &lazy protocol witness table cache variable for type [PhonePerson] and conformance <A> [A],  &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  (uint64_t)&protocol conformance descriptor for DialogPerson,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    OUTLINED_FUNCTION_19_38();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_8_4();
    *(id *)((char *)v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15PhoneCallInvite_participants) = v22;
  }

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v1;
}

uint64_t _sSay27PhoneCallFlowDelegatePlugin0A6PersonCGSayxGSEsSERzlWlTm_0( unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhonePerson]);
    lazy protocol witness table accessor for type UUID and conformance UUID( a2,  type metadata accessor for PhonePerson,  a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

void base witness table accessor for Decodable in PhoneCallInvite()
{
}

void base witness table accessor for Encodable in PhoneCallInvite()
{
}

void sub_1A658C(uint64_t a1)
{
}

void sub_1A65B4(uint64_t a1)
{
  uint64_t *v1 = OUTLINED_FUNCTION_9_56(a1);
  OUTLINED_FUNCTION_2();
}

void sub_1A65D4(uint64_t a1)
{
  uint64_t *v1 = OUTLINED_FUNCTION_9_56(a1);
  OUTLINED_FUNCTION_2();
}

uint64_t ObjC metadata update function for PhoneCallInvite()
{
  return type metadata accessor for PhoneCallInvite(0LL);
}

void type metadata completion function for PhoneCallInvite(uint64_t a1)
{
  v4[0] = "\b";
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    void v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
  }

uint64_t ObjC metadata update function for PhoneCallInvite.Builder()
{
  return type metadata accessor for PhoneCallInvite.Builder(0LL);
}

void type metadata completion function for PhoneCallInvite.Builder(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
  }

uint64_t storeEnumTagSinglePayload for PhoneCallInvite.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1A674C + 4 * byte_32D1A5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A6780 + 4 * asc_32D1A0[v4]))();
}

uint64_t sub_1A6780(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1A6790LL);
  }
  return result;
}

uint64_t sub_1A679C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1A67A4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1A67A8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A67B0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallInvite.CodingKeys()
{
  return &type metadata for PhoneCallInvite.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_9_56(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 120LL))();
}

uint64_t OUTLINED_FUNCTION_12_57@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

  ;
}

uint64_t OUTLINED_FUNCTION_20_38@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_23_37()
{
  return v0;
}

uint64_t AnnounceIncomingCallerOutputStrategy.init(announceCallsContext:incomingCallCats:)@<X0>( uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a2 & 1;
  uint64_t result = type metadata accessor for AnnounceIncomingCallCATsSimple(0LL);
  *(void *)(a4 + 24) = result;
  *(void *)(a4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &protocol witness table for AnnounceIncomingCallCATsSimple;
  *(void *)a4 = a3;
  *(void *)(a4 + 40) = a1;
  *(_BYTE *)(a4 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v7;
  return result;
}

uint64_t AnnounceIncomingCallerOutputStrategy.makePromptForConfirmationFlow<A>(app:intentResponse:sharedGlobals:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(v5 + 40);
  char v11 = *(_BYTE *)(v5 + 48);
  id v12 = v10;
  id v13 = a2;
  default argument 3 of PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)();
  uint64_t v15 = v14;
  default argument 5 of IncomingCallActionConfirmationStrategy.init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)((uint64_t *)v45);
  IncomingCallActionConfirmationStrategy.__allocating_init(incomingCallIntentResponse:incomingCallCats:sharedGlobals:announceCallsContext:phoneCommonCats:phoneCallCommonCatPatterns:)( (uint64_t)v13,  v47,  v46,  (uint64_t)v10,  v11,  v15,  v45);
  uint64_t v17 = v16;
  uint64_t v19 = type metadata accessor for AnnounceCallConfirmationStrategy(0LL, a4, a5, v18);
  OUTLINED_FUNCTION_7_34(v19, v20, v21, v22, v23, v24, v25, v26, v43, *(uint64_t *)&v45[0], *((uint64_t *)&v45[0] + 1));
  uint64_t v27 = AnnounceCallConfirmationStrategy.__allocating_init(wrapped:sharedGlobals:)(v17, v47);
  uint64_t v28 = type metadata accessor for IncomingCallActionConfirmation(255LL);
  unint64_t v29 = lazy protocol witness table accessor for type IncomingCallActionConfirmation and conformance IncomingCallActionConfirmation();
  uint64_t v30 = type metadata accessor for BargeInCapablePromptForConfirmationFlow(0LL, a4, v28, v29);
  *(void *)&v46[0] = v13;
  OUTLINED_FUNCTION_7_34(v30, v31, v32, v33, v34, v35, v36, v37, v44, v27, *((uint64_t *)&v45[0] + 1));
  id v38 = v13;
  swift_retain();
  swift_retain();
  swift_getWitnessTable(&protocol conformance descriptor for AnnounceCallConfirmationStrategy<A>, v19);
  BargeInCapablePromptForConfirmationFlow.__allocating_init<A>(itemToConfirm:strategy:sharedGlobals:)();
  uint64_t v40 = v39;
  *(void *)&v47[0] = v39;
  swift_getWitnessTable(&protocol conformance descriptor for BargeInCapablePromptForConfirmationFlow<A, B>, v30);
  uint64_t v41 = Flow.eraseToAnyValueFlow()(v30);
  swift_release(v40);
  swift_release(v17);
  swift_release(v27);
  return v41;
}

ValueMetadata *type metadata accessor for AnnounceIncomingCallerOutputStrategy()
{
  return &type metadata for AnnounceIncomingCallerOutputStrategy;
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.__allocating_init(type:sharedGlobals:startCallCats:ongoingCallCats:startCallCATsSimple:ongoingCallCATsSimple:)()
{
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = swift_allocObject(v1, 112LL, 7LL);
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v10;
  *(_BYTE *)(v13 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  outlined init with take of AppSelectionSignalComponent(v6, v13 + 40);
  *(void *)(v13 + 80) = v4;
  *(void *)(v13 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(void *)(v13 + 96) = v2;
  *(void *)(v13 + 104) = v0;
  return v13;
}

void *EmergencyDuringOngoingCallConfirmationStrategy.type.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  outlined copy of EmergencyDuringOngoingCallPromptType(v1, *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  return v1;
}

uint64_t SharedGlobals.appSelectionState.getter()
{
  return swift_retain(*(void *)(v0 + 88));
}

uint64_t SharedGlobals.phoneAppSelectionSignalsGatherer.getter()
{
  return swift_retain(*(void *)(v0 + 96));
}

uint64_t EmergencyCountdownOutputBuilder.startCallCATsSimple.getter()
{
  return swift_retain(*(void *)(v0 + 104));
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.init(type:sharedGlobals:startCallCats:ongoingCallCats:startCallCATsSimple:ongoingCallCATsSimple:)()
{
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v6;
  *(_BYTE *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  outlined init with take of AppSelectionSignalComponent(v8, v1 + 40);
  *(void *)(v1 + 80) = v4;
  *(void *)(v1 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v0;
  return v1;
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.actionForInput(_:)()
{
  uint64_t v1 = type metadata accessor for Parse(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = outlined init with copy of SignalProviding(v0 + 40, (uint64_t)v10);
  Input.parse.getter(v5);
  char v6 = ContactPromptResponseParser.parseResponse(from:)((uint64_t)v4);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v7 = outlined destroy of ContactPromptResponseParser((uint64_t)v10);
  else {
    return static ActionForInput.ignore()(v7);
  }
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.parseConfirmationResponse(input:)( uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for PhoneError(0LL);
  v3[10] = v4;
  v3[11] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  v3[12] = OUTLINED_FUNCTION_23(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for Parse(0LL);
  v3[13] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v3[14] = v7;
  v3[15] = OUTLINED_FUNCTION_23(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.parseConfirmationResponse(input:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = outlined init with copy of SignalProviding(*(void *)(v0 + 72) + 40LL, v0 + 16);
  Input.parse.getter(v2);
  unsigned __int8 v3 = ContactPromptResponseParser.parseResponse(from:)(v1);
  uint64_t v4 = OUTLINED_FUNCTION_98();
  v5(v4);
  outlined destroy of ContactPromptResponseParser(v0 + 16);
  if (v3 >= 3u)
  {
    uint64_t v11 = *(void **)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 80);
    *uint64_t v11 = 0LL;
    v11[1] = 0LL;
    swift_storeEnumTagMultiPayload(v11, v12, 0LL);
    uint64_t v13 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    swift_allocError(v12, v13, 0LL, 0LL);
    PhoneError.logged()(v14);
    uint64_t v15 = outlined destroy of SingleResultCallHistoryModel((uint64_t)v11, type metadata accessor for PhoneError);
    swift_willThrow(v15, v16, v17, v18, v19, v20, v21, v22);
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_46_0();
    swift_task_dealloc(v11);
  }

  else
  {
    uint64_t v6 = (unsigned int *)*(&off_406FD0 + (char)v3);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = *v6;
    uint64_t v10 = type metadata accessor for ConfirmationResponse(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104LL))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload(v8, 0LL, 1LL, v10);
    SimpleConfirmationResponseProvider.init(_:)(v8);
    swift_task_dealloc(v7);
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)(uint64_t a1)
{
  v2[227] = v1;
  v2[221] = a1;
  uint64_t v3 = type metadata accessor for ResponseMode(0LL);
  v2[233] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v2[234] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[235] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[236] = v6;
  v2[237] = OUTLINED_FUNCTION_23(v6);
  uint64_t v7 = type metadata accessor for YesNoConfirmationModel(0LL);
  v2[238] = v7;
  v2[239] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v5 = static os_log_type_t.debug.getter(v3, v4);
  if (os_log_type_enabled(v3, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v24 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[215] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000029LL,  0x800000000034CB50LL,  &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 215, v0 + 216, v6 + 4);
    _os_log_impl(&dword_0, v3, v5, "#EmergencyDuringOngoingCallConfirmationStrategy %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL);
    OUTLINED_FUNCTION_0_2(v7);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);
  }

  __swift_project_boxed_opaque_existential_1((void *)(v0[227] + 40LL), *(void *)(v0[227] + 64LL));
  uint64_t v8 = OUTLINED_FUNCTION_98();
  v9(v8);
  __swift_project_boxed_opaque_existential_1(v0 + 167, v0[170]);
  uint64_t v10 = OUTLINED_FUNCTION_98();
  uint64_t v12 = v11(v10);
  if (v12)
  {
    uint64_t v13 = v12;
    swift_getObjectType(v12);
    uint64_t v14 = SPHCall.toPhoneCallRecord()();
    swift_unknownObjectRelease(v13);
  }

  else
  {
    uint64_t v14 = 0LL;
  }

  v0[240] = v14;
  uint64_t v15 = v0[227];
  __swift_destroy_boxed_opaque_existential_1(v0 + 167);
  LODWORD(v1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = *(unsigned __int8 *)(v15 + 32);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v17 = swift_allocObject(v16, 48LL, 7LL);
  v0[241] = v17;
  *(_OWORD *)(v17 + 16) = xmmword_31FBC0;
  uint64_t v18 = v0[227];
  if (v15 >= 2)
  {
    uint64_t v22 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple
                                                     + **(void **)(v18 + 96)
                                                     + 800));
    v0[242] = v22;
    *uint64_t v22 = v0;
    v22[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
    return v23();
  }

  else
  {
    uint64_t v19 = *(void **)(v18 + 104);
    v0[248] = v19;
    uint64_t v20 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for OngoingCallCATsSimple + *v19 + 48));
    v0[249] = v20;
    *uint64_t v20 = v0;
    v20[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
    return ((uint64_t (*)(uint64_t))v23)(v14);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 1944) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 195__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v1 = v0[227];
  *(void *)(v0[241] + 32LL) = v0[244];
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for OngoingCallCATsSimple
                                                  + **(void **)(v1 + 104)
                                                  + 16));
  v0[245] = v2;
  void *v2 = v0;
  v2[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return v4(v0[240]);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 196__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 1976) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 2000) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 200__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  void *v0;
  void *v1;
  void *v2;
  uint64_t (*v4)(void);
  uint64_t v1 = (void *)v0[248];
  *(void *)(v0[241] + 32LL) = v0[251];
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for OngoingCallCATsSimple + *v1 + 32));
  v0[252] = v2;
  void *v2 = v0;
  v2[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return OUTLINED_FUNCTION_3_0(v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 2024) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 203__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  v1[258] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v2, v3, v4);
  }

  else
  {
    v1[259] = v1[211];
    v1[260] = v1[212];
    swift_bridgeObjectRetain();
    return swift_asyncLet_get_throwing( v1 + 2,  v1 + 213,  EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:),  v1 + 216);
  }

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 208__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = (void *)(*(void *)v0 + 1416LL);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 2096LL));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v1 = v0[239];
  (*(void (**)(void, void))(v0[236] + 8LL))(v0[237], v0[235]);
  outlined destroy of SingleResultCallHistoryModel(v1, type metadata accessor for YesNoConfirmationModel);
  __swift_destroy_boxed_opaque_existential_1(v0 + 187);
  return swift_asyncLet_finish( v0 + 2,  v0 + 213,  EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:),  v0 + 222);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;
  return swift_asyncLet_finish( v0 + 656,  v0 + 1688,  EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:),  v0 + 1376);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v1 = *(void **)(v0 + 2056);
  uint64_t v2 = *(void *)(v0 + 1864);

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_23_38();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_22_37();
  *(void *)(v1 + 16) = 0LL;
  OUTLINED_FUNCTION_38_1();
  swift_release(v0);
  OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v2 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_23_38();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_22_37();
  *(void *)(v1 + 16) = 0LL;
  OUTLINED_FUNCTION_38_1();
  swift_release(v0);
  OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v2 + 8));
}

{
  uint64_t v0;
  return swift_asyncLet_finish( v0 + 16,  v0 + 1704,  EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:),  v0 + 1536);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;
  return swift_asyncLet_finish( v0 + 656,  v0 + 1688,  EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:),  v0 + 1616);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  void *v0;
  uint64_t v1;
  OUTLINED_FUNCTION_20_39();

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;
  return swift_asyncLet_finish( v0 + 16,  v0 + 1704,  EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:),  v0 + 1296);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  uint64_t v0;
  return swift_asyncLet_finish( v0 + 656,  v0 + 1688,  EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:),  v0 + 1824);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
}

{
  void *v0;
  uint64_t v1;
  OUTLINED_FUNCTION_20_39();

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_3_82();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = OUTLINED_FUNCTION_14_45(a1, a2, a3, a4, v4[247]);
  id v13 = OUTLINED_FUNCTION_28_34(v5, v6, v7, v8, v9, v10, v11, v12, v20, v21);
  v4[256] = (uint64_t)v13;
  v4[257] = v14;
  uint64_t v16 = OUTLINED_FUNCTION_18_46( (uint64_t)v13,  v14,  v15,  (uint64_t)&async function pointer to implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
  OUTLINED_FUNCTION_17_45( v16,  v17,  v18,  (uint64_t)&async function pointer to implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
  return OUTLINED_FUNCTION_11_56();
}

{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v5 = OUTLINED_FUNCTION_14_45(a1, a2, a3, a4, v4[254]);
  id v13 = OUTLINED_FUNCTION_28_34(v5, v6, v7, v8, v9, v10, v11, v12, v20, v21);
  v4[256] = (uint64_t)v13;
  v4[257] = v14;
  uint64_t v16 = OUTLINED_FUNCTION_18_46( (uint64_t)v13,  v14,  v15,  (uint64_t)&async function pointer to implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
  OUTLINED_FUNCTION_17_45( v16,  v17,  v18,  (uint64_t)&async function pointer to implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:));
  return OUTLINED_FUNCTION_11_56();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v23 = v22[260];
  uint64_t v24 = v22[259];
  uint64_t v25 = (void *)v22[257];
  uint64_t v26 = (void *)v22[256];
  uint64_t v27 = v22[239];
  uint64_t v28 = v22[238];
  uint64_t v53 = v22[234];
  uint64_t v54 = v22[233];
  uint64_t v55 = (void *)v22[227];
  uint64_t v29 = v22[213];
  uint64_t v30 = v22[214];
  uint64_t v31 = (void *)(v27 + *(int *)(v28 + 32));
  *uint64_t v31 = 0xD000000000000011LL;
  v31[1] = 0x8000000000346B80LL;
  v22[209] = v24;
  v22[210] = v23;
  swift_bridgeObjectRetain();
  id v32 = v25;
  id v33 = v26;
  Loggable.init(wrappedValue:)(v22 + 209, &type metadata for String);
  unint64_t v34 = type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v35 = v33;
  CodableAceObject.init(wrappedValue:)(v35, v34);
  v22[207] = v29;
  v22[208] = v30;
  Loggable.init(wrappedValue:)(v22 + 207, &type metadata for String);
  CodableAceObject.init(wrappedValue:)(v32, v34);

  v22[200] = v28;
  v22[201] = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel,  type metadata accessor for YesNoConfirmationModel,  (uint64_t)&protocol conformance descriptor for YesNoConfirmationModel);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22 + 197);
  uint64_t v37 = outlined init with copy of YesNoConfirmationModel(v27, (uint64_t)boxed_opaque_existential_1);
  static DialogPhase.confirmation.getter(v37);
  uint64_t v38 = swift_task_alloc(32LL);
  *(void *)(v38 + 16) = v22 + 197;
  OutputGenerationManifest.init(dialogPhase:_:)( v53,  partial apply for closure #1 in static OutputGenerationManifest.yesNoCallConfirmationManifest(model:_:),  v38);
  OUTLINED_FUNCTION_7_8();
  uint64_t v39 = OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
  static ResponseMode.voiceForward.getter(v39);
  OutputGenerationManifest.responseMode.setter(v54);
  __swift_destroy_boxed_opaque_existential_1(v22 + 197);
  uint64_t v40 = v55[8];
  uint64_t v41 = v55[9];
  __swift_project_boxed_opaque_existential_1(v55 + 5, v40);
  (*(void (**)(uint64_t, uint64_t))(v41 + 136))(v40, v41);
  uint64_t v42 = v22[190];
  uint64_t v43 = v22[191];
  __swift_project_boxed_opaque_existential_1(v22 + 187, v42);
  uint64_t v44 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v22[180] = v44;
  v22[181] = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  uint64_t v45 = __swift_allocate_boxed_opaque_existential_1(v22 + 177);
  uint64_t v46 = OUTLINED_FUNCTION_98();
  outlined init with copy of YesNoConfirmationModel(v46, v47);
  swift_storeEnumTagMultiPayload(v45, v44, 7LL);
  uint64_t v48 = *(void *)(v43 + 8);
  uint64_t v49 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1]);
  v22[262] = v49;
  *uint64_t v49 = v22;
  v49[1] = EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v22[221],  v22 + 177,  v22[255],  v22[237],  v42,  v48,  v50,  v51,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)( uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to static LabelTemplates.yes()[1]);
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return static LabelTemplates.yes()();
}

uint64_t implicit closure #2 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  if (v1) {
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)( uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to static LabelTemplates.no()[1]);
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:);
  return static LabelTemplates.no()();
}

uint64_t implicit closure #3 in EmergencyDuringOngoingCallConfirmationStrategy.makePromptForConfirmation(itemToConfirm:)()
{
  if (v1) {
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  *(void *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.deinit()
{
  return v0;
}

uint64_t EmergencyDuringOngoingCallConfirmationStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 112LL, 7LL);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.actionForInput(_:) in conformance EmergencyDuringOngoingCallConfirmationStrategy()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136LL))();
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance EmergencyDuringOngoingCallConfirmationStrategy( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(*(void *)v2 + 144LL);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v9(a1, a2);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:) in conformance EmergencyDuringOngoingCallConfirmationStrategy( uint64_t a1)
{
  uint64_t v4 = *(int **)(*(void *)v1 + 152LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v7(a1);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:) in conformance EmergencyDuringOngoingCallConfirmationStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:) in conformance EmergencyDuringOngoingCallConfirmationStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy();
  *uint64_t v8 = v4;
  v8[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse() in conformance EmergencyDuringOngoingCallConfirmationStrategy( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(a1, a2, a3);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance EmergencyDuringOngoingCallConfirmationStrategy( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()(a1, a2, a3);
}

uint64_t protocol witness for PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:) in conformance EmergencyDuringOngoingCallConfirmationStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)(a1, a2, a3, a4);
}

uint64_t type metadata accessor for EmergencyDuringOngoingCallConfirmationStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin46EmergencyDuringOngoingCallConfirmationStrategy);
}

uint64_t OUTLINED_FUNCTION_3_82()
{
  return swift_task_dealloc(*(void *)(v0 + 1912));
}

uint64_t OUTLINED_FUNCTION_11_56()
{
  return ((uint64_t (*)(void))swift_asyncLet_get_throwing)();
}

uint64_t OUTLINED_FUNCTION_14_45@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)(*(void *)(v5 + 1928) + 4OUTLINED_FUNCTION_25_0(v0 + 16, (uint64_t)v2, 0LL) = a5;
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_17_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_asyncLet_begin(v4, 0LL, v5, a4, 0LL);
}

uint64_t OUTLINED_FUNCTION_18_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_asyncLet_begin(v5, 0LL, v4, a4, 0LL);
}

void OUTLINED_FUNCTION_20_39()
{
}

void OUTLINED_FUNCTION_22_37()
{
}

uint64_t OUTLINED_FUNCTION_23_38()
{
  uint64_t v1 = *(void *)(v0 + 1928);
  *(void *)(v1 + 16) = 0LL;
  return swift_release(v1);
}

  ;
}

id OUTLINED_FUNCTION_28_34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 2040) = a10;
  return static SiriPhoneActionFactory.makeConfirmAndRejectActions()();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional __swiftcall StartCallCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  return result;
}

uint64_t StartCallCATsSimple.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A825C + 4 * word_32D530[a1]))( 0xD000000000000014LL,  0x80000000003438F0LL);
}

void sub_1A825C()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.Properties(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::Properties_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.Properties()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.Properties.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.confirmApp(appName:isPhoneApp:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmApp(appName:isPhoneApp:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_25_11(v3);
  uint64_t v5 = OUTLINED_FUNCTION_7_9(v4, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  uint64_t v8 = OUTLINED_FUNCTION_3_22(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  OUTLINED_FUNCTION_43_12();
  *(void *)(v1 + 120) = &type metadata for Bool;
  *(_BYTE *)(v1 + 96) = v11;
  uint64_t v12 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v12;
  OUTLINED_FUNCTION_30(v12, (uint64_t)StartCallCATs.confirmApp(appName:isPhoneApp:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v13 = OUTLINED_FUNCTION_46_8(20LL);
  return OUTLINED_FUNCTION_12_28(v13, v14, v15, v16);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmAppDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmAppDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmAppDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

unint64_t StartCallCATsSimple.ConfirmAppDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000014LL;
  }
  else {
    return 0xD000000000000017LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.ConfirmAppDialogIds( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.ConfirmAppDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmAppDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmAppDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmAppDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmAppDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  unint64_t *v0 = StartCallCATsSimple.ConfirmAppDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmAppAsLabels(appName:isPhoneApp:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 128LL);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D880);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  OUTLINED_FUNCTION_43_12();
  *(void *)(v0 + 120) = &type metadata for Bool;
  *(_BYTE *)(v0 + 96) = v10;
  uint64_t v11 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v11);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v12 = OUTLINED_FUNCTION_38_20(20LL);
  return OUTLINED_FUNCTION_7_59(v12, v13, v14, v15, v16, v17);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmAppDialogIds,  &type metadata for StartCallCATsSimple.ConfirmAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmAppDialogIds,  &type metadata for StartCallCATsSimple.ConfirmAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmAppDialogIds and conformance StartCallCATsSimple.ConfirmAppDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.confirmCallCapability(callCapability:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmCallCapability(callCapability:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_141(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  char v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(31LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmCallCapabilityDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmCallCapabilityDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmCallCapabilityDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void StartCallCATsSimple.ConfirmCallCapabilityDialogIds.rawValue.getter()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmCallCapabilityDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmCallCapabilityDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmCallCapabilityDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  void *v0 = v1;
  v0[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.confirmCallCapabilityAsLabels(callCapability:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmCallCapabilityAsLabels(callCapability:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_141(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(31LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.ConfirmCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.ConfirmCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmCallCapabilityDialogIds and conformance StartCallCATsSimple.ConfirmCallCapabilityDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v6 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_12_0(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_8_2(v5, 320LL);
  v2[7] = v6;
  uint64_t v7 = OUTLINED_FUNCTION_92_8(v6, (__n128)xmmword_328A80);
  v7[3].n128_u8[0] = v1;
  v7[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[5].n128_u64[0] = v4 - 8;
  uint64_t v8 = OUTLINED_FUNCTION_275_0((uint64_t)v7, (uint64_t)"contactToConfirm");
  if (v0)
  {
    uint64_t v8 = type metadata accessor for DialogPerson(v8);
  }

  else
  {
    v6[6].n128_u64[1] = 0LL;
    v6[7].n128_u64[0] = 0LL;
  }

  uint64_t v9 = v2[3];
  v6[6].n128_u64[0] = v0;
  v6[7].n128_u64[1] = v8;
  v6[8].n128_u64[0] = v4;
  uint64_t v10 = OUTLINED_FUNCTION_274((uint64_t)"redactedContactToConfirm");
  if (v9)
  {
    uint64_t v10 = type metadata accessor for DialogPerson(v10);
  }

  else
  {
    v6[9].n128_u64[1] = 0LL;
    v6[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_135_5(v10);
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_116_6();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v11);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_144_4(v12);
  if (v13)
  {
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v6[19].n128_u64[1] = v3;
    uint64_t v14 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v14);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  uint64_t v15 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  _BYTE v2[8] = v15;
  *uint64_t v15 = v2;
  v15[1] = StartCallCATsSimple.confirmContacts(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  uint64_t v16 = OUTLINED_FUNCTION_21_19(v4 + 1);
  return OUTLINED_FUNCTION_191_0(v16, v17, (uint64_t)v6, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_106_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmContactsDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmContactsDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A8F58 + 4 * byte_32D5B8[a1]))( 0xD000000000000014LL,  0x8000000000344940LL);
}

unint64_t sub_1A8F58()
{
  return OUTLINED_FUNCTION_13_9(23LL);
}

void sub_1A8FBC()
{
}

void sub_1A8FCC()
{
}

void sub_1A8FDC()
{
}

void sub_1A8FEC()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.ConfirmContactsDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmContactsDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmContactsDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.confirmContactsAsLabels(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v6 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_12_0(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmContactsAsLabels(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:)()
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_8_2(v5, 320LL);
  v2[7] = v6;
  uint64_t v7 = OUTLINED_FUNCTION_92_8(v6, (__n128)xmmword_328A80);
  v7[3].n128_u8[0] = v1;
  v7[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[5].n128_u64[0] = v4 - 8;
  uint64_t v8 = OUTLINED_FUNCTION_275_0((uint64_t)v7, (uint64_t)"contactToConfirm");
  if (v0)
  {
    uint64_t v8 = type metadata accessor for DialogPerson(v8);
  }

  else
  {
    v6[6].n128_u64[1] = 0LL;
    v6[7].n128_u64[0] = 0LL;
  }

  uint64_t v9 = v2[3];
  v6[6].n128_u64[0] = v0;
  v6[7].n128_u64[1] = v8;
  v6[8].n128_u64[0] = v4;
  uint64_t v10 = OUTLINED_FUNCTION_274((uint64_t)"redactedContactToConfirm");
  if (v9)
  {
    uint64_t v10 = type metadata accessor for DialogPerson(v10);
  }

  else
  {
    v6[9].n128_u64[1] = 0LL;
    v6[10].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_135_5(v10);
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_116_6();
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v11);
  uint64_t v12 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_144_4(v12);
  if (v13)
  {
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
    outlined destroy of SpeakableString?(v1, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v6[19].n128_u64[1] = v3;
    uint64_t v14 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_204_0((uint64_t)v14);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_95_1();
  }

  uint64_t v15 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  _BYTE v2[8] = v15;
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds();
  *uint64_t v15 = v2;
  v15[1] = StartCallCATsSimple.confirmContactsAsLabels(isFaceTime:contactToConfirm:redactedContactToConfirm:isTopMatchConfirmation:isFoundInAppConfirmation:inferenceSource:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_133_6( v16,  v17,  (uint64_t)v6,  (uint64_t)&type metadata for StartCallCATsSimple.ConfirmContactsDialogIds,  v18,  v20);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_106_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmContactsDialogIds,  &type metadata for StartCallCATsSimple.ConfirmContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmContactsDialogIds,  &type metadata for StartCallCATsSimple.ConfirmContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmContactsDialogIds and conformance StartCallCATsSimple.ConfirmContactsDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.confirmDestinationType(destinationType:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmDestinationType(destinationType:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  unint64_t v4 = OUTLINED_FUNCTION_142_4(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(32LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmDestinationTypeDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmDestinationTypeDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmDestinationTypeDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmDestinationTypeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmDestinationTypeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmDestinationTypeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.confirmDestinationTypeAsLabels(destinationType:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmDestinationTypeAsLabels(destinationType:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_142_4(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(32LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.ConfirmDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.ConfirmDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmDestinationTypeDialogIds and conformance StartCallCATsSimple.ConfirmDestinationTypeDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.confirmPreferredCallProvider(preferredCallProvider:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmPreferredCallProvider(preferredCallProvider:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_24_6(v3, (__n128)xmmword_31D870);
  uint64_t v5 = OUTLINED_FUNCTION_32_3((uint64_t)v4, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_27_6(v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  uint64_t v8 = OUTLINED_FUNCTION_3_22(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    unint64_t v10 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  uint64_t v11 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD000000000000026LL);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmPreferredCallProviderDialogIds_optional __swiftcall StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.rawValue.getter()
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmPreferredCallProviderDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ConfirmPreferredCallProviderDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds()
{
  void *v0 = v1;
  v0[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.confirmPreferredCallProviderAsLabels(preferredCallProvider:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.confirmPreferredCallProviderAsLabels(preferredCallProvider:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_24_6(v2, (__n128)xmmword_31D870);
  uint64_t v4 = OUTLINED_FUNCTION_32_3((uint64_t)v3, (uint64_t)"preferredCallProvider");
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_6();
  return OUTLINED_FUNCTION_8_13(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds and conformance StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateApps(isOnlyPhoneAndFaceTime:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateApps(isOnlyPhoneAndFaceTime:));
}

uint64_t StartCallCATsSimple.disambiguateApps(isOnlyPhoneAndFaceTime:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v2 + 40) = 0x8000000000344AB0LL;
  *(void *)(v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v3 = OUTLINED_FUNCTION_76_0( v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  uint64_t v11 = v4;
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  uint64_t v6 = (void *)swift_task_alloc(v3);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *uint64_t v6 = v0;
  v6[1] = AddCallParticipantCATsSimple.promptForParticipant(isUnsupportedFollowup:);
  uint64_t v7 = OUTLINED_FUNCTION_225(0xD00000000000001ALL);
  return OUTLINED_FUNCTION_60_7(v7, v8, v9, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateAppsDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateAppsDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.DisambiguateAppsDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000016LL;
  }
  else {
    return 0x32676F6C616964LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateAppsDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateAppsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.DisambiguateAppsDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.disambiguateAppsAsLabels(isOnlyPhoneAndFaceTime:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateAppsAsLabels(isOnlyPhoneAndFaceTime:));
}

uint64_t StartCallCATsSimple.disambiguateAppsAsLabels(isOnlyPhoneAndFaceTime:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_200_1(v3, (uint64_t)"isOnlyPhoneAndFaceTime");
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  uint64_t v5 = OUTLINED_FUNCTION_76_0( v4,  (uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  uint64_t v13 = v6;
  *(void *)(v1 + 24) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  uint64_t v8 = swift_task_alloc(v5);
  OUTLINED_FUNCTION_162(v8);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds();
  void *v0 = v1;
  v0[1] = AddCallParticipantCATsSimple.promptForParticipantAsLabels(isUnsupportedFollowup:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( v9,  v10,  v3,  (uint64_t)&type metadata for StartCallCATsSimple.DisambiguateAppsDialogIds,  v11,  v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateAppsDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateAppsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateAppsDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateAppsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsDialogIds and conformance StartCallCATsSimple.DisambiguateAppsDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:));
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceMode(appNames:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_162(v3);
  OUTLINED_FUNCTION_101_5(v4, (__n128)xmmword_31D870);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_255_0(v5);
  OUTLINED_FUNCTION_19_0();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v1 + 40) = v6;
  OUTLINED_FUNCTION_30(v6, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_60_7(0xD000000000000023LL, v7, v0, v9);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsVoiceModeDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

unint64_t StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000013LL;
  }
  else {
    return 0xD000000000000018LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsVoiceModeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateAppsVoiceModeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  unint64_t *v0 = StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:));
}

uint64_t StartCallCATsSimple.disambiguateAppsVoiceModeAsLabels(appNames:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_162(v3);
  OUTLINED_FUNCTION_101_5(v4, (__n128)xmmword_31D870);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SpeakableString]);
  OUTLINED_FUNCTION_255_0(v5);
  OUTLINED_FUNCTION_19_0();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v1 + 40) = v6;
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds();
  *uint64_t v6 = v1;
  v6[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_1_4( 0xD000000000000023LL,  v7,  v0,  (uint64_t)&type metadata for StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds,  v8,  v10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds and conformance StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateCallCapability()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.DisambiguateCallCapabilityDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateCallCapabilityDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.disambiguateCallCapabilityAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(36LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateCallCapabilityDialogIds and conformance StartCallCATsSimple.DisambiguateCallCapabilityDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateContacts(requestedRelationship:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.disambiguateContacts(requestedRelationship:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_24_6(v3, (__n128)xmmword_31D870);
  uint64_t v5 = OUTLINED_FUNCTION_32_3((uint64_t)v4, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_27_6(v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  uint64_t v8 = OUTLINED_FUNCTION_3_22(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  uint64_t v11 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v11;
  OUTLINED_FUNCTION_30(v11, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD00000000000001ELL);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

unint64_t StartCallCATsSimple.DisambiguateContactsDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000018LL;
  }
  else {
    return 0xD000000000000013LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  unint64_t *v0 = StartCallCATsSimple.DisambiguateContactsDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.disambiguateContactsAsLabels(requestedRelationship:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.disambiguateContactsAsLabels(requestedRelationship:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  unint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_24_6(v2, (__n128)xmmword_31D870);
  uint64_t v4 = OUTLINED_FUNCTION_32_3((uint64_t)v3, (uint64_t)"requestedRelationship");
  OUTLINED_FUNCTION_27_6(v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_6();
  return OUTLINED_FUNCTION_8_13(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsDialogIds and conformance StartCallCATsSimple.DisambiguateContactsDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:)()
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 128LL);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_25_11(v6);
  OUTLINED_FUNCTION_42_1(v7, (__n128)xmmword_31D880);
  if (v4)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState(0LL);
    uint64_t v9 = v4;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_32_23();
  }

  OUTLINED_FUNCTION_154_4(v8, v9);
  uint64_t v10 = OUTLINED_FUNCTION_129_5(0x800000000034BBA0LL);
  if (v0)
  {
    uint64_t v10 = type metadata accessor for DialogPerson(v10);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v10);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v11;
  *uint64_t v11 = v1;
  v11[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  uint64_t v12 = OUTLINED_FUNCTION_40(v3 + 22);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

void StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergencyAsLabels(device:nonLocalEmergencyContact:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsForeignEmergencyAsLabels(device:nonLocalEmergencyContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsForeignEmergencyAsLabels(device:nonLocalEmergencyContact:)()
{
  char v3 = *(void **)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_42_1(v6, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v7 = type metadata accessor for SirikitDeviceState(0LL);
    uint64_t v8 = (uint64_t)v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  OUTLINED_FUNCTION_154_4(v7, v8);
  uint64_t v9 = OUTLINED_FUNCTION_129_5(0x800000000034BBA0LL);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for DialogPerson(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds();
  *char v3 = v1;
  v3[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_6();
  return OUTLINED_FUNCTION_8_13(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)( char a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = v3;
  *(_BYTE *)(v4 + 57) = a2;
  *(_BYTE *)(v4 + 56) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsHandles(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)()
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 176LL);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_27(v6);
  v7[2].n128_u64[0] = v4 | 2;
  v7[2].n128_u64[1] = 0x8000000000349250LL;
  v7[3].n128_u8[0] = v1;
  v7[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v7[5].n128_u64[0] = v4 + 17;
  uint64_t v8 = OUTLINED_FUNCTION_217(v7, (unint64_t)&type metadata for Bool, (__n128)xmmword_320080);
  uint64_t v9 = OUTLINED_FUNCTION_272_0((uint64_t)v8, (uint64_t)"requestedContact");
  if (v0)
  {
    uint64_t v9 = type metadata accessor for DialogPerson(v9);
  }

  else
  {
    v3[19] = 0LL;
    v3[20] = 0LL;
  }

  v3[18] = v0;
  v3[21] = v9;
  OUTLINED_FUNCTION_35_23();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v2 + 40) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  uint64_t v11 = OUTLINED_FUNCTION_40_16(v4 + 21);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsHandlesDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_38_2();
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsHandlesDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsHandlesDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.rawValue.getter(v1);
  void *v0 = v2;
  v0[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.disambiguateContactsHandlesAsLabels(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)( char a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = v3;
  *(_BYTE *)(v4 + 57) = a2;
  *(_BYTE *)(v4 + 56) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsHandlesAsLabels(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:));
}

uint64_t StartCallCATsSimple.disambiguateContactsHandlesAsLabels(isRequestForHandle:isPhoneNumberHandleDisambiguation:requestedContact:)()
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 176LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_27(v5);
  v6[2].n128_u64[0] = v3 | 2;
  v6[2].n128_u64[1] = 0x8000000000349250LL;
  v6[3].n128_u8[0] = v1;
  v6[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v6[5].n128_u64[0] = v3 + 17;
  uint64_t v7 = OUTLINED_FUNCTION_217(v6, (unint64_t)&type metadata for Bool, (__n128)xmmword_320080);
  uint64_t v8 = OUTLINED_FUNCTION_272_0((uint64_t)v7, (uint64_t)"requestedContact");
  if (v0)
  {
    uint64_t v8 = type metadata accessor for DialogPerson(v8);
  }

  else
  {
    v2[19] = 0LL;
    v2[20] = 0LL;
  }

  v2[18] = v0;
  v2[21] = v8;
  OUTLINED_FUNCTION_35_23();
  uint64_t v9 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_155_3();
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsHandlesDialogIds and conformance StartCallCATsSimple.DisambiguateContactsHandlesDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergency(localEmergencyServices:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsLocalEmergency(localEmergencyServices:));
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergency(localEmergencyServices:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_15_3(v11);
  uint64_t v13 = OUTLINED_FUNCTION_162(v12);
  *(_OWORD *)(v13 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_200_1(v13, (uint64_t)"localEmergencyServices");
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_255_0(v14);
  OUTLINED_FUNCTION_189_1();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v10 + 40) = v15;
  OUTLINED_FUNCTION_30(v15, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  uint64_t v16 = OUTLINED_FUNCTION_225(0xD00000000000002CLL);
  return OUTLINED_FUNCTION_12_28(v16, v17, v18, a10);
}

void StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergencyAsLabels(localEmergencyServices:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsLocalEmergencyAsLabels(localEmergencyServices:));
}

uint64_t StartCallCATsSimple.disambiguateContactsLocalEmergencyAsLabels(localEmergencyServices:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_15_3(v12);
  uint64_t v14 = OUTLINED_FUNCTION_162(v13);
  *(_OWORD *)(v14 + 16) = xmmword_31D870;
  OUTLINED_FUNCTION_200_1(v14, (uint64_t)"localEmergencyServices");
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_255_0(v15);
  OUTLINED_FUNCTION_189_1();
  uint64_t v16 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v11 + 40) = v16;
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds();
  *uint64_t v16 = v11;
  v16[1] = StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( v17,  v18,  v10,  (uint64_t)&type metadata for StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds,  v19,  a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds and conformance StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsPartialList()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(41LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsPartialListDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsPartialListDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsPartialListDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsPartialListDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsPartialListDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsPartialListDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsPartialListAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(41LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsPartialListDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsPartialListDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsPartialListDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsPartialListDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsPartialListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsPartialListDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoList(personsToDisambiguate:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsVoxNoList(personsToDisambiguate:));
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoList(personsToDisambiguate:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_35_23();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  uint64_t v8 = OUTLINED_FUNCTION_40_16(0xD000000000000027LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsVoxNoListDialogIds_optional __swiftcall StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x65766947656D6153LL;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsVoxNoListDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::DisambiguateContactsVoxNoListDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoListAsLabels(personsToDisambiguate:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.disambiguateContactsVoxNoListAsLabels(personsToDisambiguate:));
}

uint64_t StartCallCATsSimple.disambiguateContactsVoxNoListAsLabels(personsToDisambiguate:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_20(v5, (uint64_t)"personsToDisambiguate");
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_35_23();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_155_3();
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds and conformance StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguateDestinationType()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(37LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.DisambiguateDestinationTypeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguateDestinationTypeDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.disambiguateDestinationTypeAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(37LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguateDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.DisambiguateDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguateDestinationTypeDialogIds and conformance StartCallCATsSimple.DisambiguateDestinationTypeDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.disambiguatePreferredCallProvider()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(43LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.disambiguatePreferredCallProviderAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(43LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds and conformance StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.emergencyCountdown()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(28LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::EmergencyCountdownDialogIds_optional __swiftcall StartCallCATsSimple.EmergencyCountdownDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.EmergencyCountdownDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.EmergencyCountdownDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x676E696C6C6163LL;
  }
  if (a1 == 1) {
    return 0xD000000000000011LL;
  }
  return 7565171LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::EmergencyCountdownDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.EmergencyCountdownDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::EmergencyCountdownDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.EmergencyCountdownDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.EmergencyCountdownDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.emergencyCountdownAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(28LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.EmergencyCountdownDialogIds,  &type metadata for StartCallCATsSimple.EmergencyCountdownDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.EmergencyCountdownDialogIds,  &type metadata for StartCallCATsSimple.EmergencyCountdownDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.EmergencyCountdownDialogIds and conformance StartCallCATsSimple.EmergencyCountdownDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCode(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCode(device:));
}

uint64_t StartCallCATsSimple.errorWithCode(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(23LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeAsLabels(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeAsLabels(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(23LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabled(device:isEmergency:)(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeAirplaneModeEnabled(device:isEmergency:));
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabled(device:isEmergency:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_98_8(v6);
  OUTLINED_FUNCTION_268_0(v7);
  OUTLINED_FUNCTION_2_3();
  unint64_t v8 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v8;
  OUTLINED_FUNCTION_30(v8, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  unint64_t v9 = OUTLINED_FUNCTION_102(42LL);
  return OUTLINED_FUNCTION_12_28(v9, v10, v11, v12);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAirplaneModeEnabledDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAirplaneModeEnabledDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAirplaneModeEnabledDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabledAsLabels(device:isEmergency:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeAirplaneModeEnabledAsLabels(device:isEmergency:));
}

uint64_t StartCallCATsSimple.errorWithCodeAirplaneModeEnabledAsLabels(device:isEmergency:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_98_8(v6);
  OUTLINED_FUNCTION_268_0(v7);
  OUTLINED_FUNCTION_2_3();
  uint64_t v8 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v8);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v9 = OUTLINED_FUNCTION_55_11(42LL);
  return OUTLINED_FUNCTION_7_59(v9, v10, v11, v12, v13, v14);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAppConfigurationRequired(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.errorWithCodeAppConfigurationRequired(appName:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    unint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  unint64_t v11 = OUTLINED_FUNCTION_46_8(47LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeAppConfigurationRequiredDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeAppConfigurationRequiredAsLabels(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.errorWithCodeAppConfigurationRequiredAsLabels(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(47LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds and conformance StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgress(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeCallInProgress(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgress(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  char v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(37LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallInProgressDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:);
  StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallInProgressDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallInProgressDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgressAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeCallInProgressAsLabels(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallInProgressAsLabels(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(37LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallRinging(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeCallRinging(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallRinging(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(34LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallRingingDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.init(rawValue:);
  StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds.init(rawValue:)( Swift::String a1, Swift::OpaquePointer a2)
{
}

void StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.rawValue.getter()
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallRingingDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeCallRingingDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds()
{
  void *v0 = v1;
  v0[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.errorWithCodeCallRingingAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeCallRingingAsLabels(device:));
}

uint64_t StartCallCATsSimple.errorWithCodeCallRingingAsLabels(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(34LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeCallingServiceNotAvailable()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(49LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.errorWithCodeCallingServiceNotAvailableAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(49LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds and conformance StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeContactNotSupportedByApp(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.errorWithCodeContactNotSupportedByApp(appName:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  unint64_t v11 = OUTLINED_FUNCTION_46_8(47LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

void StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.errorWithCodeContactNotSupportedByAppAsLabels(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.errorWithCodeContactNotSupportedByAppAsLabels(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(47LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds and conformance StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:));
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabled(intent:contacts:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = v0[3];
  v1[6] = v7;
  v1[9] = v6;
  v1[10] = 0x73746361746E6F63LL;
  uint64_t v9 = OUTLINED_FUNCTION_129_5(0xE800000000000000LL);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  unint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  v0[6] = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(49LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDownTimeRestrictionEnabledDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDownTimeRestrictionEnabledDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeDownTimeRestrictionEnabledDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabledAsLabels(intent:contacts:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabledAsLabels(intent:contacts:));
}

uint64_t StartCallCATsSimple.errorWithCodeDownTimeRestrictionEnabledAsLabels(intent:contacts:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_25_11(v4);
  OUTLINED_FUNCTION_136_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_142_0();
    uint64_t v7 = v2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v8 = *(void *)(v0 + 24);
  v1[6] = v7;
  v1[9] = v6;
  v1[10] = 0x73746361746E6F63LL;
  uint64_t v9 = OUTLINED_FUNCTION_129_5(0xE800000000000000LL);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v11 = OUTLINED_FUNCTION_38_20(49LL);
  return OUTLINED_FUNCTION_7_59(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeNoValidNumber(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.errorWithCodeNoValidNumber(appName:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(36LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeNoValidNumberDialogIds_optional __swiftcall StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeNoValidNumberDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::ErrorWithCodeNoValidNumberDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeNoValidNumberAsLabels(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.errorWithCodeNoValidNumberAsLabels(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(36LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds and conformance StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeScreenTimeRestrictionEnabled()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(51LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.errorWithCodeScreenTimeRestrictionEnabledAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(51LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds and conformance StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.errorWithCodeUnableToHandOff()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(38LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.errorWithCodeUnableToHandOffAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(38LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds,  &type metadata for StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds and conformance StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.finalLowConfidenceResponse()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.FinalLowConfidenceResponseDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.FinalLowConfidenceResponseDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.finalLowConfidenceResponseAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(36LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.FinalLowConfidenceResponseDialogIds,  &type metadata for StartCallCATsSimple.FinalLowConfidenceResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.FinalLowConfidenceResponseDialogIds,  &type metadata for StartCallCATsSimple.FinalLowConfidenceResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.FinalLowConfidenceResponseDialogIds and conformance StartCallCATsSimple.FinalLowConfidenceResponseDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.genericError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.genericError(device:));
}

uint64_t StartCallCATsSimple.genericError(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  unint64_t v8 = OUTLINED_FUNCTION_102(22LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::GenericErrorDialogIds_optional __swiftcall StartCallCATsSimple.GenericErrorDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.GenericErrorDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::GenericErrorDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.GenericErrorDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::GenericErrorDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.GenericErrorDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.genericErrorAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.genericErrorAsLabels(device:));
}

uint64_t StartCallCATsSimple.genericErrorAsLabels(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(22LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.GenericErrorDialogIds,  &type metadata for StartCallCATsSimple.GenericErrorDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.GenericErrorDialogIds,  &type metadata for StartCallCATsSimple.GenericErrorDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.GenericErrorDialogIds and conformance StartCallCATsSimple.GenericErrorDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.hangUpTip(device:hintIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.hangUpTip(device:hintIdentifier:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 128LL);
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_139_5(v15);
  uint64_t v17 = OUTLINED_FUNCTION_35_0(v16, (__n128)xmmword_31D880);
  if (v13)
  {
    uint64_t v17 = type metadata accessor for SirikitDeviceState(v17);
  }

  else
  {
    v12[7] = 0LL;
    v12[8] = 0LL;
  }

  OUTLINED_FUNCTION_83_11(v17);
  OUTLINED_FUNCTION_29_16(v19, v18, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v20 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_47_14(v20);
  if (v21)
  {
    uint64_t v22 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v22, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v12[15] = v10;
    uint64_t v23 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v23);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v24 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v11 + 56) = v24;
  OUTLINED_FUNCTION_53_7(v24, (uint64_t)StartCallCATs.hangUpTip(device:hintIdentifier:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_25_5(0xD000000000000013LL, v25, (uint64_t)v12, a10);
}

void StartCallCATsSimple.HangUpTipDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.HangUpTipDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.HangUpTipDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.hangUpTipAsLabels(device:hintIdentifier:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 128LL);
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_139_5(v15);
  uint64_t v17 = OUTLINED_FUNCTION_35_0(v16, (__n128)xmmword_31D880);
  if (v13)
  {
    uint64_t v17 = type metadata accessor for SirikitDeviceState(v17);
  }

  else
  {
    v12[7] = 0LL;
    v12[8] = 0LL;
  }

  OUTLINED_FUNCTION_83_11(v17);
  OUTLINED_FUNCTION_29_16(v19, v18, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v20 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_47_14(v20);
  if (v21)
  {
    uint64_t v22 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v22, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    v12[15] = v10;
    uint64_t v23 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v23);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v24 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_68_2(v24);
  lazy protocol witness table accessor for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:));
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_8_13( 0xD000000000000013LL,  v25,  (uint64_t)v12,  (uint64_t)&type metadata for StartCallCATsSimple.HangUpTipDialogIds,  v26,  a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.HangUpTipDialogIds,  &type metadata for StartCallCATsSimple.HangUpTipDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.HangUpTipDialogIds,  &type metadata for StartCallCATsSimple.HangUpTipDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.HangUpTipDialogIds and conformance StartCallCATsSimple.HangUpTipDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.intentConfirmation(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentConfirmation(intent:));
}

uint64_t StartCallCATsSimple.intentConfirmation(intent:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_43_11(v5, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(28LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationDialogIds_optional __swiftcall StartCallCATsSimple.IntentConfirmationDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.IntentConfirmationDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000012LL;
  }
  else {
    return 0x436D7269666E6F43LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentConfirmationDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.IntentConfirmationDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.intentConfirmationAsLabels(intent:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentConfirmationAsLabels(intent:));
}

uint64_t StartCallCATsSimple.intentConfirmationAsLabels(intent:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_43_11(v5, 0x746E65746E69LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(28LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationDialogIds and conformance StartCallCATsSimple.IntentConfirmationDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
}

uint64_t StartCallCATsSimple.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 176LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_320080);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  char v10 = *(_BYTE *)(v1 + 64);
  *(void *)(v2 + 96) = v0;
  *(void *)(v2 + 136) = 0x800000000034BC00LL;
  *(void *)(v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v2 + 144) = v10;
  *(void *)(v2 + 120) = v9;
  *(void *)(v2 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000016LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v11;
  OUTLINED_FUNCTION_53_7(v11, (uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
  uint64_t v12 = OUTLINED_FUNCTION_40(0xD000000000000025LL);
  return OUTLINED_FUNCTION_25_5(v12, v13, v14, v15);
}

void StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

unint64_t StartCallCATsSimple.IntentConfirmationEmergencyDialogIds.rawValue.getter()
{
  return OUTLINED_FUNCTION_13_9(18LL);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds( void *a1@<X8>)
{
  *a1 = 0xD000000000000012LL;
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyAsLabels(intent:device:shouldPlayTTSCountdown:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentConfirmationEmergencyAsLabels(intent:device:shouldPlayTTSCountdown:));
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyAsLabels(intent:device:shouldPlayTTSCountdown:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 176LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_320080);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  char v10 = *(_BYTE *)(v1 + 64);
  *(void *)(v2 + 96) = v0;
  *(void *)(v2 + 136) = 0x800000000034BC00LL;
  *(void *)(v2 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v2 + 144) = v10;
  *(void *)(v2 + 120) = v9;
  *(void *)(v2 + 12__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0xD000000000000016LL;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_35_4(v11);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_6();
  return OUTLINED_FUNCTION_8_13(v12, v13, v14, v15, v16, v17);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationEmergencyDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationEmergencyDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyVoiceOnly()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(46LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

unint64_t StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds.rawValue.getter()
{
  return OUTLINED_FUNCTION_13_9(24LL);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds( void *a1@<X8>)
{
  *a1 = 0xD000000000000018LL;
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.intentConfirmationEmergencyVoiceOnlyAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(46LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds and conformance StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:));
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:)()
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 176LL);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_139_5(v7);
  OUTLINED_FUNCTION_136_0(v8, (__n128)xmmword_320080);
  if (v5)
  {
    uint64_t v9 = OUTLINED_FUNCTION_142_0();
    uint64_t v10 = v5;
  }

  else
  {
    uint64_t v10 = 0LL;
    uint64_t v9 = 0LL;
    v3[7] = 0LL;
    v3[8] = 0LL;
  }

  OUTLINED_FUNCTION_89_9(v9, v10);
  if (v0)
  {
    uint64_t v11 = type metadata accessor for PhonePersonList();
    uint64_t v12 = v0;
  }

  else
  {
    uint64_t v12 = 0LL;
    uint64_t v11 = 0LL;
    v3[13] = 0LL;
    void v3[14] = 0LL;
  }

  OUTLINED_FUNCTION_153_5(v11, v12);
  uint64_t v13 = OUTLINED_FUNCTION_273((uint64_t)"restrictedContacts");
  if (v2)
  {
    uint64_t v13 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v3[19] = 0LL;
    v3[20] = 0LL;
  }

  v3[18] = v2;
  v3[21] = v13;
  uint64_t v14 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + 1);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_95_1();
  uint64_t v15 = (void *)swift_task_alloc(v14);
  *(void *)(v1 + 56) = v15;
  *uint64_t v15 = v1;
  v15[1] = StartCallCATsSimple.intentConfirmationWithRestrictedContacts(intent:allowedContacts:restrictedContacts:);
  uint64_t v16 = OUTLINED_FUNCTION_205_2(v4 + 32);
  return OUTLINED_FUNCTION_18_39(v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

{
  uint64_t (*v0)(void);
  swift_bridgeObjectRelease();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_174_2();
  return OUTLINED_FUNCTION_3_0(v0);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationWithRestrictedContactsDialogIds_optional __swiftcall StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

unint64_t StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.rawValue.getter( char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0xD000000000000019LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationWithRestrictedContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentConfirmationWithRestrictedContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  unint64_t *v0 = StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:));
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v13 = *(void **)(v10 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 176LL);
  uint64_t v16 = (__n128 *)OUTLINED_FUNCTION_139_5(v15);
  OUTLINED_FUNCTION_136_0(v16, (__n128)xmmword_320080);
  if (v13)
  {
    uint64_t v17 = OUTLINED_FUNCTION_142_0();
    uint64_t v18 = (uint64_t)v13;
  }

  else
  {
    uint64_t v18 = 0LL;
    uint64_t v17 = 0LL;
    v12[7] = 0LL;
    v12[8] = 0LL;
  }

  OUTLINED_FUNCTION_89_9(v17, v18);
  if (v9)
  {
    uint64_t v19 = type metadata accessor for PhonePersonList();
    uint64_t v20 = v9;
  }

  else
  {
    uint64_t v20 = 0LL;
    uint64_t v19 = 0LL;
    v12[13] = 0LL;
    v12[14] = 0LL;
  }

  OUTLINED_FUNCTION_153_5(v19, v20);
  uint64_t v21 = OUTLINED_FUNCTION_273((uint64_t)"restrictedContacts");
  if (v11)
  {
    uint64_t v21 = type metadata accessor for PhonePersonList();
  }

  else
  {
    v12[19] = 0LL;
    v12[20] = 0LL;
  }

  v12[18] = v11;
  v12[21] = v21;
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_95_1();
  uint64_t v23 = swift_task_alloc(v22);
  OUTLINED_FUNCTION_68_2(v23);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds();
  *uint64_t v13 = v10;
  v13[1] = StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_19_30( v24,  v25,  (uint64_t)v12,  (uint64_t)&type metadata for StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds,  v26,  a9);
}

uint64_t StartCallCATsSimple.intentConfirmationWithRestrictedContactsAsLabels(intent:allowedContacts:restrictedContacts:)()
{
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds,  &type metadata for StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds and conformance StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v7 + 56) = OUTLINED_FUNCTION_12_0(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  uint64_t v4 = v1[2];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 368LL);
  v1[8] = v6;
  *(_OWORD *)(v6 + 16) = xmmword_32A100;
  uint64_t v7 = OUTLINED_FUNCTION_43_11(v6, 0x746E65746E69LL);
  if (v4)
  {
    uint64_t v7 = type metadata accessor for PhoneStartCallIntent(v7);
  }

  else
  {
    *(void *)(v6 + 56) = 0LL;
    *(void *)(v6 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_178_1(v7);
  uint64_t v8 = OUTLINED_FUNCTION_276((uint64_t)"redactedContacts");
  if (v0)
  {
    uint64_t v8 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v6 + 104) = 0LL;
    *(void *)(v6 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  uint64_t v9 = OUTLINED_FUNCTION_112_6(v8);
  if (v4)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v6 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v6 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_101_6(v9);
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v10);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_131_5(v11);
  if (v12)
  {
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    uint64_t v13 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v13, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v6 + 216) = v2;
    uint64_t v14 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_149((uint64_t)v14);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_91_9();
  OUTLINED_FUNCTION_120_5();
  OUTLINED_FUNCTION_227(v15);
  uint64_t v16 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v1[9] = v16;
  *uint64_t v16 = v1;
  v16[1] = StartCallCATsSimple.intentHandledResponse(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  uint64_t v17 = OUTLINED_FUNCTION_21_19(v3 + 15);
  return OUTLINED_FUNCTION_191_0(v17, v18, v6, v20);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_107_7();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional __swiftcall StartCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD88C + 4 * byte_32D5C3[a1]))( 0x6C61436F69647561LL,  0xE90000000000006CLL);
}

void sub_1AD88C()
{
}

uint64_t sub_1AD90C()
{
  return OUTLINED_FUNCTION_125_8(0x6567u);
}

uint64_t sub_1AD918()
{
  return OUTLINED_FUNCTION_171_4(0x7267u);
}

uint64_t sub_1AD930()
{
  return 0x7261506472696874LL;
}

uint64_t sub_1AD954()
{
  return 0x6C61436F65646976LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentHandledResponseDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentHandledResponseDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentHandledResponseDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentHandledResponseDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.intentHandledResponseAsLabels(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v7 + 56) = OUTLINED_FUNCTION_12_0(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.intentHandledResponseAsLabels(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:)()
{
  uint64_t v3 = v1[2];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 368LL);
  v1[8] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_32A100;
  uint64_t v6 = OUTLINED_FUNCTION_43_11(v5, 0x746E65746E69LL);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }

  else
  {
    *(void *)(v5 + 56) = 0LL;
    *(void *)(v5 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_178_1(v6);
  uint64_t v7 = OUTLINED_FUNCTION_276((uint64_t)"redactedContacts");
  if (v0)
  {
    uint64_t v7 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v5 + 104) = 0LL;
    *(void *)(v5 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  uint64_t v8 = OUTLINED_FUNCTION_112_6(v7);
  if (v3)
  {
    uint64_t v8 = type metadata accessor for SirikitDeviceState(v8);
  }

  else
  {
    *(void *)(v5 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v5 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_101_6(v8);
  OUTLINED_FUNCTION_176_1(&demangling cache variable for type metadata for SpeakableString?, v9);
  uint64_t v10 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_131_5(v10);
  if (v11)
  {
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    uint64_t v12 = OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_41_1(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v5 + 216) = v2;
    uint64_t v13 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_149((uint64_t)v13);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_25_1();
  }

  OUTLINED_FUNCTION_91_9();
  OUTLINED_FUNCTION_120_5();
  OUTLINED_FUNCTION_227(v14);
  char v15 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  v1[9] = v15;
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds();
  *char v15 = v1;
  v15[1] = StartCallCATsSimple.intentHandledResponseAsLabels(intent:redactedContacts:device:appName:isFirstPartyApp:isWalkieTalkie:shouldPrintDialogOnDisplayMode:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_133_6( v16,  v17,  v5,  (uint64_t)&type metadata for StartCallCATsSimple.IntentHandledResponseDialogIds,  v18,  v20);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_107_7();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    uint64_t v5 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for StartCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentHandledResponseDialogIds,  &type metadata for StartCallCATsSimple.IntentHandledResponseDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseDialogIds and conformance StartCallCATsSimple.IntentHandledResponseDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)( uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(_BYTE *)(v6 + 66) = a4;
  *(_BYTE *)(v6 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a3;
  *(_BYTE *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergency(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)()
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 272LL);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_25_11(v6);
  OUTLINED_FUNCTION_136_0(v7, (__n128)xmmword_323F80);
  if (v4)
  {
    uint64_t v8 = OUTLINED_FUNCTION_142_0();
    uint64_t v9 = v4;
  }

  else
  {
    uint64_t v8 = OUTLINED_FUNCTION_32_23();
  }

  OUTLINED_FUNCTION_117_7(v8, v9);
  v2[11] = 0x800000000034BC20LL;
  OUTLINED_FUNCTION_130_0((uint64_t)&type metadata for Bool);
  uint64_t v11 = OUTLINED_FUNCTION_146_2(v10);
  if (v0)
  {
    uint64_t v11 = type metadata accessor for SirikitDeviceState(v11);
  }

  else
  {
    v2[31] = 0LL;
    v2[32] = 0LL;
  }

  v2[30] = v0;
  v2[33] = v11;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v12;
  *uint64_t v12 = v1;
  v12[1] = StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:);
  uint64_t v13 = OUTLINED_FUNCTION_40(v3 + 22);
  return OUTLINED_FUNCTION_25_5(v13, v14, v15, v16);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseEmergencyDialogIds_optional __swiftcall StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    OUTLINED_FUNCTION_38_2();
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseEmergencyDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::IntentHandledResponseEmergencyDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.rawValue.getter(v1);
  void *v0 = v2;
  v0[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergencyAsLabels(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)( uint64_t a1, char a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(_BYTE *)(v6 + 66) = a4;
  *(_BYTE *)(v6 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a3;
  *(_BYTE *)(v6 + 64) = a2;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.intentHandledResponseEmergencyAsLabels(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:));
}

uint64_t StartCallCATsSimple.intentHandledResponseEmergencyAsLabels(intent:noCountdownPresented:isMyriadCall:isRepromptAutoCall:device:)()
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 272LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_323F80);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = (uint64_t)v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  OUTLINED_FUNCTION_117_7(v7, v8);
  v2[11] = 0x800000000034BC20LL;
  OUTLINED_FUNCTION_130_0((uint64_t)&type metadata for Bool);
  uint64_t v10 = OUTLINED_FUNCTION_146_2(v9);
  if (v0)
  {
    uint64_t v10 = type metadata accessor for SirikitDeviceState(v10);
  }

  else
  {
    v2[31] = 0LL;
    v2[32] = 0LL;
  }

  v2[30] = v0;
  v2[33] = v10;
  OUTLINED_FUNCTION_6_55();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_35_4(v11);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds();
  *uint64_t v3 = v1;
  v3[1] = StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_6();
  return OUTLINED_FUNCTION_8_13(v12, v13, v14, v15, v16, v17);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds,  &type metadata for StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds,  &type metadata for StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds and conformance StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.intentHandledResponseWithFaceTimeLink()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(47LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds.rawValue.getter()
{
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds( void *a1@<X8>)
{
}

uint64_t StartCallCATsSimple.intentHandledResponseWithFaceTimeLinkAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(47LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds,  &type metadata for StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds,  &type metadata for StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds and conformance StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.internalConversionError(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.internalConversionError(device:));
}

uint64_t StartCallCATsSimple.internalConversionError(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(33LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

void StartCallCATsSimple.InternalConversionErrorDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.InternalConversionErrorDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.InternalConversionErrorDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.internalConversionErrorAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.internalConversionErrorAsLabels(device:));
}

uint64_t StartCallCATsSimple.internalConversionErrorAsLabels(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(33LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.InternalConversionErrorDialogIds,  &type metadata for StartCallCATsSimple.InternalConversionErrorDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.InternalConversionErrorDialogIds,  &type metadata for StartCallCATsSimple.InternalConversionErrorDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.InternalConversionErrorDialogIds and conformance StartCallCATsSimple.InternalConversionErrorDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.joinFaceTimeMessage()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(29LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.JoinFaceTimeMessageDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.JoinFaceTimeMessageDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.joinFaceTimeMessageAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(29LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.JoinFaceTimeMessageDialogIds,  &type metadata for StartCallCATsSimple.JoinFaceTimeMessageDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.JoinFaceTimeMessageDialogIds,  &type metadata for StartCallCATsSimple.JoinFaceTimeMessageDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.JoinFaceTimeMessageDialogIds and conformance StartCallCATsSimple.JoinFaceTimeMessageDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.promptForCallCapability()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(33LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.PromptForCallCapabilityDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForCallCapabilityDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.promptForCallCapabilityAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(33LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.PromptForCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.PromptForCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForCallCapabilityDialogIds and conformance StartCallCATsSimple.PromptForCallCapabilityDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)( uint64_t a1, char a2, uint64_t a3, char a4, char a5, char a6)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v6 + 40) = OUTLINED_FUNCTION_12_0(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v12 = OUTLINED_FUNCTION_8_2(v11, 272LL);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_77_1(v12);
  uint64_t v14 = OUTLINED_FUNCTION_7_9(v13, (__n128)xmmword_323F80);
  OUTLINED_FUNCTION_27_6((uint64_t)v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  uint64_t v17 = OUTLINED_FUNCTION_45_0(v16);
  if (v18)
  {
    OUTLINED_FUNCTION_41_1(v17, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v19);
  }

  OUTLINED_FUNCTION_114_3();
  OUTLINED_FUNCTION_143_2((uint64_t)&type metadata for Bool);
  if ((v20 & 1) != 0)
  {
    v10[19] = 0LL;
    v10[20] = 0LL;
  }

  OUTLINED_FUNCTION_86_9();
  v10[27] = v21;
  v10[28] = 0xD000000000000015LL;
  OUTLINED_FUNCTION_228(v21);
  uint64_t v22 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v9 + 56) = v22;
  OUTLINED_FUNCTION_53_7(v22, (uint64_t)StartCallCATs.hangUpTip(device:hintIdentifier:));
  return OUTLINED_FUNCTION_12_28(0xD00000000000001BLL, 0x80000000003425F0LL, (uint64_t)v10, a9);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsDialogIds_optional __swiftcall StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:);
  StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.PromptForContactsDialogIds()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.PromptForContactsDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForContactsDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.promptForContactsAsLabels(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)( uint64_t a1, char a2, uint64_t a3, char a4, char a5, char a6)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v6 + 40) = OUTLINED_FUNCTION_12_0(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.promptForContactsAsLabels(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v11 = OUTLINED_FUNCTION_8_2(v10, 272LL);
  uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_77_1(v11);
  uint64_t v13 = OUTLINED_FUNCTION_7_9(v12, (__n128)xmmword_323F80);
  OUTLINED_FUNCTION_27_6((uint64_t)v13, v14, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v15 = OUTLINED_FUNCTION_26_0();
  uint64_t v16 = OUTLINED_FUNCTION_45_0(v15);
  if (v17)
  {
    OUTLINED_FUNCTION_41_1(v16, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v18 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v18);
  }

  OUTLINED_FUNCTION_114_3();
  OUTLINED_FUNCTION_143_2((uint64_t)&type metadata for Bool);
  if ((v19 & 1) != 0)
  {
    v9[19] = 0LL;
    v9[20] = 0LL;
  }

  OUTLINED_FUNCTION_86_9();
  v9[27] = v20;
  v9[28] = 0xD000000000000015LL;
  OUTLINED_FUNCTION_228(v20);
  uint64_t v21 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_68_2(v21);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.hangUpTip(device:hintIdentifier:));
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_7_59( v22,  v23,  (uint64_t)v9,  (uint64_t)&type metadata for StartCallCATsSimple.PromptForContactsDialogIds,  v24,  a9);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForContactsDialogIds,  &type metadata for StartCallCATsSimple.PromptForContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForContactsDialogIds,  &type metadata for StartCallCATsSimple.PromptForContactsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsDialogIds and conformance StartCallCATsSimple.PromptForContactsDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabel(requestedHandleLabelEnum:requestedHandle:)()
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_77_1(v5);
  uint64_t v7 = OUTLINED_FUNCTION_24_6(v6, (__n128)xmmword_31D880);
  uint64_t v8 = OUTLINED_FUNCTION_32_3((uint64_t)v7, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_27_6(v8, v9, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = OUTLINED_FUNCTION_26_0();
  uint64_t v11 = OUTLINED_FUNCTION_45_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_41_1(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v13 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v13);
  }

  uint64_t v14 = OUTLINED_FUNCTION_103_6();
  if (v0)
  {
    uint64_t v14 = type metadata accessor for DialogPersonHandle(v14);
  }

  else
  {
    v2[13] = 0LL;
    v2[14] = 0LL;
  }

  v2[12] = v0;
  v2[15] = v14;
  OUTLINED_FUNCTION_2_3();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v1 + 56) = v15;
  OUTLINED_FUNCTION_53_7( v15,  (uint64_t)StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:));
  uint64_t v16 = OUTLINED_FUNCTION_40(v3 + 13);
  return OUTLINED_FUNCTION_25_5(v16, v17, v18, v19);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsKnownLabelDialogIds_optional __swiftcall StartCallCATsSimple.PromptForContactsKnownLabelDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForContactsKnownLabelDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsKnownLabelDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::PromptForContactsKnownLabelDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.PromptForContactsKnownLabelDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabelAsLabels(requestedHandleLabelEnum:requestedHandle:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.promptForContactsKnownLabelAsLabels(requestedHandleLabelEnum:requestedHandle:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 128LL);
  uint64_t v4 = (__n128 *)OUTLINED_FUNCTION_77_1(v3);
  uint64_t v5 = OUTLINED_FUNCTION_24_6(v4, (__n128)xmmword_31D880);
  uint64_t v6 = OUTLINED_FUNCTION_32_3((uint64_t)v5, (uint64_t)"requestedHandleLabelEnum");
  OUTLINED_FUNCTION_27_6(v6, v7, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t v9 = OUTLINED_FUNCTION_45_0(v8);
  if (v10)
  {
    OUTLINED_FUNCTION_41_1(v9, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v11);
  }

  uint64_t v12 = OUTLINED_FUNCTION_103_6();
  if (v0)
  {
    uint64_t v12 = type metadata accessor for DialogPersonHandle(v12);
  }

  else
  {
    v1[13] = 0LL;
    v1[14] = 0LL;
  }

  v1[12] = v0;
  v1[15] = v12;
  OUTLINED_FUNCTION_2_3();
  uint64_t v13 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_68_2(v13);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.hangUpTip(device:hintIdentifier:));
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_6();
  return OUTLINED_FUNCTION_8_13(v14, v15, v16, v17, v18, v19);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForContactsKnownLabelDialogIds,  &type metadata for StartCallCATsSimple.PromptForContactsKnownLabelDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForContactsKnownLabelDialogIds,  &type metadata for StartCallCATsSimple.PromptForContactsKnownLabelDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForContactsKnownLabelDialogIds and conformance StartCallCATsSimple.PromptForContactsKnownLabelDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.promptForDestinationType()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.PromptForDestinationTypeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForDestinationTypeDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.promptForDestinationTypeAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(34LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.PromptForDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.PromptForDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForDestinationTypeDialogIds and conformance StartCallCATsSimple.PromptForDestinationTypeDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.promptForPreferredCallProvider()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(40LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.PromptForPreferredCallProviderDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.PromptForPreferredCallProviderDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.promptForPreferredCallProviderAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(40LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForPreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.PromptForPreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.PromptForPreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.PromptForPreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.PromptForPreferredCallProviderDialogIds and conformance StartCallCATsSimple.PromptForPreferredCallProviderDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.relationship(relationship:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.relationship(relationship:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_153(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  char v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  unint64_t v11 = OUTLINED_FUNCTION_46_8(22LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional __swiftcall StartCallCATsSimple.RelationshipDialogIds.init(rawValue:)( Swift::String rawValue)
{
  return result;
}

uint64_t StartCallCATsSimple.RelationshipDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AEEFC + 4 * word_32D5D0[a1]))( 0x31676F6C616964LL,  0xE700000000000000LL);
}

uint64_t sub_1AEEFC()
{
  return 0x2331686374697773LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.RelationshipDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.RelationshipDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.RelationshipDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.RelationshipDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.RelationshipDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::RelationshipDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.RelationshipDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.RelationshipDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.RelationshipDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.relationshipAsLabels(relationship:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.relationshipAsLabels(relationship:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_153(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(22LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.RelationshipDialogIds,  &type metadata for StartCallCATsSimple.RelationshipDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.RelationshipDialogIds,  &type metadata for StartCallCATsSimple.RelationshipDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.RelationshipDialogIds and conformance StartCallCATsSimple.RelationshipDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapability()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(35LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedCallCapabilityDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds( void *a1@<X8>)
{
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(35LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityCameraNotAccessible(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityCameraNotAccessible(appName:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmApp(appName:isPhoneApp:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(54LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

void StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityCameraNotAccessibleAsLabels(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityCameraNotAccessibleAsLabels(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(54LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityMicrophoneNotAccessible(appName:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_25_11(v2);
  uint64_t v4 = OUTLINED_FUNCTION_7_9(v3, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v4, v5, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_3_22(v6);
  if (v8)
  {
    OUTLINED_FUNCTION_41_1(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v9);
  }

  unint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_30(v10, (uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(58LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

void StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityMicrophoneNotAccessibleAsLabels(appName:)(uint64_t a1)
{
  void v2[2] = a1;
  void v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityMicrophoneNotAccessibleAsLabels(appName:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v1 = OUTLINED_FUNCTION_15_3(v0);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_25_11(v1);
  uint64_t v3 = OUTLINED_FUNCTION_7_9(v2, (__n128)xmmword_31D870);
  OUTLINED_FUNCTION_27_6((uint64_t)v3, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  uint64_t v6 = OUTLINED_FUNCTION_3_22(v5);
  if (v7)
  {
    OUTLINED_FUNCTION_41_1(v6, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    char v8 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v8);
  }

  uint64_t v9 = OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_35_4(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.confirmCallCapability(callCapability:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v10 = OUTLINED_FUNCTION_38_20(58LL);
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityVideoCallUnsupported()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(55LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedCallCapabilityVideoCallUnsupportedAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(55LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsForeignEmergencyDisambiguation()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(59LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedContactsForeignEmergencyDisambiguationAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(59LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds and conformance StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandle(contacts:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedContactsInvalidHandle(contacts:));
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandle(contacts:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x73746361746E6F63LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  unint64_t v8 = OUTLINED_FUNCTION_102(42LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsInvalidHandleDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

unint64_t StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000014LL;
  }
  else {
    return 0xD000000000000017LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds( char *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsInvalidHandleDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsInvalidHandleDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  unint64_t *v0 = StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandleAsLabels(contacts:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedContactsInvalidHandleAsLabels(contacts:));
}

uint64_t StartCallCATsSimple.unsupportedContactsInvalidHandleAsLabels(contacts:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = OUTLINED_FUNCTION_27(v4);
  *(_OWORD *)(v5 + 16) = xmmword_31D870;
  uint64_t v6 = OUTLINED_FUNCTION_24_25(v5, 0x73746361746E6F63LL);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for PhonePersonList();
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(42LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds and conformance StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsMultipleContactsUnsupported()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(56LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedContactsMultipleContactsUnsupportedAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(56LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoCallHistoryForRedial()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(51LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoCallHistoryForRedialAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(51LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFound(contact:appName:isFirstPartyApp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 176LL);
  uint64_t v16 = OUTLINED_FUNCTION_139_5(v15);
  *(_OWORD *)(v16 + 16) = xmmword_320080;
  uint64_t v17 = OUTLINED_FUNCTION_24_25(v16, 0x746361746E6F63LL);
  if (v13)
  {
    uint64_t v17 = type metadata accessor for DialogPerson(v17);
  }

  else
  {
    *(void *)(v12 + 56) = 0LL;
    *(void *)(v12 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_95_6(v17);
  OUTLINED_FUNCTION_29_16(v19, v18, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v20 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_47_14(v20);
  if (v21)
  {
    uint64_t v22 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v22, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v12 + 120) = v10;
    uint64_t v23 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v23);
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_110_7();
  *(void *)(v12 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v12 + 144) = v24;
  uint64_t v25 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v11 + 56) = v25;
  OUTLINED_FUNCTION_53_7( v25,  (uint64_t)StartCallCATs.promptForContacts(appName:isFaceTime:rePromptCount:startingOver:isUnsupportedFollowUp:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_25_5(0xD00000000000002BLL, v26, v12, a10);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoContactFoundDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.init(rawValue:);
  StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B0470 + 4 * byte_32D682[a1]))( 0x7261507473726946LL,  0xEF64656D614E7974LL);
}

void sub_1B0470()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoContactFoundDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoContactFoundDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundAsLabels(contact:appName:isFirstPartyApp:)( uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundAsLabels(contact:appName:isFirstPartyApp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 176LL);
  uint64_t v16 = OUTLINED_FUNCTION_139_5(v15);
  *(_OWORD *)(v16 + 16) = xmmword_320080;
  uint64_t v17 = OUTLINED_FUNCTION_24_25(v16, 0x746361746E6F63LL);
  if (v13)
  {
    uint64_t v17 = type metadata accessor for DialogPerson(v17);
  }

  else
  {
    *(void *)(v12 + 56) = 0LL;
    *(void *)(v12 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_95_6(v17);
  OUTLINED_FUNCTION_29_16(v19, v18, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v20 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_47_14(v20);
  if (v21)
  {
    uint64_t v22 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v22, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v12 + 120) = v10;
    uint64_t v23 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v23);
    OUTLINED_FUNCTION_95();
  }

  OUTLINED_FUNCTION_110_7();
  *(void *)(v12 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v12 + 144) = v24;
  uint64_t v25 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_68_2(v25);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.hangUpTip(device:hintIdentifier:));
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_8_13( 0xD00000000000002BLL,  v26,  v12,  (uint64_t)&type metadata for StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds,  v27,  a10);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundUserUnknown()()
{
  unsigned __int8 v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(54LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoContactFoundUserUnknownAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(54LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  void v6[4] = a3;
  void v6[5] = a4;
  _OWORD v6[2] = a1;
  void v6[3] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_18_0(v7);
  v6[9] = OUTLINED_FUNCTION_196_3(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  uint64_t v3 = v1[2];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 272LL);
  v1[10] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_323F80;
  uint64_t v6 = OUTLINED_FUNCTION_43_11(v5, 0x746E65746E69LL);
  if (v3)
  {
    uint64_t v6 = type metadata accessor for PhoneStartCallIntent(v6);
  }

  else
  {
    *(void *)(v5 + 56) = 0LL;
    *(void *)(v5 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_124_6(v6);
  *(void *)(v5 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x8000000000341AF0LL;
  OUTLINED_FUNCTION_29_16(v8, v7, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_138_4(v9);
  if (v10)
  {
    uint64_t v11 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v11, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v5 + 120) = v0;
    uint64_t v12 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v12);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v13 = v1[4];
  uint64_t v14 = OUTLINED_FUNCTION_270((uint64_t)"unsupportedPerson");
  if (v13)
  {
    uint64_t v14 = type metadata accessor for DialogPerson(v14);
  }

  else
  {
    *(void *)(v5 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v5 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_140_6(v14);
  *(void *)(v5 + 184) = 0x80000000003492D0LL;
  OUTLINED_FUNCTION_29_16(v16, v15, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_164_4();
  if (v10)
  {
    uint64_t v17 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v17, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v5 + 216) = v0;
    uint64_t v18 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v18);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v19 = v1[6];
  uint64_t v20 = OUTLINED_FUNCTION_277_0((uint64_t)"unsupportedHandle");
  if (v19)
  {
    uint64_t v20 = type metadata accessor for DialogPersonHandle(v20);
  }

  else
  {
    *(void *)(v5 + 24__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
    *(void *)(v5 + 256) = 0LL;
  }

  *(void *)(v5 + 240) = v19;
  *(void *)(v5 + 264) = v20;
  OUTLINED_FUNCTION_35_23();
  char v21 = (void *)OUTLINED_FUNCTION_46();
  v1[11] = v21;
  *char v21 = v1;
  v21[1] = StartCallCATsSimple.unsupportedContactsNoHandleForLabel(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  uint64_t v22 = OUTLINED_FUNCTION_205_2(v2 + 28);
  return OUTLINED_FUNCTION_18_39(v22, v23, v24, v25);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(void);
  OUTLINED_FUNCTION_108_3();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_192_3();
    OUTLINED_FUNCTION_23_3();
    swift_task_dealloc(v1);
    uint64_t v6 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v6, v7);
  }

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoHandleForLabelDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.init(rawValue:);
  StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B0AFC + 4 * byte_32D688[a1]))( 0x6464416C69616D45LL,  0xEC00000073736572LL);
}

uint64_t sub_1B0AFC()
{
  return 0x6E6F437974706D45LL;
}

uint64_t sub_1B0B1C()
{
  return OUTLINED_FUNCTION_125_8(0x6547u);
}

unint64_t sub_1B0B28()
{
  return OUTLINED_FUNCTION_17_8();
}

uint64_t sub_1B0B34()
{
  return 0x6D754E656E6F6850LL;
}

uint64_t sub_1B0B54()
{
  return 0x6F43656C676E6953LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds( char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
}

void protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds( uint64_t a1)
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoHandleForLabelDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedContactsNoHandleForLabelDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabelAsLabels(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  void v6[4] = a3;
  void v6[5] = a4;
  _OWORD v6[2] = a1;
  void v6[3] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_18_0(v7);
  v6[9] = OUTLINED_FUNCTION_196_3(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabelAsLabels(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v11 = v10[2];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_8_2(v12, 272LL);
  v10[10] = v13;
  *(_OWORD *)(v13 + 16) = xmmword_323F80;
  uint64_t v14 = OUTLINED_FUNCTION_43_11(v13, 0x746E65746E69LL);
  if (v11)
  {
    uint64_t v14 = type metadata accessor for PhoneStartCallIntent(v14);
  }

  else
  {
    *(void *)(v13 + 56) = 0LL;
    *(void *)(v13 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_124_6(v14);
  *(void *)(v13 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0x8000000000341AF0LL;
  OUTLINED_FUNCTION_29_16(v16, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_138_4(v17);
  if (v18)
  {
    uint64_t v19 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v19, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v13 + 120) = v9;
    uint64_t v20 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v20);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v21 = v10[4];
  uint64_t v22 = OUTLINED_FUNCTION_270((uint64_t)"unsupportedPerson");
  if (v21)
  {
    uint64_t v22 = type metadata accessor for DialogPerson(v22);
  }

  else
  {
    *(void *)(v13 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v13 + 160) = 0LL;
  }

  OUTLINED_FUNCTION_140_6(v22);
  *(void *)(v13 + 184) = 0x80000000003492D0LL;
  OUTLINED_FUNCTION_29_16(v24, v23, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_164_4();
  if (v18)
  {
    uint64_t v25 = OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_41_1(v25, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_66_4();
  }

  else
  {
    *(void *)(v13 + 216) = v9;
    uint64_t v26 = OUTLINED_FUNCTION_56_6();
    OUTLINED_FUNCTION_26_17((uint64_t)v26);
    OUTLINED_FUNCTION_95();
  }

  uint64_t v27 = v10[6];
  uint64_t v28 = OUTLINED_FUNCTION_277_0((uint64_t)"unsupportedHandle");
  if (v27)
  {
    uint64_t v28 = type metadata accessor for DialogPersonHandle(v28);
  }

  else
  {
    *(void *)(v13 + 24__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
    *(void *)(v13 + 256) = 0LL;
  }

  *(void *)(v13 + 240) = v27;
  *(void *)(v13 + 264) = v28;
  OUTLINED_FUNCTION_35_23();
  uint64_t v29 = (void *)OUTLINED_FUNCTION_46();
  v10[11] = v29;
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds();
  *uint64_t v29 = v10;
  v29[1] = StartCallCATsSimple.unsupportedContactsNoHandleForLabelAsLabels(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_19_30( v30,  v31,  v13,  (uint64_t)&type metadata for StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds,  v32,  a9);
}

uint64_t StartCallCATsSimple.unsupportedContactsNoHandleForLabelAsLabels(intent:preferredCallProvider:unsupportedPerson:unsupportedPersonHandleLabel:unsupportedHandle:)()
{
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_192_3();
    OUTLINED_FUNCTION_23_3();
    swift_task_dealloc(v1);
    uint64_t v6 = OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_8_3(v6, v7);
  }

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoUsableHandleForRedial()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(52LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedContactsNoUsableHandleForRedialAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(52LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds and conformance StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedContactsUnsupportedMmiUssd()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(47LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedContactsUnsupportedMmiUssdAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(47LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds and conformance StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedDestinationType()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(36LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedDestinationTypeDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedDestinationTypeDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedDestinationTypeAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(36LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedDestinationTypeDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedDestinationTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDestinationTypeDialogIds and conformance StartCallCATsSimple.UnsupportedDestinationTypeDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLink(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedDeviceFaceTimeLink(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLink(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(39LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceFaceTimeLinkDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceFaceTimeLinkDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceFaceTimeLinkDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLinkAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedDeviceFaceTimeLinkAsLabels(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceFaceTimeLinkAsLabels(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(39LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTime(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedDeviceGroupFaceTime(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTime(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v7;
  OUTLINED_FUNCTION_30(v7, (uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v8 = OUTLINED_FUNCTION_102(40LL);
  return OUTLINED_FUNCTION_12_28(v8, v9, v10, v11);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceGroupFaceTimeDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceGroupFaceTimeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedDeviceGroupFaceTimeDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTimeAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedDeviceGroupFaceTimeAsLabels(device:));
}

uint64_t StartCallCATsSimple.unsupportedDeviceGroupFaceTimeAsLabels(device:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D870);
  if (v2)
  {
    uint64_t v6 = type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    *(void *)(v1 + 56) = 0LL;
    *(void *)(v1 + 64) = 0LL;
  }

  OUTLINED_FUNCTION_36_18(v6);
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v7);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v8 = OUTLINED_FUNCTION_55_11(40LL);
  return OUTLINED_FUNCTION_7_59(v8, v9, v10, v11, v12, v13);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds and conformance StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProvider(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProvider(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProvider(intent:device:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  unint64_t v11 = OUTLINED_FUNCTION_46_8(42LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v1, v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B1718 + 4 * byte_32D68E[a1]))( 0x656D695465636146LL,  0xE800000000000000LL);
}

  ;
}

uint64_t sub_1B172C()
{
  return OUTLINED_FUNCTION_171_4(0x7247u);
}

uint64_t sub_1B1744()
{
  return 0x6C616D726F4ELL;
}

unint64_t sub_1B1758()
{
  return 0xD000000000000010LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
}

void protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAsLabels(intent:device:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderAsLabels(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAsLabels(intent:device:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.intentConfirmationEmergency(intent:device:shouldPlayTTSCountdown:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v11 = OUTLINED_FUNCTION_38_20(42LL);
  return OUTLINED_FUNCTION_7_59(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequired(intent:device:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(62LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.rawValue.getter( char a1)
{
  if (a1) {
    return 0x6423317473726966LL;
  }
  else {
    return 0x31676F6C616964LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequiredAsLabels(intent:device:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequiredAsLabels(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderAccountSetupRequiredAsLabels(intent:device:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v11 = OUTLINED_FUNCTION_38_20(62LL);
  return OUTLINED_FUNCTION_7_59(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessible()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(76LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(76LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderProviderDisabledInSettings()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(68LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds.init(rawValue:)( Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderProviderDisabledInSettingsAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds();
  void *v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(68LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestricted(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestricted(intent:device:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_65_10();
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_46_8(60LL);
  return OUTLINED_FUNCTION_12_28(v11, v12, v13, v14);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderSettingsRestrictedDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.init(rawValue:);
  PhoneCallDisplayTextCATsSimple.ContactCompositionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

uint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.rawValue.getter( char a1)
{
  if (!a1) {
    return 0x6544687469575446LL;
  }
  if (a1 == 1) {
    return 0x756F687469575446LL;
  }
  return 0x636972656E6547LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds( unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderSettingsRestrictedDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderSettingsRestrictedDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
  char v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestrictedAsLabels(intent:device:)( uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestrictedAsLabels(intent:device:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderSettingsRestrictedAsLabels(intent:device:)()
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 128LL);
  uint64_t v6 = (__n128 *)OUTLINED_FUNCTION_25_11(v5);
  OUTLINED_FUNCTION_136_0(v6, (__n128)xmmword_31D880);
  if (v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_142_0();
    uint64_t v8 = v3;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_32_23();
  }

  uint64_t v9 = OUTLINED_FUNCTION_28_29(v7, v8);
  if (v0)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(v9);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  OUTLINED_FUNCTION_150_2(v9);
  OUTLINED_FUNCTION_35_23();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = OUTLINED_FUNCTION_65_10();
  OUTLINED_FUNCTION_35_4(v10);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds();
  OUTLINED_FUNCTION_113((uint64_t)StartCallCATs.disambiguateContactsForeignEmergency(device:nonLocalEmergencyContact:));
  OUTLINED_FUNCTION_38_2();
  unint64_t v11 = OUTLINED_FUNCTION_38_20(60LL);
  return OUTLINED_FUNCTION_7_59(v11, v12, v13, v14, v15, v16);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds);
  }

  return result;
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupported(device:isFaceTimeOnlyDevice:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    v1[7] = 0LL;
    v1[8] = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 56);
  v1[6] = v2;
  v1[11] = 0x800000000034BC80LL;
  OUTLINED_FUNCTION_268_0(v7);
  v1[9] = v8;
  v1[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v0 + 40) = v9;
  OUTLINED_FUNCTION_30(v9, (uint64_t)StartCallCATs.disambiguateAppsVoiceMode(appNames:));
  uint64_t v10 = OUTLINED_FUNCTION_40_16(0xD00000000000003ELL);
  return OUTLINED_FUNCTION_12_28(v10, v11, v12, v13);
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds_optional __swiftcall StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.init(rawValue:);
  StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void StartCallCATsSimple.PromptForContactsDialogIds.init(rawValue:)( Swift::String a1, Swift::OpaquePointer a2)
{
}

uint64_t StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.rawValue.getter( unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B2280 + 4 * byte_32D693[a1]))( 0xD00000000000001CLL,  0x8000000000345940LL);
}

unint64_t sub_1B2280()
{
  return OUTLINED_FUNCTION_13_9(18LL);
}

uint64_t sub_1B2298()
{
  return OUTLINED_FUNCTION_125_8(0x6547u);
}

uint64_t sub_1B22A4()
{
  return 6512973LL;
}

uint64_t sub_1B22B4()
{
  return 0x6863746157LL;
}

uint64_t sub_1B22C8()
{
  return 0x6976654468746957LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds( char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
}

void protocol witness for Hashable.hash(into:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::StartCallCATsSimple::UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds_optional *a2@<X8>)
{
  result.value = StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  uint64_t *v0 = StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupportedAsLabels(device:isFaceTimeOnlyDevice:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_33_0((uint64_t)StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupportedAsLabels(device:isFaceTimeOnlyDevice:));
}

uint64_t StartCallCATsSimple.unsupportedPreferredCallProviderTelephonyUnsupportedAsLabels(device:isFaceTimeOnlyDevice:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  uint64_t v5 = (__n128 *)OUTLINED_FUNCTION_27(v4);
  uint64_t v6 = OUTLINED_FUNCTION_35_0(v5, (__n128)xmmword_31D880);
  if (v2)
  {
    type metadata accessor for SirikitDeviceState(v6);
  }

  else
  {
    v1[7] = 0LL;
    v1[8] = 0LL;
  }

  char v7 = *(_BYTE *)(v0 + 56);
  v1[6] = v2;
  v1[11] = 0x800000000034BC80LL;
  OUTLINED_FUNCTION_268_0(v7);
  v1[9] = v8;
  v1[10] = 0xD000000000000014LL;
  OUTLINED_FUNCTION_3_8();
  uint64_t v9 = OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_52_13(v9);
  lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds();
  OUTLINED_FUNCTION_34_4((uint64_t)StartCallCATs.disambiguateContactsLocalEmergency(localEmergencyServices:));
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_155_3();
  return OUTLINED_FUNCTION_7_59(v10, v11, v12, v13, v14, v15);
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds,  &type metadata for StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds and conformance StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StartCallCATsSimple.Properties,  &type metadata for StartCallCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type StartCallCATsSimple.Properties and conformance StartCallCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata completion function for StartCallCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for StartCallCATsSimple);
}

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 67 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 67) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xBD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xBC) {
    return ((uint64_t (*)(void))((char *)&loc_1B3658 + 4 * byte_32D69E[v4]))();
  }
  *a1 = a2 + 67;
  return ((uint64_t (*)(void))((char *)sub_1B368C + 4 * byte_32D699[v4]))();
}

uint64_t sub_1B368C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3694(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B369CLL);
  }
  return result;
}

uint64_t sub_1B36A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B36B0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 67;
  return result;
}

uint64_t sub_1B36B4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B36BC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StartCallCATsSimple.Properties()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmAppDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmCallCapabilityDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.ConfirmContactsDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF5) {
    return ((uint64_t (*)(void))((char *)&loc_1B373C + 4 * byte_32D6A8[v4]))();
  }
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1B3770 + 4 * byte_32D6A3[v4]))();
}

uint64_t sub_1B3770(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3778(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B3780LL);
  }
  return result;
}

uint64_t sub_1B378C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B3794LL);
  }
  *(_BYTE *)unint64_t result = a2 + 10;
  return result;
}

uint64_t sub_1B3798(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B37A0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StartCallCATsSimple.ConfirmContactsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ConfirmPreferredCallProviderDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateAppsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsForeignEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsLocalEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsPartialListDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateContactsVoxNoListDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguateDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.DisambiguatePreferredCallProviderDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.EmergencyCountdownDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeAppConfigurationRequiredDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds()
{
}

uint64_t getEnumTagSinglePayload for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_256_0(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 4);
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 4);
    }

    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 4);
    }
  }

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.ErrorWithCodeCallInProgressDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1B3970 + 4 * byte_32D6B2[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_254_2 + 4 * byte_32D6AD[v4]))();
}

uint64_t sub_1B39A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B39B0LL);
  }
  return result;
}

_BYTE *sub_1B39B8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B39C0LL);
  }
  return OUTLINED_FUNCTION_253((_BYTE *)a1, a2 + 3);
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeCallRingingDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeCallingServiceNotAvailableDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeContactNotSupportedByAppDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeDownTimeRestrictionEnabledDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeNoValidNumberDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeScreenTimeRestrictionEnabledDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.ErrorWithCodeUnableToHandOffDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.FinalLowConfidenceResponseDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.GenericErrorDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.HangUpTipDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationEmergencyVoiceOnlyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.IntentHandledResponseDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF4) {
    return ((uint64_t (*)(void))((char *)&loc_1B3AC4 + 4 * byte_32D6BC[v4]))();
  }
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1B3AF8 + 4 * byte_32D6B7[v4]))();
}

uint64_t sub_1B3AF8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3B00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B3B08LL);
  }
  return result;
}

uint64_t sub_1B3B14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B3B1CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 11;
  return result;
}

uint64_t sub_1B3B20(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3B28(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StartCallCATsSimple.IntentHandledResponseDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.IntentHandledResponseWithFaceTimeLinkDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.InternalConversionErrorDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.JoinFaceTimeMessageDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForCallCapabilityDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForContactsDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForContactsKnownLabelDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.PromptForPreferredCallProviderDialogIds()
{
}

uint64_t getEnumTagSinglePayload for StartCallCATsSimple.RelationshipDialogIds( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xA8)
  {
    if (a2 + 88 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 88) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 89;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.RelationshipDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 88 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 88) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xA8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xA7) {
    return ((uint64_t (*)(void))((char *)&loc_1B3C88 + 4 * byte_32D6C6[v4]))();
  }
  *a1 = a2 + 88;
  return ((uint64_t (*)(void))((char *)sub_1B3CBC + 4 * byte_32D6C1[v4]))();
}

uint64_t sub_1B3CBC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3CC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B3CCCLL);
  }
  return result;
}

uint64_t sub_1B3CD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B3CE0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 88;
  return result;
}

uint64_t sub_1B3CE4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3CEC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StartCallCATsSimple.RelationshipDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityCameraNotAccessibleDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityMicrophoneNotAccessibleDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedCallCapabilityVideoCallUnsupportedDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsForeignEmergencyDisambiguationDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsMultipleContactsUnsupportedDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoCallHistoryForRedialDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoContactFoundUserUnknownDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsNoUsableHandleForRedialDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedContactsUnsupportedMmiUssdDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedDestinationTypeDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedDeviceFaceTimeLinkDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.ConfirmAppDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1B3E04 + 4 * byte_32D6D0[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_254_3 + 4 * byte_32D6CB[v4]))();
}

uint64_t sub_1B3E3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B3E44LL);
  }
  return result;
}

_BYTE *sub_1B3E4C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B3E54LL);
  }
  return OUTLINED_FUNCTION_253((_BYTE *)a1, a2 + 1);
}

void type metadata accessor for StartCallCATsSimple.UnsupportedDeviceGroupFaceTimeDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_1B3EBC + 4 * byte_32D6DA[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B3EF0 + 4 * byte_32D6D5[v4]))();
}

uint64_t sub_1B3EF0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3EF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B3F00LL);
  }
  return result;
}

uint64_t sub_1B3F0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B3F14LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_1B3F18(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B3F20(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderAccountSetupRequiredDialogIds()
{
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderEmergencyCallProviderNotAccessibleDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.DisambiguateCallCapabilityDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1B3F90 + 4 * byte_32D6DF[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_1B3FB0 + 4 * byte_32D6E4[v4]))();
  }
}

_BYTE *sub_1B3F90(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_1B3FB0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1B3FB8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_1B3FC0(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_1B3FC8(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1B3FD0(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderProviderDisabledInSettingsDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.DisambiguateContactsHandlesDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1B4034 + 4 * byte_32D6EE[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_254_4 + 4 * byte_32D6E9[v4]))();
}

uint64_t sub_1B406C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1B4074LL);
  }
  return result;
}

_BYTE *sub_1B407C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1B4084LL);
  }
  return OUTLINED_FUNCTION_253((_BYTE *)a1, a2 + 2);
}

void type metadata accessor for StartCallCATsSimple.UnsupportedPreferredCallProviderSettingsRestrictedDialogIds()
{
}

uint64_t getEnumTagSinglePayload for StartCallCATsSimple.PromptForContactsDialogIds( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_256_0(-1);
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 6);
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 6);
    }

    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_256_0((*a1 | (v4 << 8)) - 6);
    }
  }

uint64_t storeEnumTagSinglePayload for StartCallCATsSimple.PromptForContactsDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_1B4170 + 4 * byte_32D6F8[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_254_5 + 4 * byte_32D6F3[v4]))();
}